{"pr_number": 245, "pr_title": "FM2-223: Add create, update, and delete methods for ServiceRequest", "pr_createdAt": "2020-07-03T13:13:17Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245", "merge_commit": "0989d123c67747e75a90aad3ef1166ad0ec3f3d4", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r453646070", "body": "Typo in MissMatch", "bodyText": "Typo in MissMatch", "bodyHTML": "<p dir=\"auto\">Typo in MissMatch</p>", "author": "varung-31", "createdAt": "2020-07-13T13:24:17Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -68,4 +86,93 @@ public void getEncounterByWrongUuid_shouldReturn404() throws Exception {\n \t\t\n \t\tassertThat(response, isNotFound());\n \t}\n+\t\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH )) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldErrorForNoId() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {", "originalCommit": "dbd2dac0c08593af3a0a7bb3c7d6a3af31237c22", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 0520263e..b414a483 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -143,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "9907227a91a036191b19903469b7008980f2a23b", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..99f14b7b 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "4347f1766bc15bf6034aaac4a2d3746416870312", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 99f14b7b..b414a483 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "0989d123c67747e75a90aad3ef1166ad0ec3f3d4", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 0520263e..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -143,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "f3a5e8e9ca0ebc2a1e3dea2a4268f60ae0d12723", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 4c188615..ae867a9e 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -206,45 +202,45 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\t\tObjects.requireNonNull(is);\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n-\n+\t\t\n \t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n-\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n-\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\t\t\n \t\tassertThat(response, isBadRequest());\n-\t\tassertThat(response.getContentAsString(),\n-\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t\tassertThat(response.getContentAsString(), containsStringIgnoringCase(\"body must contain an ID element for update\"));\n \t}\n-\n+\t\n \t@Test\n \tpublic void updateServiceRequest_shouldRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n-\t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n+\t\t        .getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n \t\t\tObjects.requireNonNull(is);\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n-\n-\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n-\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n-\n+\t\t\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID)\n+\t\t        .jsonContent(jsonServiceRequest).accept(FhirMediaTypes.JSON).go();\n+\t\t\n \t\tassertThat(response, isBadRequest());\n \t\tassertThat(response.getContentAsString(),\n-\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t\t    containsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n \t}\n-\n+\t\n \t@Test\n \tpublic void deleteServiceRequest_shouldDeleteServiceRequest() throws Exception {\n \t\tOperationOutcome retVal = new OperationOutcome();\n \t\tretVal.setId(SERVICE_REQUEST_UUID);\n \t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n-\n+\t\t\n \t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n-\n+\t\t\n \t\twhen(service.delete(SERVICE_REQUEST_UUID)).thenReturn(serviceRequest);\n-\n-\t\tMockHttpServletResponse response = delete(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).accept(FhirMediaTypes.JSON).go();\n-\n+\t\t\n+\t\tMockHttpServletResponse response = delete(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).accept(FhirMediaTypes.JSON)\n+\t\t        .go();\n+\t\t\n \t\tassertThat(response, isOk());\n \t\tassertThat(response.getContentType(), equalTo(FhirMediaTypes.JSON.toString()));\n \t}\n", "next_change": {"commit": "1193da55bc39f558b6133df1cb24a5e409769150", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex ae867a9e..8cc8518d 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -244,4 +619,14 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\tassertThat(response, isOk());\n \t\tassertThat(response.getContentType(), equalTo(FhirMediaTypes.JSON.toString()));\n \t}\n+\t\n+\t@Test\n+\tpublic void deleteServiceRequestByWrongUuid_shouldReturn404() throws Exception {\n+\t\twhen(service.delete(WRONG_SERVICE_REQUEST_UUID)).thenReturn(null);\n+\t\t\n+\t\tMockHttpServletResponse response = delete(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\t\t\n+\t\tassertThat(response, isNotFound());\n+\t}\n }\n", "next_change": {"commit": "8b580c2c19a4c83f2cdde3b5a640e8e23cef26b2", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 8cc8518d..3c4ba958 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -518,115 +511,4 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n-\t\n-\t@Test\n-\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n-\t\tString jsonServiceRequest;\n-\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n-\t\t\tObjects.requireNonNull(is);\n-\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n-\t\t}\n-\t\t\n-\t\tServiceRequest serviceRequest = new ServiceRequest();\n-\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n-\t\t\n-\t\twhen(service.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n-\t\t\n-\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n-\t\t        .accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isCreated());\n-\t}\n-\t\n-\t@Test\n-\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n-\t\tString jsonServiceRequest;\n-\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH)) {\n-\t\t\tObjects.requireNonNull(is);\n-\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n-\t\t}\n-\t\t\n-\t\tServiceRequest serviceRequest = new ServiceRequest();\n-\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n-\t\t\n-\t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenReturn(serviceRequest);\n-\t\t\n-\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n-\t\t        .accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isOk());\n-\t}\n-\t\n-\t@Test\n-\tpublic void updateServiceRequest_shouldRaiseExceptionForNoId() throws Exception {\n-\t\tString jsonServiceRequest;\n-\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_NO_ID_PATH)) {\n-\t\t\tObjects.requireNonNull(is);\n-\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n-\t\t}\n-\t\t\n-\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n-\t\t        .accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isBadRequest());\n-\t\tassertThat(response.getContentAsString(), containsStringIgnoringCase(\"body must contain an ID element for update\"));\n-\t}\n-\t\n-\t@Test\n-\tpublic void updateServiceRequest_shouldRaiseExceptionForIdMismatch() throws Exception {\n-\t\tString jsonServiceRequest;\n-\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH)) {\n-\t\t\tObjects.requireNonNull(is);\n-\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n-\t\t}\n-\t\t\n-\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID)\n-\t\t        .jsonContent(jsonServiceRequest).accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isBadRequest());\n-\t\tassertThat(response.getContentAsString(),\n-\t\t    containsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n-\t}\n-\t\n-\t@Test\n-\tpublic void updateServiceRequest_shouldThrowErrorForNonExistentServiceRequest() throws Exception {\n-\t\tString jsonServiceRequest;\n-\t\ttry (InputStream is = this.getClass().getClassLoader()\n-\t\t        .getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n-\t\t\tObjects.requireNonNull(is);\n-\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n-\t\t}\n-\t\t\n-\t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenThrow(\n-\t\t    new MethodNotAllowedException(\"ServiceRequest \" + WRONG_SERVICE_REQUEST_UUID + \" does not exist\"));\n-\t\t\n-\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID)\n-\t\t        .jsonContent(jsonServiceRequest).accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isMethodNotAllowed());\n-\t}\n-\t\n-\t@Test\n-\tpublic void deleteServiceRequest_shouldDeleteServiceRequest() throws Exception {\n-\t\tServiceRequest serviceRequest = new ServiceRequest();\n-\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n-\t\t\n-\t\twhen(service.delete(SERVICE_REQUEST_UUID)).thenReturn(serviceRequest);\n-\t\t\n-\t\tMockHttpServletResponse response = delete(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).accept(FhirMediaTypes.JSON)\n-\t\t        .go();\n-\t\t\n-\t\tassertThat(response, isOk());\n-\t\tassertThat(response.getContentType(), equalTo(FhirMediaTypes.JSON.toString()));\n-\t}\n-\t\n-\t@Test\n-\tpublic void deleteServiceRequestByWrongUuid_shouldReturn404() throws Exception {\n-\t\twhen(service.delete(WRONG_SERVICE_REQUEST_UUID)).thenReturn(null);\n-\t\t\n-\t\tMockHttpServletResponse response = delete(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID)\n-\t\t        .accept(FhirMediaTypes.JSON).go();\n-\t\t\n-\t\tassertThat(response, isNotFound());\n-\t}\n }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "0989d123c67747e75a90aad3ef1166ad0ec3f3d4", "message": "Merge commit", "committedDate": null}, {"oid": "f3a5e8e9ca0ebc2a1e3dea2a4268f60ae0d12723", "committedDate": "2020-07-22 09:10:43 +0300", "message": "Fix formatting issues"}, {"oid": "1193da55bc39f558b6133df1cb24a5e409769150", "committedDate": "2020-07-30 14:31:00 +0000", "message": "FM2-238: Add search parameter for ServiceRequest (#266)"}, {"oid": "65e46c9b280904e21a62f49deb4d4862158c0ae8", "committedDate": "2020-08-17 10:38:15 +0300", "message": "Refactor: Maintain consistent file naming"}, {"oid": "8b580c2c19a4c83f2cdde3b5a640e8e23cef26b2", "committedDate": "2020-08-28 19:17:12 +0000", "message": "FM2-292: Add Integration Tests for ServiceRequest and ProcedureRequest (#296)"}, {"oid": "e6981d572c598355f56c230b59e7249bac292aac", "committedDate": "2020-10-06 14:41:58 -0400", "message": "FM2-266: Update ServiceRequest to support _include"}]}, {"oid": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "message": "FM2-223:adding more parameters", "committedDate": "2020-07-14T20:07:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNzgzNw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455027837", "body": "```suggestion\r\n\tpublic void updateServiceRequest_shouldRaiseExceptionForIdMisMatch() throws Exception {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n          \n          \n            \n            \tpublic void updateServiceRequest_shouldRaiseExceptionForIdMisMatch() throws Exception {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">updateServiceRequest_shouldrRaiseExceptionForIdMissMatch</span>() throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">updateServiceRequest_shouldRaiseExceptionForIdMisMatch</span>() throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:53:36Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH )) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldRaiseExceptionForNoId() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9907227a91a036191b19903469b7008980f2a23b", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..99f14b7b 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "4347f1766bc15bf6034aaac4a2d3746416870312", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex 99f14b7b..b414a483 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldErrorForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -216,7 +216,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t}\n \n \t@Test\n-\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n+\tpublic void updateServiceRequest_shouldRaiseExceptionForIdMissMatch() throws Exception {\n \t\tString jsonServiceRequest;\n \t\ttry (InputStream is = this.getClass().getClassLoader()\n \t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyODM1Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455028357", "body": "```suggestion\r\n\t\tServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());\n          \n          \n            \n            \t\tServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> serviceRequestService<span class=\"pl-k\">.</span>delete(id<span class=\"pl-k\">.</span>getIdPart());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-smi\">ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> serviceRequestService<span class=\"pl-k\">.</span>delete(id<span class=\"pl-k\">.</span>getIdPart());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:54:28Z", "path": "api/src/main/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProvider.java", "diffHunk": "@@ -55,6 +63,33 @@ public ServiceRequest getServiceRequestById(@IdParam @NotNull IdType id) {\n \t\treturn serviceRequest;\n \t}\n \t\n+\t@Create\n+\tpublic MethodOutcome createServiceRequest(@ResourceParam ServiceRequest serviceRequest) {\n+\t\treturn FhirProviderUtils.buildCreate(serviceRequestService.create(serviceRequest));\n+\t} \n+\n+\t@Update\n+\t@SuppressWarnings(\"unused\")\n+\tpublic MethodOutcome updateServiceRequest(@IdParam IdType id, @ResourceParam ServiceRequest serviceRequest) {\n+\t\tif (id == null || id.getIdPart() == null) {\n+\t\t\tthrow new InvalidRequestException(\"id must be specified to update\");\n+\t\t}\n+\n+\t\tserviceRequest.setId(id.getIdPart());\n+\n+\t\treturn FhirProviderUtils.buildUpdate(serviceRequestService.update(id.getIdPart(), serviceRequest));\n+\t}\n+\n+\t@Delete\n+\t@SuppressWarnings(\"unused\")\n+\tpublic OperationOutcome deleteServiceRequest(@IdParam @NotNull IdType id) {\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProvider.java b/api/src/main/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProvider.java\nindex 9e35d5d6..5d1c24f2 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProvider.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProvider.java\n", "chunk": "@@ -83,7 +83,7 @@ public class ServiceRequestFhirResourceProvider implements IResourceProvider {\n \t@Delete\n \t@SuppressWarnings(\"unused\")\n \tpublic OperationOutcome deleteServiceRequest(@IdParam @NotNull IdType id) {\n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());\n+\t\tServiceRequest serviceRequest = serviceRequestService.delete(id.getIdPart());\n \t\tif (serviceRequest == null) {\n \t\t\tthrow new ResourceNotFoundException(\"Could not find serviceRequest to delete with id \" + id.getIdPart());\n \t\t}\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyODU4NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455028585", "body": "Please remove this.", "bodyText": "Please remove this.", "bodyHTML": "<p dir=\"auto\">Please remove this.</p>", "author": "varung-31", "createdAt": "2020-07-15T12:54:53Z", "path": "api/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderTest.java", "diffHunk": "@@ -106,6 +112,7 @@ public void getServiceRequestByWithWrongId_shouldThrowResourceNotFoundException(\n \t}\n \t\n \t@Test\n+", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/api/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderTest.java b/api/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderTest.java\nindex a460d66c..359435fa 100644\n--- a/api/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderTest.java\n+++ b/api/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderTest.java\n", "chunk": "@@ -112,7 +112,6 @@ public class ServiceRequestFhirResourceProviderTest {\n \t}\n \t\n \t@Test\n-\n \tpublic void searchServiceRequest_shouldReturnMatchingServiceRequestWhenUUIDIsSpecified() {\n \t\tTokenAndListParam uuid = new TokenAndListParam().addAnd(new TokenParam(SERVICE_REQUEST_UUID));\n \t\t\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyOTI3Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455029277", "body": "```suggestion\r\n\t\tServiceRequest serviceRequest = new ServiceRequest();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n          \n          \n            \n            \t\tServiceRequest serviceRequest = new ServiceRequest();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-smi\">ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceRequest</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:55:59Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -169,10 +169,10 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n \n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n \n-\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\twhen(service.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n \n \t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n \t\t        .accept(FhirMediaTypes.JSON).go();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyOTU1MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455029550", "body": "```suggestion\r\n\t\twhen(service.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n          \n          \n            \n            \t\twhen(service.create(any(ServiceRequest.class))).thenReturn(serviceRequest);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\twhen(service<span class=\"pl-k\">.</span>create(any(<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span><span class=\"pl-k\">.</span>class)))<span class=\"pl-k\">.</span>thenReturn(serviceRequest);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\twhen(service<span class=\"pl-k\">.</span>create(any(<span class=\"pl-smi\">ServiceRequest</span><span class=\"pl-k\">.</span>class)))<span class=\"pl-k\">.</span>thenReturn(serviceRequest);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:56:23Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -169,10 +169,10 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n \n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n \n-\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\twhen(service.create(any(ServiceRequest.class))).thenReturn(serviceRequest);\n \n \t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n \t\t        .accept(FhirMediaTypes.JSON).go();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyOTY5Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455029697", "body": "```suggestion\r\n\t\tServiceRequest serviceRequest = new ServiceRequest();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n          \n          \n            \n            \t\tServiceRequest serviceRequest = new ServiceRequest();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-smi\">ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceRequest</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:56:39Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH )) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -188,10 +188,10 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n \n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n \n-\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenReturn(serviceRequest);\n \n \t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n \t\t\t\t.accept(FhirMediaTypes.JSON).go();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyOTgwNQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455029805", "body": "```suggestion\r\n\t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenReturn(serviceRequest);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n          \n          \n            \n            \t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenReturn(serviceRequest);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\twhen(service<span class=\"pl-k\">.</span>update(anyString(), any(<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span><span class=\"pl-k\">.</span>class)))<span class=\"pl-k\">.</span>thenReturn(serviceRequest);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\twhen(service<span class=\"pl-k\">.</span>update(anyString(), any(<span class=\"pl-smi\">ServiceRequest</span><span class=\"pl-k\">.</span>class)))<span class=\"pl-k\">.</span>thenReturn(serviceRequest);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:56:48Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH )) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -188,10 +188,10 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n \t\t}\n \n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n \n-\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\t\twhen(service.update(anyString(), any(ServiceRequest.class))).thenReturn(serviceRequest);\n \n \t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n \t\t\t\t.accept(FhirMediaTypes.JSON).go();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzMDA5OQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/245#discussion_r455030099", "body": "```suggestion\r\n\t\tServiceRequest serviceRequest = new ServiceRequest();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n          \n          \n            \n            \t\tServiceRequest serviceRequest = new ServiceRequest();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\"><span class=\"x x-first\">org.hl7.fhir.r4.model</span><span class=\"pl-k x x-last\">.</span>ServiceRequest</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-smi\">ServiceRequest</span> serviceRequest <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceRequest</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varung-31", "createdAt": "2020-07-15T12:57:17Z", "path": "omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java", "diffHunk": "@@ -141,4 +160,92 @@ private void verifyUri(String uri) throws Exception {\n \t\tassertThat(results.getEntry().get(0).getResource(), notNullValue());\n \t\tassertThat(results.getEntry().get(0).getResource().getIdElement().getIdPart(), equalTo(SERVICE_REQUEST_UUID));\n \t}\n+\n+\t@Test\n+\tpublic void createServiceRequest_shouldCreateServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_CREATE_SERVICE_REQUEST_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.create(any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = post(\"/ServiceRequest\").jsonContent(jsonServiceRequest)\n+\t\t        .accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isCreated());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldUpdateExistingServiceRequest() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_PATH )) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n+\n+\t\twhen(service.update(anyString(), any(org.hl7.fhir.r4.model.ServiceRequest.class))).thenReturn(serviceRequest);\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isOk());\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldRaiseExceptionForNoId() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader().getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_NO_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element for update\"));\n+\t}\n+\n+\t@Test\n+\tpublic void updateServiceRequest_shouldrRaiseExceptionForIdMissMatch() throws Exception {\n+\t\tString jsonServiceRequest;\n+\t\ttry (InputStream is = this.getClass().getClassLoader()\n+\t\t\t\t.getResourceAsStream(JSON_UPDATE_SERVICE_REQUEST_WRONG_ID_PATH)) {\n+\t\t\tObjects.requireNonNull(is);\n+\t\t\tjsonServiceRequest = IOUtils.toString(is, StandardCharsets.UTF_8);\n+\t\t}\n+\n+\t\tMockHttpServletResponse response = put(\"/ServiceRequest/\" + WRONG_SERVICE_REQUEST_UUID).jsonContent(jsonServiceRequest)\n+\t\t\t\t.accept(FhirMediaTypes.JSON).go();\n+\n+\t\tassertThat(response, isBadRequest());\n+\t\tassertThat(response.getContentAsString(),\n+\t\t\t\tcontainsStringIgnoringCase(\"body must contain an ID element which matches the request URL\"));\n+\t}\n+\n+\t@Test\n+\tpublic void deleteServiceRequest_shouldDeleteServiceRequest() throws Exception {\n+\t\tOperationOutcome retVal = new OperationOutcome();\n+\t\tretVal.setId(SERVICE_REQUEST_UUID);\n+\t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n+\n+\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();", "originalCommit": "9bb0e6be24cd61ec69e3cab19195de81c57d2c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b9b670d08496a8f07637ef3de51c95cba6931d", "changed_code": [{"header": "diff --git a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\nindex b414a483..4c188615 100644\n--- a/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n+++ b/omod/src/test/java/org/openmrs/module/fhir2/providers/r4/ServiceRequestFhirResourceProviderWebTest.java\n", "chunk": "@@ -238,7 +238,7 @@ public class ServiceRequestFhirResourceProviderWebTest extends BaseFhirR4Resourc\n \t\tretVal.setId(SERVICE_REQUEST_UUID);\n \t\tretVal.getText().setDivAsString(\"Deleted successfully\");\n \n-\t\torg.hl7.fhir.r4.model.ServiceRequest serviceRequest = new org.hl7.fhir.r4.model.ServiceRequest();\n+\t\tServiceRequest serviceRequest = new ServiceRequest();\n \t\tserviceRequest.setId(SERVICE_REQUEST_UUID);\n \n \t\twhen(service.delete(SERVICE_REQUEST_UUID)).thenReturn(serviceRequest);\n", "next_change": null}]}}, {"oid": "9907227a91a036191b19903469b7008980f2a23b", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9907227a91a036191b19903469b7008980f2a23b", "message": "FM2-223:Add create,update, and delete methods for ServiceRequest", "committedDate": "2020-07-21T12:36:48Z", "type": "commit"}, {"oid": "4347f1766bc15bf6034aaac4a2d3746416870312", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4347f1766bc15bf6034aaac4a2d3746416870312", "message": "FM2-223:adding more parameters", "committedDate": "2020-07-21T12:36:50Z", "type": "commit"}, {"oid": "47b9b670d08496a8f07637ef3de51c95cba6931d", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/47b9b670d08496a8f07637ef3de51c95cba6931d", "message": "FM2-223:Fixing formats", "committedDate": "2020-07-21T13:24:06Z", "type": "commit"}, {"oid": "47b9b670d08496a8f07637ef3de51c95cba6931d", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/47b9b670d08496a8f07637ef3de51c95cba6931d", "message": "FM2-223:Fixing formats", "committedDate": "2020-07-21T13:24:06Z", "type": "forcePushed"}]}