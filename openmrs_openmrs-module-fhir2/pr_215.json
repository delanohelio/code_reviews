{"pr_number": 215, "pr_title": "FM2-186: Add support for users as Practitioners", "pr_author": "reagan-meant", "pr_createdAt": "2020-06-17T12:32:36Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215", "timeline": [{"oid": "371ffa558d017ff4058f471521d0e427db1cc0b1", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/371ffa558d017ff4058f471521d0e427db1cc0b1", "message": " FM2-186: Add support for users as Practitioners", "committedDate": "2020-06-19T14:44:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwOTc2Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215#discussion_r446209766", "body": "We can actually probably get rid of this method since, to be consistent, it should be called `get()`.", "bodyText": "We can actually probably get rid of this method since, to be consistent, it should be called get().", "bodyHTML": "<p dir=\"auto\">We can actually probably get rid of this method since, to be consistent, it should be called <code>get()</code>.</p>", "author": "ibacher", "createdAt": "2020-06-26T14:13:12Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/FhirUserDao.java", "diffHunk": "@@ -13,7 +13,7 @@\n \n import org.openmrs.User;\n \n-public interface FhirUserDao {\n+public interface FhirUserDao extends FhirDao<User> {\n \t\n \tUser getUserByUuid(@NotNull String uuid);", "originalCommit": "bf1d74ffb9bb54024d30665d200dec175b036585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxMDAyNw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215#discussion_r446210027", "body": "Ditto: just using `get()` in place of duplicating this method makes the most sense to me.", "bodyText": "Ditto: just using get() in place of duplicating this method makes the most sense to me.", "bodyHTML": "<p dir=\"auto\">Ditto: just using <code>get()</code> in place of duplicating this method makes the most sense to me.</p>", "author": "ibacher", "createdAt": "2020-06-26T14:13:43Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirUserDaoImpl.java", "diffHunk": "@@ -11,31 +11,55 @@\n \n import static org.hibernate.criterion.Restrictions.eq;\n \n+import java.util.Optional;\n+\n+import ca.uhn.fhir.rest.param.StringAndListParam;\n+import ca.uhn.fhir.rest.param.TokenAndListParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n-import org.hibernate.SessionFactory;\n+import org.hibernate.Criteria;\n import org.openmrs.User;\n+import org.openmrs.module.fhir2.FhirConstants;\n import org.openmrs.module.fhir2.api.dao.FhirUserDao;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n+import org.openmrs.module.fhir2.api.search.param.SearchParameterMap;\n import org.springframework.stereotype.Component;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n-public class FhirUserDaoImpl implements FhirUserDao {\n-\t\n-\t@Autowired\n-\t@Qualifier(\"sessionFactory\")\n-\tprivate SessionFactory sessionFactory;\n+public class FhirUserDaoImpl extends BaseFhirDao<User> implements FhirUserDao {\n \t\n \t@Override\n \tpublic User getUserByUuid(String uuid) {\n-\t\treturn (User) sessionFactory.getCurrentSession().createCriteria(User.class).add(eq(\"uuid\", uuid)).uniqueResult();\n+\t\treturn (User) getSessionFactory().getCurrentSession().createCriteria(User.class).add(eq(\"uuid\", uuid)).uniqueResult();\n \t}", "originalCommit": "bf1d74ffb9bb54024d30665d200dec175b036585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxMDM3Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215#discussion_r446210377", "body": "This seems like extraneous space", "bodyText": "This seems like extraneous space", "bodyHTML": "<p dir=\"auto\">This seems like extraneous space</p>", "author": "ibacher", "createdAt": "2020-06-26T14:14:22Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPractitionerServiceImpl.java", "diffHunk": "@@ -42,11 +47,39 @@\n \t@Autowired\n \tprivate SearchQuery<Provider, Practitioner, FhirPractitionerDao, PractitionerTranslator<Provider>> searchQuery;\n \t\n+\t@Autowired\n+\tprivate FhirUserService userService;\n+\t\n+\t@Override\n+\tpublic Practitioner get(String uuid) {\n+\t\tPractitioner practitioner = translator.toFhirResource(getDao().get(uuid));\n+\t\tif (practitioner == null) {\n+\t\t\t\n+\t\t\tpractitioner = userService.get(uuid);\n+\t\t}\n+\t\treturn practitioner;\n+\t}\n+\t\n \t@Override\n \tpublic IBundleProvider searchForPractitioners(StringAndListParam name, TokenAndListParam identifier) {\n \t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.NAME_SEARCH_HANDLER, name)\n \t\t        .addParameter(FhirConstants.IDENTIFIER_SEARCH_HANDLER, identifier);\n \t\t\n-\t\treturn searchQuery.getQueryResults(theParams, dao, translator);\n+\t\tIBundleProvider providerBundle = searchQuery.getQueryResults(theParams, dao, translator);\n+\t\tIBundleProvider userBundle = userService.searchForUsers(name, identifier);\n+\t\t\n+\t\tif (providerBundle.isEmpty() && userBundle.isEmpty()) {\n+\t\t\tList<IBaseResource> theResource = providerBundle.getResources(0, providerBundle.size());\n+\t\t\ttheResource.addAll(userBundle.getResources(0, userBundle.size()));\n+\t\t\t\n+\t\t\treturn new SimpleBundleProvider(theResource);\n+\t\t\t", "originalCommit": "bf1d74ffb9bb54024d30665d200dec175b036585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxMDQ5Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215#discussion_r446210492", "body": "```suggestion\r\n\t\t\treturn providerBundle;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\n          \n          \n            \n            \t\t\treturn providerBundle;\n          \n          \n            \n            \t\t\t\n          \n          \n            \n            \t\t\treturn providerBundle;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">return</span> providerBundle;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">return</span> providerBundle;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ibacher", "createdAt": "2020-06-26T14:14:35Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPractitionerServiceImpl.java", "diffHunk": "@@ -42,11 +47,39 @@\n \t@Autowired\n \tprivate SearchQuery<Provider, Practitioner, FhirPractitionerDao, PractitionerTranslator<Provider>> searchQuery;\n \t\n+\t@Autowired\n+\tprivate FhirUserService userService;\n+\t\n+\t@Override\n+\tpublic Practitioner get(String uuid) {\n+\t\tPractitioner practitioner = translator.toFhirResource(getDao().get(uuid));\n+\t\tif (practitioner == null) {\n+\t\t\t\n+\t\t\tpractitioner = userService.get(uuid);\n+\t\t}\n+\t\treturn practitioner;\n+\t}\n+\t\n \t@Override\n \tpublic IBundleProvider searchForPractitioners(StringAndListParam name, TokenAndListParam identifier) {\n \t\tSearchParameterMap theParams = new SearchParameterMap().addParameter(FhirConstants.NAME_SEARCH_HANDLER, name)\n \t\t        .addParameter(FhirConstants.IDENTIFIER_SEARCH_HANDLER, identifier);\n \t\t\n-\t\treturn searchQuery.getQueryResults(theParams, dao, translator);\n+\t\tIBundleProvider providerBundle = searchQuery.getQueryResults(theParams, dao, translator);\n+\t\tIBundleProvider userBundle = userService.searchForUsers(name, identifier);\n+\t\t\n+\t\tif (providerBundle.isEmpty() && userBundle.isEmpty()) {\n+\t\t\tList<IBaseResource> theResource = providerBundle.getResources(0, providerBundle.size());\n+\t\t\ttheResource.addAll(userBundle.getResources(0, userBundle.size()));\n+\t\t\t\n+\t\t\treturn new SimpleBundleProvider(theResource);\n+\t\t\t\n+\t\t} else if (providerBundle.isEmpty() && !userBundle.isEmpty()) {\n+\t\t\t\n+\t\t\treturn providerBundle;\n+\t\t\t", "originalCommit": "bf1d74ffb9bb54024d30665d200dec175b036585", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b0518c11826cc42178eeaa3299feed522154116", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/5b0518c11826cc42178eeaa3299feed522154116", "message": "FM2-186: Add support for users as Practitioners", "committedDate": "2020-07-08T20:14:49Z", "type": "commit"}, {"oid": "3c46a6b2e12da2f5c8a9e16622baff417b0a3db4", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/3c46a6b2e12da2f5c8a9e16622baff417b0a3db4", "message": " FM2-186: Add support for users as Practitioners", "committedDate": "2020-07-08T20:14:49Z", "type": "commit"}, {"oid": "d2d67120c2711bd3c00f3bdbec8cc73d6d3275c2", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d2d67120c2711bd3c00f3bdbec8cc73d6d3275c2", "message": "FM2-186: Add support for users as Practitioners", "committedDate": "2020-07-08T20:14:49Z", "type": "commit"}, {"oid": "c865417ce2bf5599e53b2ab1b3cb38951ef4e41e", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c865417ce2bf5599e53b2ab1b3cb38951ef4e41e", "message": "FM2-186: Add support for users as Practitioners", "committedDate": "2020-07-12T22:49:04Z", "type": "commit"}, {"oid": "c865417ce2bf5599e53b2ab1b3cb38951ef4e41e", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/c865417ce2bf5599e53b2ab1b3cb38951ef4e41e", "message": "FM2-186: Add support for users as Practitioners", "committedDate": "2020-07-12T22:49:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3NDc3OQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/215#discussion_r463774779", "body": "```suggestion\r\n\t\t\tpractitioner = userService.get(uuid);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\n          \n          \n            \n            \t\t\tpractitioner = userService.get(uuid);\n          \n          \n            \n            \t\t\tpractitioner = userService.get(uuid);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\tpractitioner <span class=\"pl-k\">=</span> userService<span class=\"pl-k\">.</span>get(uuid);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tpractitioner <span class=\"pl-k\">=</span> userService<span class=\"pl-k\">.</span>get(uuid);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ibacher", "createdAt": "2020-07-31T18:49:12Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPractitionerServiceImpl.java", "diffHunk": "@@ -43,6 +48,19 @@\n \t@Autowired\n \tprivate SearchQuery<Provider, Practitioner, FhirPractitionerDao, PractitionerTranslator<Provider>> searchQuery;\n \t\n+\t@Autowired\n+\tprivate FhirUserService userService;\n+\t\n+\t@Override\n+\tpublic Practitioner get(String uuid) {\n+\t\tPractitioner practitioner = translator.toFhirResource(getDao().get(uuid));\n+\t\tif (practitioner == null) {\n+\t\t\t\n+\t\t\tpractitioner = userService.get(uuid);", "originalCommit": "c865417ce2bf5599e53b2ab1b3cb38951ef4e41e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f8687d24be9f47f44df215ae4e584d80089449a", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/4f8687d24be9f47f44df215ae4e584d80089449a", "message": "Update api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirPractitionerServiceImpl.java", "committedDate": "2020-07-31T18:49:41Z", "type": "commit"}]}