{"pr_number": 26, "pr_title": "Ignore the thread waiting time in the calculation of TPM-C.", "pr_author": "psudheer21", "pr_createdAt": "2020-06-11T19:27:50Z", "pr_url": "https://github.com/yugabyte/tpcc/pull/26", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMTQ1MQ==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439031451", "body": "Can this happen? We can start a new txn even after the provided time has passed?\r\nWhat is considered as txn start time? We should include keying time in that. For example, suppose that:\r\n1. We start tpcc run at time 0.\r\n2. At time 299, we start txn T1 and wait for keying time.\r\n3. At time 310, we actually start the txn execution.\r\nIn this scenario, we should consider T1 because the keying time started in the specified time window (0-299).\r\n", "bodyText": "Can this happen? We can start a new txn even after the provided time has passed?\nWhat is considered as txn start time? We should include keying time in that. For example, suppose that:\n\nWe start tpcc run at time 0.\nAt time 299, we start txn T1 and wait for keying time.\nAt time 310, we actually start the txn execution.\nIn this scenario, we should consider T1 because the keying time started in the specified time window (0-299).", "bodyHTML": "<p dir=\"auto\">Can this happen? We can start a new txn even after the provided time has passed?<br>\nWhat is considered as txn start time? We should include keying time in that. For example, suppose that:</p>\n<ol dir=\"auto\">\n<li>We start tpcc run at time 0.</li>\n<li>At time 299, we start txn T1 and wait for keying time.</li>\n<li>At time 310, we actually start the txn execution.<br>\nIn this scenario, we should consider T1 because the keying time started in the specified time window (0-299).</li>\n</ol>", "author": "ndeodhar", "createdAt": "2020-06-11T19:52:36Z", "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -866,27 +868,25 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n \n         }\n         Results r = ThreadBench.runRateLimitedBenchmark(workers, workConfs, intervalMonitor);\n-        long end = System.nanoTime();\n \n         long numNewOrderTransactions = 0;\n         for (Worker<?> w : workers) {\n             for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n-                if (sample.tranType == newOrderTxnId) {\n+                if (sample.tranType == newOrderTxnId && sample.startNs + 1000L * sample.latencyUs <= end) {", "originalCommit": "d60e8b9228c2670c9ca0383af1ce142618704906", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MzE2NQ==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439073165", "bodyText": "Discussed offline. This code makes sense since we want to calculate number of transactions processed (and not number of transactions generated).", "author": "ndeodhar", "createdAt": "2020-06-11T21:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMTQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjAxMw==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439032013", "body": "Let's log these on separate lines for better readability.", "bodyText": "Let's log these on separate lines for better readability.", "bodyHTML": "<p dir=\"auto\">Let's log these on separate lines for better readability.</p>", "author": "ndeodhar", "createdAt": "2020-06-11T19:53:44Z", "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -866,27 +868,25 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n \n         }\n         Results r = ThreadBench.runRateLimitedBenchmark(workers, workConfs, intervalMonitor);\n-        long end = System.nanoTime();\n \n         long numNewOrderTransactions = 0;\n         for (Worker<?> w : workers) {\n             for (LatencyRecord.Sample sample : w.getLatencyRecords()) {\n-                if (sample.tranType == newOrderTxnId) {\n+                if (sample.tranType == newOrderTxnId && sample.startNs + 1000L * sample.latencyUs <= end) {\n                     ++numNewOrderTransactions;\n                 }\n             }\n         }\n         LOG.info(SINGLE_LINE);\n         LOG.info(\"Rate limited reqs/s: \" + r);\n \n-        long time_seconds = (end - start) / 1000 / 1000 / 1000;\n-        long tpmc = numNewOrderTransactions * 60 * 1000 * 1000 * 1000 / (end - start);\n+        long tpmc = numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n         LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions +\n-                 \" time seconds: \" + time_seconds +\n+                 \" time seconds: \" + time +", "originalCommit": "d60e8b9228c2670c9ca0383af1ce142618704906", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MTU2NQ==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439071565", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-06-11T21:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjAxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjcyNA==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439032724", "body": "Please remove.", "bodyText": "Please remove.", "bodyHTML": "<p dir=\"auto\">Please remove.</p>", "author": "ndeodhar", "createdAt": "2020-06-11T19:55:11Z", "path": "src/com/oltpbenchmark/LatencyRecord.java", "diffHunk": "@@ -120,7 +102,7 @@ else if (diff < 0)\n \tprivate final class LatencyRecordIterator implements Iterator<Sample> {\n \t\tprivate int chunkIndex = 0;\n \t\tprivate int subIndex = 0;\n-\t\tprivate long lastIteratorNs = startNs;\n+\t\t//private long lastIteratorNs = startNs;", "originalCommit": "d60e8b9228c2670c9ca0383af1ce142618704906", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3MTQ5Ng==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439071496", "bodyText": "Done", "author": "psudheer21", "createdAt": "2020-06-11T21:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMjcyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwNzc3Mg==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439107772", "body": "```suggestion\r\n        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \" time seconds: \" + time);\n          \n          \n            \n                    LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \", time seconds: \" + time);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Num New Order transactions : <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> numNewOrderTransactions <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> time seconds: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> time);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Num New Order transactions : <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> numNewOrderTransactions <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">,</span> time seconds: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> time);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ndeodhar", "createdAt": "2020-06-11T22:34:58Z", "path": "src/com/oltpbenchmark/DBWorkload.java", "diffHunk": "@@ -883,10 +883,9 @@ private static Results runWorkload(List<BenchmarkModule> benchList, boolean verb\n         long tpmc = numNewOrderTransactions * 60 / time;\n         double efficiency = 1.0 * tpmc * 100 / numWarehouses / 12.86;\n \n-        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions +\n-                 \" time seconds: \" + time +\n-                 \" TPM-C: \" + tpmc +\n-                 \" Efficiency : \" + efficiency);\n+        LOG.info(\"Num New Order transactions : \" + numNewOrderTransactions + \" time seconds: \" + time);", "originalCommit": "72e87eed9304c2874454e167ac1f4cc822f24d77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NTgwNQ==", "url": "https://github.com/yugabyte/tpcc/pull/26#discussion_r439245805", "bodyText": "Done.", "author": "psudheer21", "createdAt": "2020-06-12T07:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwNzc3Mg=="}], "type": "inlineReview"}, {"oid": "ea69d6c235de72ae1d64fb7ef23606dfb555d873", "url": "https://github.com/yugabyte/tpcc/commit/ea69d6c235de72ae1d64fb7ef23606dfb555d873", "message": "Ignore the thread waiting time in the calculation of TPM-C.\n\nSummary:\nFor the calculation of TPM-C we used the entire duration of the run\nwhich included the waiting time of the trailing transactions.\n\nWith this change, we ignore the transactions that complete after the\nconfigured time and use the configured time for the calculation of\nTPM-C.\n\nReviewers:\nNeha", "committedDate": "2020-06-12T07:09:14Z", "type": "commit"}, {"oid": "c1db3105b9bc03c1280f17301b8611cac7000c93", "url": "https://github.com/yugabyte/tpcc/commit/c1db3105b9bc03c1280f17301b8611cac7000c93", "message": "Addressed comments.", "committedDate": "2020-06-12T07:09:14Z", "type": "commit"}, {"oid": "6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "url": "https://github.com/yugabyte/tpcc/commit/6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "message": "Addressed comments 2.", "committedDate": "2020-06-12T07:10:18Z", "type": "commit"}, {"oid": "6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "url": "https://github.com/yugabyte/tpcc/commit/6361a2bb7c5891e5167f596b4fbfe0090b8c43e0", "message": "Addressed comments 2.", "committedDate": "2020-06-12T07:10:18Z", "type": "forcePushed"}]}