{"pr_number": 4342, "pr_title": "[junit-platform] Handle subclasses of comparison failure assertions", "pr_author": "kriegfrj", "pr_createdAt": "2020-10-06T05:08:58Z", "pr_url": "https://github.com/bndtools/bnd/pull/4342", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NjY3NQ==", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500396675", "body": "I think these should be `Predicate<Object>`.", "bodyText": "I think these should be Predicate<Object>.", "bodyHTML": "<p dir=\"auto\">I think these should be <code>Predicate&lt;Object&gt;</code>.</p>", "author": "bjhargrave", "createdAt": "2020-10-06T15:34:57Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;", "originalCommit": "121a75375600b87afc4bccb3098111f156816ec8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MjY2Mw==", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500752663", "bodyText": "I made them Predicate<Throwable> instead, but basically used your suggestion. Thanks for the idea, it does neaten up the code a bit.", "author": "kriegfrj", "createdAt": "2020-10-07T05:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NjY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NzYzMw==", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500397633", "body": "We then always make a non-null predicate:\r\n\r\n```java\r\nstatic Predicate<Object> tryLoad(String name) {\r\n\t\ttry {\r\n\t\t\treturn Class.forName(name)::isInstanceOf;\r\n\t\t} catch (ClassNotFoundException cnfe) {\r\n\t\t\treturn obj -> false;\r\n\t\t}\r\n}\r\n```", "bodyText": "We then always make a non-null predicate:\nstatic Predicate<Object> tryLoad(String name) {\n\t\ttry {\n\t\t\treturn Class.forName(name)::isInstanceOf;\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\treturn obj -> false;\n\t\t}\n}", "bodyHTML": "<p dir=\"auto\">We then always make a non-null predicate:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"static Predicate&lt;Object&gt; tryLoad(String name) {\n\t\ttry {\n\t\t\treturn Class.forName(name)::isInstanceOf;\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\treturn obj -&gt; false;\n\t\t}\n}\"><pre><span class=\"pl-k\">static</span> <span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">Object</span>&gt;</span> tryLoad(<span class=\"pl-smi\">String</span> name) {\n\t\t<span class=\"pl-k\">try</span> {\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">Class</span><span class=\"pl-k\">.</span>forName(name)<span class=\"pl-k\">::</span>isInstanceOf;\n\t\t} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ClassNotFoundException</span> cnfe) {\n\t\t\t<span class=\"pl-k\">return</span> obj <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">false</span>;\n\t\t}\n}</pre></div>", "author": "bjhargrave", "createdAt": "2020-10-06T15:36:00Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tJUNIT4_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tASSERTION_FAILED_ERROR;\n+\tstatic final Class<? extends AssertionError>\tMULTIPLE_FAILURES_ERROR;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tstatic Class<? extends AssertionError> tryLoad(String name) {\n+\t\ttry {", "originalCommit": "121a75375600b87afc4bccb3098111f156816ec8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5ODU4Mg==", "url": "https://github.com/bndtools/bnd/pull/4342#discussion_r500398582", "body": "With the above change to `Predicate<Object>`, the if test becomes more simple and we avoid repeating the test logic:\r\n\r\n```java\r\nif (ASSERTION_FAILED_ERROR.test(exception)) {\r\n```", "bodyText": "With the above change to Predicate<Object>, the if test becomes more simple and we avoid repeating the test logic:\nif (ASSERTION_FAILED_ERROR.test(exception)) {", "bodyHTML": "<p dir=\"auto\">With the above change to <code>Predicate&lt;Object&gt;</code>, the if test becomes more simple and we avoid repeating the test logic:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (ASSERTION_FAILED_ERROR.test(exception)) {\"><pre><span class=\"pl-k\">if</span> (<span class=\"pl-c1\">ASSERTION_FAILED_ERROR</span><span class=\"pl-k\">.</span>test(exception)) {</pre></div>", "author": "bjhargrave", "createdAt": "2020-10-06T15:37:02Z", "path": "biz.aQute.tester.junit-platform/src/aQute/tester/junit/platform/JUnitEclipseListener.java", "diffHunk": "@@ -41,6 +40,109 @@\n import org.opentest4j.MultipleFailuresError;\n \n public class JUnitEclipseListener implements TestExecutionListener, Closeable {\n+\n+\tstatic final Class<? extends AssertionError>\tJUNIT3_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tJUNIT4_COMPARISON_FAILURE;\n+\tstatic final Class<? extends AssertionError>\tASSERTION_FAILED_ERROR;\n+\tstatic final Class<? extends AssertionError>\tMULTIPLE_FAILURES_ERROR;\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tstatic Class<? extends AssertionError> tryLoad(String name) {\n+\t\ttry {\n+\t\t\treturn (Class<? extends AssertionError>) Class.forName(name);\n+\t\t} catch (ClassNotFoundException cnfe) {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\tstatic {\n+\t\tJUNIT3_COMPARISON_FAILURE = tryLoad(\"junit.framework.ComparisonFailure\");\n+\t\tJUNIT4_COMPARISON_FAILURE = tryLoad(\"org.junit.ComparisonFailure\");\n+\t\tASSERTION_FAILED_ERROR = tryLoad(\"org.opentest4j.AssertionFailedError\");\n+\t\tMULTIPLE_FAILURES_ERROR = tryLoad(\"org.opentest4j.MultipleFailuresError\");\n+\t}\n+\n+\tstatic class ExpectedActualBuilder implements Predicate<Throwable> {\n+\n+\t\tStringBuilder\texpectedBuilder\t= new StringBuilder();\n+\t\tStringBuilder\tactualBuilder\t= new StringBuilder();\n+\t\tboolean\t\t\tfirst\t\t\t= true;\n+\n+\t\tvoid addExpectedActual(String expected, String actual) {\n+\t\t\tif (first) {\n+\t\t\t\tfirst = false;\n+\t\t\t} else {\n+\t\t\t\texpectedBuilder.append(\"\\n\\n\");\n+\t\t\t\tactualBuilder.append(\"\\n\\n\");\n+\t\t\t}\n+\t\t\texpectedBuilder.append(expected);\n+\t\t\tactualBuilder.append(actual);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean test(Throwable exception) {\n+\t\t\t// NOTE:\n+\t\t\t// The code in this method is carefully structured to avoid\n+\t\t\t// NoClassDefFoundError. The null test for each if first\n+\t\t\t// confirms that the class is available before proceeding into\n+\t\t\t// the block, so that by that stage it knows that the class\n+\t\t\t// is available and that NCDFE will not be thrown. On the other\n+\t\t\t// hand, if the class is not on the classpath then the code\n+\t\t\t// will never be executed and the thread context classloader\n+\t\t\t// will not attempt to load the class, so again no NCDFE.\n+\t\t\t//\n+\t\t\t// This is particularly important for the JUnit 3/4 comparison\n+\t\t\t// failure assertions, because the OpenTest4J ones will be on the\n+\t\t\t// classpath courtesy of junit-platform-launcher's dependencies.\n+\t\t\tif (ASSERTION_FAILED_ERROR != null && ASSERTION_FAILED_ERROR.isAssignableFrom(exception.getClass())) {", "originalCommit": "121a75375600b87afc4bccb3098111f156816ec8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6c7d26b4f52671c9facd8191ac4e55af5de490fe", "url": "https://github.com/bndtools/bnd/commit/6c7d26b4f52671c9facd8191ac4e55af5de490fe", "message": "[junit-platform] Handle subclasses of comparison failure assertions\n\nFixes #4338.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-10-07T05:49:31Z", "type": "commit"}, {"oid": "6c7d26b4f52671c9facd8191ac4e55af5de490fe", "url": "https://github.com/bndtools/bnd/commit/6c7d26b4f52671c9facd8191ac4e55af5de490fe", "message": "[junit-platform] Handle subclasses of comparison failure assertions\n\nFixes #4338.\n\nSigned-off-by: Fr Jeremy Krieg <fr.jkrieg@greekwelfaresa.org.au>", "committedDate": "2020-10-07T05:49:31Z", "type": "forcePushed"}]}