{"pr_number": 2288, "pr_title": "Add test for elastic and update/delete for non existing document", "pr_author": "olukas", "pr_createdAt": "2020-06-02T13:25:40Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2288", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODE4Mg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898182", "body": "Can we use something like:\r\n\r\n```\r\n        assertThatThrownBy(() -> submitJob(p))\r\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\r\n                .hasStackTraceContaining(\"failed to authenticate user [elastic]\");\r\n```", "bodyText": "Can we use something like:\n        assertThatThrownBy(() -> submitJob(p))\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\n                .hasStackTraceContaining(\"failed to authenticate user [elastic]\");", "bodyHTML": "<p dir=\"auto\">Can we use something like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        assertThatThrownBy(() -&gt; submitJob(p))\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\n                .hasStackTraceContaining(&quot;failed to authenticate user [elastic]&quot;);\"><pre><code>        assertThatThrownBy(() -&gt; submitJob(p))\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\n                .hasStackTraceContaining(\"failed to authenticate user [elastic]\");\n</code></pre></div>", "author": "frant-hartm", "createdAt": "2020-06-02T14:00:33Z", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "originalCommit": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODM2Ng==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898366", "body": "Same here", "bodyText": "Same here", "bodyHTML": "<p dir=\"auto\">Same here</p>", "author": "frant-hartm", "createdAt": "2020-06-02T14:00:45Z", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }\n+    }\n+\n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkDeleteRequest_then_jobShouldFail() throws Exception {\n+        Sink<String> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                (item) -> new DeleteRequest(\"my-index\", item)\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(\"notExist\"))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "originalCommit": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwMDAwMQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433900001", "body": "Sharp-eyed! Thanks!", "bodyText": "Sharp-eyed! Thanks!", "bodyHTML": "<p dir=\"auto\">Sharp-eyed! Thanks!</p>", "author": "frant-hartm", "createdAt": "2020-06-02T14:02:24Z", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "diffHunk": "@@ -76,7 +76,7 @@ public void given_authenticatedClient_whenWriteToElasticSink_thenFinishSuccessfu\n     }\n \n     @Test\n-    public void given_clientWithWrongPassword_whenReadFromElasticSource_thenFailWithAuthenticationException() {\n+    public void given_clientWithWrongPassword_whenWriteToElasticSink_thenFailWithAuthenticationException() {", "originalCommit": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a8072ad6863deeac0230426433070156ab50ad0", "url": "https://github.com/hazelcast/hazelcast-jet/commit/0a8072ad6863deeac0230426433070156ab50ad0", "message": "Add test for elastic and update/delete for non existing document", "committedDate": "2020-06-03T05:44:22Z", "type": "commit"}, {"oid": "0a8072ad6863deeac0230426433070156ab50ad0", "url": "https://github.com/hazelcast/hazelcast-jet/commit/0a8072ad6863deeac0230426433070156ab50ad0", "message": "Add test for elastic and update/delete for non existing document", "committedDate": "2020-06-03T05:44:22Z", "type": "forcePushed"}]}