{"pr_number": 2737, "pr_title": "Use static loggers and log with prefix", "pr_author": "gurbuzali", "pr_createdAt": "2020-12-08T08:25:31Z", "pr_url": "https://github.com/hazelcast/hazelcast-jet/pull/2737", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MjU5OQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539172599", "body": "This is a bit performance sensitive. Instead of a pattern we should append `\" -> \"` to the prefix in the constructor and here use this:\r\n```suggestion\r\n        wrapped.log(level, prefix + message);\r\n```", "bodyText": "This is a bit performance sensitive. Instead of a pattern we should append \" -> \" to the prefix in the constructor and here use this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    wrapped.log(level, String.format(PATTERN, prefix, message));\n          \n          \n            \n                    wrapped.log(level, prefix + message);", "bodyHTML": "<p dir=\"auto\">This is a bit performance sensitive. Instead of a pattern we should append <code>\" -&gt; \"</code> to the prefix in the constructor and here use this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        wrapped<span class=\"pl-k\">.</span>log(level, <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-c1 x\">PATTERN</span><span class=\"x x-last\">, </span>prefix<span class=\"x x-first x-last\">, </span>message<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        wrapped<span class=\"pl-k\">.</span>log(level, prefix<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>message);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-12-09T10:05:56Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {\n+\n+    private static final String PATTERN = \"%s -> %s\";\n+\n+    private final ILogger wrapped;\n+    private final String prefix;\n+\n+    public PrefixedLogger(ILogger wrapped, String prefix) {\n+        this.wrapped = wrapped;\n+        this.prefix = prefix;\n+    }\n+\n+    @Override\n+    public void log(Level level, String message) {\n+        wrapped.log(level, String.format(PATTERN, prefix, message));", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MzEyMg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539173122", "body": "```suggestion\r\n/**\r\n * A Logger implementation that wraps another Logger and prefixes all the\r\n * logged messages with a given prefix.\r\n */\r\npublic class PrefixedLogger extends AbstractLogger {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PrefixedLogger extends AbstractLogger {\n          \n          \n            \n            /**\n          \n          \n            \n             * A Logger implementation that wraps another Logger and prefixes all the\n          \n          \n            \n             * logged messages with a given prefix.\n          \n          \n            \n             */\n          \n          \n            \n            public class PrefixedLogger extends AbstractLogger {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">class</span><span class=\"x\"> </span><span class=\"pl-en x\">PrefixedLogger</span><span class=\"x\"> </span><span class=\"pl-k x\">extends</span><span class=\"x\"> </span><span class=\"pl-e x\">AbstractLogger</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c x x-first x-last\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> <span class=\"pl-smi\">Logger</span> implementation that wraps another <span class=\"pl-smi\">Logger</span> and prefixes all the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> logged messages with a given prefix.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">PrefixedLogger</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">AbstractLogger</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-12-09T10:06:42Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3NjA4Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539176087", "body": "Maybe the `->` part should not be hardcoded here but by the user of this class. This class would then have a very simple contract and be in some `util` package.", "bodyText": "Maybe the -> part should not be hardcoded here but by the user of this class. This class would then have a very simple contract and be in some util package.", "bodyHTML": "<p dir=\"auto\">Maybe the <code>-&gt;</code> part should not be hardcoded here but by the user of this class. This class would then have a very simple contract and be in some <code>util</code> package.</p>", "author": "viliam-durina", "createdAt": "2020-12-09T10:11:02Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {\n+\n+    private static final String PATTERN = \"%s -> %s\";", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NTE0OA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539185148", "body": "Previous code used `getLogger(getClass() + \".\" + toString())`. Now we use `context.logger()` which already contains vertex information, so we'll log the vertex information twice.", "bodyText": "Previous code used getLogger(getClass() + \".\" + toString()). Now we use context.logger() which already contains vertex information, so we'll log the vertex information twice.", "bodyHTML": "<p dir=\"auto\">Previous code used <code>getLogger(getClass() + \".\" + toString())</code>. Now we use <code>context.logger()</code> which already contains vertex information, so we'll log the vertex information twice.</p>", "author": "viliam-durina", "createdAt": "2020-12-09T10:24:12Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -172,7 +170,7 @@ public ProcessorTasklet(\n                                     .sorted(comparing(OutboundEdgeStream::ordinal))\n                                     .toArray(OutboundEdgeStream[]::new);\n         this.ssContext = ssContext;\n-        this.logger = getLogger(context);\n+        this.logger = new PrefixedLogger(context.logger(), toString());", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjIxNg==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539186216", "body": "We no longer need to sanitize the vertex name, now it's a part of the message, not of the logger name. \r\n\r\nSame on line 251, I can't comment there because it's not changed in this PR. We can also remove the `sanitizeLoggerNamePart()` method, we're no longer using any user input text in logger names anywhere.", "bodyText": "We no longer need to sanitize the vertex name, now it's a part of the message, not of the logger name.\nSame on line 251, I can't comment there because it's not changed in this PR. We can also remove the sanitizeLoggerNamePart() method, we're no longer using any user input text in logger names anywhere.", "bodyHTML": "<p dir=\"auto\">We no longer need to sanitize the vertex name, now it's a part of the message, not of the logger name.</p>\n<p dir=\"auto\">Same on line 251, I can't comment there because it's not changed in this PR. We can also remove the <code>sanitizeLoggerNamePart()</code> method, we're no longer using any user input text in logger names anywhere.</p>", "author": "viliam-durina", "createdAt": "2020-12-09T10:25:40Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "diffHunk": "@@ -177,30 +178,31 @@ public void initialize(NodeEngine nodeEngine,\n             QueuedPipe<Object>[] snapshotQueues = new QueuedPipe[vertex.localParallelism()];\n             Arrays.setAll(snapshotQueues, i -> new OneToOneConcurrentArrayQueue<>(SNAPSHOT_QUEUE_SIZE));\n             ConcurrentConveyor<Object> ssConveyor = ConcurrentConveyor.concurrentConveyor(null, snapshotQueues);\n+            ILogger storeSnapShotLogger = new PrefixedLogger(\n+                    nodeEngine.getLogger(StoreSnapshotTasklet.class), sanitizeLoggerNamePart(vertex.name()));", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjgwMw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539186803", "body": "```suggestion\r\n            ILogger storeSnapshotLogger = new PrefixedLogger(\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ILogger storeSnapShotLogger = new PrefixedLogger(\n          \n          \n            \n                        ILogger storeSnapshotLogger = new PrefixedLogger(", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">ILogger</span> <span class=\"x x-first x-last\">storeSnapShotLogger</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PrefixedLogger</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">ILogger</span> <span class=\"x x-first x-last\">storeSnapshotLogger</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PrefixedLogger</span>(</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-12-09T10:26:34Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "diffHunk": "@@ -177,30 +178,31 @@ public void initialize(NodeEngine nodeEngine,\n             QueuedPipe<Object>[] snapshotQueues = new QueuedPipe[vertex.localParallelism()];\n             Arrays.setAll(snapshotQueues, i -> new OneToOneConcurrentArrayQueue<>(SNAPSHOT_QUEUE_SIZE));\n             ConcurrentConveyor<Object> ssConveyor = ConcurrentConveyor.concurrentConveyor(null, snapshotQueues);\n+            ILogger storeSnapShotLogger = new PrefixedLogger(", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4OTc0MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539189740", "body": "This would be easier to read:\r\n```suggestion\r\n            String prefix = vertex.getName() + \"#ProcessorMetaSupplier\";\r\n```", "bodyText": "This would be easier to read:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String prefix = String.format(\"%s#ProcessorMetaSupplier\", vertex.getName());\n          \n          \n            \n                        String prefix = vertex.getName() + \"#ProcessorMetaSupplier\";", "bodyHTML": "<p dir=\"auto\">This would be easier to read:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> prefix <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">%s</span>#ProcessorMetaSupplier<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\">, vertex</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getName())</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> prefix <span class=\"pl-k\">=</span> <span class=\"x x-first\">vertex</span><span class=\"pl-k x\">.</span><span class=\"x\">getName() </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>#ProcessorMetaSupplier<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-12-09T10:30:44Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlanBuilder.java", "diffHunk": "@@ -87,8 +88,8 @@ private ExecutionPlanBuilder() {\n                     e -> vertexIdMap.get(e.getSourceName()), isJobDistributed);\n             final List<EdgeDef> outbound = toEdgeDefs(dag.getOutboundEdges(vertex.getName()), defaultEdgeConfig,\n                     e -> vertexIdMap.get(e.getDestName()), isJobDistributed);\n-            final ILogger logger = nodeEngine.getLogger(String.format(\"%s.%s#ProcessorMetaSupplier\",\n-                    metaSupplier.getClass().getName(), vertex.getName()));\n+            String prefix = String.format(\"%s#ProcessorMetaSupplier\", vertex.getName());", "originalCommit": "cf477d4d5f759832d730f52860329a245000e88e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "534dc355783f2637a05e47caea2d057f107ef538", "url": "https://github.com/hazelcast/hazelcast-jet/commit/534dc355783f2637a05e47caea2d057f107ef538", "message": "use static loggers and log with prefixed", "committedDate": "2020-12-11T07:49:15Z", "type": "commit"}, {"oid": "ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "message": "unify logger prefixes", "committedDate": "2020-12-11T07:49:43Z", "type": "commit"}, {"oid": "ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "url": "https://github.com/hazelcast/hazelcast-jet/commit/ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "message": "unify logger prefixes", "committedDate": "2020-12-11T07:49:43Z", "type": "forcePushed"}, {"oid": "9798d35cf979ed4b8e4df5d7ee8b7b58c3c53d15", "url": "https://github.com/hazelcast/hazelcast-jet/commit/9798d35cf979ed4b8e4df5d7ee8b7b58c3c53d15", "message": "fix test", "committedDate": "2020-12-11T08:14:53Z", "type": "commit"}, {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "url": "https://github.com/hazelcast/hazelcast-jet/commit/4af19a74b108c0f7bc5794fd74cee68add91ce0f", "message": "checkstyle", "committedDate": "2020-12-11T08:35:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMTUxMQ==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543221511", "body": "The name is too generic for `Util`. Use `loggerPrefix` at least. Or maybe move them to the `PrefixedLogger`", "bodyText": "The name is too generic for Util. Use loggerPrefix at least. Or maybe move them to the PrefixedLogger", "bodyHTML": "<p dir=\"auto\">The name is too generic for <code>Util</code>. Use <code>loggerPrefix</code> at least. Or maybe move them to the <code>PrefixedLogger</code></p>", "author": "viliam-durina", "createdAt": "2020-12-15T10:23:38Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {", "originalCommit": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMzk2MA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543223960", "body": "The `jobName` is an identifier, don't trim it. If you name your job `myjob ` (with the trailing space), you need that trailing space when you do `JetInstance.getJob(\"myjob \")`. Even an empty job name is a valid job name.\r\n```suggestion\r\n        String jobIdentification = jobName != null ? jobName : idToString(jobId);\r\n```", "bodyText": "The jobName is an identifier, don't trim it. If you name your job myjob  (with the trailing space), you need that trailing space when you do JetInstance.getJob(\"myjob \"). Even an empty job name is a valid job name.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();\n          \n          \n            \n                    String jobIdentification = jobName != null ? jobName : idToString(jobId);", "bodyHTML": "<p dir=\"auto\">The <code>jobName</code> is an identifier, don't trim it. If you name your job <code>myjob </code> (with the trailing space), you need that trailing space when you do <code>JetInstance.getJob(\"myjob \")</code>. Even an empty job name is a valid job name.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> jobIdentification <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">StringUtil</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isNullOrEmptyAfterTrim(</span>jobName<span class=\"x x-first\">) </span><span class=\"pl-k x\">?</span><span class=\"x x-last\"> idToString(jobId)</span> <span class=\"pl-k\">:</span> <span class=\"x x-first\">jobName</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">trim(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> jobIdentification <span class=\"pl-k\">=</span> jobName<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x x-last\"> jobName</span> <span class=\"pl-k\">:</span> <span class=\"x x-first x-last\">idToString(jobId</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-12-15T10:26:49Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {\n+        String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();", "originalCommit": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyNTEzMA==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543225130", "body": "\"Identity\" means that it's a handle to something that's identified by it. This is more like \"discriminator\" or \"subclass\"", "bodyText": "\"Identity\" means that it's a handle to something that's identified by it. This is more like \"discriminator\" or \"subclass\"", "bodyHTML": "<p dir=\"auto\">\"Identity\" means that it's a handle to something that's identified by it. This is more like \"discriminator\" or \"subclass\"</p>", "author": "viliam-durina", "createdAt": "2020-12-15T10:28:30Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {", "originalCommit": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNzk2Nw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543237967", "body": "`identity` can be null", "bodyText": "identity can be null", "bodyHTML": "<p dir=\"auto\"><code>identity</code> can be null</p>", "author": "viliam-durina", "createdAt": "2020-12-15T10:47:18Z", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {\n+        String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();\n+        return jobIdentification + \"/\" + vertexName + (identity == null ? \"\" : '/' + identity);", "originalCommit": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3OTk0Mw==", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r544079943", "bodyText": "my mistake, it's ok", "author": "viliam-durina", "createdAt": "2020-12-16T07:46:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNzk2Nw=="}], "type": "inlineReview"}, {"oid": "88172dc1d425fdb76526e9fb4ded1c32e7317f9a", "url": "https://github.com/hazelcast/hazelcast-jet/commit/88172dc1d425fdb76526e9fb4ded1c32e7317f9a", "message": "Javadoc", "committedDate": "2020-12-15T19:17:03Z", "type": "commit"}, {"oid": "92188acbcaefcec2c37659cd8ca77674c4643986", "url": "https://github.com/hazelcast/hazelcast-jet/commit/92188acbcaefcec2c37659cd8ca77674c4643986", "message": "address comments", "committedDate": "2020-12-16T08:03:00Z", "type": "commit"}, {"oid": "02c96a4c3ceab53bc47cec4dcf0b23af090847ae", "url": "https://github.com/hazelcast/hazelcast-jet/commit/02c96a4c3ceab53bc47cec4dcf0b23af090847ae", "message": "merge master", "committedDate": "2020-12-16T08:09:04Z", "type": "commit"}, {"oid": "c047db2cb9dfdea0d7857ddfcff0cdb1a1111a6d", "url": "https://github.com/hazelcast/hazelcast-jet/commit/c047db2cb9dfdea0d7857ddfcff0cdb1a1111a6d", "message": "Fix test failure", "committedDate": "2020-12-16T09:36:12Z", "type": "commit"}]}