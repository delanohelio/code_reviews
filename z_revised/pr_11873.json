{
  "pr_number": 11873,
  "pr_title": "[BEAM-3489] DataflowRunner to read PubsubMessage if getNeedsMessageId is true",
  "pr_author": "thinhha",
  "pr_createdAt": "2020-05-31T12:15:39Z",
  "pr_url": "https://github.com/apache/beam/pull/11873",
  "timeline": [
    {
      "oid": "803d3ff9b35a5ebd17c5463718f79152c42c55a2",
      "url": "https://github.com/apache/beam/commit/803d3ff9b35a5ebd17c5463718f79152c42c55a2",
      "message": "DataflowRunner to read PubsubMessage if getNeedsMessageId is true",
      "committedDate": "2020-05-31T12:28:02Z",
      "type": "forcePushed"
    },
    {
      "oid": "5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6",
      "url": "https://github.com/apache/beam/commit/5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6",
      "message": "DataflowRunner to read PubsubMessage if getNeedsMessageId is true",
      "committedDate": "2020-05-31T12:31:07Z",
      "type": "commit"
    },
    {
      "oid": "5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6",
      "url": "https://github.com/apache/beam/commit/5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6",
      "message": "DataflowRunner to read PubsubMessage if getNeedsMessageId is true",
      "committedDate": "2020-05-31T12:31:07Z",
      "type": "forcePushed"
    },
    {
      "id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ==",
      "url": "https://github.com/apache/beam/pull/11873#discussion_r434188515",
      "body": "Minor suggestion:\r\n```suggestion\r\n      if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {\r\n```",
      "bodyText": "Minor suggestion:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {\n          \n          \n            \n                  if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {",
      "bodyHTML": "<p dir=\"auto\">Minor suggestion:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (overriddenTransform<span class=\"pl-k\">.</span>getNeedsAttributes() <span class=\"pl-k\">|</span> overriddenTransform<span class=\"pl-k\">.</span>getNeedsMessageId()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (overriddenTransform<span class=\"pl-k\">.</span>getNeedsAttributes() <span class=\"pl-k\">|<span class=\"x x-first x-last\">|</span></span> overriddenTransform<span class=\"pl-k\">.</span>getNeedsMessageId()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n",
      "author": "lukecwik",
      "createdAt": "2020-06-02T21:34:09Z",
      "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java",
      "diffHunk": "@@ -1353,14 +1353,14 @@ public void translate(StreamingPubsubIORead transform, TranslationContext contex\n             PropertyNames.PUBSUB_ID_ATTRIBUTE, overriddenTransform.getIdAttribute());\n       }\n       // In both cases, the transform needs to read PubsubMessage. However, in case it needs\n-      // the attributes, we supply an identity \"parse fn\" so the worker will read PubsubMessage's\n-      // from Windmill and simply pass them around; and in case it doesn't need attributes,\n-      // we're already implicitly using a \"Coder\" that interprets the data as a PubsubMessage's\n-      // payload.\n-      if (overriddenTransform.getNeedsAttributes()) {\n+      // the attributes or messageId, we supply an identity \"parse fn\" so the worker will\n+      // read PubsubMessage's from Windmill and simply pass them around; and in case it\n+      // doesn't need attributes, we're already implicitly using a \"Coder\" that interprets\n+      // the data as a PubsubMessage's payload.\n+      if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {",
      "originalCommit": "5f2c05f0883dcbdfb2cab8cb4ea141b9353017b6",
      "replyToReviewId": null,
      "replies": [
        {
          "id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NzAyNg==",
          "url": "https://github.com/apache/beam/pull/11873#discussion_r434197026",
          "bodyText": "Other then this change, this  looks good to me. We'll see what the tests have to say.",
          "author": "lukecwik",
          "createdAt": "2020-06-02T21:54:29Z",
          "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ=="
        }
      ],
      "type": "inlineReview",
      "revised_code": {
        "commit": "026cfe45dee318bbfff410362e6436a9203aae57",
        "changed_code": [
          {
            "header": "diff --git a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\nindex 528ae4fe8a..7135a576af 100644\n--- a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n+++ b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n",
            "chunk": "@@ -1357,7 +1357,7 @@ public class DataflowRunner extends PipelineRunner<DataflowPipelineJob> {\n       // read PubsubMessage's from Windmill and simply pass them around; and in case it\n       // doesn't need attributes, we're already implicitly using a \"Coder\" that interprets\n       // the data as a PubsubMessage's payload.\n-      if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {\n+      if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {\n         stepContext.addInput(\n                 PropertyNames.PUBSUB_SERIALIZED_ATTRIBUTES_FN,\n                 byteArrayToJsonString(serializeToByteArray(new IdentityMessageFn())));\n",
            "next_change": {
              "commit": "0d0286f5b53900055d1834883f4162fd189c09fc",
              "changed_code": [
                {
                  "header": "diff --git a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\nindex 7135a576af..38d88e3d1d 100644\n--- a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n+++ b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/DataflowRunner.java\n",
                  "chunk": "@@ -1359,8 +1359,8 @@ public class DataflowRunner extends PipelineRunner<DataflowPipelineJob> {\n       // the data as a PubsubMessage's payload.\n       if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {\n         stepContext.addInput(\n-                PropertyNames.PUBSUB_SERIALIZED_ATTRIBUTES_FN,\n-                byteArrayToJsonString(serializeToByteArray(new IdentityMessageFn())));\n+            PropertyNames.PUBSUB_SERIALIZED_ATTRIBUTES_FN,\n+            byteArrayToJsonString(serializeToByteArray(new IdentityMessageFn())));\n       }\n       stepContext.addOutput(PropertyNames.OUTPUT, context.getOutput(transform));\n     }\n",
                  "next_change": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "oid": "026cfe45dee318bbfff410362e6436a9203aae57",
      "url": "https://github.com/apache/beam/commit/026cfe45dee318bbfff410362e6436a9203aae57",
      "message": "changed | to ||",
      "committedDate": "2020-06-03T18:26:23Z",
      "type": "commit"
    },
    {
      "oid": "0d0286f5b53900055d1834883f4162fd189c09fc",
      "url": "https://github.com/apache/beam/commit/0d0286f5b53900055d1834883f4162fd189c09fc",
      "message": "spotless apply",
      "committedDate": "2020-06-13T08:03:10Z",
      "type": "commit"
    }
  ]
}