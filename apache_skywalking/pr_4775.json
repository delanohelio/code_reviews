{"pr_number": 4775, "pr_title": "Support regex to include or exclude the names in alarm module", "pr_author": "mrproliu", "pr_createdAt": "2020-05-11T15:34:47Z", "pr_url": "https://github.com/apache/skywalking/pull/4775", "timeline": [{"oid": "42ef0d03ee5fca5dc7b5ade3314304df80963624", "url": "https://github.com/apache/skywalking/commit/42ef0d03ee5fca5dc7b5ade3314304df80963624", "message": "Support regex to include or exclude the names", "committedDate": "2020-05-11T15:30:46Z", "type": "commit"}, {"oid": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2", "url": "https://github.com/apache/skywalking/commit/0f6282a0a8be6139c26fc962d3d071e174e2d7a2", "message": "Merge branch 'master' into alarm-support-regex-filter", "committedDate": "2020-05-11T15:55:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NTgzNg==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423145836", "body": "```suggestion\r\n                    log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);\n          \n          \n            \n                                log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} <span class=\"x x-first x-last\">isn</span>'t <span class=\"x x-first x-last\">matches</span> include regex {}<span class=\"pl-pds\">\"</span></span>, meta<span class=\"pl-k\">.</span>getName(), includeNamesRegex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} <span class=\"x x-first x-last\">doesn</span>'t <span class=\"x x-first x-last\">match the</span> include regex {}<span class=\"pl-pds\">\"</span></span>, meta<span class=\"pl-k\">.</span>getName(), includeNamesRegex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kezhenxu94", "createdAt": "2020-05-11T15:59:34Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);", "originalCommit": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NjgyNw==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r423146827", "body": "```suggestion\r\n                    log.trace(\"{} matches the exclude regex {}\", meta.getName(), excludeNamesRegex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"{} is matches exclude regex {}\", meta.getName(), excludeNamesRegex);\n          \n          \n            \n                                log.trace(\"{} matches the exclude regex {}\", meta.getName(), excludeNamesRegex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} <span class=\"x x-first x-last\">is </span>matches exclude regex {}<span class=\"pl-pds\">\"</span></span>, meta<span class=\"pl-k\">.</span>getName(), excludeNamesRegex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} matches<span class=\"x x-first x-last\"> the</span> exclude regex {}<span class=\"pl-pds\">\"</span></span>, meta<span class=\"pl-k\">.</span>getName(), excludeNamesRegex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kezhenxu94", "createdAt": "2020-05-11T16:00:55Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} isn't matches include regex {}\", meta.getName(), includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (StringUtil.isNotEmpty(excludeNamesRegex)) {\n+            if (meta.getName().matches(excludeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} is matches exclude regex {}\", meta.getName(), excludeNamesRegex);", "originalCommit": "0f6282a0a8be6139c26fc962d3d071e174e2d7a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47b4114b62fdf14c9189ac6ba773e27ef4f16c47", "url": "https://github.com/apache/skywalking/commit/47b4114b62fdf14c9189ac6ba773e27ef4f16c47", "message": "resolve issues", "committedDate": "2020-05-12T14:34:34Z", "type": "commit"}, {"oid": "bfd22cf399eeadac3a092fd81116eac3934395eb", "url": "https://github.com/apache/skywalking/commit/bfd22cf399eeadac3a092fd81116eac3934395eb", "message": "Merge branch 'master' into alarm-support-regex-filter", "committedDate": "2020-05-12T14:37:29Z", "type": "commit"}, {"oid": "8aeaad04356788560fd9d93a68f66154eb198ed4", "url": "https://github.com/apache/skywalking/commit/8aeaad04356788560fd9d93a68f66154eb198ed4", "message": "Merge branch 'master' into alarm-support-regex-filter", "committedDate": "2020-05-12T15:23:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzOTY5MA==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424139690", "body": "This string#matches includes `Pattern p = Pattern.compile(regex)`, due to we have the regex expression before all checked, I think we should compile them first when loading the config or config changed.\r\n\r\nCould you run a benchmark to show the performance difference between this and the pre-compiled match?", "bodyText": "This string#matches includes Pattern p = Pattern.compile(regex), due to we have the regex expression before all checked, I think we should compile them first when loading the config or config changed.\nCould you run a benchmark to show the performance difference between this and the pre-compiled match?", "bodyHTML": "<p dir=\"auto\">This string#matches includes <code>Pattern p = Pattern.compile(regex)</code>, due to we have the regex expression before all checked, I think we should compile them first when loading the config or config changed.</p>\n<p dir=\"auto\">Could you run a benchmark to show the performance difference between this and the pre-compiled match?</p>", "author": "wu-sheng", "createdAt": "2020-05-13T02:34:44Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -115,6 +121,24 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             }\n         }\n \n+        if (StringUtil.isNotEmpty(includeNamesRegex)) {\n+            if (!meta.getName().matches(includeNamesRegex)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", meta.getName(), includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (StringUtil.isNotEmpty(excludeNamesRegex)) {\n+            if (meta.getName().matches(excludeNamesRegex)) {", "originalCommit": "8aeaad04356788560fd9d93a68f66154eb198ed4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NDA4MA==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424174080", "bodyText": "I do a little benchmark, using regex Service\\_\\d+ to match Service_1, make a loop with 10 million times.\nString#matches: 7198 millisecond\nPattern#matcher()#matches(): 977 millisecond\nI will change to using the pre-build mode, thanks.", "author": "mrproliu", "createdAt": "2020-05-13T05:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzOTY5MA=="}], "type": "inlineReview"}, {"oid": "7b7bd3af4b5e5a286ce0239ebfd816fe8b55834d", "url": "https://github.com/apache/skywalking/commit/7b7bd3af4b5e5a286ce0239ebfd816fe8b55834d", "message": "using pre-build mode with regex patten", "committedDate": "2020-05-13T05:11:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMTMwNQ==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424201305", "body": "Just a reminder, as we are using JDK8+, Optional could replace all these `!=null`. But both of these styles exist today. So, don't require change, anyway.", "bodyText": "Just a reminder, as we are using JDK8+, Optional could replace all these !=null. But both of these styles exist today. So, don't require change, anyway.", "bodyHTML": "<p dir=\"auto\">Just a reminder, as we are using JDK8+, Optional could replace all these <code>!=null</code>. But both of these styles exist today. So, don't require change, anyway.</p>", "author": "wu-sheng", "createdAt": "2020-05-13T06:31:56Z", "path": "oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RunningRule.java", "diffHunk": "@@ -97,19 +106,38 @@ public void in(MetaInAlarm meta, Metrics metrics) {\n             return;\n         }\n \n+        final String metaName = meta.getName();\n         if (CollectionUtils.isNotEmpty(includeNames)) {\n-            if (!includeNames.contains(meta.getName())) {\n+            if (!includeNames.contains(metaName)) {\n                 if (log.isTraceEnabled()) {\n-                    log.trace(\"{} isn't in the including list {}\", meta.getName(), includeNames);\n+                    log.trace(\"{} isn't in the including list {}\", metaName, includeNames);\n                 }\n                 return;\n             }\n         }\n \n         if (CollectionUtils.isNotEmpty(excludeNames)) {\n-            if (excludeNames.contains(meta.getName())) {\n+            if (excludeNames.contains(metaName)) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} is in the excluding list {}\", metaName, excludeNames);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (includeNamesRegex != null) {\n+            if (!includeNamesRegex.matcher(metaName).matches()) {\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"{} doesn't match the include regex {}\", metaName, includeNamesRegex);\n+                }\n+                return;\n+            }\n+        }\n+\n+        if (excludeNamesRegex != null) {", "originalCommit": "7b7bd3af4b5e5a286ce0239ebfd816fe8b55834d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwNjI3MA==", "url": "https://github.com/apache/skywalking/pull/4775#discussion_r424206270", "bodyText": "Thanks, I will change to this way since next PR.", "author": "mrproliu", "createdAt": "2020-05-13T06:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIwMTMwNQ=="}], "type": "inlineReview"}]}