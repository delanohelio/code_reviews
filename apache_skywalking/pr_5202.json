{"pr_number": 5202, "pr_title": "Query all of labels once selected labels condition is absent.", "pr_author": "hanahmily", "pr_createdAt": "2020-07-29T14:46:18Z", "pr_url": "https://github.com/apache/skywalking/pull/5202", "timeline": [{"oid": "e35868394e1d2caee27051e1a629115f6c808734", "url": "https://github.com/apache/skywalking/commit/e35868394e1d2caee27051e1a629115f6c808734", "message": "Query all of labels once selected labels condition is absent.", "committedDate": "2020-07-29T14:42:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzk4NQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462363985", "body": "Others are `HashMap`, this is `LinkedHashMap`. Why?", "bodyText": "Others are HashMap, this is LinkedHashMap. Why?", "bodyHTML": "<p dir=\"auto\">Others are <code>HashMap</code>, this is <code>LinkedHashMap</code>. Why?</p>", "author": "wu-sheng", "createdAt": "2020-07-29T14:55:33Z", "path": "oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/MetricsQueryEsDAO.java", "diffHunk": "@@ -138,42 +139,12 @@ public MetricsValues readMetricsValues(final MetricsCondition condition,\n         });\n \n         SearchResponse response = getClient().ids(condition.getName(), ids.toArray(new String[0]));\n-        Map<String, Map<String, Object>> idMap = toMap(response);\n-\n-        Map<String, MetricsValues> labeledValues = new HashMap<>(labels.size());\n-        labels.forEach(label -> {\n-            MetricsValues labelValue = new MetricsValues();\n-            labelValue.setLabel(label);\n-\n-            labeledValues.put(label, labelValue);\n-        });\n-\n-        final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n-        for (String id : ids) {\n-            if (idMap.containsKey(id)) {\n-                Map<String, Object> source = idMap.get(id);\n-                DataTable multipleValues = new DataTable((String) source.getOrDefault(valueColumnName, \"\"));\n-\n-                labels.forEach(label -> {\n-                    final IntValues values = labeledValues.get(label).getValues();\n-                    Long data = multipleValues.get(label);\n-                    if (data == null) {\n-                        data = (long) defaultValue;\n-                    }\n-                    KVInt kv = new KVInt();\n-                    kv.setId(id);\n-                    kv.setValue(data);\n-                    values.addKVInt(kv);\n-                });\n-            }\n-\n+        Map<String, DataTable> idMap = new LinkedHashMap<>();", "originalCommit": "e35868394e1d2caee27051e1a629115f6c808734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NzUxOQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466067519", "bodyText": "by mistake.", "author": "hanahmily", "createdAt": "2020-08-05T23:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MTA1MQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466481051", "bodyText": "done", "author": "hanahmily", "createdAt": "2020-08-06T15:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mzk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462367464", "body": "I feel like you should just copy the old codes rather than re-implement. ", "bodyText": "I feel like you should just copy the old codes rather than re-implement.", "bodyHTML": "<p dir=\"auto\">I feel like you should just copy the old codes rather than re-implement.</p>", "author": "wu-sheng", "createdAt": "2020-07-29T15:00:05Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,45 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());", "originalCommit": "e35868394e1d2caee27051e1a629115f6c808734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2ODg0Mw==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462368843", "bodyText": "Once you have the allLabels, copying is a safer way. This re-implementation is hard to be reviewed.", "author": "wu-sheng", "createdAt": "2020-07-29T15:01:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2OTUxOA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462369518", "bodyText": "Could you revert them? Is there any block there?", "author": "wu-sheng", "createdAt": "2020-07-29T15:02:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NjYzOQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466066639", "bodyText": "I used to follow copy and past strategy but found it would bring more mess more than what I expect. Unlike Es, H2 and Influxdb don't fetch all data before composing the final result object. That causes I have to tweak the current algorithm unavoidably. Future more, there are too many iterations that bring some performance concerns, I want to optimize it in the new implement.", "author": "hanahmily", "createdAt": "2020-08-05T23:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2Njg1Nw==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466066857", "bodyText": "I agree with that lamda is too hard to review. I'd like to improve it with other code styles.", "author": "hanahmily", "createdAt": "2020-08-05T23:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NzMyMw==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466067323", "bodyText": "And I also add a unit test case to help define the behavior of this function. Please review it to check if it cover the main scope.", "author": "hanahmily", "createdAt": "2020-08-05T23:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MTUyNw==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466481527", "bodyText": "Updated, open a new thread for review if necessary.", "author": "hanahmily", "createdAt": "2020-08-06T15:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzU4Ng==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r462367586", "body": "Why `orElse(0L)`?", "bodyText": "Why orElse(0L)?", "bodyHTML": "<p dir=\"auto\">Why <code>orElse(0L)</code>?</p>", "author": "wu-sheng", "createdAt": "2020-07-29T15:00:15Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,45 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            return allLabels.stream()\n+                .flatMap(label -> ids.stream()\n+                    .map(id -> Tuple.of(\n+                        label,\n+                        id,\n+                        Optional.ofNullable(idMap.getOrDefault(id, new DataTable()).get(label)).orElse(0L))))", "originalCommit": "e35868394e1d2caee27051e1a629115f6c808734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NzQ0MA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466067440", "bodyText": "I should be defaultValue.", "author": "hanahmily", "createdAt": "2020-08-05T23:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4MDkzMA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466480930", "bodyText": "done", "author": "hanahmily", "createdAt": "2020-08-06T15:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NzU4Ng=="}], "type": "inlineReview"}, {"oid": "534cff43f42abd8a067781859880397a0341f78b", "url": "https://github.com/apache/skywalking/commit/534cff43f42abd8a067781859880397a0341f78b", "message": "Merge branch 'master' into query-labeled", "committedDate": "2020-07-30T03:55:59Z", "type": "commit"}, {"oid": "f62b5c27f688ecaeb0b7f538f73c78b63007911c", "url": "https://github.com/apache/skywalking/commit/f62b5c27f688ecaeb0b7f538f73c78b63007911c", "message": "Merge branch 'master' into query-labeled", "committedDate": "2020-08-05T23:29:33Z", "type": "commit"}, {"oid": "cda6e2512c1eddfc5770784825ab989e449e86b1", "url": "https://github.com/apache/skywalking/commit/cda6e2512c1eddfc5770784825ab989e449e86b1", "message": "Polish codes\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>", "committedDate": "2020-08-06T15:05:07Z", "type": "commit"}, {"oid": "d44116af3d8fb39928a5066289c021e963654fed", "url": "https://github.com/apache/skywalking/commit/d44116af3d8fb39928a5066289c021e963654fed", "message": "Merge branch 'master' into query-labeled", "committedDate": "2020-08-06T15:06:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MjYyMA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466752620", "body": "According this the documents, this `#newTreeSet` is **deprecated**\r\n\r\n```\r\n   * <p><b>Note for Java 7 and later:</b> this method is now unnecessary and should be treated as\r\n   * deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new\r\n   * <a href=\"http://goo.gl/iz2Wi\">\"diamond\" syntax</a>.\r\n```", "bodyText": "According this the documents, this #newTreeSet is deprecated\n   * <p><b>Note for Java 7 and later:</b> this method is now unnecessary and should be treated as\n   * deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new\n   * <a href=\"http://goo.gl/iz2Wi\">\"diamond\" syntax</a>.", "bodyHTML": "<p dir=\"auto\">According this the documents, this <code>#newTreeSet</code> is <strong>deprecated</strong></p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   * &lt;p&gt;&lt;b&gt;Note for Java 7 and later:&lt;/b&gt; this method is now unnecessary and should be treated as\n   * deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new\n   * &lt;a href=&quot;http://goo.gl/iz2Wi&quot;&gt;&quot;diamond&quot; syntax&lt;/a&gt;.\n\"><pre><code>   * &lt;p&gt;&lt;b&gt;Note for Java 7 and later:&lt;/b&gt; this method is now unnecessary and should be treated as\n   * deprecated. Instead, use the {@code TreeSet} constructor directly, taking advantage of the new\n   * &lt;a href=\"http://goo.gl/iz2Wi\"&gt;\"diamond\" syntax&lt;/a&gt;.\n</code></pre></div>", "author": "wu-sheng", "createdAt": "2020-08-07T00:18:04Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()", "originalCommit": "d44116af3d8fb39928a5066289c021e963654fed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NDU0Ng==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r467454546", "bodyText": "done", "author": "hanahmily", "createdAt": "2020-08-08T11:11:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MjYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzI4Nw==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466753287", "body": "I think this nested expression should be better formated manually than IDE.\r\n```suggestion\r\n                    new LabeledValue(\r\n                        label, \r\n                        id, \r\n                        Optional.ofNullable(idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue)))\r\n                    )\r\n```", "bodyText": "I think this nested expression should be better formated manually than IDE.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new LabeledValue(label, id, Optional.ofNullable(\n          \n          \n            \n                                    idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))\n          \n          \n            \n                                new LabeledValue(\n          \n          \n            \n                                    label, \n          \n          \n            \n                                    id, \n          \n          \n            \n                                    Optional.ofNullable(idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue)))\n          \n          \n            \n                                )", "bodyHTML": "<p dir=\"auto\">I think this nested expression should be better formated manually than IDE.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LabeledValue</span>(label, id, <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        idMap<span class=\"pl-k\">.</span>getOrDefault(id, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataTable</span>())<span class=\"pl-k\">.</span>get(label))<span class=\"pl-k\">.</span>orElse((<span class=\"pl-k\">long</span>) defaultValue))))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LabeledValue</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        label, </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        id, </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable(idMap<span class=\"pl-k\">.</span>getOrDefault(id, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataTable</span>())<span class=\"pl-k\">.</span>get(label))<span class=\"pl-k\">.</span>orElse((<span class=\"pl-k\">long</span>) defaultValue)))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    )</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wu-sheng", "createdAt": "2020-08-07T00:20:40Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()\n+                .flatMap(label -> ids.stream().map(id ->\n+                    new LabeledValue(label, id, Optional.ofNullable(\n+                        idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))", "originalCommit": "d44116af3d8fb39928a5066289c021e963654fed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NDU3NQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r467454575", "bodyText": "done.", "author": "hanahmily", "createdAt": "2020-08-08T11:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzczOA==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r466753738", "body": "You are using `each.label.equals`, then `!Strings.isNullOrEmpty(current.getLabel())` isn't required, right?\r\n```suggestion\r\n                if (each.label.equals(current.getLabel())) {\r\n```\r\nOr you need to check `each.label != null`, from my understanding.", "bodyText": "You are using each.label.equals, then !Strings.isNullOrEmpty(current.getLabel()) isn't required, right?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!Strings.isNullOrEmpty(current.getLabel()) && each.label.equals(current.getLabel())) {\n          \n          \n            \n                            if (each.label.equals(current.getLabel())) {\n          \n      \n    \n    \n  \n\nOr you need to check each.label != null, from my understanding.", "bodyHTML": "<p dir=\"auto\">You are using <code>each.label.equals</code>, then <code>!Strings.isNullOrEmpty(current.getLabel())</code> isn't required, right?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (<span class=\"pl-k x x-first\">!</span><span class=\"pl-smi x\">Strings</span><span class=\"pl-k x\">.</span><span class=\"x\">isNullOrEmpty(current</span><span class=\"pl-k x\">.</span><span class=\"x\">getLabel()) </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span>each<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>equals(current<span class=\"pl-k\">.</span>getLabel())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (each<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>equals(current<span class=\"pl-k\">.</span>getLabel())) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Or you need to check <code>each.label != null</code>, from my understanding.</p>", "author": "wu-sheng", "createdAt": "2020-08-07T00:22:13Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/IMetricsQueryDAO.java", "diffHunk": "@@ -76,5 +87,54 @@ public static IntValues sortValues(IntValues origin, List<String> expectedOrder,\n             }\n             return origin;\n         }\n+\n+        /**\n+         * Compose the multiple metric result based on conditions.\n+         */\n+        public static List<MetricsValues> composeLabelValue(final MetricsCondition condition,\n+            final List<String> labels,\n+            final List<String> ids,\n+            final Map<String, DataTable> idMap) {\n+            List<String> allLabels;\n+            if (Objects.isNull(labels) || labels.size() < 1) {\n+                allLabels = idMap.values().stream()\n+                    .flatMap(dataTable -> dataTable.keys().stream())\n+                    .distinct().collect(Collectors.toList());\n+            } else {\n+                allLabels = labels;\n+            }\n+            final int defaultValue = ValueColumnMetadata.INSTANCE.getDefaultValue(condition.getName());\n+            List<LabeledValue> labeledValues = Sets.newTreeSet(allLabels).stream()\n+                .flatMap(label -> ids.stream().map(id ->\n+                    new LabeledValue(label, id, Optional.ofNullable(\n+                        idMap.getOrDefault(id, new DataTable()).get(label)).orElse((long) defaultValue))))\n+                .collect(toList());\n+            MetricsValues current = new MetricsValues();\n+            List<MetricsValues> result = new ArrayList<>();\n+            for (LabeledValue each : labeledValues) {\n+                if (!Strings.isNullOrEmpty(current.getLabel()) && each.label.equals(current.getLabel())) {", "originalCommit": "d44116af3d8fb39928a5066289c021e963654fed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NDYxMQ==", "url": "https://github.com/apache/skywalking/pull/5202#discussion_r467454611", "bodyText": "Objects.equals is a better choice.", "author": "hanahmily", "createdAt": "2020-08-08T11:12:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzczOA=="}], "type": "inlineReview"}, {"oid": "bcd7b997a2f324278b19a77a814a5c7cb7d6ffdd", "url": "https://github.com/apache/skywalking/commit/bcd7b997a2f324278b19a77a814a5c7cb7d6ffdd", "message": "Merge branch 'master' into query-labeled", "committedDate": "2020-08-08T11:02:38Z", "type": "commit"}, {"oid": "a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "url": "https://github.com/apache/skywalking/commit/a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "message": "Some nits\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>", "committedDate": "2020-08-08T11:11:09Z", "type": "commit"}, {"oid": "a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "url": "https://github.com/apache/skywalking/commit/a5564f8ca211aa39301fdb27bc5f2c99cee6abcd", "message": "Some nits\n\nSigned-off-by: Gao Hongtao <hanahmily@gmail.com>", "committedDate": "2020-08-08T11:11:09Z", "type": "forcePushed"}]}