{"pr_number": 4738, "pr_title": "Fix nested query and type conversion in MySQL, remove unused codes", "pr_author": "kezhenxu94", "pr_createdAt": "2020-05-03T10:18:44Z", "pr_url": "https://github.com/apache/skywalking/pull/4738", "timeline": [{"oid": "0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b", "url": "https://github.com/apache/skywalking/commit/0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b", "message": "Fix nested query and type conversion in MySQL, remove unused codes", "committedDate": "2020-05-03T10:17:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MTYzMg==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419081632", "body": "The codes below returns something like \"4010.00\" even if the value is a `bigint` in MySQL, causing `Long.parseLong` to throw exception\r\n\r\nhttps://github.com/apache/skywalking/blob/0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java#L82", "bodyText": "The codes below returns something like \"4010.00\" even if the value is a bigint in MySQL, causing Long.parseLong to throw exception\n\n  \n    \n      skywalking/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java\n    \n    \n         Line 82\n      in\n      0e4e4b8\n    \n    \n    \n    \n\n        \n          \n           topNEntity.setValue(resultSet.getString(\"value\"));", "bodyHTML": "<p dir=\"auto\">The codes below returns something like \"4010.00\" even if the value is a <code>bigint</code> in MySQL, causing <code>Long.parseLong</code> to throw exception</p>\n<p dir=\"auto\"><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/apache/skywalking/blob/0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java#L82\">skywalking/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 82\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/apache/skywalking/commit/0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b\">0e4e4b8</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> topNEntity<span class=\"pl-k\">.</span>setValue(resultSet<span class=\"pl-k\">.</span>getString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>)); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "kezhenxu94", "createdAt": "2020-05-03T10:20:40Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/type/TopNEntity.java", "diffHunk": "@@ -38,6 +38,6 @@ public TopNEntity() {\n     public TopNEntity(SelectedRecord record) {\n         this.name = record.getName();\n         this.id = record.getId();\n-        this.value = Long.parseLong(record.getValue());\n+        this.value = Double.valueOf(record.getValue()).longValue();", "originalCommit": "0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MTY3Mw==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419081673", "body": "MySQL needs an alias in nested query", "bodyText": "MySQL needs an alias in nested query", "bodyHTML": "<p dir=\"auto\">MySQL needs an alias in nested query</p>", "author": "kezhenxu94", "createdAt": "2020-05-03T10:20:59Z", "path": "oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java", "diffHunk": "@@ -68,7 +68,7 @@ public H2AggregationQueryDAO(JDBCHikariCPClient h2Client) {\n             });\n         }\n         sql.append(\" group by \").append(Metrics.ENTITY_ID);\n-        sql.append(\") order by value \")\n+        sql.append(\")  as T order by value \")", "originalCommit": "0e4e4b888f0f1edac5ab6ae5bef5e860aa14f20b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MjA1OA==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419082058", "bodyText": "Is alias Working in H2?", "author": "wu-sheng", "createdAt": "2020-05-03T10:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MTY3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNzU3MA==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419107570", "bodyText": "Is alias Working in H2?\n\nyes", "author": "kezhenxu94", "createdAt": "2020-05-03T13:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MTY3Mw=="}], "type": "inlineReview"}, {"oid": "ce423064287792385ca3cca8ef1d821b42581d66", "url": "https://github.com/apache/skywalking/commit/ce423064287792385ca3cca8ef1d821b42581d66", "message": "Merge branch 'master' into bugfix/mysql", "committedDate": "2020-05-03T10:22:00Z", "type": "commit"}, {"oid": "c4f1c4779126783b318daa42d83b598eb8404796", "url": "https://github.com/apache/skywalking/commit/c4f1c4779126783b318daa42d83b598eb8404796", "message": "Merge branch 'master' into bugfix/mysql", "committedDate": "2020-05-04T03:21:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNTUwMw==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419205503", "body": "Doesn't agent use this API, right?", "bodyText": "Doesn't agent use this API, right?", "bodyHTML": "<p dir=\"auto\">Doesn't agent use this API, right?</p>", "author": "wu-sheng", "createdAt": "2020-05-04T04:03:47Z", "path": "apm-commons/apm-datacarrier/src/main/java/org/apache/skywalking/apm/commons/datacarrier/consumer/ConsumerPoolFactory.java", "diffHunk": "@@ -48,43 +47,4 @@ public ConsumerPool get(String poolName) {\n         return pools.get(poolName);\n     }\n \n-    /**\n-     * Default pool provides the same capabilities as DataCarrier#consume(IConsumer, 1), which alloc one thread for one\n-     * DataCarrier.\n-     */\n-    public static final ConsumerPool DEFAULT_POOL = new ConsumerPool() {", "originalCommit": "c4f1c4779126783b318daa42d83b598eb8404796", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNDE4MA==", "url": "https://github.com/apache/skywalking/pull/4738#discussion_r419224180", "bodyText": "Doesn't agent use this API, right?\n\nYes, never used", "author": "kezhenxu94", "createdAt": "2020-05-04T05:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNTUwMw=="}], "type": "inlineReview"}]}