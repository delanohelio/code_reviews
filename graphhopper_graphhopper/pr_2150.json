{"pr_number": 2150, "pr_title": "Add Graph#getEdgeIteratorStateForKey(edgeKey) and edgeState.getEdgeKey()", "pr_author": "easbar", "pr_createdAt": "2020-10-05T17:57:21Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2150", "timeline": [{"oid": "91cd674aba52e8651c781c2568d01fb01b8690a8", "url": "https://github.com/graphhopper/graphhopper/commit/91cd674aba52e8651c781c2568d01fb01b8690a8", "message": "Add methods to obtain edge states by edge key", "committedDate": "2020-07-23T20:37:13Z", "type": "commit"}, {"oid": "89aecef3648cb245d34f144cd0c0f6c8a6fda2b0", "url": "https://github.com/graphhopper/graphhopper/commit/89aecef3648cb245d34f144cd0c0f6c8a6fda2b0", "message": "Always return storage direction for loops", "committedDate": "2020-07-24T14:49:34Z", "type": "commit"}, {"oid": "671c2e42dea64760046a3bc80acd8eea7140c54c", "url": "https://github.com/graphhopper/graphhopper/commit/671c2e42dea64760046a3bc80acd8eea7140c54c", "message": "Fix edge keys in case edges are stored the other way around", "committedDate": "2020-07-24T15:15:19Z", "type": "commit"}, {"oid": "e7706eabc3e89346c5b24cb546f993992dd0eb48", "url": "https://github.com/graphhopper/graphhopper/commit/e7706eabc3e89346c5b24cb546f993992dd0eb48", "message": "Merge branch 'master' into edge_by_key\n\n# Conflicts:\n#\tcore/src/test/java/com/graphhopper/routing/querygraph/QueryGraphTest.java", "committedDate": "2020-10-05T11:46:22Z", "type": "commit"}, {"oid": "e63c8cf9e13b1a916592f27bd6df55356ea40270", "url": "https://github.com/graphhopper/graphhopper/commit/e63c8cf9e13b1a916592f27bd6df55356ea40270", "message": "Fix merge conflicts", "committedDate": "2020-10-05T15:34:26Z", "type": "commit"}, {"oid": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "url": "https://github.com/graphhopper/graphhopper/commit/a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "message": "Clean-up and polish", "committedDate": "2020-10-05T17:21:47Z", "type": "commit"}, {"oid": "59eeabb70af694a2a55d2a8517aa12b8f811ffe1", "url": "https://github.com/graphhopper/graphhopper/commit/59eeabb70af694a2a55d2a8517aa12b8f811ffe1", "message": "Move comment", "committedDate": "2020-10-05T17:58:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NTI1MA==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499775250", "body": "Should we call it `getEdgeIteratorState(int)` instead?", "bodyText": "Should we call it getEdgeIteratorState(int) instead?", "bodyHTML": "<p dir=\"auto\">Should we call it <code>getEdgeIteratorState(int)</code> instead?</p>", "author": "easbar", "createdAt": "2020-10-05T17:59:10Z", "path": "core/src/main/java/com/graphhopper/storage/Graph.java", "diffHunk": "@@ -82,6 +82,13 @@\n      */\n     EdgeIteratorState getEdgeIteratorState(int edgeId, int adjNode);\n \n+    /**\n+     * Returns the edge state for the given edge key\n+     *\n+     * @see EdgeIteratorState#getEdgeKey()\n+     */\n+    EdgeIteratorState getEdgeIteratorStateForKey(int edgeKey);", "originalCommit": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjA2NA==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r500852064", "bodyText": "nope", "author": "easbar", "createdAt": "2020-10-07T09:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NTI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Njg3Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499776872", "body": "In #2146 we call this `int getEdgeKey(boolean reverse)`. I would argue that the edge state has only one edge key and reversing the key is out of its scope, so I left out the reverse parameter. The reverse key can be obtained using `GHUtility.getReverseKey(edgeState.getEdgeKey())`, which of course is a bit less comfortable, especially in cases like this:\r\n\r\n```java\r\nint key = edgeState.getEdgeKey();\r\nif (reverse)\r\n    key = GHUtility.getReverseKey(key);\r\n```\r\n\r\ncompared to:\r\n```\r\nint key = edgeState.getEdgeKey(reverse);\r\n```\r\n\r\nSo not sure...", "bodyText": "In #2146 we call this int getEdgeKey(boolean reverse). I would argue that the edge state has only one edge key and reversing the key is out of its scope, so I left out the reverse parameter. The reverse key can be obtained using GHUtility.getReverseKey(edgeState.getEdgeKey()), which of course is a bit less comfortable, especially in cases like this:\nint key = edgeState.getEdgeKey();\nif (reverse)\n    key = GHUtility.getReverseKey(key);\ncompared to:\nint key = edgeState.getEdgeKey(reverse);\n\nSo not sure...", "bodyHTML": "<p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"713650058\" data-permission-text=\"Title is private\" data-url=\"https://github.com/graphhopper/graphhopper/issues/2146\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/graphhopper/graphhopper/pull/2146/hovercard\" href=\"https://github.com/graphhopper/graphhopper/pull/2146\">#2146</a> we call this <code>int getEdgeKey(boolean reverse)</code>. I would argue that the edge state has only one edge key and reversing the key is out of its scope, so I left out the reverse parameter. The reverse key can be obtained using <code>GHUtility.getReverseKey(edgeState.getEdgeKey())</code>, which of course is a bit less comfortable, especially in cases like this:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"int key = edgeState.getEdgeKey();\nif (reverse)\n    key = GHUtility.getReverseKey(key);\"><pre><span class=\"pl-k\">int</span> key <span class=\"pl-k\">=</span> edgeState<span class=\"pl-k\">.</span>getEdgeKey();\n<span class=\"pl-k\">if</span> (reverse)\n    key <span class=\"pl-k\">=</span> <span class=\"pl-smi\">GHUtility</span><span class=\"pl-k\">.</span>getReverseKey(key);</pre></div>\n<p dir=\"auto\">compared to:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"int key = edgeState.getEdgeKey(reverse);\"><pre><code>int key = edgeState.getEdgeKey(reverse);\n</code></pre></div>\n<p dir=\"auto\">So not sure...</p>", "author": "easbar", "createdAt": "2020-10-05T18:02:12Z", "path": "core/src/main/java/com/graphhopper/util/EdgeIteratorState.java", "diffHunk": "@@ -73,6 +74,16 @@ public void setBool(boolean reverse, IntsRef ref, boolean value) {\n      */\n     int getEdge();\n \n+    /**\n+     * Returns the edge key of the current edge. The edge id can be derived from the edge key by calling\n+     * {@link GHUtility#getEdgeFromEdgeKey(int)}, but the edge key also contains information about the\n+     * direction of the edge. The edge key is even when the edge is oriented in storage direction and odd\n+     * otherwise. You can use the edge key to retrieve an edge state in the associated direction using\n+     * {@link Graph#getEdgeIteratorStateForKey(int)}. Loop edges are always returned in 'forward' direction even when\n+     * you use an odd edge key.\n+     */\n+    int getEdgeKey();", "originalCommit": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMjU3NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r500012575", "bodyText": "Oh yeah, excellent. I\u2018m not a fan of the (boolean reverse) parameter anywhere, I just kept to the convention. Let\u2018s drop it.", "author": "michaz", "createdAt": "2020-10-06T05:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Njg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1MjExNw==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r500452117", "bodyText": "Ok so we keep edgeState.getEdgeKey() here \ud83d\udc4d", "author": "easbar", "createdAt": "2020-10-06T16:54:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Njg3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NzM5OA==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r499777398", "body": "@michaz, can you check `WrapperGraph` here? I was not sure what is and what is not needed here.", "bodyText": "@michaz, can you check WrapperGraph here? I was not sure what is and what is not needed here.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/michaz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaz\">@michaz</a>, can you check <code>WrapperGraph</code> here? I was not sure what is and what is not needed here.</p>", "author": "easbar", "createdAt": "2020-10-05T18:03:12Z", "path": "reader-gtfs/src/main/java/com/graphhopper/gtfs/WrapperGraph.java", "diffHunk": "@@ -112,6 +112,12 @@ public EdgeIteratorState getEdgeIteratorState(int edgeId, int adjNode) {\n         }\n     }\n \n+    @Override\n+    public EdgeIteratorState getEdgeIteratorStateForKey(int edgeKey) {\n+        // todonow?", "originalCommit": "a425ed5b5237dd1410c3b6262f9db0dbe5d22537", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjMxMQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2150#discussion_r500852311", "bodyText": "postponed until we need this method", "author": "easbar", "createdAt": "2020-10-07T09:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NzM5OA=="}], "type": "inlineReview"}, {"oid": "fcd007950b8ff242a90c9d1836a2a09c001f7b78", "url": "https://github.com/graphhopper/graphhopper/commit/fcd007950b8ff242a90c9d1836a2a09c001f7b78", "message": "Merge branch 'master' into edge_by_key", "committedDate": "2020-10-05T18:55:53Z", "type": "commit"}, {"oid": "f46aeedcf1b931a13bdef82bf2e948104cfb2fca", "url": "https://github.com/graphhopper/graphhopper/commit/f46aeedcf1b931a13bdef82bf2e948104cfb2fca", "message": "Use getEdgeKey() for virtual edges", "committedDate": "2020-10-05T19:01:20Z", "type": "commit"}, {"oid": "a4748a9af31509dcdc80d0dcfbeee438da84709a", "url": "https://github.com/graphhopper/graphhopper/commit/a4748a9af31509dcdc80d0dcfbeee438da84709a", "message": "remove wrapper graph todos", "committedDate": "2020-10-07T09:00:50Z", "type": "commit"}]}