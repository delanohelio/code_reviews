{"pr_number": 5870, "pr_title": "Adding integration test for null handling from realtime source", "pr_author": "icefury71", "pr_createdAt": "2020-08-15T03:20:15Z", "pr_url": "https://github.com/apache/pinot/pull/5870", "timeline": [{"oid": "54aa86d7ba0e6a206bf473c788794d642df0d301", "url": "https://github.com/apache/pinot/commit/54aa86d7ba0e6a206bf473c788794d642df0d301", "message": "Adding integration test for null handling from realtime source", "committedDate": "2020-08-14T23:45:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3NDA2Nw==", "url": "https://github.com/apache/pinot/pull/5870#discussion_r471074067", "body": "```suggestion\r\n  public TableConfigBuilder setNullHandlingEnabled(boolean nullHandlingEnabled) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public TableConfigBuilder setNullHandlingEnabledConfig(boolean nullHandlingEnabled) {\n          \n          \n            \n              public TableConfigBuilder setNullHandlingEnabled(boolean nullHandlingEnabled) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">TableConfigBuilder</span> <span class=\"x x-first x-last\">setNullHandlingEnabledConfig</span>(<span class=\"pl-k\">boolean</span> nullHandlingEnabled) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">TableConfigBuilder</span> <span class=\"x x-first x-last\">setNullHandlingEnabled</span>(<span class=\"pl-k\">boolean</span> nullHandlingEnabled) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-08-16T06:47:41Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/utils/builder/TableConfigBuilder.java", "diffHunk": "@@ -255,6 +256,11 @@ public TableConfigBuilder setSegmentPartitionConfig(SegmentPartitionConfig segme\n     return this;\n   }\n \n+  public TableConfigBuilder setNullHandlingEnabledConfig(boolean nullHandlingEnabled) {", "originalCommit": "54aa86d7ba0e6a206bf473c788794d642df0d301", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3NDE5Ng==", "url": "https://github.com/apache/pinot/pull/5870#discussion_r471074196", "body": "(nit) Simplify into the same string?\r\n```suggestion\r\n    String query = \"SELECT count(*) FROM \" + getTableName();\r\n```", "bodyText": "(nit) Simplify into the same string?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String pqlQuery = \"SELECT count(*) FROM \" + getTableName();\n          \n          \n            \n                String sqlQuery = \"SELECT count(*) FROM \" + getTableName();\n          \n          \n            \n                String query = \"SELECT count(*) FROM \" + getTableName();", "bodyHTML": "<p dir=\"auto\">(nit) Simplify into the same string?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">String</span> pqlQuery <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SELECT count(*) FROM <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> getTableName();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">String</span> sqlQuery <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SELECT count(*) FROM <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> getTableName();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">String</span> query <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SELECT count(*) FROM <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> getTableName();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-08-16T06:49:24Z", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/NullHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.integration.tests;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.util.TestUtils;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import javax.annotation.Nullable;\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Random;\n+\n+\n+/**\n+ * Integration test that creates a Kafka broker, creates a Pinot cluster that consumes from Kafka and queries Pinot.\n+ * The data pushed to Kafka includes null values.\n+ */\n+public class NullHandlingIntegrationTest extends BaseClusterIntegrationTestSet {\n+\n+  @BeforeClass\n+  public void setUp()\n+      throws Exception {\n+    TestUtils.ensureDirectoriesExistAndEmpty(_tempDir);\n+\n+    // Start the Pinot cluster\n+    startZk();\n+    startController();\n+    startBroker();\n+    startServer();\n+\n+    // Start Kafka\n+    startKafka();\n+\n+    // Unpack the Avro files\n+    List<File> avroFiles = unpackAvroData(_tempDir);\n+\n+    // Create and upload the schema and table config\n+    addSchema(createSchema());\n+    addTableConfig(createRealtimeTableConfig(avroFiles.get(0)));\n+\n+    // Push data into Kafka\n+    pushAvroIntoKafka(avroFiles);\n+\n+    // Set up the H2 connection\n+    setUpH2Connection(avroFiles);\n+\n+    // Initialize the query generator\n+    setUpQueryGenerator(avroFiles);\n+\n+    // Wait for all documents loaded\n+    waitForAllDocsLoaded(10_000L);\n+  }\n+\n+  @Override\n+  protected String getAvroTarFileName() {\n+    return \"avro_data_with_nulls.tar.gz\";\n+  }\n+\n+  @Override\n+  protected String getSchemaFileName() {\n+    return \"test_null_handling.schema\";\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected String getSortedColumn() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getInvertedIndexColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getNoDictionaryColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getRangeIndexColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getBloomFilterColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected boolean getNullHandlingEnabledConfig() {\n+    return true;\n+  }\n+\n+  @Override\n+  protected long getCountStarResult() {\n+    return 100;\n+  }\n+\n+  @Test\n+  public void testTotalCount()\n+      throws Exception {\n+    String pqlQuery = \"SELECT count(*) FROM \" + getTableName();\n+    String sqlQuery = \"SELECT count(*) FROM \" + getTableName();", "originalCommit": "54aa86d7ba0e6a206bf473c788794d642df0d301", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3NDIzOA==", "url": "https://github.com/apache/pinot/pull/5870#discussion_r471074238", "body": "Remove this annotation", "bodyText": "Remove this annotation", "bodyHTML": "<p dir=\"auto\">Remove this annotation</p>", "author": "Jackie-Jiang", "createdAt": "2020-08-16T06:49:48Z", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTest.java", "diffHunk": "@@ -241,6 +242,11 @@ protected IngestionConfig getIngestionConfig() {\n     return null;\n   }\n \n+  @Nullable", "originalCommit": "54aa86d7ba0e6a206bf473c788794d642df0d301", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3NDMwOQ==", "url": "https://github.com/apache/pinot/pull/5870#discussion_r471074309", "body": "Remove this annotation", "bodyText": "Remove this annotation", "bodyHTML": "<p dir=\"auto\">Remove this annotation</p>", "author": "Jackie-Jiang", "createdAt": "2020-08-16T06:50:28Z", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/NullHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.integration.tests;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.pinot.util.TestUtils;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import javax.annotation.Nullable;\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Random;\n+\n+\n+/**\n+ * Integration test that creates a Kafka broker, creates a Pinot cluster that consumes from Kafka and queries Pinot.\n+ * The data pushed to Kafka includes null values.\n+ */\n+public class NullHandlingIntegrationTest extends BaseClusterIntegrationTestSet {\n+\n+  @BeforeClass\n+  public void setUp()\n+      throws Exception {\n+    TestUtils.ensureDirectoriesExistAndEmpty(_tempDir);\n+\n+    // Start the Pinot cluster\n+    startZk();\n+    startController();\n+    startBroker();\n+    startServer();\n+\n+    // Start Kafka\n+    startKafka();\n+\n+    // Unpack the Avro files\n+    List<File> avroFiles = unpackAvroData(_tempDir);\n+\n+    // Create and upload the schema and table config\n+    addSchema(createSchema());\n+    addTableConfig(createRealtimeTableConfig(avroFiles.get(0)));\n+\n+    // Push data into Kafka\n+    pushAvroIntoKafka(avroFiles);\n+\n+    // Set up the H2 connection\n+    setUpH2Connection(avroFiles);\n+\n+    // Initialize the query generator\n+    setUpQueryGenerator(avroFiles);\n+\n+    // Wait for all documents loaded\n+    waitForAllDocsLoaded(10_000L);\n+  }\n+\n+  @Override\n+  protected String getAvroTarFileName() {\n+    return \"avro_data_with_nulls.tar.gz\";\n+  }\n+\n+  @Override\n+  protected String getSchemaFileName() {\n+    return \"test_null_handling.schema\";\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected String getSortedColumn() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getInvertedIndexColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getNoDictionaryColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getRangeIndexColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable\n+  protected List<String> getBloomFilterColumns() {\n+    return null;\n+  }\n+\n+  @Override\n+  @Nullable", "originalCommit": "54aa86d7ba0e6a206bf473c788794d642df0d301", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ac673ceba3cb7ac409d822c5a2047e4567f80983", "url": "https://github.com/apache/pinot/commit/ac673ceba3cb7ac409d822c5a2047e4567f80983", "message": "Function name cosmetic changes\n\nCo-authored-by: Xiaotian (Jackie) Jiang <17555551+Jackie-Jiang@users.noreply.github.com>", "committedDate": "2020-08-16T23:38:31Z", "type": "commit"}, {"oid": "2166fa971a4d61eb8f84e10e9b02de30993c9dbb", "url": "https://github.com/apache/pinot/commit/2166fa971a4d61eb8f84e10e9b02de30993c9dbb", "message": "Addressing review comments", "committedDate": "2020-08-16T23:46:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY1MzI4Mg==", "url": "https://github.com/apache/pinot/pull/5870#discussion_r471653282", "body": "(nit) \r\n```suggestion\r\n  protected boolean getNullHandlingEnabled() {\r\n```", "bodyText": "(nit)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected boolean getNullHandlingEnabledConfig() {\n          \n          \n            \n              protected boolean getNullHandlingEnabled() {", "bodyHTML": "<p dir=\"auto\">(nit)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">getNullHandlingEnabledConfig</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">getNullHandlingEnabled</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-08-17T17:38:56Z", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/BaseClusterIntegrationTest.java", "diffHunk": "@@ -241,6 +242,10 @@ protected IngestionConfig getIngestionConfig() {\n     return null;\n   }\n \n+  protected boolean getNullHandlingEnabledConfig() {", "originalCommit": "2166fa971a4d61eb8f84e10e9b02de30993c9dbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d77e03a4fc2441f5ddc28e63e4ee3abaa666465a", "url": "https://github.com/apache/pinot/commit/d77e03a4fc2441f5ddc28e63e4ee3abaa666465a", "message": "Cosmetic change: updating function name", "committedDate": "2020-08-17T17:41:27Z", "type": "commit"}]}