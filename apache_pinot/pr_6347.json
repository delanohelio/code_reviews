{"pr_number": 6347, "pr_title": "Adding json path functions to extract values from json object", "pr_author": "xiangfu0", "pr_createdAt": "2020-12-11T17:20:39Z", "pr_url": "https://github.com/apache/pinot/pull/6347", "timeline": [{"oid": "b671689734f81748a4dff8955802ff4e8b1d7292", "url": "https://github.com/apache/pinot/commit/b671689734f81748a4dff8955802ff4e8b1d7292", "message": "Adding json path functions to extract values from json object", "committedDate": "2020-12-11T22:40:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NTY2Mw==", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541385663", "body": "```suggestion\r\n                    + \"' of the transform function must be present in the schema\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                + \"'of the transform function must be present in the schema\");\n          \n          \n            \n                                + \"' of the transform function must be present in the schema\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'of the transform function must be present in the schema<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'<span class=\"x x-first x-last\"> </span>of the transform function must be present in the schema<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-12-11T22:58:57Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -238,7 +238,8 @@ public static void validateIngestionConfig(TableConfig tableConfig, @Nullable Sc\n           String columnName = transformConfig.getColumnName();\n           if (schema != null) {\n             Preconditions.checkState(schema.getFieldSpecFor(columnName) != null,\n-                \"The destination column of the transform function must be present in the schema\");\n+                \"The destination column '\" + columnName\n+                    + \"'of the transform function must be present in the schema\");", "originalCommit": "b671689734f81748a4dff8955802ff4e8b1d7292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjU5Mw==", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541386593", "body": "return primitive long", "bodyText": "return primitive long", "bodyHTML": "<p dir=\"auto\">return primitive long</p>", "author": "Jackie-Jiang", "createdAt": "2020-12-11T23:01:39Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/scalar/JsonFunctions.java", "diffHunk": "@@ -56,4 +57,42 @@ public static String jsonFormat(Object object)\n       throws JsonProcessingException {\n     return JsonUtils.objectToString(object);\n   }\n+\n+  /**\n+   * Extract object based on Json path\n+   */\n+  @ScalarFunction\n+  public static Object jsonPath(Object object, String jsonPath) {\n+    if (object instanceof String) {\n+      return JsonPath.read((String) object, jsonPath);\n+    }\n+    return JsonPath.read(object, jsonPath);\n+  }\n+\n+  /**\n+   * Extract from Json with path to String\n+   */\n+  @ScalarFunction\n+  public static String jsonPathString(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return JsonUtils.objectToString(jsonPath(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Long\n+   */\n+  @ScalarFunction\n+  public static Long jsonPathLong(Object object, String jsonPath)", "originalCommit": "b671689734f81748a4dff8955802ff4e8b1d7292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NjYzNw==", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541386637", "body": "return primitive double", "bodyText": "return primitive double", "bodyHTML": "<p dir=\"auto\">return primitive double</p>", "author": "Jackie-Jiang", "createdAt": "2020-12-11T23:01:46Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/scalar/JsonFunctions.java", "diffHunk": "@@ -56,4 +57,42 @@ public static String jsonFormat(Object object)\n       throws JsonProcessingException {\n     return JsonUtils.objectToString(object);\n   }\n+\n+  /**\n+   * Extract object based on Json path\n+   */\n+  @ScalarFunction\n+  public static Object jsonPath(Object object, String jsonPath) {\n+    if (object instanceof String) {\n+      return JsonPath.read((String) object, jsonPath);\n+    }\n+    return JsonPath.read(object, jsonPath);\n+  }\n+\n+  /**\n+   * Extract from Json with path to String\n+   */\n+  @ScalarFunction\n+  public static String jsonPathString(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return JsonUtils.objectToString(jsonPath(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Long\n+   */\n+  @ScalarFunction\n+  public static Long jsonPathLong(Object object, String jsonPath)\n+      throws JsonProcessingException {\n+    return Long.parseLong(jsonPathString(object, jsonPath));\n+  }\n+\n+  /**\n+   * Extract from Json with path to Double\n+   */\n+  @ScalarFunction\n+  public static Double jsonPathDouble(Object object, String jsonPath)", "originalCommit": "b671689734f81748a4dff8955802ff4e8b1d7292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM4NzAwMw==", "url": "https://github.com/apache/pinot/pull/6347#discussion_r541387003", "body": "```suggestion\r\n    assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), 33500718L);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), Long.valueOf(33500718L));\n          \n          \n            \n                assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), 33500718L);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertEquals(<span class=\"pl-smi\">JsonFunctions</span><span class=\"pl-k\">.</span>jsonPathLong(jsonString, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$.actor.id<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-smi x x-first\">Long</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">valueOf(</span><span class=\"pl-c1\">33500718L</span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertEquals(<span class=\"pl-smi\">JsonFunctions</span><span class=\"pl-k\">.</span>jsonPathLong(jsonString, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$.actor.id<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">33500718L</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-12-11T23:02:19Z", "path": "pinot-common/src/test/java/org/apache/pinot/common/function/JsonFunctionsTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.common.function;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.jayway.jsonpath.JsonPath;\n+import org.apache.pinot.common.function.scalar.JsonFunctions;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+\n+public class JsonFunctionsTest {\n+\n+  @Test\n+  public void testJsonFunction()\n+      throws JsonProcessingException {\n+    String jsonString = \"{\" +\n+        \"  \\\"id\\\": \\\"7044885078\\\",\" +\n+        \"  \\\"type\\\": \\\"CreateEvent\\\",\" +\n+        \"  \\\"actor\\\": {\" +\n+        \"    \\\"id\\\": 33500718,\" +\n+        \"    \\\"login\\\": \\\"dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"display_login\\\": \\\"dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"gravatar_id\\\": \\\"\\\",\" +\n+        \"    \\\"url\\\": \\\"https://api.github.com/users/dipper-github-icn-bom-cdg\\\",\" +\n+        \"    \\\"avatar_url\\\": \\\"https://avatars.githubusercontent.com/u/33500718?\\\"\" +\n+        \"  },\" +\n+        \"  \\\"repo\\\": {\" +\n+        \"    \\\"id\\\": 112368043,\" +\n+        \"    \\\"name\\\": \\\"dipper-github-icn-bom-cdg/test-ruby-sample\\\",\" +\n+        \"    \\\"url\\\": \\\"https://api.github.com/repos/dipper-github-icn-bom-cdg/test-ruby-sample\\\"\" +\n+        \"  },\" +\n+        \"  \\\"payload\\\": {\" +\n+        \"    \\\"ref\\\": \\\"canary-test-7f3af0db-3ffa-4259-894f-950d2c76594b\\\",\" +\n+        \"    \\\"ref_type\\\": \\\"branch\\\",\" +\n+        \"    \\\"master_branch\\\": \\\"master\\\",\" +\n+        \"    \\\"description\\\": null,\" +\n+        \"    \\\"pusher_type\\\": \\\"user\\\"\" +\n+        \"  },\" +\n+        \"  \\\"public\\\": true,\" +\n+        \"  \\\"created_at\\\": \\\"2018-01-01T11:12:53Z\\\"\" +\n+        \"}\";\n+    assertEquals(JsonFunctions.jsonPathString(jsonString, \"$.actor.id\"), \"33500718\");\n+    assertEquals(JsonFunctions.jsonPathLong(jsonString, \"$.actor.id\"), Long.valueOf(33500718L));", "originalCommit": "b671689734f81748a4dff8955802ff4e8b1d7292", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f3dbfcaa193f46458ff61fdecc12f5345165ab04", "url": "https://github.com/apache/pinot/commit/f3dbfcaa193f46458ff61fdecc12f5345165ab04", "message": "Adding json path functions to extract values from json object", "committedDate": "2020-12-11T23:05:10Z", "type": "commit"}, {"oid": "f3dbfcaa193f46458ff61fdecc12f5345165ab04", "url": "https://github.com/apache/pinot/commit/f3dbfcaa193f46458ff61fdecc12f5345165ab04", "message": "Adding json path functions to extract values from json object", "committedDate": "2020-12-11T23:05:10Z", "type": "forcePushed"}]}