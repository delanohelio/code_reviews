{"pr_number": 5589, "pr_title": "Fix server log for execution stats", "pr_author": "siddharthteotia", "pr_createdAt": "2020-06-18T15:58:56Z", "pr_url": "https://github.com/apache/pinot/pull/5589", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzY1MQ==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442337651", "body": "There may be (are) scripts that use this log line to parse. Unless absolutely needed, let us not change the case for requestId?", "bodyText": "There may be (are) scripts that use this log line to parse. Unless absolutely needed, let us not change the case for requestId?", "bodyHTML": "<p dir=\"auto\">There may be (are) scripts that use this log line to parse. Unless absolutely needed, let us not change the case for requestId?</p>", "author": "mcvsubbu", "createdAt": "2020-06-18T16:03:56Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/scheduler/QueryScheduler.java", "diffHunk": "@@ -199,11 +199,13 @@ public void stop() {\n \n     if (queryLogRateLimiter.tryAcquire() || forceLog(schedulerWaitMs, numDocsScanned)) {\n       LOGGER.info(\n-          \"Processed requestId={},table={},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"\n-              + \"schedulerWaitMs={},totalExecMs={},totalTimeMs={},minConsumingFreshnessMs={},broker={},\"\n-              + \"numDocsScanned={},scanInFilter={},scanPostFilter={},sched={}\",\n-          requestId, tableNameWithType, numSegmentsQueried, numSegmentsProcessed, numSegmentsMatched,\n-          numSegmentsConsuming, schedulerWaitMs, timerContext.getPhaseDurationMs(ServerQueryPhase.QUERY_PROCESSING),\n+          \"Processed RequestId:{},table:{},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"", "originalCommit": "cdd443ab4df72e5f3d83de1a70525d3d75e4c71c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NDU2Mw==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442354563", "bodyText": "done", "author": "siddharthteotia", "createdAt": "2020-06-18T16:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzY1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzODU1NQ==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442338555", "body": "Can you add the new items at the end and not change the names of the variables? Is the changing of var names absolutely needed? \r\nIf we are trying to minimize the line length, another way of doing this will be to create a separate logger that outputs in binary, and provide a utility to read it?", "bodyText": "Can you add the new items at the end and not change the names of the variables? Is the changing of var names absolutely needed?\nIf we are trying to minimize the line length, another way of doing this will be to create a separate logger that outputs in binary, and provide a utility to read it?", "bodyHTML": "<p dir=\"auto\">Can you add the new items at the end and not change the names of the variables? Is the changing of var names absolutely needed?<br>\nIf we are trying to minimize the line length, another way of doing this will be to create a separate logger that outputs in binary, and provide a utility to read it?</p>", "author": "mcvsubbu", "createdAt": "2020-06-18T16:05:19Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/scheduler/QueryScheduler.java", "diffHunk": "@@ -199,11 +199,13 @@ public void stop() {\n \n     if (queryLogRateLimiter.tryAcquire() || forceLog(schedulerWaitMs, numDocsScanned)) {\n       LOGGER.info(\n-          \"Processed requestId={},table={},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"\n-              + \"schedulerWaitMs={},totalExecMs={},totalTimeMs={},minConsumingFreshnessMs={},broker={},\"\n-              + \"numDocsScanned={},scanInFilter={},scanPostFilter={},sched={}\",\n-          requestId, tableNameWithType, numSegmentsQueried, numSegmentsProcessed, numSegmentsMatched,\n-          numSegmentsConsuming, schedulerWaitMs, timerContext.getPhaseDurationMs(ServerQueryPhase.QUERY_PROCESSING),\n+          \"Processed RequestId:{},table:{},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"\n+              + \"schedulerWaitMs:{},reqDeserMs:{},totalExecMs:{},resSerMs:{},totalTimeMs:{},minConsumingFreshnessMs:{},broker:{},\"", "originalCommit": "cdd443ab4df72e5f3d83de1a70525d3d75e4c71c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1MTU4NQ==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442351585", "bodyText": "@mcvsubbu, I didn't change any variable names. Have just added request deserialization (reqDeserMs) and response serialization (resSerMs) times. Nothing else has changed", "author": "siddharthteotia", "createdAt": "2020-06-18T16:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzODU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1NTE3Ng==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442355176", "bodyText": "Also new items were not added at the end because I think it is better to keep the timing info together", "author": "siddharthteotia", "createdAt": "2020-06-18T16:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzODU1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM4MjEyNQ==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442382125", "bodyText": "let us stick to \"name1=value1,name2=value2,....\". (IOW comma-separtated name=value, no other spaces).\nMy bad when I wrote \"variables\". I meant item names. For some reason, I thought \"schedulerWaitMs\" was changed to \"sched\" May be I was mistaken.\nSorry to harp on this, but when we look through gazillion log lines scripts help if the format is uniform.", "author": "mcvsubbu", "createdAt": "2020-06-18T17:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzODU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyMzE5OA==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442423198", "body": "```suggestion\r\n      LOGGER.info(\"Processed requestId:{},table:{},segments(queried/processed/matched/consuming):{}/{}/{}/{},\"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOGGER.info(\"Processed requestId:{},table:{},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"\n          \n          \n            \n                  LOGGER.info(\"Processed requestId:{},table:{},segments(queried/processed/matched/consuming):{}/{}/{}/{},\"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Processed requestId:{},table:{},segments(queried/processed/matched/consuming)<span class=\"x x-first x-last\">=</span>{}/{}/{}/{},<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Processed requestId:{},table:{},segments(queried/processed/matched/consuming)<span class=\"x x-first x-last\">:</span>{}/{}/{}/{},<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-18T18:31:21Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/scheduler/QueryScheduler.java", "diffHunk": "@@ -198,12 +198,13 @@ public void stop() {\n     long schedulerWaitMs = timerContext.getPhaseDurationMs(ServerQueryPhase.SCHEDULER_WAIT);\n \n     if (queryLogRateLimiter.tryAcquire() || forceLog(schedulerWaitMs, numDocsScanned)) {\n-      LOGGER.info(\n-          \"Processed requestId={},table={},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"\n-              + \"schedulerWaitMs={},totalExecMs={},totalTimeMs={},minConsumingFreshnessMs={},broker={},\"\n-              + \"numDocsScanned={},scanInFilter={},scanPostFilter={},sched={}\",\n-          requestId, tableNameWithType, numSegmentsQueried, numSegmentsProcessed, numSegmentsMatched,\n-          numSegmentsConsuming, schedulerWaitMs, timerContext.getPhaseDurationMs(ServerQueryPhase.QUERY_PROCESSING),\n+      LOGGER.info(\"Processed requestId:{},table:{},segments(queried/processed/matched/consuming)={}/{}/{}/{},\"", "originalCommit": "e0236ebe210fe80a648f6a0ba0140babd75a43fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjE1OQ==", "url": "https://github.com/apache/pinot/pull/5589#discussion_r442522159", "bodyText": "\"=\" is better for parsing out since \":\" is also present in timestamps. Made this consistent with log in BaseBrokerRequestHandler", "author": "siddharthteotia", "createdAt": "2020-06-18T21:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyMzE5OA=="}], "type": "inlineReview"}, {"oid": "866dcb7a1bdf519600f562139443d409dfe368ac", "url": "https://github.com/apache/pinot/commit/866dcb7a1bdf519600f562139443d409dfe368ac", "message": "Fix server and broker log for execution stats", "committedDate": "2020-06-18T22:05:31Z", "type": "commit"}, {"oid": "866dcb7a1bdf519600f562139443d409dfe368ac", "url": "https://github.com/apache/pinot/commit/866dcb7a1bdf519600f562139443d409dfe368ac", "message": "Fix server and broker log for execution stats", "committedDate": "2020-06-18T22:05:31Z", "type": "forcePushed"}]}