{"pr_number": 5564, "pr_title": "Adding support to configure log2m value for hyperloglog", "pr_author": "xiangfu0", "pr_createdAt": "2020-06-14T12:42:36Z", "pr_url": "https://github.com/apache/pinot/pull/5564", "timeline": [{"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "url": "https://github.com/apache/pinot/commit/3799d93fa2595c01df4de2289e7c6cca65e2c1df", "message": "Adding support to configure log2m value for hyperloglog", "committedDate": "2020-06-14T13:38:11Z", "type": "commit"}, {"oid": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "url": "https://github.com/apache/pinot/commit/3799d93fa2595c01df4de2289e7c6cca65e2c1df", "message": "Adding support to configure log2m value for hyperloglog", "committedDate": "2020-06-14T13:38:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MDUzNg==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440340536", "body": "```suggestion\r\n        LOGGER.warn(\"Invalid config of '{}': '{}', using: {} as the default log2m for HyperLogLog\", Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M, log2mStr, CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.warn(\"Unable to set Log2M value {} for DistinctCountHLL function. {}\", log2mStr, e);\n          \n          \n            \n                    LOGGER.warn(\"Invalid config of '{}': '{}', using: {} as the default log2m for HyperLogLog\", Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M, log2mStr, CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Unable to set Log2M value </span>{} <span class=\"x x-first x-last\">for DistinctCountHLL function. {}</span><span class=\"pl-pds\">\"</span></span>, log2mStr, <span class=\"x x-first x-last\">e</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Invalid config of '{}': '{}', using: </span>{} <span class=\"x x-first x-last\">as the default log2m for HyperLogLog</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi x x-first\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M</span></span><span class=\"x x-last\">, </span>log2mStr, <span class=\"pl-smi x x-first\">CommonConstants</span><span class=\"pl-k x\">.</span><span class=\"pl-smi x\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">DEFAULT_HYPERLOGLOG_LOG2M</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:41:25Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "diffHunk": "@@ -191,11 +191,19 @@ public void start()\n         new HelixConfigScopeBuilder(HelixConfigScope.ConfigScopeProperty.CLUSTER).forCluster(_clusterName).build();\n     Map<String, String> configMap = configAccessor.get(helixConfigScope, Arrays\n         .asList(Helix.ENABLE_CASE_INSENSITIVE_KEY, Helix.DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY,\n-            Broker.CONFIG_OF_ENABLE_QUERY_LIMIT_OVERRIDE));\n+            Broker.CONFIG_OF_ENABLE_QUERY_LIMIT_OVERRIDE, Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M));\n     if (Boolean.parseBoolean(configMap.get(Helix.ENABLE_CASE_INSENSITIVE_KEY)) || Boolean\n         .parseBoolean(configMap.get(Helix.DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY))) {\n       _brokerConf.setProperty(Helix.ENABLE_CASE_INSENSITIVE_KEY, true);\n     }\n+    String log2mStr = configMap.get(Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M);\n+    if (log2mStr != null) {\n+      try {\n+        _brokerConf.setProperty(Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M, Integer.parseInt(log2mStr));\n+      } catch (NumberFormatException e) {\n+        LOGGER.warn(\"Unable to set Log2M value {} for DistinctCountHLL function. {}\", log2mStr, e);", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MTQxOA==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440341418", "body": "Rename to `_defaultHllLog2m`?", "bodyText": "Rename to _defaultHllLog2m?", "bodyHTML": "<p dir=\"auto\">Rename to <code>_defaultHllLog2m</code>?</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:43:07Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -112,6 +114,7 @@\n \n   private final boolean _enableCaseInsensitive;\n   private final boolean _enableQueryLimitOverride;\n+  private final int _hllLog2mOverride;", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0MTY1OQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440341659", "body": "_defaultHllLog2m = \r\n```suggestion\r\n    _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\r\n          CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\r\n```", "bodyText": "_defaultHllLog2m =\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (_config.containsKey(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M)) {\n          \n          \n            \n                  _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n          \n          \n            \n                      CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\n          \n          \n            \n                } else {\n          \n          \n            \n                  _hllLog2mOverride = -1;\n          \n          \n            \n                }\n          \n          \n            \n                _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n          \n          \n            \n                      CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);", "bodyHTML": "<p dir=\"auto\">_defaultHllLog2m =</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (_config<span class=\"pl-k\">.</span>containsKey(<span class=\"pl-smi\">CommonConstants</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      _hllLog2mOverride <span class=\"pl-k\">=</span> _config<span class=\"pl-k\">.</span>getInt(<span class=\"pl-smi\">CommonConstants</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">CommonConstants</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_HYPERLOGLOG_LOG2M</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      _hllLog2mOverride <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    _hllLog2mOverride <span class=\"pl-k\">=</span> _config<span class=\"pl-k\">.</span>getInt(<span class=\"pl-smi\">CommonConstants</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-smi\">CommonConstants</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Helix</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_HYPERLOGLOG_LOG2M</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:43:36Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -129,6 +132,12 @@ public BaseBrokerRequestHandler(Configuration config, RoutingManager routingMana\n     } else {\n       _tableCache = null;\n     }\n+    if (_config.containsKey(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M)) {\n+      _hllLog2mOverride = _config.getInt(CommonConstants.Helix.CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M,\n+          CommonConstants.Helix.DEFAULT_HYPERLOGLOG_LOG2M);\n+    } else {\n+      _hllLog2mOverride = -1;\n+    }", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mjc4OA==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440342788", "body": "Why do we need `brokerRequest.getSelections() != null` here? It will never be true for aggregation right?", "bodyText": "Why do we need brokerRequest.getSelections() != null here? It will never be true for aggregation right?", "bodyHTML": "<p dir=\"auto\">Why do we need <code>brokerRequest.getSelections() != null</code> here? It will never be true for aggregation right?</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:45:36Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxOTAxOQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440419019", "bodyText": "ah, it should be brokerRequest.getPinotQuery().getSelectList()", "author": "xiangfu0", "createdAt": "2020-06-15T20:10:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mjc4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mzg4NQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440343885", "body": "Please handle exception here, or switch on String instead of AggregationFunctionType", "bodyText": "Please handle exception here, or switch on String instead of AggregationFunctionType", "bodyHTML": "<p dir=\"auto\">Please handle exception here, or switch on String instead of AggregationFunctionType</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:47:40Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxOTcxOQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440419719", "bodyText": "will change to string then.", "author": "xiangfu0", "createdAt": "2020-06-15T20:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0Mzg4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NTcwOQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440345709", "body": "(nit) This check is redundant?", "bodyText": "(nit) This check is redundant?", "bodyHTML": "<p dir=\"auto\">(nit) This check is redundant?</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:51:00Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {\n+      for (Expression expr : brokerRequest.getPinotQuery().getSelectList()) {\n+        updateDistinctCountHllExpr(expr, hllLog2mOverride);\n+      }\n+    }\n+  }\n+\n+  private static void updateDistinctCountHllExpr(Expression expr, int hllLog2mOverride) {\n+    if (expr == null || expr.getFunctionCall() == null) {\n+      return;\n+    }\n+    Function functionCall = expr.getFunctionCall();\n+    try {\n+      switch (AggregationFunctionType.getAggregationFunctionType(functionCall.getOperator())) {\n+        case DISTINCTCOUNTHLL:\n+        case DISTINCTCOUNTHLLMV:\n+        case DISTINCTCOUNTRAWHLL:\n+        case DISTINCTCOUNTRAWHLLMV:\n+          if (functionCall.getOperandsSize() == 1) {\n+            functionCall.addToOperands(RequestUtils.getLiteralExpression(hllLog2mOverride));\n+          }\n+          return;\n+      }\n+    } catch (Exception e) {\n+      // Swallow exceptions\n+    }\n+    if (functionCall.getOperandsSize() > 0) {", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMDE1NA==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440420154", "bodyText": "just in case.", "author": "xiangfu0", "createdAt": "2020-06-15T20:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NTcwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjM3Ng==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440346376", "body": "`expr` can never be `null` here.\r\n```suggestion\r\n    Function functionCall = expr.getFunctionCall();\r\n    if (functionCall == null) {\r\n      return;\r\n    }\r\n```", "bodyText": "expr can never be null here.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (expr == null || expr.getFunctionCall() == null) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n                Function functionCall = expr.getFunctionCall();\n          \n          \n            \n                Function functionCall = expr.getFunctionCall();\n          \n          \n            \n                if (functionCall == null) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\"><code>expr</code> can never be <code>null</code> here.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (expr </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">||</span><span class=\"x x-last\"> </span>expr<span class=\"pl-k\">.</span>getFunctionCall()<span class=\"x x-first\"> </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first\">  </span><span class=\"pl-k x\">return</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi x x-first\">Function</span><span class=\"x\"> functionCall </span><span class=\"pl-k x\">=</span><span class=\"x\"> expr</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getFunctionCall();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi x x-first\">Function</span><span class=\"x\"> functionCall </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span>expr<span class=\"pl-k\">.</span>getFunctionCall()<span class=\"x x-first x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (functionCall </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"x x-first\">  </span><span class=\"pl-k x\">return</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:52:15Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/requesthandler/BaseBrokerRequestHandler.java", "diffHunk": "@@ -425,6 +437,58 @@ public BrokerResponse handleRequest(JsonNode request, @Nullable RequesterIdentit\n     return brokerResponse;\n   }\n \n+  /**\n+   * Set Log2m value for DistinctCountHLL Function\n+   * @param brokerRequest\n+   * @param hllLog2mOverride\n+   */\n+  static void handleHyperloglogLog2mOverride(BrokerRequest brokerRequest, int hllLog2mOverride) {\n+    if (brokerRequest.getAggregationsInfo() != null) {\n+      for (AggregationInfo aggregationInfo : brokerRequest.getAggregationsInfo()) {\n+        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {\n+          case DISTINCTCOUNTHLL:\n+          case DISTINCTCOUNTHLLMV:\n+          case DISTINCTCOUNTRAWHLL:\n+          case DISTINCTCOUNTRAWHLLMV:\n+            if (aggregationInfo.getExpressionsSize() == 1) {\n+              aggregationInfo.addToExpressions(Integer.toString(hllLog2mOverride));\n+            }\n+        }\n+      }\n+    }\n+    if (brokerRequest.getPinotQuery() != null && brokerRequest.getSelections() != null) {\n+      for (Expression expr : brokerRequest.getPinotQuery().getSelectList()) {\n+        updateDistinctCountHllExpr(expr, hllLog2mOverride);\n+      }\n+    }\n+  }\n+\n+  private static void updateDistinctCountHllExpr(Expression expr, int hllLog2mOverride) {\n+    if (expr == null || expr.getFunctionCall() == null) {\n+      return;\n+    }\n+    Function functionCall = expr.getFunctionCall();", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NjYxOQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440346619", "body": "```suggestion\r\n    public static final String DEFAULT_HYPERLOGLOG_LOG2M_KEY = \"default.hyperloglog.log2m\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M = \"default.hyperloglog.log2m\";\n          \n          \n            \n                public static final String DEFAULT_HYPERLOGLOG_LOG2M_KEY = \"default.hyperloglog.log2m\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default.hyperloglog.log2m<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">DEFAULT_HYPERLOGLOG_LOG2M_KEY</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default.hyperloglog.log2m<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:52:43Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/utils/CommonConstants.java", "diffHunk": "@@ -44,6 +44,9 @@\n     public static final String ENABLE_CASE_INSENSITIVE_KEY = \"enable.case.insensitive\";\n     public static final String DEPRECATED_ENABLE_CASE_INSENSITIVE_KEY = \"enable.case.insensitive.pql\";\n \n+    public static final String CONFIG_OF_DEFAULT_HYPERLOGLOG_LOG2M = \"default.hyperloglog.log2m\";", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NzMzMw==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440347333", "body": "```suggestion\r\n    Preconditions\r\n        .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: %s\",\r\n            numExpressions);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Preconditions\n          \n          \n            \n                    .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n          \n          \n            \n                        numExpressions);\n          \n          \n            \n                Preconditions\n          \n          \n            \n                    .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: %s\",\n          \n          \n            \n                        numExpressions);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">Preconditions</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"48\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .checkArgument(numExpressions <span class=\"pl-k\">&lt;=</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">&amp;&amp;</span> numExpressions <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DistinctCountHLL expects 1 or 2 arguments, got: <span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"49\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            numExpressions);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Preconditions</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"48\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .checkArgument(numExpressions <span class=\"pl-k\">&lt;=</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">&amp;&amp;</span> numExpressions <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DistinctCountHLL expects 1 or 2 arguments, got: <span class=\"x x-first x-last\">%s</span><span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"49\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            numExpressions);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:54:01Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;\n \n-  public DistinctCountHLLAggregationFunction(String column) {\n-    super(column);\n+  public DistinctCountHLLAggregationFunction(List<String> arguments) {\n+    super(arguments.get(0));\n+    int numExpressions = arguments.size();\n+    // This function expects 1 or 2 arguments.\n+    Preconditions\n+        .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n+            numExpressions);", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440348052", "body": "No need to replace single quote here", "bodyText": "No need to replace single quote here", "bodyHTML": "<p dir=\"auto\">No need to replace single quote here</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:55:18Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;\n \n-  public DistinctCountHLLAggregationFunction(String column) {\n-    super(column);\n+  public DistinctCountHLLAggregationFunction(List<String> arguments) {\n+    super(arguments.get(0));\n+    int numExpressions = arguments.size();\n+    // This function expects 1 or 2 arguments.\n+    Preconditions\n+        .checkArgument(numExpressions <= 2 && numExpressions >= 1, \"DistinctCountHLL expects 1 or 2 arguments, got: \",\n+            numExpressions);\n+    if (arguments.size() == 2) {\n+      _log2M = Integer.valueOf(arguments.get(1).replace(\"'\", \"\"));", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMTUxOA==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440421518", "bodyText": "Integer.valueOf(...) will throw exception on string \"'1'\"", "author": "xiangfu0", "createdAt": "2020-06-15T20:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4OTU0NQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440489545", "bodyText": "But why would someone put '1' here? In order to put '1' as the literal, you need to explicitly escape ' (i.e. DistinctCountHLL(column, '''1''')). Also, in that case we should fail the query because it is invalid.", "author": "Jackie-Jiang", "createdAt": "2020-06-15T22:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwMDAwMw==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440500003", "bodyText": "from sql side, we are still doing DistinctCountHLL(column, 1), this expression is parsed to long literal, then converted to string literal in BrokerRequest with single quotes.", "author": "xiangfu0", "createdAt": "2020-06-15T23:25:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwMjg3Mg==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440502872", "bodyText": "This doesn't seem right.. Can we add a TODO and fix it later?", "author": "Jackie-Jiang", "createdAt": "2020-06-15T23:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUwODYyNQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440508625", "bodyText": "Added comments.\nCurrently PinotQuery2BrokerRequestConverter enforces single quoted non-string literal in ParserUtils.standardizeExpression(...).", "author": "xiangfu0", "createdAt": "2020-06-15T23:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0ODQyOA==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440348428", "body": "(nit) Rename to `_log2m`?", "bodyText": "(nit) Rename to _log2m?", "bodyHTML": "<p dir=\"auto\">(nit) Rename to <code>_log2m</code>?</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:55:59Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;\n+  protected final int _log2M;", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTA1Mw==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440349053", "body": "Replace this with the one in `CommonConstants`?", "bodyText": "Replace this with the one in CommonConstants?", "bodyHTML": "<p dir=\"auto\">Replace this with the one in <code>CommonConstants</code>?</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:56:59Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -35,9 +36,20 @@\n \n public class DistinctCountHLLAggregationFunction extends BaseSingleInputAggregationFunction<HyperLogLog, Long> {\n   public static final int DEFAULT_LOG2M = 8;", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTQ2Mg==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440349462", "body": "You don't need to pass member variable `_log2M` to `getDefaultHyperLogLog()`, just remove the `static` should be good", "bodyText": "You don't need to pass member variable _log2M to getDefaultHyperLogLog(), just remove the static should be good", "bodyHTML": "<p dir=\"auto\">You don't need to pass member variable <code>_log2M</code> to <code>getDefaultHyperLogLog()</code>, just remove the <code>static</code> should be good</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:57:43Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLAggregationFunction.java", "diffHunk": "@@ -67,7 +79,7 @@ public void aggregate(int length, AggregationResultHolder aggregationResultHolde\n     DataType valueType = blockValSet.getValueType();\n \n     if (valueType != DataType.BYTES) {\n-      HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder);\n+      HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder, _log2M);", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MDA5OQ==", "url": "https://github.com/apache/pinot/pull/5564#discussion_r440350099", "body": "Same here, don't pass `_log2M`", "bodyText": "Same here, don't pass _log2M", "bodyHTML": "<p dir=\"auto\">Same here, don't pass <code>_log2M</code></p>", "author": "Jackie-Jiang", "createdAt": "2020-06-15T17:58:50Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountHLLMVAggregationFunction.java", "diffHunk": "@@ -47,7 +48,7 @@ public void accept(AggregationFunctionVisitorBase visitor) {\n   @Override\n   public void aggregate(int length, AggregationResultHolder aggregationResultHolder,\n       Map<TransformExpressionTree, BlockValSet> blockValSetMap) {\n-    HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder);\n+    HyperLogLog hyperLogLog = getDefaultHyperLogLog(aggregationResultHolder, _log2M);", "originalCommit": "3799d93fa2595c01df4de2289e7c6cca65e2c1df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "02f72472c78465ee3b535a1617ecf35b76e8e250", "url": "https://github.com/apache/pinot/commit/02f72472c78465ee3b535a1617ecf35b76e8e250", "message": "Adress comments", "committedDate": "2020-06-15T20:24:34Z", "type": "forcePushed"}, {"oid": "535d8c0a9c072c401ad41d3839b02625b8fc86bd", "url": "https://github.com/apache/pinot/commit/535d8c0a9c072c401ad41d3839b02625b8fc86bd", "message": "Adress comments", "committedDate": "2020-06-15T23:52:48Z", "type": "commit"}, {"oid": "535d8c0a9c072c401ad41d3839b02625b8fc86bd", "url": "https://github.com/apache/pinot/commit/535d8c0a9c072c401ad41d3839b02625b8fc86bd", "message": "Adress comments", "committedDate": "2020-06-15T23:52:48Z", "type": "forcePushed"}]}