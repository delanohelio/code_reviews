{"pr_number": 5575, "pr_title": "Function to round a time value", "pr_author": "npawar", "pr_createdAt": "2020-06-16T19:07:47Z", "pr_url": "https://github.com/apache/pinot/pull/5575", "timeline": [{"oid": "5affc1572e79d87d8cfe70255a27b20979d4f8f4", "url": "https://github.com/apache/pinot/commit/5affc1572e79d87d8cfe70255a27b20979d4f8f4", "message": "Function to round a time value", "committedDate": "2020-06-16T19:05:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw==", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441088077", "body": "Use `roundToNearest.longValue()` and cache it for performance concern.", "bodyText": "Use roundToNearest.longValue() and cache it for performance concern.", "bodyHTML": "<p dir=\"auto\">Use <code>roundToNearest.longValue()</code> and cache it for performance concern.</p>", "author": "Jackie-Jiang", "createdAt": "2020-06-16T19:22:10Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket\n+   */\n+  @ScalarFunction\n+  static Long round(Long timeValue, Number roundToNearest) {\n+    return (timeValue / roundToNearest.intValue()) * roundToNearest.intValue();", "originalCommit": "5affc1572e79d87d8cfe70255a27b20979d4f8f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDgwMw==", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441124803", "bodyText": "We apply this on the stream, which presumably has different input values coming in (e.g. millis). Not sure how we can cache it?", "author": "mcvsubbu", "createdAt": "2020-06-16T20:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNTA3NQ==", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441125075", "bodyText": "But using long is better, yes.", "author": "mcvsubbu", "createdAt": "2020-06-16T20:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNDUzNA==", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441134534", "bodyText": "changed to roundToNearest.longValue and cached it", "author": "npawar", "createdAt": "2020-06-16T20:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA4ODA3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDA4Nw==", "url": "https://github.com/apache/pinot/pull/5575#discussion_r441124087", "body": "```suggestion\r\n   * Round the given time value to nearest multiple\r\n   * @return the original value but rounded to the nearest multiple of @param roundToNearest\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Round the given time value to nearest rounding bucket\n          \n          \n            \n               * Round the given time value to nearest multiple\n          \n          \n            \n               * @return the original value but rounded to the nearest multiple of @param roundToNearest", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Round</span> the given time value to nearest <span class=\"x x-first x-last\">rounding bucket</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Round</span> the given time value to nearest <span class=\"x x-first x-last\">multiple</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> the original value but rounded to the nearest multiple of <span class=\"pl-k\">@param</span> roundToNearest</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mcvsubbu", "createdAt": "2020-06-16T20:32:01Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java", "diffHunk": "@@ -241,6 +241,15 @@ static Long fromDateTime(String dateTimeString, String pattern) {\n     return DateTimePatternHandler.parseDateTimeStringToEpochMillis(dateTimeString, pattern);\n   }\n \n+\n+  /**\n+   * Round the given time value to nearest rounding bucket", "originalCommit": "5affc1572e79d87d8cfe70255a27b20979d4f8f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "66f5a7e4c88e030828ed40890cceaa1ed5df76be", "url": "https://github.com/apache/pinot/commit/66f5a7e4c88e030828ed40890cceaa1ed5df76be", "message": "review comment", "committedDate": "2020-06-16T20:50:58Z", "type": "commit"}, {"oid": "f72d7eec5ceec6d106e0c4064cb30461b74322ff", "url": "https://github.com/apache/pinot/commit/f72d7eec5ceec6d106e0c4064cb30461b74322ff", "message": "Update pinot-common/src/main/java/org/apache/pinot/common/function/DateTimeFunctions.java\n\nCo-authored-by: Subbu Subramaniam <mcvsubbu@users.noreply.github.com>", "committedDate": "2020-06-16T20:51:59Z", "type": "commit"}]}