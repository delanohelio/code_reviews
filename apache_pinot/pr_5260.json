{"pr_number": 5260, "pr_title": "Add access control for Pinot server segment download api.", "pr_author": "chenboat", "pr_createdAt": "2020-04-16T06:34:58Z", "pr_url": "https://github.com/apache/pinot/pull/5260", "timeline": [{"oid": "5d7aa45909cf4f588c288590d0f390800dd0f854", "url": "https://github.com/apache/pinot/commit/5d7aa45909cf4f588c288590d0f390800dd0f854", "message": "Add access control for Pinot server segment download api.", "committedDate": "2020-04-16T06:32:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1OTk4Mw==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r409759983", "body": "```suggestion\r\n    LOGGER.info(\"Using class: {} as the AccessControlFactory\", accessControlFactoryClass);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOGGER.info(\"Use class: {} as the AccessControlFactory\", accessControlFactoryClass);\n          \n          \n            \n                LOGGER.info(\"Using class: {} as the AccessControlFactory\", accessControlFactoryClass);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Use</span> class: {} as the AccessControlFactory<span class=\"pl-pds\">\"</span></span>, accessControlFactoryClass);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Using</span> class: {} as the AccessControlFactory<span class=\"pl-pds\">\"</span></span>, accessControlFactoryClass);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mcvsubbu", "createdAt": "2020-04-16T18:21:44Z", "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -153,8 +154,18 @@ public HelixServerStarter(String helixClusterName, String zkAddress, Configurati\n     updateInstanceConfigIfNeeded(host, port);\n \n     // Start restlet server for admin API endpoint\n+    String accessControlFactoryClass =\n+        _serverConf.getString(ACCESS_CONTROL_FACTORY_CLASS, DEFAULT_ACCESS_CONTROL_FACTORY_CLASS);\n+    LOGGER.info(\"Use class: {} as the AccessControlFactory\", accessControlFactoryClass);", "originalCommit": "5d7aa45909cf4f588c288590d0f390800dd0f854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2NTgzMA==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r409765830", "body": "Please use `PluginManager.createInstance()` ", "bodyText": "Please use PluginManager.createInstance()", "bodyHTML": "<p dir=\"auto\">Please use <code>PluginManager.createInstance()</code></p>", "author": "mcvsubbu", "createdAt": "2020-04-16T18:31:55Z", "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -153,8 +154,18 @@ public HelixServerStarter(String helixClusterName, String zkAddress, Configurati\n     updateInstanceConfigIfNeeded(host, port);\n \n     // Start restlet server for admin API endpoint\n+    String accessControlFactoryClass =\n+        _serverConf.getString(ACCESS_CONTROL_FACTORY_CLASS, DEFAULT_ACCESS_CONTROL_FACTORY_CLASS);\n+    LOGGER.info(\"Use class: {} as the AccessControlFactory\", accessControlFactoryClass);\n+    final AccessControlFactory accessControlFactory;\n+    try {\n+      accessControlFactory = (AccessControlFactory) Class.forName(accessControlFactoryClass).newInstance();", "originalCommit": "5d7aa45909cf4f588c288590d0f390800dd0f854", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2NjA3OA==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r409766078", "body": "Include class name in the exception string", "bodyText": "Include class name in the exception string", "bodyHTML": "<p dir=\"auto\">Include class name in the exception string</p>", "author": "mcvsubbu", "createdAt": "2020-04-16T18:32:20Z", "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -153,8 +154,18 @@ public HelixServerStarter(String helixClusterName, String zkAddress, Configurati\n     updateInstanceConfigIfNeeded(host, port);\n \n     // Start restlet server for admin API endpoint\n+    String accessControlFactoryClass =\n+        _serverConf.getString(ACCESS_CONTROL_FACTORY_CLASS, DEFAULT_ACCESS_CONTROL_FACTORY_CLASS);\n+    LOGGER.info(\"Use class: {} as the AccessControlFactory\", accessControlFactoryClass);\n+    final AccessControlFactory accessControlFactory;\n+    try {\n+      accessControlFactory = (AccessControlFactory) Class.forName(accessControlFactoryClass).newInstance();\n+    } catch (Exception e) {\n+      throw new RuntimeException(\"Caught exception while creating new AccessControlFactory instance\", e);", "originalCommit": "5d7aa45909cf4f588c288590d0f390800dd0f854", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4MjQ0Mg==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r410482442", "bodyText": "done.", "author": "chenboat", "createdAt": "2020-04-17T21:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2NjA3OA=="}], "type": "inlineReview"}, {"oid": "e86d31cfc8742b52de3321c81d5fd49114e050e7", "url": "https://github.com/apache/pinot/commit/e86d31cfc8742b52de3321c81d5fd49114e050e7", "message": "Update pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java\n\nCo-Authored-By: Subbu Subramaniam <mcvsubbu@users.noreply.github.com>", "committedDate": "2020-04-17T21:24:48Z", "type": "commit"}, {"oid": "fdc45f7e41cf3cbba6d1f79159e2b2f913cc8d6d", "url": "https://github.com/apache/pinot/commit/fdc45f7e41cf3cbba6d1f79159e2b2f913cc8d6d", "message": "Revise based on comments.", "committedDate": "2020-04-17T21:38:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4NjExOA==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r410486118", "body": "The class name you want to add to the exception is not `this.getClass()`. Instead, it should be the value of `accessControlFactory`. The idea is that the exception message should reflect the remedial action as close as possible (e.g. in this case, it could be a config typo). It may even be useful to put it in quotes, so as to spot extra spaces (e.g. `\"... in class ' + accessControlFactoryClass + \"'\", e)`)", "bodyText": "The class name you want to add to the exception is not this.getClass(). Instead, it should be the value of accessControlFactory. The idea is that the exception message should reflect the remedial action as close as possible (e.g. in this case, it could be a config typo). It may even be useful to put it in quotes, so as to spot extra spaces (e.g. \"... in class ' + accessControlFactoryClass + \"'\", e))", "bodyHTML": "<p dir=\"auto\">The class name you want to add to the exception is not <code>this.getClass()</code>. Instead, it should be the value of <code>accessControlFactory</code>. The idea is that the exception message should reflect the remedial action as close as possible (e.g. in this case, it could be a config typo). It may even be useful to put it in quotes, so as to spot extra spaces (e.g. <code>\"... in class ' + accessControlFactoryClass + \"'\", e)</code>)</p>", "author": "mcvsubbu", "createdAt": "2020-04-17T21:48:34Z", "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/HelixServerStarter.java", "diffHunk": "@@ -159,9 +160,11 @@ public HelixServerStarter(String helixClusterName, String zkAddress, Configurati\n     LOGGER.info(\"Using class: {} as the AccessControlFactory\", accessControlFactoryClass);\n     final AccessControlFactory accessControlFactory;\n     try {\n-      accessControlFactory = (AccessControlFactory) Class.forName(accessControlFactoryClass).newInstance();\n+      accessControlFactory = PluginManager.get().createInstance(accessControlFactoryClass);\n     } catch (Exception e) {\n-      throw new RuntimeException(\"Caught exception while creating new AccessControlFactory instance\", e);\n+      throw new RuntimeException(\n+          \"Caught exception while creating new AccessControlFactory instance in class \" + this.getClass()", "originalCommit": "fdc45f7e41cf3cbba6d1f79159e2b2f913cc8d6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5NzcyMA==", "url": "https://github.com/apache/pinot/pull/5260#discussion_r410497720", "bodyText": "Got it. good point.", "author": "chenboat", "createdAt": "2020-04-17T22:23:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4NjExOA=="}], "type": "inlineReview"}, {"oid": "3c4bb0b7e5642e3dab29abf43da10fc4b3309dc9", "url": "https://github.com/apache/pinot/commit/3c4bb0b7e5642e3dab29abf43da10fc4b3309dc9", "message": "Revise based on comments.", "committedDate": "2020-04-17T22:22:37Z", "type": "commit"}]}