{"pr_number": 776, "pr_title": "feat(rest): validate the dependent document ids in the payload before updating it in the DB", "pr_author": "smrutis1", "pr_createdAt": "2020-02-12T13:53:20Z", "pr_url": "https://github.com/eclipse/sw360/pull/776", "merge_commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "timeline": [{"oid": "cc0354e4ff9325558771249bac493d0606de9ebf", "url": "https://github.com/eclipse/sw360/commit/cc0354e4ff9325558771249bac493d0606de9ebf", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-14T05:09:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2NzUzNg==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r379267536", "body": "Please create a method and reuse in Create projects.", "bodyText": "Please create a method and reuse in Create projects.", "bodyHTML": "<p dir=\"auto\">Please create a method and reuse in Create projects.</p>", "author": "JaideepPalit", "createdAt": "2020-02-14T06:24:30Z", "path": "rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java", "diffHunk": "@@ -135,19 +146,34 @@ public Project createProject(Project project, User sw360User) throws TException\n             return project;\n         } else if (documentRequestSummary.getRequestStatus() == AddDocumentRequestStatus.DUPLICATE) {\n             throw new DataIntegrityViolationException(\"sw360 project with name '\" + project.getName() + \"' already exists.\");\n+        } else if (documentRequestSummary.getRequestStatus() == AddDocumentRequestStatus.INVALID_INPUT) {\n+            throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n         }\n         return null;\n     }\n \n     public RequestStatus updateProject(Project project, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n-        String cyclicLinkedProjectPath = sw360ProjectClient.getCyclicLinkedProjectPath(project, sw360User);\n+        String cyclicLinkedProjectPath = null;\n+        try {\n+            cyclicLinkedProjectPath = sw360ProjectClient.getCyclicLinkedProjectPath(project, sw360User);\n+        } catch (SW360Exception sw360Exp) {\n+            if (sw360Exp.getErrorCode() == 404) {\n+                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n+            } else if (sw360Exp.getErrorCode() == 403) {\n+                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n+            } else {\n+                throw sw360Exp;\n+            }\n+        }", "originalCommit": "cc0354e4ff9325558771249bac493d0606de9ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca6ba50aee3cc2111253568c26d8520724e8b348", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex 1606ed4a..8d58251f 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -155,20 +141,7 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n     public RequestStatus updateProject(Project project, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n         String cyclicLinkedProjectPath = null;\n-        try {\n-            cyclicLinkedProjectPath = sw360ProjectClient.getCyclicLinkedProjectPath(project, sw360User);\n-        } catch (SW360Exception sw360Exp) {\n-            if (sw360Exp.getErrorCode() == 404) {\n-                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n-            } else if (sw360Exp.getErrorCode() == 403) {\n-                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n-            } else {\n-                throw sw360Exp;\n-            }\n-        }\n-        if (!isNullEmptyOrWhitespace(cyclicLinkedProjectPath)) {\n-            throw new HttpMessageNotReadableException(\"Cyclic linked Project : \" + cyclicLinkedProjectPath);\n-        }\n+        rch.checkForCyclicOrInvalidDependencies(sw360ProjectClient, project, sw360User);\n         RequestStatus requestStatus = sw360ProjectClient.updateProject(project, sw360User);\n         if (requestStatus == RequestStatus.CLOSED_UPDATE_NOT_ALLOWED) {\n             throw new RuntimeException(\"User cannot modify a closed project\");\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex 1606ed4a..5a9a6406 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -155,20 +141,7 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n     public RequestStatus updateProject(Project project, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n         String cyclicLinkedProjectPath = null;\n-        try {\n-            cyclicLinkedProjectPath = sw360ProjectClient.getCyclicLinkedProjectPath(project, sw360User);\n-        } catch (SW360Exception sw360Exp) {\n-            if (sw360Exp.getErrorCode() == 404) {\n-                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n-            } else if (sw360Exp.getErrorCode() == 403) {\n-                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n-            } else {\n-                throw sw360Exp;\n-            }\n-        }\n-        if (!isNullEmptyOrWhitespace(cyclicLinkedProjectPath)) {\n-            throw new HttpMessageNotReadableException(\"Cyclic linked Project : \" + cyclicLinkedProjectPath);\n-        }\n+        rch.checkForCyclicOrInvalidDependencies(sw360ProjectClient, project, sw360User);\n         RequestStatus requestStatus = sw360ProjectClient.updateProject(project, sw360User);\n         if (requestStatus == RequestStatus.CLOSED_UPDATE_NOT_ALLOWED) {\n             throw new RuntimeException(\"User cannot modify a closed project\");\n", "next_change": {"commit": "c20fa4662a4a60a34f2e07084e28bb72468ac37a", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex 5a9a6406..e6f7fd2f 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -142,6 +142,16 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n         String cyclicLinkedProjectPath = null;\n         rch.checkForCyclicOrInvalidDependencies(sw360ProjectClient, project, sw360User);\n+\n+        // TODO: Move this logic to backend\n+        if (project.getReleaseIdToUsage() != null) {\n+            for (String releaseId : project.getReleaseIdToUsage().keySet()) {\n+                if (isNullEmptyOrWhitespace(releaseId)) {\n+                    throw new HttpMessageNotReadableException(\"Release Id can't be empty\");\n+                }\n+            }\n+        }\n+\n         RequestStatus requestStatus = sw360ProjectClient.updateProject(project, sw360User);\n         if (requestStatus == RequestStatus.CLOSED_UPDATE_NOT_ALLOWED) {\n             throw new RuntimeException(\"User cannot modify a closed project\");\n", "next_change": {"commit": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex e6f7fd2f..a5ec130f 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -153,6 +155,10 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n         }\n \n         RequestStatus requestStatus = sw360ProjectClient.updateProject(project, sw360User);\n+        if (requestStatus == RequestStatus.NAMINGERROR) {\n+            throw new HttpMessageNotReadableException(\"Project name field cannot be empty or contain only whitespace character\");\n+        }\n+\n         if (requestStatus == RequestStatus.CLOSED_UPDATE_NOT_ALLOWED) {\n             throw new RuntimeException(\"User cannot modify a closed project\");\n         } if (requestStatus == RequestStatus.INVALID_INPUT) {\n", "next_change": {"commit": "f783240ae7b9e39557b5328805a1e842511d7c9d", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex a5ec130f..ee07af75 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -163,7 +177,7 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n             throw new RuntimeException(\"User cannot modify a closed project\");\n         } if (requestStatus == RequestStatus.INVALID_INPUT) {\n             throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n-        } else if (requestStatus != RequestStatus.SUCCESS) {\n+        } else if (requestStatus != RequestStatus.SENT_TO_MODERATOR && requestStatus != RequestStatus.SUCCESS) {\n             throw new RuntimeException(\"sw360 project with name '\" + project.getName() + \" cannot be updated.\");\n         }\n         return requestStatus;\n", "next_change": {"commit": "be26f6ca58be6538aded5feac5219b7cbbaad83e", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex ee07af75..978a8eaa 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -183,13 +214,14 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n         return requestStatus;\n     }\n \n-    public RequestStatus deleteProject(Project project, User sw360User) throws TException {\n+    public void deleteProject(String projectId, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n-        RequestStatus requestStatus = sw360ProjectClient.deleteProject(project.getId(), sw360User);\n-        if (requestStatus != RequestStatus.SUCCESS) {\n-            throw new RuntimeException(\"sw360 project with name '\" + project.getName() + \" cannot be deleted.\");\n+        RequestStatus requestStatus = sw360ProjectClient.deleteProject(projectId, sw360User);\n+        if (requestStatus == RequestStatus.IN_USE) {\n+            throw new HttpMessageNotReadableException(\"Unable to delete project. Project is in Use\");\n+        } else if (requestStatus != RequestStatus.SUCCESS) {\n+            throw new RuntimeException(\"sw360 project with id '\" + projectId + \" cannot be deleted.\");\n         }\n-        return requestStatus;\n     }\n \n     public void deleteAllProjects(User sw360User) throws TException {\n", "next_change": {"commit": "cd4293f971aae0ca4b2bfa38a195e2de4f044eba", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex 978a8eaa..b26acf3f 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -214,14 +203,9 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n         return requestStatus;\n     }\n \n-    public void deleteProject(String projectId, User sw360User) throws TException {\n+    public RequestStatus deleteProject(String projectId, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n-        RequestStatus requestStatus = sw360ProjectClient.deleteProject(projectId, sw360User);\n-        if (requestStatus == RequestStatus.IN_USE) {\n-            throw new HttpMessageNotReadableException(\"Unable to delete project. Project is in Use\");\n-        } else if (requestStatus != RequestStatus.SUCCESS) {\n-            throw new RuntimeException(\"sw360 project with id '\" + projectId + \" cannot be deleted.\");\n-        }\n+        return sw360ProjectClient.deleteProject(projectId, sw360User);\n     }\n \n     public void deleteAllProjects(User sw360User) throws TException {\n", "next_change": {"commit": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\nindex b26acf3f..9e800160 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/project/Sw360ProjectService.java\n", "chunk": "@@ -203,16 +209,30 @@ public class Sw360ProjectService implements AwareOfRestServices<Project> {\n         return requestStatus;\n     }\n \n-    public RequestStatus deleteProject(String projectId, User sw360User) throws TException {\n+    public void deleteProject(String projectId, User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n-        return sw360ProjectClient.deleteProject(projectId, sw360User);\n+        RequestStatus requestStatus;\n+        if (Sw360ResourceServer.IS_FORCE_UPDATE_ENABLED) {\n+            requestStatus = sw360ProjectClient.deleteProjectWithForceFlag(projectId, sw360User, true);\n+        } else {\n+            requestStatus = sw360ProjectClient.deleteProject(projectId, sw360User);\n+        }\n+        if (requestStatus == RequestStatus.IN_USE) {\n+            throw new HttpMessageNotReadableException(\"Unable to delete project. Project is in Use\");\n+        } else if (requestStatus != RequestStatus.SUCCESS) {\n+            throw new RuntimeException(\"sw360 project with id '\" + projectId + \" cannot be deleted.\");\n+        }\n     }\n \n     public void deleteAllProjects(User sw360User) throws TException {\n         ProjectService.Iface sw360ProjectClient = getThriftProjectClient();\n         List<Project> projects = sw360ProjectClient.getAccessibleProjectsSummary(sw360User);\n         for (Project project : projects) {\n-            sw360ProjectClient.deleteProject(project.getId(), sw360User);\n+            if (Sw360ResourceServer.IS_FORCE_UPDATE_ENABLED) {\n+                sw360ProjectClient.deleteProjectWithForceFlag(project.getId(), sw360User, true);\n+            } else {\n+                sw360ProjectClient.deleteProject(project.getId(), sw360User);\n+            }\n         }\n     }\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "c20fa4662a4a60a34f2e07084e28bb72468ac37a", "committedDate": "2020-02-25 10:35:19 +0530", "message": "fix(component/release): Add component and release error in UI"}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "2ec0e6d9772510a1095c647a924cf099e60c7a5d", "committedDate": "2020-06-26 12:44:59 +0530", "message": "feat(REST): Added new allDetails Parameter to List Projects and List Releases API to fetch records with all details."}, {"oid": "ebc8f85275b89d821e9daa2f0a14fe819a2fea75", "committedDate": "2020-08-11 06:45:17 +0200", "message": "chore(logging): Upgraded from log4j 1 to log4j 2."}, {"oid": "693dc596f49d6519ff8c23d77ab05bcdfb99d237", "committedDate": "2020-11-05 14:21:35 +0530", "message": "feat(rest): New search resource endpoint and get releases for multiple projects"}, {"oid": "f783240ae7b9e39557b5328805a1e842511d7c9d", "committedDate": "2021-04-08 12:54:04 +0530", "message": "fix(rest): Fix status code when moderation request is created as a part of an API call   * Affected APIs in ProjectController - Update Project, Add/Patch Releases to a project, Patch vulnerabilities of a project, Add Attachment To Project   * Affected APIs in ReleaseController - Update Releases, Delete Attachments from releases   * Affected APIs in ComponentController - Delete Attachments from component, Delete Components, Update Components, Add Attachment To Component"}, {"oid": "964433599a240d32b32b3fae21d0e3b18a909586", "committedDate": "2021-04-29 16:48:28 +0530", "message": "feat(rest): Added rest endpoint to update project-release-relationship information of linked releases in a project"}, {"oid": "ed49b2ec8396a4d16270b73c6457497a72396a38", "committedDate": "2021-07-06 16:06:34 +0700", "message": "feat(ui): sort the additional data of Project/Component/Release follow alphabet order"}, {"oid": "4ab50904447813a9ea5b21928562ac38b50a0619", "committedDate": "2021-08-04 11:21:51 +0530", "message": "fix(MyProjectErrorMessage):update the error message in UI for the project which is not accessible."}, {"oid": "1db9afda2b08241e692baa9442cb928a747b08cf", "committedDate": "2021-09-03 17:10:23 +0530", "message": "fix(rest): Added new parameter luceneSearch to Get Project List Api, to get project list based on lucene search"}, {"oid": "0202f9df03b2c47982889c6d1142e7a89152dc99", "committedDate": "2021-09-07 11:52:29 +0530", "message": "fix(rest): Fixed projects loading issue in REST"}, {"oid": "90b5fe43f99b7b7e28af8268dd733fcda0bae454", "committedDate": "2021-09-08 18:04:33 +0530", "message": "Merge pull request #1371 from siemens/fix/ProjectsListingREST"}, {"oid": "3702de56840dcd5ba0fd92708f4b98f59959b707", "committedDate": "2021-09-16 14:30:56 +0530", "message": "feat(rest): Added rest api to create duplicate of project"}, {"oid": "f6337094b6543824661e8e0670a62b1ac76dc44a", "committedDate": "2021-11-25 12:42:28 +0530", "message": "fix(rest): Optimize rest api for get project by tag, type, group"}, {"oid": "be26f6ca58be6538aded5feac5219b7cbbaad83e", "committedDate": "2021-12-23 12:59:26 +0530", "message": "fix(ci): Fixed Project Client Testcases"}, {"oid": "2502b58df0ccb55d49ca0fed1bbbf72d822a5004", "committedDate": "2022-04-27 23:37:21 +0530", "message": "(chores): fix security vulnerabilities"}, {"oid": "b6bfa4258c3d3f4e3892610de55d425748f2cde5", "committedDate": "2022-12-16 14:07:04 +0700", "message": "Fix(REST): Fix bug update project without vendor information will remove vendor of project"}, {"oid": "0a59109e941b51b6f82b82ea1117e13359d6c1d3", "committedDate": "2023-01-12 11:38:23 +0530", "message": "fix(rest): Reuse centrally created thrift client"}, {"oid": "460eb74444781958d93a8f6bbd98d6a95571aa54", "committedDate": "2023-01-19 09:46:12 +0530", "message": "Merge pull request #1771 from toshiba/release/fix_update-project-without-vendor-info-will-remove-vendor"}, {"oid": "d707d7b537939b045f81e94b82df143a81ee5b46", "committedDate": "2023-03-01 13:49:47 +0530", "message": "feat(rest): new endpoint `/projects/myprojects`"}, {"oid": "cd4293f971aae0ca4b2bfa38a195e2de4f044eba", "committedDate": "2023-03-22 14:44:36 +0700", "message": "fix(api): deletion project returns 500 error and API doc of link release to release makes ambiguous"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}, {"oid": "338bd5e4b2c64068c87a15cec7280907f01a03cb", "committedDate": "2023-04-03 11:34:41 +0700", "message": "Merge branch 'main' into release/fix-api_delete_project_and_link_release_to_release"}, {"oid": "4f171a65971a226216dae423de3f265010119600", "committedDate": "2023-04-14 16:09:18 +0530", "message": "feat(rest): optimize fetch project"}, {"oid": "5096c3350a4eed871a00864c4010e4caa13a15c9", "committedDate": "2023-04-20 22:12:06 +0530", "message": "Merge pull request #1900 from siemens/chore/rest/optimize-project-fetch-nofilter"}, {"oid": "b32e90154665aa1ae72d1f2694ff75c5ba82719e", "committedDate": "2023-05-02 18:20:10 +0530", "message": "feat(REST):Endpoint for sbom import"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2ODMyMg==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r379268322", "body": "Please create a method and reuse in Create Release.", "bodyText": "Please create a method and reuse in Create Release.", "bodyHTML": "<p dir=\"auto\">Please create a method and reuse in Create Release.</p>", "author": "JaideepPalit", "createdAt": "2020-02-14T06:27:53Z", "path": "rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java", "diffHunk": "@@ -92,19 +107,34 @@ public Release createRelease(Release release, User sw360User) throws TException\n             return release;\n         } else if (documentRequestSummary.getRequestStatus() == AddDocumentRequestStatus.DUPLICATE) {\n             throw new DataIntegrityViolationException(\"sw360 release with name '\" + release.getName() + \"' already exists.\");\n+        } else if (documentRequestSummary.getRequestStatus() == AddDocumentRequestStatus.INVALID_INPUT) {\n+            throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n         }\n         return null;\n     }\n \n     public RequestStatus updateRelease(Release release, User sw360User) throws TException {\n         ComponentService.Iface sw360ComponentClient = getThriftComponentClient();\n-        String cyclicLinkedReleasePath = sw360ComponentClient.getCyclicLinkedReleasePath(release, sw360User);\n+        String cyclicLinkedReleasePath = null;\n+        try {\n+            cyclicLinkedReleasePath = sw360ComponentClient.getCyclicLinkedReleasePath(release, sw360User);\n+        } catch (SW360Exception sw360Exp) {\n+            if (sw360Exp.getErrorCode() == 404) {\n+                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n+            } else if (sw360Exp.getErrorCode() == 403) {\n+                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n+            } else {\n+                throw sw360Exp;\n+            }\n+        }", "originalCommit": "cc0354e4ff9325558771249bac493d0606de9ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ab666aea2442bbb95bcbd0136f7612f2528f910", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 04742295..dac161b9 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -115,22 +98,7 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n \n     public RequestStatus updateRelease(Release release, User sw360User) throws TException {\n         ComponentService.Iface sw360ComponentClient = getThriftComponentClient();\n-        String cyclicLinkedReleasePath = null;\n-        try {\n-            cyclicLinkedReleasePath = sw360ComponentClient.getCyclicLinkedReleasePath(release, sw360User);\n-        } catch (SW360Exception sw360Exp) {\n-            if (sw360Exp.getErrorCode() == 404) {\n-                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n-            } else if (sw360Exp.getErrorCode() == 403) {\n-                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n-            } else {\n-                throw sw360Exp;\n-            }\n-        }\n-        if (!isNullEmptyOrWhitespace(cyclicLinkedReleasePath)) {\n-            throw new HttpMessageNotReadableException(\"Cyclic linked Release : \" + cyclicLinkedReleasePath);\n-        }\n-\n+        rch.checkForCyclicOrInvalidDependencies(sw360ComponentClient, release, sw360User);\n         RequestStatus requestStatus = sw360ComponentClient.updateRelease(release, sw360User);\n         if (requestStatus == RequestStatus.INVALID_INPUT) {\n             throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 04742295..6dc1f2e2 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -115,22 +109,7 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n \n     public RequestStatus updateRelease(Release release, User sw360User) throws TException {\n         ComponentService.Iface sw360ComponentClient = getThriftComponentClient();\n-        String cyclicLinkedReleasePath = null;\n-        try {\n-            cyclicLinkedReleasePath = sw360ComponentClient.getCyclicLinkedReleasePath(release, sw360User);\n-        } catch (SW360Exception sw360Exp) {\n-            if (sw360Exp.getErrorCode() == 404) {\n-                throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n-            } else if (sw360Exp.getErrorCode() == 403) {\n-                throw new AccessDeniedException(\"Error fetching project. Either Project or its Linked Projects are not accessible\");\n-            } else {\n-                throw sw360Exp;\n-            }\n-        }\n-        if (!isNullEmptyOrWhitespace(cyclicLinkedReleasePath)) {\n-            throw new HttpMessageNotReadableException(\"Cyclic linked Release : \" + cyclicLinkedReleasePath);\n-        }\n-\n+        rch.checkForCyclicOrInvalidDependencies(sw360ComponentClient, release, sw360User);\n         RequestStatus requestStatus = sw360ComponentClient.updateRelease(release, sw360User);\n         if (requestStatus == RequestStatus.INVALID_INPUT) {\n             throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n", "next_change": {"commit": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 6dc1f2e2..973b1e61 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -113,6 +144,9 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n         RequestStatus requestStatus = sw360ComponentClient.updateRelease(release, sw360User);\n         if (requestStatus == RequestStatus.INVALID_INPUT) {\n             throw new HttpMessageNotReadableException(\"Dependent document Id/ids not valid.\");\n+        } else if (requestStatus == RequestStatus.NAMINGERROR) {\n+            throw new HttpMessageNotReadableException(\n+                    \"Release name and version field cannot be empty or contain only whitespace character\");\n         } else if (requestStatus != RequestStatus.SUCCESS) {\n             throw new RuntimeException(\"sw360 release with name '\" + release.getName() + \" cannot be updated.\");\n         }\n", "next_change": {"commit": "d9756e6aa2bbdb4e0221525e9ef4acfcc8e8532b", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 973b1e61..d223f704 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -148,7 +165,7 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n             throw new HttpMessageNotReadableException(\n                     \"Release name and version field cannot be empty or contain only whitespace character\");\n         } else if (requestStatus != RequestStatus.SUCCESS) {\n-            throw new RuntimeException(\"sw360 release with name '\" + release.getName() + \" cannot be updated.\");\n+            throw new RuntimeException(\"sw360 release with name '\" + SW360Utils.printName(release) + \" cannot be updated.\");\n         }\n         return requestStatus;\n     }\n", "next_change": {"commit": "f783240ae7b9e39557b5328805a1e842511d7c9d", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex d223f704..476011e7 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -164,8 +164,9 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n         } else if (requestStatus == RequestStatus.NAMINGERROR) {\n             throw new HttpMessageNotReadableException(\n                     \"Release name and version field cannot be empty or contain only whitespace character\");\n-        } else if (requestStatus != RequestStatus.SUCCESS) {\n-            throw new RuntimeException(\"sw360 release with name '\" + SW360Utils.printName(release) + \" cannot be updated.\");\n+        } else if (requestStatus != RequestStatus.SUCCESS && requestStatus != RequestStatus.SENT_TO_MODERATOR) {\n+            throw new RuntimeException(\n+                    \"sw360 release with name '\" + SW360Utils.printName(release) + \" cannot be updated.\");\n         }\n         return requestStatus;\n     }\n", "next_change": {"commit": "b4f0b870de9feeb49415583d0c62b8a26ef96783", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 476011e7..05552cf8 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -173,7 +195,11 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n \n     public RequestStatus deleteRelease(String releaseId, User sw360User) throws TException {\n         ComponentService.Iface sw360ComponentClient = getThriftComponentClient();\n-        return sw360ComponentClient.deleteRelease(releaseId, sw360User);\n+        RequestStatus deleteStatus = sw360ComponentClient.deleteRelease(releaseId, sw360User);\n+        if (deleteStatus.equals(RequestStatus.SUCCESS)) {\n+            SW360Utils.removeReleaseVulnerabilityRelation(releaseId, sw360User);\n+        }\n+        return deleteStatus;\n     }\n \n     public Set<Project> getProjectsByRelease(String releaseId, User sw360User) throws TException {\n", "next_change": {"commit": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "changed_code": [{"header": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\nindex 05552cf8..22566db5 100644\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n+++ b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/release/Sw360ReleaseService.java\n", "chunk": "@@ -195,7 +207,12 @@ public class Sw360ReleaseService implements AwareOfRestServices<Release> {\n \n     public RequestStatus deleteRelease(String releaseId, User sw360User) throws TException {\n         ComponentService.Iface sw360ComponentClient = getThriftComponentClient();\n-        RequestStatus deleteStatus = sw360ComponentClient.deleteRelease(releaseId, sw360User);\n+        RequestStatus deleteStatus;\n+        if (Sw360ResourceServer.IS_FORCE_UPDATE_ENABLED) {\n+            deleteStatus = sw360ComponentClient.deleteReleaseWithForceFlag(releaseId, sw360User, true);\n+        } else {\n+            deleteStatus = sw360ComponentClient.deleteRelease(releaseId, sw360User);\n+        }\n         if (deleteStatus.equals(RequestStatus.SUCCESS)) {\n             SW360Utils.removeReleaseVulnerabilityRelation(releaseId, sw360User);\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "bb9f2bad92339d0d8a1b44ccfa92052659f0d76f", "committedDate": "2020-03-06 16:58:08 +0530", "message": "feat(REST): Trigger FOSSology process and check status."}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "2ec0e6d9772510a1095c647a924cf099e60c7a5d", "committedDate": "2020-06-26 12:44:59 +0530", "message": "feat(REST): Added new allDetails Parameter to List Projects and List Releases API to fetch records with all details."}, {"oid": "d9756e6aa2bbdb4e0221525e9ef4acfcc8e8532b", "committedDate": "2020-12-24 18:00:27 +0530", "message": "fix(Rest): Create/Update Release with name same as component name"}, {"oid": "f783240ae7b9e39557b5328805a1e842511d7c9d", "committedDate": "2021-04-08 12:54:04 +0530", "message": "fix(rest): Fix status code when moderation request is created as a part of an API call   * Affected APIs in ProjectController - Update Project, Add/Patch Releases to a project, Patch vulnerabilities of a project, Add Attachment To Project   * Affected APIs in ReleaseController - Update Releases, Delete Attachments from releases   * Affected APIs in ComponentController - Delete Attachments from component, Delete Components, Update Components, Add Attachment To Component"}, {"oid": "debfe70d6c84ef20724ac9b0c9c39100895fafc3", "committedDate": "2021-05-31 14:44:41 +0700", "message": "Fix: Rest interface can not handle licenses which do not exist in the database #534"}, {"oid": "46f972729b069767cf42e0e44fd0aba900739ce6", "committedDate": "2021-06-22 13:26:52 +0530", "message": "fix(rest): Issue updating newly created release via REST and issue with get project by id#1278"}, {"oid": "ed49b2ec8396a4d16270b73c6457497a72396a38", "committedDate": "2021-07-06 16:06:34 +0700", "message": "feat(ui): sort the additional data of Project/Component/Release follow alphabet order"}, {"oid": "f7aebb1e8374b7a09bd32dcb6022d3724e0339fa", "committedDate": "2022-05-20 15:54:50 +0530", "message": "feat(rest): Add upload description to trigger fossology process"}, {"oid": "b4f0b870de9feeb49415583d0c62b8a26ef96783", "committedDate": "2022-05-26 14:06:52 +0700", "message": "Fix (Release): Fixed vulnerability can't be deleted when it is linked with a deleted release"}, {"oid": "6d0a20ef1d94a76d176818a1a9851945a18dd967", "committedDate": "2022-07-04 10:45:10 +0530", "message": "fix(REST): fixed release update issue for releases with invalid licenses"}, {"oid": "d0ead7d1dbe2c0fea12a17484b371c51e14ab3cc", "committedDate": "2022-09-20 11:52:38 +0530", "message": "fix(rest): Added component type tag in release api"}, {"oid": "4ca478510885dbe22746e9f50a3f99bf55d2bab3", "committedDate": "2022-12-09 12:27:43 +0530", "message": "fix(REST): Save otherLicenseIds while patching Release - 1735"}, {"oid": "0a59109e941b51b6f82b82ea1117e13359d6c1d3", "committedDate": "2023-01-12 11:38:23 +0530", "message": "fix(rest): Reuse centrally created thrift client"}, {"oid": "e20d7bf066c91425e0a46caab26ec74351abecb2", "committedDate": "2023-03-13 18:19:02 +0530", "message": "feat(rest): new endpoint /releases/recentReleases"}, {"oid": "2a9bffa4f072902e52a0343434c9700ded45bbd7", "committedDate": "2023-03-29 13:00:15 +0530", "message": "fix(rest): componentType field  will show when allDetails true in release"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}, {"oid": "53fd44d814ebdfb3b6912013e9b016c520cded54", "committedDate": "2023-03-31 14:54:33 +0530", "message": "Merge pull request #1862 from KoukiHama/rest-update-without-moderation"}, {"oid": "89fc627e0903731eddd9d5b990933711bc922c3b", "committedDate": "2023-03-31 14:58:44 +0530", "message": "Merge pull request #1879 from siemens/fix/releaseallDetails-1608"}, {"oid": "e1dd33f43c680d0025fb0e4cb1acfcb2d4f5c914", "committedDate": "2023-04-24 14:44:49 +0530", "message": "fix(rest): added endpoint for release subscriptions"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI3NTU3OA==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r379275578", "body": "Please create common logic to validate Set of Ids and place in parent class `AttachementAwareDatabaseHandler` So that it can be reused.\r\nSimilarly for fields containing only IDs - String\r\nMaybe something like below code.\r\n```\r\npublic static <T, R extends DatabaseRepository> boolean isAllIdInSetExists(Set<String> setOfIds, R repository) {\r\n        long nonExistingIdCount = 0;\r\n        if (setOfIds != null) {\r\n            nonExistingIdCount = setOfIds.stream().filter(id -> CommonUtils.isNotNullEmptyOrWhitespace(id))\r\n                    .filter(id -> {\r\n                        T obj = (T) repository.get(id);\r\n                        return Objects.isNull(obj);\r\n                    }).count();\r\n        }\r\n\r\n        if (nonExistingIdCount > 0)\r\n            return false;\r\n\r\n        return true;\r\n    }", "bodyText": "Please create common logic to validate Set of Ids and place in parent class AttachementAwareDatabaseHandler So that it can be reused.\nSimilarly for fields containing only IDs - String\nMaybe something like below code.\npublic static <T, R extends DatabaseRepository> boolean isAllIdInSetExists(Set<String> setOfIds, R repository) {\n        long nonExistingIdCount = 0;\n        if (setOfIds != null) {\n            nonExistingIdCount = setOfIds.stream().filter(id -> CommonUtils.isNotNullEmptyOrWhitespace(id))\n                    .filter(id -> {\n                        T obj = (T) repository.get(id);\n                        return Objects.isNull(obj);\n                    }).count();\n        }\n\n        if (nonExistingIdCount > 0)\n            return false;\n\n        return true;\n    }", "bodyHTML": "<p dir=\"auto\">Please create common logic to validate Set of Ids and place in parent class <code>AttachementAwareDatabaseHandler</code> So that it can be reused.<br>\nSimilarly for fields containing only IDs - String<br>\nMaybe something like below code.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static &lt;T, R extends DatabaseRepository&gt; boolean isAllIdInSetExists(Set&lt;String&gt; setOfIds, R repository) {\n        long nonExistingIdCount = 0;\n        if (setOfIds != null) {\n            nonExistingIdCount = setOfIds.stream().filter(id -&gt; CommonUtils.isNotNullEmptyOrWhitespace(id))\n                    .filter(id -&gt; {\n                        T obj = (T) repository.get(id);\n                        return Objects.isNull(obj);\n                    }).count();\n        }\n\n        if (nonExistingIdCount &gt; 0)\n            return false;\n\n        return true;\n    }\"><pre><code>public static &lt;T, R extends DatabaseRepository&gt; boolean isAllIdInSetExists(Set&lt;String&gt; setOfIds, R repository) {\n        long nonExistingIdCount = 0;\n        if (setOfIds != null) {\n            nonExistingIdCount = setOfIds.stream().filter(id -&gt; CommonUtils.isNotNullEmptyOrWhitespace(id))\n                    .filter(id -&gt; {\n                        T obj = (T) repository.get(id);\n                        return Objects.isNull(obj);\n                    }).count();\n        }\n\n        if (nonExistingIdCount &gt; 0)\n            return false;\n\n        return true;\n    }\n</code></pre></div>", "author": "JaideepPalit", "createdAt": "2020-02-14T06:59:05Z", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java", "diffHunk": "@@ -452,6 +464,55 @@ public RequestStatus updateComponent(Component component, User user) throws SW36\n \n     }\n \n+    private boolean isDependenciesExistInComponent(Component component) {\n+        if (component.isSetReleaseIds()) {\n+            Set<String> releaseIds = component.getReleaseIds();\n+            for (String releaseId : releaseIds) {\n+                Release release = releaseRepository.get(releaseId);\n+                if (release == null) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        if (component.isSetDefaultVendorId() && !component.getDefaultVendorId().isEmpty()) {\n+            Vendor defaultVendor = vendorRepository.get(component.getDefaultVendorId());\n+            if (defaultVendor == null) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean isDependenciesExistsInRelease(Release release) {\n+        if (release.isSetComponentId()) {\n+            String componentId = release.getComponentId();\n+            Component component = componentRepository.get(componentId);\n+            if (component == null) {\n+                return false;\n+            }\n+        }\n+\n+        if (release.isSetReleaseIdToRelationship()) {\n+            Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n+            for (String releaseId : releaseIds) {\n+                release = releaseRepository.get(releaseId);\n+                if (release == null) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        if (release.isSetVendorId()) {\n+            String vendorId = release.getVendorId();\n+            Vendor vendor = vendorRepository.get(vendorId);\n+            if (vendor == null) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+", "originalCommit": "cc0354e4ff9325558771249bac493d0606de9ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ab666aea2442bbb95bcbd0136f7612f2528f910", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 4902c2cf..628b25a3 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -487,28 +479,17 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     private boolean isDependenciesExistsInRelease(Release release) {\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            Component component = componentRepository.get(componentId);\n-            if (component == null) {\n-                return false;\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n         if (release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            for (String releaseId : releaseIds) {\n-                release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n         if (release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            Vendor vendor = vendorRepository.get(vendorId);\n-            if (vendor == null) {\n-                return false;\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n         return true;\n     }\n", "next_change": {"commit": "85f0ad7f89648cd3eb256b8d5f228a517f106d97", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 628b25a3..499c549c 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,33 +465,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n+        boolean validReleaseIds = true, validdefaultVendor = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n         if (component.isSetDefaultVendorId()) {\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n+            validdefaultVendor = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return true;\n+        return validReleaseIds && validdefaultVendor;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n+        boolean validComponentId = true, validReleaseIdToRelationship = true, vendorId = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n+            validComponentId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n         if (release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n+            validReleaseIdToRelationship = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n         if (release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            vendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return true;\n+        return validComponentId && validReleaseIdToRelationship && vendorId;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "c623edc76c1054c24fb451147ed238383f2023f6", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 499c549c..70a0deaa 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -491,9 +491,9 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n         if (release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            vendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            validVendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return validComponentId && validReleaseIdToRelationship && vendorId;\n+        return validComponentId && validReleaseIdToRelationship && validVendorId;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "fd0d6454e4f4fec312db711b5124eb55ca15338d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 70a0deaa..1f18dbb4 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,35 +485,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n-        boolean validReleaseIds = true, validdefaultVendor = true;\n+        boolean isValidDependentIds = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (component.isSetDefaultVendorId()) {\n-            validdefaultVendor = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n+        if (isValidDependentIds && component.isSetDefaultVendorId()) {\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return validReleaseIds && validdefaultVendor;\n+        return isValidDependentIds;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n-        boolean validComponentId = true, validReleaseIdToRelationship = true, validVendorId = true;\n+        boolean isValidDependentIds = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            validComponentId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n-        if (release.isSetReleaseIdToRelationship()) {\n+        if (isValidDependentIds && release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            validReleaseIdToRelationship = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n-        if (release.isSetVendorId()) {\n+        if (isValidDependentIds && release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            validVendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return validComponentId && validReleaseIdToRelationship && validVendorId;\n+        return isValidDependentIds;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 4902c2cf..1f18dbb4 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,52 +485,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n+        boolean isValidDependentIds = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            for (String releaseId : releaseIds) {\n-                Release release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (component.isSetDefaultVendorId() && !component.getDefaultVendorId().isEmpty()) {\n-            Vendor defaultVendor = vendorRepository.get(component.getDefaultVendorId());\n-            if (defaultVendor == null) {\n-                return false;\n-            }\n+        if (isValidDependentIds && component.isSetDefaultVendorId()) {\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return true;\n+        return isValidDependentIds;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n+        boolean isValidDependentIds = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            Component component = componentRepository.get(componentId);\n-            if (component == null) {\n-                return false;\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n-        if (release.isSetReleaseIdToRelationship()) {\n+        if (isValidDependentIds && release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            for (String releaseId : releaseIds) {\n-                release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n-        if (release.isSetVendorId()) {\n+        if (isValidDependentIds && release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            Vendor vendor = vendorRepository.get(vendorId);\n-            if (vendor == null) {\n-                return false;\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return true;\n+        return isValidDependentIds;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 1f18dbb4..53172fc2 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -516,11 +576,22 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return isValidDependentIds;\n     }\n \n-    private void updateComponentDependentFieldsForRelease(Component component) {\n+    private void updateComponentDependentFieldsForRelease(Component component, List<ChangeLogs> referenceDocLogList,\n+            String userEdited) {\n         String name = component.getName();\n         for (Release release : releaseRepository.getReleasesFromComponentId(component.getId())) {\n+            ChangeLogs changeLog = DatabaseHandlerUtil.initChangeLogsObj(release, userEdited, component.getId(),\n+                    Operation.UPDATE, Operation.COMPONENT_UPDATE);\n+            Set<ChangedFields> changes = new HashSet<ChangedFields>();\n+            ChangedFields nameFields = new ChangedFields();\n+            nameFields.setFieldName(\"name\");\n+            nameFields.setFieldValueOld(DatabaseHandlerUtil.convertObjectToJson(release.getName()));\n+            nameFields.setFieldValueNew(DatabaseHandlerUtil.convertObjectToJson(name));\n+            changes.add(nameFields);\n+            changeLog.setChanges(changes);\n             release.setName(name);\n             releaseRepository.update(release);\n+            referenceDocLogList.add(changeLog);\n         }\n     }\n \n", "next_change": {"commit": "709a5ec90d76a84cde07065ade29cc7461a48198", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 53172fc2..eee34cab 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -590,6 +674,7 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n             changes.add(nameFields);\n             changeLog.setChanges(changes);\n             release.setName(name);\n+            updateModifiedFields(release, userEdited);\n             releaseRepository.update(release);\n             referenceDocLogList.add(changeLog);\n         }\n", "next_change": {"commit": "9a1dcb48317759e4217354bebfb667867acf579f", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex eee34cab..2feebb0d 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -679,6 +685,17 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n             referenceDocLogList.add(changeLog);\n         }\n     }\n+    \n+    private void updateEccStatusForRelease(Component component) {\n+    \tfor (Release release : releaseRepository.getReleasesFromComponentId(component.getId())) {\n+            EccInformation eccInfo = release.getEccInformation();\n+            eccInfo.setEccStatus(ECCStatus.OPEN);\n+            eccInfo.setAl(ECC_FIELDS_VALUE_RESET);\n+            eccInfo.setEccn(ECC_FIELDS_VALUE_RESET);\n+            eccInfo.setEccComment(ECC_FIELDS_VALUE_RESET);\n+            releaseRepository.update(release);\n+    \t}\n+    }\n \n     private boolean changeWouldResultInDuplicate(Component before, Component after) {\n         if (before.getName().equals(after.getName())) {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "3ee65c9b62b7a6a26e2ddf515779fc1af8af4a92", "committedDate": "2020-05-06 11:48:56 +0530", "message": "fix(REST): Added default value(NEW_CLEARING) for Clearing status while create and update Release"}, {"oid": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "committedDate": "2020-05-06 17:42:55 +0530", "message": "feat(ChangeLogs): Revision history of Document"}, {"oid": "5d1d2287822ed389ad13c1683b1af1b9c0697347", "committedDate": "2020-05-07 14:54:27 +0530", "message": "Merge pull request #845 from siemens/fix/ReleaseClearingStateRest"}, {"oid": "79f5c9d4d67396f35c597f0908c6885362e24a07", "committedDate": "2020-05-11 19:04:16 +0530", "message": "fix(mergeComponent): Prevent multiple releases with same name and version for a component, which may occur during merge component."}, {"oid": "8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "committedDate": "2020-06-18 12:09:04 +0530", "message": "feat(SplitComponentUI): Move Component data like releases and attachments from Source Component to Target Component"}, {"oid": "d65be244bbc19093bd5e7e8af76fa9dafd6a2b7a", "committedDate": "2020-08-10 18:05:06 +0530", "message": "fix(ImportSPDXBOM): Set Default value[Default_Category] to categories field of Component if found null or empty"}, {"oid": "ebc8f85275b89d821e9daa2f0a14fe819a2fea75", "committedDate": "2020-08-11 06:45:17 +0200", "message": "chore(logging): Upgraded from log4j 1 to log4j 2."}, {"oid": "49d225e50d03cfa83892a67ea8eee40138c9d97b", "committedDate": "2020-08-13 18:20:05 +0530", "message": "Merge pull request #945 from siemens/fix/importSPDXBOM"}, {"oid": "60f82182115aa465f7a00935428762faa722e549", "committedDate": "2020-08-18 09:17:55 +0530", "message": "feat(ProjectReleaseRelation): Added new Field comment, createdOn, createdBy in ProjectReleaseRelation   * comment field is available in UI, REST and Excel   * createdOn , createdBy is not available in UI but available in REST and Excel."}, {"oid": "a1724b749e4b57d2daff3717330b6d838d2730e5", "committedDate": "2020-08-19 13:51:36 +0530", "message": "Merge pull request #947 from siemens/feat/ProjectReleaseCommentAndRequestedDate"}, {"oid": "04020bef3fcf78be506cbe237faa2f5df4206961", "committedDate": "2020-10-07 14:25:02 +0530", "message": "feat(CR-UI): Enhancement & Bug fixes"}, {"oid": "c1b1e33b87bd2150a3de74654227bae9bf6e5efd", "committedDate": "2020-10-20 12:14:31 +0530", "message": "feat(ui-rest): Changes in Release information   * change title \"Download URL\" to \"Source Code Download URL\"   * add new data filed \"Binary Download URL\"   * added new field in excel sheet"}, {"oid": "034f291c8a8280123cc2ff40b1833db42dbb5b17", "committedDate": "2021-01-28 21:33:54 +0530", "message": "fix(mergeComponentRelease): Attachments not linked properly from source component/Release"}, {"oid": "2ed2ad807f41cfc794577b513e09d9756a04bb33", "committedDate": "2021-01-29 18:50:25 +0530", "message": "fix(LicenseInfo): Optimized loading of license info, source code download, Clearing report page"}, {"oid": "3769c683e37eb61fa872c19793a3c984911fbe73", "committedDate": "2021-02-02 14:06:43 +0530", "message": "Merge pull request #1095 from siemens/fix/mergeCompRelWithAttchmnt"}, {"oid": "eefcf17fd9bf33821d542ad04faa35a4f8557945", "committedDate": "2021-02-11 17:43:21 +0530", "message": "fix(excelexport): Projects with linked releases excel export error"}, {"oid": "c68b4d4ab2b400daeb1804165dcdc613c2999aa6", "committedDate": "2021-03-22 12:12:49 +0530", "message": "fix(OrtIntegration): Fix client to perform case insensitive search of component.   * Set default componentType to OSS in Client.   * Fix duplicate check to case insensitive during create new component"}, {"oid": "d80217339bb1e75385cda8e740d79224c8f400b3", "committedDate": "2021-04-16 17:25:24 +0530", "message": "feat(AttachmentVirusScan): Store attachment to File System asynchronously, handle saving of large multi-part attachments. Fix test cases"}, {"oid": "756190b4bbcd6f66998ae99fdc54532cf00bb566", "committedDate": "2021-04-29 13:35:24 +0530", "message": "feat(ProjectUI): feature to display the source files linked with the licenses"}, {"oid": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "committedDate": "2021-05-04 16:00:50 +0530", "message": "feat(cloudant): Migrating from ektorp to cloudant java client"}, {"oid": "0e22d55ec11988d953885b7fb052b1beaf2f55cf", "committedDate": "2021-05-07 17:40:38 +0530", "message": "feat(components-pagination): paginated view response for components"}, {"oid": "cdf2d2a257717048ad5ff53bea7f841930c3ede5", "committedDate": "2021-05-07 23:01:28 +0200", "message": "Merge pull request #1188 from siemens/feat/LicenseToSourceFileMapping-1052"}, {"oid": "2d56d0b4cfede2425829bdd58bb3d41f5549a15d", "committedDate": "2021-05-28 08:54:11 +0700", "message": "REST: Wrong error handling when deleting multiple components #851"}, {"oid": "8d1f96ffae914f6ce227879c697de07cb2e054c5", "committedDate": "2021-07-30 17:41:01 +0900", "message": "feat(log): Added output processing of the change log"}, {"oid": "6c3c51ec1b0ffbdaf19129394754ec716057d255", "committedDate": "2021-08-05 15:25:56 +0900", "message": "fix(log): Fix indentation issue in source code."}, {"oid": "2b6b9a9d201d5a844b14f1871598b36f298f0cf9", "committedDate": "2021-09-23 13:21:47 +0530", "message": "feat(UI): CLI file clean up assistant"}, {"oid": "843f1f8d7bf3d04c803c20b9572bd477e2624c68", "committedDate": "2021-10-27 12:28:18 +0530", "message": "fix(rest): Get component by name case insensitive"}, {"oid": "854c64537be3996fe202543a958f65d1024600bd", "committedDate": "2022-01-06 10:31:31 +0530", "message": "fix(release): Fixed mainline state is empty when creating a release by ui or rest"}, {"oid": "9807d3810574d2e0f797edf9bcc1b1831c768d7c", "committedDate": "2022-01-18 14:09:39 +0530", "message": "feat(ui): Added new Clearing State and Attachment Type"}, {"oid": "681eb0c408d24998a38ca14195695d287e99ad92", "committedDate": "2022-01-25 17:47:20 +0900", "message": "fix(ui): Restrict visibility of each component/release like Project"}, {"oid": "cbec94a4432b7c60f414370d6d7fbf7f79004d4c", "committedDate": "2022-02-11 10:15:01 +0700", "message": "fix(api): Correct the ECC status when release is created by API"}, {"oid": "d1fd4307b6889f30c6c1236474ced1374694e82b", "committedDate": "2022-02-18 01:11:15 +0530", "message": "fix(ReleaseClearingState): ClearingState not changing to New from Scan Available"}, {"oid": "2deb68f1d3aef8b6a90e0a47e9bc156f6fb19f2e", "committedDate": "2022-02-23 14:37:45 +0530", "message": "Merge pull request #1453 from toshiba/release/bug-fix_release_ecc_status_auto_set_value"}, {"oid": "a8c2334ea4b6dbc85923c68c67f373947a5429f7", "committedDate": "2022-03-03 20:28:08 +0530", "message": "fix(merge): Optimized code to check for write permission of release and components before starting to merge"}, {"oid": "73fe7e68feafa2025081e89eec5797af15b6f819", "committedDate": "2022-06-10 11:41:37 +0530", "message": "feat(export): Enable mailing for exported spreadsheet for components"}, {"oid": "709a5ec90d76a84cde07065ade29cc7461a48198", "committedDate": "2022-06-13 11:15:35 +0530", "message": "feat(UI): ModifiedOn & MOdifiedBy fields for Project/COmponent/Release"}, {"oid": "467801610650caf5195238db8c06a65487a1c292", "committedDate": "2022-06-18 11:29:01 +0530", "message": "Merge pull request #1539 from siemens/feat/ModifiedOnAndModifiedByFields-1479"}, {"oid": "adb4f930fc51693e7a03ebdd37dfa1ec34a3012c", "committedDate": "2022-09-21 04:56:50 -0700", "message": "fix(ecc): Script to cleanup ECC information in release"}, {"oid": "4596f06db0bc044dcd1d1b94aef6746dad1d2b3d", "committedDate": "2022-09-29 02:32:37 +0000", "message": "feat(SPDX): Use new SPDX library (#1496)"}, {"oid": "ea232539dfb232c1f22cd4aa270e2ad933a9e7aa", "committedDate": "2022-10-03 13:58:45 +0530", "message": "Merge pull request #1594 from toshiba/releases/feature-update_library_spdx"}, {"oid": "9a1dcb48317759e4217354bebfb667867acf579f", "committedDate": "2022-10-18 12:25:58 +0530", "message": "fix(ecc): Reset Ecc Fields when Component type is changed."}, {"oid": "ee1ff9fe1c9e41c8cfb8cbbfef77a50d3a0ae9a9", "committedDate": "2022-10-21 06:43:45 +0530", "message": "Merge pull request #1655 from siemens/fix/eccStatus"}, {"oid": "eabbb00537bbd50f4fad6019b1647e98c72ce2b1", "committedDate": "2023-01-10 14:54:52 +0530", "message": "feat(svm): Publish SVM codes to Community"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}, {"oid": "53c8d85da8040dd4c484a328dc9b68586bcbdf4a", "committedDate": "2023-04-20 10:18:43 +0530", "message": "feat(clearing): Improved cloud backend clearing"}, {"oid": "249f48f490be51d004ee56fe0d258fcc018c0707", "committedDate": "2023-04-26 15:49:32 +0700", "message": "feat(SPDX): Making new tab in component release pages for showing SPDX/SPDX Lite data #1240"}, {"oid": "96a0328144345e4338ab2f809e14e0a980b2d924", "committedDate": "2023-05-15 08:52:44 +0700", "message": "feat(api): endpoint get vulnerabilities of a component"}, {"oid": "764a24c6c649577bcc84b97fce8771aca6392453", "committedDate": "2023-05-19 15:58:27 +0700", "message": "feat(api): Endpoint get release overview by component"}, {"oid": "8d14955182db3a1e8d3fd6f75335e9172550ea77", "committedDate": "2023-05-21 14:51:45 +0530", "message": "Merge pull request #1923 from siemens/feat/CloudBackendClearing"}, {"oid": "e34eb8c56424ab8d3dc241d08bcf2ac5f663c40b", "committedDate": "2023-05-29 12:31:27 +0530", "message": "Merge pull request #1943 from toshiba/release/feature-api_get_all_release_by_component"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI4ODY4Ng==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r379288686", "body": "Please also validate if linked project is accessible to user.", "bodyText": "Please also validate if linked project is accessible to user.", "bodyHTML": "<p dir=\"auto\">Please also validate if linked project is accessible to user.</p>", "author": "JaideepPalit", "createdAt": "2020-02-14T07:46:50Z", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -261,6 +272,36 @@ public RequestStatus updateProject(Project project, User user) throws SW360Excep\n         }\n     }\n \n+    private boolean isDependenciesExists(Project project) {\n+        if (project.isSetReleaseIdToUsage()) {\n+            Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n+            for (String releaseId : releaseIds) {\n+                Release release = releaseRepository.get(releaseId);\n+                if (release == null) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        if (project.isSetLinkedProjects()) {\n+            Set<String> projectIds = project.getLinkedProjects().keySet();\n+            for (String projectId : projectIds) {\n+                Project linkedProject = repository.get(projectId);", "originalCommit": "cc0354e4ff9325558771249bac493d0606de9ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ab666aea2442bbb95bcbd0136f7612f2528f910", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex d67a17a4..bbd4c3bf 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -275,29 +275,17 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     private boolean isDependenciesExists(Project project) {\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            for (String releaseId : releaseIds) {\n-                Release release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n         if (project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            for (String projectId : projectIds) {\n-                Project linkedProject = repository.get(projectId);\n-                if (linkedProject == null) {\n-                    return false;\n-                }\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n         }\n \n         if (project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            if (obligationRepository.get(obligationId) == null) {\n-                return false;\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n         }\n         return true;\n     }\n", "next_change": {"commit": "85f0ad7f89648cd3eb256b8d5f228a517f106d97", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex bbd4c3bf..02372db3 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -273,21 +273,22 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExists(Project project) {\n+        boolean validReleaseIds = true, validLinkedProjectIds = true, validObligationId = true;\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            validReleaseIds DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n         if (project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n+            validLinkedProjectIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n         }\n \n         if (project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n+            validObligationId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n         }\n-        return true;\n+        return validReleaseIds && validLinkedProjectIds && validObligationId;\n     }\n \n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n", "next_change": {"commit": "fd0d6454e4f4fec312db711b5124eb55ca15338d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 02372db3..a118c83f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -272,23 +286,39 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         }\n     }\n \n-    private boolean isDependenciesExists(Project project) {\n-        boolean validReleaseIds = true, validLinkedProjectIds = true, validObligationId = true;\n+    private boolean isDependenciesExists(Project project, User user) {\n+        boolean isValidDependentIds = true;\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            validReleaseIds DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (project.isSetLinkedProjects()) {\n+        if (isValidDependentIds && project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            validLinkedProjectIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n+            isValidDependentIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository) && verifyLinkedProjectsAreAccessible(projectIds, user);\n         }\n \n-        if (project.isSetLinkedObligationId()) {\n+        if (isValidDependentIds && project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            validObligationId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n         }\n-        return validReleaseIds && validLinkedProjectIds && validObligationId;\n+        return isValidDependentIds;\n+    }\n+\n+    private boolean verifyLinkedProjectsAreAccessible(Set<String> linkedProjectIds, User user) {\n+        long nonAccessibleProjectIdsCount = 0;\n+        if (linkedProjectIds != null) {\n+            nonAccessibleProjectIdsCount = linkedProjectIds.stream().filter(id -> {\n+                Project project = repository.get(id);\n+                return !PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ);\n+            }).count();\n+        }\n+\n+        if (nonAccessibleProjectIdsCount > 0)\n+            return false;\n+\n+        return true;\n+\n     }\n \n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex d67a17a4..a118c83f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -272,34 +286,39 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         }\n     }\n \n-    private boolean isDependenciesExists(Project project) {\n+    private boolean isDependenciesExists(Project project, User user) {\n+        boolean isValidDependentIds = true;\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            for (String releaseId : releaseIds) {\n-                Release release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (project.isSetLinkedProjects()) {\n+        if (isValidDependentIds && project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            for (String projectId : projectIds) {\n-                Project linkedProject = repository.get(projectId);\n-                if (linkedProject == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository) && verifyLinkedProjectsAreAccessible(projectIds, user);\n         }\n \n-        if (project.isSetLinkedObligationId()) {\n+        if (isValidDependentIds && project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            if (obligationRepository.get(obligationId) == null) {\n-                return false;\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n+        }\n+        return isValidDependentIds;\n+    }\n+\n+    private boolean verifyLinkedProjectsAreAccessible(Set<String> linkedProjectIds, User user) {\n+        long nonAccessibleProjectIdsCount = 0;\n+        if (linkedProjectIds != null) {\n+            nonAccessibleProjectIdsCount = linkedProjectIds.stream().filter(id -> {\n+                Project project = repository.get(id);\n+                return !PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ);\n+            }).count();\n         }\n+\n+        if (nonAccessibleProjectIdsCount > 0)\n+            return false;\n+\n         return true;\n+\n     }\n \n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n", "next_change": {"commit": "cd29922ab2a80d54b65b33ff27e579e33f62676d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex a118c83f..1e22108d 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -321,6 +427,23 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n+    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n+        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n+        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n+        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n+        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n+        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n+        if (CommonUtils.isNotEmpty(added)) {\n+            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n+        }\n+        if (CommonUtils.isNotEmpty(removed)) {\n+            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n+        }\n+        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n+        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n+        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n+    }\n+\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "1d3423cb4c7638dd6ab2332876daa0a545441eec", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 1e22108d..292da111 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -427,23 +430,6 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n-    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n-        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n-        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n-        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n-        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n-        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n-        if (CommonUtils.isNotEmpty(added)) {\n-            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n-        }\n-        if (CommonUtils.isNotEmpty(removed)) {\n-            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n-        }\n-        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n-        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n-        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n-    }\n-\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "ebe9a9d405db8ab19fbe033edee9aad2b6cebf36", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 292da111..1f5d122c 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -430,6 +427,23 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n+    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n+        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n+        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n+        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n+        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n+        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n+        if (CommonUtils.isNotEmpty(added)) {\n+            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n+        }\n+        if (CommonUtils.isNotEmpty(removed)) {\n+            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n+        }\n+        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n+        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n+        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n+    }\n+\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "3ac3ba233dbf806fac01b597f59339fac39a9fa1", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 1f5d122c..8bc0289f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -444,26 +505,35 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         sendMailForUpdatedProjectWithClearingRequest(updated, user);\n     }\n \n-    public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n-        ProjectObligation obligation = obligationRepository.get(obligationId);\n+    public ObligationList getLinkedObligations(String obligationId, User user) throws TException {\n+        ObligationList obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n         assertId(obligation.getProjectId());\n         return obligation;\n     }\n \n-    public RequestStatus addLinkedObligations(ProjectObligation obligation, User user) throws TException {\n+    public RequestStatus addLinkedObligations(ObligationList obligation, User user) throws TException {\n         ThriftValidate.prepareProjectObligation(obligation);\n         obligationRepository.add(obligation);\n         Project project = getProjectById(obligation.getProjectId(), user);\n         project.setLinkedObligationId(obligation.getId());\n         repository.update(project);\n+        project.unsetLinkedObligationId();\n+        DatabaseHandlerUtil.addChangeLogs(obligation, null, user.getEmail(), Operation.CREATE, attachmentConnector,\n+                Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n+        DatabaseHandlerUtil.addChangeLogs(getProjectById(obligation.getProjectId(), user), project, user.getEmail(),\n+                Operation.UPDATE, attachmentConnector, Lists.newArrayList(), null, Operation.OBLIGATION_ADD);\n+\n         return RequestStatus.SUCCESS;\n     }\n \n-    public RequestStatus updateLinkedObligations(ProjectObligation obligation, User user) throws TException {\n+    public RequestStatus updateLinkedObligations(ObligationList obligation, User user) throws TException {\n         Project project = getProjectById(obligation.getProjectId(), user);\n+        ObligationList projectObligationbefore = obligationRepository.get(obligation.getId());\n         if (isWriteActionAllowedOnProject(project, user)) {\n             obligationRepository.update(obligation);\n+            DatabaseHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n+                    attachmentConnector, Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n             return RequestStatus.SUCCESS;\n         }\n         return RequestStatus.FAILURE;\n", "next_change": {"commit": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 8bc0289f..b2cf51cf 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -532,7 +574,7 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         ObligationList projectObligationbefore = obligationRepository.get(obligation.getId());\n         if (isWriteActionAllowedOnProject(project, user)) {\n             obligationRepository.update(obligation);\n-            DatabaseHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n+            dbHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n                     attachmentConnector, Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n             return RequestStatus.SUCCESS;\n         }\n", "next_change": {"commit": "01eecf3a01c2eeca3ec86623d70ab65e42883a8e", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex b2cf51cf..9f712f79 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -581,6 +608,12 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n+    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n+        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n+        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n+                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n+    }\n+\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": {"commit": "09c12696768ab533f45f9c449416a925ef815f68", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 9f712f79..5b046365 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -608,12 +594,6 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n-    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n-        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n-        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n-                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n-    }\n-\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": {"commit": "28c0a412076c9f97ddd182d585440c87d25bd879", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 5b046365..c00a6de0 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -594,6 +607,12 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n+    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n+        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n+        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n+                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n+    }\n+\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "9a53e7bb52d069830801b557bd27e5492623b28f", "committedDate": "2020-03-04 11:20:42 +0530", "message": "feat(ProjectUI): Project Clearing Report"}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "cd29922ab2a80d54b65b33ff27e579e33f62676d", "committedDate": "2020-04-14 12:11:39 +0530", "message": "fix(UI): Clearing Request bug fix and improvements"}, {"oid": "1d3423cb4c7638dd6ab2332876daa0a545441eec", "committedDate": "2020-04-23 17:07:54 +0530", "message": "feat(ReadmeOss): Filter linked project from ReadmeOss based on selection."}, {"oid": "ebe9a9d405db8ab19fbe033edee9aad2b6cebf36", "committedDate": "2020-04-24 16:05:31 +0530", "message": "Merge pull request #833 from siemens/feat/ReadmeGenerationProjectRelation"}, {"oid": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "committedDate": "2020-05-06 17:42:55 +0530", "message": "feat(ChangeLogs): Revision history of Document"}, {"oid": "0300040115fb257a824be5ce1b1451b145bfbb74", "committedDate": "2020-05-13 10:10:01 +0530", "message": "feat(ProjectUI): Unified view of Linked Project and Releases, Clearing status, Linked Release Hierarchy. View includes tree view and list view"}, {"oid": "4c7b0e72cb56b9a34db2ad7116b15badc907523e", "committedDate": "2020-05-22 17:12:49 +0530", "message": "fix(ClearingStatusView): Fixed uneven button height, console error related to createVulnerabilityTable, takes lot of time to load Clearing status list view for large dataset."}, {"oid": "a2e651035a8221a67f4d4c11ecbdfb696f514b20", "committedDate": "2020-05-29 15:49:25 +0530", "message": "feat(PreferenceUI): Enabled Email notification for CR"}, {"oid": "887533ba0cd803a3ceff4f3da9df540071d08275", "committedDate": "2020-06-30 10:39:34 +0530", "message": "fix(ProjectModeration): Fixed isWriteActionAllowedOnProject check for project update   * Fixed incorrect value for Visibility in Edit Project view which has existing moderation request"}, {"oid": "ea6d31ad7d4aea3d8a9f5528afd58ac542b32501", "committedDate": "2020-07-03 20:33:45 +0530", "message": "feat(CRUI): Modifications in Clearing Request table in moderation tab"}, {"oid": "ebc8f85275b89d821e9daa2f0a14fe819a2fea75", "committedDate": "2020-08-11 06:45:17 +0200", "message": "chore(logging): Upgraded from log4j 1 to log4j 2."}, {"oid": "60f82182115aa465f7a00935428762faa722e549", "committedDate": "2020-08-18 09:17:55 +0530", "message": "feat(ProjectReleaseRelation): Added new Field comment, createdOn, createdBy in ProjectReleaseRelation   * comment field is available in UI, REST and Excel   * createdOn , createdBy is not available in UI but available in REST and Excel."}, {"oid": "a1724b749e4b57d2daff3717330b6d838d2730e5", "committedDate": "2020-08-19 13:51:36 +0530", "message": "Merge pull request #947 from siemens/feat/ProjectReleaseCommentAndRequestedDate"}, {"oid": "af625d7be4e4f93dc7c5601295f38e3de95835e2", "committedDate": "2020-09-25 11:35:21 +0530", "message": "feat(ProjectUI): Added 2 new fields in Project Obligation"}, {"oid": "3ac3ba233dbf806fac01b597f59339fac39a9fa1", "committedDate": "2020-10-06 11:15:30 +0530", "message": "feat(ProjectObligation): Changes in Project Obligation Data Model   * renamed linkedObligations to linkedObligationStatus in ProjectObligation struct   * renamed struct ProjectObligation to struct ObligationList"}, {"oid": "04020bef3fcf78be506cbe237faa2f5df4206961", "committedDate": "2020-10-07 14:25:02 +0530", "message": "feat(CR-UI): Enhancement & Bug fixes"}, {"oid": "99b3f81692e987b34826919ce4d3408426b71699", "committedDate": "2020-10-16 17:00:18 +0530", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo"}, {"oid": "a6cf31a312fd0e8a2368dd870ec09dbba900ad65", "committedDate": "2020-11-19 14:03:09 +0530", "message": "feat(projectEdit): Project creators and moderators can edit few fields in a closed project"}, {"oid": "2ed2ad807f41cfc794577b513e09d9756a04bb33", "committedDate": "2021-01-29 18:50:25 +0530", "message": "fix(LicenseInfo): Optimized loading of license info, source code download, Clearing report page"}, {"oid": "eefcf17fd9bf33821d542ad04faa35a4f8557945", "committedDate": "2021-02-11 17:43:21 +0530", "message": "fix(excelexport): Projects with linked releases excel export error"}, {"oid": "d4017345297a6bf46dfef73f56f1ba2aaaeffd9d", "committedDate": "2021-04-01 00:21:27 -0700", "message": "feat(PredefinedTags):Predefined tags per group in the Projects Tag field."}, {"oid": "d80217339bb1e75385cda8e740d79224c8f400b3", "committedDate": "2021-04-16 17:25:24 +0530", "message": "feat(AttachmentVirusScan): Store attachment to File System asynchronously, handle saving of large multi-part attachments. Fix test cases"}, {"oid": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "committedDate": "2021-05-04 16:00:50 +0530", "message": "feat(cloudant): Migrating from ektorp to cloudant java client"}, {"oid": "bfef025a63b43901020ab8e9f1b6fce87b41dbc0", "committedDate": "2021-06-17 21:02:19 +0530", "message": "feat(ClearingRequestUI): Bug fixes and enhancement"}, {"oid": "f847250f58248d0a4a370bd64510771e4afe3a4b", "committedDate": "2021-06-25 09:43:48 +0530", "message": "feat(ui): Added support to add external URLs to project"}, {"oid": "33bf1e31d9d945fbc8c8ee152d8c9acc4df3e615", "committedDate": "2021-07-22 20:11:19 +0530", "message": "feat(SVM): Added new field enableSvm(Default value - true) for linked project.   * Request/Response structure of get_projects_with_all_details, get_project_by_id, create_project, update_project for linked project changed"}, {"oid": "8d1f96ffae914f6ce227879c697de07cb2e054c5", "committedDate": "2021-07-30 17:41:01 +0900", "message": "feat(log): Added output processing of the change log"}, {"oid": "6c3c51ec1b0ffbdaf19129394754ec716057d255", "committedDate": "2021-08-05 15:25:56 +0900", "message": "fix(log): Fix indentation issue in source code."}, {"oid": "2f85cf708682eca10dee0f3768adf537b0a7dd95", "committedDate": "2021-08-26 16:20:35 +0530", "message": "fix(projects): Fixed thrift timeout by optimizing projects loading"}, {"oid": "f6337094b6543824661e8e0670a62b1ac76dc44a", "committedDate": "2021-11-25 12:42:28 +0530", "message": "fix(rest): Optimize rest api for get project by tag, type, group"}, {"oid": "681eb0c408d24998a38ca14195695d287e99ad92", "committedDate": "2022-01-25 17:47:20 +0900", "message": "fix(ui): Restrict visibility of each component/release like Project"}, {"oid": "4036a822b4ac30bee271b90ad88a3f00850ecc24", "committedDate": "2022-01-28 14:21:56 +0530", "message": "feat(project): Added  vendor for project"}, {"oid": "eda302caae6b9bb6c19df1a6b102ed234f93be43", "committedDate": "2022-02-09 14:44:47 +0530", "message": "Merge pull request #1447 from siemens/feat/vendorForProject"}, {"oid": "26226fbb780f06e6f16fef50f60301e886f2364c", "committedDate": "2022-04-27 14:08:39 +0530", "message": "feat(exportExcel): Send an email to user with download link once export completed"}, {"oid": "73fe7e68feafa2025081e89eec5797af15b6f819", "committedDate": "2022-06-10 11:41:37 +0530", "message": "feat(export): Enable mailing for exported spreadsheet for components"}, {"oid": "709a5ec90d76a84cde07065ade29cc7461a48198", "committedDate": "2022-06-13 11:15:35 +0530", "message": "feat(UI): ModifiedOn & MOdifiedBy fields for Project/COmponent/Release"}, {"oid": "467801610650caf5195238db8c06a65487a1c292", "committedDate": "2022-06-18 11:29:01 +0530", "message": "Merge pull request #1539 from siemens/feat/ModifiedOnAndModifiedByFields-1479"}, {"oid": "3eb273627cce07bd40ea94ade13db0d2703bfc55", "committedDate": "2022-07-06 19:57:12 +0530", "message": "fix(closedproject): Fixed issue w.r.t. editing close project"}, {"oid": "1550e9098dcbb3e2a7aeeebb2c5ef2861423085a", "committedDate": "2022-08-16 16:32:59 +0900", "message": "feature(ui) : select your group in Project page by grid"}, {"oid": "9b8d5cc06b82a20eac530e5cc338bde5be90ca65", "committedDate": "2022-08-17 13:27:48 +0530", "message": "Merge pull request #1575 from KoukiHama/department-search"}, {"oid": "4596f06db0bc044dcd1d1b94aef6746dad1d2b3d", "committedDate": "2022-09-29 02:32:37 +0000", "message": "feat(SPDX): Use new SPDX library (#1496)"}, {"oid": "b4c14975ccc40d4cc36277260a1cb28b003fe2e4", "committedDate": "2022-10-18 21:49:19 +0530", "message": "feat(CRUI):Change CR state 'On Hold' to 'Awaiting Response' & edit PreferredClearingDate"}, {"oid": "01eecf3a01c2eeca3ec86623d70ab65e42883a8e", "committedDate": "2022-12-09 12:31:12 +0530", "message": "fix(ProjectUI): Changing Project group should update CR"}, {"oid": "09c12696768ab533f45f9c449416a925ef815f68", "committedDate": "2022-12-14 09:24:50 +0530", "message": "fix(UI): unset few field while create a duplicate in project and component"}, {"oid": "28c0a412076c9f97ddd182d585440c87d25bd879", "committedDate": "2023-01-09 14:33:07 +0530", "message": "Merge pull request #1756 from siemens/fix/duplicationInProductAndComponent"}, {"oid": "eabbb00537bbd50f4fad6019b1647e98c72ce2b1", "committedDate": "2023-01-10 14:54:52 +0530", "message": "feat(svm): Publish SVM codes to Community"}, {"oid": "e663631830987f0b9a690523366734c0198955ad", "committedDate": "2023-02-22 14:15:40 +0530", "message": "fix(UI): Error when creating/editing duplicate project/component/release"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NDIzOA==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r379294238", "body": "Please add validation for main license Id. For Release also.", "bodyText": "Please add validation for main license Id. For Release also.", "bodyHTML": "<p dir=\"auto\">Please add validation for main license Id. For Release also.</p>", "author": "JaideepPalit", "createdAt": "2020-02-14T08:05:13Z", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java", "diffHunk": "@@ -452,6 +464,55 @@ public RequestStatus updateComponent(Component component, User user) throws SW36\n \n     }\n \n+    private boolean isDependenciesExistInComponent(Component component) {\n+        if (component.isSetReleaseIds()) {\n+            Set<String> releaseIds = component.getReleaseIds();\n+            for (String releaseId : releaseIds) {\n+                Release release = releaseRepository.get(releaseId);\n+                if (release == null) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        if (component.isSetDefaultVendorId() && !component.getDefaultVendorId().isEmpty()) {\n+            Vendor defaultVendor = vendorRepository.get(component.getDefaultVendorId());\n+            if (defaultVendor == null) {\n+                return false;\n+            }\n+        }", "originalCommit": "cc0354e4ff9325558771249bac493d0606de9ebf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ab666aea2442bbb95bcbd0136f7612f2528f910", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 4902c2cf..628b25a3 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -467,19 +467,11 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     private boolean isDependenciesExistInComponent(Component component) {\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            for (String releaseId : releaseIds) {\n-                Release release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            return DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (component.isSetDefaultVendorId() && !component.getDefaultVendorId().isEmpty()) {\n-            Vendor defaultVendor = vendorRepository.get(component.getDefaultVendorId());\n-            if (defaultVendor == null) {\n-                return false;\n-            }\n+        if (component.isSetDefaultVendorId()) {\n+            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n         return true;\n     }\n", "next_change": {"commit": "85f0ad7f89648cd3eb256b8d5f228a517f106d97", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 628b25a3..499c549c 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,33 +465,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n+        boolean validReleaseIds = true, validdefaultVendor = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n         if (component.isSetDefaultVendorId()) {\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n+            validdefaultVendor = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return true;\n+        return validReleaseIds && validdefaultVendor;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n+        boolean validComponentId = true, validReleaseIdToRelationship = true, vendorId = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n+            validComponentId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n         if (release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n+            validReleaseIdToRelationship = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n         if (release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            return DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            vendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return true;\n+        return validComponentId && validReleaseIdToRelationship && vendorId;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "c623edc76c1054c24fb451147ed238383f2023f6", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 499c549c..70a0deaa 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -491,9 +491,9 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n         if (release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            vendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            validVendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return validComponentId && validReleaseIdToRelationship && vendorId;\n+        return validComponentId && validReleaseIdToRelationship && validVendorId;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "fd0d6454e4f4fec312db711b5124eb55ca15338d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 70a0deaa..1f18dbb4 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,35 +485,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n-        boolean validReleaseIds = true, validdefaultVendor = true;\n+        boolean isValidDependentIds = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (component.isSetDefaultVendorId()) {\n-            validdefaultVendor = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n+        if (isValidDependentIds && component.isSetDefaultVendorId()) {\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return validReleaseIds && validdefaultVendor;\n+        return isValidDependentIds;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n-        boolean validComponentId = true, validReleaseIdToRelationship = true, validVendorId = true;\n+        boolean isValidDependentIds = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            validComponentId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n-        if (release.isSetReleaseIdToRelationship()) {\n+        if (isValidDependentIds && release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            validReleaseIdToRelationship = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n-        if (release.isSetVendorId()) {\n+        if (isValidDependentIds && release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            validVendorId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return validComponentId && validReleaseIdToRelationship && validVendorId;\n+        return isValidDependentIds;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 4902c2cf..1f18dbb4 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -465,52 +485,35 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n     }\n \n     private boolean isDependenciesExistInComponent(Component component) {\n+        boolean isValidDependentIds = true;\n         if (component.isSetReleaseIds()) {\n             Set<String> releaseIds = component.getReleaseIds();\n-            for (String releaseId : releaseIds) {\n-                Release release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (component.isSetDefaultVendorId() && !component.getDefaultVendorId().isEmpty()) {\n-            Vendor defaultVendor = vendorRepository.get(component.getDefaultVendorId());\n-            if (defaultVendor == null) {\n-                return false;\n-            }\n+        if (isValidDependentIds && component.isSetDefaultVendorId()) {\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(component.getDefaultVendorId()), vendorRepository);\n         }\n-        return true;\n+        return isValidDependentIds;\n     }\n \n     private boolean isDependenciesExistsInRelease(Release release) {\n+        boolean isValidDependentIds = true;\n         if (release.isSetComponentId()) {\n             String componentId = release.getComponentId();\n-            Component component = componentRepository.get(componentId);\n-            if (component == null) {\n-                return false;\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(componentId), componentRepository);\n         }\n \n-        if (release.isSetReleaseIdToRelationship()) {\n+        if (isValidDependentIds && release.isSetReleaseIdToRelationship()) {\n             Set<String> releaseIds = release.getReleaseIdToRelationship().keySet();\n-            for (String releaseId : releaseIds) {\n-                release = releaseRepository.get(releaseId);\n-                if (release == null) {\n-                    return false;\n-                }\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(releaseIds), releaseRepository);\n         }\n \n-        if (release.isSetVendorId()) {\n+        if (isValidDependentIds && release.isSetVendorId()) {\n             String vendorId = release.getVendorId();\n-            Vendor vendor = vendorRepository.get(vendorId);\n-            if (vendor == null) {\n-                return false;\n-            }\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(vendorId), vendorRepository);\n         }\n-        return true;\n+        return isValidDependentIds;\n     }\n \n     private void updateComponentDependentFieldsForRelease(Component component) {\n", "next_change": {"commit": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 1f18dbb4..53172fc2 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -516,11 +576,22 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return isValidDependentIds;\n     }\n \n-    private void updateComponentDependentFieldsForRelease(Component component) {\n+    private void updateComponentDependentFieldsForRelease(Component component, List<ChangeLogs> referenceDocLogList,\n+            String userEdited) {\n         String name = component.getName();\n         for (Release release : releaseRepository.getReleasesFromComponentId(component.getId())) {\n+            ChangeLogs changeLog = DatabaseHandlerUtil.initChangeLogsObj(release, userEdited, component.getId(),\n+                    Operation.UPDATE, Operation.COMPONENT_UPDATE);\n+            Set<ChangedFields> changes = new HashSet<ChangedFields>();\n+            ChangedFields nameFields = new ChangedFields();\n+            nameFields.setFieldName(\"name\");\n+            nameFields.setFieldValueOld(DatabaseHandlerUtil.convertObjectToJson(release.getName()));\n+            nameFields.setFieldValueNew(DatabaseHandlerUtil.convertObjectToJson(name));\n+            changes.add(nameFields);\n+            changeLog.setChanges(changes);\n             release.setName(name);\n             releaseRepository.update(release);\n+            referenceDocLogList.add(changeLog);\n         }\n     }\n \n", "next_change": {"commit": "709a5ec90d76a84cde07065ade29cc7461a48198", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex 53172fc2..eee34cab 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -590,6 +674,7 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n             changes.add(nameFields);\n             changeLog.setChanges(changes);\n             release.setName(name);\n+            updateModifiedFields(release, userEdited);\n             releaseRepository.update(release);\n             referenceDocLogList.add(changeLog);\n         }\n", "next_change": {"commit": "9a1dcb48317759e4217354bebfb667867acf579f", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\nindex eee34cab..2feebb0d 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java\n", "chunk": "@@ -679,6 +685,17 @@ public class ComponentDatabaseHandler extends AttachmentAwareDatabaseHandler {\n             referenceDocLogList.add(changeLog);\n         }\n     }\n+    \n+    private void updateEccStatusForRelease(Component component) {\n+    \tfor (Release release : releaseRepository.getReleasesFromComponentId(component.getId())) {\n+            EccInformation eccInfo = release.getEccInformation();\n+            eccInfo.setEccStatus(ECCStatus.OPEN);\n+            eccInfo.setAl(ECC_FIELDS_VALUE_RESET);\n+            eccInfo.setEccn(ECC_FIELDS_VALUE_RESET);\n+            eccInfo.setEccComment(ECC_FIELDS_VALUE_RESET);\n+            releaseRepository.update(release);\n+    \t}\n+    }\n \n     private boolean changeWouldResultInDuplicate(Component before, Component after) {\n         if (before.getName().equals(after.getName())) {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "3ee65c9b62b7a6a26e2ddf515779fc1af8af4a92", "committedDate": "2020-05-06 11:48:56 +0530", "message": "fix(REST): Added default value(NEW_CLEARING) for Clearing status while create and update Release"}, {"oid": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "committedDate": "2020-05-06 17:42:55 +0530", "message": "feat(ChangeLogs): Revision history of Document"}, {"oid": "5d1d2287822ed389ad13c1683b1af1b9c0697347", "committedDate": "2020-05-07 14:54:27 +0530", "message": "Merge pull request #845 from siemens/fix/ReleaseClearingStateRest"}, {"oid": "79f5c9d4d67396f35c597f0908c6885362e24a07", "committedDate": "2020-05-11 19:04:16 +0530", "message": "fix(mergeComponent): Prevent multiple releases with same name and version for a component, which may occur during merge component."}, {"oid": "8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "committedDate": "2020-06-18 12:09:04 +0530", "message": "feat(SplitComponentUI): Move Component data like releases and attachments from Source Component to Target Component"}, {"oid": "d65be244bbc19093bd5e7e8af76fa9dafd6a2b7a", "committedDate": "2020-08-10 18:05:06 +0530", "message": "fix(ImportSPDXBOM): Set Default value[Default_Category] to categories field of Component if found null or empty"}, {"oid": "ebc8f85275b89d821e9daa2f0a14fe819a2fea75", "committedDate": "2020-08-11 06:45:17 +0200", "message": "chore(logging): Upgraded from log4j 1 to log4j 2."}, {"oid": "49d225e50d03cfa83892a67ea8eee40138c9d97b", "committedDate": "2020-08-13 18:20:05 +0530", "message": "Merge pull request #945 from siemens/fix/importSPDXBOM"}, {"oid": "60f82182115aa465f7a00935428762faa722e549", "committedDate": "2020-08-18 09:17:55 +0530", "message": "feat(ProjectReleaseRelation): Added new Field comment, createdOn, createdBy in ProjectReleaseRelation   * comment field is available in UI, REST and Excel   * createdOn , createdBy is not available in UI but available in REST and Excel."}, {"oid": "a1724b749e4b57d2daff3717330b6d838d2730e5", "committedDate": "2020-08-19 13:51:36 +0530", "message": "Merge pull request #947 from siemens/feat/ProjectReleaseCommentAndRequestedDate"}, {"oid": "04020bef3fcf78be506cbe237faa2f5df4206961", "committedDate": "2020-10-07 14:25:02 +0530", "message": "feat(CR-UI): Enhancement & Bug fixes"}, {"oid": "c1b1e33b87bd2150a3de74654227bae9bf6e5efd", "committedDate": "2020-10-20 12:14:31 +0530", "message": "feat(ui-rest): Changes in Release information   * change title \"Download URL\" to \"Source Code Download URL\"   * add new data filed \"Binary Download URL\"   * added new field in excel sheet"}, {"oid": "034f291c8a8280123cc2ff40b1833db42dbb5b17", "committedDate": "2021-01-28 21:33:54 +0530", "message": "fix(mergeComponentRelease): Attachments not linked properly from source component/Release"}, {"oid": "2ed2ad807f41cfc794577b513e09d9756a04bb33", "committedDate": "2021-01-29 18:50:25 +0530", "message": "fix(LicenseInfo): Optimized loading of license info, source code download, Clearing report page"}, {"oid": "3769c683e37eb61fa872c19793a3c984911fbe73", "committedDate": "2021-02-02 14:06:43 +0530", "message": "Merge pull request #1095 from siemens/fix/mergeCompRelWithAttchmnt"}, {"oid": "eefcf17fd9bf33821d542ad04faa35a4f8557945", "committedDate": "2021-02-11 17:43:21 +0530", "message": "fix(excelexport): Projects with linked releases excel export error"}, {"oid": "c68b4d4ab2b400daeb1804165dcdc613c2999aa6", "committedDate": "2021-03-22 12:12:49 +0530", "message": "fix(OrtIntegration): Fix client to perform case insensitive search of component.   * Set default componentType to OSS in Client.   * Fix duplicate check to case insensitive during create new component"}, {"oid": "d80217339bb1e75385cda8e740d79224c8f400b3", "committedDate": "2021-04-16 17:25:24 +0530", "message": "feat(AttachmentVirusScan): Store attachment to File System asynchronously, handle saving of large multi-part attachments. Fix test cases"}, {"oid": "756190b4bbcd6f66998ae99fdc54532cf00bb566", "committedDate": "2021-04-29 13:35:24 +0530", "message": "feat(ProjectUI): feature to display the source files linked with the licenses"}, {"oid": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "committedDate": "2021-05-04 16:00:50 +0530", "message": "feat(cloudant): Migrating from ektorp to cloudant java client"}, {"oid": "0e22d55ec11988d953885b7fb052b1beaf2f55cf", "committedDate": "2021-05-07 17:40:38 +0530", "message": "feat(components-pagination): paginated view response for components"}, {"oid": "cdf2d2a257717048ad5ff53bea7f841930c3ede5", "committedDate": "2021-05-07 23:01:28 +0200", "message": "Merge pull request #1188 from siemens/feat/LicenseToSourceFileMapping-1052"}, {"oid": "2d56d0b4cfede2425829bdd58bb3d41f5549a15d", "committedDate": "2021-05-28 08:54:11 +0700", "message": "REST: Wrong error handling when deleting multiple components #851"}, {"oid": "8d1f96ffae914f6ce227879c697de07cb2e054c5", "committedDate": "2021-07-30 17:41:01 +0900", "message": "feat(log): Added output processing of the change log"}, {"oid": "6c3c51ec1b0ffbdaf19129394754ec716057d255", "committedDate": "2021-08-05 15:25:56 +0900", "message": "fix(log): Fix indentation issue in source code."}, {"oid": "2b6b9a9d201d5a844b14f1871598b36f298f0cf9", "committedDate": "2021-09-23 13:21:47 +0530", "message": "feat(UI): CLI file clean up assistant"}, {"oid": "843f1f8d7bf3d04c803c20b9572bd477e2624c68", "committedDate": "2021-10-27 12:28:18 +0530", "message": "fix(rest): Get component by name case insensitive"}, {"oid": "854c64537be3996fe202543a958f65d1024600bd", "committedDate": "2022-01-06 10:31:31 +0530", "message": "fix(release): Fixed mainline state is empty when creating a release by ui or rest"}, {"oid": "9807d3810574d2e0f797edf9bcc1b1831c768d7c", "committedDate": "2022-01-18 14:09:39 +0530", "message": "feat(ui): Added new Clearing State and Attachment Type"}, {"oid": "681eb0c408d24998a38ca14195695d287e99ad92", "committedDate": "2022-01-25 17:47:20 +0900", "message": "fix(ui): Restrict visibility of each component/release like Project"}, {"oid": "cbec94a4432b7c60f414370d6d7fbf7f79004d4c", "committedDate": "2022-02-11 10:15:01 +0700", "message": "fix(api): Correct the ECC status when release is created by API"}, {"oid": "d1fd4307b6889f30c6c1236474ced1374694e82b", "committedDate": "2022-02-18 01:11:15 +0530", "message": "fix(ReleaseClearingState): ClearingState not changing to New from Scan Available"}, {"oid": "2deb68f1d3aef8b6a90e0a47e9bc156f6fb19f2e", "committedDate": "2022-02-23 14:37:45 +0530", "message": "Merge pull request #1453 from toshiba/release/bug-fix_release_ecc_status_auto_set_value"}, {"oid": "a8c2334ea4b6dbc85923c68c67f373947a5429f7", "committedDate": "2022-03-03 20:28:08 +0530", "message": "fix(merge): Optimized code to check for write permission of release and components before starting to merge"}, {"oid": "73fe7e68feafa2025081e89eec5797af15b6f819", "committedDate": "2022-06-10 11:41:37 +0530", "message": "feat(export): Enable mailing for exported spreadsheet for components"}, {"oid": "709a5ec90d76a84cde07065ade29cc7461a48198", "committedDate": "2022-06-13 11:15:35 +0530", "message": "feat(UI): ModifiedOn & MOdifiedBy fields for Project/COmponent/Release"}, {"oid": "467801610650caf5195238db8c06a65487a1c292", "committedDate": "2022-06-18 11:29:01 +0530", "message": "Merge pull request #1539 from siemens/feat/ModifiedOnAndModifiedByFields-1479"}, {"oid": "adb4f930fc51693e7a03ebdd37dfa1ec34a3012c", "committedDate": "2022-09-21 04:56:50 -0700", "message": "fix(ecc): Script to cleanup ECC information in release"}, {"oid": "4596f06db0bc044dcd1d1b94aef6746dad1d2b3d", "committedDate": "2022-09-29 02:32:37 +0000", "message": "feat(SPDX): Use new SPDX library (#1496)"}, {"oid": "ea232539dfb232c1f22cd4aa270e2ad933a9e7aa", "committedDate": "2022-10-03 13:58:45 +0530", "message": "Merge pull request #1594 from toshiba/releases/feature-update_library_spdx"}, {"oid": "9a1dcb48317759e4217354bebfb667867acf579f", "committedDate": "2022-10-18 12:25:58 +0530", "message": "fix(ecc): Reset Ecc Fields when Component type is changed."}, {"oid": "ee1ff9fe1c9e41c8cfb8cbbfef77a50d3a0ae9a9", "committedDate": "2022-10-21 06:43:45 +0530", "message": "Merge pull request #1655 from siemens/fix/eccStatus"}, {"oid": "eabbb00537bbd50f4fad6019b1647e98c72ce2b1", "committedDate": "2023-01-10 14:54:52 +0530", "message": "feat(svm): Publish SVM codes to Community"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}, {"oid": "53c8d85da8040dd4c484a328dc9b68586bcbdf4a", "committedDate": "2023-04-20 10:18:43 +0530", "message": "feat(clearing): Improved cloud backend clearing"}, {"oid": "249f48f490be51d004ee56fe0d258fcc018c0707", "committedDate": "2023-04-26 15:49:32 +0700", "message": "feat(SPDX): Making new tab in component release pages for showing SPDX/SPDX Lite data #1240"}, {"oid": "96a0328144345e4338ab2f809e14e0a980b2d924", "committedDate": "2023-05-15 08:52:44 +0700", "message": "feat(api): endpoint get vulnerabilities of a component"}, {"oid": "764a24c6c649577bcc84b97fce8771aca6392453", "committedDate": "2023-05-19 15:58:27 +0700", "message": "feat(api): Endpoint get release overview by component"}, {"oid": "8d14955182db3a1e8d3fd6f75335e9172550ea77", "committedDate": "2023-05-21 14:51:45 +0530", "message": "Merge pull request #1923 from siemens/feat/CloudBackendClearing"}, {"oid": "e34eb8c56424ab8d3dc241d08bcf2ac5f663c40b", "committedDate": "2023-05-29 12:31:27 +0530", "message": "Merge pull request #1943 from toshiba/release/feature-api_get_all_release_by_component"}]}, {"oid": "0ab666aea2442bbb95bcbd0136f7612f2528f910", "url": "https://github.com/eclipse/sw360/commit/0ab666aea2442bbb95bcbd0136f7612f2528f910", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-17T10:02:23Z", "type": "forcePushed"}, {"oid": "ca6ba50aee3cc2111253568c26d8520724e8b348", "url": "https://github.com/eclipse/sw360/commit/ca6ba50aee3cc2111253568c26d8520724e8b348", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-17T14:30:52Z", "type": "forcePushed"}, {"oid": "295c3d5f5de877525df84c7822fffc544c854d90", "url": "https://github.com/eclipse/sw360/commit/295c3d5f5de877525df84c7822fffc544c854d90", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-17T14:37:58Z", "type": "forcePushed"}, {"oid": "85f0ad7f89648cd3eb256b8d5f228a517f106d97", "url": "https://github.com/eclipse/sw360/commit/85f0ad7f89648cd3eb256b8d5f228a517f106d97", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-18T08:14:42Z", "type": "forcePushed"}, {"oid": "c623edc76c1054c24fb451147ed238383f2023f6", "url": "https://github.com/eclipse/sw360/commit/c623edc76c1054c24fb451147ed238383f2023f6", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-18T08:28:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc5MTgwMA==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r381791800", "body": "Maybe it would be good to stop validation once any doc id is not found and throw error message.\r\nSame for validate Component and Release\r\n\r\nIf possible we can check is Linked Projects are Visible to user using `PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ)`\r\n", "bodyText": "Maybe it would be good to stop validation once any doc id is not found and throw error message.\nSame for validate Component and Release\nIf possible we can check is Linked Projects are Visible to user using PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ)", "bodyHTML": "<p dir=\"auto\">Maybe it would be good to stop validation once any doc id is not found and throw error message.<br>\nSame for validate Component and Release</p>\n<p dir=\"auto\">If possible we can check is Linked Projects are Visible to user using <code>PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ)</code></p>", "author": "JaideepPalit", "createdAt": "2020-02-20T06:13:44Z", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java", "diffHunk": "@@ -261,6 +272,25 @@ public RequestStatus updateProject(Project project, User user) throws SW360Excep\n         }\n     }\n \n+    private boolean isDependenciesExists(Project project) {\n+        boolean validReleaseIds = true, validLinkedProjectIds = true, validObligationId = true;\n+        if (project.isSetReleaseIdToUsage()) {\n+            Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n+            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+        }\n+\n+        if (project.isSetLinkedProjects()) {\n+            Set<String> projectIds = project.getLinkedProjects().keySet();\n+            validLinkedProjectIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n+        }\n+\n+        if (project.isSetLinkedObligationId()) {", "originalCommit": "c623edc76c1054c24fb451147ed238383f2023f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgzMzAxNQ==", "url": "https://github.com/eclipse/sw360/pull/776#discussion_r381833015", "bodyText": "Done", "author": "smrutis1", "createdAt": "2020-02-20T07:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc5MTgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "fd0d6454e4f4fec312db711b5124eb55ca15338d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 817703f3..a118c83f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -272,23 +286,39 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         }\n     }\n \n-    private boolean isDependenciesExists(Project project) {\n-        boolean validReleaseIds = true, validLinkedProjectIds = true, validObligationId = true;\n+    private boolean isDependenciesExists(Project project, User user) {\n+        boolean isValidDependentIds = true;\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (project.isSetLinkedProjects()) {\n+        if (isValidDependentIds && project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            validLinkedProjectIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n+            isValidDependentIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository) && verifyLinkedProjectsAreAccessible(projectIds, user);\n         }\n \n-        if (project.isSetLinkedObligationId()) {\n+        if (isValidDependentIds && project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            validObligationId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n         }\n-        return validReleaseIds && validLinkedProjectIds && validObligationId;\n+        return isValidDependentIds;\n+    }\n+\n+    private boolean verifyLinkedProjectsAreAccessible(Set<String> linkedProjectIds, User user) {\n+        long nonAccessibleProjectIdsCount = 0;\n+        if (linkedProjectIds != null) {\n+            nonAccessibleProjectIdsCount = linkedProjectIds.stream().filter(id -> {\n+                Project project = repository.get(id);\n+                return !PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ);\n+            }).count();\n+        }\n+\n+        if (nonAccessibleProjectIdsCount > 0)\n+            return false;\n+\n+        return true;\n+\n     }\n \n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d283d82c0a73e036328a756bce8eb67202346b1a", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 817703f3..a118c83f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -272,23 +286,39 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         }\n     }\n \n-    private boolean isDependenciesExists(Project project) {\n-        boolean validReleaseIds = true, validLinkedProjectIds = true, validObligationId = true;\n+    private boolean isDependenciesExists(Project project, User user) {\n+        boolean isValidDependentIds = true;\n         if (project.isSetReleaseIdToUsage()) {\n             Set<String> releaseIds = project.getReleaseIdToUsage().keySet();\n-            validReleaseIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(releaseIds, releaseRepository);\n         }\n \n-        if (project.isSetLinkedProjects()) {\n+        if (isValidDependentIds && project.isSetLinkedProjects()) {\n             Set<String> projectIds = project.getLinkedProjects().keySet();\n-            validLinkedProjectIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository);\n+            isValidDependentIds =  DatabaseHandlerUtil.isAllIdInSetExists(projectIds, repository) && verifyLinkedProjectsAreAccessible(projectIds, user);\n         }\n \n-        if (project.isSetLinkedObligationId()) {\n+        if (isValidDependentIds && project.isSetLinkedObligationId()) {\n             String obligationId = project.getLinkedObligationId();\n-            validObligationId = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n+            isValidDependentIds = DatabaseHandlerUtil.isAllIdInSetExists(Sets.newHashSet(obligationId), obligationRepository);\n         }\n-        return validReleaseIds && validLinkedProjectIds && validObligationId;\n+        return isValidDependentIds;\n+    }\n+\n+    private boolean verifyLinkedProjectsAreAccessible(Set<String> linkedProjectIds, User user) {\n+        long nonAccessibleProjectIdsCount = 0;\n+        if (linkedProjectIds != null) {\n+            nonAccessibleProjectIdsCount = linkedProjectIds.stream().filter(id -> {\n+                Project project = repository.get(id);\n+                return !PermissionUtils.makePermission(project, user).isActionAllowed(RequestedAction.READ);\n+            }).count();\n+        }\n+\n+        if (nonAccessibleProjectIdsCount > 0)\n+            return false;\n+\n+        return true;\n+\n     }\n \n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n", "next_change": {"commit": "cd29922ab2a80d54b65b33ff27e579e33f62676d", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex a118c83f..1e22108d 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -321,6 +427,23 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n+    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n+        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n+        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n+        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n+        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n+        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n+        if (CommonUtils.isNotEmpty(added)) {\n+            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n+        }\n+        if (CommonUtils.isNotEmpty(removed)) {\n+            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n+        }\n+        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n+        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n+        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n+    }\n+\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "1d3423cb4c7638dd6ab2332876daa0a545441eec", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 1e22108d..292da111 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -427,23 +430,6 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n-    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n-        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n-        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n-        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n-        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n-        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n-        if (CommonUtils.isNotEmpty(added)) {\n-            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n-        }\n-        if (CommonUtils.isNotEmpty(removed)) {\n-            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n-        }\n-        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n-        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n-        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n-    }\n-\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "ebe9a9d405db8ab19fbe033edee9aad2b6cebf36", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 292da111..1f5d122c 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -430,6 +427,23 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n \n     }\n \n+    private void addCommentToClearingRequest(Project updated, Project current, User user) {\n+        Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n+        Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n+        Set<String> added = Sets.difference(updatedReleaseIds, currentReleaseIds);\n+        Set<String> removed = Sets.difference(currentReleaseIds, updatedReleaseIds);\n+        StringBuilder commentText = new StringBuilder(\"Linked release(s) are updated for the project.\");\n+        if (CommonUtils.isNotEmpty(added)) {\n+            commentText.append(\"\\nAdded Release Ids: \").append(String.join(\", \", added));\n+        }\n+        if (CommonUtils.isNotEmpty(removed)) {\n+            commentText.append(\"\\nRemoved Release Ids: \").append(String.join(\", \", removed));\n+        }\n+        Comment comment = new Comment().setText(commentText.toString()).setCommentedBy(user.getEmail()).setAutoGenerated(true);\n+        moderator.addCommentToClearingRequest(current.getClearingRequestId(), comment, user);\n+        sendMailForUpdatedProjectWithClearingRequest(updated, user);\n+    }\n+\n     public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n         ProjectObligation obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n", "next_change": {"commit": "3ac3ba233dbf806fac01b597f59339fac39a9fa1", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 1f5d122c..8bc0289f 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -444,26 +505,35 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         sendMailForUpdatedProjectWithClearingRequest(updated, user);\n     }\n \n-    public ProjectObligation getLinkedObligations(String obligationId, User user) throws TException {\n-        ProjectObligation obligation = obligationRepository.get(obligationId);\n+    public ObligationList getLinkedObligations(String obligationId, User user) throws TException {\n+        ObligationList obligation = obligationRepository.get(obligationId);\n         assertNotNull(obligation);\n         assertId(obligation.getProjectId());\n         return obligation;\n     }\n \n-    public RequestStatus addLinkedObligations(ProjectObligation obligation, User user) throws TException {\n+    public RequestStatus addLinkedObligations(ObligationList obligation, User user) throws TException {\n         ThriftValidate.prepareProjectObligation(obligation);\n         obligationRepository.add(obligation);\n         Project project = getProjectById(obligation.getProjectId(), user);\n         project.setLinkedObligationId(obligation.getId());\n         repository.update(project);\n+        project.unsetLinkedObligationId();\n+        DatabaseHandlerUtil.addChangeLogs(obligation, null, user.getEmail(), Operation.CREATE, attachmentConnector,\n+                Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n+        DatabaseHandlerUtil.addChangeLogs(getProjectById(obligation.getProjectId(), user), project, user.getEmail(),\n+                Operation.UPDATE, attachmentConnector, Lists.newArrayList(), null, Operation.OBLIGATION_ADD);\n+\n         return RequestStatus.SUCCESS;\n     }\n \n-    public RequestStatus updateLinkedObligations(ProjectObligation obligation, User user) throws TException {\n+    public RequestStatus updateLinkedObligations(ObligationList obligation, User user) throws TException {\n         Project project = getProjectById(obligation.getProjectId(), user);\n+        ObligationList projectObligationbefore = obligationRepository.get(obligation.getId());\n         if (isWriteActionAllowedOnProject(project, user)) {\n             obligationRepository.update(obligation);\n+            DatabaseHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n+                    attachmentConnector, Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n             return RequestStatus.SUCCESS;\n         }\n         return RequestStatus.FAILURE;\n", "next_change": {"commit": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 8bc0289f..b2cf51cf 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -532,7 +574,7 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         ObligationList projectObligationbefore = obligationRepository.get(obligation.getId());\n         if (isWriteActionAllowedOnProject(project, user)) {\n             obligationRepository.update(obligation);\n-            DatabaseHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n+            dbHandlerUtil.addChangeLogs(obligation, projectObligationbefore, user.getEmail(), Operation.UPDATE,\n                     attachmentConnector, Lists.newArrayList(), obligation.getProjectId(), Operation.PROJECT_UPDATE);\n             return RequestStatus.SUCCESS;\n         }\n", "next_change": {"commit": "01eecf3a01c2eeca3ec86623d70ab65e42883a8e", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex b2cf51cf..9f712f79 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -581,6 +608,12 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n+    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n+        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n+        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n+                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n+    }\n+\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": {"commit": "09c12696768ab533f45f9c449416a925ef815f68", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 9f712f79..5b046365 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -608,12 +594,6 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n-    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n-        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n-        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n-                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n-    }\n-\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": {"commit": "28c0a412076c9f97ddd182d585440c87d25bd879", "changed_code": [{"header": "diff --git a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\nindex 5b046365..c00a6de0 100644\n--- a/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n+++ b/backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ProjectDatabaseHandler.java\n", "chunk": "@@ -594,6 +607,12 @@ public class ProjectDatabaseHandler extends AttachmentAwareDatabaseHandler {\n         return RequestStatus.FAILURE;\n     }\n \n+    private boolean isProjectBusinessUnitUpdated(Project updated, Project current, User user) {\n+        ClearingRequest cr = moderator.getClearingRequestByProjectId(current.getId(), user);\n+        return !CommonUtils.nullToEmptyString(updated.getBusinessUnit()).equalsIgnoreCase(current.getBusinessUnit())\n+                && !cr.getProjectBU().equalsIgnoreCase(updated.getBusinessUnit());\n+    }\n+\n     private boolean isLinkedReleaseUpdated(Project updated, Project current) {\n         Set<String> updatedReleaseIds = CommonUtils.getNullToEmptyKeyset(updated.getReleaseIdToUsage());\n         Set<String> currentReleaseIds = CommonUtils.getNullToEmptyKeyset(current.getReleaseIdToUsage());\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d283d82c0a73e036328a756bce8eb67202346b1a", "message": "Merge commit", "committedDate": null}, {"oid": "9a53e7bb52d069830801b557bd27e5492623b28f", "committedDate": "2020-03-04 11:20:42 +0530", "message": "feat(ProjectUI): Project Clearing Report"}, {"oid": "7bd1fd5b61582143226738c65be95a0ac70cce7a", "committedDate": "2020-03-10 15:04:18 +0530", "message": "fix(UI/REST): Remove Trailing and leading whitespace for all fields in component, release and project"}, {"oid": "cd29922ab2a80d54b65b33ff27e579e33f62676d", "committedDate": "2020-04-14 12:11:39 +0530", "message": "fix(UI): Clearing Request bug fix and improvements"}, {"oid": "1d3423cb4c7638dd6ab2332876daa0a545441eec", "committedDate": "2020-04-23 17:07:54 +0530", "message": "feat(ReadmeOss): Filter linked project from ReadmeOss based on selection."}, {"oid": "ebe9a9d405db8ab19fbe033edee9aad2b6cebf36", "committedDate": "2020-04-24 16:05:31 +0530", "message": "Merge pull request #833 from siemens/feat/ReadmeGenerationProjectRelation"}, {"oid": "04b57fd1951df5f1d41ceb42a341e8e166c812a7", "committedDate": "2020-05-06 17:42:55 +0530", "message": "feat(ChangeLogs): Revision history of Document"}, {"oid": "0300040115fb257a824be5ce1b1451b145bfbb74", "committedDate": "2020-05-13 10:10:01 +0530", "message": "feat(ProjectUI): Unified view of Linked Project and Releases, Clearing status, Linked Release Hierarchy. View includes tree view and list view"}, {"oid": "4c7b0e72cb56b9a34db2ad7116b15badc907523e", "committedDate": "2020-05-22 17:12:49 +0530", "message": "fix(ClearingStatusView): Fixed uneven button height, console error related to createVulnerabilityTable, takes lot of time to load Clearing status list view for large dataset."}, {"oid": "a2e651035a8221a67f4d4c11ecbdfb696f514b20", "committedDate": "2020-05-29 15:49:25 +0530", "message": "feat(PreferenceUI): Enabled Email notification for CR"}, {"oid": "887533ba0cd803a3ceff4f3da9df540071d08275", "committedDate": "2020-06-30 10:39:34 +0530", "message": "fix(ProjectModeration): Fixed isWriteActionAllowedOnProject check for project update   * Fixed incorrect value for Visibility in Edit Project view which has existing moderation request"}, {"oid": "ea6d31ad7d4aea3d8a9f5528afd58ac542b32501", "committedDate": "2020-07-03 20:33:45 +0530", "message": "feat(CRUI): Modifications in Clearing Request table in moderation tab"}, {"oid": "ebc8f85275b89d821e9daa2f0a14fe819a2fea75", "committedDate": "2020-08-11 06:45:17 +0200", "message": "chore(logging): Upgraded from log4j 1 to log4j 2."}, {"oid": "60f82182115aa465f7a00935428762faa722e549", "committedDate": "2020-08-18 09:17:55 +0530", "message": "feat(ProjectReleaseRelation): Added new Field comment, createdOn, createdBy in ProjectReleaseRelation   * comment field is available in UI, REST and Excel   * createdOn , createdBy is not available in UI but available in REST and Excel."}, {"oid": "a1724b749e4b57d2daff3717330b6d838d2730e5", "committedDate": "2020-08-19 13:51:36 +0530", "message": "Merge pull request #947 from siemens/feat/ProjectReleaseCommentAndRequestedDate"}, {"oid": "af625d7be4e4f93dc7c5601295f38e3de95835e2", "committedDate": "2020-09-25 11:35:21 +0530", "message": "feat(ProjectUI): Added 2 new fields in Project Obligation"}, {"oid": "3ac3ba233dbf806fac01b597f59339fac39a9fa1", "committedDate": "2020-10-06 11:15:30 +0530", "message": "feat(ProjectObligation): Changes in Project Obligation Data Model   * renamed linkedObligations to linkedObligationStatus in ProjectObligation struct   * renamed struct ProjectObligation to struct ObligationList"}, {"oid": "04020bef3fcf78be506cbe237faa2f5df4206961", "committedDate": "2020-10-07 14:25:02 +0530", "message": "feat(CR-UI): Enhancement & Bug fixes"}, {"oid": "99b3f81692e987b34826919ce4d3408426b71699", "committedDate": "2020-10-16 17:00:18 +0530", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo"}, {"oid": "a6cf31a312fd0e8a2368dd870ec09dbba900ad65", "committedDate": "2020-11-19 14:03:09 +0530", "message": "feat(projectEdit): Project creators and moderators can edit few fields in a closed project"}, {"oid": "2ed2ad807f41cfc794577b513e09d9756a04bb33", "committedDate": "2021-01-29 18:50:25 +0530", "message": "fix(LicenseInfo): Optimized loading of license info, source code download, Clearing report page"}, {"oid": "eefcf17fd9bf33821d542ad04faa35a4f8557945", "committedDate": "2021-02-11 17:43:21 +0530", "message": "fix(excelexport): Projects with linked releases excel export error"}, {"oid": "d4017345297a6bf46dfef73f56f1ba2aaaeffd9d", "committedDate": "2021-04-01 00:21:27 -0700", "message": "feat(PredefinedTags):Predefined tags per group in the Projects Tag field."}, {"oid": "d80217339bb1e75385cda8e740d79224c8f400b3", "committedDate": "2021-04-16 17:25:24 +0530", "message": "feat(AttachmentVirusScan): Store attachment to File System asynchronously, handle saving of large multi-part attachments. Fix test cases"}, {"oid": "fd95a2cf3cf3a31d2c8aec4debc61ad6b4aba78f", "committedDate": "2021-05-04 16:00:50 +0530", "message": "feat(cloudant): Migrating from ektorp to cloudant java client"}, {"oid": "bfef025a63b43901020ab8e9f1b6fce87b41dbc0", "committedDate": "2021-06-17 21:02:19 +0530", "message": "feat(ClearingRequestUI): Bug fixes and enhancement"}, {"oid": "f847250f58248d0a4a370bd64510771e4afe3a4b", "committedDate": "2021-06-25 09:43:48 +0530", "message": "feat(ui): Added support to add external URLs to project"}, {"oid": "33bf1e31d9d945fbc8c8ee152d8c9acc4df3e615", "committedDate": "2021-07-22 20:11:19 +0530", "message": "feat(SVM): Added new field enableSvm(Default value - true) for linked project.   * Request/Response structure of get_projects_with_all_details, get_project_by_id, create_project, update_project for linked project changed"}, {"oid": "8d1f96ffae914f6ce227879c697de07cb2e054c5", "committedDate": "2021-07-30 17:41:01 +0900", "message": "feat(log): Added output processing of the change log"}, {"oid": "6c3c51ec1b0ffbdaf19129394754ec716057d255", "committedDate": "2021-08-05 15:25:56 +0900", "message": "fix(log): Fix indentation issue in source code."}, {"oid": "2f85cf708682eca10dee0f3768adf537b0a7dd95", "committedDate": "2021-08-26 16:20:35 +0530", "message": "fix(projects): Fixed thrift timeout by optimizing projects loading"}, {"oid": "f6337094b6543824661e8e0670a62b1ac76dc44a", "committedDate": "2021-11-25 12:42:28 +0530", "message": "fix(rest): Optimize rest api for get project by tag, type, group"}, {"oid": "681eb0c408d24998a38ca14195695d287e99ad92", "committedDate": "2022-01-25 17:47:20 +0900", "message": "fix(ui): Restrict visibility of each component/release like Project"}, {"oid": "4036a822b4ac30bee271b90ad88a3f00850ecc24", "committedDate": "2022-01-28 14:21:56 +0530", "message": "feat(project): Added  vendor for project"}, {"oid": "eda302caae6b9bb6c19df1a6b102ed234f93be43", "committedDate": "2022-02-09 14:44:47 +0530", "message": "Merge pull request #1447 from siemens/feat/vendorForProject"}, {"oid": "26226fbb780f06e6f16fef50f60301e886f2364c", "committedDate": "2022-04-27 14:08:39 +0530", "message": "feat(exportExcel): Send an email to user with download link once export completed"}, {"oid": "73fe7e68feafa2025081e89eec5797af15b6f819", "committedDate": "2022-06-10 11:41:37 +0530", "message": "feat(export): Enable mailing for exported spreadsheet for components"}, {"oid": "709a5ec90d76a84cde07065ade29cc7461a48198", "committedDate": "2022-06-13 11:15:35 +0530", "message": "feat(UI): ModifiedOn & MOdifiedBy fields for Project/COmponent/Release"}, {"oid": "467801610650caf5195238db8c06a65487a1c292", "committedDate": "2022-06-18 11:29:01 +0530", "message": "Merge pull request #1539 from siemens/feat/ModifiedOnAndModifiedByFields-1479"}, {"oid": "3eb273627cce07bd40ea94ade13db0d2703bfc55", "committedDate": "2022-07-06 19:57:12 +0530", "message": "fix(closedproject): Fixed issue w.r.t. editing close project"}, {"oid": "1550e9098dcbb3e2a7aeeebb2c5ef2861423085a", "committedDate": "2022-08-16 16:32:59 +0900", "message": "feature(ui) : select your group in Project page by grid"}, {"oid": "9b8d5cc06b82a20eac530e5cc338bde5be90ca65", "committedDate": "2022-08-17 13:27:48 +0530", "message": "Merge pull request #1575 from KoukiHama/department-search"}, {"oid": "4596f06db0bc044dcd1d1b94aef6746dad1d2b3d", "committedDate": "2022-09-29 02:32:37 +0000", "message": "feat(SPDX): Use new SPDX library (#1496)"}, {"oid": "b4c14975ccc40d4cc36277260a1cb28b003fe2e4", "committedDate": "2022-10-18 21:49:19 +0530", "message": "feat(CRUI):Change CR state 'On Hold' to 'Awaiting Response' & edit PreferredClearingDate"}, {"oid": "01eecf3a01c2eeca3ec86623d70ab65e42883a8e", "committedDate": "2022-12-09 12:31:12 +0530", "message": "fix(ProjectUI): Changing Project group should update CR"}, {"oid": "09c12696768ab533f45f9c449416a925ef815f68", "committedDate": "2022-12-14 09:24:50 +0530", "message": "fix(UI): unset few field while create a duplicate in project and component"}, {"oid": "28c0a412076c9f97ddd182d585440c87d25bd879", "committedDate": "2023-01-09 14:33:07 +0530", "message": "Merge pull request #1756 from siemens/fix/duplicationInProductAndComponent"}, {"oid": "eabbb00537bbd50f4fad6019b1647e98c72ce2b1", "committedDate": "2023-01-10 14:54:52 +0530", "message": "feat(svm): Publish SVM codes to Community"}, {"oid": "e663631830987f0b9a690523366734c0198955ad", "committedDate": "2023-02-22 14:15:40 +0530", "message": "fix(UI): Error when creating/editing duplicate project/component/release"}, {"oid": "aafc95808578d09fa1b9c600dd520d53ec0bb351", "committedDate": "2023-03-31 11:18:57 +0900", "message": "feat(rest) : Update data without moderation request And This features' a configurable setting"}]}, {"oid": "fd0d6454e4f4fec312db711b5124eb55ca15338d", "url": "https://github.com/eclipse/sw360/commit/fd0d6454e4f4fec312db711b5124eb55ca15338d", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-20T07:46:30Z", "type": "forcePushed"}, {"oid": "28463bd1912b3caa3f45b8965f4af80e3727152c", "url": "https://github.com/eclipse/sw360/commit/28463bd1912b3caa3f45b8965f4af80e3727152c", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-20T08:49:00Z", "type": "forcePushed"}, {"oid": "712ba79a6a5edd8c6e563d406a7e9dfe991dfb50", "url": "https://github.com/eclipse/sw360/commit/712ba79a6a5edd8c6e563d406a7e9dfe991dfb50", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-20T11:28:42Z", "type": "commit"}, {"oid": "712ba79a6a5edd8c6e563d406a7e9dfe991dfb50", "url": "https://github.com/eclipse/sw360/commit/712ba79a6a5edd8c6e563d406a7e9dfe991dfb50", "message": "feat(rest): validate the linked document ids in the payload before updating it in the DB\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-02-20T11:28:42Z", "type": "forcePushed"}]}