{"pr_number": 688, "pr_title": "Mongo Searchable Prefixes via BiConsumer", "pr_author": "idlira", "pr_createdAt": "2020-02-20T16:23:10Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/688", "timeline": [{"oid": "8f7e7556ce0af038a6d047349c94f2b75deb966f", "url": "https://github.com/scireum/sirius-biz/commit/8f7e7556ce0af038a6d047349c94f2b75deb966f", "message": "Upgrades sirius-db to dev-13.1\n\nIncludes the latest changes around MultiLanguageStrings\n\nFixes: SIRI-171", "committedDate": "2020-02-20T16:09:25Z", "type": "commit"}, {"oid": "1669fa9597633b0d493da3db4920d6337e6b634a", "url": "https://github.com/scireum/sirius-biz/commit/1669fa9597633b0d493da3db4920d6337e6b634a", "message": "Introduces a PrefixSearchableContentSupplier\n\nWhich combined with a Transformer, offer an alternative method to retrieve Property's values when the default #getValue is not applicable.\n\nFixes: SIRI-171", "committedDate": "2020-02-20T16:14:35Z", "type": "commit"}, {"oid": "4a0252d985eefd7d2032922a76f05829b59436f8", "url": "https://github.com/scireum/sirius-biz/commit/4a0252d985eefd7d2032922a76f05829b59436f8", "message": "Adds transformers to index values of StringMap and MultiLanguageString\n\nFixes: SIRI-171", "committedDate": "2020-02-20T16:15:12Z", "type": "commit"}, {"oid": "9a1336431890451c194eb8e04b7e83d6e9bec4e9", "url": "https://github.com/scireum/sirius-biz/commit/9a1336431890451c194eb8e04b7e83d6e9bec4e9", "message": "Enhance the searchable prefix test cases\n\nIncluding tests for StringMap and MultiLanguageString\n\nFixes: SIRI-171", "committedDate": "2020-02-20T16:16:03Z", "type": "commit"}, {"oid": "7aced99e32c7b0b41a7dd62d71536251d4356add", "url": "https://github.com/scireum/sirius-biz/commit/7aced99e32c7b0b41a7dd62d71536251d4356add", "message": "Code formatting", "committedDate": "2020-02-21T07:28:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw==", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382486727", "body": "why this intermediate step, couldn't we transform into a BiConsumer which accepts an entity and a StringBuilder or even BiConsumer<PrefixSearchableEntity, Consumer<String>> and then invoke with (entity, this::addContentString) or the like", "bodyText": "why this intermediate step, couldn't we transform into a BiConsumer which accepts an entity and a StringBuilder or even BiConsumer<PrefixSearchableEntity, Consumer> and then invoke with (entity, this::addContentString) or the like", "bodyHTML": "<p dir=\"auto\">why this intermediate step, couldn't we transform into a BiConsumer which accepts an entity and a StringBuilder or even BiConsumer&lt;PrefixSearchableEntity, Consumer&gt; and then invoke with (entity, this::addContentString) or the like</p>", "author": "andyHa", "createdAt": "2020-02-21T09:45:28Z", "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import sirius.db.mixing.properties.MultiLanguageStringProperty;\n+import sirius.db.mixing.types.StringList;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.di.transformers.Transformer;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Generates a {@link StringList} from the values of a {@link MultiLanguageStringProperty}.\n+ */\n+@Register\n+public class MultiLanguageStringPropertyTransformer\n+        implements Transformer<MultiLanguageStringProperty, PrefixSearchableContentSupplier> {\n+\n+    @Override\n+    public Class<MultiLanguageStringProperty> getSourceClass() {\n+        return MultiLanguageStringProperty.class;\n+    }\n+\n+    @Override\n+    public Class<PrefixSearchableContentSupplier> getTargetClass() {\n+        return PrefixSearchableContentSupplier.class;\n+    }\n+\n+    @Nullable\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public PrefixSearchableContentSupplier make(@Nonnull MultiLanguageStringProperty source) {\n+        return entity -> {\n+            StringList tokens = new StringList();", "originalCommit": "7aced99e32c7b0b41a7dd62d71536251d4356add", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NzExMA==", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382487110", "bodyText": "or simply transform to String", "author": "andyHa", "createdAt": "2020-02-21T09:46:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU1NDA5Ng==", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382554096", "bodyText": "We index not only the words, but the phrase as well (see test case)\nIndigo blue becomes: [\"indigo blue\", \"indigo\", \"blue\"]\nFor Multi-Language scenario we want each translation \"phrase\" to be processed independently and not only its loose words...", "author": "idlira", "createdAt": "2020-02-21T12:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MzMzOQ==", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r383343339", "bodyText": "Implemented as BiConsumer. Hopefully nailed it now \ud83d\ude2c", "author": "idlira", "createdAt": "2020-02-24T15:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}], "type": "inlineReview"}, {"oid": "b8ccd204dab6c0c6c1b26c04a865cc15200d3325", "url": "https://github.com/scireum/sirius-biz/commit/b8ccd204dab6c0c6c1b26c04a865cc15200d3325", "message": "Merge branch 'master' into ili/SearchablePrefixes", "committedDate": "2020-02-21T13:42:57Z", "type": "commit"}, {"oid": "628348271ffbe599cf0df49080997cfc8fe334a2", "url": "https://github.com/scireum/sirius-biz/commit/628348271ffbe599cf0df49080997cfc8fe334a2", "message": "Refactors the tokenizing of searchable prefixes\n\nIntroducing a BiConsumer as base interface for Transformers, which shall implement the logic to deal with the property type and tokenize its items by invoking the given consumer.\nSame as before, property.getValue is used when no transformer exist.\n\nNote that addContent has been removed as the logic in this method should be implemented as Transformers.\n\nFixes: SIRI-171", "committedDate": "2020-02-24T15:34:49Z", "type": "commit"}, {"oid": "e0aec9db674bc257faae8cc48e528d334518a95b", "url": "https://github.com/scireum/sirius-biz/commit/e0aec9db674bc257faae8cc48e528d334518a95b", "message": "Replaces defunct method\n\nFixes: SIRI-171", "committedDate": "2020-02-24T15:35:30Z", "type": "commit"}, {"oid": "5adc0703181369857c0f66dd96b8dee2ab6cb8e1", "url": "https://github.com/scireum/sirius-biz/commit/5adc0703181369857c0f66dd96b8dee2ab6cb8e1", "message": "Fixes the transformers to return the expected consumer\n\nAdds a new transformer for StringListProperty\n\nFixes: SIRI-171", "committedDate": "2020-02-24T15:37:16Z", "type": "commit"}, {"oid": "1bfce98195963628b0e3a14511dd4ee3525814b5", "url": "https://github.com/scireum/sirius-biz/commit/1bfce98195963628b0e3a14511dd4ee3525814b5", "message": "Adds StringList to test case\n\nFixes: SIRI-171", "committedDate": "2020-02-24T15:37:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyMjE2Nw==", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r383922167", "body": "```suggestion\r\npublic interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<String>> {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<Object>> {\n          \n          \n            \n            public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<String>> {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"20\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en\">PrefixSearchableContentConsumer</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">BiConsumer&lt;<span class=\"pl-smi\">PrefixSearchableEntity</span>, <span class=\"pl-k\">Consumer&lt;<span class=\"pl-smi x x-first x-last\">Object</span>&gt;</span>&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"20\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en\">PrefixSearchableContentConsumer</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">BiConsumer&lt;<span class=\"pl-smi\">PrefixSearchableEntity</span>, <span class=\"pl-k\">Consumer&lt;<span class=\"pl-smi x x-first x-last\">String</span>&gt;</span>&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "andyHa", "createdAt": "2020-02-25T14:44:35Z", "path": "src/main/java/sirius/biz/mongo/PrefixSearchableContentConsumer.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Used as target class to transform {@link sirius.db.mixing.Property properties} into a {@link BiConsumer}.\n+ * <p>\n+ * The consumer takes the {@link PrefixSearchableEntity} containing the values to extract which are then\n+ * passed as the {@link Consumer} argument.\n+ */\n+public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<Object>> {", "originalCommit": "1bfce98195963628b0e3a14511dd4ee3525814b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4fa9c152d8b2627af70dbe07a75bdae50de5354d", "url": "https://github.com/scireum/sirius-biz/commit/4fa9c152d8b2627af70dbe07a75bdae50de5354d", "message": "Changes the Consumer to receive a String to tokenize instead of a generic object\n\nFixes: SIRI-171", "committedDate": "2020-02-25T15:12:20Z", "type": "commit"}, {"oid": "ecfda5553694e5fb73eed279511a0ca37559300b", "url": "https://github.com/scireum/sirius-biz/commit/ecfda5553694e5fb73eed279511a0ca37559300b", "message": "Refactor addContentAsTokens to accept String instead of Object\n\nKeeping the tokenizing functions / transformers in sync.\n\nFixes: SIRI-171", "committedDate": "2020-02-25T20:23:52Z", "type": "commit"}, {"oid": "c6e3743923a5b4a3f1f0efab567a91c63f991993", "url": "https://github.com/scireum/sirius-biz/commit/c6e3743923a5b4a3f1f0efab567a91c63f991993", "message": "Revert \"Refactor addContentAsTokens to accept String instead of Object\"\n\nThis reverts commit ecfda555\n\nFixes: SIRI-171", "committedDate": "2020-02-26T09:43:56Z", "type": "commit"}, {"oid": "81dcdc6e8d417176201d1b2aee5a268a45cd6c5c", "url": "https://github.com/scireum/sirius-biz/commit/81dcdc6e8d417176201d1b2aee5a268a45cd6c5c", "message": "Revert \"Changes the Consumer to receive a String to tokenize instead of a generic object\"\n\nThis reverts commit 4fa9c152\n\nFixes: SIRI-171", "committedDate": "2020-02-26T09:44:06Z", "type": "commit"}, {"oid": "1b905bb8e31d3e5eb3d74f00180c33da39ba34ea", "url": "https://github.com/scireum/sirius-biz/commit/1b905bb8e31d3e5eb3d74f00180c33da39ba34ea", "message": "Reverts the String - Object\n\nFixes: SIRI-171", "committedDate": "2020-02-26T09:49:21Z", "type": "commit"}]}