{"pr_number": 913, "pr_title": "Fixes for Jobs and Parameters", "pr_author": "idlira", "pr_createdAt": "2020-11-18T16:13:42Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/913", "timeline": [{"oid": "fb0273416f79ae2ec526e57e30f82fefdcb709f6", "url": "https://github.com/scireum/sirius-biz/commit/fb0273416f79ae2ec526e57e30f82fefdcb709f6", "message": "Consume archives in file import jobs\n\nFixes: OX-6341", "committedDate": "2020-11-18T14:10:13Z", "type": "commit"}, {"oid": "91a5a58c17189943fcd367a292e7184f41237ece", "url": "https://github.com/scireum/sirius-biz/commit/91a5a58c17189943fcd367a292e7184f41237ece", "message": "Fixes XSD validation on XML import jobs\n\nThe main job provides a builder which is then filled with entries by the target factory.\n\nValue is collected from the context using the parameter name\n\nFixes: OX-6341", "committedDate": "2020-11-18T15:54:30Z", "type": "commit"}, {"oid": "881a745c0d9213059f4c080d8c10189748355642", "url": "https://github.com/scireum/sirius-biz/commit/881a745c0d9213059f4c080d8c10189748355642", "message": "Fixes XSD validation on XML export jobs\n\nThe main job provides a builder which is then set visible or not depending if xsds were provided by the calling factory.\n\nValue is collected from the context using the parameter name\n\nFixes: OX-6341", "committedDate": "2020-11-18T16:11:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526215925", "body": "make a method and return a fresh instance each time? this avoids accidentally modifying a shared object", "bodyText": "make a method and return a fresh instance each time? this avoids accidentally modifying a shared object", "bodyHTML": "<p dir=\"auto\">make a method and return a fresh instance each time? this avoids accidentally modifying a shared object</p>", "author": "andyHa", "createdAt": "2020-11-18T16:14:57Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,16 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =\n+    protected final BooleanParameter requireValidFileBuilder =", "originalCommit": "881a745c0d9213059f4c080d8c10189748355642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNjQ3NA==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526216474", "bodyText": "maybe also define the name as reusable constant or a placeholder parameter as was there before.", "author": "andyHa", "createdAt": "2020-11-18T16:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0MTc1NA==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526241754", "bodyText": "Added a shared name. Builder removed completely as this is handled internally by this class.", "author": "idlira", "createdAt": "2020-11-18T16:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNzcyOQ==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526217729", "body": "provide a factory method and or the name as shared constant.\r\n\r\nmaybe also prevent a lookup in the string list for when reading the parameter as the verification is done before and the value can be assumed to be correct. in other words a SelectStringParameter should behave like a StringParameter when it comes to reading the value from the job...", "bodyText": "provide a factory method and or the name as shared constant.\nmaybe also prevent a lookup in the string list for when reading the parameter as the verification is done before and the value can be assumed to be correct. in other words a SelectStringParameter should behave like a StringParameter when it comes to reading the value from the job...", "bodyHTML": "<p dir=\"auto\">provide a factory method and or the name as shared constant.</p>\n<p dir=\"auto\">maybe also prevent a lookup in the string list for when reading the parameter as the verification is done before and the value can be assumed to be correct. in other words a SelectStringParameter should behave like a StringParameter when it comes to reading the value from the job...</p>", "author": "andyHa", "createdAt": "2020-11-18T16:17:21Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -31,9 +30,9 @@\n  */\n public abstract class XMLImportJob extends FileImportJob {\n \n-    public static final Parameter<String> XSD_SCHEMA_PARAMETER =\n+    protected static final SelectStringParameter XSD_SCHEMA_PARAMETER_BUILDER =", "originalCommit": "881a745c0d9213059f4c080d8c10189748355642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0MjA1MQ==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526242051", "bodyText": "Builder delivered by static method.", "author": "idlira", "createdAt": "2020-11-18T16:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNzcyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxODQzMw==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526218433", "body": "i think its better to share the name as a constant than sharing a mutable builder - as this is very easy to get wrong...(modify global state unintentionally)", "bodyText": "i think its better to share the name as a constant than sharing a mutable builder - as this is very easy to get wrong...(modify global state unintentionally)", "bodyHTML": "<p dir=\"auto\">i think its better to share the name as a constant than sharing a mutable builder - as this is very easy to get wrong...(modify global state unintentionally)</p>", "author": "andyHa", "createdAt": "2020-11-18T16:18:19Z", "path": "src/main/java/sirius/biz/jobs/params/ParameterBuilder.java", "diffHunk": "@@ -261,7 +261,7 @@ protected V require(Map<String, String> context) {\n      *\n      * @return the name of the parameter\n      */\n-    protected String getName() {", "originalCommit": "881a745c0d9213059f4c080d8c10189748355642", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d66daa6a906c18b1ce3ef23c0d65e178233ebe6b", "url": "https://github.com/scireum/sirius-biz/commit/d66daa6a906c18b1ce3ef23c0d65e178233ebe6b", "message": "Refactors the parameter creation for XML jobs\n\nthe import job provides a static method to initialize a new parameter\n\nthe export job handles it internally as the parameter is rendered based on provided XSD paths\n\nFixes: OX-6341", "committedDate": "2020-11-18T16:46:45Z", "type": "commit"}, {"oid": "fe0908ed6ecf37f06368d6c7bfa3dd2b65f243b7", "url": "https://github.com/scireum/sirius-biz/commit/fe0908ed6ecf37f06368d6c7bfa3dd2b65f243b7", "message": "Adds the ability to perform several passes over an xml file\n\nregisterHandlers provides the pass current being performed. Also it expects now a consumer instead of providing the raw XMLreader\n\nFixes: OX-6341", "committedDate": "2020-11-18T18:11:31Z", "type": "commit"}, {"oid": "2abe7f48e7de831aa3832928d128ba1a3604976c", "url": "https://github.com/scireum/sirius-biz/commit/2abe7f48e7de831aa3832928d128ba1a3604976c", "message": "Uses a list of registered handler consumers instead of passes\n\nDifferent code, same effect but more Javaish...\n\nFixes: OX-6341", "committedDate": "2020-11-19T10:22:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1OTkyOA==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526759928", "body": "why not keep this parameter this is a simple boolean and commonly needs no customization..", "bodyText": "why not keep this parameter this is a simple boolean and commonly needs no customization..", "bodyHTML": "<p dir=\"auto\">why not keep this parameter this is a simple boolean and commonly needs no customization..</p>", "author": "andyHa", "createdAt": "2020-11-19T10:40:16Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,15 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =", "originalCommit": "2abe7f48e7de831aa3832928d128ba1a3604976c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjE2MA==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762160", "bodyText": "parameter still exist, just the scope changes. It's created in L28 if xsd paths were provided.\n\n  \n    \n      sirius-biz/src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java\n    \n    \n         Line 28\n      in\n      d66daa6\n    \n    \n    \n    \n\n        \n          \n           Parameter<Boolean> validFileParameter = new BooleanParameter(VALID_FILE_PARAMETER_NAME,", "author": "idlira", "createdAt": "2020-11-19T10:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1OTkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjEzNw==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762137", "body": "```suggestion\r\n            for (Consumer<BiConsumer<String, NodeHandler>> processingStage : fetchStages()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {\n          \n          \n            \n                        for (Consumer<BiConsumer<String, NodeHandler>> processingStage : fetchStages()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">for</span> (<span class=\"pl-k\">Consumer&lt;<span class=\"pl-k\">BiConsumer&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">NodeHandler</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">handlerConsumer</span> <span class=\"pl-k\">:</span> <span class=\"x x-first x-last\">fetchHandlersList</span>()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">for</span> (<span class=\"pl-k\">Consumer&lt;<span class=\"pl-k\">BiConsumer&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">NodeHandler</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">processingStage</span> <span class=\"pl-k\">:</span> <span class=\"x x-first x-last\">fetchStages</span>()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "andyHa", "createdAt": "2020-11-19T10:43:37Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -47,14 +49,21 @@\n      */\n     protected XMLImportJob(ProcessContext process) {\n         super(process);\n-        validationXsdPath = process.getParameter(XSD_SCHEMA_PARAMETER).orElse(null);\n+        validationXsdPath = process.get(XSD_SCHEMA_PARAMETER_NAME).asString();\n+    }\n+\n+    protected static SelectStringParameter createSchemaParameter() {\n+        return new SelectStringParameter(XSD_SCHEMA_PARAMETER_NAME, \"$XMLImportJobFactory.xsdSchema\").withDescription(\n+                \"$XMLImportJobFactory.xsdSchema.help\");\n     }\n \n     @Override\n     protected void executeForStream(String filename, Producer<InputStream> inputSupplier) throws Exception {\n         if (isValid(inputSupplier)) {\n-            try (InputStream inputStream = inputSupplier.create()) {\n-                executeForValidStream(inputStream);\n+            for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {", "originalCommit": "2abe7f48e7de831aa3832928d128ba1a3604976c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjI5NQ==", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762295", "body": "```suggestion\r\n                    executeProcessingStage(inputStream, stage);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                executeForValidStream(inputStream, handlerConsumer);\n          \n          \n            \n                                executeProcessingStage(inputStream, stage);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"x x-first x-last\">executeForValidStream</span>(inputStream, <span class=\"x x-first x-last\">handlerConsumer</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"x x-first x-last\">executeProcessingStage</span>(inputStream, <span class=\"x x-first x-last\">stage</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "andyHa", "createdAt": "2020-11-19T10:43:53Z", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -47,14 +49,21 @@\n      */\n     protected XMLImportJob(ProcessContext process) {\n         super(process);\n-        validationXsdPath = process.getParameter(XSD_SCHEMA_PARAMETER).orElse(null);\n+        validationXsdPath = process.get(XSD_SCHEMA_PARAMETER_NAME).asString();\n+    }\n+\n+    protected static SelectStringParameter createSchemaParameter() {\n+        return new SelectStringParameter(XSD_SCHEMA_PARAMETER_NAME, \"$XMLImportJobFactory.xsdSchema\").withDescription(\n+                \"$XMLImportJobFactory.xsdSchema.help\");\n     }\n \n     @Override\n     protected void executeForStream(String filename, Producer<InputStream> inputSupplier) throws Exception {\n         if (isValid(inputSupplier)) {\n-            try (InputStream inputStream = inputSupplier.create()) {\n-                executeForValidStream(inputStream);\n+            for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {\n+                try (InputStream inputStream = inputSupplier.create()) {\n+                    executeForValidStream(inputStream, handlerConsumer);", "originalCommit": "2abe7f48e7de831aa3832928d128ba1a3604976c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e491315996629e9b8b34e4e1bcda551e4d9adab7", "url": "https://github.com/scireum/sirius-biz/commit/e491315996629e9b8b34e4e1bcda551e4d9adab7", "message": "Simplifies declaration and usage of parameters\n\nFixes: OX-6341", "committedDate": "2020-11-19T11:46:59Z", "type": "commit"}, {"oid": "6076344ff30721951fd2d444f20186fbf485c177", "url": "https://github.com/scireum/sirius-biz/commit/6076344ff30721951fd2d444f20186fbf485c177", "message": "Skips unnecessary validation\n\nWhich is already performed by checkAndTransformValue. This way we can properly override job parameters with fresh created instances (as soon as they share the same name)\n\nFixes: OX-6341", "committedDate": "2020-11-19T11:49:18Z", "type": "commit"}, {"oid": "8f4b50cb375c895f300d3d4e902120ae03ca5213", "url": "https://github.com/scireum/sirius-biz/commit/8f4b50cb375c895f300d3d4e902120ae03ca5213", "message": "Renames some methods\n\nCalling it \"stage\" each pass performed over an xml file\n\nFixes: OX-6341", "committedDate": "2020-11-19T11:53:51Z", "type": "commit"}, {"oid": "0cf28e5e3dfd1cbc2262a5632123fa22b4c3c1b1", "url": "https://github.com/scireum/sirius-biz/commit/0cf28e5e3dfd1cbc2262a5632123fa22b4c3c1b1", "message": "Defaults to not validate when the parameters has not been collected\n\nFixes: OX-6341", "committedDate": "2020-11-19T12:06:32Z", "type": "commit"}, {"oid": "4e6cf80164cee31e2abae5385c62ef78d07f629a", "url": "https://github.com/scireum/sirius-biz/commit/4e6cf80164cee31e2abae5385c62ef78d07f629a", "message": "Corrected JavaDoc\n\nFixes: OX-6341", "committedDate": "2020-11-19T12:43:04Z", "type": "commit"}]}