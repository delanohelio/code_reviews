{"pr_number": 820, "pr_title": "Synchronous flush of coherent caches.", "pr_author": "andyHa", "pr_createdAt": "2020-07-08T13:36:24Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/820", "timeline": [{"oid": "ec6e1f00256022e9257fe1e1a68f1a984d8b1300", "url": "https://github.com/scireum/sirius-biz/commit/ec6e1f00256022e9257fe1e1a68f1a984d8b1300", "message": "Fixes a JavaDoc comment.", "committedDate": "2020-07-08T13:32:05Z", "type": "commit"}, {"oid": "a32aac02480aedff358badec59cfd8424e777fd6", "url": "https://github.com/scireum/sirius-biz/commit/a32aac02480aedff358badec59cfd8424e777fd6", "message": "Executes cache manipulation calls synchronous for coherent caches.\n\nAfter invoking cache.clear (etc.) we expect the cache to be actually\ncleared on the local node. However, as the Interconnect distributes\nthe update via Redis there is actually a race-condition built-in.\n\nWe now modify the cache locally and Ignore the Interconnect message\nwe sent out, to ensure proper and consistent behavior.", "committedDate": "2020-07-08T13:34:15Z", "type": "commit"}, {"oid": "e762db9dd56744c95f0464d1f7a0a533d3c7a7cc", "url": "https://github.com/scireum/sirius-biz/commit/e762db9dd56744c95f0464d1f7a0a533d3c7a7cc", "message": "Removes dead code.\n\nWe did distribute PUT messages across the cluster\nbut that lead to a war of nodes for many caches, as\neach node which loaded a value, dropped it from the cache.\n\nTherefore, to forcefully update a value across all nodes,\nCache.remove or Cache.clear has to be called.", "committedDate": "2020-07-08T13:35:33Z", "type": "commit"}, {"oid": "ba775af87cca4784f0fd7fbd0bd24022233e76f9", "url": "https://github.com/scireum/sirius-biz/commit/ba775af87cca4784f0fd7fbd0bd24022233e76f9", "message": "Prevents a startup warning in case the statistics framework is disabled.", "committedDate": "2020-07-08T13:35:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMDE1Mw==", "url": "https://github.com/scireum/sirius-biz/pull/820#discussion_r451630153", "body": "```suggestion\r\n        if (Strings.areEqual(CallContext.getNodeName(), event.getString(MESSAGE_NODE))) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Strings.areEqual(CallContext.getNodeName(), event.getString(NODE_IDENTIFIER))) {\n          \n          \n            \n                    if (Strings.areEqual(CallContext.getNodeName(), event.getString(MESSAGE_NODE))) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Strings</span><span class=\"pl-k\">.</span>areEqual(<span class=\"pl-smi\">CallContext</span><span class=\"pl-k\">.</span>getNodeName(), event<span class=\"pl-k\">.</span>getString(<span class=\"pl-c1 x x-first x-last\">NODE_IDENTIFIER</span>))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Strings</span><span class=\"pl-k\">.</span>areEqual(<span class=\"pl-smi\">CallContext</span><span class=\"pl-k\">.</span>getNodeName(), event<span class=\"pl-k\">.</span>getString(<span class=\"pl-c1 x x-first x-last\">MESSAGE_NODE</span>))) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sabieber", "createdAt": "2020-07-08T15:24:11Z", "path": "src/main/java/sirius/biz/cluster/InterconnectCacheCoherence.java", "diffHunk": "@@ -63,13 +67,19 @@ public void removeAll(Cache<String, ?> cache, String discriminator, String testI\n                                               .fluentPut(MESSAGE_DISCRIMINATOR, discriminator)\n                                               .fluentPut(MESSAGE_TEST_VALUE, testInput)\n                                               .fluentPut(MESSAGE_NODE, CallContext.getNodeName()));\n+        CacheManager.coherentCacheRemoveAllLocally(getName(), discriminator, testInput);\n     }\n \n     @Override\n     public void handleEvent(JSONObject event) {\n         String type = event.getString(MESSAGE_TYPE);\n         String cache = event.getString(MESSAGE_CACHE);\n \n+        // Ignore our own messages, as we already have executed them...\n+        if (Strings.areEqual(CallContext.getNodeName(), event.getString(NODE_IDENTIFIER))) {", "originalCommit": "a32aac02480aedff358badec59cfd8424e777fd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMTM2OA==", "url": "https://github.com/scireum/sirius-biz/pull/820#discussion_r451631368", "bodyText": "Oder muss oben auch der NODE_IDENTIFIER rein geschrieben werden? So passt aber glaub auf jeden Fall ned oder?", "author": "sabieber", "createdAt": "2020-07-08T15:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMDE1Mw=="}], "type": "inlineReview"}, {"oid": "a6592e46103b5f47253702bedf51f866fc954204", "url": "https://github.com/scireum/sirius-biz/commit/a6592e46103b5f47253702bedf51f866fc954204", "message": "Removes a unused constant and uses the proper one to compare against.", "committedDate": "2020-07-08T15:27:31Z", "type": "commit"}]}