{"pr_number": 6103, "pr_title": "perf: [DHIS-9415] avoid querying programstageinstancecomments if not necessary", "pr_author": "gnespolino", "pr_createdAt": "2020-09-07T15:40:57Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6103", "timeline": [{"oid": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "url": "https://github.com/dhis2/dhis2-core/commit/a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "message": "perf: avoid querying programstageinstancecomments if not necessary", "committedDate": "2020-09-07T15:35:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NzU0MA==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484677540", "body": "Is `.map` necessary here? Wouldn't `batch.stream().filter( this:hasComments )...` achieve the same?", "bodyText": "Is .map necessary here? Wouldn't batch.stream().filter( this:hasComments )... achieve the same?", "bodyHTML": "<p dir=\"auto\">Is <code>.map</code> necessary here? Wouldn't <code>batch.stream().filter( this:hasComments )...</code> achieve the same?</p>", "author": "luciano-fiandesio", "createdAt": "2020-09-08T06:25:00Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventCommentStore.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package org.hisp.dhis.dxf2.events.event;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static java.util.stream.Collectors.toList;\n+\n+import java.sql.PreparedStatement;\n+import java.util.List;\n+\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.trackedentitycomment.TrackedEntityComment;\n+import org.springframework.dao.DataAccessException;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.support.GeneratedKeyHolder;\n+import org.springframework.jdbc.support.KeyHolder;\n+import org.springframework.stereotype.Repository;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * @author Giuseppe Nespolino <g.nespolino@gmail.com>\n+ */\n+@Repository\n+@RequiredArgsConstructor\n+@Slf4j\n+public class JdbcEventCommentStore\n+{\n+\n+    private final JdbcTemplate jdbcTemplate;\n+\n+    private final String INSERT_EVENT_NOTE_SQL = \"INSERT INTO TRACKEDENTITYCOMMENT (trackedentitycommentid, \" + // 0\n+        \"uid, \" + // 1\n+        \"commenttext, \" + // 2\n+        \"created, \" + // 3\n+        \"creator,\" + // 4\n+        \"lastUpdated\" + // 5\n+        \")  values ( nextval('hibernate_sequence'), ?, ?, ?, ?, ?)\";\n+\n+    private final static String INSERT_EVENT_COMMENT_LINK = \"INSERT INTO programstageinstancecomments (programstageinstanceid, \"\n+        + \"sort_order, trackedentitycommentid) values (?, ?, ?)\";\n+\n+    /**\n+     * Save all the comments ({@see TrackedEntityComment} for the list of\n+     * {@see ProgramStageInstance}\n+     *\n+     * @param batch a List of {@see ProgramStageInstance}\n+     */\n+    void saveAllComments( List<ProgramStageInstance> batch )\n+    {\n+        try\n+        {\n+            // List of PSI that has at least one non empty comment (i.e. PSO having comments\n+            // that can actually be saved)\n+            // In resulting PSI list, all comments without text are removed.\n+            List<ProgramStageInstance> programStageInstances = batch.stream()\n+                .map( this::withoutEmptyComments )", "originalCommit": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNTI1Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484715256", "bodyText": "this is to ensure that program instances only have comments with some text, so we don't have to check it again later when storing.", "author": "gnespolino", "createdAt": "2020-09-08T07:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NzU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODIwNA==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484678204", "body": "Is it possible to call this new store from the upstream service. This is fine, but in general, I prefer to avoid calling a dao from another dao.", "bodyText": "Is it possible to call this new store from the upstream service. This is fine, but in general, I prefer to avoid calling a dao from another dao.", "bodyHTML": "<p dir=\"auto\">Is it possible to call this new store from the upstream service. This is fine, but in general, I prefer to avoid calling a dao from another dao.</p>", "author": "luciano-fiandesio", "createdAt": "2020-09-08T06:26:37Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -247,6 +233,8 @@\n \n     private final JdbcTemplate jdbcTemplate;\n \n+    private final JdbcEventCommentStore jdbcEventCommentStore;", "originalCommit": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNTQ1Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484715456", "bodyText": "Sure, I'll check", "author": "gnespolino", "createdAt": "2020-09-08T07:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODIwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODQ0OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484678449", "body": "\ud83d\udc4d ", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "luciano-fiandesio", "createdAt": "2020-09-08T06:27:17Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventSupport.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package org.hisp.dhis.dxf2.events.event;\n+\n+import lombok.experimental.UtilityClass;\n+\n+import java.sql.Timestamp;\n+import java.util.Date;\n+\n+@UtilityClass\n+class JdbcEventSupport", "originalCommit": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMDI2Nw==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484730267", "body": "```suggestion\r\n    public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public JdbcEventStore(StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,\n          \n          \n            \n                public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> JdbcEventStore(<span class=\"pl-smi\">StatementBuilder</span> statementBuilder, <span class=\"pl-smi\">JdbcTemplate</span> jdbcTemplate,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> JdbcEventStore(<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">StatementBuilder</span> statementBuilder, <span class=\"pl-smi\">JdbcTemplate</span> jdbcTemplate,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-09-08T08:08:22Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -260,9 +248,9 @@\n         .expireAfterWrite( 10, TimeUnit.SECONDS )\n         .build();\n \n-    public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,\n-        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, CurrentUserService currentUserService,\n-        IdentifiableObjectManager identifiableObjectManager, Environment env )\n+    public JdbcEventStore(StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,", "originalCommit": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczOTExNA==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484739114", "bodyText": "ty will fix it", "author": "gnespolino", "createdAt": "2020-09-08T08:22:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMDI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMDM3MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484730371", "body": "```suggestion\r\n                          CurrentUserService currentUserService, IdentifiableObjectManager identifiableObjectManager, Environment env )\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      CurrentUserService currentUserService, IdentifiableObjectManager identifiableObjectManager, Environment env)\n          \n          \n            \n                                      CurrentUserService currentUserService, IdentifiableObjectManager identifiableObjectManager, Environment env )", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                          <span class=\"pl-smi\">CurrentUserService</span> currentUserService, <span class=\"pl-smi\">IdentifiableObjectManager</span> identifiableObjectManager, <span class=\"pl-smi\">Environment</span> env)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                          <span class=\"pl-smi\">CurrentUserService</span> currentUserService, <span class=\"pl-smi\">IdentifiableObjectManager</span> identifiableObjectManager, <span class=\"pl-smi\">Environment</span> env<span class=\"x x-first x-last\"> </span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-09-08T08:08:32Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -260,9 +248,9 @@\n         .expireAfterWrite( 10, TimeUnit.SECONDS )\n         .build();\n \n-    public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,\n-        @Qualifier( \"dataValueJsonMapper\" ) ObjectMapper jsonMapper, CurrentUserService currentUserService,\n-        IdentifiableObjectManager identifiableObjectManager, Environment env )\n+    public JdbcEventStore(StatementBuilder statementBuilder, JdbcTemplate jdbcTemplate,\n+                          JdbcEventCommentStore jdbcEventCommentStore, @Qualifier(\"dataValueJsonMapper\") ObjectMapper jsonMapper,\n+                          CurrentUserService currentUserService, IdentifiableObjectManager identifiableObjectManager, Environment env)", "originalCommit": "a5aceeda80b004e9e2cd9c7aa041bab8c3cfb3dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczOTE2OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6103#discussion_r484739169", "bodyText": "ty will fix it", "author": "gnespolino", "createdAt": "2020-09-08T08:22:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMDM3MQ=="}], "type": "inlineReview"}, {"oid": "70ab87f1eefdf429bd637189958a61686bd1d64f", "url": "https://github.com/dhis2/dhis2-core/commit/70ab87f1eefdf429bd637189958a61686bd1d64f", "message": "perf: JdbcEvenCommentStore invocation moved to an upper layer (code-review)", "committedDate": "2020-09-08T08:40:35Z", "type": "commit"}]}