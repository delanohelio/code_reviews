{"pr_number": 6640, "pr_title": "fix: Do not fail on rule engine call  and just log an exception", "pr_author": "enricocolasante", "pr_createdAt": "2020-11-12T08:47:52Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6640", "timeline": [{"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "url": "https://github.com/dhis2/dhis2-core/commit/ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "message": "fix: Do not fail on rule engine call  and just log an exception", "committedDate": "2020-11-12T08:39:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521937603", "body": "Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use `log.warn( \"message\", ex);` ", "bodyText": "Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use log.warn( \"message\", ex);", "bodyHTML": "<p dir=\"auto\">Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use <code>log.warn( \"message\", ex);</code></p>", "author": "zubaira", "createdAt": "2020-11-12T08:53:24Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "originalCommit": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MjM3MA==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521942370", "bodyText": "Of course. Just got lost in the commit.\nThanks", "author": "enricocolasante", "createdAt": "2020-11-12T09:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTg2OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521941869", "body": "```suggestion\r\n                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n          \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Something bad happen calling rule engine. The reason should be an invalid payload<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Something bad happen calling rule engine. The reason should be an invalid payload<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, ex</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "enricocolasante", "createdAt": "2020-11-12T09:00:02Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "originalCommit": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "url": "https://github.com/dhis2/dhis2-core/commit/f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "message": "Update dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "committedDate": "2020-11-12T09:00:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTMzNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945335", "body": "code style ;)", "bodyText": "code style ;)", "bodyHTML": "<p dir=\"auto\">code style ;)</p>", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:05:50Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTYxNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945615", "body": "code style", "bodyText": "code style", "bodyHTML": "<p dir=\"auto\">code style</p>", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:06:14Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -90,9 +98,14 @@ public DefaultTrackerProgramRuleService(\n             .stream()\n             .collect( Collectors.toMap( Event::getEvent, event -> {\n                 ProgramInstance enrollment = getEnrollment( bundle, event );\n-                return programRuleEngine.evaluate( enrollment,\n-                    eventTrackerConverterService.from( bundle.getPreheat(), event ),\n-                    getEventsFromEnrollment( enrollment.getUid(), bundle, events ) );\n+                try {\n+                    return programRuleEngine.evaluate(enrollment,\n+                            eventTrackerConverterService.from(bundle.getPreheat(), event),\n+                            getEventsFromEnrollment(enrollment.getUid(), bundle, events));\n+                } catch (Exception e){", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NzQ0MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521947441", "body": "I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"", "bodyText": "I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"", "bodyHTML": "<p dir=\"auto\">I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"</p>", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:09:04Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "327e2d191409d987c6619195e99eabfd753eec69", "url": "https://github.com/dhis2/dhis2-core/commit/327e2d191409d987c6619195e99eabfd753eec69", "message": "Fix tests and code review comments", "committedDate": "2020-11-12T09:35:54Z", "type": "commit"}]}