{"pr_number": 6914, "pr_title": "fix: [DHIS2-6642] delete relationships associated with soft deleted events (2.36)", "pr_author": "ameenhere", "pr_createdAt": "2020-12-15T13:37:24Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6914", "timeline": [{"oid": "593af1b66cd07ff29946c19df42c04a9cc1bdaa4", "url": "https://github.com/dhis2/dhis2-core/commit/593af1b66cd07ff29946c19df42c04a9cc1bdaa4", "message": "fix: [DHIS2-6642] delete relationships associated with soft deleted events (2.36)", "committedDate": "2020-12-15T13:36:46Z", "type": "commit"}, {"oid": "62f68a0f4cec94e9c239b8f4b6fed4e91e97ca15", "url": "https://github.com/dhis2/dhis2-core/commit/62f68a0f4cec94e9c239b8f4b6fed4e91e97ca15", "message": "Added flyway script and handled soft deleted enrollment referencing relationships", "committedDate": "2020-12-15T17:35:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjY0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/6914#discussion_r546586643", "body": "just as a suggestion:\r\nwe might replace this block of code which is duplicated across the whole class with a private method like:\r\n``` java\r\n    private void deleteRelationships(Collection<Relationship> relationships )\r\n    {\r\n        Optional.ofNullable( relationships )\r\n            .orElse( Collections.emptySet() )\r\n            .forEach( relationshipService::deleteRelationship );\r\n    }\r\n```\r\nso that each method would become just:\r\n``` java\r\n    @Override\r\n    public void deleteProgramStageInstance( ProgramStageInstance programStageInstance )\r\n    {\r\n        deleteRelationships( relationshipService.getRelationshipsByProgramStageInstance( programStageInstance, false ) );\r\n    }\r\n```", "bodyText": "just as a suggestion:\nwe might replace this block of code which is duplicated across the whole class with a private method like:\n    private void deleteRelationships(Collection<Relationship> relationships )\n    {\n        Optional.ofNullable( relationships )\n            .orElse( Collections.emptySet() )\n            .forEach( relationshipService::deleteRelationship );\n    }\nso that each method would become just:\n    @Override\n    public void deleteProgramStageInstance( ProgramStageInstance programStageInstance )\n    {\n        deleteRelationships( relationshipService.getRelationshipsByProgramStageInstance( programStageInstance, false ) );\n    }", "bodyHTML": "<p dir=\"auto\">just as a suggestion:<br>\nwe might replace this block of code which is duplicated across the whole class with a private method like:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    private void deleteRelationships(Collection&lt;Relationship&gt; relationships )\n    {\n        Optional.ofNullable( relationships )\n            .orElse( Collections.emptySet() )\n            .forEach( relationshipService::deleteRelationship );\n    }\"><pre>    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> deleteRelationships(<span class=\"pl-k\">Collection&lt;<span class=\"pl-smi\">Relationship</span>&gt;</span> relationships )\n    {\n        <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable( relationships )\n            .orElse( <span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>emptySet() )\n            .forEach( relationshipService<span class=\"pl-k\">::</span>deleteRelationship );\n    }</pre></div>\n<p dir=\"auto\">so that each method would become just:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Override\n    public void deleteProgramStageInstance( ProgramStageInstance programStageInstance )\n    {\n        deleteRelationships( relationshipService.getRelationshipsByProgramStageInstance( programStageInstance, false ) );\n    }\"><pre>    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> deleteProgramStageInstance( <span class=\"pl-smi\">ProgramStageInstance</span> programStageInstance )\n    {\n        deleteRelationships( relationshipService<span class=\"pl-k\">.</span>getRelationshipsByProgramStageInstance( programStageInstance, <span class=\"pl-c1\">false</span> ) );\n    }</pre></div>", "author": "gnespolino", "createdAt": "2020-12-21T09:03:48Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/relationship/RelationshipDeletionHandler.java", "diffHunk": "@@ -76,6 +78,37 @@ public void deleteTrackedEntityInstance( TrackedEntityInstance entityInstance )\n             }\n         }\n     }\n+    \n+    @Override\n+    public void deleteProgramStageInstance( ProgramStageInstance programStageInstance )\n+    {\n+        Collection<Relationship> relationships = relationshipService\n+            .getRelationshipsByProgramStageInstance( programStageInstance, false );\n+\n+        if ( relationships != null )\n+        {\n+            for ( Relationship relationship : relationships )\n+            {\n+                relationshipService.deleteRelationship( relationship );\n+            }\n+        }", "originalCommit": "62f68a0f4cec94e9c239b8f4b6fed4e91e97ca15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}