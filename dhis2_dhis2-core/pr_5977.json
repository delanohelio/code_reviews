{"pr_number": 5977, "pr_title": "feat: add support for application overloads (DHIS2-9092)", "pr_author": "amcgee", "pr_createdAt": "2020-08-21T08:49:55Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxNjgyOQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r474816829", "body": "Works, but normally favorable to:\r\n- use Lists over arrays for usability reasons\r\n- use immutable lists, so that the list cannot be modified during runtime by other code by accident, leading to unpredictable behavior\r\n- avoid public static final in interfaces as it is already implicit\r\n- perhaps use ImmutableSet if the order is insignificant as it provides faster lookup\r\n\r\n```\r\nimport com.google.common.collect.Lists;\r\n//..\r\nImmutableList<String> BUNDLED_APPS = ImmutableList.of(\r\n    \"app-management\", \"cache-cleaner\" );\r\n```", "bodyText": "Works, but normally favorable to:\n\nuse Lists over arrays for usability reasons\nuse immutable lists, so that the list cannot be modified during runtime by other code by accident, leading to unpredictable behavior\navoid public static final in interfaces as it is already implicit\nperhaps use ImmutableSet if the order is insignificant as it provides faster lookup\n\nimport com.google.common.collect.Lists;\n//..\nImmutableList<String> BUNDLED_APPS = ImmutableList.of(\n    \"app-management\", \"cache-cleaner\" );", "bodyHTML": "<p dir=\"auto\">Works, but normally favorable to:</p>\n<ul dir=\"auto\">\n<li>use Lists over arrays for usability reasons</li>\n<li>use immutable lists, so that the list cannot be modified during runtime by other code by accident, leading to unpredictable behavior</li>\n<li>avoid public static final in interfaces as it is already implicit</li>\n<li>perhaps use ImmutableSet if the order is insignificant as it provides faster lookup</li>\n</ul>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import com.google.common.collect.Lists;\n//..\nImmutableList&lt;String&gt; BUNDLED_APPS = ImmutableList.of(\n    &quot;app-management&quot;, &quot;cache-cleaner&quot; );\"><pre><code>import com.google.common.collect.Lists;\n//..\nImmutableList&lt;String&gt; BUNDLED_APPS = ImmutableList.of(\n    \"app-management\", \"cache-cleaner\" );\n</code></pre></div>", "author": "larshelge", "createdAt": "2020-08-21T16:57:46Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/appmanager/AppManager.java", "diffHunk": "@@ -43,6 +43,40 @@\n {\n     String ID = AppManager.class.getName();\n \n+    public static final String[] BUNDLED_APPS = {", "originalCommit": "d4c83d6bffc6d71f65ff5ced30d0aae520c955c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxODA0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r474818043", "bodyText": "Nice, yeah agreed - I didn\u2019t like having to convert it to a list before doing anything anyway!", "author": "amcgee", "createdAt": "2020-08-21T17:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxNjgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg2NTkzOA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r474865938", "body": "Move up to class scope as static final.", "bodyText": "Move up to class scope as static final.", "bodyHTML": "<p dir=\"auto\">Move up to class scope as static final.</p>", "author": "larshelge", "createdAt": "2020-08-21T18:43:35Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,180 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        List<String> bundledApps = Arrays.asList(AppManager.BUNDLED_APPS);\n+        String pattern = \"^/dhis-web-(\" + String.join(\"|\", bundledApps) + \")(?:/|$)(.*)\";", "originalCommit": "d4c83d6bffc6d71f65ff5ced30d0aae520c955c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODEyMA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528120", "body": "```suggestion\r\n        if ( app == null || app.getName() == null || AppManager.BUNDLED_APPS.contains( app.getName() ) ) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if ( app == null || app.getName() == null || AppManager.BUNDLED_APPS.contains(app.getName()) ) {\n          \n          \n            \n                    if ( app == null || app.getName() == null || AppManager.BUNDLED_APPS.contains( app.getName() ) ) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> ( app <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> app<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-smi\">AppManager</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>BUNDLED_APPS</span><span class=\"pl-k\">.</span>contains(app<span class=\"pl-k\">.</span>getName()) ) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> ( app <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> app<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-smi\">AppManager</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>BUNDLED_APPS</span><span class=\"pl-k\">.</span>contains(<span class=\"x x-first x-last\"> </span>app<span class=\"pl-k\">.</span>getName()<span class=\"x x-first x-last\"> </span>) ) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:17:17Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/DefaultAppManager.java", "diffHunk": "@@ -308,7 +308,10 @@ public boolean isAccessible( App app )\n     @Override\n     public boolean isAccessible( App app, User user )\n     {\n-        if ( user == null || user.getUserCredentials() == null || app == null || app.getName() == null )\n+        if ( app == null || app.getName() == null || AppManager.BUNDLED_APPS.contains(app.getName()) ) {", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODIyNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528225", "body": "```suggestion\r\n            } catch ( LocationManagerException e ) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (LocationManagerException e) {\n          \n          \n            \n                        } catch ( LocationManagerException e ) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">LocationManagerException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">catch</span> (<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">LocationManagerException</span> e<span class=\"x x-first x-last\"> </span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:17:31Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/JCloudsAppStorageService.java", "diffHunk": "@@ -429,9 +430,21 @@ public Resource getAppResource( App app, String pageName )\n \n             String filepath = configurationProvider.getProperty( ConfigurationKey.FILESTORE_CONTAINER ) + \"/\" + key;\n             filepath = filepath.replaceAll( \"//\", \"/\" );\n-            File res = locationManager.getFileForReading( filepath );\n+            File res;\n+            \n+            try {\n+                res = locationManager.getFileForReading( filepath );\n+            } catch (LocationManagerException e) {", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODM1NQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528355", "body": "```suggestion\r\n                String indexPath = pageName.replaceAll( \"/+$\", \"\" ) + \"/index.html\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String indexPath = pageName.replaceAll(\"/+$\", \"\") + \"/index.html\";\n          \n          \n            \n                            String indexPath = pageName.replaceAll( \"/+$\", \"\" ) + \"/index.html\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">String</span> indexPath <span class=\"pl-k\">=</span> pageName<span class=\"pl-k\">.</span>replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/+$<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/index.html<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">String</span> indexPath <span class=\"pl-k\">=</span> pageName<span class=\"pl-k\">.</span>replaceAll(<span class=\"x x-first x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/+$<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\"> </span>) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/index.html<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:17:48Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/JCloudsAppStorageService.java", "diffHunk": "@@ -429,9 +430,21 @@ public Resource getAppResource( App app, String pageName )\n \n             String filepath = configurationProvider.getProperty( ConfigurationKey.FILESTORE_CONTAINER ) + \"/\" + key;\n             filepath = filepath.replaceAll( \"//\", \"/\" );\n-            File res = locationManager.getFileForReading( filepath );\n+            File res;\n+            \n+            try {\n+                res = locationManager.getFileForReading( filepath );\n+            } catch (LocationManagerException e) {\n+                return null;\n+            }\n \n-            if ( res.exists() )\n+            if ( res.isDirectory() )\n+            {\n+                String indexPath = pageName.replaceAll(\"/+$\", \"\") + \"/index.html\";", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODQ0Mg==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528442", "body": "```suggestion\r\n                log.info( \"Resource \" + pageName + \" (\" + filepath + \" is a directory, serving \" + indexPath );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.info(\"Resource \" + pageName + \" (\" + filepath + \" is a directory, serving \" + indexPath);\n          \n          \n            \n                            log.info( \"Resource \" + pageName + \" (\" + filepath + \" is a directory, serving \" + indexPath );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Resource <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> pageName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> (<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> filepath <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> is a directory, serving <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> indexPath);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>info(<span class=\"x x-first x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Resource <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> pageName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> (<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> filepath <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> is a directory, serving <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> indexPath<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:17:59Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/JCloudsAppStorageService.java", "diffHunk": "@@ -429,9 +430,21 @@ public Resource getAppResource( App app, String pageName )\n \n             String filepath = configurationProvider.getProperty( ConfigurationKey.FILESTORE_CONTAINER ) + \"/\" + key;\n             filepath = filepath.replaceAll( \"//\", \"/\" );\n-            File res = locationManager.getFileForReading( filepath );\n+            File res;\n+            \n+            try {\n+                res = locationManager.getFileForReading( filepath );\n+            } catch (LocationManagerException e) {\n+                return null;\n+            }\n \n-            if ( res.exists() )\n+            if ( res.isDirectory() )\n+            {\n+                String indexPath = pageName.replaceAll(\"/+$\", \"\") + \"/index.html\";\n+                log.info(\"Resource \" + pageName + \" (\" + filepath + \" is a directory, serving \" + indexPath);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODUwMg==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528502", "body": "```suggestion\r\n                return getAppResource( app, indexPath );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return getAppResource(app, indexPath);\n          \n          \n            \n                            return getAppResource( app, indexPath );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> getAppResource(app, indexPath);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> getAppResource(<span class=\"x x-first x-last\"> </span>app, indexPath<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:18:07Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/JCloudsAppStorageService.java", "diffHunk": "@@ -429,9 +430,21 @@ public Resource getAppResource( App app, String pageName )\n \n             String filepath = configurationProvider.getProperty( ConfigurationKey.FILESTORE_CONTAINER ) + \"/\" + key;\n             filepath = filepath.replaceAll( \"//\", \"/\" );\n-            File res = locationManager.getFileForReading( filepath );\n+            File res;\n+            \n+            try {\n+                res = locationManager.getFileForReading( filepath );\n+            } catch (LocationManagerException e) {\n+                return null;\n+            }\n \n-            if ( res.exists() )\n+            if ( res.isDirectory() )\n+            {\n+                String indexPath = pageName.replaceAll(\"/+$\", \"\") + \"/index.html\";\n+                log.info(\"Resource \" + pageName + \" (\" + filepath + \" is a directory, serving \" + indexPath);\n+                return getAppResource(app, indexPath);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODc0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528743", "body": "```suggestion\r\n    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response )\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n          \n          \n            \n                private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response )", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> serveInstalledAppResource( <span class=\"pl-smi\">App</span> app, <span class=\"pl-smi\">String</span> resourcePath, <span class=\"pl-smi\">HttpServletRequest</span> request, <span class=\"pl-smi\">HttpServletResponse</span> response)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> serveInstalledAppResource( <span class=\"pl-smi\">App</span> app, <span class=\"pl-smi\">String</span> resourcePath, <span class=\"pl-smi\">HttpServletRequest</span> request, <span class=\"pl-smi\">HttpServletResponse</span> response<span class=\"x x-first x-last\"> </span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:18:37Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyODk2Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475528963", "body": "```suggestion\r\n        Pattern p = Pattern.compile( APP_PATH_PATTERN );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Pattern p = Pattern.compile(APP_PATH_PATTERN);\n          \n          \n            \n                    Pattern p = Pattern.compile( APP_PATH_PATTERN );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Pattern</span> p <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"pl-c1\">APP_PATH_PATTERN</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Pattern</span> p <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"x x-first x-last\"> </span><span class=\"pl-c1\">APP_PATH_PATTERN</span><span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:04Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTAxOA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529018", "body": "```suggestion\r\n        Matcher m = p.matcher( requestURI );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Matcher m = p.matcher(requestURI);\n          \n          \n            \n                    Matcher m = p.matcher( requestURI );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Matcher</span> m <span class=\"pl-k\">=</span> p<span class=\"pl-k\">.</span>matcher(requestURI);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Matcher</span> m <span class=\"pl-k\">=</span> p<span class=\"pl-k\">.</span>matcher(<span class=\"x x-first x-last\"> </span>requestURI<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:12Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTA5OA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529098", "body": "```suggestion\r\n            String namespace = m.group( 0 );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String namespace = m.group(0);\n          \n          \n            \n                        String namespace = m.group( 0 );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> namespace <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"pl-c1 x x-first x-last\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> namespace <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"x x-first\"> </span><span class=\"pl-c1 x\">0</span><span class=\"x x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:21Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTE0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529143", "body": "```suggestion\r\n            String appName = m.group( 1 );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String appName = m.group(1);\n          \n          \n            \n                        String appName = m.group( 1 );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> appName <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"pl-c1 x x-first x-last\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> appName <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"x x-first\"> </span><span class=\"pl-c1 x\">1</span><span class=\"x x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:27Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTE5OA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529198", "body": "```suggestion\r\n            String resourcePath = m.group( 2 );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String resourcePath = m.group(2);\n          \n          \n            \n                        String resourcePath = m.group( 2 );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> resourcePath <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"pl-c1 x x-first x-last\">2</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> resourcePath <span class=\"pl-k\">=</span> m<span class=\"pl-k\">.</span>group(<span class=\"x x-first\"> </span><span class=\"pl-c1 x\">2</span><span class=\"x x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:33Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTI0OA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529248", "body": "```suggestion\r\n        if ( m.find() ) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (m.find()) {\n          \n          \n            \n                    if ( m.find() ) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (m<span class=\"pl-k\">.</span>find()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\"> </span>m<span class=\"pl-k\">.</span>find()<span class=\"x x-first x-last\"> </span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:19:41Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTM3Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529376", "body": "```suggestion\r\n            log.info( \"AppOverrideFilter :: Matched for URI \" + requestURI );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n          \n          \n            \n                        log.info( \"AppOverrideFilter :: Matched for URI \" + requestURI );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            log<span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: Matched for URI <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> requestURI);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            log<span class=\"pl-k\">.</span>info(<span class=\"x x-first x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: Matched for URI <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> requestURI<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:00Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTQyMg==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529422", "body": "```suggestion\r\n            App app = appManager.getApp( appName );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        App app = appManager.getApp(appName);\n          \n          \n            \n                        App app = appManager.getApp( appName );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">App</span> app <span class=\"pl-k\">=</span> appManager<span class=\"pl-k\">.</span>getApp(appName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">App</span> app <span class=\"pl-k\">=</span> appManager<span class=\"pl-k\">.</span>getApp(<span class=\"x x-first x-last\"> </span>appName<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:06Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTQ5NQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529495", "body": "```suggestion\r\n            if ( app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS ) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n          \n          \n            \n                        if ( app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS ) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (app <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> app<span class=\"pl-k\">.</span>getAppState() <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">AppStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DELETION_IN_PROGRESS</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\"> </span>app <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> app<span class=\"pl-k\">.</span>getAppState() <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">AppStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DELETION_IN_PROGRESS</span><span class=\"x x-first x-last\"> </span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:15Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTU3NQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529575", "body": "```suggestion\r\n                log.info( \"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\" );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");\n          \n          \n            \n                            log.info( \"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\" );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: Overridden app <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> appName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> found, serving override<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>info(<span class=\"x x-first x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: Overridden app <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> appName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> found, serving override<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:26Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n+                log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTY0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529643", "body": "```suggestion\r\n                serveInstalledAppResource( app, resourcePath, request, response );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            serveInstalledAppResource(app, resourcePath, request, response);\n          \n          \n            \n                            serveInstalledAppResource( app, resourcePath, request, response );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                serveInstalledAppResource(app, resourcePath, request, response);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                serveInstalledAppResource(<span class=\"x x-first x-last\"> </span>app, resourcePath, request, response<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:35Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n+                log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");\n+                serveInstalledAppResource(app, resourcePath, request, response);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTc2Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529766", "body": "Comments with code", "bodyText": "Comments with code", "bodyHTML": "<p dir=\"auto\">Comments with code</p>", "author": "stian-sandvold", "createdAt": "2020-08-24T11:20:52Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n+                log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");\n+                serveInstalledAppResource(app, resourcePath, request, response);\n+                // String newURI = \"/api/apps/\" + appName + requestURI.substring(namespace.length());", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTg3MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529870", "body": "```suggestion\r\n                log.info( \"AppOverrideFilter :: App \" + appName + \" not found, falling back to bundled app\" );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.info(\"AppOverrideFilter :: App \" + appName + \" not found, falling back to bundled app\");\n          \n          \n            \n                            log.info( \"AppOverrideFilter :: App \" + appName + \" not found, falling back to bundled app\" );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: App <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> appName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> not found, falling back to bundled app<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>info(<span class=\"x x-first x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AppOverrideFilter :: App <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> appName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> not found, falling back to bundled app<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:21:08Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n+                log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");\n+                serveInstalledAppResource(app, resourcePath, request, response);\n+                // String newURI = \"/api/apps/\" + appName + requestURI.substring(namespace.length());\n+\n+                // req.getRequestDispatcher(newURI).forward(req, res);\n+                return;\n+            } else {\n+                log.info(\"AppOverrideFilter :: App \" + appName + \" not found, falling back to bundled app\");", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyOTkyMw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475529923", "body": "```suggestion\r\n        chain.doFilter( req, res );\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    chain.doFilter(req, res);\n          \n          \n            \n                    chain.doFilter( req, res );", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        chain<span class=\"pl-k\">.</span>doFilter(req, res);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        chain<span class=\"pl-k\">.</span>doFilter(<span class=\"x x-first x-last\"> </span>req, res<span class=\"x x-first x-last\"> </span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stian-sandvold", "createdAt": "2020-08-24T11:21:14Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response)\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile(APP_PATH_PATTERN);\n+        Matcher m = p.matcher(requestURI);\n+\n+        if (m.find()) {\n+            String namespace = m.group(0);\n+            String appName = m.group(1);\n+            String resourcePath = m.group(2);\n+\n+            log.info(\"AppOverrideFilter :: Matched for URI \" + requestURI);\n+\n+            App app = appManager.getApp(appName);\n+\n+            if (app != null && app.getAppState() != AppStatus.DELETION_IN_PROGRESS) {\n+                log.info(\"AppOverrideFilter :: Overridden app \" + appName + \" found, serving override\");\n+                serveInstalledAppResource(app, resourcePath, request, response);\n+                // String newURI = \"/api/apps/\" + appName + requestURI.substring(namespace.length());\n+\n+                // req.getRequestDispatcher(newURI).forward(req, res);\n+                return;\n+            } else {\n+                log.info(\"AppOverrideFilter :: App \" + appName + \" not found, falling back to bundled app\");\n+            }\n+        }\n+\n+        chain.doFilter(req, res);", "originalCommit": "81d6ebb8e178ca82d78130dea483cf48bff3e1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNzcwOA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r475537708", "body": "Ideally this wouldn't duplicate the app cloning list in `dhis-web-apps`, but I don't think it would be trivial to refactor them at the moment.  Eventually this should go away when we move to the `/apps/xyz` app base", "bodyText": "Ideally this wouldn't duplicate the app cloning list in dhis-web-apps, but I don't think it would be trivial to refactor them at the moment.  Eventually this should go away when we move to the /apps/xyz app base", "bodyHTML": "<p dir=\"auto\">Ideally this wouldn't duplicate the app cloning list in <code>dhis-web-apps</code>, but I don't think it would be trivial to refactor them at the moment.  Eventually this should go away when we move to the <code>/apps/xyz</code> app base</p>", "author": "amcgee", "createdAt": "2020-08-24T11:36:53Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/appmanager/AppManager.java", "diffHunk": "@@ -36,13 +36,49 @@\n import java.util.Collection;\n import java.util.List;\n \n+import com.google.common.collect.ImmutableSet;\n+\n /**\n  * @author Saptarshi Purkayastha\n  */\n public interface AppManager\n {\n     String ID = AppManager.class.getName();\n \n+    ImmutableSet<String> BUNDLED_APPS = ImmutableSet.of(\n+        // Javascript apps\n+        \"app-management\",\n+        \"cache-cleaner\",\n+        \"capture\",\n+        \"dashboard\",\n+        \"data-administration\",\n+        \"data-visualizer\",\n+        \"data-quality\",\n+        \"datastore\",\n+        \"event-reports\",\n+        \"event-visualizer\",\n+        \"import-export\",\n+        \"interpretation\",\n+        \"maintenance\",\n+        \"maps\",\n+        \"menu-management\",\n+        \"messaging\",\n+        \"pivot\",\n+        \"reports\",\n+        \"scheduler\",\n+        \"settings\",\n+        \"tracker-capture\",\n+        \"translations\",\n+        \"usage-analytics\",\n+        \"user\",\n+        \"user-profile\",\n+        \n+        // Struts apps\n+        \"approval\",\n+        \"dataentry\",\n+        \"maintenance-mobile\"\n+    );", "originalCommit": "45690f03da621303a09cc548a16fdeff4ad198a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MjcxMQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476362711", "bodyText": "Agreed.", "author": "larshelge", "createdAt": "2020-08-25T11:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNzcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNjk0MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476226940", "body": "Apply DHIS 2 code style.", "bodyText": "Apply DHIS 2 code style.", "bodyHTML": "<p dir=\"auto\">Apply DHIS 2 code style.</p>", "author": "larshelge", "createdAt": "2020-08-25T07:13:51Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.util.StreamUtils;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response )\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )\n+            {\n+                String contextPath = \"../\";\n+                log.debug( String.format( \"Manifest context path: '%s'\", contextPath ) );\n+                app.getActivities().getDhis().setHref( contextPath );\n+            }\n+\n+            jsonMapper.writeValue( response.getOutputStream(), app );\n+        }\n+        // Any other resource\n+        else\n+        {\n+            // Retrieve file\n+            Resource resource = appManager.getAppResource( app, resourcePath );\n+\n+            if ( resource == null )\n+            {\n+                response.sendError( HttpServletResponse.SC_NOT_FOUND );\n+                return;\n+            }\n+\n+            String filename = resource.getFilename();\n+            log.debug( String.format( \"App filename: '%s'\", filename ) );\n+\n+            if ( new ServletWebRequest( request, response ).checkNotModified( resource.lastModified() ) )\n+            {\n+                response.setStatus( HttpServletResponse.SC_NOT_MODIFIED );\n+                return;\n+            }\n+\n+            String mimeType = request.getSession().getServletContext().getMimeType( filename );\n+\n+            if ( mimeType != null )\n+            {\n+                response.setContentType( mimeType );\n+            }\n+\n+            response.setContentLength( (int) resource.contentLength() );\n+            response.setHeader( \"Last-Modified\", DateUtils.getHttpDateString( new Date( resource.lastModified() ) ) );\n+            StreamUtils.copy( resource.getInputStream(), response.getOutputStream() );\n+        }\n+    }\n+\n+    @Override\n+    public void doFilter( ServletRequest req, ServletResponse res, FilterChain chain )\n+        throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) req;\n+        HttpServletResponse response = (HttpServletResponse) res;\n+        String requestURI = request.getRequestURI();\n+\n+        Pattern p = Pattern.compile( APP_PATH_PATTERN );\n+        Matcher m = p.matcher( requestURI );\n+\n+        if ( m.find() ) {\n+            String namespace = m.group( 0 );", "originalCommit": "45690f03da621303a09cc548a16fdeff4ad198a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIzMTUyOA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476231528", "bodyText": "Where is the code style documented?  Is there a lint tool?  @stian-sandvold made the code-style recommendation (spaces around the 0) on this line", "author": "amcgee", "createdAt": "2020-08-25T07:22:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NTk5OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476365999", "bodyText": "You can find info here: https://github.com/dhis2/wow-backend/blob/master/guides/code_formatting.md", "author": "larshelge", "createdAt": "2020-08-25T11:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NjI0OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476366249", "bodyText": "Here specifically, brackets go on new lines.", "author": "larshelge", "createdAt": "2020-08-25T11:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNjk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDE2Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476664166", "bodyText": "Applied codeformatting", "author": "amcgee", "createdAt": "2020-08-25T18:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNjk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NDI0Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476364243", "body": "Perhaps some defensive null checks here to see if `activities` is actually defined to avoid NullPointerException, with some logging maybe.", "bodyText": "Perhaps some defensive null checks here to see if activities is actually defined to avoid NullPointerException, with some logging maybe.", "bodyHTML": "<p dir=\"auto\">Perhaps some defensive null checks here to see if <code>activities</code> is actually defined to avoid NullPointerException, with some logging maybe.</p>", "author": "larshelge", "createdAt": "2020-08-25T11:06:25Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,177 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.StreamUtils;\n+import org.springframework.web.context.request.ServletWebRequest;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+ @Component\n+public class AppOverrideFilter\n+    implements Filter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/dhis-web-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+\n+    // -------------------------------------------------------------------------\n+    // Filter implementation\n+    // -------------------------------------------------------------------------\n+\n+    @Override\n+    public void init( FilterConfig config )\n+    {\n+    }\n+\n+    // From AppController.java (some duplication)\n+    private void serveInstalledAppResource( App app, String resourcePath, HttpServletRequest request, HttpServletResponse response )\n+        throws IOException {\n+        // Get page requested\n+\n+        log.debug( String.format( \"Serving app resource: '%s'\", resourcePath ) );\n+\n+        // Handling of 'manifest.webapp'\n+        if ( \"manifest.webapp\".equals( resourcePath ) )\n+        {\n+            // If request was for manifest.webapp, check for * and replace with host\n+            if ( \"*\".equals( app.getActivities().getDhis().getHref() ) )", "originalCommit": "983a3884a71eff0482cf6b41d50ab21ecd2cf0d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MzY3NQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476663675", "bodyText": "Added", "author": "amcgee", "createdAt": "2020-08-25T18:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NDI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDA1OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r476664059", "bodyText": "Also added to the existing code in AppController.java which was missing those checks (and copied here)", "author": "amcgee", "createdAt": "2020-08-25T18:48:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NDI0Mw=="}], "type": "inlineReview"}, {"oid": "6fa1129fcf9c20dfe7f85067ddb449ee6f0a600f", "url": "https://github.com/dhis2/dhis2-core/commit/6fa1129fcf9c20dfe7f85067ddb449ee6f0a600f", "message": "fix: correctly parse apps api filters", "committedDate": "2020-08-25T18:23:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzNzUxOQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r477137519", "body": "Brackets on new lines.", "bodyText": "Brackets on new lines.", "bodyHTML": "<p dir=\"auto\">Brackets on new lines.</p>", "author": "larshelge", "createdAt": "2020-08-26T08:45:42Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/appmanager/JCloudsAppStorageService.java", "diffHunk": "@@ -429,9 +430,21 @@ public Resource getAppResource( App app, String pageName )\n \n             String filepath = configurationProvider.getProperty( ConfigurationKey.FILESTORE_CONTAINER ) + \"/\" + key;\n             filepath = filepath.replaceAll( \"//\", \"/\" );\n-            File res = locationManager.getFileForReading( filepath );\n+            File res;\n+            \n+            try {", "originalCommit": "6fa1129fcf9c20dfe7f85067ddb449ee6f0a600f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NDY3OA==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r477144678", "bodyText": "Fixed", "author": "amcgee", "createdAt": "2020-08-26T08:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzNzUxOQ=="}], "type": "inlineReview"}, {"oid": "d5f93cdaaa42ddb903dc60dcab1e8c4786ed5b4d", "url": "https://github.com/dhis2/dhis2-core/commit/d5f93cdaaa42ddb903dc60dcab1e8c4786ed5b4d", "message": "feat: implement bundled application overrides", "committedDate": "2020-08-27T08:38:46Z", "type": "commit"}, {"oid": "d5f93cdaaa42ddb903dc60dcab1e8c4786ed5b4d", "url": "https://github.com/dhis2/dhis2-core/commit/d5f93cdaaa42ddb903dc60dcab1e8c4786ed5b4d", "message": "feat: implement bundled application overrides", "committedDate": "2020-08-27T08:38:46Z", "type": "forcePushed"}, {"oid": "d47c4fbbe1647c78d7224ba3c44e8b3a53890b26", "url": "https://github.com/dhis2/dhis2-core/commit/d47c4fbbe1647c78d7224ba3c44e8b3a53890b26", "message": "fix: redirect to launch url from index.action legacy requests", "committedDate": "2020-08-27T09:02:39Z", "type": "commit"}, {"oid": "1025c5d9a165aececbc754b0fab490b46b39d53e", "url": "https://github.com/dhis2/dhis2-core/commit/1025c5d9a165aececbc754b0fab490b46b39d53e", "message": "fix: inject full context path rather than relative URL to manifest.webapp", "committedDate": "2020-08-27T12:29:12Z", "type": "commit"}, {"oid": "6cf80f93cf8268693fd10dbcbbf34928d31f5072", "url": "https://github.com/dhis2/dhis2-core/commit/6cf80f93cf8268693fd10dbcbbf34928d31f5072", "message": "chore: revert to original app authority translation", "committedDate": "2020-08-27T12:40:49Z", "type": "commit"}, {"oid": "2f80a39256916bfcb1a06f2eb2d40e25f426dc0d", "url": "https://github.com/dhis2/dhis2-core/commit/2f80a39256916bfcb1a06f2eb2d40e25f426dc0d", "message": "chore: remove bundledAppNames endpoint", "committedDate": "2020-08-27T12:41:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ2ODE0OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5977#discussion_r478468149", "body": "Remove commented out code.", "bodyText": "Remove commented out code.", "bodyHTML": "<p dir=\"auto\">Remove commented out code.</p>", "author": "larshelge", "createdAt": "2020-08-27T14:36:36Z", "path": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/servlet/filter/AppOverrideFilter.java", "diffHunk": "@@ -0,0 +1,178 @@\n+package org.hisp.dhis.servlet.filter;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+import lombok.extern.slf4j.Slf4j;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.StreamUtils;\n+import org.springframework.web.context.request.ServletWebRequest;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+\n+import org.hisp.dhis.util.DateUtils;\n+import org.hisp.dhis.appmanager.App;\n+import org.hisp.dhis.appmanager.AppManager;\n+import org.hisp.dhis.appmanager.AppStatus;\n+import org.hisp.dhis.webapi.utils.ContextUtils;\n+\n+/**\n+ * @author Austin McGee <austin@dhis2.org>\n+ */\n+ @Slf4j\n+ @Component\n+public class AppOverrideFilter\n+    extends OncePerRequestFilter\n+{\n+    @Autowired\n+    private AppManager appManager;\n+\n+    @Autowired\n+    private ObjectMapper jsonMapper;\n+\n+    public static final String APP_PATH_PATTERN = \"^/\" + AppManager.BUNDLED_APP_PREFIX + \"(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\";\n+    // public static final String REDIRECT_APP_PATH_PATTERN = \"^/\" + AppController.RESOURCE_PATH + \"-(\" + String.join(\"|\", AppManager.BUNDLED_APPS) + \")/(.*)\"", "originalCommit": "2f80a39256916bfcb1a06f2eb2d40e25f426dc0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}