{"pr_number": 911, "pr_title": "Layers view shortcut fixes", "pr_author": "aldebaran30701", "pr_createdAt": "2020-12-08T04:52:46Z", "pr_url": "https://github.com/constellation-app/constellation/pull/911", "merge_commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "timeline": [{"oid": "dd35bdf45aa0cf3874a4b7d657e520a728bdd66f", "url": "https://github.com/constellation-app/constellation/commit/dd35bdf45aa0cf3874a4b7d657e520a728bdd66f", "message": "Version 1 of expression framework", "committedDate": "2020-08-06T02:37:39Z", "type": "commit"}, {"oid": "085e232f556cf4b29723dab4c6631151f608090c", "url": "https://github.com/constellation-app/constellation/commit/085e232f556cf4b29723dab4c6631151f608090c", "message": "Word based operators, parsing handles more edge cases", "committedDate": "2020-08-10T02:01:43Z", "type": "commit"}, {"oid": "e87040c1262ab3015fc8f52f5b9b9bdfd1fafeff", "url": "https://github.com/constellation-app/constellation/commit/e87040c1262ab3015fc8f52f5b9b9bdfd1fafeff", "message": "Merge remote-tracking branch 'origin/master' into expressions", "committedDate": "2020-08-10T02:06:36Z", "type": "commit"}, {"oid": "62c72f2fbf75ff76f184f2cf277fff1a34e80728", "url": "https://github.com/constellation-app/constellation/commit/62c72f2fbf75ff76f184f2cf277fff1a34e80728", "message": "Updated licence", "committedDate": "2020-08-11T03:05:10Z", "type": "commit"}, {"oid": "8a6b33eead10915e535f9832d092903aeed1d193", "url": "https://github.com/constellation-app/constellation/commit/8a6b33eead10915e535f9832d092903aeed1d193", "message": "Added help dependency back in to get working", "committedDate": "2020-08-13T01:02:19Z", "type": "commit"}, {"oid": "3315024330b92cb0240ea1e8a64074a7dd957677", "url": "https://github.com/constellation-app/constellation/commit/3315024330b92cb0240ea1e8a64074a7dd957677", "message": "Initial commit for expressions framework", "committedDate": "2020-08-17T13:51:49Z", "type": "commit"}, {"oid": "70885010fd556c47452ba4baf31033f229f68c4a", "url": "https://github.com/constellation-app/constellation/commit/70885010fd556c47452ba4baf31033f229f68c4a", "message": "Updated to expressions framework version 2", "committedDate": "2020-08-20T01:04:48Z", "type": "commit"}, {"oid": "fc63ba59225880e3688c943ff0c34194c7725732", "url": "https://github.com/constellation-app/constellation/commit/fc63ba59225880e3688c943ff0c34194c7725732", "message": "Added access registry", "committedDate": "2020-08-24T04:05:52Z", "type": "commit"}, {"oid": "b75e246785cb40cc2767da3046305d23dbdc9284", "url": "https://github.com/constellation-app/constellation/commit/b75e246785cb40cc2767da3046305d23dbdc9284", "message": "Merged master", "committedDate": "2020-08-24T04:10:20Z", "type": "commit"}, {"oid": "a95361812593ab77f746b3a3f9b914b2c2eb6682", "url": "https://github.com/constellation-app/constellation/commit/a95361812593ab77f746b3a3f9b914b2c2eb6682", "message": "Merge remote-tracking branch 'origin/master' into expressions_framework", "committedDate": "2020-09-01T01:48:19Z", "type": "commit"}, {"oid": "f8e0288b05b160016e66b0fad2f10e77752669b2", "url": "https://github.com/constellation-app/constellation/commit/f8e0288b05b160016e66b0fad2f10e77752669b2", "message": "Pull out functionality from storegraph", "committedDate": "2020-09-01T02:32:55Z", "type": "commit"}, {"oid": "a4d305834212385e32e4ad1dc68ae85fab93f688", "url": "https://github.com/constellation-app/constellation/commit/a4d305834212385e32e4ad1dc68ae85fab93f688", "message": "Merge branch 'expressions' into feature/layer-standalone", "committedDate": "2020-09-01T22:41:14Z", "type": "commit"}, {"oid": "092a3608979d37ec73a35f3d63f657414175a9c6", "url": "https://github.com/constellation-app/constellation/commit/092a3608979d37ec73a35f3d63f657414175a9c6", "message": "implement expression functionality", "committedDate": "2020-09-02T04:59:01Z", "type": "commit"}, {"oid": "120a5d6d540789d61ed384f6122147501e5b1d17", "url": "https://github.com/constellation-app/constellation/commit/120a5d6d540789d61ed384f6122147501e5b1d17", "message": "Dependencies update", "committedDate": "2020-09-02T05:15:32Z", "type": "commit"}, {"oid": "cfb1ad0e725465df459d250dd96e1397ab6088fb", "url": "https://github.com/constellation-app/constellation/commit/cfb1ad0e725465df459d250dd96e1397ab6088fb", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-02T06:00:16Z", "type": "commit"}, {"oid": "ee841db8f54d0069bb2ebfe6a4227666d9ab1f43", "url": "https://github.com/constellation-app/constellation/commit/ee841db8f54d0069bb2ebfe6a4227666d9ab1f43", "message": "Query class", "committedDate": "2020-09-02T06:27:32Z", "type": "commit"}, {"oid": "a93a1d533a05e8edfecc8f68f59d210ebacb45c9", "url": "https://github.com/constellation-app/constellation/commit/a93a1d533a05e8edfecc8f68f59d210ebacb45c9", "message": "BitmaskQuery", "committedDate": "2020-09-02T07:02:52Z", "type": "commit"}, {"oid": "c38a2857f76d1bd80788c5d17890722122ad0d48", "url": "https://github.com/constellation-app/constellation/commit/c38a2857f76d1bd80788c5d17890722122ad0d48", "message": "BitMaskQuery", "committedDate": "2020-09-02T23:42:33Z", "type": "commit"}, {"oid": "b8b5e3a977bc054b96103aa29aec9518218d4999", "url": "https://github.com/constellation-app/constellation/commit/b8b5e3a977bc054b96103aa29aec9518218d4999", "message": "Working BitMaskQuery Plugin", "committedDate": "2020-09-03T12:01:41Z", "type": "commit"}, {"oid": "77fe1fadc94f09fc12963ff8783433fc0f2c5404", "url": "https://github.com/constellation-app/constellation/commit/77fe1fadc94f09fc12963ff8783433fc0f2c5404", "message": "Fixed active queries bug", "committedDate": "2020-09-03T23:31:31Z", "type": "commit"}, {"oid": "b5cf8cb43d6a1e50dc47772ee43804554aac9e34", "url": "https://github.com/constellation-app/constellation/commit/b5cf8cb43d6a1e50dc47772ee43804554aac9e34", "message": "Removed conflicting code from StoreGraph", "committedDate": "2020-09-04T08:12:23Z", "type": "commit"}, {"oid": "f06972f7fd22feb373716873f6400c8de3bf6608", "url": "https://github.com/constellation-app/constellation/commit/f06972f7fd22feb373716873f6400c8de3bf6608", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-07T00:18:28Z", "type": "commit"}, {"oid": "ebc9d9f5a9b944146d43b727055d371255bb51a3", "url": "https://github.com/constellation-app/constellation/commit/ebc9d9f5a9b944146d43b727055d371255bb51a3", "message": "Fixed small bug in BitMaskQueryCollection", "committedDate": "2020-09-07T01:28:32Z", "type": "commit"}, {"oid": "e370508bd99b8347de276ee05ef5110439702155", "url": "https://github.com/constellation-app/constellation/commit/e370508bd99b8347de276ee05ef5110439702155", "message": "convert Layerdescription to Bitmaskquery\n\nmerge conflict and layers view switch to query", "committedDate": "2020-09-09T02:17:43Z", "type": "commit"}, {"oid": "a314eab8a0986956479b512dfa857adccffdff60", "url": "https://github.com/constellation-app/constellation/commit/a314eab8a0986956479b512dfa857adccffdff60", "message": "Merge branch 'expressions_framework' into feature/layer-standalone", "committedDate": "2020-09-09T02:25:27Z", "type": "commit"}, {"oid": "281a2b82d12beecae37c6742e7acbb4d339ce32d", "url": "https://github.com/constellation-app/constellation/commit/281a2b82d12beecae37c6742e7acbb4d339ce32d", "message": "convert Layers View to use expressions", "committedDate": "2020-09-21T04:28:05Z", "type": "commit"}, {"oid": "3d2756ba418eb03a3a6476bc9a45ef273bb5321f", "url": "https://github.com/constellation-app/constellation/commit/3d2756ba418eb03a3a6476bc9a45ef273bb5321f", "message": "bugfixes", "committedDate": "2020-09-29T04:34:08Z", "type": "commit"}, {"oid": "6551f9407f66868afb400780ac441699f61e321d", "url": "https://github.com/constellation-app/constellation/commit/6551f9407f66868afb400780ac441699f61e321d", "message": "convert layers to query using expressions", "committedDate": "2020-10-01T01:15:13Z", "type": "commit"}, {"oid": "597897aa9ce2d8ad5d80671a84986b6b3e65639d", "url": "https://github.com/constellation-app/constellation/commit/597897aa9ce2d8ad5d80671a84986b6b3e65639d", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-10-01T01:15:55Z", "type": "commit"}, {"oid": "69a0602698bd5009f7075b78e6a392307fcdadbe", "url": "https://github.com/constellation-app/constellation/commit/69a0602698bd5009f7075b78e6a392307fcdadbe", "message": "resolve race condition for attribute listening", "committedDate": "2020-10-01T23:22:01Z", "type": "commit"}, {"oid": "ea5d5ce48ebf1e06d747e41ccf6f59656f79d415", "url": "https://github.com/constellation-app/constellation/commit/ea5d5ce48ebf1e06d747e41ccf6f59656f79d415", "message": "sonar bug fixes", "committedDate": "2020-10-02T00:20:30Z", "type": "commit"}, {"oid": "2c8ce30289dd4da043903eb88ff0a058c9f8de94", "url": "https://github.com/constellation-app/constellation/commit/2c8ce30289dd4da043903eb88ff0a058c9f8de94", "message": "fix test cases", "committedDate": "2020-10-02T05:17:57Z", "type": "commit"}, {"oid": "4a78eaa6446651be3c0bb46aeed3e6604e5b303a", "url": "https://github.com/constellation-app/constellation/commit/4a78eaa6446651be3c0bb46aeed3e6604e5b303a", "message": "Requested changes fix", "committedDate": "2020-10-07T23:39:59Z", "type": "commit"}, {"oid": "cc862d8cc4ea76332f79c41f293f04029b891b4d", "url": "https://github.com/constellation-app/constellation/commit/cc862d8cc4ea76332f79c41f293f04029b891b4d", "message": "Replace var with explicit type", "committedDate": "2020-10-13T22:39:35Z", "type": "commit"}, {"oid": "f9d2cafaf602610c2fdecaf038247ce2e35a1398", "url": "https://github.com/constellation-app/constellation/commit/f9d2cafaf602610c2fdecaf038247ce2e35a1398", "message": "convert for loop to while", "committedDate": "2020-10-13T22:58:33Z", "type": "commit"}, {"oid": "3db11bce4284cd7a426a0bdc4f0f5e407c0db581", "url": "https://github.com/constellation-app/constellation/commit/3db11bce4284cd7a426a0bdc4f0f5e407c0db581", "message": "sonarcube fixes", "committedDate": "2020-10-26T02:29:00Z", "type": "commit"}, {"oid": "859e0d443cf2cbd55eb8aeda116374c4b116b28a", "url": "https://github.com/constellation-app/constellation/commit/859e0d443cf2cbd55eb8aeda116374c4b116b28a", "message": "SQ Fixes", "committedDate": "2020-10-30T04:03:39Z", "type": "commit"}, {"oid": "83ee8a62c2a52ac5c6a24822168578a9853821a9", "url": "https://github.com/constellation-app/constellation/commit/83ee8a62c2a52ac5c6a24822168578a9853821a9", "message": "revert switch statements from methods", "committedDate": "2020-11-01T22:08:04Z", "type": "commit"}, {"oid": "802d4653e8b192c4ab323fbcfb2ad90c5b79316c", "url": "https://github.com/constellation-app/constellation/commit/802d4653e8b192c4ab323fbcfb2ad90c5b79316c", "message": "sonar diamond operator", "committedDate": "2020-11-01T22:53:16Z", "type": "commit"}, {"oid": "4d6ae1714ac4a7f74aca96432b9b6b3a1a410a88", "url": "https://github.com/constellation-app/constellation/commit/4d6ae1714ac4a7f74aca96432b9b6b3a1a410a88", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-11-11T21:21:59Z", "type": "commit"}, {"oid": "18ac45f427e7811de003d7e9138fc44c16297047", "url": "https://github.com/constellation-app/constellation/commit/18ac45f427e7811de003d7e9138fc44c16297047", "message": "Sonar bug fix", "committedDate": "2020-11-23T21:15:57Z", "type": "commit"}, {"oid": "749b98d84f8e9b6635dc94f95f74624b78eef87e", "url": "https://github.com/constellation-app/constellation/commit/749b98d84f8e9b6635dc94f95f74624b78eef87e", "message": "Add debug statements and futures to tasks", "committedDate": "2020-11-23T21:18:04Z", "type": "commit"}, {"oid": "ee50ec6866f2cd0b041abbf9084a93bdb6f1dba2", "url": "https://github.com/constellation-app/constellation/commit/ee50ec6866f2cd0b041abbf9084a93bdb6f1dba2", "message": "add visibility access for Top Component", "committedDate": "2020-12-07T23:30:33Z", "type": "commit"}, {"oid": "dface9ed9e85391d6127a62327248491ae4319de", "url": "https://github.com/constellation-app/constellation/commit/dface9ed9e85391d6127a62327248491ae4319de", "message": "fix bug for shortcut hotkeys", "committedDate": "2020-12-07T23:30:50Z", "type": "commit"}, {"oid": "ff76f4c87e83a8534775bab9b59e4f70af7550ee", "url": "https://github.com/constellation-app/constellation/commit/ff76f4c87e83a8534775bab9b59e4f70af7550ee", "message": "Merge branch 'master' into feature/layer-standalone", "committedDate": "2020-12-07T23:40:26Z", "type": "commit"}, {"oid": "c7d76a5f02c37b90fbeb97b0cd2677b29d952e7e", "url": "https://github.com/constellation-app/constellation/commit/c7d76a5f02c37b90fbeb97b0cd2677b29d952e7e", "message": "remove log statements", "committedDate": "2020-12-08T00:41:31Z", "type": "commit"}, {"oid": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "url": "https://github.com/constellation-app/constellation/commit/b237f4fd2abd473f7b90e71217779c9f96f68f9d", "message": "fix sonar warnings", "committedDate": "2020-12-08T04:19:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTE0OA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538991148", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:09:36Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java", "diffHunk": "@@ -323,7 +322,7 @@ protected void print(String prefix, StringBuilder out) {\n     public static SequenceExpression parse(String expression) {\n \n         ParseState state = ParseState.READING_WHITESPACE;\n-        final char[] content = new char[expression.length()];\n+        char[] content = new char[expression.length()];", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\nindex a3d06c5d6..a16ca161b 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n", "chunk": "@@ -322,7 +322,7 @@ public class ExpressionParser {\n     public static SequenceExpression parse(String expression) {\n \n         ParseState state = ParseState.READING_WHITESPACE;\n-        char[] content = new char[expression.length()];\n+        final char[] content = new char[expression.length()];\n         int contentLength = 0;\n \n         SequenceExpression rootExpression = new SequenceExpression(null);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\nindex a3d06c5d6..a16ca161b 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n", "chunk": "@@ -322,7 +322,7 @@ public class ExpressionParser {\n     public static SequenceExpression parse(String expression) {\n \n         ParseState state = ParseState.READING_WHITESPACE;\n-        char[] content = new char[expression.length()];\n+        final char[] content = new char[expression.length()];\n         int contentLength = 0;\n \n         SequenceExpression rootExpression = new SequenceExpression(null);\n", "next_change": {"commit": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "changed_code": [{"header": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\nindex a16ca161b..49bbe4c57 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/expression/ExpressionParser.java\n", "chunk": "@@ -312,14 +453,16 @@ public class ExpressionParser {\n         @Override\n         protected void print(String prefix, StringBuilder out) {\n             out.append(prefix).append(\"(\\n\");\n-            children.forEach(child -> {\n-                child.print(prefix + \"  \", out);\n-            });\n+            children.forEach(child -> child.print(prefix + \"  \", out));\n             out.append(prefix).append(\")\\n\");\n         }\n     }\n \n     public static SequenceExpression parse(String expression) {\n+        if (expression == null) {\n+            LOGGER.log(Level.WARNING, QUERY_ERROR_MSG, NULL_INPUT_ERROR);\n+            return null;\n+        }\n \n         ParseState state = ParseState.READING_WHITESPACE;\n         final char[] content = new char[expression.length()];\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "fce503a6e63f2c7116fce368b041f7e3d9eab224", "committedDate": "2021-06-30 13:34:36 +1000", "message": "\u2705 Expressions tests and Layers View Improvements (#1115)"}, {"oid": "3e5aed13f564d90b3c3b3cc14353c4561210f97d", "committedDate": "2021-11-19 14:44:48 +1100", "message": "Sonar Minor Code Smell Fixes (#1562)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538991554", "body": "What's the reason for using the constructor here (and other related files)? ", "bodyText": "What's the reason for using the constructor here (and other related files)?", "bodyHTML": "<p dir=\"auto\">What's the reason for using the constructor here (and other related files)?</p>", "author": "antares1470", "createdAt": "2020-12-09T04:10:46Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java", "diffHunk": "@@ -25,7 +25,7 @@\n  */\n public class And {\n \n-    public static final String NAME = \"AND\";\n+    public static final String NAME = new String(\"AND\");", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1OTg1OQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r539659859", "bodyText": "So for some reason, the map structure that this gets stored into, does not work when you omit the new String(...) constructor. I previously fixed this issue up in the SQ warnings from a few weeks back - but this specifically broke the Layers View. It was pretty hard to debug.\nI've reverted it back which fixed the issue.", "author": "aldebaran30701", "createdAt": "2020-12-09T21:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxNDI4Mg==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r539814282", "bodyText": "hmmm that's really odd. Perhaps the constructor actually behaves differently than expected (though I don't understand why)", "author": "antares1470", "createdAt": "2020-12-10T03:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MTU1NA=="}], "type": "inlineReview", "revised_code": {"commit": "1d01b1dd830abf81fbe58ded86530dcd12bcd6db", "changed_code": [{"header": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\nindex 8f01e42d0..f8405d421 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\n", "chunk": "@@ -25,6 +25,8 @@ import au.gov.asd.tac.constellation.graph.value.readables.BooleanReadable;\n  */\n public class And {\n \n+    // Explicitly calling the constructor on a String appears to be necessary to\n+    // allow the registry to find the operator.\n     public static final String NAME = new String(\"AND\");\n \n     private And() {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\nindex 8f01e42d0..f8405d421 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/value/operations/And.java\n", "chunk": "@@ -25,6 +25,8 @@ import au.gov.asd.tac.constellation.graph.value.readables.BooleanReadable;\n  */\n public class And {\n \n+    // Explicitly calling the constructor on a String appears to be necessary to\n+    // allow the registry to find the operator.\n     public static final String NAME = new String(\"AND\");\n \n     private And() {\n", "next_change": null}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "3e5aed13f564d90b3c3b3cc14353c4561210f97d", "committedDate": "2021-11-19 14:44:48 +1100", "message": "Sonar Minor Code Smell Fixes (#1562)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjEwOA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992108", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:12:18Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -147,6 +151,22 @@ public void execute() {\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n+    public void executeFuture() {\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n+\n+        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -154,15 +154,15 @@ public class LayersViewController {\n     public void executeFuture() {\n         final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n \n-        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -154,15 +154,15 @@ public class LayersViewController {\n     public void executeFuture() {\n         final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n \n-        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -160,10 +146,10 @@ public class LayersViewController {\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layer Selection update was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjE5MQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992191", "body": "exceptions can be final", "bodyText": "exceptions can be final", "bodyHTML": "<p dir=\"auto\">exceptions can be final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:12:34Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -147,6 +151,22 @@ public void execute() {\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n+    public void executeFuture() {\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n+\n+        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -154,15 +154,15 @@ public class LayersViewController {\n     public void executeFuture() {\n         final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n \n-        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -154,15 +154,15 @@ public class LayersViewController {\n     public void executeFuture() {\n         final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxBitMaskCollection, txBitMaskCollection);\n \n-        Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -160,10 +146,10 @@ public class LayersViewController {\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layer Selection update was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjI3Ng==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992276", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:12:49Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -161,6 +181,28 @@ public void readState() {\n                 .executeLater(graph);\n     }\n \n+    public boolean getParentVisibility() {\n+        return parent != null ? parent.getVisibility() : null;\n+    }\n+\n+    public void readStateFuture() {\n+        final LayersViewPane pane = parent.getContent();\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (pane == null || graph == null) {\n+            return;\n+        }\n+        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -191,14 +191,14 @@ public class LayersViewController {\n         if (pane == null || graph == null) {\n             return;\n         }\n-        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -191,14 +191,14 @@ public class LayersViewController {\n         if (pane == null || graph == null) {\n             return;\n         }\n-        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -172,34 +158,40 @@ public class LayersViewController {\n      * View pane.\n      */\n     public void readState() {\n+        if (parent == null) {\n+            return;\n+        }\n         final LayersViewPane pane = parent.getContent();\n         final Graph graph = GraphManager.getDefault().getActiveGraph();\n         if (pane == null || graph == null) {\n             return;\n         }\n-        PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        PluginExecution.withPlugin(new LayersStateReaderPlugin(pane))\n                 .executeLater(graph);\n     }\n \n     public boolean getParentVisibility() {\n-        return parent != null ? parent.getVisibility() : null;\n+        return parent != null && parent.getVisibility();\n     }\n \n     public void readStateFuture() {\n+        if (parent == null) {\n+            return;\n+        }\n         final LayersViewPane pane = parent.getContent();\n         final Graph graph = GraphManager.getDefault().getActiveGraph();\n         if (pane == null || graph == null) {\n             return;\n         }\n-        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersStateReaderPlugin(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers State Reader was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjMzNw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992337", "body": "both exceptions final", "bodyText": "both exceptions final", "bodyHTML": "<p dir=\"auto\">both exceptions final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:13:01Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -161,6 +181,28 @@ public void readState() {\n                 .executeLater(graph);\n     }\n \n+    public boolean getParentVisibility() {\n+        return parent != null ? parent.getVisibility() : null;\n+    }\n+\n+    public void readStateFuture() {\n+        final LayersViewPane pane = parent.getContent();\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (pane == null || graph == null) {\n+            return;\n+        }\n+        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+                .executeLater(graph);\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -191,14 +191,14 @@ public class LayersViewController {\n         if (pane == null || graph == null) {\n             return;\n         }\n-        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -191,14 +191,14 @@ public class LayersViewController {\n         if (pane == null || graph == null) {\n             return;\n         }\n-        Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -172,34 +158,40 @@ public class LayersViewController {\n      * View pane.\n      */\n     public void readState() {\n+        if (parent == null) {\n+            return;\n+        }\n         final LayersViewPane pane = parent.getContent();\n         final Graph graph = GraphManager.getDefault().getActiveGraph();\n         if (pane == null || graph == null) {\n             return;\n         }\n-        PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        PluginExecution.withPlugin(new LayersStateReaderPlugin(pane))\n                 .executeLater(graph);\n     }\n \n     public boolean getParentVisibility() {\n-        return parent != null ? parent.getVisibility() : null;\n+        return parent != null && parent.getVisibility();\n     }\n \n     public void readStateFuture() {\n+        if (parent == null) {\n+            return;\n+        }\n         final LayersViewPane pane = parent.getContent();\n         final Graph graph = GraphManager.getDefault().getActiveGraph();\n         if (pane == null || graph == null) {\n             return;\n         }\n-        final Future<?> f = PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+        final Future<?> f = PluginExecution.withPlugin(new LayersStateReaderPlugin(pane))\n                 .executeLater(graph);\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers State Reader was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjQxMw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992413", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:13:17Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -172,13 +214,36 @@ public void readState() {\n         if (graph == null) {\n             return null;\n         }\n+\n         return PluginExecution.withPlugin(new LayersViewStateWriter(vxBitMaskCollection.getQueries(), txBitMaskCollection.getQueries()))\n                 .executeLater(graph);\n+\n     }\n \n     public void updateQueries(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n+        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n+        PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+    }\n+\n+    public void updateQueriesFuture(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        PluginExecution.withPlugin(updatePlugin).executeLater(currentGraph);\n+        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -235,13 +235,13 @@ public class LayersViewController {\n             return;\n         }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -235,13 +235,13 @@ public class LayersViewController {\n             return;\n         }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -234,15 +226,15 @@ public class LayersViewController {\n         if (graph == null) {\n             return;\n         }\n-        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateQueryPlugin(vxBitMaskCollection,\n+                txBitMaskCollection)).executeLater(graph);\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers Query update was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MjQ0Ng==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538992446", "body": "both exceptions final", "bodyText": "both exceptions final", "bodyHTML": "<p dir=\"auto\">both exceptions final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:13:26Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -172,13 +214,36 @@ public void readState() {\n         if (graph == null) {\n             return null;\n         }\n+\n         return PluginExecution.withPlugin(new LayersViewStateWriter(vxBitMaskCollection.getQueries(), txBitMaskCollection.getQueries()))\n                 .executeLater(graph);\n+\n     }\n \n     public void updateQueries(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n+        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n+        PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+    }\n+\n+    public void updateQueriesFuture(final Graph currentGraph) {\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if (graph == null) {\n+            return;\n+        }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        PluginExecution.withPlugin(updatePlugin).executeLater(currentGraph);\n+        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        try {\n+            f.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -235,13 +235,13 @@ public class LayersViewController {\n             return;\n         }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex ab684a64c..713bc06b8 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -235,13 +235,13 @@ public class LayersViewController {\n             return;\n         }\n         final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n         try {\n             f.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n     }\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex 713bc06b8..1e1057ad5 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n", "chunk": "@@ -234,15 +226,15 @@ public class LayersViewController {\n         if (graph == null) {\n             return;\n         }\n-        final UpdateQueryPlugin updatePlugin = new UpdateQueryPlugin(vxBitMaskCollection, txBitMaskCollection);\n-        final Future<?> f = PluginExecution.withPlugin(updatePlugin).executeLater(graph);\n+        final Future<?> f = PluginExecution.withPlugin(new UpdateQueryPlugin(vxBitMaskCollection,\n+                txBitMaskCollection)).executeLater(graph);\n         try {\n             f.get();\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers Query update was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "fb268ebe729a928bf10596be71a8f7896635a25c", "committedDate": "2021-08-16 15:33:56 +1000", "message": "add tags and refactor plugins (#1206)"}, {"oid": "b84b1fe9a0c5a990d9a167a5b2f6c5cfb72d1ddc", "committedDate": "2021-08-23 13:15:03 +1000", "message": "Layers view - Remove a layer (#1148)"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "6a0e46820b9adc39ad51bcf76f5a267bd8d9bb6c", "committedDate": "2021-11-17 08:55:13 +1100", "message": "Add constants for plugin tags (#1555)"}, {"oid": "ac3152d535ec2e5195db62e1170de690305d30e8", "committedDate": "2021-11-24 08:27:51 +1100", "message": "\ud83e\uddf9  Sonar smells (#1566)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzE5MA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993190", "body": "is there an alternative to declaring `var`?", "bodyText": "is there an alternative to declaring var?", "bodyHTML": "<p dir=\"auto\">is there an alternative to declaring <code>var</code>?</p>", "author": "antares1470", "createdAt": "2020-12-09T04:15:47Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY5OTI5OQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r540699299", "bodyText": "Forgot to remove this var when using it to test my thinking \ud83d\udc4d", "author": "aldebaran30701", "createdAt": "2020-12-11T05:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -55,8 +56,8 @@ import org.openide.util.NbBundle;\n public class LayersViewShortcuts extends AbstractAction {\n \n     private void triggerLayerSelection(final int layerId) {\n-        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n-        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+        BitMaskQueryCollection vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        BitMaskQueryCollection txCollection = LayersViewController.getDefault().getTxQueryCollection();\n \n         if (vxCollection.getQuery(layerId) != null) {\n             vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -55,8 +56,8 @@ import org.openide.util.NbBundle;\n public class LayersViewShortcuts extends AbstractAction {\n \n     private void triggerLayerSelection(final int layerId) {\n-        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n-        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+        BitMaskQueryCollection vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        BitMaskQueryCollection txCollection = LayersViewController.getDefault().getTxQueryCollection();\n \n         if (vxCollection.getQuery(layerId) != null) {\n             vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 0817134ef..90e7ea907 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -54,6 +55,8 @@ import org.openide.util.NbBundle;\n })\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n+    \n+    private static final Logger LOGGER = Logger.getLogger(LayersViewShortcuts.class.getName());\n \n     private void triggerLayerSelection(final int layerId) {\n         BitMaskQueryCollection vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n", "next_change": {"commit": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 90e7ea907..40d5b701b 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -58,9 +59,9 @@ public class LayersViewShortcuts extends AbstractAction {\n     \n     private static final Logger LOGGER = Logger.getLogger(LayersViewShortcuts.class.getName());\n \n-    private void triggerLayerSelection(final int layerId) {\n-        BitMaskQueryCollection vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n-        BitMaskQueryCollection txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+    private void triggerLayerSelection(final Graph graph, final int layerId) {\n+        final BitMaskQueryCollection vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        final BitMaskQueryCollection txCollection = LayersViewController.getDefault().getTxQueryCollection();\n \n         if (vxCollection.getQuery(layerId) != null) {\n             vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n", "next_change": {"commit": "d7a663502bd760466f86320887ade0e95ac520ec", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 40d5b701b..c154f27f0 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -64,10 +64,10 @@ public class LayersViewShortcuts extends AbstractAction {\n         final BitMaskQueryCollection txCollection = LayersViewController.getDefault().getTxQueryCollection();\n \n         if (vxCollection.getQuery(layerId) != null) {\n-            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).isVisible());\n         }\n         if (txCollection.getQuery(layerId) != null) {\n-            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).isVisible());\n         }\n \n         final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "committedDate": "2021-08-22 15:00:09 +1000", "message": ":art: Code formatting"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "committedDate": "2021-11-04 11:44:31 +1100", "message": "Fixing active graph calls (#1524)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzI0Nw==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993247", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:16:00Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -70,14 +71,14 @@ public class LayersViewShortcuts extends AbstractAction {\n         PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n-        Future<?> future = LayersViewController.getDefault().writeState();\n+        final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n             future.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -70,14 +71,14 @@ public class LayersViewShortcuts extends AbstractAction {\n         PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n-        Future<?> future = LayersViewController.getDefault().writeState();\n+        final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n             future.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n \n", "next_change": {"commit": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 0817134ef..2117e4fc3 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -74,7 +74,9 @@ public class LayersViewShortcuts extends AbstractAction {\n         final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n-            future.get();\n+            if(future != null){\n+                future.get();\n+            }\n         } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n", "next_change": {"commit": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 2117e4fc3..1675d5b69 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -74,7 +74,7 @@ public class LayersViewShortcuts extends AbstractAction {\n         final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n-            if(future != null){\n+            if (future != null) {\n                 future.get();\n             }\n         } catch (final InterruptedException ex) {\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 1675d5b69..90e7ea907 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -78,10 +81,10 @@ public class LayersViewShortcuts extends AbstractAction {\n                 future.get();\n             }\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers State Writer was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n \n         if (!LayersViewController.getDefault().getParentVisibility()) {\n", "next_change": {"commit": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 90e7ea907..40d5b701b 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -89,19 +90,20 @@ public class LayersViewShortcuts extends AbstractAction {\n \n         if (!LayersViewController.getDefault().getParentVisibility()) {\n             LayersViewController.getDefault().readStateFuture();\n-            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+            LayersViewController.getDefault().updateQueries(graph);\n         }\n     }\n \n     @Override\n-    public void actionPerformed(ActionEvent e) {\n+    public void actionPerformed(final ActionEvent e) {\n         final String hotkey = e.getActionCommand();\n+        final Graph currentGraph = GraphManager.getDefault().getActiveGraph();\n         switch (hotkey) {\n             case \"CA-L\":\n-                PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(currentGraph);\n                 break;\n             case \"CA-D\":\n-                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(currentGraph);\n                 try {\n                     deselectFuture.get();\n                 } catch (final InterruptedException ex) {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "committedDate": "2021-08-22 15:00:09 +1000", "message": ":art: Code formatting"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "committedDate": "2021-11-04 11:44:31 +1100", "message": "Fixing active graph calls (#1524)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzMwNA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993304", "body": "both exceptions final", "bodyText": "both exceptions final", "bodyHTML": "<p dir=\"auto\">both exceptions final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:16:09Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -70,14 +71,14 @@ public class LayersViewShortcuts extends AbstractAction {\n         PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n-        Future<?> future = LayersViewController.getDefault().writeState();\n+        final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n             future.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -70,14 +71,14 @@ public class LayersViewShortcuts extends AbstractAction {\n         PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n \n-        Future<?> future = LayersViewController.getDefault().writeState();\n+        final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n             future.get();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n-        } catch (ExecutionException ex) {\n+        } catch (final ExecutionException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n \n", "next_change": {"commit": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 0817134ef..2117e4fc3 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -74,7 +74,9 @@ public class LayersViewShortcuts extends AbstractAction {\n         final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n-            future.get();\n+            if(future != null){\n+                future.get();\n+            }\n         } catch (final InterruptedException ex) {\n             Exceptions.printStackTrace(ex);\n             Thread.currentThread().interrupt();\n", "next_change": {"commit": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 2117e4fc3..1675d5b69 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -74,7 +74,7 @@ public class LayersViewShortcuts extends AbstractAction {\n         final Future<?> future = LayersViewController.getDefault().writeState();\n \n         try {\n-            if(future != null){\n+            if (future != null) {\n                 future.get();\n             }\n         } catch (final InterruptedException ex) {\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 1675d5b69..90e7ea907 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -78,10 +81,10 @@ public class LayersViewShortcuts extends AbstractAction {\n                 future.get();\n             }\n         } catch (final InterruptedException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, \"Layers State Writer was interrupted\", ex);\n             Thread.currentThread().interrupt();\n         } catch (final ExecutionException ex) {\n-            Exceptions.printStackTrace(ex);\n+            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n         }\n \n         if (!LayersViewController.getDefault().getParentVisibility()) {\n", "next_change": {"commit": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 90e7ea907..40d5b701b 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -89,19 +90,20 @@ public class LayersViewShortcuts extends AbstractAction {\n \n         if (!LayersViewController.getDefault().getParentVisibility()) {\n             LayersViewController.getDefault().readStateFuture();\n-            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+            LayersViewController.getDefault().updateQueries(graph);\n         }\n     }\n \n     @Override\n-    public void actionPerformed(ActionEvent e) {\n+    public void actionPerformed(final ActionEvent e) {\n         final String hotkey = e.getActionCommand();\n+        final Graph currentGraph = GraphManager.getDefault().getActiveGraph();\n         switch (hotkey) {\n             case \"CA-L\":\n-                PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(currentGraph);\n                 break;\n             case \"CA-D\":\n-                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(currentGraph);\n                 try {\n                     deselectFuture.get();\n                 } catch (final InterruptedException ex) {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "committedDate": "2021-08-22 15:00:09 +1000", "message": ":art: Code formatting"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "committedDate": "2021-11-04 11:44:31 +1100", "message": "Fixing active graph calls (#1524)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzM1NQ==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993355", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:16:20Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+\n+        if (!LayersViewController.getDefault().getParentVisibility()) {\n+            LayersViewController.getDefault().readStateFuture();\n+            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+        }\n+    }\n+\n     @Override\n     public void actionPerformed(ActionEvent e) {\n-        Future<?> enableLayerFuture = null;\n-\n         final String hotkey = e.getActionCommand();\n         switch (hotkey) {\n             case \"CA-L\":\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -95,13 +96,13 @@ public class LayersViewShortcuts extends AbstractAction {\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 try {\n                     deselectFuture.get();\n-                } catch (InterruptedException ex) {\n+                } catch (final InterruptedException ex) {\n                     Exceptions.printStackTrace(ex);\n                     Thread.currentThread().interrupt();\n-                } catch (ExecutionException ex) {\n+                } catch (final ExecutionException ex) {\n                     Exceptions.printStackTrace(ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -95,13 +96,13 @@ public class LayersViewShortcuts extends AbstractAction {\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 try {\n                     deselectFuture.get();\n-                } catch (InterruptedException ex) {\n+                } catch (final InterruptedException ex) {\n                     Exceptions.printStackTrace(ex);\n                     Thread.currentThread().interrupt();\n-                } catch (ExecutionException ex) {\n+                } catch (final ExecutionException ex) {\n                     Exceptions.printStackTrace(ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 0817134ef..90e7ea907 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -100,10 +105,10 @@ public class LayersViewShortcuts extends AbstractAction {\n                 try {\n                     deselectFuture.get();\n                 } catch (final InterruptedException ex) {\n-                    Exceptions.printStackTrace(ex);\n+                    LOGGER.log(Level.SEVERE, \"Deselecting All layers was interrupted\", ex);\n                     Thread.currentThread().interrupt();\n                 } catch (final ExecutionException ex) {\n-                    Exceptions.printStackTrace(ex);\n+                    LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n                 break;\n", "next_change": {"commit": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 90e7ea907..40d5b701b 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -110,34 +112,34 @@ public class LayersViewShortcuts extends AbstractAction {\n                 } catch (final ExecutionException ex) {\n                     LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n                 }\n-                LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n+                LayersViewController.getDefault().updateQueriesFuture(currentGraph);\n                 break;\n             case \"CA-1\":\n-                triggerLayerSelection(1);\n+                triggerLayerSelection(currentGraph, 1);\n                 break;\n             case \"CA-2\":\n-                triggerLayerSelection(2);\n+                triggerLayerSelection(currentGraph, 2);\n                 break;\n             case \"CA-3\":\n-                triggerLayerSelection(3);\n+                triggerLayerSelection(currentGraph, 3);\n                 break;\n             case \"CA-4\":\n-                triggerLayerSelection(4);\n+                triggerLayerSelection(currentGraph, 4);\n                 break;\n             case \"CA-5\":\n-                triggerLayerSelection(5);\n+                triggerLayerSelection(currentGraph, 5);\n                 break;\n             case \"CA-6\":\n-                triggerLayerSelection(6);\n+                triggerLayerSelection(currentGraph, 6);\n                 break;\n             case \"CA-7\":\n-                triggerLayerSelection(7);\n+                triggerLayerSelection(currentGraph, 7);\n                 break;\n             case \"CA-8\":\n-                triggerLayerSelection(8);\n+                triggerLayerSelection(currentGraph, 8);\n                 break;\n             case \"CA-9\":\n-                triggerLayerSelection(9);\n+                triggerLayerSelection(currentGraph, 9);\n                 break;\n             default:\n                 break;\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "committedDate": "2021-08-22 15:00:09 +1000", "message": ":art: Code formatting"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "committedDate": "2021-11-04 11:44:31 +1100", "message": "Fixing active graph calls (#1524)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzQxMA==", "url": "https://github.com/constellation-app/constellation/pull/911#discussion_r538993410", "body": "both exceptions final", "bodyText": "both exceptions final", "bodyHTML": "<p dir=\"auto\">both exceptions final</p>", "author": "antares1470", "createdAt": "2020-12-09T04:16:30Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java", "diffHunk": "@@ -52,74 +54,87 @@\n @NbBundle.Messages(\"CTL_LayersViewShortcuts=Layers View: Shortcuts\")\n public class LayersViewShortcuts extends AbstractAction {\n \n+    private void triggerLayerSelection(final int layerId) {\n+        var vxCollection = LayersViewController.getDefault().getVxQueryCollection();\n+        var txCollection = LayersViewController.getDefault().getTxQueryCollection();\n+\n+        if (vxCollection.getQuery(layerId) != null) {\n+            vxCollection.getQuery(layerId).setVisibility(!vxCollection.getQuery(layerId).getVisibility());\n+        }\n+        if (txCollection.getQuery(layerId) != null) {\n+            txCollection.getQuery(layerId).setVisibility(!txCollection.getQuery(layerId).getVisibility());\n+        }\n+\n+        final int newBitmask = LayersUtilities.calculateCurrentLayerSelectionBitMask(vxCollection, txCollection);\n+\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+\n+        Future<?> future = LayersViewController.getDefault().writeState();\n+\n+        try {\n+            future.get();\n+        } catch (InterruptedException ex) {\n+            Exceptions.printStackTrace(ex);\n+            Thread.currentThread().interrupt();\n+        } catch (ExecutionException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+\n+        if (!LayersViewController.getDefault().getParentVisibility()) {\n+            LayersViewController.getDefault().readStateFuture();\n+            LayersViewController.getDefault().updateQueries(GraphManager.getDefault().getActiveGraph());\n+        }\n+    }\n+\n     @Override\n     public void actionPerformed(ActionEvent e) {\n-        Future<?> enableLayerFuture = null;\n-\n         final String hotkey = e.getActionCommand();\n         switch (hotkey) {\n             case \"CA-L\":\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                try {\n+                    deselectFuture.get();\n+                } catch (InterruptedException ex) {\n+                    Exceptions.printStackTrace(ex);\n+                    Thread.currentThread().interrupt();\n+                } catch (ExecutionException ex) {", "originalCommit": "b237f4fd2abd473f7b90e71217779c9f96f68f9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1661c58542265d76f52e362009b73a88af7c5728", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -95,13 +96,13 @@ public class LayersViewShortcuts extends AbstractAction {\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 try {\n                     deselectFuture.get();\n-                } catch (InterruptedException ex) {\n+                } catch (final InterruptedException ex) {\n                     Exceptions.printStackTrace(ex);\n                     Thread.currentThread().interrupt();\n-                } catch (ExecutionException ex) {\n+                } catch (final ExecutionException ex) {\n                     Exceptions.printStackTrace(ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 3fa0cfe10..0817134ef 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -95,13 +96,13 @@ public class LayersViewShortcuts extends AbstractAction {\n                 PluginExecution.withPlugin(new NewLayerPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 break;\n             case \"CA-D\":\n-                Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n+                final Future<?> deselectFuture = PluginExecution.withPlugin(new DeselectAllLayersPlugin()).executeLater(GraphManager.getDefault().getActiveGraph());\n                 try {\n                     deselectFuture.get();\n-                } catch (InterruptedException ex) {\n+                } catch (final InterruptedException ex) {\n                     Exceptions.printStackTrace(ex);\n                     Thread.currentThread().interrupt();\n-                } catch (ExecutionException ex) {\n+                } catch (final ExecutionException ex) {\n                     Exceptions.printStackTrace(ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n", "next_change": {"commit": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 0817134ef..90e7ea907 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -100,10 +105,10 @@ public class LayersViewShortcuts extends AbstractAction {\n                 try {\n                     deselectFuture.get();\n                 } catch (final InterruptedException ex) {\n-                    Exceptions.printStackTrace(ex);\n+                    LOGGER.log(Level.SEVERE, \"Deselecting All layers was interrupted\", ex);\n                     Thread.currentThread().interrupt();\n                 } catch (final ExecutionException ex) {\n-                    Exceptions.printStackTrace(ex);\n+                    LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n                 }\n                 LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n                 break;\n", "next_change": {"commit": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "changed_code": [{"header": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\nindex 90e7ea907..40d5b701b 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/shortcut/LayersViewShortcuts.java\n", "chunk": "@@ -110,34 +112,34 @@ public class LayersViewShortcuts extends AbstractAction {\n                 } catch (final ExecutionException ex) {\n                     LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);\n                 }\n-                LayersViewController.getDefault().updateQueriesFuture(GraphManager.getDefault().getActiveGraph());\n+                LayersViewController.getDefault().updateQueriesFuture(currentGraph);\n                 break;\n             case \"CA-1\":\n-                triggerLayerSelection(1);\n+                triggerLayerSelection(currentGraph, 1);\n                 break;\n             case \"CA-2\":\n-                triggerLayerSelection(2);\n+                triggerLayerSelection(currentGraph, 2);\n                 break;\n             case \"CA-3\":\n-                triggerLayerSelection(3);\n+                triggerLayerSelection(currentGraph, 3);\n                 break;\n             case \"CA-4\":\n-                triggerLayerSelection(4);\n+                triggerLayerSelection(currentGraph, 4);\n                 break;\n             case \"CA-5\":\n-                triggerLayerSelection(5);\n+                triggerLayerSelection(currentGraph, 5);\n                 break;\n             case \"CA-6\":\n-                triggerLayerSelection(6);\n+                triggerLayerSelection(currentGraph, 6);\n                 break;\n             case \"CA-7\":\n-                triggerLayerSelection(7);\n+                triggerLayerSelection(currentGraph, 7);\n                 break;\n             case \"CA-8\":\n-                triggerLayerSelection(8);\n+                triggerLayerSelection(currentGraph, 8);\n                 break;\n             case \"CA-9\":\n-                triggerLayerSelection(9);\n+                triggerLayerSelection(currentGraph, 9);\n                 break;\n             default:\n                 break;\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "ebf649929bdc74360ba1c6537b4a2c8b6c9a571b", "message": "Merge commit", "committedDate": null}, {"oid": "ae231a9adf0aacf8bfb6848f6d457013e6abe1f8", "committedDate": "2021-04-23 14:25:48 +1000", "message": "Update copyright to 2021 (#1017)"}, {"oid": "ce1164d24edeb0ed99c6cffa3cf795e0235c7194", "committedDate": "2021-06-21 12:41:08 +1000", "message": "\ud83d\udc1b Layers view null pointer fix (#1113)"}, {"oid": "7084761b8255a373ed8d23f9fd46b5971cc7f715", "committedDate": "2021-08-22 15:00:09 +1000", "message": ":art: Code formatting"}, {"oid": "4bed6df148d9d31f62906d6d8be6fcaf66fc3121", "committedDate": "2021-10-06 15:18:04 +1100", "message": "Error Handling UX Improvements (#1457)"}, {"oid": "a3a837c2bf82740d907d113f8dfeebe8af8c1ec2", "committedDate": "2021-11-04 11:44:31 +1100", "message": "Fixing active graph calls (#1524)"}, {"oid": "d7a663502bd760466f86320887ade0e95ac520ec", "committedDate": "2021-11-25 14:25:59 +1100", "message": "Sonar Code Smells Cleanup (#1568)"}, {"oid": "3a375e2669e31515f8ff1c3c615d71e6780ef1be", "committedDate": "2022-08-15 08:47:44 +1000", "message": "Layers UI Rework (#1690)"}]}, {"oid": "1661c58542265d76f52e362009b73a88af7c5728", "url": "https://github.com/constellation-app/constellation/commit/1661c58542265d76f52e362009b73a88af7c5728", "message": "peer review final fixes", "committedDate": "2020-12-11T05:25:03Z", "type": "commit"}, {"oid": "1d01b1dd830abf81fbe58ded86530dcd12bcd6db", "url": "https://github.com/constellation-app/constellation/commit/1d01b1dd830abf81fbe58ded86530dcd12bcd6db", "message": "add comments explaining String constructor call", "committedDate": "2020-12-13T23:29:57Z", "type": "commit"}]}