{"pr_number": 6639, "pr_title": "#6566 refactoring and improvements", "pr_author": "metas-rc", "pr_createdAt": "2020-05-12T17:48:52Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6639", "timeline": [{"oid": "4404cbcf60557136271343afded929f63e0a65cd", "url": "https://github.com/metasfresh/metasfresh/commit/4404cbcf60557136271343afded929f63e0a65cd", "message": "#6566 refactoring and improvements\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-12T17:29:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTcyOA==", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175728", "body": "now i'm wondering, what about e.g. in-progress terms. i think you need to filter only for completed and closed ones", "bodyText": "now i'm wondering, what about e.g. in-progress terms. i think you need to filter only for completed and closed ones", "bodyHTML": "<p dir=\"auto\">now i'm wondering, what about e.g. in-progress terms. i think you need to filter only for completed and closed ones</p>", "author": "metas-ts", "createdAt": "2020-05-13T05:10:06Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n+\t{\n+\t\tIQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t\tfinal IQuery<I_C_Flatrate_Term> contractsFilter = queryBL.createQueryBuilder(I_C_Flatrate_Term.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()", "originalCommit": "4404cbcf60557136271343afded929f63e0a65cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNTY0MA==", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424225640", "bodyText": "Right. Done.", "author": "metas-rc", "createdAt": "2020-05-13T07:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg==", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175806", "body": "```suggestion\r\n\tpublic ImmutableSet<BPartnerId> retrieveIdsOfPartnerWithContracts()\r\n```\r\n\r\n* include the \"Ids\" in the name\r\n* in other mf places, \"All\" implies also inactive, which is not the case here", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n          \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveIdsOfPartnerWithContracts()\n          \n      \n    \n    \n  \n\n\ninclude the \"Ids\" in the name\nin other mf places, \"All\" implies also inactive, which is not the case here", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">public</span> <span class=\"pl-k\">ImmutableSet&lt;<span class=\"pl-smi\">BPartnerId</span>&gt;</span> <span class=\"x x-first x-last\">retrieveAllPartnersWithContracts</span>()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">public</span> <span class=\"pl-k\">ImmutableSet&lt;<span class=\"pl-smi\">BPartnerId</span>&gt;</span> <span class=\"x x-first x-last\">retrieveIdsOfPartnerWithContracts</span>()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<ul dir=\"auto\">\n<li>include the \"Ids\" in the name</li>\n<li>in other mf places, \"All\" implies also inactive, which is not the case here</li>\n</ul>", "author": "metas-ts", "createdAt": "2020-05-13T05:10:23Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "originalCommit": "4404cbcf60557136271343afded929f63e0a65cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NjY5Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424176697", "bodyText": "There might be 500k bpartners; please return an iterator\n(not sure if i approved the set in a previous PR, but i think it's wrong and we have IQuery.iterateIds(...))", "author": "metas-ts", "createdAt": "2020-05-13T05:13:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyODg4Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424228887", "bodyText": "Agree. Making it an iterator.", "author": "metas-rc", "createdAt": "2020-05-13T07:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg=="}], "type": "inlineReview"}, {"oid": "d86541a62c6b94d109b660342b6e282bacf2947e", "url": "https://github.com/metasfresh/metasfresh/commit/d86541a62c6b94d109b660342b6e282bacf2947e", "message": "Merge branch 'yeast_overgrowth' into gh6566_6", "committedDate": "2020-05-13T06:55:50Z", "type": "commit"}, {"oid": "01e99316f96a4cb0d22c8f8bad269472958882d8", "url": "https://github.com/metasfresh/metasfresh/commit/01e99316f96a4cb0d22c8f8bad269472958882d8", "message": "#6566 improvements\n\n* use iterator when retrieving partners;\n* only retrieve completed or closed contracts\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-13T07:43:30Z", "type": "commit"}, {"oid": "ac61f73b25c8e7b7ac82d9ae630fb2991a29fc3b", "url": "https://github.com/metasfresh/metasfresh/commit/ac61f73b25c8e7b7ac82d9ae630fb2991a29fc3b", "message": "Merge branch 'gh6566_6' of https://github.com/metasfresh/metasfresh into gh6566_6", "committedDate": "2020-05-13T07:43:36Z", "type": "commit"}]}