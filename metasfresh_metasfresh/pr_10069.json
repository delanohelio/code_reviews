{"pr_number": 10069, "pr_title": "attribute matching fix", "pr_author": "pvpurcarcosmin", "pr_createdAt": "2020-10-06T13:57:44Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10069", "timeline": [{"oid": "8da0fc238fa9634e32fa152e94ce8f1e86261d96", "url": "https://github.com/metasfresh/metasfresh/commit/8da0fc238fa9634e32fa152e94ce8f1e86261d96", "message": "attribute matching fix\nrefs: https://github.com/metasfresh/metasfresh/issues/10068", "committedDate": "2020-10-06T13:55:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MzYxMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10069#discussion_r500383611", "body": "```suggestion\r\n\t\t// note that we might select more quantities than we actually wanted (bc of the way we match attributes in the query using LIKE)\r\n\t\t// for that reason, we need to be lenient in case not all quantities can be added to a bucked\r\n\t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));\n          \n          \n            \n            \t\t// note that we might select more quantities than we actually wanted (bc of the way we match attributes in the query using LIKE)\n          \n          \n            \n            \t\t// for that reason, we need to be lenient in case not all quantities can be added to a bucked\n          \n          \n            \n            \t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"x x-first\">buckets</span><span class=\"pl-k x\">.</span><span class=\"x\">forEach(bucket </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> bucket</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">addQtyToAllMatchingGroups(request));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> note that we might select more quantities than we actually wanted (bc of the way we match attributes in the query using LIKE)</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"109\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> for that reason, we need to be lenient in case not all quantities can be added to a bucked</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\tbuckets<span class=\"pl-k\">.</span>forEach(bucket <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> bucket<span class=\"pl-k\">.</span>addQtyToAllMatchingGroups(request));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "metas-ts", "createdAt": "2020-10-06T15:21:23Z", "path": "backend/de.metas.material/dispo-commons/src/main/java/de/metas/material/dispo/commons/repository/atp/AvailableToPromiseResultBuilder.java", "diffHunk": "@@ -105,24 +103,7 @@ public AvailableToPromiseResult build()\n \n \tpublic void addQtyToAllMatchingGroups(@NonNull final AddToResultGroupRequest request)\n \t{\n-\t\tboolean addedToAtLeastOneGroup = false;\n-\t\tfor (final AvailableToPromiseResultBucket bucket : buckets)\n-\t\t{\n-\t\t\tif (bucket.addQtyToAllMatchingGroups(request))\n-\t\t\t{\n-\t\t\t\taddedToAtLeastOneGroup = true;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (!addedToAtLeastOneGroup)\n-\t\t{\n-\t\t\tthrow new AdempiereException(\"No matching group found for AddToResultGroupRequest\")\n-\t\t\t\t\t.appendParametersToMessage()\n-\t\t\t\t\t.setParameter(\"request\", request)\n-\t\t\t\t\t.setParameter(\"buckets\", buckets)\n-\t\t\t\t\t.setParameter(\"this\", this);\n-\t\t}\n-\n+\t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));", "originalCommit": "8da0fc238fa9634e32fa152e94ce8f1e86261d96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "03b25df4541930417e3a1fda552a5ef9eba80443", "url": "https://github.com/metasfresh/metasfresh/commit/03b25df4541930417e3a1fda552a5ef9eba80443", "message": "Update backend/de.metas.material/dispo-commons/src/main/java/de/metas/material/dispo/commons/repository/atp/AvailableToPromiseResultBuilder.java\r\n\r\n#10068", "committedDate": "2020-10-06T15:22:19Z", "type": "commit"}]}