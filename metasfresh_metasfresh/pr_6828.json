{"pr_number": 6828, "pr_title": "Extend Invoice reversal API to return affected ICs", "pr_author": "pvpurcarcosmin", "pr_createdAt": "2020-06-11T15:40:25Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6828", "timeline": [{"oid": "33ed08604311dea0994a05fc18dcaca20dcbfe93", "url": "https://github.com/metasfresh/metasfresh/commit/33ed08604311dea0994a05fc18dcaca20dcbfe93", "message": "Extend Invoice reversal API to return affected ICs\nhttps://github.com/metasfresh/metasfresh/issues/6827", "committedDate": "2020-06-11T15:38:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NDc3Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6828#discussion_r439244773", "body": "```suggestion\r\n\tList<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull InvoiceId invoiceId);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tList<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull final InvoiceId invoiceId);\n          \n          \n            \n            \tList<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull InvoiceId invoiceId);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">I_C_Invoice_Candidate</span>&gt;</span> retrieveInvoiceCandidates(<span class=\"pl-k\">@NonNull</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">InvoiceId</span> invoiceId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">I_C_Invoice_Candidate</span>&gt;</span> retrieveInvoiceCandidates(<span class=\"pl-k\">@NonNull</span> <span class=\"pl-smi\">InvoiceId</span> invoiceId);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "metas-ts", "createdAt": "2020-06-12T07:06:16Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/IInvoiceCandDAO.java", "diffHunk": "@@ -85,6 +85,8 @@\n \n \tList<I_C_Invoice_Candidate> retrieveIcForIl(I_C_InvoiceLine invoiceLine);\n \n+\tList<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull final InvoiceId invoiceId);", "originalCommit": "33ed08604311dea0994a05fc18dcaca20dcbfe93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3MzgxMA==", "url": "https://github.com/metasfresh/metasfresh/pull/6828#discussion_r439273810", "body": "```suggestion\r\n\t\tfinal IQuery<I_C_Invoice_Line_Alloc> invoiceLineAllocQuery =\r\n\t\t\t\tqueryBL.createQueryBuilder(I_C_InvoiceLine.class, invoice)\r\n\t\t\t\t\t\t.addEqualsFilter(I_C_InvoiceLine.COLUMNNAME_C_Invoice_ID, invoiceId)\r\n```\r\n\r\n* the equals filter can handle `RepoIdAware`s\r\n* we don't need to pass the invoice a context provider; the query-builder can get the thread-local current transaction or create a \"local\" one on the fly", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal I_C_Invoice invoice = load(invoiceId, I_C_Invoice.class);\n          \n          \n            \n            \n          \n          \n            \n            \t\tfinal IQuery<I_C_Invoice_Line_Alloc> invoiceLineAllocQuery =\n          \n          \n            \n            \t\t\t\tqueryBL.createQueryBuilder(I_C_InvoiceLine.class, invoice)\n          \n          \n            \n            \t\t\t\t\t\t.addEqualsFilter(I_C_InvoiceLine.COLUMNNAME_C_Invoice_ID, invoice.getC_Invoice_ID())\n          \n          \n            \n            \t\tfinal IQuery<I_C_Invoice_Line_Alloc> invoiceLineAllocQuery =\n          \n          \n            \n            \t\t\t\tqueryBL.createQueryBuilder(I_C_InvoiceLine.class, invoice)\n          \n          \n            \n            \t\t\t\t\t\t.addEqualsFilter(I_C_InvoiceLine.COLUMNNAME_C_Invoice_ID, invoiceId)\n          \n      \n    \n    \n  \n\n\nthe equals filter can handle RepoIdAwares\nwe don't need to pass the invoice a context provider; the query-builder can get the thread-local current transaction or create a \"local\" one on the fly", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">I_C_Invoice</span> invoice <span class=\"pl-k\">=</span> load(invoiceId, <span class=\"pl-smi\">I_C_Invoice</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-k\">IQuery&lt;<span class=\"pl-smi\">I_C_Invoice_Line_Alloc</span>&gt;</span> invoiceLineAllocQuery <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\tqueryBL<span class=\"pl-k\">.</span>createQueryBuilder(<span class=\"pl-smi\">I_C_InvoiceLine</span><span class=\"pl-k\">.</span>class, invoice)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t\t.addEqualsFilter(<span class=\"pl-smi\">I_C_InvoiceLine</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">COLUMNNAME_C_Invoice_ID</span>, invoice<span class=\"pl-k\">.</span>getC_Invoice_ID())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-k\">IQuery&lt;<span class=\"pl-smi\">I_C_Invoice_Line_Alloc</span>&gt;</span> invoiceLineAllocQuery <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\tqueryBL<span class=\"pl-k\">.</span>createQueryBuilder(<span class=\"pl-smi\">I_C_InvoiceLine</span><span class=\"pl-k\">.</span>class, invoice)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t\t.addEqualsFilter(<span class=\"pl-smi\">I_C_InvoiceLine</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">COLUMNNAME_C_Invoice_ID</span>, invoiceId)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<ul dir=\"auto\">\n<li>the equals filter can handle <code>RepoIdAware</code>s</li>\n<li>we don't need to pass the invoice a context provider; the query-builder can get the thread-local current transaction or create a \"local\" one on the fly</li>\n</ul>", "author": "metas-ts", "createdAt": "2020-06-12T08:12:47Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandDAO.java", "diffHunk": "@@ -573,6 +572,30 @@ public boolean isAvoidRecreate(final I_C_Invoice_Candidate ic)\n \t\t\t\t.addColumn(I_C_Invoice_Candidate.COLUMN_C_Invoice_Candidate_ID);\n \n \t\treturn icQueryBuilder\n+\t\t\t\t.create()\n+\t\t\t\t.list();//\n+\t}\n+\n+\t@NonNull\n+\tpublic List<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull final InvoiceId invoiceId)\n+\t{\n+\t\tfinal I_C_Invoice invoice = load(invoiceId, I_C_Invoice.class);\n+\n+\t\tfinal IQuery<I_C_Invoice_Line_Alloc> invoiceLineAllocQuery =\n+\t\t\t\tqueryBL.createQueryBuilder(I_C_InvoiceLine.class, invoice)\n+\t\t\t\t\t\t.addEqualsFilter(I_C_InvoiceLine.COLUMNNAME_C_Invoice_ID, invoice.getC_Invoice_ID())", "originalCommit": "33ed08604311dea0994a05fc18dcaca20dcbfe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3OTcyMw==", "url": "https://github.com/metasfresh/metasfresh/pull/6828#discussion_r439279723", "bodyText": "I'll drop the loading of the invoice then, thx!", "author": "pvpurcarcosmin", "createdAt": "2020-06-12T08:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3MzgxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3NDQ3NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6828#discussion_r439274475", "body": "it's OK like this but you *might* (didn't check) also use `andCollect` to get from `I_C_Invoice_Line_Alloc` to `I_C_Invoice_Candidate`\r\nfor next time maybe..", "bodyText": "it's OK like this but you might (didn't check) also use andCollect to get from I_C_Invoice_Line_Alloc to I_C_Invoice_Candidate\nfor next time maybe..", "bodyHTML": "<p dir=\"auto\">it's OK like this but you <em>might</em> (didn't check) also use <code>andCollect</code> to get from <code>I_C_Invoice_Line_Alloc</code> to <code>I_C_Invoice_Candidate</code><br>\nfor next time maybe..</p>", "author": "metas-ts", "createdAt": "2020-06-12T08:14:12Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandDAO.java", "diffHunk": "@@ -573,6 +572,30 @@ public boolean isAvoidRecreate(final I_C_Invoice_Candidate ic)\n \t\t\t\t.addColumn(I_C_Invoice_Candidate.COLUMN_C_Invoice_Candidate_ID);\n \n \t\treturn icQueryBuilder\n+\t\t\t\t.create()\n+\t\t\t\t.list();//\n+\t}\n+\n+\t@NonNull\n+\tpublic List<I_C_Invoice_Candidate> retrieveInvoiceCandidates(@NonNull final InvoiceId invoiceId)\n+\t{\n+\t\tfinal I_C_Invoice invoice = load(invoiceId, I_C_Invoice.class);\n+\n+\t\tfinal IQuery<I_C_Invoice_Line_Alloc> invoiceLineAllocQuery =\n+\t\t\t\tqueryBL.createQueryBuilder(I_C_InvoiceLine.class, invoice)\n+\t\t\t\t\t\t.addEqualsFilter(I_C_InvoiceLine.COLUMNNAME_C_Invoice_ID, invoice.getC_Invoice_ID())\n+\t\t\t\t\t\t//collect invoice line alloc\n+\t\t\t\t\t\t.andCollectChildren(I_C_Invoice_Line_Alloc.COLUMN_C_InvoiceLine_ID)\n+\t\t\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t\t\t.create();", "originalCommit": "33ed08604311dea0994a05fc18dcaca20dcbfe93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3OTM5OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6828#discussion_r439279398", "bodyText": "Oh, just checked the method, that's pretty cool, I'll give it a try. thx!", "author": "pvpurcarcosmin", "createdAt": "2020-06-12T08:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3NDQ3NQ=="}], "type": "inlineReview"}, {"oid": "2cdfd09f3ceb3acf317b7a298bc3fb5ade3cad11", "url": "https://github.com/metasfresh/metasfresh/commit/2cdfd09f3ceb3acf317b7a298bc3fb5ade3cad11", "message": "req changes\nhttps://github.com/metasfresh/metasfresh/issues/6827", "committedDate": "2020-06-12T09:53:34Z", "type": "commit"}]}