{"pr_number": 7181, "pr_title": "Supplement C_OLCand.M_Product_ID from  M_HU_PI_Item_Product_ID if need", "pr_author": "metas-ts", "pr_createdAt": "2020-08-24T09:31:27Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7181", "timeline": [{"oid": "a16999b734af37f265c0e19f8376d56ffd17c480", "url": "https://github.com/metasfresh/metasfresh/commit/a16999b734af37f265c0e19f8376d56ffd17c480", "message": "Supplement C_OLCand.M_Product_ID from  M_HU_PI_Item_Product_ID if need\n\nhttps://github.com/metasfresh/metasfresh/issues/7085", "committedDate": "2020-08-24T09:11:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2NzU2Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/7181#discussion_r475467562", "body": "```suggestion\r\n\t\t\t\tLoggables.withLogger(logger, Level.DEBUG).addLog(\"Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID={}\", huPIItemProduct.getM_Product_ID(), huPIItemProduct.getM_HU_PI_Item_Product_ID());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tLoggables.withLogger(logger, Level.DEBUG).addLog(\"Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID=\", huPIItemProduct.getM_Product_ID(), huPIItemProduct.getM_HU_PI_Item_Product_ID());\n          \n          \n            \n            \t\t\t\tLoggables.withLogger(logger, Level.DEBUG).addLog(\"Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID={}\", huPIItemProduct.getM_Product_ID(), huPIItemProduct.getM_HU_PI_Item_Product_ID());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Loggables</span><span class=\"pl-k\">.</span>withLogger(logger, <span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEBUG</span>)<span class=\"pl-k\">.</span>addLog(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID=<span class=\"pl-pds\">\"</span></span>, huPIItemProduct<span class=\"pl-k\">.</span>getM_Product_ID(), huPIItemProduct<span class=\"pl-k\">.</span>getM_HU_PI_Item_Product_ID());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-smi\">Loggables</span><span class=\"pl-k\">.</span>withLogger(logger, <span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEBUG</span>)<span class=\"pl-k\">.</span>addLog(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID=<span class=\"x x-first x-last\">{}</span><span class=\"pl-pds\">\"</span></span>, huPIItemProduct<span class=\"pl-k\">.</span>getM_Product_ID(), huPIItemProduct<span class=\"pl-k\">.</span>getM_HU_PI_Item_Product_ID());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "metas-ts", "createdAt": "2020-08-24T09:32:28Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ordercandidate/spi/impl/OLCandProductFromPIIPvalidator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * de.metas.handlingunits.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.handlingunits.ordercandidate.spi.impl;\n+\n+import ch.qos.logback.classic.Level;\n+import de.metas.handlingunits.model.I_M_HU_PI_Item_Product;\n+import de.metas.logging.LogManager;\n+import de.metas.ordercandidate.api.IOLCandEffectiveValuesBL;\n+import de.metas.ordercandidate.model.I_C_OLCand;\n+import de.metas.ordercandidate.spi.IOLCandValidator;\n+import de.metas.product.ProductId;\n+import de.metas.util.Loggables;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.slf4j.Logger;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class OLCandProductFromPIIPvalidator implements IOLCandValidator\n+{\n+\tprivate final static transient Logger logger = LogManager.getLogger(OLCandProductFromPIIPvalidator.class);\n+\n+\tprivate final IOLCandEffectiveValuesBL olCandEffectiveValuesBL = Services.get(IOLCandEffectiveValuesBL.class);\n+\n+\t@Override\n+\tpublic int getSeqNo()\n+\t{\n+\t\treturn 10;\n+\t}\n+\n+\t@Override\n+\tpublic void validate(@NonNull final I_C_OLCand olCand)\n+\t{\n+\t\tfinal ProductId productId = olCandEffectiveValuesBL.getM_Product_Effective_ID(olCand);\n+\n+\t\tfinal I_M_HU_PI_Item_Product huPIItemProduct = OLCandPIIPUtil.extractHUPIItemProductOrNull(olCand);\n+\t\tif (huPIItemProduct != null)\n+\t\t{\n+\t\t\tif (productId == null)\n+\t\t\t{\n+\t\t\t\tLoggables.withLogger(logger, Level.DEBUG).addLog(\"Supplement missing C_OLCand.M_Product_ID = {} from M_HU_PI_Item_Product_ID=\", huPIItemProduct.getM_Product_ID(), huPIItemProduct.getM_HU_PI_Item_Product_ID());", "originalCommit": "a16999b734af37f265c0e19f8376d56ffd17c480", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "312f49da0f62be83ea6162580eaa3a91f20ede57", "url": "https://github.com/metasfresh/metasfresh/commit/312f49da0f62be83ea6162580eaa3a91f20ede57", "message": "Update backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ordercandidate/spi/impl/OLCandProductFromPIIPvalidator.java\r\n\r\n#7085", "committedDate": "2020-08-24T09:33:56Z", "type": "commit"}]}