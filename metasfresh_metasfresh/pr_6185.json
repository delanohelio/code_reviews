{"pr_number": 6185, "pr_title": "Not-Stocked products not invoicable unless InvoiceRule is immediate", "pr_author": "metas-ts", "pr_createdAt": "2020-02-13T17:18:08Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6185", "timeline": [{"oid": "46d81e57574bbb68955f14ac4c66fedb9f49c442", "url": "https://github.com/metasfresh/metasfresh/commit/46d81e57574bbb68955f14ac4c66fedb9f49c442", "message": "Not-Stocked products not invoicable unless InvoiceRule is immediate\n\n* take the product more into account; if it's *not* stocked, then go with the ordered quantity\n* also\n  * fix a bunch of tests that failed now that IsStocked is a thing\n  * introduce ProductType enum and clean up IProductBL accordingly\n  * do more logging\n#6184", "committedDate": "2020-02-13T17:17:46Z", "type": "commit"}, {"oid": "8970eaf32338886c02c57a626831467b0d40c8f2", "url": "https://github.com/metasfresh/metasfresh/commit/8970eaf32338886c02c57a626831467b0d40c8f2", "message": "Not-Item products not invoicable unless InvoiceRule is immediate\n\n* fix unit tests\n* additional minor improvements\n#6184", "committedDate": "2020-02-14T17:13:11Z", "type": "commit"}, {"oid": "291121cc5528f3aa40cb174af8f9e3c6f40d27a9", "url": "https://github.com/metasfresh/metasfresh/commit/291121cc5528f3aa40cb174af8f9e3c6f40d27a9", "message": "Not-Item products not invoicable unless InvoiceRule is immediate\n\n* add unit tests\n#6184", "committedDate": "2020-02-14T17:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NTk2OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6185#discussion_r380145968", "body": "```suggestion\r\n\t\t\t\t\tlogger.debug(\"C_OrderLine has M_Product_ID={} which is not a (physical) item -> consider fully delivered\",\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tlogger.debug(\"C_OrderLine has M_Product_ID={} with is not a (physical) item -> consider fully delivered\",\n          \n          \n            \n            \t\t\t\t\tlogger.debug(\"C_OrderLine has M_Product_ID={} which is not a (physical) item -> consider fully delivered\",", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\tlogger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C_OrderLine has M_Product_ID={} <span class=\"x x-first x-last\">with</span> is not a (physical) item -&gt; consider fully delivered<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\tlogger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C_OrderLine has M_Product_ID={} <span class=\"x x-first x-last\">which</span> is not a (physical) item -&gt; consider fully delivered<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "metas-ts", "createdAt": "2020-02-17T12:10:10Z", "path": "de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/internalbusinesslogic/OrderedDataLoader.java", "diffHunk": "@@ -76,24 +89,40 @@ private boolean isOrderFullyDelivered()\n \t{\n \t\tif (invoiceCandidateRecord.getC_Order_ID() <= 0)\n \t\t{\n+\t\t\tlogger.debug(\"C_Order_ID={}; -> return false\");\n \t\t\treturn false;\n \t\t}\n \t\tfinal IOrderDAO orderDAO = Services.get(IOrderDAO.class);\n \n \t\tfor (final I_C_OrderLine oLine : orderDAO.retrieveOrderLines(invoiceCandidateRecord.getC_Order()))\n \t\t{\n-\t\t\tfinal BigDecimal toInvoice = oLine.getQtyOrdered().subtract(oLine.getQtyInvoiced());\n-\t\t\tif (toInvoice.signum() == 0 && oLine.getM_Product_ID() > 0)\n+\t\t\ttry (final MDCCloseable oLineMDC = TableRecordMDC.putTableRecordReference(oLine))\n \t\t\t{\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\t\t\t//\n-\t\t\tfinal boolean fullyDelivered = oLine.getQtyOrdered().compareTo(oLine.getQtyDelivered()) == 0;\n-\t\t\tif (!fullyDelivered)\n-\t\t\t{\n-\t\t\t\treturn false;\n+\t\t\t\tfinal BigDecimal toInvoice = oLine.getQtyOrdered().subtract(oLine.getQtyInvoiced());\n+\t\t\t\tif (toInvoice.signum() == 0 && oLine.getM_Product_ID() > 0)\n+\t\t\t\t{\n+\t\t\t\t\tlogger.debug(\"C_OrderLine has QtyOrdered={}, QtyInvoiced={}, M_Product_ID={} and remaining qty to invoice={} -> consider fully delivered\",\n+\t\t\t\t\t\t\toLine.getQtyOrdered(), oLine.getQtyInvoiced(), oLine.getM_Product_ID(), toInvoice);\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tfinal ProductId olProductId = ProductId.ofRepoIdOrNull(oLine.getM_Product_ID()); // in the DB it's mandatory, but in many unit tests it's not relevant and not set\n+\t\t\t\tif (!productBL.isStocked(olProductId))\n+\t\t\t\t{\n+\t\t\t\t\tlogger.debug(\"C_OrderLine has M_Product_ID={} with is not a (physical) item -> consider fully delivered\",", "originalCommit": "291121cc5528f3aa40cb174af8f9e3c6f40d27a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0c7dd21d972d22af446b445fc8a88002da9d6e5", "url": "https://github.com/metasfresh/metasfresh/commit/d0c7dd21d972d22af446b445fc8a88002da9d6e5", "message": "Update de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/internalbusinesslogic/OrderedDataLoader.java\r\n\r\n#6184", "committedDate": "2020-02-17T12:13:13Z", "type": "commit"}]}