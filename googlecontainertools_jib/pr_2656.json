{"pr_number": 2656, "pr_title": "Adding functionality to push base image layers and push container config to the registry", "pr_author": "louismurerwa", "pr_createdAt": "2020-08-03T21:28:09Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2656", "timeline": [{"oid": "b05b187896d883bb8942ba8f2d7cabab3a21ad96", "url": "https://github.com/GoogleContainerTools/jib/commit/b05b187896d883bb8942ba8f2d7cabab3a21ad96", "message": "Adding functionality to push base image layers and push container configurations", "committedDate": "2020-08-03T21:20:58Z", "type": "commit"}, {"oid": "8c0303dcda4ce8feacc07503878dbfa05c5bae1a", "url": "https://github.com/GoogleContainerTools/jib/commit/8c0303dcda4ce8feacc07503878dbfa05c5bae1a", "message": "Update build-plan CHANGELOG.md (#2654)\n\n* Update build-plan changelog\r\n\r\n* placing unreleased entries under version\r\n\r\n* moving recent change to unreleased\r\n\r\n* formatting change\r\n\r\n* formatting", "committedDate": "2020-08-04T19:04:22Z", "type": "commit"}, {"oid": "7424d86338d009850cf5e8691a9cdb180c7fe42a", "url": "https://github.com/GoogleContainerTools/jib/commit/7424d86338d009850cf5e8691a9cdb180c7fe42a", "message": "empty commit to trigger builds", "committedDate": "2020-08-04T19:04:22Z", "type": "commit"}, {"oid": "69eb5b584f3bbf5d45bdda07f657306fdb650f52", "url": "https://github.com/GoogleContainerTools/jib/commit/69eb5b584f3bbf5d45bdda07f657306fdb650f52", "message": "Merge remote-tracking branch 'origin' into pushbaseimages", "committedDate": "2020-08-04T19:05:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NDg1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r464694857", "body": "Should this also be a map, so that we can work on the per-image basis (for example, start pushing one image while pushing base image layers are pending for other images)?", "bodyText": "Should this also be a map, so that we can work on the per-image basis (for example, start pushing one image while pushing base image layers are pending for other images)?", "bodyHTML": "<p dir=\"auto\">Should this also be a map, so that we can work on the per-image basis (for example, start pushing one image while pushing base image layers are pending for other images)?</p>", "author": "chanseokoh", "createdAt": "2020-08-03T22:28:06Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -332,17 +333,21 @@ private void pushBaseImageLayers() {\n \n     results.baseImageLayerPushResults =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    PushLayerStep.makeList(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        Verify.verifyNotNull(\n-                            results\n-                                .baseImagesAndLayers\n-                                .get()\n-                                .get(results.baseImagesAndRegistryClient.get().images.get(0))))));\n+            () -> {\n+              List<List<Future<BlobDescriptor>>> baseImageLayerPushResults = new ArrayList<>();\n+              for (List<Future<PreparedLayer>> baseImageLayers :\n+                  results.baseImagesAndLayers.get().values()) {\n+                List<Future<BlobDescriptor>> baseImageLayerPushResult =\n+                    scheduleCallables(\n+                        PushLayerStep.makeList(\n+                            buildContext,\n+                            childProgressDispatcherFactory,\n+                            results.targetRegistryClient.get(),\n+                            Verify.verifyNotNull(baseImageLayers)));\n+                baseImageLayerPushResults.add(baseImageLayerPushResult);\n+              }\n+              return baseImageLayerPushResults;", "originalCommit": "b05b187896d883bb8942ba8f2d7cabab3a21ad96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3MDQyMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465270423", "bodyText": "Good Point .I was thinking of changing it to a map at a later stage when we start pushing the images.Right now I was planing on keeping it as a list so as to make line 457 easier to integrate at this stage.", "author": "louismurerwa", "createdAt": "2020-08-04T19:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NDg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465275096", "body": "Let's rename this to `builtImagesAndContainerConfigurationPushResults`.\r\n\r\nUsing a `Map` is convenient, but compared to using a dedicated class, it's difficult to know what the keys and the values mean and what is the relation between them without documentation or descriptive naming. For a short time, I had to go over the code to see if `Image` in the map is a base image or a built image. We may keep the current name, but in that case, we should add a clear Javadoc to the field.", "bodyText": "Let's rename this to builtImagesAndContainerConfigurationPushResults.\nUsing a Map is convenient, but compared to using a dedicated class, it's difficult to know what the keys and the values mean and what is the relation between them without documentation or descriptive naming. For a short time, I had to go over the code to see if Image in the map is a base image or a built image. We may keep the current name, but in that case, we should add a clear Javadoc to the field.", "bodyHTML": "<p dir=\"auto\">Let's rename this to <code>builtImagesAndContainerConfigurationPushResults</code>.</p>\n<p dir=\"auto\">Using a <code>Map</code> is convenient, but compared to using a dedicated class, it's difficult to know what the keys and the values mean and what is the relation between them without documentation or descriptive naming. For a short time, I had to go over the code to see if <code>Image</code> in the map is a base image or a built image. We may keep the current name, but in that case, we should add a clear Javadoc to the field.</p>", "author": "chanseokoh", "createdAt": "2020-08-04T19:21:51Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.containerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =", "originalCommit": "69eb5b584f3bbf5d45bdda07f657306fdb650f52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5NDUzMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465294532", "bodyText": "I think its a good idea change the name to builtImagesAndContainerConfigurationPushResults.", "author": "louismurerwa", "createdAt": "2020-08-04T19:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMTkyMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465331923", "bodyText": "As mentioned in the other comment, how about\nMap<Image, Future<BlobDescriptor>> pushResults =\n\n? (I think buildImage in for (Future<Image> builtImage : ...` is good though.)", "author": "chanseokoh", "createdAt": "2020-08-04T21:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng=="}], "type": "inlineReview"}, {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1", "url": "https://github.com/GoogleContainerTools/jib/commit/50640e4cb7c532c9211d603ea1550d253a1292d1", "message": "Changing variable names", "committedDate": "2020-08-04T20:03:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyOTk1Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465329953", "body": "In a local scope, I think we don't always have to be fully verbose. IMO, reasonable names help reducing cognitive load when reading code, especially in a local scope. So, I prefer\r\n```java\r\n              List<List<Future<BlobDescriptor>>>  pushResults = new ArrayList<>();\r\n              for (List<Future<PreparedLayer>> layers : results.baseImagesAndLayers.get().values()) {\r\n                List<Future<BlobDescriptor>> pushResult =\r\n```", "bodyText": "In a local scope, I think we don't always have to be fully verbose. IMO, reasonable names help reducing cognitive load when reading code, especially in a local scope. So, I prefer\n              List<List<Future<BlobDescriptor>>>  pushResults = new ArrayList<>();\n              for (List<Future<PreparedLayer>> layers : results.baseImagesAndLayers.get().values()) {\n                List<Future<BlobDescriptor>> pushResult =", "bodyHTML": "<p dir=\"auto\">In a local scope, I think we don't always have to be fully verbose. IMO, reasonable names help reducing cognitive load when reading code, especially in a local scope. So, I prefer</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"              List&lt;List&lt;Future&lt;BlobDescriptor&gt;&gt;&gt;  pushResults = new ArrayList&lt;&gt;();\n              for (List&lt;Future&lt;PreparedLayer&gt;&gt; layers : results.baseImagesAndLayers.get().values()) {\n                List&lt;Future&lt;BlobDescriptor&gt;&gt; pushResult =\"><pre>              <span class=\"pl-k\">List&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BlobDescriptor</span>&gt;</span>&gt;</span>&gt;</span>  pushResults <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();\n              <span class=\"pl-k\">for</span> (<span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">PreparedLayer</span>&gt;</span>&gt;</span> layers <span class=\"pl-k\">:</span> results<span class=\"pl-k\">.</span>baseImagesAndLayers<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>values()) {\n                <span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BlobDescriptor</span>&gt;</span>&gt;</span> pushResult <span class=\"pl-k\">=</span></pre></div>", "author": "chanseokoh", "createdAt": "2020-08-04T21:05:30Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -332,17 +333,21 @@ private void pushBaseImageLayers() {\n \n     results.baseImageLayerPushResults =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    PushLayerStep.makeList(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        Verify.verifyNotNull(\n-                            results\n-                                .baseImagesAndLayers\n-                                .get()\n-                                .get(results.baseImagesAndRegistryClient.get().images.get(0))))));\n+            () -> {\n+              List<List<Future<BlobDescriptor>>> baseImageLayerPushResults = new ArrayList<>();\n+              for (List<Future<PreparedLayer>> baseImageLayers :\n+                  results.baseImagesAndLayers.get().values()) {\n+                List<Future<BlobDescriptor>> baseImageLayerPushResult =", "originalCommit": "50640e4cb7c532c9211d603ea1550d253a1292d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465339927", "body": "So I realized a problem with this. `builtImage` in the loop is a `Future`, so calling `builtImage.get()` means blocking until the image is built. Rather, we don't want the loop to block. We may need to put a `Future<Image>` instead of `Image` as a key?", "bodyText": "So I realized a problem with this. builtImage in the loop is a Future, so calling builtImage.get() means blocking until the image is built. Rather, we don't want the loop to block. We may need to put a Future<Image> instead of Image as a key?", "bodyHTML": "<p dir=\"auto\">So I realized a problem with this. <code>builtImage</code> in the loop is a <code>Future</code>, so calling <code>builtImage.get()</code> means blocking until the image is built. Rather, we don't want the loop to block. We may need to put a <code>Future&lt;Image&gt;</code> instead of <code>Image</code> as a key?</p>", "author": "chanseokoh", "createdAt": "2020-08-04T21:26:42Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "originalCommit": "50640e4cb7c532c9211d603ea1550d253a1292d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3ODAzNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465378036", "bodyText": "An alternative is to make PushContainerConfigurationStep return Image and BlobDescriptor together, but I think that is more involved.", "author": "chanseokoh", "createdAt": "2020-08-04T23:04:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3MTk2MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465771961", "bodyText": "I see what you mean but since we have already called builtImage.get() in the same loop does it really slow down things if we call it again .Done.", "author": "louismurerwa", "createdAt": "2020-08-05T14:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3NDM4Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465774387", "bodyText": "Note we don't call buitlImage.get() inside the loop directly, but rather tell executorService to spawn a new thread to run the lambda which is supposed to call it later.", "author": "chanseokoh", "createdAt": "2020-08-05T14:36:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3NzgxMg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465777812", "bodyText": "Ohh I see the logic now", "author": "louismurerwa", "createdAt": "2020-08-05T14:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}], "type": "inlineReview"}, {"oid": "b043f8e52ca36a5312dc7a06ceb92ee85ebf116b", "url": "https://github.com/GoogleContainerTools/jib/commit/b043f8e52ca36a5312dc7a06ceb92ee85ebf116b", "message": "Style Fixes", "committedDate": "2020-08-05T15:32:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5MjI3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465892274", "body": "```suggestion\r\n              for (Future<Image> builtImage : results.builtImages.get()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          for (Future<Image> buildImage : results.builtImages.get()) {\n          \n          \n            \n                          for (Future<Image> builtImage : results.builtImages.get()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">for</span> (<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">Image</span>&gt;</span> <span class=\"x x-first x-last\">buildImage</span> <span class=\"pl-k\">:</span> results<span class=\"pl-k\">.</span>builtImages<span class=\"pl-k\">.</span>get()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">for</span> (<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">Image</span>&gt;</span> <span class=\"x x-first x-last\">builtImage</span> <span class=\"pl-k\">:</span> results<span class=\"pl-k\">.</span>builtImages<span class=\"pl-k\">.</span>get()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-05T17:35:36Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,24 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Future<Image>, Future<BlobDescriptor>> pushResults = new HashMap<>();\n+              for (Future<Image> buildImage : results.builtImages.get()) {", "originalCommit": "b043f8e52ca36a5312dc7a06ceb92ee85ebf116b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5MjU0MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465892541", "body": "```suggestion\r\n                Future<BlobDescriptor> configPushResult =\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Future<BlobDescriptor> containerConfigurationPushResult =\n          \n          \n            \n                            Future<BlobDescriptor> configPushResult =", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BlobDescriptor</span>&gt;</span> <span class=\"x x-first x-last\">containerConfigurationPushResult</span> <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BlobDescriptor</span>&gt;</span> <span class=\"x x-first x-last\">configPushResult</span> <span class=\"pl-k\">=</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-05T17:36:05Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,24 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Future<Image>, Future<BlobDescriptor>> pushResults = new HashMap<>();\n+              for (Future<Image> buildImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =", "originalCommit": "b043f8e52ca36a5312dc7a06ceb92ee85ebf116b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db04a9857491a3d74d7423a13268823177d36ec1", "url": "https://github.com/GoogleContainerTools/jib/commit/db04a9857491a3d74d7423a13268823177d36ec1", "message": "Fixing Styles", "committedDate": "2020-08-05T17:44:00Z", "type": "commit"}]}