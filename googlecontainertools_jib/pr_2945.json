{"pr_number": 2945, "pr_title": "Update jib-core default application cache dir", "pr_author": "loosebazooka", "pr_createdAt": "2020-12-15T19:41:05Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2945", "timeline": [{"oid": "93756a987483bf1316ca408058f8546c3e996b08", "url": "https://github.com/GoogleContainerTools/jib/commit/93756a987483bf1316ca408058f8546c3e996b08", "message": "Update jib-core default application cache dir\n\n- in <system-tmp>/jib-core-application-layer-cache\n- does not delete on exit (should help speed on rebuilds)\n- shared across all builds that do not specify a custom\n  application cache directory", "committedDate": "2020-12-15T19:34:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY0MTQ1MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543641450", "body": "Actually think I can clean up all this logic and just use Files.createDirectories ? Or just lets the cache writer handle this?", "bodyText": "Actually think I can clean up all this logic and just use Files.createDirectories ? Or just lets the cache writer handle this?", "bodyHTML": "<p dir=\"auto\">Actually think I can clean up all this logic and just use Files.createDirectories ? Or just lets the cache writer handle this?</p>", "author": "loosebazooka", "createdAt": "2020-12-15T19:51:37Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/Containerizer.java", "diffHunk": "@@ -312,11 +318,27 @@ Path getBaseImageLayersCacheDirectory() {\n   }\n \n   Path getApplicationLayersCacheDirectory() throws CacheDirectoryCreationException {\n+    return getApplicationLayersCacheDirectory(\n+        () -> Paths.get(System.getProperty(\"java.io.tmpdir\")));\n+  }\n+\n+  @VisibleForTesting\n+  Path getApplicationLayersCacheDirectory(Supplier<Path> tmpDirSupplier)\n+      throws CacheDirectoryCreationException {\n     if (applicationLayersCacheDirectory == null) {\n-      // Uses a temporary directory if application layers cache directory is not set.\n+      // Create a directory in temp if application layers cache directory is not set.\n       try {\n-        applicationLayersCacheDirectory = Files.createTempDirectory(null);\n-        applicationLayersCacheDirectory.toFile().deleteOnExit();\n+        Path systemTmp = tmpDirSupplier.get();\n+        Path jibTempCache = systemTmp.resolve(DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);\n+        if (Files.exists(jibTempCache)) {\n+          if (!Files.isDirectory(jibTempCache)) {\n+            throw new CacheDirectoryCreationException(\n+                jibTempCache.toString() + \" already exists and is not a directory\");\n+          }\n+        } else {\n+          Files.createDirectory(jibTempCache);", "originalCommit": "93756a987483bf1316ca408058f8546c3e996b08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "87bd63a2aa8cd01a886417b5e154926af9a0b58e", "url": "https://github.com/GoogleContainerTools/jib/commit/87bd63a2aa8cd01a886417b5e154926af9a0b58e", "message": "Simplify everything", "committedDate": "2020-12-15T20:10:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjIwMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543656200", "body": "`final`", "bodyText": "final", "bodyHTML": "<p dir=\"auto\"><code>final</code></p>", "author": "chanseokoh", "createdAt": "2020-12-15T20:15:13Z", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "diffHunk": "@@ -19,16 +19,23 @@\n import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.util.concurrent.MoreExecutors;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.Arrays;\n import java.util.concurrent.ExecutorService;\n import org.junit.Assert;\n+import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n import org.mockito.Mockito;\n \n /** Tests for {@link Containerizer}. */\n public class ContainerizerTest {\n \n+  @Rule public TemporaryFolder temporaryFolder = new TemporaryFolder();", "originalCommit": "87bd63a2aa8cd01a886417b5e154926af9a0b58e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjkzMw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543656933", "body": "How about verifying the name in the test?\r\n```suggestion\r\n            .resolve(\"jib-core-application-layers-cache\");\r\n```", "bodyText": "How about verifying the name in the test?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .resolve(Containerizer.DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);\n          \n          \n            \n                        .resolve(\"jib-core-application-layers-cache\");", "bodyHTML": "<p dir=\"auto\">How about verifying the name in the test?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .resolve(<span class=\"pl-smi x x-first\">Containerizer</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .resolve(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">jib-core-application-layers-cache</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-12-15T20:16:33Z", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "diffHunk": "@@ -121,4 +128,15 @@ public void testGetImageConfiguration_tarImage() throws InvalidImageReferenceExc\n     Assert.assertEquals(\"tar/image\", imageConfiguration.getImage().toString());\n     Assert.assertEquals(0, imageConfiguration.getCredentialRetrievers().size());\n   }\n+\n+  @Test\n+  public void testGetApplicationLayersCacheDirectory_defaults()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, IOException {\n+    Containerizer containerizer = Containerizer.to(RegistryImage.named(\"registry/image\"));\n+    Path applicationLayersCache = containerizer.getApplicationLayersCacheDirectory();\n+    Path expectedCacheDir =\n+        Paths.get(System.getProperty(\"java.io.tmpdir\"))\n+            .resolve(Containerizer.DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);", "originalCommit": "87bd63a2aa8cd01a886417b5e154926af9a0b58e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2MDM0OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543660349", "bodyText": "oh right.", "author": "loosebazooka", "createdAt": "2020-12-15T20:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjkzMw=="}], "type": "inlineReview"}, {"oid": "62258898c9d6a423b301b6b41f668a1b1bbc17eb", "url": "https://github.com/GoogleContainerTools/jib/commit/62258898c9d6a423b301b6b41f668a1b1bbc17eb", "message": "cleanup unused things", "committedDate": "2020-12-15T20:17:28Z", "type": "commit"}, {"oid": "74813edc74d3978c7fd2edc0aecc5226c87fb24d", "url": "https://github.com/GoogleContainerTools/jib/commit/74813edc74d3978c7fd2edc0aecc5226c87fb24d", "message": "test naming", "committedDate": "2020-12-15T20:22:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2MTE2Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543661163", "body": "actually this change is now unnecessary", "bodyText": "actually this change is now unnecessary", "bodyHTML": "<p dir=\"auto\">actually this change is now unnecessary</p>", "author": "loosebazooka", "createdAt": "2020-12-15T20:23:41Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/CacheDirectoryCreationException.java", "diffHunk": "@@ -24,4 +24,8 @@\n   public CacheDirectoryCreationException(Throwable cause) {\n     super(MESSAGE, cause);\n   }\n+", "originalCommit": "74813edc74d3978c7fd2edc0aecc5226c87fb24d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "64c14dda6c478060153b492450bb693cc2457d52", "url": "https://github.com/GoogleContainerTools/jib/commit/64c14dda6c478060153b492450bb693cc2457d52", "message": "remove new exception stuff", "committedDate": "2020-12-15T20:24:40Z", "type": "commit"}]}