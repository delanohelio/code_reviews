{"pr_number": 2832, "pr_title": "Add to/from credential helper", "pr_author": "loosebazooka", "pr_createdAt": "2020-10-16T03:55:24Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2832", "timeline": [{"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f", "url": "https://github.com/GoogleContainerTools/jib/commit/49ab6b537f2dc141951c57edb4e67a39cd70e06f", "message": "Add to/from credential helper", "committedDate": "2020-10-16T03:53:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MDkwNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#discussion_r506480905", "body": "Debug code?", "bodyText": "Debug code?", "bodyHTML": "<p dir=\"auto\">Debug code?</p>", "author": "chanseokoh", "createdAt": "2020-10-16T14:24:42Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -271,43 +373,42 @@ public void testParse_passwordWithoutUsername() {\n   }\n \n   @RunWith(Parameterized.class)\n-  public static class UsernamePasswordNotAllowedWithToAndFrom {\n-    @Parameterized.Parameters(name = \"{0},{1}\")\n-    public static Collection<Object[]> data() {\n+  public static class IncompatibleCredentialCombos {\n+    @Parameterized.Parameters\n+    public static Collection<String[][]> data() {\n       return Arrays.asList(\n-          new Object[][] {\n-            {\"--to-username\", \"--to-password\"},\n-            {\"--from-username\", \"--from-password\"}\n+          new String[][][] {\n+            {{\"--credential-helper=x\", \"--to-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--from-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--username=x\", \"--password=x\"}},\n+            {{\"--credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--credential-helper=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n           });\n     }\n \n-    @Parameterized.Parameter(0)\n-    public String usernameField;\n-\n-    @Parameterized.Parameter(1)\n-    public String passwordField;\n+    @Parameterized.Parameter public String[] authArgs;\n+    private final String[] requiredArgs = new String[] {\"--target=ignored\"};\n \n     @Test\n     public void testParse_usernameWithoutPassword() {\n+      try {\n+        CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs));\n+      } catch (CommandLine.MaxValuesExceededException error) {\n+        System.out.println(\"goose\");\n+      } catch (Exception ex) {\n+        // do nothing\n+      }", "originalCommit": "49ab6b537f2dc141951c57edb4e67a39cd70e06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxMTMwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#discussion_r506511301", "body": "how about this?\r\n```suggestion\r\n      assertThat(meae).hasMessageThat().startsWith(\"Error:\");\r\n```\r\nMight produce a more readable error message.", "bodyText": "how about this?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  assertThat(meae.getMessage()).startsWith(\"Error: \");\n          \n          \n            \n                  assertThat(meae).hasMessageThat().startsWith(\"Error:\");\n          \n      \n    \n    \n  \n\nMight produce a more readable error message.", "bodyHTML": "<p dir=\"auto\">how about this?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      assertThat(meae<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getMessage())</span><span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error:<span class=\"x x-first x-last\"> </span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      assertThat(meae<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">hasMessageThat()</span><span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error:<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Might produce a more readable error message.</p>", "author": "mpeddada1", "createdAt": "2020-10-16T14:55:11Z", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -271,43 +373,42 @@ public void testParse_passwordWithoutUsername() {\n   }\n \n   @RunWith(Parameterized.class)\n-  public static class UsernamePasswordNotAllowedWithToAndFrom {\n-    @Parameterized.Parameters(name = \"{0},{1}\")\n-    public static Collection<Object[]> data() {\n+  public static class IncompatibleCredentialCombos {\n+    @Parameterized.Parameters\n+    public static Collection<String[][]> data() {\n       return Arrays.asList(\n-          new Object[][] {\n-            {\"--to-username\", \"--to-password\"},\n-            {\"--from-username\", \"--from-password\"}\n+          new String[][][] {\n+            {{\"--credential-helper=x\", \"--to-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--from-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--username=x\", \"--password=x\"}},\n+            {{\"--credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--credential-helper=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n           });\n     }\n \n-    @Parameterized.Parameter(0)\n-    public String usernameField;\n-\n-    @Parameterized.Parameter(1)\n-    public String passwordField;\n+    @Parameterized.Parameter public String[] authArgs;\n+    private final String[] requiredArgs = new String[] {\"--target=ignored\"};\n \n     @Test\n     public void testParse_usernameWithoutPassword() {\n+      try {\n+        CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs));\n+      } catch (CommandLine.MaxValuesExceededException error) {\n+        System.out.println(\"goose\");\n+      } catch (Exception ex) {\n+        // do nothing\n+      }\n       MutuallyExclusiveArgsException meae =\n           assertThrows(\n               MutuallyExclusiveArgsException.class,\n               () ->\n                   CommandLine.populateCommand(\n-                      new JibCli(),\n-                      \"--target\",\n-                      \"test-image-ref\",\n-                      \"--username\",\n-                      \"test-username\",\n-                      \"--password\",\n-                      \"test-password\",\n-                      usernameField,\n-                      \"test-username\",\n-                      passwordField,\n-                      \"test-password\"));\n-      assertThat(meae.getMessage())\n-          .isEqualTo(\n-              \"Error: [--username=<username> --password[=<password>]] and [[--to-username=<username> --to-password[=<password>]] [--from-username=<username> --from-password[=<password>]]] are mutually exclusive (specify only one)\");\n+                      new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs)));\n+      assertThat(meae.getMessage()).startsWith(\"Error: \");", "originalCommit": "49ab6b537f2dc141951c57edb4e67a39cd70e06f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a90b8e2e38b6d92533f21d87400807c407918026", "url": "https://github.com/GoogleContainerTools/jib/commit/a90b8e2e38b6d92533f21d87400807c407918026", "message": "test update", "committedDate": "2020-10-16T15:14:20Z", "type": "commit"}]}