{"pr_number": 2652, "pr_title": "build multiple base Images concurrently", "pr_author": "louismurerwa", "pr_createdAt": "2020-07-31T19:54:48Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2652", "timeline": [{"oid": "5cbb12371dd8cebc637be9aacb2c34433bae7345", "url": "https://github.com/GoogleContainerTools/jib/commit/5cbb12371dd8cebc637be9aacb2c34433bae7345", "message": "Adding Multi image building", "committedDate": "2020-07-31T19:58:34Z", "type": "commit"}, {"oid": "5cbb12371dd8cebc637be9aacb2c34433bae7345", "url": "https://github.com/GoogleContainerTools/jib/commit/5cbb12371dd8cebc637be9aacb2c34433bae7345", "message": "Adding Multi image building", "committedDate": "2020-07-31T19:58:34Z", "type": "forcePushed"}, {"oid": "abffbf0a5bc7d4f1c4da6f7a18338820586f871b", "url": "https://github.com/GoogleContainerTools/jib/commit/abffbf0a5bc7d4f1c4da6f7a18338820586f871b", "message": "Style Fixes", "committedDate": "2020-07-31T20:05:40Z", "type": "commit"}, {"oid": "35d6663a81b840e3019f40a8c279dcce611a124f", "url": "https://github.com/GoogleContainerTools/jib/commit/35d6663a81b840e3019f40a8c279dcce611a124f", "message": "Fixing Styles", "committedDate": "2020-07-31T20:10:00Z", "type": "commit"}, {"oid": "be2b0377ddc386215fdecf9f075a22ec153e52ac", "url": "https://github.com/GoogleContainerTools/jib/commit/be2b0377ddc386215fdecf9f075a22ec153e52ac", "message": "Fixing structure names", "committedDate": "2020-07-31T20:11:57Z", "type": "commit"}, {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "url": "https://github.com/GoogleContainerTools/jib/commit/3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "message": "Style Fixes", "committedDate": "2020-07-31T20:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463873141", "body": "Just realized this. I actually think this code (and the code in `obtainBaseImageLayers` that we updated) will break once we have multiple `Images` due to `childProgressDispatcherFactory` (the progress reporting thing), which I haven't explained. Will need to fix it when the time comes. Will be easy to fix, so not a concern at all.", "bodyText": "Just realized this. I actually think this code (and the code in obtainBaseImageLayers that we updated) will break once we have multiple Images due to childProgressDispatcherFactory (the progress reporting thing), which I haven't explained. Will need to fix it when the time comes. Will be easy to fix, so not a concern at all.", "bodyHTML": "<p dir=\"auto\">Just realized this. I actually think this code (and the code in <code>obtainBaseImageLayers</code> that we updated) will break once we have multiple <code>Images</code> due to <code>childProgressDispatcherFactory</code> (the progress reporting thing), which I haven't explained. Will need to fix it when the time comes. Will be easy to fix, so not a concern at all.</p>", "author": "chanseokoh", "createdAt": "2020-07-31T22:31:55Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1NjkwMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r464456901", "bodyText": "Sounds Good .I will be on the look out for the breaks caused by childProgressDispatcherFactory", "author": "louismurerwa", "createdAt": "2020-08-03T14:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzI3NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877274", "body": "You can use `.entrySet()` to iterator over a Map. An entry is a (key, value) pair, so no need to call `Map.get(key)` to get the value.\r\n\r\n```suggestion\r\n              for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\r\n                  results.baseImagesAndLayers.get().entrySet()) {\r\n                Future<Image> builtImage =\r\n                    executorService.submit(\r\n                        () ->\r\n                            new BuildImageStep(\r\n                                    buildContext,\r\n                                    childProgressDispatcherFactory,\r\n                                    entry.getKey(), // base image\r\n                                    realizeFutures(entry.getValue()), // base image layers\r\n                                    realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\r\n                                .call());\r\n                builtImages.add(builtImage);\r\n              }\r\n```", "bodyText": "You can use .entrySet() to iterator over a Map. An entry is a (key, value) pair, so no need to call Map.get(key) to get the value.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          for (Image image : results.baseImagesAndLayers.get().keySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                image,\n          \n          \n            \n                                                realizeFutures(\n          \n          \n            \n                                                    Verify.verifyNotNull(\n          \n          \n            \n                                                        results.baseImagesAndLayers.get().get(image))),\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }\n          \n          \n            \n                          for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n          \n          \n            \n                              results.baseImagesAndLayers.get().entrySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                entry.getKey(), // base image\n          \n          \n            \n                                                realizeFutures(entry.getValue()), // base image layers\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }", "bodyHTML": "<p dir=\"auto\">You can use <code>.entrySet()</code> to iterator over a Map. An entry is a (key, value) pair, so no need to call <code>Map.get(key)</code> to get the value.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"378\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Image</span> image <span class=\"pl-k\">:</span> results<span class=\"pl-k\">.</span>baseImagesAndLayers<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>keySet()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"379\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">Image</span>&gt;</span> builtImage <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"380\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    executorService<span class=\"pl-k\">.</span>submit(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"381\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"382\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BuildImageStep</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"383\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    buildContext,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"384\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    childProgressDispatcherFactory,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"385\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    image,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"386\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    realizeFutures(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"387\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                        <span class=\"pl-smi\">Verify</span><span class=\"pl-k\">.</span>verifyNotNull(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"388\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                            results<span class=\"pl-k\">.</span>baseImagesAndLayers<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>get(image))),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"389\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    realizeFutures(<span class=\"pl-smi\">Verify</span><span class=\"pl-k\">.</span>verifyNotNull(results<span class=\"pl-k\">.</span>applicationLayers)))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"390\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                .call());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"391\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                builtImages<span class=\"pl-k\">.</span>add(builtImage);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"392\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"378\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Map</span><span class=\"pl-k\">.</span><span class=\"pl-k\">Entry&lt;<span class=\"pl-smi\">Image</span>, <span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">PreparedLayer</span>&gt;</span>&gt;</span>&gt;</span> entry <span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"379\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  results<span class=\"pl-k\">.</span>baseImagesAndLayers<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>entrySet()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"380\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">Image</span>&gt;</span> builtImage <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"381\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    executorService<span class=\"pl-k\">.</span>submit(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"382\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"383\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BuildImageStep</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"384\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    buildContext,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"385\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    childProgressDispatcherFactory,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"386\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    entry<span class=\"pl-k\">.</span>getKey(), <span class=\"pl-c\"><span class=\"pl-c\">//</span> base image</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"387\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    realizeFutures(entry<span class=\"pl-k\">.</span>getValue()), <span class=\"pl-c\"><span class=\"pl-c\">//</span> base image layers</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"388\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    realizeFutures(<span class=\"pl-smi\">Verify</span><span class=\"pl-k\">.</span>verifyNotNull(results<span class=\"pl-k\">.</span>applicationLayers)))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"389\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                .call());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"390\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                builtImages<span class=\"pl-k\">.</span>add(builtImage);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"391\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-07-31T22:49:15Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    image,\n+                                    realizeFutures(\n+                                        Verify.verifyNotNull(\n+                                            results.baseImagesAndLayers.get().get(image))),\n+                                    realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n+                                .call());\n+                builtImages.add(builtImage);\n+              }", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzYzMQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877631", "body": "Rename it to `buildImages()`? Also, rename other methods too (`pullBaseImage()` --> `pullBaseImages()`)?", "bodyText": "Rename it to buildImages()? Also, rename other methods too (pullBaseImage() --> pullBaseImages())?", "bodyHTML": "<p dir=\"auto\">Rename it to <code>buildImages()</code>? Also, rename other methods too (<code>pullBaseImage()</code> --&gt; <code>pullBaseImages()</code>)?</p>", "author": "chanseokoh", "createdAt": "2020-07-31T22:50:43Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {", "originalCommit": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "726c1b760a899f81bca1dbd71669565e3c668832", "url": "https://github.com/GoogleContainerTools/jib/commit/726c1b760a899f81bca1dbd71669565e3c668832", "message": "Fix", "committedDate": "2020-08-03T14:53:38Z", "type": "commit"}, {"oid": "9b8ccb84009215c973d713b0ade77c3ec33006fb", "url": "https://github.com/GoogleContainerTools/jib/commit/9b8ccb84009215c973d713b0ade77c3ec33006fb", "message": "empty commit to trigger builds", "committedDate": "2020-08-03T17:33:22Z", "type": "commit"}]}