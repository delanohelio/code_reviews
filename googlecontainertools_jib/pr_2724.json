{"pr_number": 2724, "pr_title": "Adding functionality to push a manifest list", "pr_author": "louismurerwa", "pr_createdAt": "2020-08-24T21:32:06Z", "pr_url": "https://github.com/GoogleContainerTools/jib/pull/2724", "timeline": [{"oid": "71a2d9f73e77fe77ff25e78169ae075c9f276e95", "url": "https://github.com/GoogleContainerTools/jib/commit/71a2d9f73e77fe77ff25e78169ae075c9f276e95", "message": "Adding functionality to push the manifest list", "committedDate": "2020-08-24T20:49:41Z", "type": "commit"}, {"oid": "3ae1c363d3312fe97bf9d70242a16637717d02d4", "url": "https://github.com/GoogleContainerTools/jib/commit/3ae1c363d3312fe97bf9d70242a16637717d02d4", "message": "Pushing manifest list", "committedDate": "2020-08-24T21:30:06Z", "type": "commit"}, {"oid": "eb675b0676262779d67e3cccfd069f6ccd5e2e88", "url": "https://github.com/GoogleContainerTools/jib/commit/eb675b0676262779d67e3cccfd069f6ccd5e2e88", "message": "Style Fix", "committedDate": "2020-08-25T15:42:40Z", "type": "commit"}, {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d", "url": "https://github.com/GoogleContainerTools/jib/commit/7d463f9b9910b6885640ebf22dfc966022ff675d", "message": "Refactoring Code", "committedDate": "2020-08-25T18:28:46Z", "type": "commit"}, {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "url": "https://github.com/GoogleContainerTools/jib/commit/7abf3b606eae0547b9b7eeb1934c6a575b95e112", "message": "Style Fix", "committedDate": "2020-08-25T18:44:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTI1Nw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661257", "body": "Hmm... I think we should do something about the \"image id\" when pushing a manifest list. It doesn't make sense to return a container configuration digest.", "bodyText": "Hmm... I think we should do something about the \"image id\" when pushing a manifest list. It doesn't make sense to return a container configuration digest.", "bodyHTML": "<p dir=\"auto\">Hmm... I think we should do something about the \"image id\" when pushing a manifest list. It doesn't make sense to return a container configuration digest.</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:43:04Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.", "originalCommit": "7d463f9b9910b6885640ebf22dfc966022ff675d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY3NTY2Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476675666", "bodyText": "A manifest list doesn't have a container config so yes we don't have an image id for a manifest list.", "author": "louismurerwa", "createdAt": "2020-08-25T19:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTAzNw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476739037", "bodyText": "Pushes a manifest or a manifest list for a tag. If not a manifest list, returns the manifest digest (\"image digest\") and the container configuration digest (\"image id\") as {@link BuildResult}. If a manifest list, returns the manifest list digest only.\nAnd note the original Javadoc has a typo: {#link BuildResult} --> {@link BuildResult}", "author": "chanseokoh", "createdAt": "2020-08-25T21:10:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTU3MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661570", "body": "```suggestion\r\n  static ImmutableList<PushImageStep> makeListForManifestList(\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static ImmutableList<PushImageStep> makeListPushManifestList(\n          \n          \n            \n              static ImmutableList<PushImageStep> makeListForManifestList(", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">static</span> <span class=\"pl-k\">ImmutableList&lt;<span class=\"pl-smi\">PushImageStep</span>&gt;</span> <span class=\"x x-first x-last\">makeListPushManifestList</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">static</span> <span class=\"pl-k\">ImmutableList&lt;<span class=\"pl-smi\">PushImageStep</span>&gt;</span> <span class=\"x x-first x-last\">makeListForManifestList</span>(</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T18:43:36Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(", "originalCommit": "7d463f9b9910b6885640ebf22dfc966022ff675d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTc2OA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661768", "body": "```suggestion\r\n      DescriptorDigest manifestListDigest = Digests.computeJsonDigest(manifestList);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);\n          \n          \n            \n                  DescriptorDigest manifestListDigest = Digests.computeJsonDigest(manifestList);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">DescriptorDigest</span> <span class=\"x x-first x-last\">manifestDigest</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Digests</span><span class=\"pl-k\">.</span>computeJsonDigest(manifestList);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">DescriptorDigest</span> <span class=\"x x-first x-last\">manifestListDigest</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Digests</span><span class=\"pl-k\">.</span>computeJsonDigest(manifestList);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T18:43:58Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);", "originalCommit": "7d463f9b9910b6885640ebf22dfc966022ff675d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MjAyOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476662028", "body": "```suggestion\r\n      boolean manifestListAlreadyExists)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  boolean manifestAlreadyExists)\n          \n          \n            \n                  boolean manifestListAlreadyExists)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">manifestAlreadyExists</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">manifestListAlreadyExists</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T18:44:24Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)", "originalCommit": "7d463f9b9910b6885640ebf22dfc966022ff675d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MjI5NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476662294", "body": "```suggestion\r\n            LogEvent.info(\"Skipping pushing manifest list; already exists.\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n          \n          \n            \n                        LogEvent.info(\"Skipping pushing manifest list; already exists.\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">LogEvent</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Skipping pushing manifest list; <span class=\"x x-first x-last\">manifest </span>already exists.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">LogEvent</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Skipping pushing manifest list; already exists.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T18:44:55Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +96,48 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476664772", "body": "I feel like this should be `@Nullable DescriptorDigest imageId` now that this doesn't apply to a manifest list.\r\n\r\nThat will trigger cascading changes to `BuildResult`, which requires a separate PR. I guess the `BuildResult.imageId` also needs to be `@Nullable` and `BuildResuilt.getImageId()` should return `Optional<DescriptorDigest>`.", "bodyText": "I feel like this should be @Nullable DescriptorDigest imageId now that this doesn't apply to a manifest list.\nThat will trigger cascading changes to BuildResult, which requires a separate PR. I guess the BuildResult.imageId also needs to be @Nullable and BuildResuilt.getImageId() should return Optional<DescriptorDigest>.", "bodyHTML": "<p dir=\"auto\">I feel like this should be <code>@Nullable DescriptorDigest imageId</code> now that this doesn't apply to a manifest list.</p>\n<p dir=\"auto\">That will trigger cascading changes to <code>BuildResult</code>, which requires a separate PR. I guess the <code>BuildResult.imageId</code> also needs to be <code>@Nullable</code> and <code>BuildResuilt.getImageId()</code> should return <code>Optional&lt;DescriptorDigest&gt;</code>.</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:49:18Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -107,7 +147,7 @@\n       BuildContext buildContext,\n       ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n       RegistryClient registryClient,\n-      BuildableManifestTemplate manifestTemplate,\n+      ManifestTemplate manifestTemplate,\n       String imageQualifier,\n       DescriptorDigest imageDigest,\n       DescriptorDigest imageId) {", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY3NjAwOA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476676008", "bodyText": "Hmm... now that we're pushing a manifest list, maybe it's better to make the class return a manifest digest only instead of a BuildResult.", "author": "chanseokoh", "createdAt": "2020-08-25T19:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5MDI4MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476690280", "bodyText": "I can make a separate PR to do this change - which one do you prefer between the two.", "author": "louismurerwa", "createdAt": "2020-08-25T19:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwNDU0NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476704544", "bodyText": "I think we need to discuss this with the team. We need to think about what to return in the end when multi-platform image building. This will most likely require changing the jib-core public API.", "author": "chanseokoh", "createdAt": "2020-08-25T20:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcwODYxMA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476708610", "bodyText": "Sounds Good .We can talk about this in the Jib Team Review tomorrow.", "author": "louismurerwa", "createdAt": "2020-08-25T20:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NTQ5NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476665494", "body": "\"imagePushResults\"?", "bodyText": "\"imagePushResults\"?", "bodyHTML": "<p dir=\"auto\">\"imagePushResults\"?</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:50:32Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> singleManifestPushResults = failedFuture();", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NTU5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476665599", "body": "\"manifestPushResult\"?", "bodyText": "\"manifestPushResult\"?", "bodyHTML": "<p dir=\"auto\">\"manifestPushResult\"?</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:50:41Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> singleManifestPushResults = failedFuture();\n+    private Future<BuildResult> buildResult = failedFuture();", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NzI2Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476667263", "body": "```java\r\nreturn new LoadDockerStep(...)\r\n```", "bodyText": "return new LoadDockerStep(...)", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"return new LoadDockerStep(...)\n\"><pre><span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LoadDockerStep</span>(<span class=\"pl-c1\">...</span>)</pre></div>", "author": "chanseokoh", "createdAt": "2020-08-25T18:53:34Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -582,15 +608,15 @@ private void loadDocker(DockerClient dockerClient) {\n                   new LoadDockerStep(\n                           buildContext, childProgressDispatcherFactory, dockerClient, builtImage)\n                       .call();\n-              return Collections.singletonList(Futures.immediateFuture(buildResult));\n+              return buildResult;", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NzQ4NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476667485", "body": "ditto", "bodyText": "ditto", "bodyHTML": "<p dir=\"auto\">ditto</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:53:58Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -603,7 +629,7 @@ private void writeTarFile(Path outputPath) {\n                   new WriteTarFileStep(\n                           buildContext, childProgressDispatcherFactory, outputPath, builtImage)\n                       .call();\n-              return Collections.singletonList(Futures.immediateFuture(buildResult));\n+              return buildResult;", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476668645", "body": "Hmm... I saw some test failures. I suspect there's a problem with using a progress dispatcher here.", "bodyText": "Hmm... I saw some test failures. I suspect there's a problem with using a progress dispatcher here.", "bodyHTML": "<p dir=\"auto\">Hmm... I saw some test failures. I suspect there's a problem with using a progress dispatcher here.</p>", "author": "chanseokoh", "createdAt": "2020-08-25T18:55:48Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -566,11 +568,35 @@ private void pushImages() {\n         });\n   }\n \n+  private void pushManifestList() {\n+    ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n+        Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n+    results.buildResult =\n+        executorService.submit(\n+            () -> {\n+              realizeFutures(results.singleManifestPushResults.get());\n+              List<Future<BuildResult>> manifestListPushResults =\n+                  scheduleCallables(\n+                      PushImageStep.makeListPushManifestList(\n+                          buildContext,\n+                          childProgressDispatcherFactory,", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2OTY2OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476669669", "bodyText": "Yes there was a  problem with the dispatcher but its all sorted out now.", "author": "louismurerwa", "createdAt": "2020-08-25T18:57:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY4Njg1Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476686853", "bodyText": "Hmm... I don't really get how the last commit fixed the test failure. It shouldn't affect the progress completion ratio.", "author": "chanseokoh", "createdAt": "2020-08-25T19:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5MzMyNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476693325", "bodyText": "ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n        Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n\n    results.buildResults =\n        executorService.submit(\n            () -> {\n              realizeFutures(results.pushImageResults.get());\n              if (results.builtImagesAndBaseImages.get().size() == 1) {\n                return results.pushImageResults.get();\n              }\n\n              return scheduleCallables(\n                  PushImageStep.makeListPushManifestList(\n                      buildContext,\n                      childProgressDispatcherFactory,\n                      results.targetRegistryClient.get(),\n                      results.manifestListOrSingleManifest.get(),\n                      results.manifestCheckResult.get().isPresent()));\n            });\n\nThis code was breaking the dispatcher because when the if statement was triggered , the dispatcher was left open.", "author": "louismurerwa", "createdAt": "2020-08-25T19:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY5OTU2NA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476699564", "bodyText": "Ah, I see the last test failure was not because of the progress but a digest mistach.\nIn light of this, probably the short-circuiting in #2724 (comment) should go inside the try-resource block.", "author": "chanseokoh", "createdAt": "2020-08-25T19:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY3OTY0Ng==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476679646", "body": "We should have consistency in the way we determine single or multi-image building. And I think early short-circuiting makes sense. So instead of this `instanceof` check, I'd go with\r\n\r\n```java\r\n  static ImmutableList<PushImageStep> makeList(...) throws IOException {\r\n    ...\r\n    try (...) {\r\n      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\r\n      if (singlePlatform) {\r\n        return ImmutableList.of(); // single image; no need to push a manifest list\r\n      }\r\n```", "bodyText": "We should have consistency in the way we determine single or multi-image building. And I think early short-circuiting makes sense. So instead of this instanceof check, I'd go with\n  static ImmutableList<PushImageStep> makeList(...) throws IOException {\n    ...\n    try (...) {\n      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\n      if (singlePlatform) {\n        return ImmutableList.of(); // single image; no need to push a manifest list\n      }", "bodyHTML": "<p dir=\"auto\">We should have consistency in the way we determine single or multi-image building. And I think early short-circuiting makes sense. So instead of this <code>instanceof</code> check, I'd go with</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  static ImmutableList&lt;PushImageStep&gt; makeList(...) throws IOException {\n    ...\n    try (...) {\n      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\n      if (singlePlatform) {\n        return ImmutableList.of(); // single image; no need to push a manifest list\n      }\"><pre>  <span class=\"pl-k\">static</span> <span class=\"pl-k\">ImmutableList&lt;<span class=\"pl-smi\">PushImageStep</span>&gt;</span> makeList(<span class=\"pl-c1\">...</span>) throws <span class=\"pl-smi\">IOException</span> {\n    <span class=\"pl-c1\">...</span>\n    <span class=\"pl-k\">try</span> (<span class=\"pl-c1\">...</span>) {\n      <span class=\"pl-k\">boolean</span> singlePlatform <span class=\"pl-k\">=</span> buildContext<span class=\"pl-k\">.</span>getContainerConfiguration()<span class=\"pl-k\">.</span>getPlatforms()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>;\n      <span class=\"pl-k\">if</span> (singlePlatform) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ImmutableList</span><span class=\"pl-k\">.</span>of(); <span class=\"pl-c\"><span class=\"pl-c\">//</span> single image; no need to push a manifest list</span>\n      }</pre></div>", "author": "chanseokoh", "createdAt": "2020-08-25T19:15:49Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +96,48 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);\n+      return manifestList instanceof V22ManifestListTemplate", "originalCommit": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "70e7fffd08c164a43f1127e7d8b5ca23d1f86cb1", "url": "https://github.com/GoogleContainerTools/jib/commit/70e7fffd08c164a43f1127e7d8b5ca23d1f86cb1", "message": "Style Fixes", "committedDate": "2020-08-25T19:44:23Z", "type": "commit"}, {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "url": "https://github.com/GoogleContainerTools/jib/commit/edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "message": "Fix for failing test", "committedDate": "2020-08-25T19:58:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTYxNQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476739615", "body": "```suggestion\r\n// TODO: figure out the right return value and type when pushing a manifest list.\r\nclass PushImageStep implements Callable<BuildResult> {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class PushImageStep implements Callable<BuildResult> {\n          \n          \n            \n            // TODO: figure out the right return value and type when pushing a manifest list.\n          \n          \n            \n            class PushImageStep implements Callable<BuildResult> {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">class</span><span class=\"x\"> </span><span class=\"pl-en x\">PushImageStep</span><span class=\"x\"> </span><span class=\"pl-k x\">implements</span><span class=\"x\"> </span><span class=\"pl-e\"><span class=\"x\">Callable&lt;</span><span class=\"pl-smi x\">BuildResult</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> TODO: figure out the right return value and type when pushing a manifest list.</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">PushImageStep</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">Callable&lt;<span class=\"pl-smi\">BuildResult</span>&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T21:11:22Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.\n  */\n class PushImageStep implements Callable<BuildResult> {", "originalCommit": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTM5OQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741399", "bodyText": "And can you add another tracking item into your doc?", "author": "chanseokoh", "createdAt": "2020-08-25T21:14:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTE2MA==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741160", "body": "```suggestion\r\n                      // TODO: a manifest list digest isn't an \"image id\". Figure out the right return value and type.\r\n                      manifestListDigest))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  manifestListDigest))\n          \n          \n            \n                                  // TODO: a manifest list digest isn't an \"image id\". Figure out the right return value and type.\n          \n          \n            \n                                  manifestListDigest))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"137\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                      <span class=\"x x-first x-last\">manifestListDigest))</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"137\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                      <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> TODO: a manifest list digest isn't an \"image id\". Figure out the right return value and type.</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"138\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                      manifestListDigest))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T21:14:26Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,50 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListForManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestListAlreadyExists)\n+      throws IOException {\n+\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\n+      if (singlePlatform) {\n+        return ImmutableList.of(); // single image; no need to push a manifest list\n+      }\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestListAlreadyExists) {\n+        eventHandlers.dispatch(LogEvent.info(\"Skipping pushing manifest list; already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestListDigest = Digests.computeJsonDigest(manifestList);\n+      return tags.stream()\n+          .map(\n+              tag ->\n+                  new PushImageStep(\n+                      buildContext,\n+                      progressEventDispatcher.newChildProducer(),\n+                      registryClient,\n+                      manifestList,\n+                      tag,\n+                      manifestListDigest,\n+                      manifestListDigest))", "originalCommit": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTgzNg==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741836", "body": "```suggestion\r\n    public Future<List<Future<BuildResult>>> imagePushResults = failedFuture();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Future<List<Future<BuildResult>>> imagePushResultshResults = failedFuture();\n          \n          \n            \n                public Future<List<Future<BuildResult>>> imagePushResults = failedFuture();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">Future&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BuildResult</span>&gt;</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">imagePushResultshResults</span> <span class=\"pl-k\">=</span> failedFuture();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">Future&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-k\">Future&lt;<span class=\"pl-smi\">BuildResult</span>&gt;</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">imagePushResults</span> <span class=\"pl-k\">=</span> failedFuture();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-25T21:15:47Z", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> imagePushResultshResults = failedFuture();", "originalCommit": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b2c76ffb3a0c021f74ff6944d96e294a98250522", "url": "https://github.com/GoogleContainerTools/jib/commit/b2c76ffb3a0c021f74ff6944d96e294a98250522", "message": "Adding Testing", "committedDate": "2020-08-26T18:21:19Z", "type": "commit"}, {"oid": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "url": "https://github.com/GoogleContainerTools/jib/commit/4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "message": "Add Testing", "committedDate": "2020-08-26T19:58:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2Mjg5Mw==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r477562893", "body": "```suggestion\r\n  public void testMakeListForManifestList_singlePlatform() throws IOException, RegistryException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {\n          \n          \n            \n              public void testMakeListForManifestList_singlePlatform() throws IOException, RegistryException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testMakeListForManifestList_SinglePlatform</span>() throws <span class=\"pl-smi\">IOException</span>, <span class=\"pl-smi\">RegistryException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testMakeListForManifestList_singlePlatform</span>() throws <span class=\"pl-smi\">IOException</span>, <span class=\"pl-smi\">RegistryException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-26T20:15:22Z", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PushImageStepTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.builder.steps;\n+\n+import com.google.cloud.tools.jib.api.RegistryException;\n+import com.google.cloud.tools.jib.api.buildplan.Platform;\n+import com.google.cloud.tools.jib.builder.ProgressEventDispatcher;\n+import com.google.cloud.tools.jib.configuration.BuildContext;\n+import com.google.cloud.tools.jib.configuration.ContainerConfiguration;\n+import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n+import com.google.cloud.tools.jib.event.EventHandlers;\n+import com.google.cloud.tools.jib.global.JibSystemProperties;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate.ManifestDescriptorTemplate;\n+import com.google.cloud.tools.jib.registry.RegistryClient;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.contrib.java.lang.system.RestoreSystemProperties;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link PushImageStep}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class PushImageStepTest {\n+\n+  @Rule public final RestoreSystemProperties systemPropertyRestorer = new RestoreSystemProperties();\n+  @Mock private ProgressEventDispatcher.Factory progressDispatcherFactory;\n+  @Mock private ProgressEventDispatcher progressDispatcher;\n+  @Mock private BuildContext buildContext;\n+  @Mock private RegistryClient registryClient;\n+  @Mock private ImageConfiguration imageConfiguration;\n+  @Mock private EventHandlers eventHandlers;\n+  @Mock private ContainerConfiguration containerConfig;\n+  @Mock private JibSystemProperties jibSystemPropeties;\n+\n+  private V22ManifestListTemplate manifestList;\n+  private boolean manifestListAlreadyExists = false;\n+  private ManifestDescriptorTemplate manifest;\n+\n+  @Before\n+  public void setUp() {\n+    Mockito.when(buildContext.getAllTargetImageTags()).thenReturn(ImmutableSet.of(\"tag1\", \"tag2\"));\n+    Mockito.when(buildContext.getEventHandlers()).thenReturn(eventHandlers);\n+    Mockito.when(buildContext.getContainerConfiguration()).thenReturn(containerConfig);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(\n+            ImmutableSet.of(new Platform(\"amd64\", \"linux\"), new Platform(\"arm64\", \"windows\")));\n+    Mockito.when(\n+            progressDispatcherFactory.create(\n+                \"launching manifest list pushers\", buildContext.getAllTargetImageTags().size()))\n+        .thenReturn(progressDispatcher);\n+    Mockito.when(progressDispatcher.newChildProducer()).thenReturn(progressDispatcherFactory);\n+\n+    manifestList = new V22ManifestListTemplate();\n+    manifest = new ManifestDescriptorTemplate();\n+    manifest.setMediaType(\"application/vnd.docker.distribution.manifest.v2+json\");\n+    manifest.setSize(100);\n+    manifest.setDigest(\"sha256:1f25787aab4669d252bdae09a72b9c345d2a7b8c64c8dbfba4c82af4834dbccc\");\n+    manifest.setPlatform(\"amd64\", \"linux\");\n+    manifestList.addManifest(manifest);\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList() throws IOException, RegistryException {\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+\n+    Assert.assertEquals(2, pushImageStepList.size());\n+    for (PushImageStep pushImageStep : pushImageStepList) {\n+      BuildResult buildResult = pushImageStep.call();\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageDigest().toString());\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageId().toString());\n+    }\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {", "originalCommit": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2Mjk1NQ==", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r477562955", "body": "```suggestion\r\n  public void testMakeListForManifestList_manifestListAlreadyExists()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testMakeListForManifestList_ManifestListAlreadyExists()\n          \n          \n            \n              public void testMakeListForManifestList_manifestListAlreadyExists()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testMakeListForManifestList_ManifestListAlreadyExists</span>()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testMakeListForManifestList_manifestListAlreadyExists</span>()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chanseokoh", "createdAt": "2020-08-26T20:15:30Z", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PushImageStepTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.builder.steps;\n+\n+import com.google.cloud.tools.jib.api.RegistryException;\n+import com.google.cloud.tools.jib.api.buildplan.Platform;\n+import com.google.cloud.tools.jib.builder.ProgressEventDispatcher;\n+import com.google.cloud.tools.jib.configuration.BuildContext;\n+import com.google.cloud.tools.jib.configuration.ContainerConfiguration;\n+import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n+import com.google.cloud.tools.jib.event.EventHandlers;\n+import com.google.cloud.tools.jib.global.JibSystemProperties;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate.ManifestDescriptorTemplate;\n+import com.google.cloud.tools.jib.registry.RegistryClient;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.contrib.java.lang.system.RestoreSystemProperties;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link PushImageStep}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class PushImageStepTest {\n+\n+  @Rule public final RestoreSystemProperties systemPropertyRestorer = new RestoreSystemProperties();\n+  @Mock private ProgressEventDispatcher.Factory progressDispatcherFactory;\n+  @Mock private ProgressEventDispatcher progressDispatcher;\n+  @Mock private BuildContext buildContext;\n+  @Mock private RegistryClient registryClient;\n+  @Mock private ImageConfiguration imageConfiguration;\n+  @Mock private EventHandlers eventHandlers;\n+  @Mock private ContainerConfiguration containerConfig;\n+  @Mock private JibSystemProperties jibSystemPropeties;\n+\n+  private V22ManifestListTemplate manifestList;\n+  private boolean manifestListAlreadyExists = false;\n+  private ManifestDescriptorTemplate manifest;\n+\n+  @Before\n+  public void setUp() {\n+    Mockito.when(buildContext.getAllTargetImageTags()).thenReturn(ImmutableSet.of(\"tag1\", \"tag2\"));\n+    Mockito.when(buildContext.getEventHandlers()).thenReturn(eventHandlers);\n+    Mockito.when(buildContext.getContainerConfiguration()).thenReturn(containerConfig);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(\n+            ImmutableSet.of(new Platform(\"amd64\", \"linux\"), new Platform(\"arm64\", \"windows\")));\n+    Mockito.when(\n+            progressDispatcherFactory.create(\n+                \"launching manifest list pushers\", buildContext.getAllTargetImageTags().size()))\n+        .thenReturn(progressDispatcher);\n+    Mockito.when(progressDispatcher.newChildProducer()).thenReturn(progressDispatcherFactory);\n+\n+    manifestList = new V22ManifestListTemplate();\n+    manifest = new ManifestDescriptorTemplate();\n+    manifest.setMediaType(\"application/vnd.docker.distribution.manifest.v2+json\");\n+    manifest.setSize(100);\n+    manifest.setDigest(\"sha256:1f25787aab4669d252bdae09a72b9c345d2a7b8c64c8dbfba4c82af4834dbccc\");\n+    manifest.setPlatform(\"amd64\", \"linux\");\n+    manifestList.addManifest(manifest);\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList() throws IOException, RegistryException {\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+\n+    Assert.assertEquals(2, pushImageStepList.size());\n+    for (PushImageStep pushImageStep : pushImageStepList) {\n+      BuildResult buildResult = pushImageStep.call();\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageDigest().toString());\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageId().toString());\n+    }\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(ImmutableSet.of(new Platform(\"amd64\", \"linux\")));\n+\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+    Assert.assertEquals(0, pushImageStepList.size());\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_ManifestListAlreadyExists()", "originalCommit": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7c566959e5f227c719d82706c8c552924430fb94", "url": "https://github.com/GoogleContainerTools/jib/commit/7c566959e5f227c719d82706c8c552924430fb94", "message": "Rename Tests", "committedDate": "2020-08-26T20:25:02Z", "type": "commit"}]}