{"pr_number": 1462, "pr_title": "Extension for camel-threadpoolfactory-vertx #1430", "pr_author": "JiriOndrusek", "pr_createdAt": "2020-07-07T13:57:25Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1462", "timeline": [{"oid": "c268494b4a53f5efc46f7b54636239e5f14c65f6", "url": "https://github.com/apache/camel-quarkus/commit/c268494b4a53f5efc46f7b54636239e5f14c65f6", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-08T07:22:37Z", "type": "forcePushed"}, {"oid": "7313407c95e85e0c327db576d2c01237c993d673", "url": "https://github.com/apache/camel-quarkus/commit/7313407c95e85e0c327db576d2c01237c993d673", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-10T14:35:55Z", "type": "forcePushed"}, {"oid": "60bbebc1614c369232787067f45cd3b58271ea34", "url": "https://github.com/apache/camel-quarkus/commit/60bbebc1614c369232787067f45cd3b58271ea34", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-10T16:38:07Z", "type": "forcePushed"}, {"oid": "d913ac9684b346701e6c5ae12dbe61c972d8c278", "url": "https://github.com/apache/camel-quarkus/commit/d913ac9684b346701e6c5ae12dbe61c972d8c278", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-28T06:49:31Z", "type": "forcePushed"}, {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072", "url": "https://github.com/apache/camel-quarkus/commit/c7cdf2339215aec0ca2fca7235e3b79ce2146072", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-28T07:37:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MjUzNw==", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463452537", "body": "```suggestion\r\n        final ... nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\r\n        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\r\n            if (route.idOrCreate(nodeIdFactory).equals(id)) {\r\n```\r\n\r\nIt would be more effective to get the factory once before starting the loop.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n          \n          \n            \n                        if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n          \n          \n            \n                    final ... nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\n          \n          \n            \n                    for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n          \n          \n            \n                        if (route.idOrCreate(nodeIdFactory).equals(id)) {\n          \n      \n    \n    \n  \n\nIt would be more effective to get the factory once before starting the loop.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">RouteTemplateDefinition</span> route <span class=\"pl-k\">:</span> routeTemplateDefinitions) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (route<span class=\"pl-k\">.</span>idOrCreate(camelContext<span class=\"pl-k\">.</span>adapt(<span class=\"pl-smi\">ExtendedCamelContext</span><span class=\"pl-k\">.</span>class)<span class=\"pl-k\">.</span>getNodeIdFactory())<span class=\"pl-k\">.</span>equals(id)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-c1\">...</span> nodeIdFactory <span class=\"pl-k\">=</span> camelContext<span class=\"pl-k\">.</span>adapt(<span class=\"pl-smi\">ExtendedCamelContext</span><span class=\"pl-k\">.</span>class)<span class=\"pl-k\">.</span>getNodeIdFactory();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">RouteTemplateDefinition</span> route <span class=\"pl-k\">:</span> routeTemplateDefinitions) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (route<span class=\"pl-k\">.</span>idOrCreate(nodeIdFactory)<span class=\"pl-k\">.</span>equals(id)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">It would be more effective to get the factory once before starting the loop.</p>", "author": "ppalaga", "createdAt": "2020-07-31T07:35:23Z", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {", "originalCommit": "c7cdf2339215aec0ca2fca7235e3b79ce2146072", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDUzNg==", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463454536", "bodyText": "No problem, I'll refactor it", "author": "JiriOndrusek", "createdAt": "2020-07-31T07:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MjUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "3c8deb8ca920794c224cdf8fa1a584ec31f427e4", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex e08704eee9..ce7fd3ff1d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -119,8 +120,9 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        NodeIdFactory nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\n         for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n-            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+            if (route.idOrCreate(nodeIdFactory).equals(id)) {\n                 return route;\n             }\n         }\n", "next_change": {"commit": "9574eb269da786dcfe3fb2709f2625d45ad87d57", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex ce7fd3ff1d..058901db2d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -120,9 +130,8 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n-        NodeIdFactory nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\n         for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n-            if (route.idOrCreate(nodeIdFactory).equals(id)) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n                 return route;\n             }\n         }\n", "next_change": {"commit": "4d2a0f7be8727317df90f84410fce39d7f47afe5", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex 058901db2d..8bc65dc37d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -130,8 +131,9 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        NodeIdFactory nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\n         for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n-            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+            if (route.idOrCreate(nodeIdFactory).equals(id)) {\n                 return route;\n             }\n         }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzQwNQ==", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463453405", "body": "Does not look right. Perhaps this?\r\n```suggestion\r\n        this.routeTemplateDefinitions.addAll(routeTemplateDefinition);\r\n```", "bodyText": "Does not look right. Perhaps this?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n          \n          \n            \n                    this.routeTemplateDefinitions.addAll(routeTemplateDefinition);", "bodyHTML": "<p dir=\"auto\">Does not look right. Perhaps this?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>routeTemplateDefinitions<span class=\"pl-k\">.</span>addAll(<span class=\"x x-first x-last\">routeTemplateDefinitions</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>routeTemplateDefinitions<span class=\"pl-k\">.</span>addAll(<span class=\"x x-first x-last\">routeTemplateDefinition</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ppalaga", "createdAt": "2020-07-31T07:37:31Z", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+                return route;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        if (routeTemplateDefinitions == null || routeTemplateDefinitions.isEmpty()) {\n+            return;\n+        }\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);", "originalCommit": "c7cdf2339215aec0ca2fca7235e3b79ce2146072", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDkwOQ==", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463454909", "bodyText": "I agree that current state doesn't make sense. I'll fix it.", "author": "JiriOndrusek", "createdAt": "2020-07-31T07:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8deb8ca920794c224cdf8fa1a584ec31f427e4", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex e08704eee9..ce7fd3ff1d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -137,12 +139,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.remove(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "f4fe535aea5718f54efd8057cca580c4f42ffe0b", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex ce7fd3ff1d..8a6eab216b 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -144,7 +144,7 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        this.routeTemplateDefinitions.remove(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "9574eb269da786dcfe3fb2709f2625d45ad87d57", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex 8a6eab216b..058901db2d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -139,12 +148,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "4d2a0f7be8727317df90f84410fce39d7f47afe5", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex 058901db2d..8bc65dc37d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -148,12 +150,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzgzOA==", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463453838", "body": "Does not look right either. Maybe this?\r\n```suggestion\r\n        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\r\n```", "bodyText": "Does not look right either. Maybe this?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n          \n          \n            \n                    this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);", "bodyHTML": "<p dir=\"auto\">Does not look right either. Maybe this?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        routeTemplateDefinitions<span class=\"pl-k\">.</span>removeAll(routeTemplateDefinitions);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1 x x-first\">this</span><span class=\"pl-k x x-last\">.</span>routeTemplateDefinitions<span class=\"pl-k\">.</span>removeAll(routeTemplateDefinitions);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ppalaga", "createdAt": "2020-07-31T07:38:36Z", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+                return route;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        if (routeTemplateDefinitions == null || routeTemplateDefinitions.isEmpty()) {\n+            return;\n+        }\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);", "originalCommit": "c7cdf2339215aec0ca2fca7235e3b79ce2146072", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8deb8ca920794c224cdf8fa1a584ec31f427e4", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex e08704eee9..ce7fd3ff1d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -137,12 +139,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.remove(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "f4fe535aea5718f54efd8057cca580c4f42ffe0b", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex ce7fd3ff1d..8a6eab216b 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -144,7 +144,7 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        this.routeTemplateDefinitions.remove(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "9574eb269da786dcfe3fb2709f2625d45ad87d57", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex 8a6eab216b..058901db2d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -139,12 +148,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": {"commit": "4d2a0f7be8727317df90f84410fce39d7f47afe5", "changed_code": [{"header": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\nindex 058901db2d..8bc65dc37d 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java\n", "chunk": "@@ -148,12 +150,12 @@ public abstract class BaseModel implements Model {\n \n     @Override\n     public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n-        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.add(routeTemplateDefinition);\n     }\n \n     @Override\n     public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n-        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n+        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n     }\n \n     @Override\n", "next_change": null}]}}]}}]}}]}}, {"oid": "3c8deb8ca920794c224cdf8fa1a584ec31f427e4", "url": "https://github.com/apache/camel-quarkus/commit/3c8deb8ca920794c224cdf8fa1a584ec31f427e4", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-07-31T08:16:33Z", "type": "forcePushed"}, {"oid": "f4fe535aea5718f54efd8057cca580c4f42ffe0b", "url": "https://github.com/apache/camel-quarkus/commit/f4fe535aea5718f54efd8057cca580c4f42ffe0b", "message": "Fixed setter and getter for RouteTemplateDefinition + small optimization", "committedDate": "2020-07-31T11:09:49Z", "type": "forcePushed"}, {"oid": "9574eb269da786dcfe3fb2709f2625d45ad87d57", "url": "https://github.com/apache/camel-quarkus/commit/9574eb269da786dcfe3fb2709f2625d45ad87d57", "message": "Extension for camel-threadpoolfactory-vertx #1430", "committedDate": "2020-08-17T09:58:56Z", "type": "commit"}, {"oid": "4d2a0f7be8727317df90f84410fce39d7f47afe5", "url": "https://github.com/apache/camel-quarkus/commit/4d2a0f7be8727317df90f84410fce39d7f47afe5", "message": "Fixed setter and getter for RouteTemplateDefinition + small optimization", "committedDate": "2020-08-17T09:59:12Z", "type": "commit"}, {"oid": "4d2a0f7be8727317df90f84410fce39d7f47afe5", "url": "https://github.com/apache/camel-quarkus/commit/4d2a0f7be8727317df90f84410fce39d7f47afe5", "message": "Fixed setter and getter for RouteTemplateDefinition + small optimization", "committedDate": "2020-08-17T09:59:12Z", "type": "forcePushed"}]}