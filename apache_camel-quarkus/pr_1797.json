{"pr_number": 1797, "pr_title": "gRPC native support", "pr_author": "jamesnetherton", "pr_createdAt": "2020-09-15T18:37:43Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1797", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg5NTYwMg==", "url": "https://github.com/apache/camel-quarkus/pull/1797#discussion_r488895602", "body": "```suggestion\r\n    void quarkusBindableServiceFactoryBean(BuildProducer<AdditionalBeanBuildItem> additionalBeans) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void QuarkusBindableServiceFactoryBean(BuildProducer<AdditionalBeanBuildItem> additionalBeans) {\n          \n          \n            \n                void quarkusBindableServiceFactoryBean(BuildProducer<AdditionalBeanBuildItem> additionalBeans) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">QuarkusBindableServiceFactoryBean</span>(<span class=\"pl-k\">BuildProducer&lt;<span class=\"pl-smi\">AdditionalBeanBuildItem</span>&gt;</span> additionalBeans) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">quarkusBindableServiceFactoryBean</span>(<span class=\"pl-k\">BuildProducer&lt;<span class=\"pl-smi\">AdditionalBeanBuildItem</span>&gt;</span> additionalBeans) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ppalaga", "createdAt": "2020-09-15T18:56:36Z", "path": "extensions/grpc/deployment/src/main/java/org/apache/camel/quarkus/component/grpc/deployment/GrpcProcessor.java", "diffHunk": "@@ -0,0 +1,243 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.grpc.deployment;\n+\n+import java.lang.reflect.Modifier;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.inject.Singleton;\n+\n+import io.grpc.BindableService;\n+import io.grpc.stub.AbstractAsyncStub;\n+import io.grpc.stub.AbstractBlockingStub;\n+import io.grpc.stub.AbstractFutureStub;\n+import io.grpc.stub.StreamObserver;\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.GeneratedBeanBuildItem;\n+import io.quarkus.arc.deployment.GeneratedBeanGizmoAdaptor;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.annotations.ExecutionTime;\n+import io.quarkus.deployment.annotations.Record;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.gizmo.ClassCreator;\n+import io.quarkus.gizmo.FieldCreator;\n+import io.quarkus.gizmo.MethodCreator;\n+import io.quarkus.gizmo.MethodDescriptor;\n+import io.quarkus.gizmo.ResultHandle;\n+import io.quarkus.grpc.deployment.BindableServiceBuildItem;\n+import org.apache.camel.component.grpc.GrpcComponent;\n+import org.apache.camel.component.grpc.server.GrpcMethodHandler;\n+import org.apache.camel.quarkus.core.deployment.spi.CamelBeanBuildItem;\n+import org.apache.camel.quarkus.grpc.runtime.CamelGrpcRecorder;\n+import org.apache.camel.quarkus.grpc.runtime.CamelQuarkusBindableService;\n+import org.apache.camel.quarkus.grpc.runtime.QuarkusBindableServiceFactory;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+import org.jboss.jandex.Type;\n+\n+class GrpcProcessor {\n+\n+    private static final DotName BINDABLE_SERVICE_DOT_NAME = DotName.createSimple(BindableService.class.getName());\n+    private static final DotName[] STUB_CLASS_DOT_NAMES = new DotName[] {\n+            DotName.createSimple(AbstractAsyncStub.class.getName()),\n+            DotName.createSimple(AbstractBlockingStub.class.getName()),\n+            DotName.createSimple(AbstractFutureStub.class.getName())\n+    };\n+    private static final String FEATURE = \"camel-grpc\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    void registerForReflection(BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n+            CombinedIndexBuildItem combinedIndexBuildItem) {\n+\n+        IndexView index = combinedIndexBuildItem.getIndex();\n+        for (DotName dotName : STUB_CLASS_DOT_NAMES) {\n+            index.getAllKnownSubclasses(dotName)\n+                    .stream()\n+                    .map(classInfo -> new ReflectiveClassBuildItem(true, false, classInfo.name().toString()))\n+                    .forEach(reflectiveClass::produce);\n+        }\n+    }\n+\n+    @BuildStep\n+    void createBindableServiceBeans(\n+            BuildProducer<GeneratedBeanBuildItem> generatedBean,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n+            BuildProducer<BindableServiceBuildItem> bindableService,\n+            CombinedIndexBuildItem combinedIndexBuildItem) {\n+\n+        Set<String> services = generateBindableServiceBeans(generatedBean, reflectiveClass, combinedIndexBuildItem.getIndex());\n+        services.stream()\n+                .map(DotName::createSimple)\n+                .map(BindableServiceBuildItem::new)\n+                .forEach(bindableService::produce);\n+    }\n+\n+    @BuildStep\n+    void QuarkusBindableServiceFactoryBean(BuildProducer<AdditionalBeanBuildItem> additionalBeans) {", "originalCommit": "ed282f9a3721819e0fd6dc0a8f9deb3636907f5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE4OTUwMA==", "url": "https://github.com/apache/camel-quarkus/pull/1797#discussion_r489189500", "bodyText": "Good catch. I'll fix.", "author": "jamesnetherton", "createdAt": "2020-09-16T06:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg5NTYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMDk2MA==", "url": "https://github.com/apache/camel-quarkus/pull/1797#discussion_r488900960", "body": "I wonder if we eventually want to avoid overriding the Camel component?", "bodyText": "I wonder if we eventually want to avoid overriding the Camel component?", "bodyHTML": "<p dir=\"auto\">I wonder if we eventually want to avoid overriding the Camel component?</p>", "author": "ppalaga", "createdAt": "2020-09-15T19:04:20Z", "path": "extensions/grpc/runtime/src/main/java/org/apache/camel/quarkus/grpc/runtime/CamelGrpcRecorder.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.grpc.runtime;\n+\n+import java.util.Map;\n+\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.annotations.Recorder;\n+import org.apache.camel.Consumer;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Processor;\n+import org.apache.camel.component.grpc.GrpcComponent;\n+import org.apache.camel.component.grpc.GrpcConfiguration;\n+import org.apache.camel.component.grpc.GrpcConsumer;\n+import org.apache.camel.component.grpc.GrpcEndpoint;\n+import org.apache.camel.component.grpc.server.BindableServiceFactory;\n+import org.apache.camel.spi.annotations.Component;\n+import org.apache.camel.support.CamelContextHelper;\n+import org.apache.camel.support.service.ServiceHelper;\n+\n+import static org.apache.camel.component.grpc.GrpcConstants.GRPC_BINDABLE_SERVICE_FACTORY_NAME;\n+\n+@Recorder\n+public class CamelGrpcRecorder {\n+\n+    public RuntimeValue<GrpcComponent> createGrpcComponent() {\n+        return new RuntimeValue<>(new QuarkusGrpcComponent());\n+    }\n+\n+    @Component(\"grpc\")\n+    static final class QuarkusGrpcComponent extends GrpcComponent {", "originalCommit": "ed282f9a3721819e0fd6dc0a8f9deb3636907f5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE4OTU2Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1797#discussion_r489189563", "bodyText": "Yes, I want to do some follow up investigation / rework of the Camel component to try and avoid this stuff.", "author": "jamesnetherton", "createdAt": "2020-09-16T06:20:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwMDk2MA=="}], "type": "inlineReview"}, {"oid": "a2bf708549544adf5e9cabc259b1d1ba4ba30255", "url": "https://github.com/apache/camel-quarkus/commit/a2bf708549544adf5e9cabc259b1d1ba4ba30255", "message": "gRPC native support\n\nFixes #762", "committedDate": "2020-09-16T06:19:29Z", "type": "commit"}, {"oid": "a2bf708549544adf5e9cabc259b1d1ba4ba30255", "url": "https://github.com/apache/camel-quarkus/commit/a2bf708549544adf5e9cabc259b1d1ba4ba30255", "message": "gRPC native support\n\nFixes #762", "committedDate": "2020-09-16T06:19:29Z", "type": "forcePushed"}]}