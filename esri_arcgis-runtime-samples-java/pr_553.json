{"pr_number": 553, "pr_title": "New Sample: Edit with branch versioning", "pr_author": "jenmerritt", "pr_createdAt": "2020-09-10T13:55:41Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553", "timeline": [{"oid": "643fe8935c443ec25e83e8ef3174610cd2509304", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/643fe8935c443ec25e83e8ef3174610cd2509304", "message": "setup file structure", "committedDate": "2020-09-02T09:34:21Z", "type": "commit"}, {"oid": "a166b7899b864d4f70b7b6fcd88702c0b9096b9b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a166b7899b864d4f70b7b6fcd88702c0b9096b9b", "message": "load feature layer", "committedDate": "2020-09-02T10:08:22Z", "type": "commit"}, {"oid": "8379d7827e73e88316624186d794ef051f35b0ed", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8379d7827e73e88316624186d794ef051f35b0ed", "message": "create and switch versions", "committedDate": "2020-09-03T11:22:00Z", "type": "commit"}, {"oid": "f17a4adbb7994ae82f76d97c4e20f1b3cce6a733", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f17a4adbb7994ae82f76d97c4e20f1b3cce6a733", "message": "ui layout, update and switch", "committedDate": "2020-09-04T14:43:37Z", "type": "commit"}, {"oid": "8f49b8a2be34316c649ca0f0be41be1db68e126c", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8f49b8a2be34316c649ca0f0be41be1db68e126c", "message": "update geometry functionality", "committedDate": "2020-09-08T15:54:09Z", "type": "commit"}, {"oid": "67e9e5fccbf455a276c1c012d2f154706210a484", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/67e9e5fccbf455a276c1c012d2f154706210a484", "message": "refactor methods", "committedDate": "2020-09-10T10:30:56Z", "type": "commit"}, {"oid": "0ea34e800d1adf418c1db2a756625937fde132fe", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0ea34e800d1adf418c1db2a756625937fde132fe", "message": "tidy up spacing and comments", "committedDate": "2020-09-10T12:39:00Z", "type": "commit"}, {"oid": "2e12a14c294f6b768731725d2d281e2a12099509", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2e12a14c294f6b768731725d2d281e2a12099509", "message": "update readme and add screenshot", "committedDate": "2020-09-10T13:08:38Z", "type": "commit"}, {"oid": "ad82e32a668af85b12891b40df1679aae2f8f3f9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ad82e32a668af85b12891b40df1679aae2f8f3f9", "message": "update metadata file with script", "committedDate": "2020-09-10T13:46:02Z", "type": "commit"}, {"oid": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "message": "correction to metadata file", "committedDate": "2020-09-10T13:49:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNzA2MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486407061", "body": "There's an extra newline here that could be deleted", "bodyText": "There's an extra newline here that could be deleted", "bodyHTML": "<p dir=\"auto\">There's an extra newline here that could be deleted</p>", "author": "JonLavi", "createdAt": "2020-09-10T14:51:07Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningSample.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class EditWithBranchVersioningSample extends Application {\n+\n+  private static EditWithBranchVersioningController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_with_branch_versioning/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add scene to stage\n+    stage.setTitle(\"Edit With Branch Versioning Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQwNzE4Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486407183", "body": "Another newline I think we could delete", "bodyText": "Another newline I think we could delete", "bodyHTML": "<p dir=\"auto\">Another newline I think we could delete</p>", "author": "JonLavi", "createdAt": "2020-09-10T14:51:17Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningSample.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class EditWithBranchVersioningSample extends Application {\n+\n+  private static EditWithBranchVersioningController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/edit_with_branch_versioning/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add scene to stage\n+    stage.setTitle(\"Edit With Branch Versioning Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+\n+  }\n+\n+  /**\n+   * Stops and releases all resources used in application.\n+   */\n+  @Override\n+  public void stop() {\n+    controller.terminate();\n+  }\n+\n+  /**\n+   * Opens and runs application.\n+   *\n+   * @param args arguments passed to this application\n+   */\n+  public static void main(String[] args) {\n+\n+    Application.launch(args);\n+  }\n+", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyMjg1Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486422852", "body": "A better way to check if a collection is empty is `.isEmpty()`:\r\n```suggestion\r\n            if (edits == null || edits.isEmpty()) {\r\n```", "bodyText": "A better way to check if a collection is empty is .isEmpty():\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (edits == null || edits.size() == 0) {\n          \n          \n            \n                        if (edits == null || edits.isEmpty()) {", "bodyHTML": "<p dir=\"auto\">A better way to check if a collection is empty is <code>.isEmpty()</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> edits<span class=\"pl-k\">.</span><span class=\"x x-first\">size() </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> edits<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:12:10Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyMzY0MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486423641", "body": "Let's just make sure this is alphabetised:\r\n\r\n```suggestion\r\nimport javafx.fxml.FXML;\r\nimport javafx.geometry.Point2D;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.ProgressIndicator;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.input.MouseButton;\r\nimport javafx.scene.layout.VBox;\r\n```", "bodyText": "Let's just make sure this is alphabetised:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import javafx.fxml.FXML;\n          \n          \n            \n            import javafx.scene.control.Alert;\n          \n          \n            \n            import javafx.scene.control.Button;\n          \n          \n            \n            import javafx.scene.control.ComboBox;\n          \n          \n            \n            import javafx.scene.control.Label;\n          \n          \n            \n            import javafx.scene.control.ProgressIndicator;\n          \n          \n            \n            import javafx.scene.control.TextField;\n          \n          \n            \n            import javafx.scene.input.MouseButton;\n          \n          \n            \n            import javafx.scene.layout.VBox;\n          \n          \n            \n            import javafx.geometry.Point2D;\n          \n          \n            \n            import javafx.fxml.FXML;\n          \n          \n            \n            import javafx.geometry.Point2D;\n          \n          \n            \n            import javafx.scene.control.Alert;\n          \n          \n            \n            import javafx.scene.control.Button;\n          \n          \n            \n            import javafx.scene.control.ComboBox;\n          \n          \n            \n            import javafx.scene.control.Label;\n          \n          \n            \n            import javafx.scene.control.ProgressIndicator;\n          \n          \n            \n            import javafx.scene.control.TextField;\n          \n          \n            \n            import javafx.scene.input.MouseButton;\n          \n          \n            \n            import javafx.scene.layout.VBox;", "bodyHTML": "<p dir=\"auto\">Let's just make sure this is alphabetised:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.fxml.FXML</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.<span class=\"x x-first x-last\">scene.control.Alert</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">Button</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">ComboBox</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">Label</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">ProgressIndicator</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">TextField</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.<span class=\"x x-first x-last\">input.MouseButton</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.<span class=\"x x-first x-last\">layout.VBox</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.<span class=\"x x-first x-last\">geometry.Point2D</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.fxml.FXML</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.<span class=\"x x-first x-last\">geometry.Point2D</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">Alert</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">Button</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">ComboBox</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">Label</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.control.<span class=\"x x-first x-last\">ProgressIndicator</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.<span class=\"x x-first x-last\">control.TextField</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.scene.<span class=\"x x-first x-last\">input.MouseButton</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">javafx.<span class=\"x x-first x-last\">scene.layout.VBox</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:13:17Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDExMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486424113", "body": "```suggestion\r\n          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n          \n          \n            \n                      if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">if</span>(selectedFeature <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(defaultVersion)){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(selectedFeature <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(defaultVersion))<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:13:58Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDM2Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486424367", "body": "```suggestion\r\n    } else if (name.getText().length() > 0 && Character.isWhitespace(name.getText().charAt(0))) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n          \n          \n            \n                } else if (name.getText().length() > 0 && Character.isWhitespace(name.getText().charAt(0))) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (name<span class=\"pl-k\">.</span>getText()<span class=\"pl-k\">.</span>length()<span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Character</span><span class=\"pl-k\">.</span>isWhitespace(name<span class=\"pl-k\">.</span>getText()<span class=\"pl-k\">.</span>charAt(<span class=\"pl-c1\">0</span>))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (name<span class=\"pl-k\">.</span>getText()<span class=\"pl-k\">.</span>length()<span class=\"x x-first x-last\"> </span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Character</span><span class=\"pl-k\">.</span>isWhitespace(name<span class=\"pl-k\">.</span>getText()<span class=\"pl-k\">.</span>charAt(<span class=\"pl-c1\">0</span>))) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:14:17Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNTAyNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486425026", "body": "```suggestion\r\n  private void selectFeature(Point2D point) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void selectFeature(Point2D point){\n          \n          \n            \n              private void selectFeature(Point2D point) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> selectFeature(<span class=\"pl-smi\">Point2D</span> point){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> selectFeature(<span class=\"pl-smi\">Point2D</span> point)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:15:08Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point){", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNTUyMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486425522", "body": "```suggestion\r\n  void terminate() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void terminate () {\n          \n          \n            \n              void terminate() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">void</span> terminate<span class=\"x x-first x-last\"> </span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">void</span> terminate() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T15:15:48Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point){\n+    ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    results.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult layer = results.get();\n+        List<GeoElement> identified = layer.getElements();\n+        if (!identified.isEmpty()) {\n+          GeoElement element = identified.get(0);\n+          if (element instanceof ArcGISFeature) {\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.loadAsync();\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+                // when a feature has been selected set the damage combo box to the feature's attribute value\n+                damageTypeComboBox.getSelectionModel().select((String) selectedFeature.getAttributes().get(\"typdamage\"));\n+\n+                // enable feature editing UI if not on the default branch version\n+                if (!serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+                  editFeatureVBox.setDisable(false);\n+                }\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature failed to load.\").show();\n+              }\n+            });\n+          }\n+        }\n+      } catch (InterruptedException | ExecutionException e) {\n+        new Alert(Alert.AlertType.ERROR, \"Exception getting identify result\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Update the selected feature in the service feature table\n+   *\n+   * @param selectedFeature the selected feature to be updated\n+   */\n+  private void updateFeature(ArcGISFeature selectedFeature) {\n+    if (serviceFeatureTable.canUpdate(selectedFeature) && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // update the feature in the feature table\n+      ListenableFuture<Void> editResult = serviceFeatureTable.updateFeatureAsync(selectedFeature);\n+      editResult.addDoneListener(() -> {\n+        Alert alert = new Alert(Alert.AlertType.INFORMATION);\n+        alert.setHeaderText(\"Feature updated\");\n+        alert.setContentText(\"Changes will be synced to the service geodatabase\\nwhen you switch branch.\");\n+        alert.show();\n+      });\n+    } else {\n+      new Alert(Alert.AlertType.ERROR, \"Feature cannot be updated\").show();\n+    }\n+  }\n+\n+  /**\n+   * Disposes application resources.\n+   */\n+  void terminate () {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2MTg0MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486461840", "body": "Maybe it'd be helpful to sort the items in each block alphabetically? It kind of makes it easier to find a specific element.", "bodyText": "Maybe it'd be helpful to sort the items in each block alphabetically? It kind of makes it easier to find a specific element.", "bodyHTML": "<p dir=\"auto\">Maybe it'd be helpful to sort the items in each block alphabetically? It kind of makes it easier to find a specific element.</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:05:42Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2Mzk3MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486463970", "body": "All these variables are used in several methods, so I think they would have to be class members anyway? What I'm getting at is that the comment about GC is possibly not necessary. I don't remember the exact details about the GC bug though, so I might be wrong!", "bodyText": "All these variables are used in several methods, so I think they would have to be class members anyway? What I'm getting at is that the comment about GC is possibly not necessary. I don't remember the exact details about the GC bug though, so I might be wrong!", "bodyHTML": "<p dir=\"auto\">All these variables are used in several methods, so I think they would have to be class members anyway? What I'm getting at is that the comment about GC is possibly not necessary. I don't remember the exact details about the GC bug though, so I might be wrong!</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:08:25Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MTYwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490851601", "bodyText": "@Rachael-E maybe we can get consensus on when to add the comment and when not, then I can add to the contrib guidelines.", "author": "jenmerritt", "createdAt": "2020-09-18T10:25:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2Mzk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4NDY4Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497584682", "bodyText": "@jenmerritt Good question! If the only reason that we are making the variable a class member is to protect against GC, then we need a comment here to explain why. If however the class variable is there because it is being used multiple times within the class across multiple methods, then the comment is not necessary.", "author": "Rachael-E", "createdAt": "2020-09-30T15:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2Mzk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMTI2MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r498721261", "bodyText": "Thanks! I've added a note to the contrib guide for consistency going forward.", "author": "jenmerritt", "createdAt": "2020-10-02T09:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2Mzk3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NTEwMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486465103", "body": "You can do this in the fxml file by adding `disable=\"true\"`. That parameter would apply to the elements when the app is started up, and will then be overwritten when the state changes (e.g. through the method calls)", "bodyText": "You can do this in the fxml file by adding disable=\"true\". That parameter would apply to the elements when the app is started up, and will then be overwritten when the state changes (e.g. through the method calls)", "bodyHTML": "<p dir=\"auto\">You can do this in the fxml file by adding <code>disable=\"true\"</code>. That parameter would apply to the elements when the app is started up, and will then be overwritten when the state changes (e.g. through the method calls)</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:10:03Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2OTU4NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486469584", "body": "In previous samples we didn't chop longer lines because of URLs. So in theory we could write this on one line, but I'm not too fussed either way", "bodyText": "In previous samples we didn't chop longer lines because of URLs. So in theory we could write this on one line, but I'm not too fussed either way", "bodyHTML": "<p dir=\"auto\">In previous samples we didn't chop longer lines because of URLs. So in theory we could write this on one line, but I'm not too fussed either way</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:16:48Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3MDgyMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486470820", "body": "Not sure about whether an established pattern exists for this kind of operation. In some other samples we do `.addDoneLoadingListener()` first, then call `.loadAsync()`. Again, I'm not too fussed which way it goes, but would be nice if it were consistent \ud83d\ude04 Maybe add something to the contribution guide as well, once this is decided?\r\n\r\nBecause we do things with async operations in this order (async call first, then add listener):\r\n```\r\nListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\r\nresultOfApplyEdits.addDoneListener(() -> {\r\n```\r\nIt might be best to do it the way you have here (loadAsync first, then add listener).\r\nI think we could add this to the contribution guide, and perhaps even make an issue for technical debt to make this all consistent", "bodyText": "Not sure about whether an established pattern exists for this kind of operation. In some other samples we do .addDoneLoadingListener() first, then call .loadAsync(). Again, I'm not too fussed which way it goes, but would be nice if it were consistent \ud83d\ude04 Maybe add something to the contribution guide as well, once this is decided?\nBecause we do things with async operations in this order (async call first, then add listener):\nListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\nresultOfApplyEdits.addDoneListener(() -> {\n\nIt might be best to do it the way you have here (loadAsync first, then add listener).\nI think we could add this to the contribution guide, and perhaps even make an issue for technical debt to make this all consistent", "bodyHTML": "<p dir=\"auto\">Not sure about whether an established pattern exists for this kind of operation. In some other samples we do <code>.addDoneLoadingListener()</code> first, then call <code>.loadAsync()</code>. Again, I'm not too fussed which way it goes, but would be nice if it were consistent <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji> Maybe add something to the contribution guide as well, once this is decided?</p>\n<p dir=\"auto\">Because we do things with async operations in this order (async call first, then add listener):</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ListenableFuture&lt;List&lt;FeatureTableEditResult&gt;&gt; resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\nresultOfApplyEdits.addDoneListener(() -&gt; {\"><pre><code>ListenableFuture&lt;List&lt;FeatureTableEditResult&gt;&gt; resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\nresultOfApplyEdits.addDoneListener(() -&gt; {\n</code></pre></div>\n<p dir=\"auto\">It might be best to do it the way you have here (loadAsync first, then add listener).<br>\nI think we could add this to the contribution guide, and perhaps even make an issue for technical debt to make this all consistent</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:18:45Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5MTM5Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486891396", "bodyText": "Yes this came up in our session earlier this week - and basically exactly what you said! Either way is fine but we should be consistent and seems like the consensus is to call the async first then listener. I will make sure this is added to the contribution guidelines.", "author": "jenmerritt", "createdAt": "2020-09-11T09:12:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3MDgyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NDM5Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486474396", "body": "technically we're not hiding the `progressIndicator` if this error message is hit. Not that it matters, because if we got this far the samples is not very useful anyway \ud83d\ude1b . \r\nIf you wanted, you could put the line hiding the indicator (128) directly beneath line 123 \r\n```\r\n(`featureLayer.addDoneLoadingListener(() -> {)\r\n```\r\nThat way, the indicator disappears as soon as the layer is 'done' loading, regardless of which `LoadStatus` comes back.\r\n\r\nThis is being a bit pedantic though - maybe samples readability is better with the call on `progressIndicator` where it is right now", "bodyText": "technically we're not hiding the progressIndicator if this error message is hit. Not that it matters, because if we got this far the samples is not very useful anyway \ud83d\ude1b .\nIf you wanted, you could put the line hiding the indicator (128) directly beneath line 123\n(`featureLayer.addDoneLoadingListener(() -> {)\n\nThat way, the indicator disappears as soon as the layer is 'done' loading, regardless of which LoadStatus comes back.\nThis is being a bit pedantic though - maybe samples readability is better with the call on progressIndicator where it is right now", "bodyHTML": "<p dir=\"auto\">technically we're not hiding the <code>progressIndicator</code> if this error message is hit. Not that it matters, because if we got this far the samples is not very useful anyway <g-emoji class=\"g-emoji\" alias=\"stuck_out_tongue\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png\">\ud83d\ude1b</g-emoji> .<br>\nIf you wanted, you could put the line hiding the indicator (128) directly beneath line 123</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"(`featureLayer.addDoneLoadingListener(() -&gt; {)\"><pre><code>(`featureLayer.addDoneLoadingListener(() -&gt; {)\n</code></pre></div>\n<p dir=\"auto\">That way, the indicator disappears as soon as the layer is 'done' loading, regardless of which <code>LoadStatus</code> comes back.</p>\n<p dir=\"auto\">This is being a bit pedantic though - maybe samples readability is better with the call on <code>progressIndicator</code> where it is right now</p>", "author": "JonLavi", "createdAt": "2020-09-10T16:24:16Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNzk2OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490227968", "bodyText": "As discussed, progress indicator is hidden on the geodatabase failing to load but not for feature layer / table for readability.", "author": "jenmerritt", "createdAt": "2020-09-17T13:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NDM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NjMxMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486476311", "body": "Let's add a comment here to tell the users roughly what's going on in the block, something along the lines of :\r\n```suggestion\r\n\t  // listen to clicks on the map to select or move features\r\n      mapView.setOnMouseClicked(event -> {\r\n```", "bodyText": "Let's add a comment here to tell the users roughly what's going on in the block, something along the lines of :\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  mapView.setOnMouseClicked(event -> {\n          \n          \n            \n            \t  // listen to clicks on the map to select or move features\n          \n          \n            \n                  mapView.setOnMouseClicked(event -> {", "bodyHTML": "<p dir=\"auto\">Let's add a comment here to tell the users roughly what's going on in the block, something along the lines of :</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"132\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">      mapView</span><span class=\"pl-k x\">.</span><span class=\"x\">setOnMouseClicked(event </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"132\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">\t  </span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> listen to clicks on the map to select or move features</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"133\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      mapView<span class=\"pl-k\">.</span>setOnMouseClicked(event <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T16:27:07Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NjYwNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486476607", "body": "Technically we're not just selectin 'a' feature, but the one we clicked on:\r\n```suggestion\r\n          // select the clicked feature\r\n```", "bodyText": "Technically we're not just selectin 'a' feature, but the one we clicked on:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // select a feature\n          \n          \n            \n                      // select the clicked feature", "bodyHTML": "<p dir=\"auto\">Technically we're not just selectin 'a' feature, but the one we clicked on:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-c\"><span class=\"pl-c\">//</span> select <span class=\"x x-first x-last\">a</span> feature</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-c\"><span class=\"pl-c\">//</span> select <span class=\"x x-first x-last\">the clicked</span> feature</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T16:27:34Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3ODU5NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486478595", "body": "We could call this var 'point' as well, because there wouldn't be any clash with the variable defined above (it's in a different scope). However I see the benefit for users to give this a different name, so I wouldn't mind leaving it as is as well.\r\n\r\n```suggestion\r\n            Point2D point = new Point2D(event.getX(), event.getY());\r\n            Point mapPoint = mapView.screenToLocation(point);\r\n```", "bodyText": "We could call this var 'point' as well, because there wouldn't be any clash with the variable defined above (it's in a different scope). However I see the benefit for users to give this a different name, so I wouldn't mind leaving it as is as well.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n          \n          \n            \n                        Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n          \n          \n            \n                        Point2D point = new Point2D(event.getX(), event.getY());\n          \n          \n            \n                        Point mapPoint = mapView.screenToLocation(point);", "bodyHTML": "<p dir=\"auto\">We could call this var 'point' as well, because there wouldn't be any clash with the variable defined above (it's in a different scope). However I see the benefit for users to give this a different name, so I wouldn't mind leaving it as is as well.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Point2D</span> <span class=\"x x-first x-last\">secondaryClickPoint</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Point2D</span>(event<span class=\"pl-k\">.</span>getX(), event<span class=\"pl-k\">.</span>getY());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Point</span> mapPoint <span class=\"pl-k\">=</span> mapView<span class=\"pl-k\">.</span>screenToLocation(<span class=\"x x-first x-last\">secondaryClickPoint</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Point2D</span> <span class=\"x x-first x-last\">point</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Point2D</span>(event<span class=\"pl-k\">.</span>getX(), event<span class=\"pl-k\">.</span>getY());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Point</span> mapPoint <span class=\"pl-k\">=</span> mapView<span class=\"pl-k\">.</span>screenToLocation(<span class=\"x x-first x-last\">point</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-10T16:30:47Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5NDc4OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486894789", "bodyText": "I think I prefer just 'point' in hindsight. It's pretty blatantly in a separate block and simplifies the number of words!", "author": "jenmerritt", "createdAt": "2020-09-11T09:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3ODU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyMjI3Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486822272", "body": "Lets be a bit more specific with these variable names and call them `nameTextField`, etc. \r\nI noticed these in the code below and it said `name.getText()`, which was a bit confusing without knowing what king of object `name` was.", "bodyText": "Lets be a bit more specific with these variable names and call them nameTextField, etc.\nI noticed these in the code below and it said name.getText(), which was a bit confusing without knowing what king of object name was.", "bodyHTML": "<p dir=\"auto\">Lets be a bit more specific with these variable names and call them <code>nameTextField</code>, etc.<br>\nI noticed these in the code below and it said <code>name.getText()</code>, which was a bit confusing without knowing what king of object <code>name</code> was.</p>", "author": "JonLavi", "createdAt": "2020-09-11T07:19:25Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyMzU0MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486823541", "body": "I think it would be helpful to elaborate on this message to tell the user why their input is invalid (e.g. \r\n```\r\nThe name cannot contain the following characters:  \r\n. ; ' \\ \r\n```", "bodyText": "I think it would be helpful to elaborate on this message to tell the user why their input is invalid (e.g.\nThe name cannot contain the following characters:  \n. ; ' \\", "bodyHTML": "<p dir=\"auto\">I think it would be helpful to elaborate on this message to tell the user why their input is invalid (e.g.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"The name cannot contain the following characters:  \n. ; ' \\ \"><pre><code>The name cannot contain the following characters:  \n. ; ' \\ \n</code></pre></div>", "author": "JonLavi", "createdAt": "2020-09-11T07:22:03Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyNTIwNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486825205", "bodyText": "Also wondering, can it contain other special characters? e.g. $%&*, etc?\nMight be easier to just restrict the input to roman letters (Maybe there's a method for it, like .isWhitespace?).", "author": "JonLavi", "createdAt": "2020-09-11T07:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyMzU0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkwODg0Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486908843", "bodyText": "Other special characters are fine. I've amended the error message to be more explicit, definitely better for the user!", "author": "jenmerritt", "createdAt": "2020-09-11T09:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyMzU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyNjQ3MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486826470", "body": "The is a very clear way of limiting the input, and the resulting message is also very helpful.\r\nIn case you were interested, there's also the option of adding a listener to the TextField, to stop users from typing in invalid characters alltogether:\r\nhttps://stackoverflow.com/questions/15615890/recommended-way-to-restrict-input-in-javafx-textfield\r\n\r\nI always find it a bit frustrating though when I try and type into a field and no characters appear, so much prefer the way you did it here (giving an error when trying to submit).", "bodyText": "The is a very clear way of limiting the input, and the resulting message is also very helpful.\nIn case you were interested, there's also the option of adding a listener to the TextField, to stop users from typing in invalid characters alltogether:\nhttps://stackoverflow.com/questions/15615890/recommended-way-to-restrict-input-in-javafx-textfield\nI always find it a bit frustrating though when I try and type into a field and no characters appear, so much prefer the way you did it here (giving an error when trying to submit).", "bodyHTML": "<p dir=\"auto\">The is a very clear way of limiting the input, and the resulting message is also very helpful.<br>\nIn case you were interested, there's also the option of adding a listener to the TextField, to stop users from typing in invalid characters alltogether:<br>\n<a href=\"https://stackoverflow.com/questions/15615890/recommended-way-to-restrict-input-in-javafx-textfield\" rel=\"nofollow\">https://stackoverflow.com/questions/15615890/recommended-way-to-restrict-input-in-javafx-textfield</a></p>\n<p dir=\"auto\">I always find it a bit frustrating though when I try and type into a field and no characters appear, so much prefer the way you did it here (giving an error when trying to submit).</p>", "author": "JonLavi", "createdAt": "2020-09-11T07:28:10Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxMDAxMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486910012", "bodyText": "Thanks - will save that link. Agree I think it works in this case to validate after but might come in for a future sample \ud83d\udc4d", "author": "jenmerritt", "createdAt": "2020-09-11T09:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyNjQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyNzIxOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486827219", "body": "The parameters are named `newVersionParameters`, so perhaps it'd be more consistent to call this variable `newVersion`?", "bodyText": "The parameters are named newVersionParameters, so perhaps it'd be more consistent to call this variable newVersion?", "bodyHTML": "<p dir=\"auto\">The parameters are named <code>newVersionParameters</code>, so perhaps it'd be more consistent to call this variable <code>newVersion</code>?</p>", "author": "JonLavi", "createdAt": "2020-09-11T07:29:48Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODYwOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486828609", "body": "I think a newline here would help separate these two blocks a bit better\r\n```suggestion\r\n        switchVersionButton.setDisable(false);\r\n\r\n      } catch (Exception ex) {\r\n```", "bodyText": "I think a newline here would help separate these two blocks a bit better\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    switchVersionButton.setDisable(false);\n          \n          \n            \n                  } catch (Exception ex) {\n          \n          \n            \n                    switchVersionButton.setDisable(false);\n          \n          \n            \n            \n          \n          \n            \n                  } catch (Exception ex) {", "bodyHTML": "<p dir=\"auto\">I think a newline here would help separate these two blocks a bit better</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"199\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        switchVersionButton<span class=\"pl-k\">.</span>setDisable(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"200\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> ex) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"199\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        switchVersionButton<span class=\"pl-k\">.</span>setDisable(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"200\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"201\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> ex) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T07:32:45Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyOTIzNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486829235", "body": "This error message might be a bit confusing. If the user doesn't know the version name already exists, they might be under the impression that it's 'unique' and wouldn't know why it should'nt be? We could elaborate:\r\n```suggestion\r\n          new Alert(Alert.AlertType.ERROR, \"A service version with this name already exists. Please enter a unique version name\").show();\r\n```", "bodyText": "This error message might be a bit confusing. If the user doesn't know the version name already exists, they might be under the impression that it's 'unique' and wouldn't know why it should'nt be? We could elaborate:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n          \n          \n            \n                      new Alert(Alert.AlertType.ERROR, \"A service version with this name already exists. Please enter a unique version name\").show();", "bodyHTML": "<p dir=\"auto\">This error message might be a bit confusing. If the user doesn't know the version name already exists, they might be under the impression that it's 'unique' and wouldn't know why it should'nt be? We could elaborate:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Please enter a unique version name<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">A service version with this name already exists. </span>Please enter a unique version name<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T07:34:14Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxMTU5OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486911598", "bodyText": "Like it \ud83d\udc4d", "author": "jenmerritt", "createdAt": "2020-09-11T09:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyOTIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNDQ1MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486834450", "body": "Perhaps it would be a bit easier to read if we got this 'simple' `if` case out of the way first, and then moved to the more complex one? \r\nReally just depends on the story you want to tell!\r\n\r\n```\r\nif (if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\r\n // do a small thing\r\n\r\n} else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\r\n // do the more complex thing\r\n}\r\n```", "bodyText": "Perhaps it would be a bit easier to read if we got this 'simple' if case out of the way first, and then moved to the more complex one?\nReally just depends on the story you want to tell!\nif (if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n // do a small thing\n\n} else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n // do the more complex thing\n}", "bodyHTML": "<p dir=\"auto\">Perhaps it would be a bit easier to read if we got this 'simple' <code>if</code> case out of the way first, and then moved to the more complex one?<br>\nReally just depends on the story you want to tell!</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n // do a small thing\n\n} else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n // do the more complex thing\n}\"><pre><code>if (if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n // do a small thing\n\n} else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n // do the more complex thing\n}\n</code></pre></div>", "author": "JonLavi", "createdAt": "2020-09-11T07:44:39Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyODM2NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490228365", "bodyText": "Have adjusted this.", "author": "jenmerritt", "createdAt": "2020-09-17T13:06:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNDQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNjUxOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486836519", "body": "Javadoc style annotation usually has full stops at the end. Looks like this applies to the rest of the javadoc as well, so remember to update them \ud83d\ude04 \r\n\r\n```suggestion\r\n   * Create a new branch version using user defined values.\r\n```", "bodyText": "Javadoc style annotation usually has full stops at the end. Looks like this applies to the rest of the javadoc as well, so remember to update them \ud83d\ude04\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Create a new branch version using user defined values\n          \n          \n            \n               * Create a new branch version using user defined values.", "bodyHTML": "<p dir=\"auto\">Javadoc style annotation usually has full stops at the end. Looks like this applies to the rest of the javadoc as well, so remember to update them <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Create</span> a <span class=\"pl-k\">new</span> branch version using user defined values</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Create</span> a <span class=\"pl-k\">new</span> branch version using user defined values<span class=\"x x-first x-last\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T07:48:33Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzODIxNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486838215", "body": "We should give the variables in here more recognisable names so it's easier to tell what class the objects are:\r\n```suggestion\r\n    ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\r\n    identifyLayerResultFuture.addDoneListener(() -> {\r\n      try {\r\n        IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\r\n        List<GeoElement> identifiedElements = identifyLayerResult.getElements();\r\n        if (!identifiedElements.isEmpty()) {\r\n          GeoElement element = identifiedElements.get(0);\r\n```", "bodyText": "We should give the variables in here more recognisable names so it's easier to tell what class the objects are:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n          \n          \n            \n                results.addDoneListener(() -> {\n          \n          \n            \n                  try {\n          \n          \n            \n                    IdentifyLayerResult layer = results.get();\n          \n          \n            \n                    List<GeoElement> identified = layer.getElements();\n          \n          \n            \n                    if (!identified.isEmpty()) {\n          \n          \n            \n                      GeoElement element = identified.get(0);\n          \n          \n            \n                ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n          \n          \n            \n                identifyLayerResultFuture.addDoneListener(() -> {\n          \n          \n            \n                  try {\n          \n          \n            \n                    IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n          \n          \n            \n                    List<GeoElement> identifiedElements = identifyLayerResult.getElements();\n          \n          \n            \n                    if (!identifiedElements.isEmpty()) {\n          \n          \n            \n                      GeoElement element = identifiedElements.get(0);", "bodyHTML": "<p dir=\"auto\">We should give the variables in here more recognisable names so it's easier to tell what class the objects are:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-smi\">IdentifyLayerResult</span>&gt;</span> <span class=\"x x-first x-last\">results</span> <span class=\"pl-k\">=</span> mapView<span class=\"pl-k\">.</span>identifyLayerAsync(featureLayer, point, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first x-last\">results</span><span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">IdentifyLayerResult</span> <span class=\"x x-first x-last\">layer</span> <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">results</span><span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">GeoElement</span>&gt;</span> <span class=\"x x-first x-last\">identified</span> <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">layer</span><span class=\"pl-k\">.</span>getElements();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"x x-first x-last\">identified</span><span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">GeoElement</span> element <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">identified</span><span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-smi\">IdentifyLayerResult</span>&gt;</span> <span class=\"x x-first x-last\">identifyLayerResultFuture</span> <span class=\"pl-k\">=</span> mapView<span class=\"pl-k\">.</span>identifyLayerAsync(featureLayer, point, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"x x-first x-last\">identifyLayerResultFuture</span><span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">IdentifyLayerResult</span> <span class=\"x x-first x-last\">identifyLayerResult</span> <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">identifyLayerResultFuture</span><span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">GeoElement</span>&gt;</span> <span class=\"x x-first x-last\">identifiedElements</span> <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">identifyLayerResult</span><span class=\"pl-k\">.</span>getElements();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"x x-first x-last\">identifiedElements</span><span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-smi\">GeoElement</span> element <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">identifiedElements</span><span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T07:51:53Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point){\n+    ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    results.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult layer = results.get();\n+        List<GeoElement> identified = layer.getElements();\n+        if (!identified.isEmpty()) {\n+          GeoElement element = identified.get(0);", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzOTE2NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486839165", "body": "This is quite a long statement, perhaps it'd be easier to recognise what's happening if we split it a bit:\r\n```suggestion\r\n\t\t\t\tString attributeValue = (String) selectedFeature.getAttributes().get(\"typdamage\");\r\n                damageTypeComboBox.getSelectionModel().select(attributeValue);\r\n```\r\n\r\nOverall this seems like quite a 'risky' way of correlating between the `attribute` and the item in the ComboBox. We'd have to know for 100% certainty that the result of the attribute exists within the combobox, otherwise the app would crash with quite a nasty error. \r\nMight be worth thinking about adding a method that checks `attributeValue` against the options available in the ComboBox, and returns an error if it doesn't exist? We know this wouldn't happen in our sample, but should a user borrow this code for their app, we might want to make sure there's some validation (which would be 'best practice'). If it complicates the sample too much, then it should be ok to just leave it.\r\n\r\n", "bodyText": "This is quite a long statement, perhaps it'd be easier to recognise what's happening if we split it a bit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            damageTypeComboBox.getSelectionModel().select((String) selectedFeature.getAttributes().get(\"typdamage\"));\n          \n          \n            \n            \t\t\t\tString attributeValue = (String) selectedFeature.getAttributes().get(\"typdamage\");\n          \n          \n            \n                            damageTypeComboBox.getSelectionModel().select(attributeValue);\n          \n      \n    \n    \n  \n\nOverall this seems like quite a 'risky' way of correlating between the attribute and the item in the ComboBox. We'd have to know for 100% certainty that the result of the attribute exists within the combobox, otherwise the app would crash with quite a nasty error.\nMight be worth thinking about adding a method that checks attributeValue against the options available in the ComboBox, and returns an error if it doesn't exist? We know this wouldn't happen in our sample, but should a user borrow this code for their app, we might want to make sure there's some validation (which would be 'best practice'). If it complicates the sample too much, then it should be ok to just leave it.", "bodyHTML": "<p dir=\"auto\">This is quite a long statement, perhaps it'd be easier to recognise what's happening if we split it a bit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">                damageTypeComboBox</span><span class=\"pl-k x\">.</span><span class=\"x\">getSelectionModel()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">select((</span><span class=\"pl-smi\">String</span>) selectedFeature<span class=\"pl-k\">.</span>getAttributes()<span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typdamage<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">\t\t\t\t</span><span class=\"pl-smi x\">String</span><span class=\"x\"> attributeValue </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> (</span><span class=\"pl-smi\">String</span>) selectedFeature<span class=\"pl-k\">.</span>getAttributes()<span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typdamage<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                damageTypeComboBox<span class=\"pl-k\">.</span>getSelectionModel()<span class=\"pl-k\">.</span>select(attributeValue);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Overall this seems like quite a 'risky' way of correlating between the <code>attribute</code> and the item in the ComboBox. We'd have to know for 100% certainty that the result of the attribute exists within the combobox, otherwise the app would crash with quite a nasty error.<br>\nMight be worth thinking about adding a method that checks <code>attributeValue</code> against the options available in the ComboBox, and returns an error if it doesn't exist? We know this wouldn't happen in our sample, but should a user borrow this code for their app, we might want to make sure there's some validation (which would be 'best practice'). If it complicates the sample too much, then it should be ok to just leave it.</p>", "author": "JonLavi", "createdAt": "2020-09-11T07:53:33Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point){\n+    ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    results.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult layer = results.get();\n+        List<GeoElement> identified = layer.getElements();\n+        if (!identified.isEmpty()) {\n+          GeoElement element = identified.get(0);\n+          if (element instanceof ArcGISFeature) {\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.loadAsync();\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+                // when a feature has been selected set the damage combo box to the feature's attribute value\n+                damageTypeComboBox.getSelectionModel().select((String) selectedFeature.getAttributes().get(\"typdamage\"));", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyOTgwOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490229809", "bodyText": "Have added the additional check here and also as a result pulled out the getAttributes since it's now used twice. So see what you think....", "author": "jenmerritt", "createdAt": "2020-09-17T13:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzOTE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0MTkyMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486841920", "body": "`exception` is a bit of a technical term in a message that's shown to the end user. Perhaps this would be simpler?\r\n\r\n```suggestion\r\n        new Alert(Alert.AlertType.ERROR, \"Failed to identify the feature\").show();\r\n```", "bodyText": "exception is a bit of a technical term in a message that's shown to the end user. Perhaps this would be simpler?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new Alert(Alert.AlertType.ERROR, \"Exception getting identify result\").show();\n          \n          \n            \n                    new Alert(Alert.AlertType.ERROR, \"Failed to identify the feature\").show();", "bodyHTML": "<p dir=\"auto\"><code>exception</code> is a bit of a technical term in a message that's shown to the end user. Perhaps this would be simpler?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Exception getting</span> identify <span class=\"x x-first x-last\">result</span><span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Failed to</span> identify <span class=\"x x-first x-last\">the feature</span><span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T07:58:33Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;\n+\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private FeatureLayer featureLayer; // keeps loadable in scope to avoid garbage collection\n+  private ArcGISFeature selectedFeature; // keeps loadable in scope to avoid garbage collection\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // configure the initial UI settings\n+      createVersionButton.setDisable(true);\n+      switchVersionButton.setDisable(true);\n+      editFeatureVBox.setDisable(true);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"typdamage\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"typdamage\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select a feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current branch version is not the default, update the feature's geometry\n+          if(selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)){\n+            Point2D secondaryClickPoint = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(secondaryClickPoint);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n+      name.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+      return;\n+    } else if (name.getText().length()> 0 && Character.isWhitespace(name.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (name.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (name.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(name.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(description.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> createdVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    createdVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = createdVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"Please enter a unique version name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+    if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the user created version has local edits, apply the edits to the service geodatabase\n+      if (serviceGeodatabase.hasLocalEdits()) {\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.size() == 0) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      } else {\n+        // if there are no local edits, switch to the default version\n+        switchVersion(defaultVersion);\n+      }\n+    } else if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point){\n+    ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    results.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult layer = results.get();\n+        List<GeoElement> identified = layer.getElements();\n+        if (!identified.isEmpty()) {\n+          GeoElement element = identified.get(0);\n+          if (element instanceof ArcGISFeature) {\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.loadAsync();\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+                // when a feature has been selected set the damage combo box to the feature's attribute value\n+                damageTypeComboBox.getSelectionModel().select((String) selectedFeature.getAttributes().get(\"typdamage\"));\n+\n+                // enable feature editing UI if not on the default branch version\n+                if (!serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+                  editFeatureVBox.setDisable(false);\n+                }\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature failed to load.\").show();\n+              }\n+            });\n+          }\n+        }\n+      } catch (InterruptedException | ExecutionException e) {\n+        new Alert(Alert.AlertType.ERROR, \"Exception getting identify result\").show();", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0MzcyNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r486843724", "body": "Might also be worth alphabetising these?\r\n```suggestion\r\n  @FXML private Button createVersionButton;\r\n  @FXML private Button switchVersionButton;\r\n  @FXML private ComboBox<String> damageTypeComboBox;\r\n  @FXML private ComboBox<VersionAccess> accessComboBox;\r\n  @FXML private Label currentVersionLabel;\r\n  @FXML private MapView mapView;\r\n  @FXML private ProgressIndicator progressIndicator;\r\n  @FXML private TextField description;\r\n  @FXML private TextField name;\r\n  @FXML private VBox createVersionVBox;\r\n  @FXML private VBox editFeatureVBox;\r\n```", "bodyText": "Might also be worth alphabetising these?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @FXML private MapView mapView;\n          \n          \n            \n              @FXML private ProgressIndicator progressIndicator;\n          \n          \n            \n              @FXML private Button createVersionButton;\n          \n          \n            \n              @FXML private Button switchVersionButton;\n          \n          \n            \n              @FXML private VBox editFeatureVBox;\n          \n          \n            \n              @FXML private ComboBox<VersionAccess> accessComboBox;\n          \n          \n            \n              @FXML private ComboBox<String> damageTypeComboBox;\n          \n          \n            \n              @FXML private Label currentVersionLabel;\n          \n          \n            \n              @FXML private VBox createVersionVBox;\n          \n          \n            \n              @FXML private TextField name;\n          \n          \n            \n              @FXML private TextField description;\n          \n          \n            \n              @FXML private Button createVersionButton;\n          \n          \n            \n              @FXML private Button switchVersionButton;\n          \n          \n            \n              @FXML private ComboBox<String> damageTypeComboBox;\n          \n          \n            \n              @FXML private ComboBox<VersionAccess> accessComboBox;\n          \n          \n            \n              @FXML private Label currentVersionLabel;\n          \n          \n            \n              @FXML private MapView mapView;\n          \n          \n            \n              @FXML private ProgressIndicator progressIndicator;\n          \n          \n            \n              @FXML private TextField description;\n          \n          \n            \n              @FXML private TextField name;\n          \n          \n            \n              @FXML private VBox createVersionVBox;\n          \n          \n            \n              @FXML private VBox editFeatureVBox;", "bodyHTML": "<p dir=\"auto\">Might also be worth alphabetising these?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">MapView</span><span class=\"x x-last\"> mapView</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">ProgressIndicator</span><span class=\"x x-last\"> progressIndicator</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Button</span><span class=\"x x-last\"> createVersionButton</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Button</span><span class=\"x x-last\"> switchVersionButton</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">VBox</span><span class=\"x x-last\"> editFeatureVBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-k\"><span class=\"x x-first\">ComboBox&lt;</span><span class=\"pl-smi x\">VersionAccess</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> accessComboBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-k\"><span class=\"x x-first\">ComboBox&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> damageTypeComboBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Label</span><span class=\"x x-last\"> currentVersionLabel</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">VBox</span><span class=\"x x-last\"> createVersionVBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">TextField</span><span class=\"x x-last\"> name</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">TextField</span><span class=\"x x-last\"> description</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Button</span><span class=\"x x-last\"> createVersionButton</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Button</span><span class=\"x x-last\"> switchVersionButton</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-k\"><span class=\"x x-first\">ComboBox&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> damageTypeComboBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-k\"><span class=\"x x-first\">ComboBox&lt;</span><span class=\"pl-smi x\">VersionAccess</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> accessComboBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Label</span><span class=\"x x-last\"> currentVersionLabel</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">MapView</span><span class=\"x x-last\"> mapView</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">ProgressIndicator</span><span class=\"x x-last\"> progressIndicator</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">TextField</span><span class=\"x x-last\"> description</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">TextField</span><span class=\"x x-last\"> name</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">VBox</span><span class=\"x x-last\"> createVersionVBox</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@FXML</span> <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">VBox</span><span class=\"x x-last\"> editFeatureVBox</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-11T08:02:11Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,352 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+import javafx.geometry.Point2D;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private VBox editFeatureVBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private TextField name;\n+  @FXML private TextField description;", "originalCommit": "83e9ff1c86eb2d1955d8b3661d03676ed34e8885", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8a70300cc1734118b9e5f368a9429b0aa0f7cfc", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d8a70300cc1734118b9e5f368a9429b0aa0f7cfc", "message": "tidy ups from code review", "committedDate": "2020-09-11T09:48:21Z", "type": "commit"}, {"oid": "16e642f5973edc69326b0390a98cc4548d6c8967", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/16e642f5973edc69326b0390a98cc4548d6c8967", "message": "tidy ups", "committedDate": "2020-09-14T09:48:10Z", "type": "commit"}, {"oid": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/02dd594e7f66cb6d631fcad981ae76384b4c6832", "message": "code review changes", "committedDate": "2020-09-17T13:11:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MjA5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490252094", "body": "I'm just thinking since we repeat `nameTextField.getText()` so many times here, we could save this to a variable, eg. `String inputName = nameTextField.getText();`\r\nand then refer to the variable within these if/else satements, as well as on line 202.", "bodyText": "I'm just thinking since we repeat nameTextField.getText() so many times here, we could save this to a variable, eg. String inputName = nameTextField.getText();\nand then refer to the variable within these if/else satements, as well as on line 202.", "bodyHTML": "<p dir=\"auto\">I'm just thinking since we repeat <code>nameTextField.getText()</code> so many times here, we could save this to a variable, eg. <code>String inputName = nameTextField.getText();</code><br>\nand then refer to the variable within these if/else satements, as well as on line 202.</p>", "author": "JonLavi", "createdAt": "2020-09-17T13:36:54Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -169,23 +170,23 @@ public void initialize() {\n   }\n \n   /**\n-   * Create a new branch version using user defined values\n+   * Create a new branch version using user defined values.\n    */\n   @FXML\n   private void handleCreateVersionButtonClicked() {\n \n     // validate version name input\n-    if (name.getText().contains(\".\") || name.getText().contains(\";\") || name.getText().contains(\"'\") ||\n-      name.getText().contains(\"\\\"\")) {\n-      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name\").show();\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||", "originalCommit": "d8a70300cc1734118b9e5f368a9429b0aa0f7cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MzU5MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490253590", "body": "Although we could use the predictive typing `var` here (it's more modern and sleek), since we're trying to demonstrate how the API works, lets declare this variable with the full type (as you had it before):\r\n\r\n```suggestion\r\n        IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\r\n```\r\n\r\nThat would help the users understand what the return type is of the `.get()`\r\n\r\nSame would apply to line 299:\r\n```\r\nGeoElement element = identified.get(0);\r\n```\r\n", "bodyText": "Although we could use the predictive typing var here (it's more modern and sleek), since we're trying to demonstrate how the API works, lets declare this variable with the full type (as you had it before):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var identifyLayerResult = identifyLayerResultFuture.get();\n          \n          \n            \n                    IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n          \n      \n    \n    \n  \n\nThat would help the users understand what the return type is of the .get()\nSame would apply to line 299:\nGeoElement element = identified.get(0);", "bodyHTML": "<p dir=\"auto\">Although we could use the predictive typing <code>var</code> here (it's more modern and sleek), since we're trying to demonstrate how the API works, lets declare this variable with the full type (as you had it before):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k x x-first x-last\">var</span> identifyLayerResult <span class=\"pl-k\">=</span> identifyLayerResultFuture<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi x x-first x-last\">IdentifyLayerResult</span> identifyLayerResult <span class=\"pl-k\">=</span> identifyLayerResultFuture<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">That would help the users understand what the return type is of the <code>.get()</code></p>\n<p dir=\"auto\">Same would apply to line 299:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"GeoElement element = identified.get(0);\"><pre><code>GeoElement element = identified.get(0);\n</code></pre></div>", "author": "JonLavi", "createdAt": "2020-09-17T13:38:59Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -283,18 +285,18 @@ private void switchVersion(String versionName) {\n   }\n \n   /**\n-   * Select a feature if one exists where the user clicked\n+   * Select a feature if one exists where the user clicked.\n    *\n    * @param point location where the user clicked\n    */\n-  private void selectFeature(Point2D point){\n-    ListenableFuture<IdentifyLayerResult> results = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n-    results.addDoneListener(() -> {\n+  private void selectFeature(Point2D point) {\n+    ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    identifyLayerResultFuture.addDoneListener(() -> {\n       try {\n-        IdentifyLayerResult layer = results.get();\n-        List<GeoElement> identified = layer.getElements();\n-        if (!identified.isEmpty()) {\n-          GeoElement element = identified.get(0);\n+        var identifyLayerResult = identifyLayerResultFuture.get();", "originalCommit": "d8a70300cc1734118b9e5f368a9429b0aa0f7cfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1Njg4NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490256885", "body": "Perhaps on more 'advanced' samples, we could consolidate these two lines? The thought would be that users who look at this sample already understand how maps and MapViews work, so they wouldn't need an in-depth explanation of every step?\r\n\r\n```suggestion\r\n      // create a map and set it to the map view\r\n      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\r\n      mapView.setMap(map);\r\n```", "bodyText": "Perhaps on more 'advanced' samples, we could consolidate these two lines? The thought would be that users who look at this sample already understand how maps and MapViews work, so they wouldn't need an in-depth explanation of every step?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // create a map with the streets vector basemap\n          \n          \n            \n                  ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n          \n          \n            \n            \n          \n          \n            \n                  // create a map view and set its map\n          \n          \n            \n                  mapView.setMap(map);\n          \n          \n            \n                  // create a map and set it to the map view\n          \n          \n            \n                  ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n          \n          \n            \n                  mapView.setMap(map);", "bodyHTML": "<p dir=\"auto\">Perhaps on more 'advanced' samples, we could consolidate these two lines? The thought would be that users who look at this sample already understand how maps and MapViews work, so they wouldn't need an in-depth explanation of every step?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> create a map with the streets vector basemap</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ArcGISMap</span> map <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISMap</span>(<span class=\"pl-smi\">Basemap</span><span class=\"pl-k\">.</span>createStreetsVector());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> create a map view and set its map</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      mapView<span class=\"pl-k\">.</span>setMap(map);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> create a map and set it to the map view</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ArcGISMap</span> map <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISMap</span>(<span class=\"pl-smi\">Basemap</span><span class=\"pl-k\">.</span>createStreetsVector());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      mapView<span class=\"pl-k\">.</span>setMap(map);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-17T13:43:39Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1ODQ3MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490258470", "body": "Perhaps we could elaborate here a bit about which combo box / what purpose it serves?\r\nI'm noticing this because the next comment also says `add ... to the combo box`, which could be a bit misleading. How about `access type combo box` and `attribute selection combo box`?", "bodyText": "Perhaps we could elaborate here a bit about which combo box / what purpose it serves?\nI'm noticing this because the next comment also says add ... to the combo box, which could be a bit misleading. How about access type combo box and attribute selection combo box?", "bodyHTML": "<p dir=\"auto\">Perhaps we could elaborate here a bit about which combo box / what purpose it serves?<br>\nI'm noticing this because the next comment also says <code>add ... to the combo box</code>, which could be a bit misleading. How about <code>access type combo box</code> and <code>attribute selection combo box</code>?</p>", "author": "JonLavi", "createdAt": "2020-09-17T13:45:49Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzMTIwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490331201", "bodyText": "Yeah good point. I've renamed to accessTypeComboBox and updated the comment. Then I've left as damageTypeComboBox as it feels consistent, but I've updated the comment to be clearer.", "author": "jenmerritt", "createdAt": "2020-09-17T15:11:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1ODQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2MTE1MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490261151", "body": "I think this block is worthy of getting a slightly more detailed comment.\r\nHow about something like\r\n```\r\n// add a handler to the damage type combo box the currently selected feature with the attribute selected within the combo box\r\n```\r\n\r\nI'm not the best with these descriptions, so I'll just leave that as a starting point \ud83d\ude09 ", "bodyText": "I think this block is worthy of getting a slightly more detailed comment.\nHow about something like\n// add a handler to the damage type combo box the currently selected feature with the attribute selected within the combo box\n\nI'm not the best with these descriptions, so I'll just leave that as a starting point \ud83d\ude09", "bodyHTML": "<p dir=\"auto\">I think this block is worthy of getting a slightly more detailed comment.<br>\nHow about something like</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// add a handler to the damage type combo box the currently selected feature with the attribute selected within the combo box\"><pre><code>// add a handler to the damage type combo box the currently selected feature with the attribute selected within the combo box\n</code></pre></div>\n<p dir=\"auto\">I'm not the best with these descriptions, so I'll just leave that as a starting point <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>", "author": "JonLavi", "createdAt": "2020-09-17T13:49:26Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzOTI5Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490339293", "bodyText": "Have split into 2 comments to make it easier to describe each step in more detail.", "author": "jenmerritt", "createdAt": "2020-09-17T15:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2MTE1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2Mzg3Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490263873", "body": "I think we could get away with removing the try/catch block here, and dealing with any exceptions within a try/catch block within the method `updateFeature`. This is because it looks like that is the source of any potential exception, so that would be the place to catch/throw them.", "bodyText": "I think we could get away with removing the try/catch block here, and dealing with any exceptions within a try/catch block within the method updateFeature. This is because it looks like that is the source of any potential exception, so that would be the place to catch/throw them.", "bodyHTML": "<p dir=\"auto\">I think we could get away with removing the try/catch block here, and dealing with any exceptions within a try/catch block within the method <code>updateFeature</code>. This is because it looks like that is the source of any potential exception, so that would be the place to catch/throw them.</p>", "author": "JonLavi", "createdAt": "2020-09-17T13:53:07Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQwMzczNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490403737", "bodyText": "I've altered this so if you could double check the updateFeature method to make sure I've got the try/catch right.", "author": "jenmerritt", "createdAt": "2020-09-17T16:37:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2Mzg3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2NDYyMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490264623", "body": "I still think this could go in one line (unless we're going to start being more strict about the line character limit)\r\n```suggestion\r\n      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline.com/arcgis/rest/services/DamageAssessment/FeatureServer\");\r\n```", "bodyText": "I still think this could go in one line (unless we're going to start being more strict about the line character limit)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n          \n          \n            \n                    \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n          \n          \n            \n                  serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline.com/arcgis/rest/services/DamageAssessment/FeatureServer\");", "bodyHTML": "<p dir=\"auto\">I still think this could go in one line (unless we're going to start being more strict about the line character limit)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      serviceGeodatabase <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceGeodatabase</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://sampleserver7.arcgisonline<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"99\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.com/arcgis/rest/services/DamageAssessment/FeatureServer<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      serviceGeodatabase <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceGeodatabase</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://sampleserver7.arcgisonline.com/arcgis/rest/services/DamageAssessment/FeatureServer<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-17T13:54:05Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0MDcyNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490340726", "bodyText": "Yeah I think we're trying to be really strict on this. Again, will note this in the contrib guidelines.", "author": "jenmerritt", "createdAt": "2020-09-17T15:24:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2NDYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NDI5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490274294", "body": "If we wanted, we could pre-select one of the three options in this combo box, effectively eliminating the scenario where no Item is selected. Eg. after adding the enum values to the box:\r\n```\r\naccessComboBox.getSelectionModel().select(VersionAccess.PUBLIC);   \r\n```\r\nThat way you could get rid of this block entirely.\r\n\r\nHowever I do like the way it is right now, with the prompt 'select', as it doesn't imply any of these options are the 'standard'. So feel free to keep it as is! Just thought it'd be woth mentioning pre-selecting a value.", "bodyText": "If we wanted, we could pre-select one of the three options in this combo box, effectively eliminating the scenario where no Item is selected. Eg. after adding the enum values to the box:\naccessComboBox.getSelectionModel().select(VersionAccess.PUBLIC);   \n\nThat way you could get rid of this block entirely.\nHowever I do like the way it is right now, with the prompt 'select', as it doesn't imply any of these options are the 'standard'. So feel free to keep it as is! Just thought it'd be woth mentioning pre-selecting a value.", "bodyHTML": "<p dir=\"auto\">If we wanted, we could pre-select one of the three options in this combo box, effectively eliminating the scenario where no Item is selected. Eg. after adding the enum values to the box:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"accessComboBox.getSelectionModel().select(VersionAccess.PUBLIC);   \"><pre><code>accessComboBox.getSelectionModel().select(VersionAccess.PUBLIC);   \n</code></pre></div>\n<p dir=\"auto\">That way you could get rid of this block entirely.</p>\n<p dir=\"auto\">However I do like the way it is right now, with the prompt 'select', as it doesn't imply any of these options are the 'standard'. So feel free to keep it as is! Just thought it'd be woth mentioning pre-selecting a value.</p>", "author": "JonLavi", "createdAt": "2020-09-17T14:05:54Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||\n+      nameTextField.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (nameTextField.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0MTkwNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490341906", "bodyText": "I like the select too, so will leave and see if it comes up again in the next review and get a consensus if needed.", "author": "jenmerritt", "createdAt": "2020-09-17T15:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NDI5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NTc4Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490275786", "body": "I think a bit of whitespace between the blocks would help make this section a little easier to read:\r\n\r\n```suggestion\r\n    if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\r\n      // if the current version is the default version, switch to the user created version\r\n      switchVersion(userCreatedVersion);\r\n      \r\n    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\r\n      // if the current version is the user created version, check if there are local edits\r\n      if (!serviceGeodatabase.hasLocalEdits()) {\r\n        // if there are no local edits switch to the default version\r\n        switchVersion(defaultVersion);\r\n      \r\n      } else {\r\n        // if local edits exist apply the edits\r\n        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\r\n        resultOfApplyEdits.addDoneListener(() -> {\r\n          try {\r\n           \r\n            // check if the server edit was successful\r\n            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\r\n            if (edits == null || edits.isEmpty()) {\r\n              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\r\n            \r\n            } else {\r\n              // if the edits were successful, switch to the default version\r\n              switchVersion(defaultVersion);\r\n            }\r\n          } catch (InterruptedException | ExecutionException e) {\r\n            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n```", "bodyText": "I think a bit of whitespace between the blocks would help make this section a little easier to read:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n          \n          \n            \n                  // if the current version is the default version, switch to the user created version\n          \n          \n            \n                  switchVersion(userCreatedVersion);\n          \n          \n            \n                } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n          \n          \n            \n                  // if the current version is the user created version, check if there are local edits\n          \n          \n            \n                  if (!serviceGeodatabase.hasLocalEdits()) {\n          \n          \n            \n                    // if there are no local edits switch to the default version\n          \n          \n            \n                    switchVersion(defaultVersion);\n          \n          \n            \n                  } else {\n          \n          \n            \n                    // if local edits exist apply the edits\n          \n          \n            \n                    ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n          \n          \n            \n                    resultOfApplyEdits.addDoneListener(() -> {\n          \n          \n            \n                      try {\n          \n          \n            \n                        // check if the server edit was successful\n          \n          \n            \n                        List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n          \n          \n            \n                        if (edits == null || edits.isEmpty()) {\n          \n          \n            \n                          new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n          \n          \n            \n                        } else {\n          \n          \n            \n                          // if the edits were successful, switch to the default version\n          \n          \n            \n                          switchVersion(defaultVersion);\n          \n          \n            \n                        }\n          \n          \n            \n                      } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                        new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n          \n          \n            \n                      }\n          \n          \n            \n                    });\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n          \n            \n                if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n          \n          \n            \n                  // if the current version is the default version, switch to the user created version\n          \n          \n            \n                  switchVersion(userCreatedVersion);\n          \n          \n            \n                  \n          \n          \n            \n                } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n          \n          \n            \n                  // if the current version is the user created version, check if there are local edits\n          \n          \n            \n                  if (!serviceGeodatabase.hasLocalEdits()) {\n          \n          \n            \n                    // if there are no local edits switch to the default version\n          \n          \n            \n                    switchVersion(defaultVersion);\n          \n          \n            \n                  \n          \n          \n            \n                  } else {\n          \n          \n            \n                    // if local edits exist apply the edits\n          \n          \n            \n                    ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n          \n          \n            \n                    resultOfApplyEdits.addDoneListener(() -> {\n          \n          \n            \n                      try {\n          \n          \n            \n                       \n          \n          \n            \n                        // check if the server edit was successful\n          \n          \n            \n                        List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n          \n          \n            \n                        if (edits == null || edits.isEmpty()) {\n          \n          \n            \n                          new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n          \n          \n            \n                        \n          \n          \n            \n                        } else {\n          \n          \n            \n                          // if the edits were successful, switch to the default version\n          \n          \n            \n                          switchVersion(defaultVersion);\n          \n          \n            \n                        }\n          \n          \n            \n                      } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                        new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n          \n          \n            \n                      }\n          \n          \n            \n                    });\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">I think a bit of whitespace between the blocks would help make this section a little easier to read:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"249\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(defaultVersion)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"250\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the current version is the default version, switch to the user created version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"251\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      switchVersion(userCreatedVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"252\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(userCreatedVersion)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the current version is the user created version, check if there are local edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"254\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>serviceGeodatabase<span class=\"pl-k\">.</span>hasLocalEdits()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"255\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if there are no local edits switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"256\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        switchVersion(defaultVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if local edits exist apply the edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span>&gt;</span> resultOfApplyEdits <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>applyEditsAsync();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        resultOfApplyEdits<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"262\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> check if the server edit was successful</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"263\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span> edits <span class=\"pl-k\">=</span> resultOfApplyEdits<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"264\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> edits<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"265\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"266\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"267\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the edits were successful, switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"268\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              switchVersion(defaultVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"269\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"270\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> <span class=\"pl-k\">|</span> <span class=\"pl-smi\">ExecutionException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"271\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"272\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"275\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"276\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"249\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(defaultVersion)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"250\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the current version is the default version, switch to the user created version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"251\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      switchVersion(userCreatedVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"252\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(userCreatedVersion)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"254\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the current version is the user created version, check if there are local edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"255\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>serviceGeodatabase<span class=\"pl-k\">.</span>hasLocalEdits()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"256\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if there are no local edits switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        switchVersion(defaultVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if local edits exist apply the edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span>&gt;</span> resultOfApplyEdits <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>applyEditsAsync();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"262\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        resultOfApplyEdits<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"263\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"264\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">           </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"265\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> check if the server edit was successful</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"266\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span> edits <span class=\"pl-k\">=</span> resultOfApplyEdits<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"267\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> edits<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"268\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"269\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"270\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"271\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the edits were successful, switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"272\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              switchVersion(defaultVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> <span class=\"pl-k\">|</span> <span class=\"pl-smi\">ExecutionException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"275\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"276\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"277\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"278\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"279\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"280\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-17T14:07:46Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||\n+      nameTextField.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (nameTextField.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(nameTextField.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"A version with this name already exists.\\nPlease enter a unique name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersion);\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      }\n+    }\n+  }", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0Mjk3Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490342977", "bodyText": "Agreed, looks more readable with those spaces", "author": "jenmerritt", "createdAt": "2020-09-17T15:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NTc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NzI2Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490277263", "body": "Technically we should be naming this variable 'Future':\r\n\r\n```suggestion\r\n    ListenableFuture<Void> switchVersionFuture = serviceGeodatabase.switchVersionAsync(versionName);\r\n    switchVersionFuture.addDoneListener(() -> {\r\n```", "bodyText": "Technically we should be naming this variable 'Future':\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n          \n          \n            \n                switchVersionResult.addDoneListener(() -> {\n          \n          \n            \n                ListenableFuture<Void> switchVersionFuture = serviceGeodatabase.switchVersionAsync(versionName);\n          \n          \n            \n                switchVersionFuture.addDoneListener(() -> {", "bodyHTML": "<p dir=\"auto\">Technically we should be naming this variable 'Future':</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-smi\">Void</span>&gt;</span> <span class=\"x x-first x-last\">switchVersionResult</span> <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>switchVersionAsync(versionName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first x-last\">switchVersionResult</span><span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-smi\">Void</span>&gt;</span> <span class=\"x x-first x-last\">switchVersionFuture</span> <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>switchVersionAsync(versionName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"x x-first x-last\">switchVersionFuture</span><span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-09-17T14:09:39Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||\n+      nameTextField.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (nameTextField.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(nameTextField.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"A version with this name already exists.\\nPlease enter a unique name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersion);\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDI4OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490280288", "body": "I've noticed there are a lot of calls to `serviceGeodatabase.getVersionName()`. It looks as if this is the central place where a change to that value happens, meaning perhaps it might be nice to save it as a member variable (e.g. `String currentGeodatabaseVersion`), from which other methods could read, avoiding the repeated calls of the methos .getVersionName.\r\n\r\nHowever there's an argument to be made about that approach creating two 'sources of truth', and in a more complex app the actual `serviceGeodatabase` and a string `currentGeodatabaseVersion` could go out of sync, creating a whole other bunch of problems...\r\n\r\n```suggestion\r\n\t\tserviceGeodatabaseVersion\r\n        currentVersionLabel.setText(\"Current version: \" + currentGeodatabaseVersion);\r\n```\r\n\r\nI'm not too attached to any solution, so I'll just leave this here as a comment rather than a request for a change \ud83d\ude1b ", "bodyText": "I've noticed there are a lot of calls to serviceGeodatabase.getVersionName(). It looks as if this is the central place where a change to that value happens, meaning perhaps it might be nice to save it as a member variable (e.g. String currentGeodatabaseVersion), from which other methods could read, avoiding the repeated calls of the methos .getVersionName.\nHowever there's an argument to be made about that approach creating two 'sources of truth', and in a more complex app the actual serviceGeodatabase and a string currentGeodatabaseVersion could go out of sync, creating a whole other bunch of problems...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n          \n          \n            \n            \t\tserviceGeodatabaseVersion\n          \n          \n            \n                    currentVersionLabel.setText(\"Current version: \" + currentGeodatabaseVersion);\n          \n      \n    \n    \n  \n\nI'm not too attached to any solution, so I'll just leave this here as a comment rather than a request for a change \ud83d\ude1b", "bodyHTML": "<p dir=\"auto\">I've noticed there are a lot of calls to <code>serviceGeodatabase.getVersionName()</code>. It looks as if this is the central place where a change to that value happens, meaning perhaps it might be nice to save it as a member variable (e.g. <code>String currentGeodatabaseVersion</code>), from which other methods could read, avoiding the repeated calls of the methos .getVersionName.</p>\n<p dir=\"auto\">However there's an argument to be made about that approach creating two 'sources of truth', and in a more complex app the actual <code>serviceGeodatabase</code> and a string <code>currentGeodatabaseVersion</code> could go out of sync, creating a whole other bunch of problems...</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        currentVersionLabel</span><span class=\"pl-k x\">.</span><span class=\"x\">setText(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Current version: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> serviceGeodatabase</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getVersionName());</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first x-last\">\t\tserviceGeodatabaseVersion</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        currentVersionLabel<span class=\"pl-k\">.</span>setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current version: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> currentGeodatabaseVersion);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I'm not too attached to any solution, so I'll just leave this here as a comment rather than a request for a change <g-emoji class=\"g-emoji\" alias=\"stuck_out_tongue\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png\">\ud83d\ude1b</g-emoji></p>", "author": "JonLavi", "createdAt": "2020-09-17T14:13:25Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||\n+      nameTextField.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (nameTextField.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(nameTextField.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"A version with this name already exists.\\nPlease enter a unique name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersion);\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM3MjE2OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490372169", "bodyText": "Yeah this is a really good point. I had this discussion with myself and I had the fear of ending up with two sources of truth which is why I stuck with the 'gets'. I'll leave this comment open for second review too.", "author": "jenmerritt", "createdAt": "2020-09-17T16:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1MTI3NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490851275", "bodyText": "@Rachael-E", "author": "jenmerritt", "createdAt": "2020-09-18T10:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MTc0Nw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497581747", "bodyText": "@jenmerritt I'm ok with this the way it is, with the calls to getVersionName. I think it's readable and helps understand the flow: at least for me!", "author": "Rachael-E", "createdAt": "2020-09-30T15:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MDI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MTUwOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490281509", "body": "consider adding some whitespace in this block as well, e.g. before each comment", "bodyText": "consider adding some whitespace in this block as well, e.g. before each comment", "bodyHTML": "<p dir=\"auto\">consider adding some whitespace in this block as well, e.g. before each comment</p>", "author": "JonLavi", "createdAt": "2020-09-17T14:14:54Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,356 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+\n+      // create a map view and set its map\n+      mapView.setMap(map);\n+\n+      // add the version access types to the combo box\n+      accessComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the combo box and handle selection\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (!selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          try {\n+            selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+            updateFeature(selectedFeature);\n+          } catch (Exception e) {\n+            new Alert(Alert.AlertType.ERROR, \"Feature attributes failed to update\").show();\n+          }\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    if (nameTextField.getText().contains(\".\") || nameTextField.getText().contains(\";\") || nameTextField.getText().contains(\"'\") ||\n+      nameTextField.getText().contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (nameTextField.getText().length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (nameTextField.getText().length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }\n+\n+    // validate version access input\n+    if (accessComboBox.getSelectionModel().getSelectedItem() == null) {\n+      new Alert(Alert.AlertType.ERROR, \"Please select an access level\").show();\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(nameTextField.getText());\n+    newVersionParameters.setAccess(accessComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersion = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersion);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          new Alert(Alert.AlertType.ERROR, \"A version with this name already exists.\\nPlease enter a unique name\").show();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Error creating new version\").show();\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersion);\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersion)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersion);\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersion);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            new Alert(Alert.AlertType.ERROR, \"Error applying edits on server\").show();\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionResult = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionResult.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        new Alert(Alert.AlertType.ERROR, \"Error switching version.\").show();\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked.\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point) {\n+    ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    identifyLayerResultFuture.addDoneListener(() -> {\n+      try {\n+        var identifyLayerResult = identifyLayerResultFuture.get();\n+        List<GeoElement> identifiedElements = identifyLayerResult.getElements();\n+        if (!identifiedElements.isEmpty()) {\n+          var element = identifiedElements.get(0);\n+          if (element instanceof ArcGISFeature) {\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+                // when a feature has been selected, get it's damage type value and select it in the damage combo box\n+                String selectedFeatureAttributeValue = (String) selectedFeature.getAttributes().get(\"TYPDAMAGE\");\n+\n+                if (damageTypeComboBox.getItems().contains(selectedFeatureAttributeValue)) {\n+                  damageTypeComboBox.getSelectionModel().select(selectedFeatureAttributeValue);\n+                } else {\n+                  new Alert(Alert.AlertType.ERROR, \"Unexepected attribute value\").show();\n+                }\n+\n+                // enable feature editing UI if not on the default version\n+                if (!serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+                  editFeatureVBox.setDisable(false);\n+                }\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature failed to load.\").show();\n+              }\n+            });", "originalCommit": "02dd594e7f66cb6d631fcad981ae76384b4c6832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce30505833ac823b8377aaac4e0c73a7889347bd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ce30505833ac823b8377aaac4e0c73a7889347bd", "message": "refactors from review", "committedDate": "2020-09-17T16:40:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc2OTI0OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490769248", "body": "I think this should also say `GeoElement element`", "bodyText": "I think this should also say GeoElement element", "bodyHTML": "<p dir=\"auto\">I think this should also say <code>GeoElement element</code></p>", "author": "JonLavi", "createdAt": "2020-09-18T07:56:39Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -290,23 +290,25 @@ private void selectFeature(Point2D point) {\n     ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n     identifyLayerResultFuture.addDoneListener(() -> {\n       try {\n-        var identifyLayerResult = identifyLayerResultFuture.get();\n+        IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n         List<GeoElement> identifiedElements = identifyLayerResult.getElements();\n         if (!identifiedElements.isEmpty()) {\n           var element = identifiedElements.get(0);", "originalCommit": "ce30505833ac823b8377aaac4e0c73a7889347bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc3MjM3MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490772370", "body": "I think this all looks alright. Other samples usually put a call to `applyEdits` in the `.addDoneListener`, but since we're just doing the 'apply' when versions are switched, this is ok.\r\n\r\nAnother thing I've noticed is that `updateFeatureAsync` only throws one type of exceptions:\r\n`IllegalArgumentException - if feature is null`:\r\n\r\nhttps://developers.arcgis.com/java/latest/api-reference/reference/com/esri/arcgisruntime/data/FeatureTable.html#updateFeatureAsync(com.esri.arcgisruntime.data.Feature)\r\n\r\nSo, perhaps if you include a null check before this method is called (line89?) we can get rid of the try/catch alltogether?", "bodyText": "I think this all looks alright. Other samples usually put a call to applyEdits in the .addDoneListener, but since we're just doing the 'apply' when versions are switched, this is ok.\nAnother thing I've noticed is that updateFeatureAsync only throws one type of exceptions:\nIllegalArgumentException - if feature is null:\nhttps://developers.arcgis.com/java/latest/api-reference/reference/com/esri/arcgisruntime/data/FeatureTable.html#updateFeatureAsync(com.esri.arcgisruntime.data.Feature)\nSo, perhaps if you include a null check before this method is called (line89?) we can get rid of the try/catch alltogether?", "bodyHTML": "<p dir=\"auto\">I think this all looks alright. Other samples usually put a call to <code>applyEdits</code> in the <code>.addDoneListener</code>, but since we're just doing the 'apply' when versions are switched, this is ok.</p>\n<p dir=\"auto\">Another thing I've noticed is that <code>updateFeatureAsync</code> only throws one type of exceptions:<br>\n<code>IllegalArgumentException - if feature is null</code>:</p>\n<p dir=\"auto\"><a href=\"https://developers.arcgis.com/java/latest/api-reference/reference/com/esri/arcgisruntime/data/FeatureTable.html#updateFeatureAsync(com.esri.arcgisruntime.data.Feature)\" rel=\"nofollow\">https://developers.arcgis.com/java/latest/api-reference/reference/com/esri/arcgisruntime/data/FeatureTable.html#updateFeatureAsync(com.esri.arcgisruntime.data.Feature)</a></p>\n<p dir=\"auto\">So, perhaps if you include a null check before this method is called (line89?) we can get rid of the try/catch alltogether?</p>", "author": "JonLavi", "createdAt": "2020-09-18T08:02:41Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -332,13 +334,18 @@ private void selectFeature(Point2D point) {\n    */\n   private void updateFeature(ArcGISFeature selectedFeature) {\n     if (serviceFeatureTable.canUpdate(selectedFeature) && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+\n       // update the feature in the feature table\n-      ListenableFuture<Void> editResult = serviceFeatureTable.updateFeatureAsync(selectedFeature);\n-      editResult.addDoneListener(() -> {\n-        Alert alert = new Alert(Alert.AlertType.INFORMATION);\n-        alert.setHeaderText(\"Feature updated\");\n-        alert.setContentText(\"Changes will be synced to the service geodatabase\\nwhen you switch version.\");\n-        alert.show();\n+      ListenableFuture<Void> updateFuture = serviceFeatureTable.updateFeatureAsync(selectedFeature);\n+      updateFuture.addDoneListener(() -> {\n+        try {\n+          Alert alert = new Alert(Alert.AlertType.INFORMATION);\n+          alert.setHeaderText(\"Feature updated\");\n+          alert.setContentText(\"Changes will be synced to the service geodatabase\\nwhen you switch version.\");\n+          alert.show();\n+        } catch (Exception ex) {", "originalCommit": "ce30505833ac823b8377aaac4e0c73a7889347bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0MTA5MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r490841090", "bodyText": "Ah nice. I've added into the existing if statement in that selection listener as seemed to make sense there.", "author": "jenmerritt", "createdAt": "2020-09-18T10:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc3MjM3MA=="}], "type": "inlineReview"}, {"oid": "9ad843f137132e5754df1443fe160e79a45068cf", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9ad843f137132e5754df1443fe160e79a45068cf", "message": "tidy ups", "committedDate": "2020-09-18T10:05:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQwMzI2Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497403262", "body": "new line between `initialize()` and the `try` block needed here (just for readability)", "bodyText": "new line between initialize() and the try block needed here (just for readability)", "bodyHTML": "<p dir=\"auto\">new line between <code>initialize()</code> and the <code>try</code> block needed here (just for readability)</p>", "author": "Rachael-E", "createdAt": "2020-09-30T10:24:31Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxMzIzNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497413236", "body": "just a wee tip, can ignore or implement as you prefer! \r\n\r\nwhen a one liner follows an else block, you can move all the code on to one line for improved readability:\r\n\r\n```suggestion\r\n              } else new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\r\n```", "bodyText": "just a wee tip, can ignore or implement as you prefer!\nwhen a one liner follows an else block, you can move all the code on to one line for improved readability:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          } else {\n          \n          \n            \n                            new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n          \n          \n            \n                          } else new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();", "bodyHTML": "<p dir=\"auto\">just a wee tip, can ignore or implement as you prefer!</p>\n<p dir=\"auto\">when a one liner follows an else block, you can move all the code on to one line for improved readability:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Feature layer failed to load<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              } <span class=\"pl-k\">else</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Feature layer failed to load<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-09-30T10:43:13Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjk3Mw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r498722973", "bodyText": "Thanks, I think that will help in this sample as there's quite a few of them so tidies it up a bit!", "author": "jenmerritt", "createdAt": "2020-10-02T09:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxMzIzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxMzQwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497413401", "body": "same here as above if you like, up to you", "bodyText": "same here as above if you like, up to you", "bodyHTML": "<p dir=\"auto\">same here as above if you like, up to you</p>", "author": "Rachael-E", "createdAt": "2020-09-30T10:43:33Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQxNzkzMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497417931", "body": "we can move this line of code up to just under the `setOnMouseClicked` call, and remove the repeated code on line 149. That way the reference to this Point2D is kept and both if statements can reference it without having to repeat the code. ", "bodyText": "we can move this line of code up to just under the setOnMouseClicked call, and remove the repeated code on line 149. That way the reference to this Point2D is kept and both if statements can reference it without having to repeat the code.", "bodyHTML": "<p dir=\"auto\">we can move this line of code up to just under the <code>setOnMouseClicked</code> call, and remove the repeated code on line 149. That way the reference to this Point2D is kept and both if statements can reference it without having to repeat the code.</p>", "author": "Rachael-E", "createdAt": "2020-09-30T10:52:49Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU1NTQwMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497555402", "body": "there are a lot of repeated `new Alert(Alert.AlertType.ERROR)` in this method: we could create a new method `showAlert(String alertText)` later in the code and call that instead, just to make this a bit more readable. \r\n```suggestion\r\n      showAlert(\"Version name cannot begin with a space\");\r\n```", "bodyText": "there are a lot of repeated new Alert(Alert.AlertType.ERROR) in this method: we could create a new method showAlert(String alertText) later in the code and call that instead, just to make this a bit more readable.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n          \n          \n            \n                  showAlert(\"Version name cannot begin with a space\");", "bodyHTML": "<p dir=\"auto\">there are a lot of repeated <code>new Alert(Alert.AlertType.ERROR)</code> in this method: we could create a new method <code>showAlert(String alertText)</code> later in the code and call that instead, just to make this a bit more readable.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">Alert</span><span class=\"x\">(</span><span class=\"pl-smi x\">Alert</span><span class=\"pl-k x\">.</span><span class=\"pl-smi x\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">ERROR</span></span><span class=\"x x-last\">, </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Version name cannot begin with a space<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">show(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first x-last\">showAlert(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Version name cannot begin with a space<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-09-30T14:28:32Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+    if (inputName.contains(\".\") || inputName.contains(\";\") || inputName.contains(\"'\") || inputName.contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR,\n+        \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (inputName.length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NDYwOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497564609", "body": "I'd be tempted to abstract this out into its own method (`validateTextInput`). This is quite a chunk of code for handling input which detracts from the main point of this method, which is to show the `ServiceVersionParameters` etc functionality. We don't often go for individual methods but in a case like this where there is a lot of UI specific case handling, it's ok to move that out. ", "bodyText": "I'd be tempted to abstract this out into its own method (validateTextInput). This is quite a chunk of code for handling input which detracts from the main point of this method, which is to show the ServiceVersionParameters etc functionality. We don't often go for individual methods but in a case like this where there is a lot of UI specific case handling, it's ok to move that out.", "bodyHTML": "<p dir=\"auto\">I'd be tempted to abstract this out into its own method (<code>validateTextInput</code>). This is quite a chunk of code for handling input which detracts from the main point of this method, which is to show the <code>ServiceVersionParameters</code> etc functionality. We don't often go for individual methods but in a case like this where there is a lot of UI specific case handling, it's ok to move that out.</p>", "author": "Rachael-E", "createdAt": "2020-09-30T14:40:08Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;\n+\n+  public void initialize() {\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersion = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else {\n+                new Alert(Alert.AlertType.ERROR, \"Feature layer failed to load\").show();\n+              }\n+            });\n+          } else {\n+            new Alert(Alert.AlertType.ERROR, \"Unable to get the service feature table\").show();\n+          }\n+        } else {\n+          progressIndicator.setVisible(false);\n+          new Alert(Alert.AlertType.ERROR, \"Service geodatabase failed to load\").show();\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          Point2D point = new Point2D(event.getX(), event.getY());\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersion)) {\n+            Point2D point = new Point2D(event.getX(), event.getY());\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+    if (inputName.contains(\".\") || inputName.contains(\";\") || inputName.contains(\"'\") || inputName.contains(\"\\\"\")) {\n+      new Alert(Alert.AlertType.ERROR,\n+        \"Please enter a valid version name.\\nThe name cannot contain the following characters:\\n. ; ' \\\" \").show();\n+      return;\n+    } else if (inputName.length() > 0 && Character.isWhitespace(nameTextField.getText().charAt(0))) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name cannot begin with a space\").show();\n+      return;\n+    } else if (inputName.length() > 62) {\n+      new Alert(Alert.AlertType.ERROR, \"Version name must not exceed 62 characters\").show();\n+      return;\n+    } else if (inputName.length() == 0) {\n+      new Alert(Alert.AlertType.ERROR, \"Please enter a version name\").show();\n+      return;\n+    }", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2OTA5OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497569099", "body": "can we rename this to `defaultVersionName`: currently the variable name is a little obscure as to what a `defaultVersion` object is, especially when reading it later down the code without the context. \r\n```suggestion\r\n  private String defaultVersionName;\r\n```", "bodyText": "can we rename this to defaultVersionName: currently the variable name is a little obscure as to what a defaultVersion object is, especially when reading it later down the code without the context.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String defaultVersion;\n          \n          \n            \n              private String defaultVersionName;", "bodyHTML": "<p dir=\"auto\">can we rename this to <code>defaultVersionName</code>: currently the variable name is a little obscure as to what a <code>defaultVersion</code> object is, especially when reading it later down the code without the context.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">defaultVersion</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">defaultVersionName</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-09-30T14:45:39Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3MzE2MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r497573160", "body": "same for this \r\n```suggestion\r\n  private String userCreatedVersionName;\r\n```", "bodyText": "same for this\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String userCreatedVersion;\n          \n          \n            \n              private String userCreatedVersionName;", "bodyHTML": "<p dir=\"auto\">same for this</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">userCreatedVersion</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">userCreatedVersionName</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-09-30T14:50:51Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersion;\n+  private String userCreatedVersion;", "originalCommit": "9ad843f137132e5754df1443fe160e79a45068cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a587a7d50a09004c86cc4ee4386fbd0316d8cede", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a587a7d50a09004c86cc4ee4386fbd0316d8cede", "message": "small fixes from code review", "committedDate": "2020-10-02T09:53:14Z", "type": "commit"}, {"oid": "96618213b9c02e5e1b4ab536a09a76fbf9371ca5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/96618213b9c02e5e1b4ab536a09a76fbf9371ca5", "message": "create error alert method", "committedDate": "2020-10-02T10:42:40Z", "type": "commit"}, {"oid": "b59ac3065a32a24cf51995840f905f8df6fa52e6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b59ac3065a32a24cf51995840f905f8df6fa52e6", "message": "create method for text validation", "committedDate": "2020-10-02T11:02:00Z", "type": "commit"}, {"oid": "3fa6040c05fcb1d1d231c564d7c538b78320c7da", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3fa6040c05fcb1d1d231c564d7c538b78320c7da", "message": "updates to readme", "committedDate": "2020-10-02T14:11:07Z", "type": "commit"}, {"oid": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/59dfd0af9a095dd0c239f4931ab3abe83df53668", "message": "add link to docs in readme", "committedDate": "2020-10-02T15:02:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3NTM1Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r499675356", "body": "since we are using serviceGeodatabase across multiple methods, we can remove the comment for garbage collection here. Let's only use that comment if the sole purpose it has been made a class variable is to counteract garbage collection! ", "bodyText": "since we are using serviceGeodatabase across multiple methods, we can remove the comment for garbage collection here. Let's only use that comment if the sole purpose it has been made a class variable is to counteract garbage collection!", "bodyHTML": "<p dir=\"auto\">since we are using serviceGeodatabase across multiple methods, we can remove the comment for garbage collection here. Let's only use that comment if the sole purpose it has been made a class variable is to counteract garbage collection!</p>", "author": "Rachael-E", "createdAt": "2020-10-05T15:14:44Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4MjAyOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r499682029", "body": "getting an IDE prompt to shorten the above to the following:\r\n\r\n```suggestion\r\n   if (!isTextInputValid(inputName)) return;\r\n```", "bodyText": "getting an IDE prompt to shorten the above to the following:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               if (!isTextInputValid(inputName)) {\n          \n          \n            \n                 return;\n          \n          \n            \n               };\n          \n          \n            \n               if (!isTextInputValid(inputName)) return;", "bodyHTML": "<p dir=\"auto\">getting an IDE prompt to shorten the above to the following:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>isTextInputValid(inputName)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   };</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>isTextInputValid(inputName)) <span class=\"pl-k\">return</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-05T15:24:17Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4NDgxOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r499684819", "body": "the indentation is a little out on this line: there is an auto indent function in IntelliJ if you haven't come across this already which helps sort things like this! ", "bodyText": "the indentation is a little out on this line: there is an auto indent function in IntelliJ if you haven't come across this already which helps sort things like this!", "bodyHTML": "<p dir=\"auto\">the indentation is a little out on this line: there is an auto indent function in IntelliJ if you haven't come across this already which helps sort things like this!</p>", "author": "Rachael-E", "createdAt": "2020-10-05T15:28:15Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5ODMyNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r500398327", "bodyText": "Good spot thanks - I have used that but must have not done it after making the changes. Will try get in the habit each time \ud83d\udc4d", "author": "jenmerritt", "createdAt": "2020-10-06T15:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4NDgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4NTkzOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r499685938", "body": "could opt for a one liner here too\r\n```suggestion\r\n } else showAlert(\"Error creating new version\");\r\n```", "bodyText": "could opt for a one liner here too\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else {\n          \n          \n            \n                      showAlert(\"Error creating new version\");\n          \n          \n            \n                    }\n          \n          \n            \n             } else showAlert(\"Error creating new version\");", "bodyHTML": "<p dir=\"auto\">could opt for a one liner here too</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error creating new version<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> } <span class=\"pl-k\">else</span> showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error creating new version<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-05T15:29:42Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };\n+\n+    // validate version access input\n+    if (accessTypeComboBox.getSelectionModel().getSelectedItem() == null) {\n+      showAlert(\"Please select an access level\");\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(inputName);\n+    newVersionParameters.setAccess(accessTypeComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersionName = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersionName);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          showAlert(\"A version with this name already exists.\\\\nPlease enter a unique name\");\n+        } else {\n+          showAlert(\"Error creating new version\");\n+        }", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3NTU0OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r500175548", "body": "We can improve this slightly. Currently there are two instances where an identical alert will be shown \"Error applying edits on server\". We could switch it round to deliver a \"success\" alert if all is well (after doing a robust check of that), and if it's not, display a more meaningful error message by directly accessing the error message. \r\n\r\n```suggestion\r\n} else {\r\n        // if local edits exist apply the edits to the service geodatabase\r\n        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\r\n        resultOfApplyEdits.addDoneListener(() -> {\r\n          try {\r\n            // retrieve the edits\r\n            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\r\n            // if the edits were successful, switch to the default version\r\n            if (edits != null && edits.size() > 0) {\r\n              if (!edits.get(0).getEditResult().get(0).hasCompletedWithErrors()) {\r\n                new Alert(Alert.AlertType.INFORMATION, \"Applied edits successfully on the server\").show();\r\n                switchVersion(defaultVersionName);\r\n              } else {\r\n                throw edits.get(0).getEditResult().get(0).getError();\r\n              }\r\n            }\r\n          } catch (InterruptedException | ExecutionException e) {\r\n            showAlert(\"Error applying edits on server\" + e.getCause().getMessage());\r\n          }\r\n```", "bodyText": "We can improve this slightly. Currently there are two instances where an identical alert will be shown \"Error applying edits on server\". We could switch it round to deliver a \"success\" alert if all is well (after doing a robust check of that), and if it's not, display a more meaningful error message by directly accessing the error message.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  } else {\n          \n          \n            \n                    // if local edits exist apply the edits\n          \n          \n            \n                    ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n          \n          \n            \n                    resultOfApplyEdits.addDoneListener(() -> {\n          \n          \n            \n                      try {\n          \n          \n            \n            \n          \n          \n            \n                        // check if the server edit was successful\n          \n          \n            \n                        List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n          \n          \n            \n                        if (edits == null || edits.isEmpty()) {\n          \n          \n            \n                          showAlert(\"Error applying edits on server\");\n          \n          \n            \n                        } else {\n          \n          \n            \n                          // if the edits were successful, switch to the default version\n          \n          \n            \n                          switchVersion(defaultVersionName);\n          \n          \n            \n                        }\n          \n          \n            \n                      } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                        showAlert(\"Error applying edits on server\");\n          \n          \n            \n                      }\n          \n          \n            \n            } else {\n          \n          \n            \n                    // if local edits exist apply the edits to the service geodatabase\n          \n          \n            \n                    ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n          \n          \n            \n                    resultOfApplyEdits.addDoneListener(() -> {\n          \n          \n            \n                      try {\n          \n          \n            \n                        // retrieve the edits\n          \n          \n            \n                        List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n          \n          \n            \n                        // if the edits were successful, switch to the default version\n          \n          \n            \n                        if (edits != null && edits.size() > 0) {\n          \n          \n            \n                          if (!edits.get(0).getEditResult().get(0).hasCompletedWithErrors()) {\n          \n          \n            \n                            new Alert(Alert.AlertType.INFORMATION, \"Applied edits successfully on the server\").show();\n          \n          \n            \n                            switchVersion(defaultVersionName);\n          \n          \n            \n                          } else {\n          \n          \n            \n                            throw edits.get(0).getEditResult().get(0).getError();\n          \n          \n            \n                          }\n          \n          \n            \n                        }\n          \n          \n            \n                      } catch (InterruptedException | ExecutionException e) {\n          \n          \n            \n                        showAlert(\"Error applying edits on server\" + e.getCause().getMessage());\n          \n          \n            \n                      }", "bodyHTML": "<p dir=\"auto\">We can improve this slightly. Currently there are two instances where an identical alert will be shown \"Error applying edits on server\". We could switch it round to deliver a \"success\" alert if all is well (after doing a robust check of that), and if it's not, display a more meaningful error message by directly accessing the error message.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"245\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"246\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if local edits exist apply the edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"247\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span>&gt;</span> resultOfApplyEdits <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>applyEditsAsync();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"248\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        resultOfApplyEdits<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"249\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"250\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"251\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> check if the server edit was successful</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"252\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span> edits <span class=\"pl-k\">=</span> resultOfApplyEdits<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> edits<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"254\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"255\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"256\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the edits were successful, switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              switchVersion(defaultVersionName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> <span class=\"pl-k\">|</span> <span class=\"pl-smi\">ExecutionException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"245\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">} <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"246\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> if local edits exist apply the edits to the service geodatabase</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"247\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">ListenableFuture&lt;<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span>&gt;</span> resultOfApplyEdits <span class=\"pl-k\">=</span> serviceGeodatabase<span class=\"pl-k\">.</span>applyEditsAsync();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"248\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        resultOfApplyEdits<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"249\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"250\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> retrieve the edits</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"251\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">FeatureTableEditResult</span>&gt;</span> edits <span class=\"pl-k\">=</span> resultOfApplyEdits<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"252\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> if the edits were successful, switch to the default version</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (edits <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> edits<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"254\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>edits<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>getEditResult()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>hasCompletedWithErrors()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"255\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Alert</span>(<span class=\"pl-smi\">Alert</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AlertType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INFORMATION</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Applied edits successfully on the server<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>show();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"256\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                switchVersion(defaultVersionName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> edits<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>getEditResult()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>getError();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> <span class=\"pl-k\">|</span> <span class=\"pl-smi\">ExecutionException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"262\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error applying edits on server<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> e<span class=\"pl-k\">.</span>getCause()<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"263\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-06T10:40:51Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };\n+\n+    // validate version access input\n+    if (accessTypeComboBox.getSelectionModel().getSelectedItem() == null) {\n+      showAlert(\"Please select an access level\");\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(inputName);\n+    newVersionParameters.setAccess(accessTypeComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersionName = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersionName);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          showAlert(\"A version with this name already exists.\\\\nPlease enter a unique name\");\n+        } else {\n+          showAlert(\"Error creating new version\");\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersionName);\n+\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersionName)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersionName);\n+\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              showAlert(\"Error applying edits on server\");\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersionName);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            showAlert(\"Error applying edits on server\");\n+          }", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyNzIxMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r501627213", "bodyText": "Added this and tested, think it works well with the success alert.", "author": "jenmerritt", "createdAt": "2020-10-08T10:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3NTU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4ODc3NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r500188774", "body": "having a look at some similar samples which use `ListenableFuture`s, I'm recognising the use of a try/catch within their addDoneListeners. There are some instances in the code where this `switchVersion` method is called within a try/catch anyway, so it's caught there, but in some places it isn't. We will get a more meaningful error message for the user by catching an exception and printing it out rather than a hard coded string alert: although this can be helpful too. \r\n\r\n```suggestion\r\n    switchVersionFuture.addDoneListener(() -> {\r\n      try {\r\n        // check if the active version has switched successfully and update the UI\r\n        if (serviceGeodatabase.getVersionName().equals(versionName)) {\r\n          currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\r\n          editFeatureVBox.setDisable(true);\r\n        }\r\n      } catch (Exception e) {\r\n        e.printStackTrace();\r\n      }\r\n    });\r\n```", "bodyText": "having a look at some similar samples which use ListenableFutures, I'm recognising the use of a try/catch within their addDoneListeners. There are some instances in the code where this switchVersion method is called within a try/catch anyway, so it's caught there, but in some places it isn't. We will get a more meaningful error message for the user by catching an exception and printing it out rather than a hard coded string alert: although this can be helpful too.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                switchVersionFuture.addDoneListener(() -> {\n          \n          \n            \n                  // check if the active version has switched successfully and update the UI\n          \n          \n            \n                  if (serviceGeodatabase.getVersionName().equals(versionName)) {\n          \n          \n            \n                    currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n          \n          \n            \n                    editFeatureVBox.setDisable(true);\n          \n          \n            \n                  } else {\n          \n          \n            \n                    showAlert(\"Error switching version\");\n          \n          \n            \n                  }\n          \n          \n            \n                });\n          \n          \n            \n                switchVersionFuture.addDoneListener(() -> {\n          \n          \n            \n                  try {\n          \n          \n            \n                    // check if the active version has switched successfully and update the UI\n          \n          \n            \n                    if (serviceGeodatabase.getVersionName().equals(versionName)) {\n          \n          \n            \n                      currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n          \n          \n            \n                      editFeatureVBox.setDisable(true);\n          \n          \n            \n                    }\n          \n          \n            \n                  } catch (Exception e) {\n          \n          \n            \n                    e.printStackTrace();\n          \n          \n            \n                  }\n          \n          \n            \n                });", "bodyHTML": "<p dir=\"auto\">having a look at some similar samples which use <code>ListenableFuture</code>s, I'm recognising the use of a try/catch within their addDoneListeners. There are some instances in the code where this <code>switchVersion</code> method is called within a try/catch anyway, so it's caught there, but in some places it isn't. We will get a more meaningful error message for the user by catching an exception and printing it out rather than a hard coded string alert: although this can be helpful too.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"268\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    switchVersionFuture<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"269\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> check if the active version has switched successfully and update the UI</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"270\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(versionName)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"271\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        currentVersionLabel<span class=\"pl-k\">.</span>setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current version: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"272\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        editFeatureVBox<span class=\"pl-k\">.</span>setDisable(<span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error switching version<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"275\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"276\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"268\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    switchVersionFuture<span class=\"pl-k\">.</span>addDoneListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"269\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"270\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> check if the active version has switched successfully and update the UI</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"271\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName()<span class=\"pl-k\">.</span>equals(versionName)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"272\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          currentVersionLabel<span class=\"pl-k\">.</span>setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current version: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> serviceGeodatabase<span class=\"pl-k\">.</span>getVersionName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          editFeatureVBox<span class=\"pl-k\">.</span>setDisable(<span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"275\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"276\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        e<span class=\"pl-k\">.</span>printStackTrace();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"277\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"278\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-06T11:05:36Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };\n+\n+    // validate version access input\n+    if (accessTypeComboBox.getSelectionModel().getSelectedItem() == null) {\n+      showAlert(\"Please select an access level\");\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(inputName);\n+    newVersionParameters.setAccess(accessTypeComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersionName = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersionName);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          showAlert(\"A version with this name already exists.\\\\nPlease enter a unique name\");\n+        } else {\n+          showAlert(\"Error creating new version\");\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersionName);\n+\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersionName)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersionName);\n+\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              showAlert(\"Error applying edits on server\");\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersionName);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            showAlert(\"Error applying edits on server\");\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionFuture = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionFuture.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        showAlert(\"Error switching version\");\n+      }\n+    });", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyNTYyNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r501625625", "bodyText": "Added this in. The other place with a listenable futures was the update features method (line 318) but in other samples this doesn't seem to have a try catch, so I've left it as it is with the if statement and alert. I guess any exceptions would get caught in the initialize try/catch when that method is called. Let me know if you think this is justified or should be added.", "author": "jenmerritt", "createdAt": "2020-10-08T10:48:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4ODc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MjY4NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r500192684", "body": "we can directly access a failure message from a feature which has a load failure, which can be more helpful to the user:\r\n\r\n```suggestion\r\n            showAlert(selectedFeature.getLoadError().getCause().getMessage());\r\n```", "bodyText": "we can directly access a failure message from a feature which has a load failure, which can be more helpful to the user:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            showAlert(\"Feature failed to load\");\n          \n          \n            \n                        showAlert(selectedFeature.getLoadError().getCause().getMessage());", "bodyHTML": "<p dir=\"auto\">we can directly access a failure message from a feature which has a load failure, which can be more helpful to the user:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first x-last\">    </span>showAlert(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">Feature failed to load</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            showAlert(<span class=\"x x-first\">selectedFeature</span><span class=\"pl-k x\">.</span><span class=\"x\">getLoadError()</span><span class=\"pl-k x\">.</span><span class=\"x\">getCause()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage()</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-06T11:13:06Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };\n+\n+    // validate version access input\n+    if (accessTypeComboBox.getSelectionModel().getSelectedItem() == null) {\n+      showAlert(\"Please select an access level\");\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(inputName);\n+    newVersionParameters.setAccess(accessTypeComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersionName = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersionName);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          showAlert(\"A version with this name already exists.\\\\nPlease enter a unique name\");\n+        } else {\n+          showAlert(\"Error creating new version\");\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersionName);\n+\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersionName)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersionName);\n+\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              showAlert(\"Error applying edits on server\");\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersionName);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            showAlert(\"Error applying edits on server\");\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionFuture = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionFuture.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        showAlert(\"Error switching version\");\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked.\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point) {\n+    ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    identifyLayerResultFuture.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n+        List<GeoElement> identifiedElements = identifyLayerResult.getElements();\n+        if (!identifiedElements.isEmpty()) {\n+          GeoElement element = identifiedElements.get(0);\n+          if (element instanceof ArcGISFeature) {\n+\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when a feature has been selected, get it's damage type value and select it in the damage combo box\n+                String selectedFeatureAttributeValue = (String) selectedFeature.getAttributes().get(\"TYPDAMAGE\");\n+\n+                if (damageTypeComboBox.getItems().contains(selectedFeatureAttributeValue)) {\n+                  damageTypeComboBox.getSelectionModel().select(selectedFeatureAttributeValue);\n+                } else {\n+                  showAlert(\"Unexpected attribute value\");\n+                }\n+\n+                // enable feature editing UI if not on the default version\n+                if (!serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+                  editFeatureVBox.setDisable(false);\n+                }\n+              } else {\n+                showAlert(\"Feature failed to load\");", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyMjY2OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r501622668", "bodyText": "I added a couple more of these for the service geodatabase and feature layer loading as found examples in other samples.\nI didn't for the feature table check as couldn't find another example so wasn't sure, but possibly could add here too (line 124) or just leave it.", "author": "jenmerritt", "createdAt": "2020-10-08T10:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MjY4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5Mzg3OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/553#discussion_r500193878", "body": "another example of where we can improve the alert by providing a meaningful message\r\n\r\n```suggestion\r\n        showAlert(\"Failed to identify the feature\" + e.getCause().getMessage());\r\n```", "bodyText": "another example of where we can improve the alert by providing a meaningful message\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    showAlert(\"Failed to identify the feature\");\n          \n          \n            \n                    showAlert(\"Failed to identify the feature\" + e.getCause().getMessage());", "bodyHTML": "<p dir=\"auto\">another example of where we can improve the alert by providing a meaningful message</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to identify the feature<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        showAlert(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to identify the feature<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x\">getCause()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage()</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-10-06T11:15:12Z", "path": "editing/edit-with-branch-versioning/src/main/java/com/esri/samples/edit_with_branch_versioning/EditWithBranchVersioningController.java", "diffHunk": "@@ -0,0 +1,378 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.edit_with_branch_versioning;\n+\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import javafx.fxml.FXML;\n+import javafx.geometry.Point2D;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressIndicator;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.layout.VBox;\n+\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionInfo;\n+import com.esri.arcgisruntime.arcgisservices.ServiceVersionParameters;\n+import com.esri.arcgisruntime.arcgisservices.VersionAccess;\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.data.ArcGISFeature;\n+import com.esri.arcgisruntime.data.FeatureTableEditResult;\n+import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.data.ServiceGeodatabase;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.FeatureLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.security.AuthenticationManager;\n+import com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler;\n+\n+public class EditWithBranchVersioningController {\n+\n+  @FXML private Button createVersionButton;\n+  @FXML private Button switchVersionButton;\n+  @FXML private ComboBox<String> damageTypeComboBox;\n+  @FXML private ComboBox<VersionAccess> accessTypeComboBox;\n+  @FXML private Label currentVersionLabel;\n+  @FXML private MapView mapView;\n+  @FXML private ProgressIndicator progressIndicator;\n+  @FXML private TextField descriptionTextField;\n+  @FXML private TextField nameTextField;\n+  @FXML private VBox createVersionVBox;\n+  @FXML private VBox editFeatureVBox;\n+\n+  private ArcGISFeature selectedFeature;\n+  private FeatureLayer featureLayer;\n+  private ServiceFeatureTable serviceFeatureTable;\n+  private ServiceGeodatabase serviceGeodatabase; // keeps loadable in scope to avoid garbage collection\n+  private String defaultVersionName;\n+  private String userCreatedVersionName;\n+\n+  public void initialize() {\n+\n+    try {\n+      // create a map with the streets vector basemap and set it to the map view\n+      ArcGISMap map = new ArcGISMap(Basemap.createStreetsVector());\n+      mapView.setMap(map);\n+\n+      // add the version access types to the access type combo box\n+      accessTypeComboBox.getItems().addAll(VersionAccess.PUBLIC, VersionAccess.PROTECTED, VersionAccess.PRIVATE);\n+\n+      // add the damage types to the damage type combo box\n+      damageTypeComboBox.getItems().addAll(\"Destroyed\", \"Inaccessible\", \"Major\", \"Minor\", \"Affected\");\n+      // add a listener to handle damage type attribute selections and update the selected feature with the new value\n+      damageTypeComboBox.getSelectionModel().selectedItemProperty().addListener((o, p, n) -> {\n+        if (selectedFeature != null && !selectedFeature.getAttributes().get(\"TYPDAMAGE\").equals(n)) {\n+          selectedFeature.getAttributes().put(\"TYPDAMAGE\", damageTypeComboBox.getValue());\n+          updateFeature(selectedFeature);\n+        }\n+      });\n+\n+      // handle authentication for the service geodatabase\n+      AuthenticationManager.setAuthenticationChallengeHandler(new DefaultAuthenticationChallengeHandler());\n+\n+      // create and load a service geodatabase\n+      serviceGeodatabase = new ServiceGeodatabase(\"https://sampleserver7.arcgisonline\" +\n+        \".com/arcgis/rest/services/DamageAssessment/FeatureServer\");\n+      serviceGeodatabase.loadAsync();\n+      serviceGeodatabase.addDoneLoadingListener(() -> {\n+        if (serviceGeodatabase.getLoadStatus() == LoadStatus.LOADED) {\n+\n+          // when the service geodatabase has loaded get the default version\n+          defaultVersionName = serviceGeodatabase.getDefaultVersionName();\n+\n+          // get the service feature table from the service geodatabase\n+          if (serviceGeodatabase.getTable(0) != null) {\n+            serviceFeatureTable = serviceGeodatabase.getTable(0);\n+\n+            // create a feature layer from the service feature table and add it to the map\n+            featureLayer = new FeatureLayer(serviceFeatureTable);\n+            map.getOperationalLayers().add(featureLayer);\n+            featureLayer.addDoneLoadingListener(() -> {\n+              if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when the feature layer has loaded set the viewpoint and update the UI\n+                mapView.setViewpointAsync(new Viewpoint(featureLayer.getFullExtent()));\n+                progressIndicator.setVisible(false);\n+                createVersionButton.setDisable(false);\n+                currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+              } else showAlert(\"Feature layer failed to load\");\n+            });\n+          } else showAlert(\"Unable to get the service feature table\");\n+        } else {\n+          progressIndicator.setVisible(false);\n+          showAlert(\"Service geodatabase failed to load\");\n+        }\n+      });\n+\n+      // listen to clicks on the map to select or move features\n+      mapView.setOnMouseClicked(event -> {\n+\n+        // create a point from where the user clicked\n+        Point2D point = new Point2D(event.getX(), event.getY());\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n+          // reset the UI\n+          featureLayer.clearSelection();\n+          editFeatureVBox.setDisable(true);\n+\n+          // select the clicked feature\n+          selectFeature(point);\n+        }\n+\n+        if (event.isStillSincePress() && event.getButton() == MouseButton.SECONDARY) {\n+          // if a feature is selected and the current version is not the default, update the feature's geometry\n+          if (selectedFeature != null && !serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+            Point mapPoint = mapView.screenToLocation(point);\n+            selectedFeature.setGeometry(mapPoint);\n+            updateFeature(selectedFeature);\n+          }\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Create a new branch version using user defined values.\n+   */\n+  @FXML\n+  private void handleCreateVersionButtonClicked() {\n+\n+    // validate version name input\n+    String inputName = nameTextField.getText();\n+   if (!isTextInputValid(inputName)) {\n+     return;\n+   };\n+\n+    // validate version access input\n+    if (accessTypeComboBox.getSelectionModel().getSelectedItem() == null) {\n+      showAlert(\"Please select an access level\");\n+      return;\n+    }\n+\n+    // set the user defined name, access level and description as service version parameters\n+    ServiceVersionParameters newVersionParameters = new ServiceVersionParameters();\n+    newVersionParameters.setName(inputName);\n+    newVersionParameters.setAccess(accessTypeComboBox.getSelectionModel().getSelectedItem());\n+    newVersionParameters.setDescription(descriptionTextField.getText());\n+\n+    // update the UI\n+    createVersionButton.setText(\"Creating version....\");\n+    createVersionButton.setDisable(true);\n+\n+    // create a new version with the specified parameters\n+    ListenableFuture<ServiceVersionInfo> newVersion = serviceGeodatabase.createVersionAsync(newVersionParameters);\n+    newVersion.addDoneListener(() -> {\n+      try {\n+\n+        // get the name of the created version and switch to it\n+        ServiceVersionInfo createdVersionInfo = newVersion.get();\n+        userCreatedVersionName = createdVersionInfo.getName();\n+        switchVersion(userCreatedVersionName);\n+\n+        // hide the form from the UI as the sample only allows 1 version to be created\n+        createVersionVBox.setVisible(false);\n+        switchVersionButton.setDisable(false);\n+      } catch (Exception ex) {\n+        // if there is an error creating a new version, display an alert and reset the UI\n+        if (ex.getCause().toString().contains(\"The version already exists\")) {\n+          showAlert(\"A version with this name already exists.\\\\nPlease enter a unique name\");\n+        } else {\n+          showAlert(\"Error creating new version\");\n+        }\n+        createVersionButton.setText(\"Create version\");\n+        createVersionButton.setDisable(false);\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Apply local edits to the service geodatabase and switch branch version.\n+   */\n+  @FXML\n+  private void handleSwitchVersionButtonClicked() {\n+\n+    if (serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+      // if the current version is the default version, switch to the user created version\n+      switchVersion(userCreatedVersionName);\n+\n+    } else if (serviceGeodatabase.getVersionName().equals(userCreatedVersionName)) {\n+      // if the current version is the user created version, check if there are local edits\n+      if (!serviceGeodatabase.hasLocalEdits()) {\n+        // if there are no local edits switch to the default version\n+        switchVersion(defaultVersionName);\n+\n+      } else {\n+        // if local edits exist apply the edits\n+        ListenableFuture<List<FeatureTableEditResult>> resultOfApplyEdits = serviceGeodatabase.applyEditsAsync();\n+        resultOfApplyEdits.addDoneListener(() -> {\n+          try {\n+\n+            // check if the server edit was successful\n+            List<FeatureTableEditResult> edits = resultOfApplyEdits.get();\n+            if (edits == null || edits.isEmpty()) {\n+              showAlert(\"Error applying edits on server\");\n+            } else {\n+              // if the edits were successful, switch to the default version\n+              switchVersion(defaultVersionName);\n+            }\n+          } catch (InterruptedException | ExecutionException e) {\n+            showAlert(\"Error applying edits on server\");\n+          }\n+        });\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Switch the active branch version.\n+   *\n+   * @param versionName name of the version to switch to\n+   */\n+  private void switchVersion(String versionName) {\n+    ListenableFuture<Void> switchVersionFuture = serviceGeodatabase.switchVersionAsync(versionName);\n+    switchVersionFuture.addDoneListener(() -> {\n+      // check if the active version has switched successfully and update the UI\n+      if (serviceGeodatabase.getVersionName().equals(versionName)) {\n+        currentVersionLabel.setText(\"Current version: \" + serviceGeodatabase.getVersionName());\n+        editFeatureVBox.setDisable(true);\n+      } else {\n+        showAlert(\"Error switching version\");\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Select a feature if one exists where the user clicked.\n+   *\n+   * @param point location where the user clicked\n+   */\n+  private void selectFeature(Point2D point) {\n+    ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture = mapView.identifyLayerAsync(featureLayer, point, 1, false);\n+    identifyLayerResultFuture.addDoneListener(() -> {\n+      try {\n+        IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n+        List<GeoElement> identifiedElements = identifyLayerResult.getElements();\n+        if (!identifiedElements.isEmpty()) {\n+          GeoElement element = identifiedElements.get(0);\n+          if (element instanceof ArcGISFeature) {\n+\n+            // get the selected feature\n+            selectedFeature = (ArcGISFeature) element;\n+            featureLayer.selectFeature(selectedFeature);\n+            selectedFeature.addDoneLoadingListener(() -> {\n+              if (selectedFeature.getLoadStatus() == LoadStatus.LOADED) {\n+\n+                // when a feature has been selected, get it's damage type value and select it in the damage combo box\n+                String selectedFeatureAttributeValue = (String) selectedFeature.getAttributes().get(\"TYPDAMAGE\");\n+\n+                if (damageTypeComboBox.getItems().contains(selectedFeatureAttributeValue)) {\n+                  damageTypeComboBox.getSelectionModel().select(selectedFeatureAttributeValue);\n+                } else {\n+                  showAlert(\"Unexpected attribute value\");\n+                }\n+\n+                // enable feature editing UI if not on the default version\n+                if (!serviceGeodatabase.getVersionName().equals(defaultVersionName)) {\n+                  editFeatureVBox.setDisable(false);\n+                }\n+              } else {\n+                showAlert(\"Feature failed to load\");\n+              }\n+            });\n+          }\n+        }\n+      } catch (InterruptedException | ExecutionException e) {\n+        showAlert(\"Failed to identify the feature\");", "originalCommit": "59dfd0af9a095dd0c239f4931ab3abe83df53668", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "379f1af2251ac0f556b023cbde1901f77e30b7ad", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/379f1af2251ac0f556b023cbde1901f77e30b7ad", "message": "tidy ups from code review", "committedDate": "2020-10-06T15:44:50Z", "type": "commit"}, {"oid": "b6218ebe3977319229df5fec91e2f6a80d719299", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b6218ebe3977319229df5fec91e2f6a80d719299", "message": "amend error messages", "committedDate": "2020-10-08T09:37:00Z", "type": "commit"}, {"oid": "f3a638bd3e1b71a47483ba53da595c794fb222c6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f3a638bd3e1b71a47483ba53da595c794fb222c6", "message": "validation error messaging", "committedDate": "2020-10-08T11:13:24Z", "type": "commit"}]}