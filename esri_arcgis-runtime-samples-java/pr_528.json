{"pr_number": 528, "pr_title": "New Sample: Realistic Lighting and Shadows", "pr_author": "sclaridge", "pr_createdAt": "2020-07-15T15:06:16Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528", "timeline": [{"oid": "c0d36d6463bd50b5777cbcebaf29eff3d8f1142e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c0d36d6463bd50b5777cbcebaf29eff3d8f1142e", "message": "Set up sample with Display a Scene application code", "committedDate": "2020-07-08T12:18:03Z", "type": "commit"}, {"oid": "2ea32a2146ec7ab0170cb369893f18f182fc5f6b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/2ea32a2146ec7ab0170cb369893f18f182fc5f6b", "message": "Added style.css", "committedDate": "2020-07-08T14:17:46Z", "type": "commit"}, {"oid": "38755384f2849fb32213b3895925770536b1513b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/38755384f2849fb32213b3895925770536b1513b", "message": "Updated arcgis runtime version 100.9.0-2782 in build.gradle", "committedDate": "2020-07-08T14:19:22Z", "type": "commit"}, {"oid": "993eef0e8389f3ea8ec36f007fc45d812201ddcd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/993eef0e8389f3ea8ec36f007fc45d812201ddcd", "message": "Removed \"Sample\" from the project name, java files", "committedDate": "2020-07-08T18:50:40Z", "type": "commit"}, {"oid": "58d4585f2551540444bbabbf77b74bb2278e2791", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/58d4585f2551540444bbabbf77b74bb2278e2791", "message": "Created a controller and view with FXML", "committedDate": "2020-07-12T14:06:29Z", "type": "commit"}, {"oid": "7b353d3261bc0afcb9824351b63e80cbfc78c7fd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7b353d3261bc0afcb9824351b63e80cbfc78c7fd", "message": "Fixed button event handlers", "committedDate": "2020-07-13T12:30:41Z", "type": "commit"}, {"oid": "e1a28916b190bfab55552e4bba241e7ce4a8f303", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e1a28916b190bfab55552e4bba241e7ce4a8f303", "message": "Fixed formatting and removed unused selectors in style.css", "committedDate": "2020-07-13T16:39:53Z", "type": "commit"}, {"oid": "90db78c532b69b895e9568cc0b2577bbb18d8fba", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/90db78c532b69b895e9568cc0b2577bbb18d8fba", "message": "Update JavaFX modules and version", "committedDate": "2020-07-14T10:17:24Z", "type": "commit"}, {"oid": "d30d16537b5054327231a171fb6537f3f1d60699", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d30d16537b5054327231a171fb6537f3f1d60699", "message": "Change camera, scene layer to Portland buildings", "committedDate": "2020-07-14T12:11:28Z", "type": "commit"}, {"oid": "06b7f6c7312d22cba116997906012ae460f03894", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/06b7f6c7312d22cba116997906012ae460f03894", "message": "Update calendar to PST", "committedDate": "2020-07-15T10:21:26Z", "type": "commit"}, {"oid": "0eb24f5c8e3c5cc7bc5934f8d262c471338425b1", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0eb24f5c8e3c5cc7bc5934f8d262c471338425b1", "message": "Update image and remove unused imports", "committedDate": "2020-07-15T10:49:45Z", "type": "commit"}, {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "message": "Rename files", "committedDate": "2020-07-15T11:58:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NTAyMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455145020", "body": "There's a particular order we want the imports to be in, and you can set up IntelliJ to do this for you automatically (see the screenshot below, the UI is a bit terrible since the window is not tall enough to show everything. Give me a shout if you get stuck).\r\nThe order would be:\r\n```\r\nimport java.*\r\n<newline>\r\nimport javafx.*\r\n<newline>\r\nimport com.esri.*\r\n<newline>\r\nimport static all other imports\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/44193148/87567702-21b2cb80-c6b4-11ea-95ee-9bfe91199ccb.png)\r\n\r\n", "bodyText": "There's a particular order we want the imports to be in, and you can set up IntelliJ to do this for you automatically (see the screenshot below, the UI is a bit terrible since the window is not tall enough to show everything. Give me a shout if you get stuck).\nThe order would be:\nimport java.*\n<newline>\nimport javafx.*\n<newline>\nimport com.esri.*\n<newline>\nimport static all other imports", "bodyHTML": "<p dir=\"auto\">There's a particular order we want the imports to be in, and you can set up IntelliJ to do this for you automatically (see the screenshot below, the UI is a bit terrible since the window is not tall enough to show everything. Give me a shout if you get stuck).<br>\nThe order would be:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import java.*\n&lt;newline&gt;\nimport javafx.*\n&lt;newline&gt;\nimport com.esri.*\n&lt;newline&gt;\nimport static all other imports\"><pre><code>import java.*\n&lt;newline&gt;\nimport javafx.*\n&lt;newline&gt;\nimport com.esri.*\n&lt;newline&gt;\nimport static all other imports\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/44193148/87567702-21b2cb80-c6b4-11ea-95ee-9bfe91199ccb.png\"><img src=\"https://user-images.githubusercontent.com/44193148/87567702-21b2cb80-c6b4-11ea-95ee-9bfe91199ccb.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "JonLavi", "createdAt": "2020-07-15T15:34:23Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Njc0OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455146748", "body": "In some of our samples we have the `@FXML` tag on the same line we define the class members. I know the IDE tends to want to put these on different lines, so in some of our samples it's just like you have it here.\r\nI kind of thing it's neater if they are on one line, but if the IDE formats it this way then it ought to be the 'best practice', so let's see if @Rachael-E has any strong feelings.", "bodyText": "In some of our samples we have the @FXML tag on the same line we define the class members. I know the IDE tends to want to put these on different lines, so in some of our samples it's just like you have it here.\nI kind of thing it's neater if they are on one line, but if the IDE formats it this way then it ought to be the 'best practice', so let's see if @Rachael-E has any strong feelings.", "bodyHTML": "<p dir=\"auto\">In some of our samples we have the <code>@FXML</code> tag on the same line we define the class members. I know the IDE tends to want to put these on different lines, so in some of our samples it's just like you have it here.<br>\nI kind of thing it's neater if they are on one line, but if the IDE formats it this way then it ought to be the 'best practice', so let's see if <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rachael-E/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rachael-E\">@Rachael-E</a> has any strong feelings.</p>", "author": "JonLavi", "createdAt": "2020-07-15T15:36:58Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Nzg5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455147894", "body": "We don't strictly enforce a line length in samples, so I think we can just write this on one line:\r\n\r\n```suggestion\r\n      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\r\n```", "bodyText": "We don't strictly enforce a line length in samples, so I think we can just write this on one line:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n          \n          \n            \n                    \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n          \n          \n            \n                  ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");", "bodyHTML": "<p dir=\"auto\">We don't strictly enforce a line length in samples, so I think we can just write this on one line:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ArcGISTiledElevationSource</span> elevationSource <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISTiledElevationSource</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://elevation3d.arcgis<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ArcGISTiledElevationSource</span> elevationSource <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISTiledElevationSource</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:38:50Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0OTM2OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455149368", "body": "What's actually happening in the line below is that we're adding the ArcGISScene to our scene view, not the scene view to the stack pane, so let's update this comment:\r\n```suggestion\r\n      // add the scene to the scene view\r\n```", "bodyText": "What's actually happening in the line below is that we're adding the ArcGISScene to our scene view, not the scene view to the stack pane, so let's update this comment:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add the SceneView to the stack pane\n          \n          \n            \n                  // add the scene to the scene view", "bodyHTML": "<p dir=\"auto\">What's actually happening in the line below is that we're adding the ArcGISScene to our scene view, not the scene view to the stack pane, so let's update this comment:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add the <span class=\"x x-first x-last\">SceneView</span> to the <span class=\"x x-first x-last\">stack pane</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add the <span class=\"x x-first x-last\">scene</span> to the <span class=\"x x-first x-last\">scene view</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:41:07Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0OTc5OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455149799", "body": "We can be a tad more specific about where we're adding the base surface to\r\n```suggestion\r\n      // add a base surface for elevation data to the scene\r\n```", "bodyText": "We can be a tad more specific about where we're adding the base surface to\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add base surface for elevation data\n          \n          \n            \n                  // add a base surface for elevation data to the scene", "bodyHTML": "<p dir=\"auto\">We can be a tad more specific about where we're adding the base surface to</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add base surface for elevation data</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add <span class=\"x x-first x-last\">a </span>base surface for elevation data<span class=\"x x-first x-last\"> to the scene</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:41:44Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDMyMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150321", "body": "Same here, I think we could do this in one line. If the auto-formatting is chopping up lines for you, you can increase the character limit in the settings.\r\n\r\n```suggestion\r\n      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\r\n```", "bodyText": "Same here, I think we could do this in one line. If the auto-formatting is chopping up lines for you, you can increase the character limit in the settings.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n          \n          \n            \n                    \"/DevA_BuildingShells\" +\n          \n          \n            \n                    \"/SceneServer/layers/0\";\n          \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";", "bodyHTML": "<p dir=\"auto\">Same here, I think we could do this in one line. If the auto-formatting is chopping up lines for you, you can increase the character limit in the settings.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> buildings <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/DevA_BuildingShells<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> buildings <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:42:34Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDU2NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150564", "body": "```suggestion\r\n      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0, 0.0);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n          \n          \n            \n                    0.0);\n          \n          \n            \n                  Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0, 0.0);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">Camera</span> camera <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Camera</span>(<span class=\"pl-c1\">45.54605153789073</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">122.69033380511073</span>, <span class=\"pl-c1\">941.0002111233771</span>, <span class=\"pl-c1\">162.58544227544266</span>, <span class=\"pl-c1\">60.0</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">0.0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">Camera</span> camera <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Camera</span>(<span class=\"pl-c1\">45.54605153789073</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">122.69033380511073</span>, <span class=\"pl-c1\">941.0002111233771</span>, <span class=\"pl-c1\">162.58544227544266</span>, <span class=\"pl-c1\">60.0</span>, <span class=\"pl-c1\">0.0</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:42:58Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDg2MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150860", "body": "Just a wee missing space here:\r\n\r\n```suggestion\r\n      // set the time label on the control panel\r\n```", "bodyText": "Just a wee missing space here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //set the time label on the control panel\n          \n          \n            \n                  // set the time label on the control panel", "bodyHTML": "<p dir=\"auto\">Just a wee missing space here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>set the time label on the control panel</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>set the time label on the control panel</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:43:24Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MTIyMg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455151222", "body": "Another missing space:\r\n```suggestion\r\n      // update the atmosphere effect based on the button clicked\r\n```", "bodyText": "Another missing space:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //update the atmosphere effect based on the button clicked\n          \n          \n            \n                  // update the atmosphere effect based on the button clicked", "bodyHTML": "<p dir=\"auto\">Another missing space:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>update the atmosphere effect based on the button clicked</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>update the atmosphere effect based on the button clicked</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:44:02Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455154595", "body": "Instead of three distinct buttons, we might be better off using a toggle group with radio buttons (or a drop-down menu). The implication of either of these control elements is that one option always has to be chosen/active at any given time. Buttons on the other hand imply you perform a 'one off' action the moment you click them.\r\nCheck out how to create a toggle group here:\r\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/network_analysis/service-area-task/src/main/resources/service_area_task/main.fxml#L38-L43\r\n\r\nI think you can then interrogate the toggle group as to which radio button is selected, and pass that value into your method `setSunLighting`", "bodyText": "Instead of three distinct buttons, we might be better off using a toggle group with radio buttons (or a drop-down menu). The implication of either of these control elements is that one option always has to be chosen/active at any given time. Buttons on the other hand imply you perform a 'one off' action the moment you click them.\nCheck out how to create a toggle group here:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/network_analysis/service-area-task/src/main/resources/service_area_task/main.fxml#L38-L43\nI think you can then interrogate the toggle group as to which radio button is selected, and pass that value into your method setSunLighting", "bodyHTML": "<p dir=\"auto\">Instead of three distinct buttons, we might be better off using a toggle group with radio buttons (or a drop-down menu). The implication of either of these control elements is that one option always has to be chosen/active at any given time. Buttons on the other hand imply you perform a 'one off' action the moment you click them.<br>\nCheck out how to create a toggle group here:<br>\n<a href=\"https://github.com/Esri/arcgis-runtime-samples-java/blob/master/network_analysis/service-area-task/src/main/resources/service_area_task/main.fxml#L38-L43\">https://github.com/Esri/arcgis-runtime-samples-java/blob/master/network_analysis/service-area-task/src/main/resources/service_area_task/main.fxml#L38-L43</a></p>\n<p dir=\"auto\">I think you can then interrogate the toggle group as to which radio button is selected, and pass that value into your method <code>setSunLighting</code></p>", "author": "JonLavi", "createdAt": "2020-07-15T15:49:32Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNDM2OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455924368", "bodyText": "Would this be the best way to check which radio button has been selected?\n// update the atmosphere effect based on the button clicked\n      toggleGroup.selectedToggleProperty().addListener((observable, oldValue, newValue) -> {\n        if (noSunButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.NO_LIGHT);\n        }\n        else if (sunOnlyButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.LIGHT);\n        }\n        else if (sunAndShadowsButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS);\n        }\n      });", "author": "sclaridge", "createdAt": "2020-07-16T16:42:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNTIwNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456325205", "bodyText": "That would certainly work! A perhaps sleeker way would be to set the 'user data' (it's like a readable property) of the toggle button to be a value of the LightingMode enum, and read that out in the listener. The surface placement placement sample does this, so you could borrow from there:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java#L142-L159\n@jenmerritt will be turning surface placement into a sample using fxml, so you could both check if there's a way to set the user data within the fxml or not (I don't actually know!)", "author": "JonLavi", "createdAt": "2020-07-17T09:20:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4OTcwMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456389701", "bodyText": "I couldn't find a way to set the user data to the LightMode in FXML. However, does this seem correct?\n// set the lighting mode of the buttons\nnoSunButton.setUserData(LightingMode.NO_LIGHT);\nsunOnlyButton.setUserData(LightingMode.LIGHT);\nsunAndShadowsButton.setUserData(LightingMode.LIGHT_AND_SHADOWS);\n\n// update the atmosphere effect based on the button clicked\ntoggleGroup.selectedToggleProperty().addListener((observable, oldToggle, newToggle) -> {\n\tif (toggleGroup.getSelectedToggle() != null)\n\t  sceneView.setSunLighting((LightingMode) toggleGroup.getSelectedToggle().getUserData());\n  });", "author": "sclaridge", "createdAt": "2020-07-17T11:42:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NjQ1OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456396458", "bodyText": "Looks great!", "author": "JonLavi", "createdAt": "2020-07-17T11:58:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjExNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156114", "body": "We're missing a new line in the end of this file. Github is kindly pointing that out \ud83d\ude04 \r\n", "bodyText": "We're missing a new line in the end of this file. Github is kindly pointing that out \ud83d\ude04", "bodyHTML": "<p dir=\"auto\">We're missing a new line in the end of this file. Github is kindly pointing that out <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>", "author": "JonLavi", "createdAt": "2020-07-15T15:52:12Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsLauncher.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+/**\n+ * Wrapper required for launching a JavaFX 11 app through Gradle or from a jar.\n+ */\n+public class RealisticLightingAndShadowsLauncher {\n+\n+  public static void main(String[] args) {\n+    RealisticLightingAndShadowsSample.main(args);\n+  }\n+}", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjU4MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156581", "body": "Don't forget to update this to match the new sample's title:\r\n```suggestion\r\n    stage.setTitle(\"Realistic Lighting and Shadows Sample\");\r\n```", "bodyText": "Don't forget to update this to match the new sample's title:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n          \n          \n            \n                stage.setTitle(\"Realistic Lighting and Shadows Sample\");", "bodyHTML": "<p dir=\"auto\">Don't forget to update this to match the new sample's title:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    stage<span class=\"pl-k\">.</span>setTitle(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Realistic <span class=\"x x-first x-last\">Environmental Atmosphere</span> Sample<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    stage<span class=\"pl-k\">.</span>setTitle(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Realistic <span class=\"x x-first x-last\">Lighting and Shadows</span> Sample<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:53:00Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjkyNw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156927", "body": "Something slightly odd happened with this JavaDoc:\r\n```suggestion\r\n  /**\r\n   * Stops and releases all resources used in application.\r\n   */\r\n```", "bodyText": "Something slightly odd happened with this JavaDoc:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * /**\n          \n          \n            \n               * Stops and releases all resources used in application.\n          \n          \n            \n               */\n          \n          \n            \n              /**\n          \n          \n            \n               * Stops and releases all resources used in application.\n          \n          \n            \n               */", "bodyHTML": "<p dir=\"auto\">Something slightly odd happened with this JavaDoc:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Stops</span> and releases all resources used in application.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Stops</span> and releases all resources used in application.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:53:37Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * /**\n+   * Stops and releases all resources used in application.\n+   */", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NzE1NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455157155", "body": "We can remove this extra line:\r\n```suggestion\r\n```", "bodyText": "We can remove this extra line:\n  \n    \n      \n        Suggested change", "bodyHTML": "<p dir=\"auto\">We can remove this extra line:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T15:54:00Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * /**\n+   * Stops and releases all resources used in application.\n+   */\n+  @Override\n+  public void stop() {\n+    controller.terminate();\n+  }\n+\n+  /**\n+   * Opens and runs application.\n+   *\n+   * @param args arguments passed to this application\n+   */\n+  public static void main(String[] args) {\n+\n+    Application.launch(args);\n+  }\n+", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NzIyNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455167226", "body": "I think most newer samples try and use plain english here, so let's add `Disposes of...`\r\n```suggestion\r\n   * Disposes of application resources.\r\n```", "bodyText": "I think most newer samples try and use plain english here, so let's add Disposes of...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Disposes application resources.\n          \n          \n            \n               * Disposes of application resources.", "bodyHTML": "<p dir=\"auto\">I think most newer samples try and use plain english here, so let's add <code>Disposes of...</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Disposes</span> application resources.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Disposes</span> <span class=\"x x-first x-last\">of </span>application resources.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-15T16:11:01Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dynamicDateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {\n+\n+    timeSlider.setLabelFormatter(new StringConverter<Double>() {\n+\n+      @Override\n+      public String toString(Double object) {\n+\n+        if (object == 4) return \"4am\";\n+        if (object == 8) return \"8am\";\n+        if (object == 12) return \"Midday\";\n+        if (object == 16) return \"4pm\";\n+        if (object == 20) return \"8pm\";\n+\n+        return \"Midnight\";\n+      }\n+\n+      @Override\n+      public Double fromString(String string) {\n+        return null;\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Set the time to display in a label.\n+   */\n+  public void setTimeLabel() {\n+\n+    // set a new calendar and add a date and time\n+    calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+    calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+    sceneView.setSunTime(calendar);\n+\n+    // tidy string to just return date and time (hours and minutes)\n+    SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+    dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+    String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+    // set a label to display the tidied date and time\n+    time.setText(dateAndTimeTidied);\n+  }\n+\n+  /**\n+   * Disposes application resources.", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MTA3OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455181079", "body": "I've noticed the Kotlin sample has the slider represent minutes in `int` instead of a double:\r\nhttps://github.com/Esri/arcgis-runtime-samples-android/pull/836/files?file-filters%5B%5D=.gradle&file-filters%5B%5D=.kt&file-filters%5B%5D=.png&file-filters%5B%5D=.pro&file-filters%5B%5D=.xml&file-filters%5B%5D=dotfile#diff-70792a6978609f728c4f1fb8210f44a3R87-R98\r\n\r\nIt looks like it may make the code a little more succinct, with no conversion between strings/substrings and changing the values from Double over String to Int.\r\nOnce you have the `int minutes` you can easily convert to hours and update your calendar?", "bodyText": "I've noticed the Kotlin sample has the slider represent minutes in int instead of a double:\nhttps://github.com/Esri/arcgis-runtime-samples-android/pull/836/files?file-filters%5B%5D=.gradle&file-filters%5B%5D=.kt&file-filters%5B%5D=.png&file-filters%5B%5D=.pro&file-filters%5B%5D=.xml&file-filters%5B%5D=dotfile#diff-70792a6978609f728c4f1fb8210f44a3R87-R98\nIt looks like it may make the code a little more succinct, with no conversion between strings/substrings and changing the values from Double over String to Int.\nOnce you have the int minutes you can easily convert to hours and update your calendar?", "bodyHTML": "<p dir=\"auto\">I've noticed the Kotlin sample has the slider represent minutes in <code>int</code> instead of a double:<br>\n<a href=\"https://github.com/Esri/arcgis-runtime-samples-android/pull/836/files?file-filters%5B%5D=.gradle&amp;file-filters%5B%5D=.kt&amp;file-filters%5B%5D=.png&amp;file-filters%5B%5D=.pro&amp;file-filters%5B%5D=.xml&amp;file-filters%5B%5D=dotfile#diff-70792a6978609f728c4f1fb8210f44a3R87-R98\">https://github.com/Esri/arcgis-runtime-samples-android/pull/836/files?file-filters%5B%5D=.gradle&amp;file-filters%5B%5D=.kt&amp;file-filters%5B%5D=.png&amp;file-filters%5B%5D=.pro&amp;file-filters%5B%5D=.xml&amp;file-filters%5B%5D=dotfile#diff-70792a6978609f728c4f1fb8210f44a3R87-R98</a></p>\n<p dir=\"auto\">It looks like it may make the code a little more succinct, with no conversion between strings/substrings and changing the values from Double over String to Int.<br>\nOnce you have the <code>int minutes</code> you can easily convert to hours and update your calendar?</p>", "author": "JonLavi", "createdAt": "2020-07-15T16:34:02Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NTcxMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455185710", "body": "We probably don't want to extract this code into a method, but just put it in-line. The reason would be that there's no refactoring value just now. It might be counter-intuitive to write out a long `initialize()` method, instead of having many helper methods, but it does allow us to more or less read the file top to bottom and have a good idea of what's happening (instead of jumping back and forth between method definitions). Definitely not 'best coding practice', but helpful from a code sample perspective", "bodyText": "We probably don't want to extract this code into a method, but just put it in-line. The reason would be that there's no refactoring value just now. It might be counter-intuitive to write out a long initialize() method, instead of having many helper methods, but it does allow us to more or less read the file top to bottom and have a good idea of what's happening (instead of jumping back and forth between method definitions). Definitely not 'best coding practice', but helpful from a code sample perspective", "bodyHTML": "<p dir=\"auto\">We probably don't want to extract this code into a method, but just put it in-line. The reason would be that there's no refactoring value just now. It might be counter-intuitive to write out a long <code>initialize()</code> method, instead of having many helper methods, but it does allow us to more or less read the file top to bottom and have a good idea of what's happening (instead of jumping back and forth between method definitions). Definitely not 'best coding practice', but helpful from a code sample perspective</p>", "author": "JonLavi", "createdAt": "2020-07-15T16:41:36Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4Njk1MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455186951", "body": "Once you remove the `setTimeLabel()` method, you could refactor this block of code by re-using the `dateFormat` object that will now be in the `initialize()` method (by making `dateFormat` a class-member)", "bodyText": "Once you remove the setTimeLabel() method, you could refactor this block of code by re-using the dateFormat object that will now be in the initialize() method (by making dateFormat a class-member)", "bodyHTML": "<p dir=\"auto\">Once you remove the <code>setTimeLabel()</code> method, you could refactor this block of code by re-using the <code>dateFormat</code> object that will now be in the <code>initialize()</code> method (by making <code>dateFormat</code> a class-member)</p>", "author": "JonLavi", "createdAt": "2020-07-15T16:43:44Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5Mzc2OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455193769", "body": "I _think_ you could simplify setting the hour/minute by doing:\r\n```\r\n            calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\r\n            calendar.set(Calendar.MINUTE, minuteFromSlider);\r\n```\r\nThat way, you shouldn't have to specify the year/month/day.\r\nLet me know if that works!", "bodyText": "I think you could simplify setting the hour/minute by doing:\n            calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n            calendar.set(Calendar.MINUTE, minuteFromSlider);\n\nThat way, you shouldn't have to specify the year/month/day.\nLet me know if that works!", "bodyHTML": "<p dir=\"auto\">I <em>think</em> you could simplify setting the hour/minute by doing:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n            calendar.set(Calendar.MINUTE, minuteFromSlider);\"><pre><code>            calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n            calendar.set(Calendar.MINUTE, minuteFromSlider);\n</code></pre></div>\n<p dir=\"auto\">That way, you shouldn't have to specify the year/month/day.<br>\nLet me know if that works!</p>", "author": "JonLavi", "createdAt": "2020-07-15T16:54:47Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM3MDA2OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456370069", "bodyText": "This does work!", "author": "sclaridge", "createdAt": "2020-07-17T10:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5Mzc2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NDUwNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455194504", "body": "I think by grabbing the slider value as `int`s representing minutes, you'd be able to avoid the if/else statement based on the length of the string. Curious to see if it's possible to borrow Kotlin's design!", "bodyText": "I think by grabbing the slider value as ints representing minutes, you'd be able to avoid the if/else statement based on the length of the string. Curious to see if it's possible to borrow Kotlin's design!", "bodyHTML": "<p dir=\"auto\">I think by grabbing the slider value as <code>int</code>s representing minutes, you'd be able to avoid the if/else statement based on the length of the string. Curious to see if it's possible to borrow Kotlin's design!</p>", "author": "JonLavi", "createdAt": "2020-07-15T16:55:55Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NzIxOQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455197219", "body": "Even though I suggested getting rid of `setTimeLabel()` and adding the code within that into `initialize()`, I'd be happy for this to stay here, as it's mainly UI setup (so less relevant to the sample's logic.\r\n\r\nI've never had to deal with setting custom labels, but a quick search online shows the same pattern. It looks like this is what may be tying the slider to return `Double` values? Either way, you should be able to get it to return `int`s that represent minutes quite easily.", "bodyText": "Even though I suggested getting rid of setTimeLabel() and adding the code within that into initialize(), I'd be happy for this to stay here, as it's mainly UI setup (so less relevant to the sample's logic.\nI've never had to deal with setting custom labels, but a quick search online shows the same pattern. It looks like this is what may be tying the slider to return Double values? Either way, you should be able to get it to return ints that represent minutes quite easily.", "bodyHTML": "<p dir=\"auto\">Even though I suggested getting rid of <code>setTimeLabel()</code> and adding the code within that into <code>initialize()</code>, I'd be happy for this to stay here, as it's mainly UI setup (so less relevant to the sample's logic.</p>\n<p dir=\"auto\">I've never had to deal with setting custom labels, but a quick search online shows the same pattern. It looks like this is what may be tying the slider to return <code>Double</code> values? Either way, you should be able to get it to return <code>int</code>s that represent minutes quite easily.</p>", "author": "JonLavi", "createdAt": "2020-07-15T17:00:11Z", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dynamicDateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {", "originalCommit": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "10ccf1211aa0b6f30f0af3c427bee61b76f8c763", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/10ccf1211aa0b6f30f0af3c427bee61b76f8c763", "message": "Update gradle version, import order", "committedDate": "2020-07-16T12:36:23Z", "type": "commit"}, {"oid": "dee0c9f2256622ed0017d1b3257898c5d5cd5dfd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dee0c9f2256622ed0017d1b3257898c5d5cd5dfd", "message": "Refactor control styling in main.fxml to style.css", "committedDate": "2020-07-16T12:38:11Z", "type": "commit"}, {"oid": "dfc65f09bfbefc7c57847618d145a7e851bd9043", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/dfc65f09bfbefc7c57847618d145a7e851bd9043", "message": "Rename folder", "committedDate": "2020-07-16T14:11:18Z", "type": "commit"}, {"oid": "3818693dba1c9271a648f5c65ce04ad592d70823", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3818693dba1c9271a648f5c65ce04ad592d70823", "message": "Rename project in settings.gradle", "committedDate": "2020-07-16T15:53:10Z", "type": "commit"}, {"oid": "4e128ff33040be8d2821f8f938e80a293f384277", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/4e128ff33040be8d2821f8f938e80a293f384277", "message": "Remove setTimeLabel", "committedDate": "2020-07-16T19:05:22Z", "type": "commit"}, {"oid": "c79a73a1ad686f940f800735ffc81a70c20dd197", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c79a73a1ad686f940f800735ffc81a70c20dd197", "message": "Add slider padding", "committedDate": "2020-07-17T10:55:41Z", "type": "commit"}, {"oid": "0cc31d9c409d4fab9ec4dfc5d24dd9877bce72de", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/0cc31d9c409d4fab9ec4dfc5d24dd9877bce72de", "message": "Add combo box", "committedDate": "2020-07-20T10:20:05Z", "type": "commit"}, {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "message": "Represent time as ints", "committedDate": "2020-07-20T14:16:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MjA1NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457462054", "body": "I don't think we're re-using this URL either, so we can just use it in place.\r\n```suggestion\r\n      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\r\n```", "bodyText": "I don't think we're re-using this URL either, so we can just use it in place.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");", "bodyHTML": "<p dir=\"auto\">I don't think we're re-using this URL either, so we can just use it in place.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> buildings <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ArcGISSceneLayer</span> sceneLayer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISSceneLayer</span>(buildings);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ArcGISSceneLayer</span> sceneLayer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISSceneLayer</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-20T14:54:01Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -61,14 +60,12 @@ public void initialize() {\n \n       // add a base surface for elevation data to the scene\n       surface = new Surface();\n-      ArcGISTiledElevationSource elevationSource = new\n-        ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n       surface.getElevationSources().add(elevationSource);\n       scene.setBaseSurface(surface);\n \n       // add a scene layer\n-      final String buildings =\n-        \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n       ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);", "originalCommit": "3818693dba1c9271a648f5c65ce04ad592d70823", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MzQ0OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457463448", "body": "Looks like this comment might be out of date now? ", "bodyText": "Looks like this comment might be out of date now?", "bodyHTML": "<p dir=\"auto\">Looks like this comment might be out of date now?</p>", "author": "JonLavi", "createdAt": "2020-07-20T14:55:27Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -76,8 +77,20 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n       // set the time label on the control panel", "originalCommit": "4e128ff33040be8d2821f8f938e80a293f384277", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTIzNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457465236", "body": "Perhaps we can call this 'format the string'? We should also name the Label object `timeLabel`, since it helps to identify what kind of class it is.\r\n\r\n```suggestion\r\n      // format the string to just return date and time (hours and minutes)\r\n      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\r\n      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\r\n      String formattedDateAndTime = dateFormat.format(calendar.getTime());\r\n\r\n      // set a label to display the tidied date and time\r\n      timeLabel.setText(formattedDateAndTime);\r\n```", "bodyText": "Perhaps we can call this 'format the string'? We should also name the Label object timeLabel, since it helps to identify what kind of class it is.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // tidy string to just return date and time (hours and minutes)\n          \n          \n            \n                  dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n          \n          \n            \n            \n          \n          \n            \n                  // set a label to display the tidied date and time\n          \n          \n            \n                  time.setText(dateAndTimeTidied);\n          \n          \n            \n                  // format the string to just return date and time (hours and minutes)\n          \n          \n            \n                  dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = dateFormat.format(calendar.getTime());\n          \n          \n            \n            \n          \n          \n            \n                  // set a label to display the tidied date and time\n          \n          \n            \n                  timeLabel.setText(formattedDateAndTime);", "bodyHTML": "<p dir=\"auto\">Perhaps we can call this 'format the string'? We should also name the Label object <code>timeLabel</code>, since it helps to identify what kind of class it is.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> <span class=\"x x-first x-last\">tidy</span> string to just return date and time (hours and minutes)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      dateFormat <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleDateFormat</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>EEE MMM dd HH:mm<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      dateFormat<span class=\"pl-k\">.</span>setTimeZone(<span class=\"pl-smi\">TimeZone</span><span class=\"pl-k\">.</span>getTimeZone(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PST<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">dateAndTimeTidied</span> <span class=\"pl-k\">=</span> dateFormat<span class=\"pl-k\">.</span>format(calendar<span class=\"pl-k\">.</span>getTime());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> set a label to display the tidied date and time</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first x-last\">time</span><span class=\"pl-k\">.</span>setText(<span class=\"x x-first x-last\">dateAndTimeTidied</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> <span class=\"x x-first x-last\">format the</span> string to just return date and time (hours and minutes)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      dateFormat <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleDateFormat</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>EEE MMM dd HH:mm<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      dateFormat<span class=\"pl-k\">.</span>setTimeZone(<span class=\"pl-smi\">TimeZone</span><span class=\"pl-k\">.</span>getTimeZone(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PST<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">formattedDateAndTime</span> <span class=\"pl-k\">=</span> dateFormat<span class=\"pl-k\">.</span>format(calendar<span class=\"pl-k\">.</span>getTime());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> set a label to display the tidied date and time</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first x-last\">timeLabel</span><span class=\"pl-k\">.</span>setText(<span class=\"x x-first x-last\">formattedDateAndTime</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-20T14:57:25Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -76,8 +77,20 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n       // set the time label on the control panel\n-      setTimeLabel();\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);", "originalCommit": "4e128ff33040be8d2821f8f938e80a293f384277", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2Njg0OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457466848", "body": "Should we call this `formatted` as well?", "bodyText": "Should we call this formatted as well?", "bodyHTML": "<p dir=\"auto\">Should we call this <code>formatted</code> as well?</p>", "author": "JonLavi", "createdAt": "2020-07-20T14:59:09Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -119,14 +132,13 @@ public void changeTimeOfDay() {\n           int minuteFromSlider = Math.round(actualMinutes);\n \n           // set the calendar for given hour and minute from slider value\n-          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+          calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n+          calendar.set(Calendar.MINUTE, minuteFromSlider);\n \n         } else {\n           calendar.set(2018, 7, 10, hourFromSlider, 00);\n         }\n         // tidy string to just return date and time (hours and minutes)\n-        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n-        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n         String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());", "originalCommit": "4e128ff33040be8d2821f8f938e80a293f384277", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NTAyNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457475026", "body": "Nice work on using the cell factory here!\r\nWe often put these new definitions of the ListCell class in their own file. Check out an example here:\r\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/utility_network/trace-a-utility-network/src/main/java/com/esri/samples/trace_a_utility_network/UtilityTerminalListCell.java\r\n\r\nWith the if/else block you have below, we might be able to get away without the `StringConverter` above on lines 180- 195 (but I might be wrong). This is because you can shove the values from the `LightningMode` enum into the combobox, and use the ListCell to customise what is actually displayed in the UI. ", "bodyText": "Nice work on using the cell factory here!\nWe often put these new definitions of the ListCell class in their own file. Check out an example here:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/utility_network/trace-a-utility-network/src/main/java/com/esri/samples/trace_a_utility_network/UtilityTerminalListCell.java\nWith the if/else block you have below, we might be able to get away without the StringConverter above on lines 180- 195 (but I might be wrong). This is because you can shove the values from the LightningMode enum into the combobox, and use the ListCell to customise what is actually displayed in the UI.", "bodyHTML": "<p dir=\"auto\">Nice work on using the cell factory here!<br>\nWe often put these new definitions of the ListCell class in their own file. Check out an example here:<br>\n<a href=\"https://github.com/Esri/arcgis-runtime-samples-java/blob/master/utility_network/trace-a-utility-network/src/main/java/com/esri/samples/trace_a_utility_network/UtilityTerminalListCell.java\">https://github.com/Esri/arcgis-runtime-samples-java/blob/master/utility_network/trace-a-utility-network/src/main/java/com/esri/samples/trace_a_utility_network/UtilityTerminalListCell.java</a></p>\n<p dir=\"auto\">With the if/else block you have below, we might be able to get away without the <code>StringConverter</code> above on lines 180- 195 (but I might be wrong). This is because you can shove the values from the <code>LightningMode</code> enum into the combobox, and use the ListCell to customise what is actually displayed in the UI.</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:08:00Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -176,6 +172,43 @@ public Double fromString(String string) {\n     });\n   }\n \n+  /**\n+   * Set labels to display in the combo box.\n+   */\n+  private void setComboBoxLabels() {\n+\n+    comboBox.setConverter(new StringConverter<LightingMode>() {\n+\n+      @Override\n+      public String toString(LightingMode mode) {\n+\n+        if (mode == LightingMode.LIGHT) return \"Light Only\";\n+        if (mode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and Shadows\";\n+        if (mode == LightingMode.NO_LIGHT) return \"No Light\";\n+        else return \"Light only\";\n+      }\n+\n+      @Override\n+      public LightingMode fromString(String string) {\n+        return null;\n+      }\n+    });\n+\n+    comboBox.setCellFactory(comboBox -> new ListCell<LightingMode>() {", "originalCommit": "0cc31d9c409d4fab9ec4dfc5d24dd9877bce72de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NjU4OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457476589", "body": "I think you might not need this any more if you're using the ListCell method to modify the ComboBox display of each entry", "bodyText": "I think you might not need this any more if you're using the ListCell method to modify the ComboBox display of each entry", "bodyHTML": "<p dir=\"auto\">I think you might not need this any more if you're using the ListCell method to modify the ComboBox display of each entry</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:09:54Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -95,50 +96,44 @@ public void initialize() {\n       // set the slider to display tick labels as time strings\n       setSliderLabels();\n \n-      \n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3OTUxMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457479513", "body": "We should name this `timeLabel` so that it's easier to tell what Type this object is from the var name", "bodyText": "We should name this timeLabel so that it's easier to tell what Type this object is from the var name", "bodyHTML": "<p dir=\"auto\">We should name this <code>timeLabel</code> so that it's easier to tell what Type this object is from the var name</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:12:46Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4MDM4OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457480389", "body": "I don't think the string variable is being re-used so we can just write the URL in line\r\n```suggestion\r\n      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\r\n```", "bodyText": "I don't think the string variable is being re-used so we can just write the URL in line\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");", "bodyHTML": "<p dir=\"auto\">I don't think the string variable is being re-used so we can just write the URL in line</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> buildings <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ArcGISSceneLayer</span> sceneLayer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISSceneLayer</span>(buildings);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ArcGISSceneLayer</span> sceneLayer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArcGISSceneLayer</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-20T15:13:38Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4MTYzOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457481638", "body": "I personally thing 'update' is a bit more fitting for a method name\r\n\r\n```suggestion\r\n  public void updateTimeOfDay() {\r\n```", "bodyText": "I personally thing 'update' is a bit more fitting for a method name\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void changeTimeOfDay() {\n          \n          \n            \n              public void updateTimeOfDay() {", "bodyHTML": "<p dir=\"auto\">I personally thing 'update' is a bit more fitting for a method name</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">changeTimeOfDay</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">updateTimeOfDay</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-20T15:14:50Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4NTY1MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457485650", "body": "We can also say 'format' the string here", "bodyText": "We can also say 'format' the string here", "bodyHTML": "<p dir=\"auto\">We can also say 'format' the string here</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:18:57Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get the hour value from the slider\n+        int hours = newValue.intValue();\n+\n+        // get the minutes from the slider\n+        double afterDecimal = newValue.doubleValue() - floor(newValue.doubleValue());\n+        int minutes = (int) (afterDecimal * 60);\n+\n+        // set the calendar for given hour and minute from slider value\n+        calendar.set(Calendar.HOUR_OF_DAY, hours);\n+        calendar.set(Calendar.MINUTE, minutes);\n+\n+        // tidy string to just return date and time (hours and minutes)\n+        String dateAndTimeTidied = dateFormat.format(calendar.getTime());", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ5MTE2NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457491165", "body": "On second thought, we can also extract this new class definition for StringConverter into a separate file, then just do\r\n`timeSlider.setLabelFormatter(new CustomStringConverter());`\r\nThat way we can leave this method out and have a single line in the main `initialize()` method.\r\n\r\nMy thought behind this is that it's more JavaFX/UI setup, and our main goal with the Java samples is to teach people the main concepts of the Runtime API. In this case the 'meat' of this sample is your `changeTimeOfDay()` method so we want to bring that front and centre\r\n", "bodyText": "On second thought, we can also extract this new class definition for StringConverter into a separate file, then just do\ntimeSlider.setLabelFormatter(new CustomStringConverter());\nThat way we can leave this method out and have a single line in the main initialize() method.\nMy thought behind this is that it's more JavaFX/UI setup, and our main goal with the Java samples is to teach people the main concepts of the Runtime API. In this case the 'meat' of this sample is your changeTimeOfDay() method so we want to bring that front and centre", "bodyHTML": "<p dir=\"auto\">On second thought, we can also extract this new class definition for StringConverter into a separate file, then just do<br>\n<code>timeSlider.setLabelFormatter(new CustomStringConverter());</code><br>\nThat way we can leave this method out and have a single line in the main <code>initialize()</code> method.</p>\n<p dir=\"auto\">My thought behind this is that it's more JavaFX/UI setup, and our main goal with the Java samples is to teach people the main concepts of the Runtime API. In this case the 'meat' of this sample is your <code>changeTimeOfDay()</code> method so we want to bring that front and centre</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:24:39Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get the hour value from the slider\n+        int hours = newValue.intValue();\n+\n+        // get the minutes from the slider\n+        double afterDecimal = newValue.doubleValue() - floor(newValue.doubleValue());\n+        int minutes = (int) (afterDecimal * 60);\n+\n+        // set the calendar for given hour and minute from slider value\n+        calendar.set(Calendar.HOUR_OF_DAY, hours);\n+        calendar.set(Calendar.MINUTE, minutes);\n+\n+        // tidy string to just return date and time (hours and minutes)\n+        String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {\n+\n+    timeSlider.setLabelFormatter(new StringConverter<Double>() {\n+\n+      @Override\n+      public String toString(Double hour) {\n+\n+        if (hour == 4) return \"4am\";\n+        if (hour == 8) return \"8am\";\n+        if (hour == 12) return \"Midday\";\n+        if (hour == 16) return \"4pm\";\n+        if (hour == 20) return \"8pm\";\n+\n+        return \"Midnight\";\n+      }\n+\n+      @Override\n+      public Double fromString(String string) {\n+        return null;\n+      }\n+    });", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ5MTgzMw==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457491833", "body": "GitHub is telling us there's a missing newline here.", "bodyText": "GitHub is telling us there's a missing newline here.", "bodyHTML": "<p dir=\"auto\">GitHub is telling us there's a missing newline here.</p>", "author": "JonLavi", "createdAt": "2020-07-20T15:25:24Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Lighting and Shadows Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * Stops and releases all resources used in application.\n+   */\n+  @Override\n+  public void stop() {\n+    controller.terminate();\n+  }\n+\n+  /**\n+   * Opens and runs application.\n+   *\n+   * @param args arguments passed to this application\n+   */\n+  public static void main(String[] args) {\n+\n+    Application.launch(args);\n+  }\n+}", "originalCommit": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "48be059177523628fa815f9fef2f6bd03faa12b8", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/48be059177523628fa815f9fef2f6bd03faa12b8", "message": "Add string converter and list cell classes", "committedDate": "2020-07-21T14:26:50Z", "type": "commit"}, {"oid": "ea8ad4a0ae167a54b483577a67eb275d9061c57e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/ea8ad4a0ae167a54b483577a67eb275d9061c57e", "message": "Revert \"Add string converter and list cell classes\"\n\nThis reverts commit 48be059177523628fa815f9fef2f6bd03faa12b8.", "committedDate": "2020-07-21T15:00:59Z", "type": "commit"}, {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d60fc5f5216c4cff4d985fc80a401f9931e44f83", "message": "Add string converter and list cell classes", "committedDate": "2020-07-22T08:41:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3ODY5Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458678692", "body": "This is great. We just need to add a JavaDoc style comment, to explain a little bit what this class does:\r\n\r\n```suggestion\r\n/**\r\n * Converts the LightningMode values to strings to display the selected value in the ComboBox.\r\n */\r\npublic class ComboBoxStringConverter extends StringConverter<LightingMode> {\r\n```", "bodyText": "This is great. We just need to add a JavaDoc style comment, to explain a little bit what this class does:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n          \n          \n            \n            /**\n          \n          \n            \n             * Converts the LightningMode values to strings to display the selected value in the ComboBox.\n          \n          \n            \n             */\n          \n          \n            \n            public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "bodyHTML": "<p dir=\"auto\">This is great. We just need to add a JavaDoc style comment, to explain a little bit what this class does:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">class</span><span class=\"x\"> </span><span class=\"pl-en x\">ComboBoxStringConverter</span><span class=\"x\"> </span><span class=\"pl-k x\">extends</span><span class=\"x\"> </span><span class=\"pl-e\"><span class=\"x\">StringConverter&lt;</span><span class=\"pl-smi x\">LightingMode</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c x x-first x-last\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi\">LightningMode</span> values to strings to display the selected value in the <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ComboBoxStringConverter</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">StringConverter&lt;<span class=\"pl-smi\">LightingMode</span>&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-22T09:59:28Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "originalCommit": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MDA5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458680094", "body": "Same here, we just need to give this class a little bit of documentation\r\n\r\n```suggestion\r\n/**\r\n * Converts the LightningMode values to strings to display in the open ComboBox.\r\n */\r\npublic class LightingModeListCell extends ListCell<LightingMode> {\r\n```", "bodyText": "Same here, we just need to give this class a little bit of documentation\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LightingModeListCell extends ListCell<LightingMode> {\n          \n          \n            \n            /**\n          \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             */\n          \n          \n            \n            public class LightingModeListCell extends ListCell<LightingMode> {", "bodyHTML": "<p dir=\"auto\">Same here, we just need to give this class a little bit of documentation</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">class</span><span class=\"x\"> </span><span class=\"pl-en x\">LightingModeListCell</span><span class=\"x\"> </span><span class=\"pl-k x\">extends</span><span class=\"x\"> </span><span class=\"pl-e\"><span class=\"x\">ListCell&lt;</span><span class=\"pl-smi x\">LightingMode</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c x x-first x-last\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi\">LightningMode</span> values to strings to display in the open <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">LightingModeListCell</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">ListCell&lt;<span class=\"pl-smi\">LightingMode</span>&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-22T10:01:53Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+\n+public class LightingModeListCell extends ListCell<LightingMode> {", "originalCommit": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MDg1Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458680856", "body": "Sorry if I caused any confusion here: I think `dateFormat` is a good variable name for this object. The comments previously were just to suggest to use the phrasing `format the string` instead of `tidy the string`.", "bodyText": "Sorry if I caused any confusion here: I think dateFormat is a good variable name for this object. The comments previously were just to suggest to use the phrasing format the string instead of tidy the string.", "bodyHTML": "<p dir=\"auto\">Sorry if I caused any confusion here: I think <code>dateFormat</code> is a good variable name for this object. The comments previously were just to suggest to use the phrasing <code>format the string</code> instead of <code>tidy the string</code>.</p>", "author": "JonLavi", "createdAt": "2020-07-22T10:03:16Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -38,17 +36,15 @@\n import com.esri.arcgisruntime.mapping.view.LightingMode;\n import com.esri.arcgisruntime.mapping.view.SceneView;\n \n-import static java.lang.StrictMath.floor;\n-\n public class RealisticLightingAndShadowsController {\n \n   @FXML private SceneView sceneView;\n-  @FXML private Label time;\n+  @FXML private Label timeLabel;\n   @FXML private Slider timeSlider;\n   @FXML private ComboBox<LightingMode> comboBox;\n   private Surface surface;\n   private Calendar calendar;\n-  private SimpleDateFormat dateFormat;\n+  private SimpleDateFormat formatted;", "originalCommit": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MzI3MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458683271", "body": "Sorry about the confusion here! We should still give the `SimpleDateFormat` variable a representative name:\r\n\r\n```suggestion\r\n      // format the string to just return the date and time (hours and minutes)\r\n      dateFormat= new SimpleDateFormat(\"EEE MMM dd HH:mm\");\r\n      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\r\n      String formattedDateAndTime = formatted.format(calendar.getTime());\r\n```", "bodyText": "Sorry about the confusion here! We should still give the SimpleDateFormat variable a representative name:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // format the string to just return the date and time (hours and minutes)\n          \n          \n            \n                  formatted = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  formatted.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = formatted.format(calendar.getTime());\n          \n          \n            \n                  // format the string to just return the date and time (hours and minutes)\n          \n          \n            \n                  dateFormat= new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = formatted.format(calendar.getTime());", "bodyHTML": "<p dir=\"auto\">Sorry about the confusion here! We should still give the <code>SimpleDateFormat</code> variable a representative name:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> format the string to just return the date and time (hours and minutes)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first x-last\">formatted </span><span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleDateFormat</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>EEE MMM dd HH:mm<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first x-last\">formatted</span><span class=\"pl-k\">.</span>setTimeZone(<span class=\"pl-smi\">TimeZone</span><span class=\"pl-k\">.</span>getTimeZone(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PST<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">String</span> formattedDateAndTime <span class=\"pl-k\">=</span> formatted<span class=\"pl-k\">.</span>format(calendar<span class=\"pl-k\">.</span>getTime());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> format the string to just return the date and time (hours and minutes)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first x-last\">dateFormat</span><span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleDateFormat</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>EEE MMM dd HH:mm<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first x-last\">dateFormat</span><span class=\"pl-k\">.</span>setTimeZone(<span class=\"pl-smi\">TimeZone</span><span class=\"pl-k\">.</span>getTimeZone(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PST<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> formattedDateAndTime <span class=\"pl-k\">=</span> formatted<span class=\"pl-k\">.</span>format(calendar<span class=\"pl-k\">.</span>getTime());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JonLavi", "createdAt": "2020-07-22T10:07:30Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -78,26 +73,32 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n-      // set a new calendar and add a date and time\n+      // set a calendar with a date and time\n       calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n       calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n \n-      // set the time label on the control panel\n+      // set the sun time to the calendar\n       sceneView.setSunTime(calendar);\n \n-      // tidy string to just return date and time (hours and minutes)\n-      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n-      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n-      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+      // format the string to just return the date and time (hours and minutes)\n+      formatted = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      formatted.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = formatted.format(calendar.getTime());", "originalCommit": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4NDU5Ng==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458684596", "body": "Let's give this a bit of documentation as well. Feel free to just follow the examples I gave at the top", "bodyText": "Let's give this a bit of documentation as well. Feel free to just follow the examples I gave at the top", "bodyHTML": "<p dir=\"auto\">Let's give this a bit of documentation as well. Feel free to just follow the examples I gave at the top</p>", "author": "JonLavi", "createdAt": "2020-07-22T10:10:03Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/SliderStringConverter.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+public class SliderStringConverter extends StringConverter<Double> {", "originalCommit": "d60fc5f5216c4cff4d985fc80a401f9931e44f83", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/352228b77f30d2e7a6a01e4e50e3088087b2cebd", "message": "Add javadoc comments, slider css styling, and image", "committedDate": "2020-07-22T11:59:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwMTkwOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459401908", "body": "this can be simplified with the following, since it's not only displaying the string when the combobox is opened. Also corrected the typo here!\r\n```suggestion\r\n * Converts the LightingMode values to strings to display in the ComboBox.\r\n```", "bodyText": "this can be simplified with the following, since it's not only displaying the string when the combobox is opened. Also corrected the typo here!\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             * Converts the LightingMode values to strings to display in the ComboBox.", "bodyHTML": "<p dir=\"auto\">this can be simplified with the following, since it's not only displaying the string when the combobox is opened. Also corrected the typo here!</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi x x-first x-last\">LightningMode</span> values to strings to display in the<span class=\"x x-first x-last\"> open</span> <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi x x-first x-last\">LightingMode</span> values to strings to display in the <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:11:08Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwMjM3OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459402378", "body": "Lightning mode would be really cool though!\r\n```suggestion\r\n * Converts the LightingMode values to strings to display in the open ComboBox.\r\n```", "bodyText": "Lightning mode would be really cool though!\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             * Converts the LightingMode values to strings to display in the open ComboBox.", "bodyHTML": "<p dir=\"auto\">Lightning mode would be really cool though!</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi x x-first x-last\">LightningMode</span> values to strings to display in the open <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Converts</span> the <span class=\"pl-smi x x-first x-last\">LightingMode</span> values to strings to display in the open <span class=\"pl-smi\">ComboBox</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:11:57Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNTkwOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459405908", "body": "this can be converted to a local variable on line 60, since it's only being referenced within the `initialize` method. ", "bodyText": "this can be converted to a local variable on line 60, since it's only being referenced within the initialize method.", "bodyHTML": "<p dir=\"auto\">this can be converted to a local variable on line 60, since it's only being referenced within the <code>initialize</code> method.</p>", "author": "Rachael-E", "createdAt": "2020-07-23T12:18:49Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjY3OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459406679", "body": "```suggestion\r\n      // add a base surface with an elevation source to the scene\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a base surface for elevation data to the scene\n          \n          \n            \n                  // add a base surface with an elevation source to the scene", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add a base surface <span class=\"x x-first x-last\">for </span>elevation <span class=\"x x-first x-last\">data</span> to the scene</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add a base surface <span class=\"x x-first x-last\">with an </span>elevation <span class=\"x x-first x-last\">source</span> to the scene</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:20:15Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwODI0MQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459408241", "body": "we could include a little more info here to help a new user understand that it is the scene layer that is showing the 3D buildings\r\n```suggestion\r\n      // add 3D building shells with a scene layer\r\n```", "bodyText": "we could include a little more info here to help a new user understand that it is the scene layer that is showing the 3D buildings\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a scene layer\n          \n          \n            \n                  // add 3D building shells with a scene layer", "bodyHTML": "<p dir=\"auto\">we could include a little more info here to help a new user understand that it is the scene layer that is showing the 3D buildings</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add a scene layer</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add <span class=\"x x-first x-last\">3D building shells with </span>a scene layer</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:23:18Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwODgwNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459408806", "body": "we can be a little more concise with the comment here:\r\n```suggestion\r\n      // add a camera and set the scene view's viewpoint to it\r\n```", "bodyText": "we can be a little more concise with the comment here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a camera and initial camera position\n          \n          \n            \n                  // add a camera and set the scene view's viewpoint to it", "bodyHTML": "<p dir=\"auto\">we can be a little more concise with the comment here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add a camera and <span class=\"x x-first x-last\">initial camera position</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> add a camera and <span class=\"x x-first x-last\">set the scene view's viewpoint to it</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:24:25Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwOTk4MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459409980", "body": "I got two IDE tips appearing for this constructor. `minute` can be replaced with \"0\" and the integer reflecting the month should be replaced with an enum e.g.\r\n```suggestion\r\n      calendar = new GregorianCalendar(2018, Calendar.AUGUST, 10, 12, 0, 0);\r\n```", "bodyText": "I got two IDE tips appearing for this constructor. minute can be replaced with \"0\" and the integer reflecting the month should be replaced with an enum e.g.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n          \n          \n            \n                  calendar = new GregorianCalendar(2018, Calendar.AUGUST, 10, 12, 0, 0);", "bodyHTML": "<p dir=\"auto\">I got two IDE tips appearing for this constructor. <code>minute</code> can be replaced with \"0\" and the integer reflecting the month should be replaced with an enum e.g.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      calendar <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">GregorianCalendar</span>(<span class=\"pl-c1\">2018</span>, <span class=\"pl-c1 x x-first x-last\">7</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1 x x-first x-last\">00</span>, <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      calendar <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">GregorianCalendar</span>(<span class=\"pl-c1\">2018</span>, <span class=\"pl-smi x x-first\">Calendar</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">AUGUST</span></span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1 x x-first x-last\">0</span>, <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:26:31Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMDk1OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459410959", "body": "you can reduce the number of lines here by using `addAll`: \r\n```suggestion\r\n      comboBox.getItems().addAll(LightingMode.LIGHT, LightingMode.LIGHT_AND_SHADOWS, LightingMode.NO_LIGHT);\r\n\r\n```", "bodyText": "you can reduce the number of lines here by using addAll:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  comboBox.getItems().add(LightingMode.NO_LIGHT);\n          \n          \n            \n                  comboBox.getItems().add(LightingMode.LIGHT);\n          \n          \n            \n                  comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n          \n          \n            \n                  comboBox.getItems().addAll(LightingMode.LIGHT, LightingMode.LIGHT_AND_SHADOWS, LightingMode.NO_LIGHT);", "bodyHTML": "<p dir=\"auto\">you can reduce the number of lines here by using <code>addAll</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      comboBox<span class=\"pl-k\">.</span>getItems()<span class=\"pl-k\">.</span>add(<span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NO_LIGHT</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      comboBox<span class=\"pl-k\">.</span>getItems()<span class=\"pl-k\">.</span>add(<span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      comboBox<span class=\"pl-k\">.</span>getItems()<span class=\"pl-k\">.</span>add(<span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT_AND_SHADOWS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      comboBox<span class=\"pl-k\">.</span>getItems()<span class=\"pl-k\">.</span>addAll(<span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT</span>, <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT_AND_SHADOWS</span>, <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NO_LIGHT</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:28:24Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMjEwNg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459412106", "body": "atmosphere effect is a separate part of our API (e.g. `sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);`), so we should be specific to the API that we are showcasing in this sample with the following: \r\n```suggestion\r\n      // update the sun lighting based on the lighting mode chosen from the combo box\r\n```", "bodyText": "atmosphere effect is a separate part of our API (e.g. sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);), so we should be specific to the API that we are showcasing in this sample with the following:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // update the atmosphere effect based on the lighting mode chosen from the combo box\n          \n          \n            \n                  // update the sun lighting based on the lighting mode chosen from the combo box", "bodyHTML": "<p dir=\"auto\">atmosphere effect is a separate part of our API (e.g. <code>sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);</code>), so we should be specific to the API that we are showcasing in this sample with the following:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> update the <span class=\"x x-first x-last\">atmosphere effect</span> based on the lighting mode chosen from the combo box</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> update the <span class=\"x x-first x-last\">sun lighting</span> based on the lighting mode chosen from the combo box</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T12:30:29Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n+\n+      // show the name of the lighting modes in the combo box\n+      comboBox.setConverter(new ComboBoxStringConverter());\n+      comboBox.setCellFactory(comboBox -> new LightingModeListCell());\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxNzk1NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459517954", "body": "from a naming perspective, always best err on the side of super clear if there is space for it: let's change \"mode\" for \"lightingMode\"\r\n```suggestion\r\n  public String toString(LightingMode lightingMode) {\r\n```", "bodyText": "from a naming perspective, always best err on the side of super clear if there is space for it: let's change \"mode\" for \"lightingMode\"\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public String toString(LightingMode mode) {\n          \n          \n            \n              public String toString(LightingMode lightingMode) {", "bodyHTML": "<p dir=\"auto\">from a naming perspective, always best err on the side of super clear if there is space for it: let's change \"mode\" for \"lightingMode\"</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> toString(<span class=\"pl-smi\">LightingMode</span> <span class=\"x x-first x-last\">mode</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> toString(<span class=\"pl-smi\">LightingMode</span> <span class=\"x x-first x-last\">lightingMode</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T15:02:41Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+  @Override\n+  public String toString(LightingMode mode) {", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxODkyNQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459518925", "body": "as above, let's make the following change:\r\n```suggestion\r\n  protected void updateItem(LightingMode lightingMode, boolean empty) {\r\n```", "bodyText": "as above, let's make the following change:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected void updateItem(LightingMode mode, boolean empty) {\n          \n          \n            \n              protected void updateItem(LightingMode lightingMode, boolean empty) {", "bodyHTML": "<p dir=\"auto\">as above, let's make the following change:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">void</span> updateItem(<span class=\"pl-smi\">LightingMode</span> <span class=\"x x-first x-last\">mode</span>, <span class=\"pl-k\">boolean</span> empty) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">void</span> updateItem(<span class=\"pl-smi\">LightingMode</span> <span class=\"x x-first x-last\">lightingMode</span>, <span class=\"pl-k\">boolean</span> empty) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Rachael-E", "createdAt": "2020-07-23T15:04:05Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+  @Override\n+  protected void updateItem(LightingMode mode, boolean empty) {", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0MjA5NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459542094", "body": "A couple of things here. \r\n1. I remembered a sample discussion about the naming in the drop down boxes. I checked with Hudson and he said a decision had been made to go with the enum names for the drop boxes, but in plain english. See suggestion below.\r\n\r\n2. With this code the way it is, it's wired up so that when the application is launched, it's setting the combobox to say \"Sun light only\" without listening in to what `LightingMode` the combobox is actually set to. For example, if for whatever reason the LightingMode came back as `null`, then the text would display \"Sun light only\" which wouldn't be accurate. \r\n\r\nTo get over this, we can simply add a null check in both this class and ComboBoxStringConverter to be on the safe side, e.g.\r\n\r\n ```java\r\n    super.updateItem(lightingMode, empty);\r\n    if (lightingMode != null) {\r\n      if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\r\n      else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\r\n      else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\r\n    }\r\n\r\n```\r\n\r\nIn addition to this, in the controller, we can add in logic there to select the appropriate enum from the drop down (assuming we want the sample to launch on \"no light\"): see my suggestion there.", "bodyText": "A couple of things here.\n\n\nI remembered a sample discussion about the naming in the drop down boxes. I checked with Hudson and he said a decision had been made to go with the enum names for the drop boxes, but in plain english. See suggestion below.\n\n\nWith this code the way it is, it's wired up so that when the application is launched, it's setting the combobox to say \"Sun light only\" without listening in to what LightingMode the combobox is actually set to. For example, if for whatever reason the LightingMode came back as null, then the text would display \"Sun light only\" which wouldn't be accurate.\n\n\nTo get over this, we can simply add a null check in both this class and ComboBoxStringConverter to be on the safe side, e.g.\n   super.updateItem(lightingMode, empty);\n   if (lightingMode != null) {\n     if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n     else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n     else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n   }\n\nIn addition to this, in the controller, we can add in logic there to select the appropriate enum from the drop down (assuming we want the sample to launch on \"no light\"): see my suggestion there.", "bodyHTML": "<p dir=\"auto\">A couple of things here.</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">I remembered a sample discussion about the naming in the drop down boxes. I checked with Hudson and he said a decision had been made to go with the enum names for the drop boxes, but in plain english. See suggestion below.</p>\n</li>\n<li>\n<p dir=\"auto\">With this code the way it is, it's wired up so that when the application is launched, it's setting the combobox to say \"Sun light only\" without listening in to what <code>LightingMode</code> the combobox is actually set to. For example, if for whatever reason the LightingMode came back as <code>null</code>, then the text would display \"Sun light only\" which wouldn't be accurate.</p>\n</li>\n</ol>\n<p dir=\"auto\">To get over this, we can simply add a null check in both this class and ComboBoxStringConverter to be on the safe side, e.g.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   super.updateItem(lightingMode, empty);\n   if (lightingMode != null) {\n     if (lightingMode == LightingMode.LIGHT) setText(&quot;Light&quot;);\n     else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(&quot;Light and shadows&quot;);\n     else if (lightingMode == LightingMode.NO_LIGHT) setText(&quot;No light&quot;);\n   }\n\"><pre>   <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>updateItem(lightingMode, empty);\n   <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {\n     <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT</span>) setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Light<span class=\"pl-pds\">\"</span></span>);\n     <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT_AND_SHADOWS</span>) setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Light and shadows<span class=\"pl-pds\">\"</span></span>);\n     <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NO_LIGHT</span>) setText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No light<span class=\"pl-pds\">\"</span></span>);\n   }\n</pre></div>\n<p dir=\"auto\">In addition to this, in the controller, we can add in logic there to select the appropriate enum from the drop down (assuming we want the sample to launch on \"no light\"): see my suggestion there.</p>", "author": "Rachael-E", "createdAt": "2020-07-23T15:36:03Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+  @Override\n+  protected void updateItem(LightingMode mode, boolean empty) {\n+\n+    super.updateItem(mode, empty);\n+    if (mode == LightingMode.LIGHT) setText(\"Sun light only\");\n+    else if (mode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Sun light with shadows\");\n+    else if (mode == LightingMode.NO_LIGHT) setText(\"No sun light effect\");\n+\n+    else setText(\"Sun light only\");", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NTIzMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459545231", "body": "to ensure the option chosen in the drop box is reflecting the lighting mode shown in the app, we can add the following here (assuming we want the sample to launch on no light) :\r\n\r\n```java\r\n      // launch the app with lighting mode set to NO_LIGHT\r\n      comboBox.getSelectionModel().select(0);\r\n```", "bodyText": "to ensure the option chosen in the drop box is reflecting the lighting mode shown in the app, we can add the following here (assuming we want the sample to launch on no light) :\n      // launch the app with lighting mode set to NO_LIGHT\n      comboBox.getSelectionModel().select(0);", "bodyHTML": "<p dir=\"auto\">to ensure the option chosen in the drop box is reflecting the lighting mode shown in the app, we can add the following here (assuming we want the sample to launch on no light) :</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      // launch the app with lighting mode set to NO_LIGHT\n      comboBox.getSelectionModel().select(0);\"><pre>      <span class=\"pl-c\"><span class=\"pl-c\">//</span> launch the app with lighting mode set to NO_LIGHT</span>\n      comboBox<span class=\"pl-k\">.</span>getSelectionModel()<span class=\"pl-k\">.</span>select(<span class=\"pl-c1\">0</span>);</pre></div>", "author": "Rachael-E", "createdAt": "2020-07-23T15:40:43Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n+\n+      // show the name of the lighting modes in the combo box\n+      comboBox.setConverter(new ComboBoxStringConverter());\n+      comboBox.setCellFactory(comboBox -> new LightingModeListCell());\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NjE2OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459546169", "body": "similar to my comments in LightingModeListCell.java: we should ensure we put in a null check here, and update the strings to the enum plain-english names.\r\n\r\n```java\r\n\r\n  @Override\r\n  public String toString(LightingMode lightingMode) {\r\n    if (lightingMode != null) {\r\n      if (lightingMode == LightingMode.LIGHT) return \"Light\";\r\n      else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and shadows\";\r\n      else if (lightingMode == LightingMode.NO_LIGHT) return \"No light\";\r\n    }\r\n    return \"\";\r\n  }\r\n```", "bodyText": "similar to my comments in LightingModeListCell.java: we should ensure we put in a null check here, and update the strings to the enum plain-english names.\n  @Override\n  public String toString(LightingMode lightingMode) {\n    if (lightingMode != null) {\n      if (lightingMode == LightingMode.LIGHT) return \"Light\";\n      else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and shadows\";\n      else if (lightingMode == LightingMode.NO_LIGHT) return \"No light\";\n    }\n    return \"\";\n  }", "bodyHTML": "<p dir=\"auto\">similar to my comments in LightingModeListCell.java: we should ensure we put in a null check here, and update the strings to the enum plain-english names.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n  @Override\n  public String toString(LightingMode lightingMode) {\n    if (lightingMode != null) {\n      if (lightingMode == LightingMode.LIGHT) return &quot;Light&quot;;\n      else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return &quot;Light and shadows&quot;;\n      else if (lightingMode == LightingMode.NO_LIGHT) return &quot;No light&quot;;\n    }\n    return &quot;&quot;;\n  }\"><pre>  <span class=\"pl-k\">@Override</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> toString(<span class=\"pl-smi\">LightingMode</span> lightingMode) {\n    <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {\n      <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT</span>) <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Light<span class=\"pl-pds\">\"</span></span>;\n      <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LIGHT_AND_SHADOWS</span>) <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Light and shadows<span class=\"pl-pds\">\"</span></span>;\n      <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (lightingMode <span class=\"pl-k\">==</span> <span class=\"pl-smi\">LightingMode</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NO_LIGHT</span>) <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No light<span class=\"pl-pds\">\"</span></span>;\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>;\n  }</pre></div>", "author": "Rachael-E", "createdAt": "2020-07-23T15:42:02Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+  @Override\n+  public String toString(LightingMode mode) {", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459550330", "body": "Just a tidy up suggestion.\r\n\r\nFor both this class and the `LightingModeListCell` class: since these have a small amount of content, these can live at the bottom of the `RealisticLightingAndShadowsController` class, as we do in some of our other samples (see e.g. https://github.com/Esri/arcgis-runtime-samples-java/blob/e75be37b2eb83a672f57afc1b1cb64e5549506b3/map/create-and-save-map/src/main/java/com/esri/samples/create_and_save_map/CreateAndSaveMapController.java#L176). \r\n\r\nThis ensures our samples remain clean (as you've done a great job doing separating out these converters), but also that there isn't a large amount of classes sitting within the sample package. It also shows our MVC pattern more clearly with the converter classes hidden within the controller class.", "bodyText": "Just a tidy up suggestion.\nFor both this class and the LightingModeListCell class: since these have a small amount of content, these can live at the bottom of the RealisticLightingAndShadowsController class, as we do in some of our other samples (see e.g. \n  \n    \n      arcgis-runtime-samples-java/map/create-and-save-map/src/main/java/com/esri/samples/create_and_save_map/CreateAndSaveMapController.java\n    \n    \n         Line 176\n      in\n      e75be37\n    \n    \n    \n    \n\n        \n          \n           private class BasemapCell extends ListCell<Basemap> { \n        \n    \n  \n\n).\nThis ensures our samples remain clean (as you've done a great job doing separating out these converters), but also that there isn't a large amount of classes sitting within the sample package. It also shows our MVC pattern more clearly with the converter classes hidden within the controller class.", "bodyHTML": "<p dir=\"auto\">Just a tidy up suggestion.</p>\n<p dir=\"auto\">For both this class and the <code>LightingModeListCell</code> class: since these have a small amount of content, these can live at the bottom of the <code>RealisticLightingAndShadowsController</code> class, as we do in some of our other samples (see e.g. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/Esri/arcgis-runtime-samples-java/blob/e75be37b2eb83a672f57afc1b1cb64e5549506b3/map/create-and-save-map/src/main/java/com/esri/samples/create_and_save_map/CreateAndSaveMapController.java#L176\">arcgis-runtime-samples-java/map/create-and-save-map/src/main/java/com/esri/samples/create_and_save_map/CreateAndSaveMapController.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 176\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/Esri/arcgis-runtime-samples-java/commit/e75be37b2eb83a672f57afc1b1cb64e5549506b3\">e75be37</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L176\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"176\"></td>\n          <td id=\"LC176\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">BasemapCell</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">ListCell&lt;<span class=\"pl-smi\">Basemap</span>&gt;</span> { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n).</p>\n<p dir=\"auto\">This ensures our samples remain clean (as you've done a great job doing separating out these converters), but also that there isn't a large amount of classes sitting within the sample package. It also shows our MVC pattern more clearly with the converter classes hidden within the controller class.</p>", "author": "Rachael-E", "createdAt": "2020-07-23T15:48:07Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*", "originalCommit": "352228b77f30d2e7a6a01e4e50e3088087b2cebd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MzgwNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459893804", "bodyText": "@Rachael-E if this is the way forward, then there should be an issue to change up the samples where these are separated to their own files. Since I've started, all the samples using ListCell have had these in their individual files.\nI personally think that's the correct way to do it, since essencially ListCell is UI code unrelated to the controller, so putting it in it's own class reduces clutter in the controller and puts the Runtime code in the focus of what's going on there. After all, if we could do this easily, we'd probably do this in the FXML file as well.\nEither way, there should at least be a clear guidance in the contribution guidelines, I think", "author": "JonLavi", "createdAt": "2020-07-24T07:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk3Mjk5MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459972990", "bodyText": "thanks @JonLavi, you're right, we currently don't have a consistent way this is handled in the samples and it would be good to reach a design pattern agreement. Either approach works: it's just a matter of deciding what is the best practice pattern! We should get feedback on that during a Java catch up meeting. I'm of the opinion in the instance where it's a standard converter it is fine to \"hide\" at the bottom of the controller class (in super basic cases may not even need to be in Class format at all). This then focusses the user on our Controller class and our API. If however there was a more \"involved\" conversion (such as that of GroupLayer sample) then it merits its own abstracted class.", "author": "Rachael-E", "createdAt": "2020-07-24T10:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA=="}], "type": "inlineReview"}, {"oid": "13a71cdacf351b53f4e795fdd9e2bc7ebb8b37f4", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/13a71cdacf351b53f4e795fdd9e2bc7ebb8b37f4", "message": "Refactor readme and controller", "committedDate": "2020-07-23T17:12:34Z", "type": "commit"}, {"oid": "3bcb0ab9d90f7d96f9a60260a2fdd5071321a8e6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/3bcb0ab9d90f7d96f9a60260a2fdd5071321a8e6", "message": "Remove slider styling from style.css", "committedDate": "2020-07-23T17:13:11Z", "type": "commit"}, {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/eca7a75ac2b8412202b6aa833a1f80479419a61d", "message": "Update README.metadata.json using metadata-updater script", "committedDate": "2020-07-23T17:23:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTU1NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001555", "body": "mark as private", "bodyText": "mark as private", "bodyHTML": "<p dir=\"auto\">mark as private</p>", "author": "Rachael-E", "createdAt": "2020-07-24T11:40:14Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+    @Override\n+    protected void updateItem(LightingMode lightingMode, boolean empty) {\n+\n+      super.updateItem(lightingMode, empty);\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n+        else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Converts the LightingMode values to strings to display in the ComboBox.\n+   */\n+  public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+    @Override\n+    public String toString(LightingMode lightingMode) {\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) return \"Light\";\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and shadows\";\n+        else if (lightingMode == LightingMode.NO_LIGHT) return \"No light\";\n+      }\n+      return \"\";\n+    }\n+\n+    @Override\n+    public LightingMode fromString(String string) {\n+      return null;\n+    }\n+  }\n+\n+  /**\n+   * Converts time values to strings to display on the slider.\n+   */\n+  public class SliderStringConverter extends StringConverter<Double> {", "originalCommit": "eca7a75ac2b8412202b6aa833a1f80479419a61d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTU5Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001592", "body": "these should be marked as `private` classes so that they are only accessible within the Controller.", "bodyText": "these should be marked as private classes so that they are only accessible within the Controller.", "bodyHTML": "<p dir=\"auto\">these should be marked as <code>private</code> classes so that they are only accessible within the Controller.</p>", "author": "Rachael-E", "createdAt": "2020-07-24T11:40:17Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+    @Override\n+    protected void updateItem(LightingMode lightingMode, boolean empty) {\n+\n+      super.updateItem(lightingMode, empty);\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n+        else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Converts the LightingMode values to strings to display in the ComboBox.\n+   */\n+  public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "originalCommit": "eca7a75ac2b8412202b6aa833a1f80479419a61d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTc0NA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001744", "body": "mark as private", "bodyText": "mark as private", "bodyHTML": "<p dir=\"auto\">mark as private</p>", "author": "Rachael-E", "createdAt": "2020-07-24T11:40:42Z", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {", "originalCommit": "eca7a75ac2b8412202b6aa833a1f80479419a61d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "53274ae34247993a22dab329dafff975fe323ab0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/53274ae34247993a22dab329dafff975fe323ab0", "message": "Remove slider css styling, update readme.metadata.json and class access modifiers in controller", "committedDate": "2020-07-24T12:06:06Z", "type": "commit"}]}