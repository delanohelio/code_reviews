{"pr_number": 555, "pr_title": "List related features sample: use correct identify workflow", "pr_author": "jenmerritt", "pr_createdAt": "2020-09-16T09:29:56Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555", "timeline": [{"oid": "fc886b43f4ad35da40c3194383c5ee202fbfa71b", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/fc886b43f4ad35da40c3194383c5ee202fbfa71b", "message": "update method for identify workflow", "committedDate": "2020-09-16T09:23:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r494350678", "body": "For the sake of being extra clear which class we are dealing with here, we should write:\r\n```suggestion\r\n                for (GeoElement geoElement : identifiedLayerGeoElements) {\r\n```\r\n\r\nThere's no harm in using `var` generally, but for samples we want to make sure our users know exactly which class they are dealing with at any point.", "bodyText": "For the sake of being extra clear which class we are dealing with here, we should write:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            for (var geoElement : identifiedLayerGeoElements) {\n          \n          \n            \n                            for (GeoElement geoElement : identifiedLayerGeoElements) {\n          \n      \n    \n    \n  \n\nThere's no harm in using var generally, but for samples we want to make sure our users know exactly which class they are dealing with at any point.", "bodyHTML": "<p dir=\"auto\">For the sake of being extra clear which class we are dealing with here, we should write:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">for</span> (<span class=\"pl-k x x-first x-last\">var</span> geoElement <span class=\"pl-k\">:</span> identifiedLayerGeoElements) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">for</span> (<span class=\"pl-smi x x-first x-last\">GeoElement</span> geoElement <span class=\"pl-k\">:</span> identifiedLayerGeoElements) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">There's no harm in using <code>var</code> generally, but for samples we want to make sure our users know exactly which class they are dealing with at any point.</p>", "author": "JonLavi", "createdAt": "2020-09-24T14:09:08Z", "path": "feature_layers/list-related-features/src/main/java/com/esri/samples/list_related_features/ListRelatedFeaturesSample.java", "diffHunk": "@@ -102,44 +99,43 @@ public void start(Stage stage) {\n           // check for primary or secondary mouse click\n           if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n \n+            // clear previous selections\n+            featureLayer.clearSelection();\n+\n             // create a point from where the user clicked\n             Point2D point = new Point2D(event.getX(), event.getY());\n \n-            // convert to map coordinate\n-            Point mapPoint = mapView.screenToLocation(point);\n-\n             // identify the clicked features\n-            QueryParameters queryParameters = new QueryParameters();\n-            queryParameters.setGeometry(GeometryEngine.buffer(mapPoint, 10));\n-            final ListenableFuture<FeatureQueryResult> selectFeatureQuery = featureLayer.selectFeaturesAsync\n-                (queryParameters, FeatureLayer.SelectionMode.NEW);\n-            selectFeatureQuery.addDoneListener(() -> {\n+            ListenableFuture<IdentifyLayerResult> identifyLayerResult =\n+              mapView.identifyLayerAsync(featureLayer, point, 10, false, 1);\n+            identifyLayerResult.addDoneListener(() -> {\n \n               try {\n-                FeatureQueryResult result = selectFeatureQuery.get();\n+                IdentifyLayerResult identifiedLayer = identifyLayerResult.get();\n+                List<GeoElement> identifiedLayerGeoElements = identifiedLayer.getElements();\n                 // get the first selected feature\n-                Iterator<Feature> iterator = result.iterator();\n-                if (iterator.hasNext()) {\n-                  ArcGISFeature selectedFeature = (ArcGISFeature) iterator.next();\n+                for (var geoElement : identifiedLayerGeoElements) {", "originalCommit": "fc886b43f4ad35da40c3194383c5ee202fbfa71b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTkxNA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r495011914", "bodyText": "I agree with Jon here: when using var, it's typically to improve readability in the case of a super long class name, or multiple blocks of repeated class types. In this for loop, it's better to err on the side of readability with GeoElement.", "author": "Rachael-E", "createdAt": "2020-09-25T14:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2MDc3OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r495060779", "bodyText": "Understood, thanks both for the explanation. I've changed that @Rachael-E", "author": "jenmerritt", "createdAt": "2020-09-25T15:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA=="}], "type": "inlineReview"}, {"oid": "326c20bb5d9b59856501e62411df9a759a1a58b6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/326c20bb5d9b59856501e62411df9a759a1a58b6", "message": "update for loop", "committedDate": "2020-09-25T15:18:05Z", "type": "commit"}]}