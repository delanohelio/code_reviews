{"pr_number": 3221, "pr_title": "Enable existing service to be as `TransientService`", "pr_author": "ghkim3221", "pr_createdAt": "2020-12-12T14:51:44Z", "pr_url": "https://github.com/line/armeria/pull/3221", "timeline": [{"oid": "baff2cae0b7ad4bb33c518257eb1381a0a4b6396", "url": "https://github.com/line/armeria/commit/baff2cae0b7ad4bb33c518257eb1381a0a4b6396", "message": "Enable existing service to be as `TransientService`", "committedDate": "2020-12-12T14:38:17Z", "type": "commit"}, {"oid": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "url": "https://github.com/line/armeria/commit/eed9b76fb0d6b8b616c7bf90f585781f0d961685", "message": "Hide implementations from public API", "committedDate": "2020-12-16T15:26:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczNzY0NA==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544737644", "body": "Should we move this to `TransientHttpService`?", "bodyText": "Should we move this to TransientHttpService?", "bodyHTML": "<p dir=\"auto\">Should we move this to <code>TransientHttpService</code>?</p>", "author": "minwoox", "createdAt": "2020-12-17T01:12:52Z", "path": "core/src/main/java/com/linecorp/armeria/server/TransientService.java", "diffHunk": "@@ -31,6 +36,17 @@\n @FunctionalInterface\n public interface TransientService<I extends Request, O extends Response> extends Service<I, O> {\n \n+    /**\n+     * Returns a new {@link HttpService} decorator which makes the specified {@link HttpService} as\n+     * {@link TransientService}.\n+     */\n+    static Function<? super HttpService, SimpleDecoratingHttpService> newDecorator(", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1NjQyMg==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544756422", "bodyText": "Ah... you are right. I thought this is an HttpService like LoggingService. \ud83d\ude05", "author": "ikhoon", "createdAt": "2020-12-17T02:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczNzY0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczODUyNg==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544738526", "body": "nit: Decorates an?", "bodyText": "nit: Decorates an?", "bodyHTML": "<p dir=\"auto\">nit: Decorates an?</p>", "author": "minwoox", "createdAt": "2020-12-17T01:15:19Z", "path": "core/src/main/java/com/linecorp/armeria/server/WrappingTransientHttpService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server;\n+\n+import java.util.Set;\n+\n+import com.linecorp.armeria.common.HttpRequest;\n+import com.linecorp.armeria.common.HttpResponse;\n+\n+/**\n+ * Decorated a {@link HttpService} to be treated as {@link TransientService} without inheritance.", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczODU1Nw==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544738557", "body": "ditto", "bodyText": "ditto", "bodyHTML": "<p dir=\"auto\">ditto</p>", "author": "minwoox", "createdAt": "2020-12-17T01:15:27Z", "path": "core/src/main/java/com/linecorp/armeria/server/WrappingTransientRpcService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server;\n+\n+import java.util.Set;\n+\n+import com.linecorp.armeria.common.RpcRequest;\n+import com.linecorp.armeria.common.RpcResponse;\n+\n+/**\n+ * Decorated a {@link RpcService} to be treated as {@link TransientService} without inheritance.", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2ODgwMw==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544768803", "body": "- Could use `EnumSet` such as `Sets.immutableEnumSet()`?\r\n- Add another factory method for `Iterable<TransientServiceOption> transientServiceOptions`?", "bodyText": "Could use EnumSet such as Sets.immutableEnumSet()?\nAdd another factory method for Iterable<TransientServiceOption> transientServiceOptions?", "bodyHTML": "<ul dir=\"auto\">\n<li>Could use <code>EnumSet</code> such as <code>Sets.immutableEnumSet()</code>?</li>\n<li>Add another factory method for <code>Iterable&lt;TransientServiceOption&gt; transientServiceOptions</code>?</li>\n</ul>", "author": "ikhoon", "createdAt": "2020-12-17T02:40:41Z", "path": "core/src/main/java/com/linecorp/armeria/server/TransientService.java", "diffHunk": "@@ -31,6 +36,17 @@\n @FunctionalInterface\n public interface TransientService<I extends Request, O extends Response> extends Service<I, O> {\n \n+    /**\n+     * Returns a new {@link HttpService} decorator which makes the specified {@link HttpService} as\n+     * {@link TransientService}.\n+     */\n+    static Function<? super HttpService, SimpleDecoratingHttpService> newDecorator(\n+            TransientServiceOption... transientServiceOptions) {\n+        requireNonNull(transientServiceOptions, \"transientServiceOptions\");\n+        return delegate -> new WrappingTransientHttpService(delegate,\n+                                                            ImmutableSet.copyOf(transientServiceOptions));", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MDEzMw==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544770133", "body": "nit: A `Service` is not constant and `FOO` is not good for a service name. Just use `fooService`?", "bodyText": "nit: A Service is not constant and FOO is not good for a service name. Just use fooService?", "bodyHTML": "<p dir=\"auto\">nit: A <code>Service</code> is not constant and <code>FOO</code> is not good for a service name. Just use <code>fooService</code>?</p>", "author": "ikhoon", "createdAt": "2020-12-17T02:44:22Z", "path": "core/src/test/java/com/linecorp/armeria/server/WrappingTransientRpcServiceTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 LINE Corporation\n+ *\n+ * LINE Corporation licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.linecorp.armeria.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.linecorp.armeria.common.RpcResponse;\n+\n+class WrappingTransientRpcServiceTest {\n+\n+    static final RpcService FOO = (ctx, req) -> RpcResponse.of(\"foo\");", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MDgwMg==", "url": "https://github.com/line/armeria/pull/3221#discussion_r544770802", "body": "Ditto\r\n- Use `EnumSet`?\r\n- Add a new method that takes `Iterable`.", "bodyText": "Ditto\n\nUse EnumSet?\nAdd a new method that takes Iterable.", "bodyHTML": "<p dir=\"auto\">Ditto</p>\n<ul dir=\"auto\">\n<li>Use <code>EnumSet</code>?</li>\n<li>Add a new method that takes <code>Iterable</code>.</li>\n</ul>", "author": "ikhoon", "createdAt": "2020-12-17T02:46:22Z", "path": "core/src/main/java/com/linecorp/armeria/server/TransientRpcService.java", "diffHunk": "@@ -24,4 +30,15 @@\n  */\n @FunctionalInterface\n public interface TransientRpcService extends TransientService<RpcRequest, RpcResponse>, RpcService {\n+\n+    /**\n+     * Returns a new {@link RpcService} decorator which makes the specified {@link RpcService} as\n+     * {@link TransientService}.\n+     */\n+    static Function<? super RpcService, SimpleDecoratingRpcService> newDecorator(\n+            TransientServiceOption... transientServiceOptions) {\n+        requireNonNull(transientServiceOptions, \"transientServiceOptions\");\n+        return delegate -> new WrappingTransientRpcService(delegate,\n+                                                           ImmutableSet.copyOf(transientServiceOptions));\n+    }", "originalCommit": "eed9b76fb0d6b8b616c7bf90f585781f0d961685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1dd1f769e262034af85ac3d55435bc41f91a94f6", "url": "https://github.com/line/armeria/commit/1dd1f769e262034af85ac3d55435bc41f91a94f6", "message": "Address comments by @ikhoon and @minwoox", "committedDate": "2020-12-19T08:14:19Z", "type": "commit"}]}