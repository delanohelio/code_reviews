{"pr_number": 2659, "pr_title": "Add `Server.blockUntilShutdown()`", "pr_author": "Charliocat", "pr_createdAt": "2020-04-09T16:23:17Z", "pr_url": "https://github.com/line/armeria/pull/2659", "timeline": [{"oid": "7af0d4aaa0514670e4b9263605ef6adab0064699", "url": "https://github.com/line/armeria/commit/7af0d4aaa0514670e4b9263605ef6adab0064699", "message": "added build unitl shutdown method", "committedDate": "2020-04-09T16:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg==", "url": "https://github.com/line/armeria/pull/2659#discussion_r407059152", "body": "I think we don't need to return an object here. How about making the return type `void`?\r\n\r\n", "bodyText": "I think we don't need to return an object here. How about making the return type void?", "bodyHTML": "<p dir=\"auto\">I think we don't need to return an object here. How about making the return type <code>void</code>?</p>", "author": "ikhoon", "createdAt": "2020-04-11T12:38:08Z", "path": "core/src/main/java/com/linecorp/armeria/server/Server.java", "diffHunk": "@@ -328,6 +328,14 @@ public int numConnections() {\n         return connectionLimitingHandler.numConnections();\n     }\n \n+    /**\n+     * Returns the result of {@link CompletableFuture} which is completed after the {@link #close()} or\n+     * {@link #closeAsync()} operation is completed.\n+     */\n+    public Object blockUntilShutdown() throws Exception {", "originalCommit": "7af0d4aaa0514670e4b9263605ef6adab0064699", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTk5MA==", "url": "https://github.com/line/armeria/pull/2659#discussion_r407059990", "bodyText": "It would be nice to add a test that registers a ServerListener to the test server and could check serverStopped(...) serverStopping(...) was invoked.", "author": "ikhoon", "createdAt": "2020-04-11T12:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMzMzU4Mg==", "url": "https://github.com/line/armeria/pull/2659#discussion_r409333582", "bodyText": "Hi,\nI changed the method, but I'm having trouble with the test. I don't know how to check if server stop has been invoked. Can you help? Thanks!", "author": "Charliocat", "createdAt": "2020-04-16T07:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjkxOA==", "url": "https://github.com/line/armeria/pull/2659#discussion_r410026918", "bodyText": "You could do this:\nassertThat(server.activePorts()).isEmpty();", "author": "trustin", "createdAt": "2020-04-17T06:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyOTI3NA==", "url": "https://github.com/line/armeria/pull/2659#discussion_r410029274", "bodyText": "You can test the method like the following.\n@Test\nvoid testShutdownServer() {\n    final AtomicBoolean stopped = new AtomicBoolean();\n    final Server server = Server.builder()\n                                .service(\"/\", (ctx, req) -> HttpResponse.of(HttpStatus.OK))\n                                .serverListener(new ServerListenerAdapter() {\n                                    @Override\n                                    public void serverStopping(Server server) throws Exception {\n                                        stopped.set(true);\n                                    }\n                                })\n                                .build();\n    server.start().join();\n    CommonPools.blockingTaskExecutor().schedule(server::close, 1, TimeUnit.SECONDS);\n    server.whenClosed().join(); // replace with new method\n    assertThat(stopped).isTrue();\n}", "author": "ikhoon", "createdAt": "2020-04-17T07:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA4NzUyNw==", "url": "https://github.com/line/armeria/pull/2659#discussion_r410087527", "bodyText": "I see.. I was going for a ServerTest and a ThreadRecordingServerListener as a listener, thanks!", "author": "Charliocat", "createdAt": "2020-04-17T08:57:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTE1Mg=="}], "type": "inlineReview"}, {"oid": "ac1dcc252fc0578afd9da83b4ec706de72563a71", "url": "https://github.com/line/armeria/commit/ac1dcc252fc0578afd9da83b4ec706de72563a71", "message": "return void and new test", "committedDate": "2020-04-17T08:57:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxMDAzNw==", "url": "https://github.com/line/armeria/pull/2659#discussion_r411210037", "body": "Could you use more specific `throws` clause? e.g. `throws InterruptedException, ...`", "bodyText": "Could you use more specific throws clause? e.g. throws InterruptedException, ...", "bodyHTML": "<p dir=\"auto\">Could you use more specific <code>throws</code> clause? e.g. <code>throws InterruptedException, ...</code></p>", "author": "trustin", "createdAt": "2020-04-20T08:57:47Z", "path": "core/src/main/java/com/linecorp/armeria/server/Server.java", "diffHunk": "@@ -328,6 +328,14 @@ public int numConnections() {\n         return connectionLimitingHandler.numConnections();\n     }\n \n+    /**\n+     * Waits until the result of {@link CompletableFuture} which is completed after the {@link #close()} or\n+     * {@link #closeAsync()} operation is completed.\n+     */\n+    public void blockUntilShutdown() throws Exception {", "originalCommit": "ac1dcc252fc0578afd9da83b4ec706de72563a71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "32af1c7a83d8a8e7c7f6c3808f49dd8896382a72", "url": "https://github.com/line/armeria/commit/32af1c7a83d8a8e7c7f6c3808f49dd8896382a72", "message": "change to specific exceptions", "committedDate": "2020-04-20T17:53:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTkxMw==", "url": "https://github.com/line/armeria/pull/2659#discussion_r412605913", "body": "After thinking a little bit, how about catching `ExecutionException` and turning it into `CompletionException`? i.e.\r\n\r\n```suggestion\r\n    public void blockUntilShutdown() throws InterruptedException {\r\n        try {\r\n            whenClosed().get();\r\n        } catch (ExecutionException e) {\r\n            throw new CompletionException(e.toString(), Exceptions.peel(e));\r\n        }\r\n    }\r\n```\r\n\r\n.. because we do not usually use `ExecutionException` in our API.", "bodyText": "After thinking a little bit, how about catching ExecutionException and turning it into CompletionException? i.e.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void blockUntilShutdown() throws ExecutionException, InterruptedException {\n          \n          \n            \n                    whenClosed().get();\n          \n          \n            \n                }\n          \n          \n            \n                public void blockUntilShutdown() throws InterruptedException {\n          \n          \n            \n                    try {\n          \n          \n            \n                        whenClosed().get();\n          \n          \n            \n                    } catch (ExecutionException e) {\n          \n          \n            \n                        throw new CompletionException(e.toString(), Exceptions.peel(e));\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\n.. because we do not usually use ExecutionException in our API.", "bodyHTML": "<p dir=\"auto\">After thinking a little bit, how about catching <code>ExecutionException</code> and turning it into <code>CompletionException</code>? i.e.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"344\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> blockUntilShutdown() throws <span class=\"pl-smi\">ExecutionException</span>, <span class=\"pl-smi\">InterruptedException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"345\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        whenClosed()<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"346\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"344\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> blockUntilShutdown() throws <span class=\"pl-smi\">InterruptedException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"345\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"346\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            whenClosed()<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"347\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ExecutionException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"348\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CompletionException</span>(e<span class=\"pl-k\">.</span>toString(), <span class=\"pl-smi\">Exceptions</span><span class=\"pl-k\">.</span>peel(e));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"349\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"350\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">.. because we do not usually use <code>ExecutionException</code> in our API.</p>", "author": "trustin", "createdAt": "2020-04-22T01:39:09Z", "path": "core/src/main/java/com/linecorp/armeria/server/Server.java", "diffHunk": "@@ -332,7 +333,7 @@ public int numConnections() {\n      * Waits until the result of {@link CompletableFuture} which is completed after the {@link #close()} or\n      * {@link #closeAsync()} operation is completed.\n      */\n-    public void blockUntilShutdown() throws Exception {\n+    public void blockUntilShutdown() throws ExecutionException, InterruptedException {\n         whenClosed().get();\n     }", "originalCommit": "32af1c7a83d8a8e7c7f6c3808f49dd8896382a72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5Nzc0OQ==", "url": "https://github.com/line/armeria/pull/2659#discussion_r413297749", "bodyText": "Yes I can change that. It makes sense to me.", "author": "Charliocat", "createdAt": "2020-04-22T20:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTkxMw=="}], "type": "inlineReview"}, {"oid": "b0e95866d82ad7049477e0001088248a558a7fa9", "url": "https://github.com/line/armeria/commit/b0e95866d82ad7049477e0001088248a558a7fa9", "message": "wrapped ExecutionException to CompletionException", "committedDate": "2020-04-22T20:25:38Z", "type": "commit"}, {"oid": "a51ece4add2c5c81db4dc0d2d160920bc598cb3d", "url": "https://github.com/line/armeria/commit/a51ece4add2c5c81db4dc0d2d160920bc598cb3d", "message": "Checkstyle", "committedDate": "2020-04-24T03:28:28Z", "type": "commit"}]}