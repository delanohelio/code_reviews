{"pr_number": 2675, "pr_title": "Distinguish initialization and state changes of circuit breaker", "pr_author": "ghkim3221", "pr_createdAt": "2020-04-23T07:28:25Z", "pr_url": "https://github.com/line/armeria/pull/2675", "timeline": [{"oid": "14c8ca60fd31036605890ebc52bd4339811ad859", "url": "https://github.com/line/armeria/commit/14c8ca60fd31036605890ebc52bd4339811ad859", "message": "Distinguish initialization and state changes of circuit breaker", "committedDate": "2020-04-23T07:19:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTY4Mw==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413581683", "body": "a -> an", "bodyText": "a -> an", "bodyHTML": "<p dir=\"auto\">a -&gt; an</p>", "author": "minwoox", "createdAt": "2020-04-23T07:36:36Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/NonBlockingCircuitBreaker.java", "diffHunk": "@@ -176,6 +176,17 @@ private void logStateTransition(CircuitState circuitState, @Nullable EventCount\n         }\n     }\n \n+    private void notifyInitialized() {\n+        config.listeners().forEach(listener -> {\n+            try {\n+                listener.onInitialized(name());\n+            } catch (Throwable t) {\n+                logger.warn(\"An error occurred when notifying a Initialized event\", t);", "originalCommit": "14c8ca60fd31036605890ebc52bd4339811ad859", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NjkwMw==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413596903", "bodyText": "Fixed \ud83d\ude01", "author": "ghkim3221", "createdAt": "2020-04-23T07:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTc0OQ==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413581749", "body": "Let's add a little description that the state is `Closed` when this is invoked.", "bodyText": "Let's add a little description that the state is Closed when this is invoked.", "bodyHTML": "<p dir=\"auto\">Let's add a little description that the state is <code>Closed</code> when this is invoked.</p>", "author": "minwoox", "createdAt": "2020-04-23T07:36:42Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,11 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.", "originalCommit": "14c8ca60fd31036605890ebc52bd4339811ad859", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NjY0NQ==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413596645", "bodyText": "Added Initial state is always CLOSED. \ud83d\ude01", "author": "ghkim3221", "createdAt": "2020-04-23T07:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTc0OQ=="}], "type": "inlineReview"}, {"oid": "4e58ceae3865fd97c26d911dffbca0c3dfbf1de1", "url": "https://github.com/line/armeria/commit/4e58ceae3865fd97c26d911dffbca0c3dfbf1de1", "message": "Fix and add test cases", "committedDate": "2020-04-23T07:39:42Z", "type": "commit"}, {"oid": "4a01dc51ab121f3466d5a4c6d104a3e6d0b48788", "url": "https://github.com/line/armeria/commit/4a01dc51ab121f3466d5a4c6d104a3e6d0b48788", "message": "Fix typo", "committedDate": "2020-04-23T07:39:49Z", "type": "commit"}, {"oid": "af46dfdf5de335804f216967571da0da994cba61", "url": "https://github.com/line/armeria/commit/af46dfdf5de335804f216967571da0da994cba61", "message": "Add little description that initial state is always CLOSED", "committedDate": "2020-04-23T07:43:31Z", "type": "commit"}, {"oid": "22f8b985d58f5996cb2c0ea8c88d34d281666c5b", "url": "https://github.com/line/armeria/commit/22f8b985d58f5996cb2c0ea8c88d34d281666c5b", "message": "Add default method", "committedDate": "2020-04-23T08:11:54Z", "type": "commit"}, {"oid": "5c10cd892858c7cd98a2c98f745a87877247bfda", "url": "https://github.com/line/armeria/commit/5c10cd892858c7cd98a2c98f745a87877247bfda", "message": "Revert onInitialized in metrics", "committedDate": "2020-04-23T08:16:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjIzMw==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413686233", "body": "```suggestion\r\n     * The initial state is always {@link CircuitState.CLOSED}.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Initial state is always CLOSED.\n          \n          \n            \n                 * The initial state is always {@link CircuitState.CLOSED}.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">Initial</span><span class=\"x x-last\"> </span>state is always <span class=\"pl-c1\">CLOSED</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">The</span><span class=\"x x-last\"> initial </span>state is always <span class=\"x x-first\">{</span><span class=\"pl-k x\">@link</span><span class=\"x\"> </span><span class=\"pl-smi x\">CircuitState</span><span class=\"pl-c1\"><span class=\"pl-k x x-last\">.</span>CLOSED</span><span class=\"x x-first x-last\">}</span><span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-04-23T10:06:25Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * Initial state is always CLOSED.", "originalCommit": "5c10cd892858c7cd98a2c98f745a87877247bfda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc0NTE0Mg==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413745142", "bodyText": "Changed \ud83d\ude01", "author": "ghkim3221", "createdAt": "2020-04-23T11:43:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjIzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjQxNw==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413686417", "body": "```suggestion\r\n    public void onInitialized(String circuitBreakerName) throws Exception {}\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void onInitialized(String circuitBreakerName) throws Exception { }\n          \n          \n            \n                public void onInitialized(String circuitBreakerName) throws Exception {}", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> onInitialized(<span class=\"pl-smi\">String</span> circuitBreakerName) throws <span class=\"pl-smi\">Exception</span> {<span class=\"x x-first x-last\"> </span>}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> onInitialized(<span class=\"pl-smi\">String</span> circuitBreakerName) throws <span class=\"pl-smi\">Exception</span> {}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-04-23T10:06:41Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListenerAdapter.java", "diffHunk": "@@ -22,6 +22,9 @@\n  */\n public class CircuitBreakerListenerAdapter implements CircuitBreakerListener {\n \n+    @Override\n+    public void onInitialized(String circuitBreakerName) throws Exception { }", "originalCommit": "5c10cd892858c7cd98a2c98f745a87877247bfda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc0NTI3Ng==", "url": "https://github.com/line/armeria/pull/2675#discussion_r413745276", "bodyText": "Fixed \ud83d\ude01", "author": "ghkim3221", "createdAt": "2020-04-23T11:44:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY4NjQxNw=="}], "type": "inlineReview"}, {"oid": "63d5f107a61310b164bff3c5933de82ce170246b", "url": "https://github.com/line/armeria/commit/63d5f107a61310b164bff3c5933de82ce170246b", "message": "Apply suggestions", "committedDate": "2020-04-23T11:43:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw==", "url": "https://github.com/line/armeria/pull/2675#discussion_r414263033", "body": "How about adding `CircuitState initialState` as the second parameter, so that we can have a different type of circuit, which starts at HALF_OPEN or OPEN?", "bodyText": "How about adding CircuitState initialState as the second parameter, so that we can have a different type of circuit, which starts at HALF_OPEN or OPEN?", "bodyHTML": "<p dir=\"auto\">How about adding <code>CircuitState initialState</code> as the second parameter, so that we can have a different type of circuit, which starts at HALF_OPEN or OPEN?</p>", "author": "trustin", "createdAt": "2020-04-24T03:21:30Z", "path": "core/src/main/java/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerListener.java", "diffHunk": "@@ -21,6 +21,14 @@\n  */\n public interface CircuitBreakerListener {\n \n+    /**\n+     * Invoked when the circuit breaker is initialized.\n+     * The initial state is always {@link CircuitState.CLOSED}.\n+     */\n+    default void onInitialized(String circuitBreakerName) throws Exception {\n+        onStateChanged(circuitBreakerName, CircuitState.CLOSED);\n+    }", "originalCommit": "63d5f107a61310b164bff3c5933de82ce170246b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzIyOQ==", "url": "https://github.com/line/armeria/pull/2675#discussion_r414263229", "bodyText": "Or please let me know if it doesn't make sense, of course. \ud83d\ude04", "author": "trustin", "createdAt": "2020-04-24T03:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2NTA1NQ==", "url": "https://github.com/line/armeria/pull/2675#discussion_r415465055", "bodyText": "Yes you right, initialState is more general for other type of circuit.\nThank you. \ud83d\ude01", "author": "ghkim3221", "createdAt": "2020-04-27T02:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI2MzAzMw=="}], "type": "inlineReview"}, {"oid": "7ae4232803d2cc5e1cc80e1a51a40ad9651b0ce5", "url": "https://github.com/line/armeria/commit/7ae4232803d2cc5e1cc80e1a51a40ad9651b0ce5", "message": "Add initialState parameter for generality", "committedDate": "2020-04-27T02:16:43Z", "type": "commit"}]}