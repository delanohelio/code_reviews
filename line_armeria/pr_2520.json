{"pr_number": 2520, "pr_title": "Fix a bug where `RequestContextExporter` exports wrong properties", "pr_author": "trustin", "pr_createdAt": "2020-02-21T07:47:23Z", "pr_url": "https://github.com/line/armeria/pull/2520", "timeline": [{"oid": "c1cdb9e99147a22a8cc99acd8a62801b9764ec4d", "url": "https://github.com/line/armeria/commit/c1cdb9e99147a22a8cc99acd8a62801b9764ec4d", "message": "Fix a bug where `RequestContextExporter` exports wrong properties\n\nMotivation:\n\n- `RequestContextExporter.state()` does not consider the case where the\n  current context has a root context. As a result, a `ClientRequestContext`\n  may reuse the state of its root context.\n- `RequestContextExporter` does not take custom attributes into account\n  when determining if the properties needs to be re-exported. As a\n  result, custom attributes will not be re-exported even if a user\n  changes any of their values.\n\nModifications:\n\n- Use `ClientRequestContext.ownAttr()` to check whether the state object\n  exists.\n- Compare attribute values as well when determining if properties need\n  to be re-exported.\n- Handle the case where attribute or header disappears.\n- Miscellaneous:\n  - Implemented `toString()` for:\n    - `DefaultAttributeMap`\n    - `FakeChannel` in `AbstractRequestContextBuilder`\n  - Fixed `StackOverflowError` in `RouteDecoratingService.toString()`\n\nResult:\n\n- When using `RequestContextExporter` or `RequestContextExportingAppender`,\n  the properties are exported properly.\n- Maybe fixes #197 partially", "committedDate": "2020-02-21T07:38:50Z", "type": "commit"}, {"oid": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "url": "https://github.com/line/armeria/commit/5f0e8a3d26cb678762f075ac8f97996e0fd82078", "message": "long -> int", "committedDate": "2020-02-21T07:49:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382438994", "body": "`!needsUpdate && `", "bodyText": "!needsUpdate &&", "bodyHTML": "<p dir=\"auto\"><code>!needsUpdate &amp;&amp; </code></p>", "author": "anuraaga", "createdAt": "2020-02-21T07:51:23Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTYwMw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441603", "bodyText": "Let me make it clear that this loop also updates state.attrValues while scanning.", "author": "trustin", "createdAt": "2020-02-21T07:59:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MTc2Mw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382441763", "bodyText": "Ah :)", "author": "anuraaga", "createdAt": "2020-02-21T07:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODk5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382439307", "body": "```\r\nif (!equals) {\r\n  needsUpdate = true;\r\n  break;\r\n}\r\n```", "bodyText": "if (!equals) {\n  needsUpdate = true;\n  break;\n}", "bodyHTML": "<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (!equals) {\n  needsUpdate = true;\n  break;\n}\"><pre><code>if (!equals) {\n  needsUpdate = true;\n  break;\n}\n</code></pre></div>", "author": "anuraaga", "createdAt": "2020-02-21T07:52:12Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;\n+\n+        // Needs to update if availabilityStamp has changed.\n+        final int availabilityStamp = log.availabilityStamp();\n+        if (state.availabilityStamp != availabilityStamp) {\n+            state.availabilityStamp = availabilityStamp;\n+            needsUpdate = true;\n+        } else {\n+            needsUpdate = false;\n+        }\n+\n+        // Needs to update if any attributes have changed.\n+        if (attrs != null) {\n+            assert state.attrValues != null;\n+            for (int i = 0; i < attrs.length; i++) {\n+                final Object oldValue = state.attrValues[i];\n+                final Object newValue = ctx.attr(attrs[i].key);\n+                state.attrValues[i] = newValue;\n+                needsUpdate |= !Objects.equals(oldValue, newValue);", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0Mjk1Mw==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382442953", "bodyText": "Can't break out of the loop because it needs to update state.attrValues with the new values.", "author": "trustin", "createdAt": "2020-02-21T08:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzOTMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDIzNA==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382440234", "body": "I guess easier to read if this is `false` and remove below `else`. ", "bodyText": "I guess easier to read if this is false and remove below else.", "bodyHTML": "<p dir=\"auto\">I guess easier to read if this is <code>false</code> and remove below <code>else</code>.</p>", "author": "anuraaga", "createdAt": "2020-02-21T07:55:04Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -235,15 +240,37 @@ public boolean containsBuiltIn(BuiltInProperty property) {\n         requireNonNull(ctx, \"ctx\");\n \n         final State state = state(ctx);\n-        final RequestLog log = ctx.log().partial();\n-        final int availabilities = log.availabilityStamp();\n-        if (availabilities != state.availabilities) {\n-            state.availabilities = availabilities;\n-            export(state, ctx, log);\n+        final RequestLogAccess log = ctx.log();\n+\n+        boolean needsUpdate;", "originalCommit": "5f0e8a3d26cb678762f075ac8f97996e0fd82078", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "url": "https://github.com/line/armeria/commit/182616cc2a16ce08b1aa4a0232b2e386a8935c4e", "message": "Address the comments from @anuraaga", "committedDate": "2020-02-21T08:01:42Z", "type": "commit"}, {"oid": "7c9245e7128b6037187c24f96a5e3fc3bf98d5bb", "url": "https://github.com/line/armeria/commit/7c9245e7128b6037187c24f96a5e3fc3bf98d5bb", "message": "Reuse the scanned attribute values when exporting / Use concrete type", "committedDate": "2020-02-21T08:08:54Z", "type": "commit"}, {"oid": "71b598e927833207da0dd2afa8c5771a0e30c1ef", "url": "https://github.com/line/armeria/commit/71b598e927833207da0dd2afa8c5771a0e30c1ef", "message": "Fix", "committedDate": "2020-02-21T08:11:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTg4NQ==", "url": "https://github.com/line/armeria/pull/2520#discussion_r382461885", "body": "nit \r\n```suggestion\r\n        for (int i = 0; i < numAttrs; i++) {\r\n```", "bodyText": "nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int i = 0; i < attrs.length; i++) {\n          \n          \n            \n                    for (int i = 0; i < numAttrs; i++) {", "bodyHTML": "<p dir=\"auto\">nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; i <span class=\"pl-k\">&lt;</span> <span class=\"x x-first\">attrs</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">length</span>; i<span class=\"pl-k\">++</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; i <span class=\"pl-k\">&lt;</span> <span class=\"x x-first x-last\">numAttrs</span>; i<span class=\"pl-k\">++</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-02-21T08:52:51Z", "path": "core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java", "diffHunk": "@@ -537,54 +565,60 @@ private void exportRpcResponse(Map<String, String> out, RequestLog log) {\n         }\n     }\n \n-    private void exportAttributes(Map<String, String> out, RequestContext ctx) {\n+    private void exportAttributes(State state) {\n         if (attrs == null) {\n             return;\n         }\n \n-        for (ExportEntry<AttributeKey<?>> e : attrs) {\n-            putOtherProperty(out, e, ctx.attr(e.key));\n+        assert state.attrValues != null;\n+        for (int i = 0; i < attrs.length; i++) {", "originalCommit": "71b598e927833207da0dd2afa8c5771a0e30c1ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0b92d2332b7e5b258f4b1fed0f38b5b94b835522", "url": "https://github.com/line/armeria/commit/0b92d2332b7e5b258f4b1fed0f38b5b94b835522", "message": "Update core/src/main/java/com/linecorp/armeria/common/logging/RequestContextExporter.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2020-02-24T03:39:40Z", "type": "commit"}, {"oid": "a587f064e386ddc2ea73d5283b1a316a7798eebb", "url": "https://github.com/line/armeria/commit/a587f064e386ddc2ea73d5283b1a316a7798eebb", "message": "Merge branch 'master' into fix_request_context_exporter", "committedDate": "2020-02-24T03:56:17Z", "type": "commit"}]}