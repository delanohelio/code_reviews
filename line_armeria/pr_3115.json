{"pr_number": 3115, "pr_title": "Complete response before aborting request", "pr_author": "minwoox", "pr_createdAt": "2020-10-16T09:54:56Z", "pr_url": "https://github.com/line/armeria/pull/3115", "timeline": [{"oid": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1", "url": "https://github.com/line/armeria/commit/cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1", "message": "Complete response before aborting request\nMotivation:\nWe currently, abort request when the client receives the response.\nHowever, if the request is not complete, the AbortedStreamException is propagated to the response\neven though the client received the response normally.\n\nModifications:\n- Complete response before aboring request in `HttpResonseDecoder`\n- Change to use attribute to apply `ContentPreviewing(Client|Service)` only once.\n\nResult:\n- You can now get the normal response even when the request is not fully sent.", "committedDate": "2020-10-16T09:51:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzY2Mg==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506253662", "body": "Shouldn't it be `SETTING_CONTENT_PREVIEW`? Technically we did not set any preview they setting true.", "bodyText": "Shouldn't it be SETTING_CONTENT_PREVIEW? Technically we did not set any preview they setting true.", "bodyHTML": "<p dir=\"auto\">Shouldn't it be <code>SETTING_CONTENT_PREVIEW</code>? Technically we did not set any preview they setting true.</p>", "author": "trustin", "createdAt": "2020-10-16T10:08:18Z", "path": "core/src/main/java/com/linecorp/armeria/client/logging/ContentPreviewingClient.java", "diffHunk": "@@ -54,6 +56,9 @@\n  */\n public final class ContentPreviewingClient extends SimpleDecoratingHttpClient {\n \n+    private static final AttributeKey<Boolean> CONTENT_PREVIEWING_SET =\n+            AttributeKey.valueOf(ContentPreviewingClient.class, \"CONTENT_PREVIEWING_SET\");", "originalCommit": "cf9abbfad2965ea56b2572a3ee94f0114d2c9ac1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5ODgwOQ==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506298809", "bodyText": "Thanks, fixed. \ud83d\ude09", "author": "minwoox", "createdAt": "2020-10-16T11:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1MzY2Mg=="}], "type": "inlineReview"}, {"oid": "b5b84a3f153d0489ff97849762d20b3c7b10b34b", "url": "https://github.com/line/armeria/commit/b5b84a3f153d0489ff97849762d20b3c7b10b34b", "message": "Address the comment by @trustin", "committedDate": "2020-10-16T11:04:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NTQxNA==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506385414", "body": "maybe some more assertions are needed here?\r\n\r\ni don't see where the request is aborted (could be a comment if I'm just not seeing it)\r\n\r\nalso, might need a signal to ensure the `exceptionally` was actually invoked, as I would guess we are assuming that hook is in fact called. If it weren't the assertion would silently not run", "bodyText": "maybe some more assertions are needed here?\ni don't see where the request is aborted (could be a comment if I'm just not seeing it)\nalso, might need a signal to ensure the exceptionally was actually invoked, as I would guess we are assuming that hook is in fact called. If it weren't the assertion would silently not run", "bodyHTML": "<p dir=\"auto\">maybe some more assertions are needed here?</p>\n<p dir=\"auto\">i don't see where the request is aborted (could be a comment if I'm just not seeing it)</p>\n<p dir=\"auto\">also, might need a signal to ensure the <code>exceptionally</code> was actually invoked, as I would guess we are assuming that hook is in fact called. If it weren't the assertion would silently not run</p>", "author": "codefromthecrypt", "createdAt": "2020-10-16T12:55:51Z", "path": "core/src/test/java/com/linecorp/armeria/client/HttpResponseDecoderTest.java", "diffHunk": "@@ -107,4 +111,17 @@ void confirmResponseStartAndEndInTheSameThread(SessionProtocol protocol)\n         latch.await(System.getenv(\"CI\") != null ? 60 : 10, TimeUnit.SECONDS);\n         assertThat(failed.get()).isFalse();\n     }\n+\n+    @ParameterizedTest\n+    @EnumSource(value = SessionProtocol.class, names = {\"H1C\", \"H2C\"})\n+    void responseCompleteNormallyIfRequestIsAborted(SessionProtocol protocol) throws Exception {", "originalCommit": "b5b84a3f153d0489ff97849762d20b3c7b10b34b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4OTEyMA==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506789120", "bodyText": "That's a good point.\nChanged to use handle which is always executed and add the comment. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-10-17T03:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDg2NA==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506860864", "bodyText": "indeed it is addressed!", "author": "codefromthecrypt", "createdAt": "2020-10-17T07:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NTQxNA=="}], "type": "inlineReview"}, {"oid": "651233f7c4aa10a56c4a8c2fce9ae95c841fa397", "url": "https://github.com/line/armeria/commit/651233f7c4aa10a56c4a8c2fce9ae95c841fa397", "message": "Address the comment by @adriancole", "committedDate": "2020-10-17T03:41:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ==", "url": "https://github.com/line/armeria/pull/3115#discussion_r506860801", "body": "Abort sounds like an error.. I wonder if there's another way to say this as it sounds scary terminology in response to someone calling close (as opposed to cancel or abort)\r\n\r\n```suggestion\r\n        // The stream is aborted in HttpResponseDecoder.close(...) after the client receives the response.\r\n```", "bodyText": "Abort sounds like an error.. I wonder if there's another way to say this as it sounds scary terminology in response to someone calling close (as opposed to cancel or abort)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // The request is aborted in HttpResponseDecoder.close(...) after the client receives the response.\n          \n          \n            \n                    // The stream is aborted in HttpResponseDecoder.close(...) after the client receives the response.", "bodyHTML": "<p dir=\"auto\">Abort sounds like an error.. I wonder if there's another way to say this as it sounds scary terminology in response to someone calling close (as opposed to cancel or abort)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> The <span class=\"x x-first x-last\">request</span> is aborted in HttpResponseDecoder.close(...) after the client receives the response.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> The <span class=\"x x-first x-last\">stream</span> is aborted in HttpResponseDecoder.close(...) after the client receives the response.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "codefromthecrypt", "createdAt": "2020-10-17T07:55:35Z", "path": "core/src/test/java/com/linecorp/armeria/client/HttpResponseDecoderTest.java", "diffHunk": "@@ -107,4 +111,18 @@ void confirmResponseStartAndEndInTheSameThread(SessionProtocol protocol)\n         latch.await(System.getenv(\"CI\") != null ? 60 : 10, TimeUnit.SECONDS);\n         assertThat(failed.get()).isFalse();\n     }\n+\n+    @ParameterizedTest\n+    @EnumSource(value = SessionProtocol.class, names = {\"H1C\", \"H2C\"})\n+    void responseCompleteNormallyIfRequestIsAborted(SessionProtocol protocol) throws Exception {\n+        final WebClient client = WebClient.of(server.uri(protocol));\n+        final HttpRequestWriter request = HttpRequest.streaming(RequestHeaders.of(HttpMethod.POST, \"/\"));\n+        final AggregatedHttpResponse res = client.execute(request).aggregate().join();\n+        assertThat(res.contentUtf8()).isEqualTo(\"Hello, Armeria!\");\n+        // The request is aborted in HttpResponseDecoder.close(...) after the client receives the response.", "originalCommit": "651233f7c4aa10a56c4a8c2fce9ae95c841fa397", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzMwNDE2Nw==", "url": "https://github.com/line/armeria/pull/3115#discussion_r507304167", "bodyText": "Indeed, we call HttpRequest.abort() here https://github.com/line/armeria/blob/master/core/src/main/java/com/linecorp/armeria/client/HttpResponseDecoder.java#L299`", "author": "minwoox", "createdAt": "2020-10-19T01:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzMwODQwNQ==", "url": "https://github.com/line/armeria/pull/3115#discussion_r507308405", "bodyText": "Perhaps, we can check if it's an instance of StreamWriter and call StreamWriter.close() if it is. Let me try that.", "author": "minwoox", "createdAt": "2020-10-19T01:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzMxMzU2OQ==", "url": "https://github.com/line/armeria/pull/3115#discussion_r507313569", "bodyText": "It's an HeaderOverridingHttpRequest so I think I have to refactor the StreamMessage a little bit to get it working.\nLet me make an issue for that. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-10-19T01:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzMxNzQzNw==", "url": "https://github.com/line/armeria/pull/3115#discussion_r507317437", "bodyText": "#3117 Created.", "author": "minwoox", "createdAt": "2020-10-19T01:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MDgwMQ=="}], "type": "inlineReview"}, {"oid": "534ca16962e87112b2250d28cd67f5f25056ceb3", "url": "https://github.com/line/armeria/commit/534ca16962e87112b2250d28cd67f5f25056ceb3", "message": "Address the comment by @adriancole", "committedDate": "2020-10-19T01:03:30Z", "type": "commit"}]}