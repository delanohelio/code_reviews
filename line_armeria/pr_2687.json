{"pr_number": 2687, "pr_title": "Fix a bug where two threads access MPSC queue", "pr_author": "minwoox", "pr_createdAt": "2020-05-04T04:01:36Z", "pr_url": "https://github.com/line/armeria/pull/2687", "timeline": [{"oid": "a10d733f701e24f981861abccc6cb3d07e1e5f35", "url": "https://github.com/line/armeria/commit/a10d733f701e24f981861abccc6cb3d07e1e5f35", "message": "Fix a bug where two threads access MPSC queue\nMotivation:\nWe use MPSC queue in `DefaultStreamMessage`. If more than one thread consume the MPSC queue,\nthe index of the queue is not correctly updated so a thread might spin forever in `peek()` as we've seen in #2683.\nThis bug was introduced from 0.98.4 #2539 by me. :cry\n\nModifications:\n- Fix to consume the MPSC queue only by the subscription thread.\n\nResult:\n- You no longer see spinning thread in `StreamMessage`.", "committedDate": "2020-05-04T03:58:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNzA5Ng==", "url": "https://github.com/line/armeria/pull/2687#discussion_r419207096", "body": "nit:\r\n```suggestion\r\n        if (!wroteAny && o instanceof CloseEvent) {\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!wroteAny && o instanceof AbstractStreamMessage.CloseEvent) {\n          \n          \n            \n                    if (!wroteAny && o instanceof CloseEvent) {", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>wroteAny <span class=\"pl-k\">&amp;&amp;</span> o <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi x x-first\">AbstractStreamMessage</span><span class=\"pl-k x x-last\">.</span><span class=\"pl-smi\">CloseEvent</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>wroteAny <span class=\"pl-k\">&amp;&amp;</span> o <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">CloseEvent</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-05-04T04:15:11Z", "path": "core/src/main/java/com/linecorp/armeria/common/stream/DefaultStreamMessage.java", "diffHunk": "@@ -174,25 +174,33 @@ private void abort0(Throwable cause) {\n             }\n         }\n         assert subscription != null;\n+        final SubscriptionImpl abortedSubscription = subscription;\n \n         if (setState(State.OPEN, State.CLEANUP)) {\n-            notifySubscriberOfCloseEvent(subscription, newCloseEvent(cause));\n+            notifySubscriberOfCloseEvent(abortedSubscription, newCloseEvent(cause));\n             return;\n         }\n \n         if (setState(State.CLOSED, State.CLEANUP)) {\n             // close() or close(cause) has been called before cancel() or abort() is called.\n-\n-            final Object o = queue.peek();\n-            // If there's no data pushed (i.e empty stream), notify subscriber with the event pushed by\n-            // close() or close(cause).\n-            if (!wroteAny && o instanceof CloseEvent) {\n-                notifySubscriberOfCloseEvent(subscription, (CloseEvent) queue.remove());\n-                return;\n+            if (abortedSubscription.needsDirectInvocation()) {\n+                abort0(cause, abortedSubscription);\n+            } else {\n+                abortedSubscription.executor().execute(() -> abort0(cause, abortedSubscription));\n             }\n+        }\n+    }\n \n-            notifySubscriberOfCloseEvent(subscription, newCloseEvent(cause));\n+    private void abort0(Throwable cause, SubscriptionImpl subscription) {\n+        final Object o = queue.peek();\n+        // If there's no data pushed (i.e empty stream), notify subscriber with the event pushed by\n+        // close() or close(cause).\n+        if (!wroteAny && o instanceof AbstractStreamMessage.CloseEvent) {", "originalCommit": "a10d733f701e24f981861abccc6cb3d07e1e5f35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxNzM4Mg==", "url": "https://github.com/line/armeria/pull/2687#discussion_r419217382", "bodyText": "Fixed. Thanks!", "author": "minwoox", "createdAt": "2020-05-04T05:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNzA5Ng=="}], "type": "inlineReview"}, {"oid": "bad66086a92e9116ff80d460de8a0bc9f94c9d28", "url": "https://github.com/line/armeria/commit/bad66086a92e9116ff80d460de8a0bc9f94c9d28", "message": "Address the comment by @ikhoon", "committedDate": "2020-05-04T05:18:32Z", "type": "commit"}]}