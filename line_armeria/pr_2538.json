{"pr_number": 2538, "pr_title": "Require request path when building a client", "pr_author": "trustin", "pr_createdAt": "2020-02-27T08:38:47Z", "pr_url": "https://github.com/line/armeria/pull/2538", "timeline": [{"oid": "5d611cd8c9301d6e4df037d3862c7ec5cbb09c4c", "url": "https://github.com/line/armeria/commit/5d611cd8c9301d6e4df037d3862c7ec5cbb09c4c", "message": "Require request path when building a client\n\nRelated: #2525\n\nMotivation:\n\nThe behavior of the `path()` method in client builder classes is\nconfusing. It throws an exception when the builder was created with a\nURI while it doesn't when created with an `EndpointGroup`.\n\nModifications:\n\n- Removed `path()` method from the builder classes.\n- Added various factory methods that require a path to the clients and\n  client builders.\n- Added various factory methods that accepts `String` in lieu of\n  `Scheme` or `SessionProtocol` for convenience.\n- Slightly changed the behavior of `ClientBuilder.serializationFormat()`,\n  so it doesn't throw an exception even when the builder was created\n  with a URI.\n- Added a variant of `ClientBuilder.serializationFormat()` that accept a\n  `String`.\n\nResult:\n\n- Less confusion.\n- More convenience.\n- Closes #2525", "committedDate": "2020-02-27T08:38:14Z", "type": "commit"}, {"oid": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "url": "https://github.com/line/armeria/commit/dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "message": "Add missing null check", "committedDate": "2020-02-27T08:40:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk5MTE2OA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r384991168", "body": "nit:\r\n```suggestion\r\n     * Sets the {@link SerializationFormat} of the client from the specified {@code format}.\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Sets the {@link SerializationFormat} of the client from the specified {@code String}.\n          \n          \n            \n                 * Sets the {@link SerializationFormat} of the client from the specified {@code format}.", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">SerializationFormat</span>} of the client from the specified {<span class=\"pl-k\">@code</span> <span class=\"pl-smi x x-first x-last\">String</span>}<span class=\"pl-c1\">.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">SerializationFormat</span>} of the client from the specified {<span class=\"pl-k\">@code</span> <span class=\"x x-first x-last\">format</span>}<span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-02-27T09:03:48Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java", "diffHunk": "@@ -67,96 +66,43 @@\n     @Nullable\n     private final EndpointGroup endpointGroup;\n     @Nullable\n-    private final Scheme scheme;\n-    @Nullable\n-    private final SessionProtocol protocol;\n-    @Nullable\n-    private String path;\n-\n-    private SerializationFormat format = SerializationFormat.NONE;\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@code uri}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String uri) {\n-        this(URI.create(requireNonNull(uri, \"uri\")));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@link URI}.\n-     *\n-     * @deprecated Use {@link Clients#builder(URI)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(URI uri) {\n-        this(requireNonNull(uri, \"uri\"), null, null, null);\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@code scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String scheme, Endpoint endpoint) {\n-        this(Scheme.parse(requireNonNull(scheme, \"scheme\")), requireNonNull(endpoint, \"endpoint\"));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link Scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(Scheme, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(Scheme scheme, Endpoint endpoint) {\n-        this(null, requireNonNull(scheme, \"scheme\"), null, requireNonNull(endpoint, \"endpoint\"));\n-    }\n+    private final String path;\n+    private Scheme scheme;\n+    private boolean updatedScheme;\n \n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link SessionProtocol}.\n-     *\n-     * @deprecated Use {@link Clients#builder(SessionProtocol, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(SessionProtocol protocol, Endpoint endpoint) {\n-        this(null, null, requireNonNull(protocol, \"protocol\"), requireNonNull(endpoint, \"endpoint\"));\n+    ClientBuilder(URI uri) {\n+        checkArgument(uri.getScheme() != null, \"uri must have scheme: %s\", uri);\n+        checkArgument(uri.getRawAuthority() != null, \"uri must have authority: %s\", uri);\n+        this.uri = uri;\n+        endpointGroup = null;\n+        path = null;\n+        scheme = Scheme.parse(uri.getScheme());\n     }\n \n-    ClientBuilder(@Nullable URI uri, @Nullable Scheme scheme, @Nullable SessionProtocol protocol,\n-                  @Nullable EndpointGroup endpointGroup) {\n-        this.uri = uri;\n-        this.scheme = scheme;\n-        this.protocol = protocol;\n+    ClientBuilder(Scheme scheme, EndpointGroup endpointGroup, @Nullable String path) {\n+        if (path != null) {\n+            checkArgument(path.startsWith(\"/\"),\n+                          \"path: %s (expected: an absolute path starting with '/')\", path);\n+        }\n+        uri = null;\n         this.endpointGroup = endpointGroup;\n+        this.path = path;\n+        this.scheme = scheme;\n     }\n \n     /**\n-     * Sets the {@code path} of the client.\n+     * Sets the {@link SerializationFormat} of the client from the specified {@code String}.", "originalCommit": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTcwMA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385001700", "body": "nit: I don't think all `SessionProtocal` is supported. \r\nHow about: \r\n```suggestion\r\n     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\r\n     *                                  in {@link SessionProtocol#httpValues()} or {@link SessionProtocol#httpsValues()}\r\n\r\n```", "bodyText": "nit: I don't think all SessionProtocal is supported.\nHow about:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n          \n          \n            \n                 *                                  in {@link SessionProtocol}\n          \n          \n            \n                 * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n          \n          \n            \n                 *                                  in {@link SessionProtocol#httpValues()} or {@link SessionProtocol#httpsValues()}", "bodyHTML": "<p dir=\"auto\">nit: I don't think all <code>SessionProtocal</code> is supported.<br>\nHow about:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@throws</span> <span class=\"pl-smi\">IllegalArgumentException</span> <span class=\"pl-k\">if</span> the {<span class=\"pl-k\">@code</span> protocol} is not one of the fields</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span>                                  in {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">SessionProtocol</span>}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@throws</span> <span class=\"pl-smi\">IllegalArgumentException</span> <span class=\"pl-k\">if</span> the {<span class=\"pl-k\">@code</span> protocol} is not one of the fields</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span>                                  in {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">SessionProtocol</span>#httpValues()} or {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">SessionProtocol</span>#httpsValues()}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-02-27T09:23:52Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}", "originalCommit": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwNDEzNQ==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385004135", "body": "nit: Change `sessionProtocol` to `protocol` for consistency?\r\n```suggestion\r\n    static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup,\r\n```", "bodyText": "nit: Change sessionProtocol to protocol for consistency?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup,\n          \n          \n            \n                static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup,", "bodyHTML": "<p dir=\"auto\">nit: Change <code>sessionProtocol</code> to <code>protocol</code> for consistency?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">static</span> <span class=\"pl-smi\">WebClientBuilder</span> builder(<span class=\"pl-smi\">SessionProtocol</span> <span class=\"x x-first x-last\">sessionProtocol</span>, <span class=\"pl-smi\">EndpointGroup</span> endpointGroup,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">static</span> <span class=\"pl-smi\">WebClientBuilder</span> builder(<span class=\"pl-smi\">SessionProtocol</span> <span class=\"x x-first x-last\">protocol</span>, <span class=\"pl-smi\">EndpointGroup</span> endpointGroup,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-02-27T09:28:15Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}.\n+     * base {@link EndpointGroup} and path.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup, @Nullable String path) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")),\n+                       endpointGroup, path);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol},\n+     * base {@link EndpointGroup} and path.\n+     *\n      * @throws IllegalArgumentException if the {@code sessionProtocol} is not one of the fields\n      *                                  in {@link SessionProtocol}\n      */\n-    static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup) {\n-        return new WebClientBuilder(sessionProtocol, endpointGroup);\n+    static WebClientBuilder builder(SessionProtocol sessionProtocol, EndpointGroup endpointGroup,", "originalCommit": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwOTY4OA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385009688", "body": "How about making `path` non-null? Because this builder already have \r\n`builder(String protocol, EndpointGroup endpointGroup)`.", "bodyText": "How about making path non-null? Because this builder already have\nbuilder(String protocol, EndpointGroup endpointGroup).", "bodyHTML": "<p dir=\"auto\">How about making <code>path</code> non-null? Because this builder already have<br>\n<code>builder(String protocol, EndpointGroup endpointGroup)</code>.</p>", "author": "ikhoon", "createdAt": "2020-02-27T09:37:49Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -312,15 +352,50 @@ static WebClientBuilder builder(URI uri) {\n         return new WebClientBuilder(uri);\n     }\n \n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}\n+     * and base {@link EndpointGroup}.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link WebClientBuilder} created with the specified {@link SessionProtocol}\n      * and base {@link EndpointGroup}.\n      *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClientBuilder} created with the specified {@code protocol}.\n+     * base {@link EndpointGroup} and path.\n+     *\n+     * @throws IllegalArgumentException if the {@code protocol} is not one of the fields\n+     *                                  in {@link SessionProtocol}\n+     */\n+    static WebClientBuilder builder(String protocol, EndpointGroup endpointGroup, @Nullable String path) {", "originalCommit": "dc75d559ef3b6a2edd13d5aa84aa37e2ac223abe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMDUzNA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385030534", "bodyText": "Made path non-null. \ud83d\ude47\u200d\u2642\ufe0f", "author": "trustin", "createdAt": "2020-02-27T10:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwOTY4OA=="}], "type": "inlineReview"}, {"oid": "6d1193e48080091c4d2c6c8e2a6674071d56aa64", "url": "https://github.com/line/armeria/commit/6d1193e48080091c4d2c6c8e2a6674071d56aa64", "message": "Update core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2020-02-27T09:55:31Z", "type": "commit"}, {"oid": "24ca6048df7e035ef8cdb40a22a5ab37548da6f9", "url": "https://github.com/line/armeria/commit/24ca6048df7e035ef8cdb40a22a5ab37548da6f9", "message": "Update core/src/main/java/com/linecorp/armeria/client/WebClient.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2020-02-27T09:55:48Z", "type": "commit"}, {"oid": "c97f08e08c945960126aed99f6c6a0a1f167c444", "url": "https://github.com/line/armeria/commit/c97f08e08c945960126aed99f6c6a0a1f167c444", "message": "Update core/src/main/java/com/linecorp/armeria/client/WebClient.java\n\nCo-Authored-By: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2020-02-27T09:56:07Z", "type": "commit"}, {"oid": "624b8f6fd5b3085170deb8969d1a6730ec5ae029", "url": "https://github.com/line/armeria/commit/624b8f6fd5b3085170deb8969d1a6730ec5ae029", "message": "Address the comments from @ikhoon", "committedDate": "2020-02-27T09:59:52Z", "type": "commit"}, {"oid": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "url": "https://github.com/line/armeria/commit/0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "message": "Make `path` non-null", "committedDate": "2020-02-27T10:13:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTgwOA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385031808", "body": "Shouldn't we update this too? \ud83d\ude00", "bodyText": "Shouldn't we update this too? \ud83d\ude00", "bodyHTML": "<p dir=\"auto\">Shouldn't we update this too? <g-emoji class=\"g-emoji\" alias=\"grinning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f600.png\">\ud83d\ude00</g-emoji></p>", "author": "ikhoon", "createdAt": "2020-02-27T10:16:06Z", "path": "retrofit2/src/main/java/com/linecorp/armeria/client/retrofit2/ArmeriaRetrofit.java", "diffHunk": "@@ -78,14 +104,40 @@ public static ArmeriaRetrofitBuilder builder(URI baseUrl) {\n         return builder(WebClient.of(baseUrl));\n     }\n \n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@code protocol}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n      * the specified {@link EndpointGroup} using the specified {@link SessionProtocol}.\n      */\n     public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {", "originalCommit": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzNDcyNA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385034724", "bodyText": "Fixed \ud83d\ude05", "author": "trustin", "createdAt": "2020-02-27T10:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTgwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTk5NQ==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385031995", "body": "Ditto", "bodyText": "Ditto", "bodyHTML": "<p dir=\"auto\">Ditto</p>", "author": "ikhoon", "createdAt": "2020-02-27T10:16:27Z", "path": "retrofit2/src/main/java/com/linecorp/armeria/client/retrofit2/ArmeriaRetrofit.java", "diffHunk": "@@ -78,14 +104,40 @@ public static ArmeriaRetrofitBuilder builder(URI baseUrl) {\n         return builder(WebClient.of(baseUrl));\n     }\n \n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@code protocol}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup);\n+    }\n+\n     /**\n      * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n      * the specified {@link EndpointGroup} using the specified {@link SessionProtocol}.\n      */\n     public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup) {\n+        return builder(protocol, endpointGroup, null);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(String protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {\n+        return builder(SessionProtocol.of(requireNonNull(protocol, \"protocol\")), endpointGroup, path);\n+    }\n+\n+    /**\n+     * Returns a new {@link ArmeriaRetrofitBuilder} that builds a client that sends requests to\n+     * the specified {@link EndpointGroup} using the specified {@link SessionProtocol} and {@code path}.\n+     */\n+    public static ArmeriaRetrofitBuilder builder(SessionProtocol protocol, EndpointGroup endpointGroup,\n+                                                 @Nullable String path) {", "originalCommit": "0f43dbbeec7aa866ed230a2b65aa90cbc86f453a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df90b0da6d7854680d0b8af5aface4893a86bdb7", "url": "https://github.com/line/armeria/commit/df90b0da6d7854680d0b8af5aface4893a86bdb7", "message": "Make `path` non-null for `ArmeriaRetrofit`", "committedDate": "2020-02-27T10:20:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjIzMA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385082230", "body": "Similar to path, shouldn't this also go away since scheme is a required parameter?", "bodyText": "Similar to path, shouldn't this also go away since scheme is a required parameter?", "bodyHTML": "<p dir=\"auto\">Similar to path, shouldn't this also go away since scheme is a required parameter?</p>", "author": "anuraaga", "createdAt": "2020-02-27T11:58:53Z", "path": "core/src/main/java/com/linecorp/armeria/client/ClientBuilder.java", "diffHunk": "@@ -67,96 +66,43 @@\n     @Nullable\n     private final EndpointGroup endpointGroup;\n     @Nullable\n-    private final Scheme scheme;\n-    @Nullable\n-    private final SessionProtocol protocol;\n-    @Nullable\n-    private String path;\n-\n-    private SerializationFormat format = SerializationFormat.NONE;\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@code uri}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String uri) {\n-        this(URI.create(requireNonNull(uri, \"uri\")));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified {@link URI}.\n-     *\n-     * @deprecated Use {@link Clients#builder(URI)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(URI uri) {\n-        this(requireNonNull(uri, \"uri\"), null, null, null);\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@code scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(String, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(String scheme, Endpoint endpoint) {\n-        this(Scheme.parse(requireNonNull(scheme, \"scheme\")), requireNonNull(endpoint, \"endpoint\"));\n-    }\n-\n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link Scheme}.\n-     *\n-     * @deprecated Use {@link Clients#builder(Scheme, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(Scheme scheme, Endpoint endpoint) {\n-        this(null, requireNonNull(scheme, \"scheme\"), null, requireNonNull(endpoint, \"endpoint\"));\n-    }\n+    private final String path;\n+    private Scheme scheme;\n+    private boolean updatedScheme;\n \n-    /**\n-     * Creates a new {@link ClientBuilder} that builds the client that connects to the specified\n-     * {@link Endpoint} with the {@link SessionProtocol}.\n-     *\n-     * @deprecated Use {@link Clients#builder(SessionProtocol, EndpointGroup)}.\n-     */\n-    @Deprecated\n-    public ClientBuilder(SessionProtocol protocol, Endpoint endpoint) {\n-        this(null, null, requireNonNull(protocol, \"protocol\"), requireNonNull(endpoint, \"endpoint\"));\n+    ClientBuilder(URI uri) {\n+        checkArgument(uri.getScheme() != null, \"uri must have scheme: %s\", uri);\n+        checkArgument(uri.getRawAuthority() != null, \"uri must have authority: %s\", uri);\n+        this.uri = uri;\n+        endpointGroup = null;\n+        path = null;\n+        scheme = Scheme.parse(uri.getScheme());\n     }\n \n-    ClientBuilder(@Nullable URI uri, @Nullable Scheme scheme, @Nullable SessionProtocol protocol,\n-                  @Nullable EndpointGroup endpointGroup) {\n-        this.uri = uri;\n-        this.scheme = scheme;\n-        this.protocol = protocol;\n+    ClientBuilder(Scheme scheme, EndpointGroup endpointGroup, @Nullable String path) {\n+        if (path != null) {\n+            checkArgument(path.startsWith(\"/\"),\n+                          \"path: %s (expected: an absolute path starting with '/')\", path);\n+        }\n+        uri = null;\n         this.endpointGroup = endpointGroup;\n+        this.path = path;\n+        this.scheme = scheme;\n     }\n \n     /**\n-     * Sets the {@code path} of the client.\n+     * Sets the {@link SerializationFormat} of the client from the specified {@code format}.\n      */\n-    public ClientBuilder path(String path) {\n-        ensureEndpointGroup();\n-        requireNonNull(path, \"path\");\n-        checkArgument(path.startsWith(\"/\"), \"path: %s (expected: an absolute path starting with '/')\", path);\n-        this.path = path;\n-        return this;\n+    public ClientBuilder serializationFormat(String format) {", "originalCommit": "df90b0da6d7854680d0b8af5aface4893a86bdb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2Njk2OA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385466968", "bodyText": "+1 if possible.", "author": "minwoox", "createdAt": "2020-02-28T01:39:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjIzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNzkxOA==", "url": "https://github.com/line/armeria/pull/2538#discussion_r385507918", "bodyText": "Done", "author": "trustin", "createdAt": "2020-02-28T04:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjIzMA=="}], "type": "inlineReview"}, {"oid": "2c65139ef0c05cb87887cdfff07bccacab448989", "url": "https://github.com/line/armeria/commit/2c65139ef0c05cb87887cdfff07bccacab448989", "message": "Addressed the comment from @anuraaga", "committedDate": "2020-02-28T04:58:32Z", "type": "commit"}]}