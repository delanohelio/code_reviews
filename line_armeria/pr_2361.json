{"pr_number": 2361, "pr_title": "Add `Clients.builder()` / Deprecate methods with optional parameters", "pr_author": "trustin", "pr_createdAt": "2020-01-02T08:15:44Z", "pr_url": "https://github.com/line/armeria/pull/2361", "timeline": [{"oid": "2eb5f55e4725e9aec5cc36561050800844116750", "url": "https://github.com/line/armeria/commit/2eb5f55e4725e9aec5cc36561050800844116750", "message": "Add `Clients.builder()` / Deprecate methods with optional parameters\n\nMotivation:\n\n- For consistency, a user should be able to create a `ClientBuilder` via\n  `builder()` factory methods.\n- The factory methods in `Clients` and `WebClient` are overly crowded.\n\nModifications:\n\n- Add `Clients.builder()` and deprecated their corresponding\n  `ClientBuilder` constructors.\n- Deprecate the factory methods that require optional parameters in\n  `Clients` and `WebClients`.\n\nResult:\n\n- Closes #1719\n- Less cognitive load (once we remove the deprecated ones)", "committedDate": "2020-01-02T08:11:36Z", "type": "commit"}, {"oid": "7ca16aa2f3a81214fd4fa7c19d1256c361d07af6", "url": "https://github.com/line/armeria/commit/7ca16aa2f3a81214fd4fa7c19d1256c361d07af6", "message": "Indentation", "committedDate": "2020-01-02T08:22:27Z", "type": "commit"}, {"oid": "cfb510a9a087541b6a84901306f0b826fe090d44", "url": "https://github.com/line/armeria/commit/cfb510a9a087541b6a84901306f0b826fe090d44", "message": "Checkstyle / Improved scheme normalization", "committedDate": "2020-01-02T08:47:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQwNTg4Mg==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362405882", "body": "```suggestion\r\n     * Returns a new {@link WebClient} that connects to the specified {@link Endpoint} with\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a new {@link WebClient} client that connects to the specified {@link Endpoint} with\n          \n          \n            \n                 * Returns a new {@link WebClient} that connects to the specified {@link Endpoint} with", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">WebClient</span>} <span class=\"x x-first x-last\">client </span>that connects to the specified {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Endpoint</span>} with</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">WebClient</span>} that connects to the specified {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Endpoint</span>} with</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-01-02T09:09:44Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -36,168 +36,248 @@\n public interface WebClient extends ClientBuilderParams, Unwrappable {\n \n     /**\n-     * Creates a new web client without a base URI using the default {@link ClientFactory} and\n+     * Returns a {@link WebClient} without a base URI using the default {@link ClientFactory} and\n      * the default {@link ClientOptions}.\n      */\n     static WebClient of() {\n-        return builder().options(ClientOptions.of()).build();\n+        return DefaultWebClient.DEFAULT;\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default options.\n+     *\n+     * @param uri the URI of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     */\n+    static WebClient of(String uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@link URI} using the default options.\n+     *\n+     * @param uri the {@link URI} of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@link URI} is not an HTTP scheme\n+     */\n+    static WebClient of(URI uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} client that connects to the specified {@link Endpoint} with", "originalCommit": "cfb510a9a087541b6a84901306f0b826fe090d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQwNjA5Nw==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362406097", "body": "```suggestion\r\n     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a new web client that connects to the specified {@code uri} using the default\n          \n          \n            \n                 * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> <span class=\"x x-first x-last\">web client</span> that connects to the specified {<span class=\"pl-k\">@code</span> uri} using the <span class=\"pl-k\">default</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> <span class=\"x x-first\">{</span><span class=\"pl-k x\">@link</span><span class=\"x\"> </span><span class=\"pl-smi x\">WebClient</span><span class=\"x x-last\">}</span> that connects to the specified {<span class=\"pl-k\">@code</span> uri} using the <span class=\"pl-k\">default</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-01-02T09:10:32Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -36,168 +36,248 @@\n public interface WebClient extends ClientBuilderParams, Unwrappable {\n \n     /**\n-     * Creates a new web client without a base URI using the default {@link ClientFactory} and\n+     * Returns a {@link WebClient} without a base URI using the default {@link ClientFactory} and\n      * the default {@link ClientOptions}.\n      */\n     static WebClient of() {\n-        return builder().options(ClientOptions.of()).build();\n+        return DefaultWebClient.DEFAULT;\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default options.\n+     *\n+     * @param uri the URI of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     */\n+    static WebClient of(String uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@link URI} using the default options.\n+     *\n+     * @param uri the {@link URI} of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@link URI} is not an HTTP scheme\n+     */\n+    static WebClient of(URI uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} client that connects to the specified {@link Endpoint} with\n+     * the {@link SessionProtocol} using the default {@link ClientFactory} and the default\n+     * {@link ClientOptions}.\n+     *\n+     * @param protocol the {@link SessionProtocol} of the {@link Endpoint}\n+     * @param endpoint the server {@link Endpoint}\n+     */\n+    static WebClient of(SessionProtocol protocol, Endpoint endpoint) {\n+        return builder(protocol, endpoint).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default\n      * {@link ClientFactory}.\n      *\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptionValue}s\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)} and {@link WebClientBuilder#option(ClientOptionValue)}.\n      */\n+    @Deprecated\n     static WebClient of(String uri, ClientOptionValue<?>... options) {\n-        return of(ClientFactory.ofDefault(), uri, options);\n+        return builder(uri).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new web client that connects to the specified {@code uri} using the default", "originalCommit": "cfb510a9a087541b6a84901306f0b826fe090d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQwNjIxNA==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362406214", "body": "```suggestion\r\n     * Returns a new {@link WebClient} that connects to the specified {@code uri} using an alternative\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a new web client that connects to the specified {@code uri} using an alternative\n          \n          \n            \n                 * Returns a new {@link WebClient} that connects to the specified {@code uri} using an alternative", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> <span class=\"x x-first x-last\">web client</span> that connects to the specified {<span class=\"pl-k\">@code</span> uri} using an alternative</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a <span class=\"pl-k\">new</span> <span class=\"x x-first\">{</span><span class=\"pl-k x\">@link</span><span class=\"x\"> </span><span class=\"pl-smi x\">WebClient</span><span class=\"x x-last\">}</span> that connects to the specified {<span class=\"pl-k\">@code</span> uri} using an alternative</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2020-01-02T09:11:00Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -36,168 +36,248 @@\n public interface WebClient extends ClientBuilderParams, Unwrappable {\n \n     /**\n-     * Creates a new web client without a base URI using the default {@link ClientFactory} and\n+     * Returns a {@link WebClient} without a base URI using the default {@link ClientFactory} and\n      * the default {@link ClientOptions}.\n      */\n     static WebClient of() {\n-        return builder().options(ClientOptions.of()).build();\n+        return DefaultWebClient.DEFAULT;\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default options.\n+     *\n+     * @param uri the URI of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     */\n+    static WebClient of(String uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@link URI} using the default options.\n+     *\n+     * @param uri the {@link URI} of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@link URI} is not an HTTP scheme\n+     */\n+    static WebClient of(URI uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} client that connects to the specified {@link Endpoint} with\n+     * the {@link SessionProtocol} using the default {@link ClientFactory} and the default\n+     * {@link ClientOptions}.\n+     *\n+     * @param protocol the {@link SessionProtocol} of the {@link Endpoint}\n+     * @param endpoint the server {@link Endpoint}\n+     */\n+    static WebClient of(SessionProtocol protocol, Endpoint endpoint) {\n+        return builder(protocol, endpoint).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default\n      * {@link ClientFactory}.\n      *\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptionValue}s\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)} and {@link WebClientBuilder#option(ClientOptionValue)}.\n      */\n+    @Deprecated\n     static WebClient of(String uri, ClientOptionValue<?>... options) {\n-        return of(ClientFactory.ofDefault(), uri, options);\n+        return builder(uri).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new web client that connects to the specified {@code uri} using the default\n      * {@link ClientFactory}.\n      *\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptions}\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)} and {@link WebClientBuilder#options(ClientOptions)}.\n      */\n+    @Deprecated\n     static WebClient of(String uri, ClientOptions options) {\n-        return of(ClientFactory.ofDefault(), uri, options);\n+        return builder(uri).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using an alternative\n+     * Returns a new web client that connects to the specified {@code uri} using an alternative", "originalCommit": "cfb510a9a087541b6a84901306f0b826fe090d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQwNjU3Mg==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362406572", "body": "`s/new web client/new {@link WebClient}` \ud83d\ude00", "bodyText": "s/new web client/new {@link WebClient} \ud83d\ude00", "bodyHTML": "<p dir=\"auto\"><code>s/new web client/new {@link WebClient}</code> <g-emoji class=\"g-emoji\" alias=\"grinning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f600.png\">\ud83d\ude00</g-emoji></p>", "author": "ikhoon", "createdAt": "2020-01-02T09:12:20Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClient.java", "diffHunk": "@@ -36,168 +36,248 @@\n public interface WebClient extends ClientBuilderParams, Unwrappable {\n \n     /**\n-     * Creates a new web client without a base URI using the default {@link ClientFactory} and\n+     * Returns a {@link WebClient} without a base URI using the default {@link ClientFactory} and\n      * the default {@link ClientOptions}.\n      */\n     static WebClient of() {\n-        return builder().options(ClientOptions.of()).build();\n+        return DefaultWebClient.DEFAULT;\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default options.\n+     *\n+     * @param uri the URI of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     */\n+    static WebClient of(String uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@link URI} using the default options.\n+     *\n+     * @param uri the {@link URI} of the server endpoint\n+     *\n+     * @throws IllegalArgumentException if the scheme of the specified {@link URI} is not an HTTP scheme\n+     */\n+    static WebClient of(URI uri) {\n+        return builder(uri).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} client that connects to the specified {@link Endpoint} with\n+     * the {@link SessionProtocol} using the default {@link ClientFactory} and the default\n+     * {@link ClientOptions}.\n+     *\n+     * @param protocol the {@link SessionProtocol} of the {@link Endpoint}\n+     * @param endpoint the server {@link Endpoint}\n+     */\n+    static WebClient of(SessionProtocol protocol, Endpoint endpoint) {\n+        return builder(protocol, endpoint).build();\n+    }\n+\n+    /**\n+     * Returns a new {@link WebClient} that connects to the specified {@code uri} using the default\n      * {@link ClientFactory}.\n      *\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptionValue}s\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)} and {@link WebClientBuilder#option(ClientOptionValue)}.\n      */\n+    @Deprecated\n     static WebClient of(String uri, ClientOptionValue<?>... options) {\n-        return of(ClientFactory.ofDefault(), uri, options);\n+        return builder(uri).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using the default\n+     * Returns a new web client that connects to the specified {@code uri} using the default\n      * {@link ClientFactory}.\n      *\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptions}\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)} and {@link WebClientBuilder#options(ClientOptions)}.\n      */\n+    @Deprecated\n     static WebClient of(String uri, ClientOptions options) {\n-        return of(ClientFactory.ofDefault(), uri, options);\n+        return builder(uri).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using an alternative\n+     * Returns a new web client that connects to the specified {@code uri} using an alternative\n      * {@link ClientFactory}.\n      *\n      * @param factory an alternative {@link ClientFactory}\n      * @param uri the URI of the server endpoint\n      * @param options the {@link ClientOptionValue}s\n      *\n      * @throws IllegalArgumentException if the scheme of the specified {@code uri} is not an HTTP scheme\n+     *\n+     * @deprecated Use {@link #builder(String)}, {@link WebClientBuilder#factory(ClientFactory)}\n+     *             and {@link WebClientBuilder#options(ClientOptionValue[])}.\n      */\n+    @Deprecated\n     static WebClient of(ClientFactory factory, String uri, ClientOptionValue<?>... options) {\n         return builder(uri).factory(factory).options(options).build();\n     }\n \n     /**\n-     * Creates a new web client that connects to the specified {@code uri} using an alternative\n+     * Returns a new web client that connects to the specified {@code uri} using an alternative", "originalCommit": "cfb510a9a087541b6a84901306f0b826fe090d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ac9b80f9c8ff15f6fd74bcf05118e2adf47041a2", "url": "https://github.com/line/armeria/commit/ac9b80f9c8ff15f6fd74bcf05118e2adf47041a2", "message": "Address the comments from @ikhoon", "committedDate": "2020-01-02T12:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4NzQwNQ==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362687405", "body": "Clients?", "bodyText": "Clients?", "bodyHTML": "<p dir=\"auto\">Clients?</p>", "author": "minwoox", "createdAt": "2020-01-03T01:40:07Z", "path": "grpc-protocol/src/main/java/com/linecorp/armeria/common/grpc/protocol/UnaryGrpcClient.java", "diffHunk": "@@ -59,7 +59,7 @@\n      * Constructs a {@link UnaryGrpcClient} for the given {@link WebClient}.\n      */\n     // TODO(anuraaga): We would ideally use our standard client building pattern, i.e.,\n-    // new ClientBuilder(...).build(UnaryGrpcClient.class), but that requires mapping protocol schemes to media\n+    // Client.builder(...).build(UnaryGrpcClient.class), but that requires mapping protocol schemes to media", "originalCommit": "ac9b80f9c8ff15f6fd74bcf05118e2adf47041a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4ODM0OA==", "url": "https://github.com/line/armeria/pull/2361#discussion_r362688348", "body": "Could you add a small example for this case please?", "bodyText": "Could you add a small example for this case please?", "bodyHTML": "<p dir=\"auto\">Could you add a small example for this case please?</p>", "author": "minwoox", "createdAt": "2020-01-03T01:48:37Z", "path": "core/src/main/java/com/linecorp/armeria/client/WebClientBuilder.java", "diffHunk": "@@ -77,8 +85,15 @@ static boolean isUndefinedUri(URI uri) {\n         if (isUndefinedUri(uri)) {\n             this.uri = uri;\n         } else {\n-            validateScheme(requireNonNull(uri, \"uri\").getScheme());\n-            this.uri = URI.create(SerializationFormat.NONE + \"+\" + uri);\n+            final String givenScheme = requireNonNull(uri, \"uri\").getScheme();\n+            final Scheme scheme = validateScheme(givenScheme);\n+            if (scheme.uriText().equals(givenScheme)) {\n+                this.uri = uri;\n+            } else {\n+                // Replace the user-specified scheme with the normalized one.\n+                this.uri = URI.create(scheme.uriText() +\n+                                      uri.toString().substring(givenScheme.length()));", "originalCommit": "ac9b80f9c8ff15f6fd74bcf05118e2adf47041a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1d4de0574f3b2da0db762120ce773e475f85def6", "url": "https://github.com/line/armeria/commit/1d4de0574f3b2da0db762120ce773e475f85def6", "message": "Address the comments from @minwoox", "committedDate": "2020-01-03T02:21:56Z", "type": "commit"}, {"oid": "07d0a92e66ae6162c37ead3f511c3371c6ecabde", "url": "https://github.com/line/armeria/commit/07d0a92e66ae6162c37ead3f511c3371c6ecabde", "message": "Clean-up", "committedDate": "2020-01-03T02:34:57Z", "type": "commit"}]}