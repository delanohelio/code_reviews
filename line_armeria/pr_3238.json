{"pr_number": 3238, "pr_title": "Attempt re-registration when Eureka heart beat fails with 404 Not Found", "pr_author": "eisig", "pr_createdAt": "2020-12-18T16:55:08Z", "pr_url": "https://github.com/line/armeria/pull/3238", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM5NDM0Ng==", "url": "https://github.com/line/armeria/pull/3238#discussion_r548394346", "body": "```suggestion\r\nlogger.debug(\"Sent a heart beat to Eureka: {}\", client.uri());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      logger.debug(\"Successfully send a heart beat to Eureka: {}\", client.uri());\n          \n          \n            \n            logger.debug(\"Sent a heart beat to Eureka: {}\", client.uri());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">                          </span>logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Successfully send</span> a heart beat to Eureka: {}<span class=\"pl-pds\">\"</span></span>, client<span class=\"pl-k\">.</span>uri());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Sent</span> a heart beat to Eureka: {}<span class=\"pl-pds\">\"</span></span>, client<span class=\"pl-k\">.</span>uri());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "minwoox", "createdAt": "2020-12-24T05:38:45Z", "path": "eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java", "diffHunk": "@@ -328,26 +330,36 @@ public void run() {\n             client.sendHeartBeat(appName, instanceId, instanceInfo, null)\n                   .aggregate()\n                   .handle((res, cause) -> {\n-                      try (HttpData content = res.content()) {\n-                          if (closed) {\n-                              return null;\n-                          }\n+                      if (closed) {\n+                          return null;\n+                      }\n \n-                          // The information of this instance is removed from the registry when the heart beats\n-                          // fail consecutive three times, so we don't retry.\n+                      if (cause != null) {\n+                          logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n+                      } else if (res.headers().status() != HttpStatus.OK) {\n+\n+                          // The information of this instance is removed from the registry when\n+                          // the heart beats fail consecutive three times, so we try to re-registration.\n                           // See https://github.com/Netflix/eureka/wiki/Understanding-eureka-client-server-communication#renew\n-                          if (cause != null) {\n-                              logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n-                          } else if (res.headers().status() != HttpStatus.OK) {\n+                          if (res.headers().status() == HttpStatus.NOT_FOUND) {\n+                              logger.warn(\"Instance {}/{} no longer registered with Eureka.\" +\n+                                          \" Attempting re-registration.\",\n+                                          appName, instanceId);\n+                              register(instanceInfo);\n+                              return null;\n+                          } else {\n                               logger.warn(\"Failed to send a heart beat to Eureka: {}, \" +\n                                           \"(status: {}, content: {})\",\n-                                          client.uri(), res.headers().status(), content.toStringUtf8());\n+                                          client.uri(), res.headers().status(), res.contentUtf8());\n                           }\n-                          heartBeatFuture = eventLoop.schedule(\n-                                  this, instanceInfo.getLeaseInfo().getRenewalIntervalInSecs(),\n-                                  TimeUnit.SECONDS);\n-                          return null;\n+                      } else {\n+                          logger.debug(\"Successfully send a heart beat to Eureka: {}\", client.uri());", "originalCommit": "244c327266d772b78a57310abf4305b524c3906e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwNDI1MA==", "url": "https://github.com/line/armeria/pull/3238#discussion_r549204250", "body": "nit: How about introducing `res.headers().status()` as a local variable and cleaning up `if else` condition?\r\n```java\r\nif (cause != null) {\r\n   // leave warn message with the cause\r\n} else {\r\n   final HttpStatus status = res.status();\r\n   if (status == HttpStatus.OK) {\r\n        // leave some debug message \r\n   } else if (status == HttpStatus.NOT_FOUND) {\r\n        // re-register\r\n   } else {\r\n       // leave warn message\r\n   }\r\n}", "bodyText": "nit: How about introducing res.headers().status() as a local variable and cleaning up if else condition?\nif (cause != null) {\n   // leave warn message with the cause\n} else {\n   final HttpStatus status = res.status();\n   if (status == HttpStatus.OK) {\n        // leave some debug message \n   } else if (status == HttpStatus.NOT_FOUND) {\n        // re-register\n   } else {\n       // leave warn message\n   }\n}", "bodyHTML": "<p dir=\"auto\">nit: How about introducing <code>res.headers().status()</code> as a local variable and cleaning up <code>if else</code> condition?</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (cause != null) {\n   // leave warn message with the cause\n} else {\n   final HttpStatus status = res.status();\n   if (status == HttpStatus.OK) {\n        // leave some debug message \n   } else if (status == HttpStatus.NOT_FOUND) {\n        // re-register\n   } else {\n       // leave warn message\n   }\n}\"><pre><span class=\"pl-k\">if</span> (cause <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {\n   <span class=\"pl-c\"><span class=\"pl-c\">//</span> leave warn message with the cause</span>\n} <span class=\"pl-k\">else</span> {\n   <span class=\"pl-k\">final</span> <span class=\"pl-smi\">HttpStatus</span> status <span class=\"pl-k\">=</span> res<span class=\"pl-k\">.</span>status();\n   <span class=\"pl-k\">if</span> (status <span class=\"pl-k\">==</span> <span class=\"pl-smi\">HttpStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>OK</span>) {\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> leave some debug message </span>\n   } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (status <span class=\"pl-k\">==</span> <span class=\"pl-smi\">HttpStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NOT_FOUND</span>) {\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> re-register</span>\n   } <span class=\"pl-k\">else</span> {\n       <span class=\"pl-c\"><span class=\"pl-c\">//</span> leave warn message</span>\n   }\n}</pre></div>", "author": "ikhoon", "createdAt": "2020-12-28T03:42:30Z", "path": "eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java", "diffHunk": "@@ -328,26 +330,36 @@ public void run() {\n             client.sendHeartBeat(appName, instanceId, instanceInfo, null)\n                   .aggregate()\n                   .handle((res, cause) -> {\n-                      try (HttpData content = res.content()) {\n-                          if (closed) {\n-                              return null;\n-                          }\n+                      if (closed) {\n+                          return null;\n+                      }\n \n-                          // The information of this instance is removed from the registry when the heart beats\n-                          // fail consecutive three times, so we don't retry.\n+                      if (cause != null) {\n+                          logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n+                      } else if (res.headers().status() != HttpStatus.OK) {", "originalCommit": "244c327266d772b78a57310abf4305b524c3906e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExMzA2Nw==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551113067", "body": "Could you check the indentation of this class again, please?", "bodyText": "Could you check the indentation of this class again, please?", "bodyHTML": "<p dir=\"auto\">Could you check the indentation of this class again, please?</p>", "author": "minwoox", "createdAt": "2021-01-04T04:28:41Z", "path": "eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java", "diffHunk": "@@ -328,26 +330,37 @@ public void run() {\n             client.sendHeartBeat(appName, instanceId, instanceInfo, null)\n                   .aggregate()\n                   .handle((res, cause) -> {\n-                      try (HttpData content = res.content()) {\n-                          if (closed) {\n-                              return null;\n-                          }\n+                      if (closed) {\n+                          return null;\n+                      }\n \n-                          // The information of this instance is removed from the registry when the heart beats\n-                          // fail consecutive three times, so we don't retry.\n-                          // See https://github.com/Netflix/eureka/wiki/Understanding-eureka-client-server-communication#renew\n-                          if (cause != null) {\n-                              logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n-                          } else if (res.headers().status() != HttpStatus.OK) {\n+                      if (cause != null) {\n+                          logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n+                      } else {\n+                          final HttpStatus status = res.status();\n+\n+                          if (status == HttpStatus.OK) {\n+                              logger.debug(\"Sent a heart beat to Eureka: {}\", client.uri());\n+                          } else if (status == HttpStatus.NOT_FOUND) {\n+                              // The information of this instance is removed from the registry when\n+                              // the heart beats fail consecutive three times, so we try to re-registration.\n+                              // See https://github.com/Netflix/eureka/wiki/Understanding-eureka-client-server-communication#renew\n+                              logger.warn(\"Instance {}/{} no longer registered with Eureka.\" +\n+                                      \" Attempting re-registration.\",\n+                                  appName, instanceId);", "originalCommit": "a92c97cc71105792411bba30f7d73bbaa50aba09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEyNTIzNA==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551125234", "bodyText": "Fixed", "author": "eisig", "createdAt": "2021-01-04T05:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExMzA2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExNDg5NA==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551114894", "body": "nit: heart?", "bodyText": "nit: heart?", "bodyHTML": "<p dir=\"auto\">nit: heart?</p>", "author": "minwoox", "createdAt": "2021-01-04T04:39:03Z", "path": "eureka/src/test/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListenerTest.java", "diffHunk": "@@ -134,6 +139,41 @@ void registerHeartBeatAndDeregisterAreSent() throws IOException {\n         assertThat(deregisterHeaders.path()).isEqualTo(\"/apps/application0/i-00000000\");\n     }\n \n+    @Test\n+    void reRegisterIfInstanceNoLongerRegistered() throws IOException {\n+        final EurekaUpdatingListener listener =\n+            EurekaUpdatingListener.builder(eurekaServer.httpUri())\n+                .instanceId(INSTANCE_ID)\n+                .renewalIntervalMillis(2000)\n+                .leaseDurationMillis(10000)\n+                .appName(APP_NAME)\n+                .build();\n+        final int previousRegisterCount = registerCounter.get();\n+        final Server application = Server.builder()\n+            .http(0)\n+            .https(0)\n+            .tlsSelfSigned()\n+            .service(\"/\", (ctx, req) -> HttpResponse.of(HttpStatus.OK))\n+            .service(\"/health\", HealthCheckService.of())\n+            .serverListener(listener)\n+            .build();\n+        application.start().join();\n+        await().until(() -> registerContentCaptor.get() != null);\n+        assertThat(registerCounter.get()).isEqualTo(previousRegisterCount + 1);\n+\n+        // remove instance from the registry\n+        registerContentCaptor.set(null);\n+        await().until(() -> registerContentCaptor.get() != null);\n+        assertThat(registerCounter.get()).isEqualTo(previousRegisterCount + 2);\n+\n+        // heat beats are sent, and not cause re-registration", "originalCommit": "a92c97cc71105792411bba30f7d73bbaa50aba09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEyNTMwNQ==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551125305", "bodyText": "yes..fixed", "author": "eisig", "createdAt": "2021-01-04T05:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExNDg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5MjU0Ng==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551792546", "body": "Could you wrap this entire block with try-finally and call `res.content().close()` in the `finally` block when `res` is not `null`, so that we do not leak anything?", "bodyText": "Could you wrap this entire block with try-finally and call res.content().close() in the finally block when res is not null, so that we do not leak anything?", "bodyHTML": "<p dir=\"auto\">Could you wrap this entire block with try-finally and call <code>res.content().close()</code> in the <code>finally</code> block when <code>res</code> is not <code>null</code>, so that we do not leak anything?</p>", "author": "trustin", "createdAt": "2021-01-05T08:49:49Z", "path": "eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java", "diffHunk": "@@ -328,26 +330,37 @@ public void run() {\n             client.sendHeartBeat(appName, instanceId, instanceInfo, null)\n                   .aggregate()\n                   .handle((res, cause) -> {\n-                      try (HttpData content = res.content()) {\n-                          if (closed) {\n-                              return null;\n-                          }\n+                      if (closed) {\n+                          return null;\n+                      }", "originalCommit": "49109872fa3fbc354d308f3be9b77e9548676232", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgwNTc2NA==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551805764", "bodyText": "We don't use aggregateWithPooledObjects anymore so we might not need that? \ud83e\udd14", "author": "minwoox", "createdAt": "2021-01-05T09:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5MjU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgwNjM2OA==", "url": "https://github.com/line/armeria/pull/3238#discussion_r551806368", "bodyText": "Ah, then OK as it is.", "author": "trustin", "createdAt": "2021-01-05T09:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5MjU0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzg5MjcyMg==", "url": "https://github.com/line/armeria/pull/3238#discussion_r553892722", "body": "nit: \r\n```suggestion\r\n                                          client.uri(), res.status(), res.contentUtf8());\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                      client.uri(), res.headers().status(), res.contentUtf8());\n          \n          \n            \n                                                      client.uri(), res.status(), res.contentUtf8());", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                          client<span class=\"pl-k\">.</span>uri(), res<span class=\"pl-k\">.</span><span class=\"x x-first\">headers()</span><span class=\"pl-k x x-last\">.</span>status(), res<span class=\"pl-k\">.</span>contentUtf8());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                          client<span class=\"pl-k\">.</span>uri(), res<span class=\"pl-k\">.</span>status(), res<span class=\"pl-k\">.</span>contentUtf8());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ikhoon", "createdAt": "2021-01-08T11:31:58Z", "path": "eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java", "diffHunk": "@@ -328,26 +330,37 @@ public void run() {\n             client.sendHeartBeat(appName, instanceId, instanceInfo, null)\n                   .aggregate()\n                   .handle((res, cause) -> {\n-                      try (HttpData content = res.content()) {\n-                          if (closed) {\n-                              return null;\n-                          }\n+                      if (closed) {\n+                          return null;\n+                      }\n \n-                          // The information of this instance is removed from the registry when the heart beats\n-                          // fail consecutive three times, so we don't retry.\n-                          // See https://github.com/Netflix/eureka/wiki/Understanding-eureka-client-server-communication#renew\n-                          if (cause != null) {\n-                              logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n-                          } else if (res.headers().status() != HttpStatus.OK) {\n+                      if (cause != null) {\n+                          logger.warn(\"Failed to send a heart beat to Eureka: {}\", client.uri(), cause);\n+                      } else {\n+                          final HttpStatus status = res.status();\n+\n+                          if (status == HttpStatus.OK) {\n+                              logger.debug(\"Sent a heart beat to Eureka: {}\", client.uri());\n+                          } else if (status == HttpStatus.NOT_FOUND) {\n+                              // The information of this instance is removed from the registry when\n+                              // the heart beats fail consecutive three times, so we try to re-registration.\n+                              // See https://github.com/Netflix/eureka/wiki/Understanding-eureka-client-server-communication#renew\n+                              logger.warn(\"Instance {}/{} no longer registered with Eureka.\" +\n+                                          \" Attempting re-registration.\",\n+                                          appName, instanceId);\n+                              register(instanceInfo);\n+                              return null;\n+                          } else {\n                               logger.warn(\"Failed to send a heart beat to Eureka: {}, \" +\n                                           \"(status: {}, content: {})\",\n-                                          client.uri(), res.headers().status(), content.toStringUtf8());\n+                                          client.uri(), res.headers().status(), res.contentUtf8());", "originalCommit": "49109872fa3fbc354d308f3be9b77e9548676232", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3fb11fb463fc3e311a54658ffa2929144337766c", "url": "https://github.com/line/armeria/commit/3fb11fb463fc3e311a54658ffa2929144337766c", "message": "Attempting re-registration when eureka server return 404", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "0ff388f244d53924eddd1a3988062726bb0f1958", "url": "https://github.com/line/armeria/commit/0ff388f244d53924eddd1a3988062726bb0f1958", "message": "fix: eureka heat beat may not shedule with connection error", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "dd6b6fee3b6240aaa6e02c2124fd445c38b20953", "url": "https://github.com/line/armeria/commit/dd6b6fee3b6240aaa6e02c2124fd445c38b20953", "message": "Add test for eureka re-registration", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "021aea6a19fc8f2fd6cf38207dfca8e4da839502", "url": "https://github.com/line/armeria/commit/021aea6a19fc8f2fd6cf38207dfca8e4da839502", "message": "clean tests", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "079ea255fc519b1d22d0e48af9b16c8268b52ef0", "url": "https://github.com/line/armeria/commit/079ea255fc519b1d22d0e48af9b16c8268b52ef0", "message": "Fix indentation and world spelling", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "692e2a780cb63ab60c9512ec821ba20be7a57478", "url": "https://github.com/line/armeria/commit/692e2a780cb63ab60c9512ec821ba20be7a57478", "message": "Update eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java\n\nCo-authored-by: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2021-01-23T16:35:51Z", "type": "commit"}, {"oid": "692e2a780cb63ab60c9512ec821ba20be7a57478", "url": "https://github.com/line/armeria/commit/692e2a780cb63ab60c9512ec821ba20be7a57478", "message": "Update eureka/src/main/java/com/linecorp/armeria/server/eureka/EurekaUpdatingListener.java\n\nCo-authored-by: Ikhun Um <ih.pert@gmail.com>", "committedDate": "2021-01-23T16:35:51Z", "type": "forcePushed"}]}