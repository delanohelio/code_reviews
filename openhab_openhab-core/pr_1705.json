{"pr_number": 1705, "pr_title": "Fix and cleanup logging in ExecUtil", "pr_author": "cpmeister", "pr_createdAt": "2020-10-08T20:39:58Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1705", "timeline": [{"oid": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "url": "https://github.com/openhab/openhab-core/commit/37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "message": "Fix and cleanup logging in ExecUtil\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-08T20:39:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTE2MQ==", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502881161", "body": "I would keep logging this as WARN level here as the severity isn't reduced, just because debug logging is enabled. All that is added is that the exception will be logged in that case.\r\n```suggestion\r\n                logger.warn(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),\r\n```", "bodyText": "I would keep logging this as WARN level here as the severity isn't reduced, just because debug logging is enabled. All that is added is that the exception will be logged in that case.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),\n          \n          \n            \n                            logger.warn(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),", "bodyHTML": "<p dir=\"auto\">I would keep logging this as WARN level here as the severity isn't reduced, just because debug logging is enabled. All that is added is that the exception will be logged in that case.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error occurred when executing commandLine '{}'<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>toString(commandLine),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">warn</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error occurred when executing commandLine '{}'<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>toString(commandLine),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kaikreuzer", "createdAt": "2020-10-11T08:01:03Z", "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -104,22 +105,33 @@ public static void executeCommandLine(String... commandLine) {\n             } else if (process.waitFor(timeout.toMillis(), TimeUnit.MILLISECONDS)) {\n                 exitCode = process.exitValue();\n             } else {\n-                logger.warn(\"Timeout occurred when executing commandLine '{}'\", commandLine);\n+                logger.warn(\"Timeout occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n                 break cleanup;\n             }\n             if (exitCode == 0) {\n                 return outputFuture.get();\n             } else {\n-                logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n-                        errorFuture.get());\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n+                            errorFuture.get());\n+                }\n                 return null;\n             }\n         } catch (ExecutionException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e.getCause());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),", "originalCommit": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0NzU4MA==", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502947580", "bodyText": "done", "author": "cpmeister", "createdAt": "2020-10-11T18:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTIwMQ==", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502881201", "body": "dito\r\n```suggestion\r\n                logger.warn(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);\r\n```", "bodyText": "dito\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.debug(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);\n          \n          \n            \n                            logger.warn(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);", "bodyHTML": "<p dir=\"auto\">dito</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to execute commandLine '{}'<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>toString(commandLine), e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">warn</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to execute commandLine '{}'<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>toString(commandLine), e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kaikreuzer", "createdAt": "2020-10-11T08:01:17Z", "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -104,22 +105,33 @@ public static void executeCommandLine(String... commandLine) {\n             } else if (process.waitFor(timeout.toMillis(), TimeUnit.MILLISECONDS)) {\n                 exitCode = process.exitValue();\n             } else {\n-                logger.warn(\"Timeout occurred when executing commandLine '{}'\", commandLine);\n+                logger.warn(\"Timeout occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n                 break cleanup;\n             }\n             if (exitCode == 0) {\n                 return outputFuture.get();\n             } else {\n-                logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n-                        errorFuture.get());\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n+                            errorFuture.get());\n+                }\n                 return null;\n             }\n         } catch (ExecutionException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e.getCause());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),\n+                        e.getCause());\n+            } else {\n+                logger.warn(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n+            }\n         } catch (InterruptedException e) {\n-            logger.debug(\"commandLine '{}' was interrupted\", commandLine, e);\n+            logger.debug(\"commandLine '{}' was interrupted\", Arrays.toString(commandLine), e);\n         } catch (IOException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e);\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);", "originalCommit": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0NzU5OQ==", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502947599", "bodyText": "done", "author": "cpmeister", "createdAt": "2020-10-11T18:10:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTIwMQ=="}], "type": "inlineReview"}, {"oid": "1ad284c8ad8bf7584160567707a37f0d0a07d503", "url": "https://github.com/openhab/openhab-core/commit/1ad284c8ad8bf7584160567707a37f0d0a07d503", "message": "Change suggestions\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-11T18:09:15Z", "type": "commit"}]}