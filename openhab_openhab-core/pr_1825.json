{"pr_number": 1825, "pr_title": "Harden item creation by checking for validity of name", "pr_author": "kaikreuzer", "pr_createdAt": "2020-11-15T17:50:19Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5NDI1Ng==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r523994256", "body": "The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item names:\r\n\r\n```java\r\n@ApiResponse(responseCode = \"400\", description = \"Item null.\")\r\n```", "bodyText": "The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item names:\n@ApiResponse(responseCode = \"400\", description = \"Item null.\")", "bodyHTML": "<p dir=\"auto\">The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item names:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ApiResponse(responseCode = &quot;400&quot;, description = &quot;Item null.&quot;)\"><pre><span class=\"pl-k\">@ApiResponse</span>(<span class=\"pl-c1\">responseCode</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>400<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Item null.<span class=\"pl-pds\">\"</span></span>)</pre></div>", "author": "wborn", "createdAt": "2020-11-16T09:04:12Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java", "diffHunk": "@@ -590,29 +590,35 @@ public Response createOrUpdateItem(final @Context UriInfo uriInfo, final @Contex\n             return Response.status(Status.BAD_REQUEST).build();\n         }\n \n-        Item newItem = ItemDTOMapper.map(item, itemBuilderFactory);\n-        if (newItem == null) {\n-            logger.warn(\"Received HTTP PUT request at '{}' with an invalid item type '{}'.\", uriInfo.getPath(),\n-                    item.type);\n-            return Response.status(Status.BAD_REQUEST).build();\n-        }\n+        try {\n+            Item newItem = ItemDTOMapper.map(item, itemBuilderFactory);\n+            if (newItem == null) {\n+                logger.warn(\"Received HTTP PUT request at '{}' with an invalid item type '{}'.\", uriInfo.getPath(),\n+                        item.type);\n+                return Response.status(Status.BAD_REQUEST).build();\n+            }\n \n-        // Save the item\n-        if (getItem(itemname) == null) {\n-            // item does not yet exist, create it\n-            managedItemProvider.add(newItem);\n-            return getItemResponse(uriBuilder(uriInfo, httpHeaders), Status.CREATED, itemRegistry.get(itemname), locale,\n-                    null);\n-        } else if (managedItemProvider.get(itemname) != null) {\n-            // item already exists as a managed item, update it\n-            managedItemProvider.update(newItem);\n-            return getItemResponse(uriBuilder(uriInfo, httpHeaders), Status.OK, itemRegistry.get(itemname), locale,\n-                    null);\n-        } else {\n-            // Item exists but cannot be updated\n-            logger.warn(\"Cannot update existing item '{}', because is not managed.\", itemname);\n-            return JSONResponse.createErrorResponse(Status.METHOD_NOT_ALLOWED,\n-                    \"Cannot update non-managed Item \" + itemname);\n+            // Save the item\n+            if (getItem(itemname) == null) {\n+                // item does not yet exist, create it\n+                managedItemProvider.add(newItem);\n+                return getItemResponse(uriBuilder(uriInfo, httpHeaders), Status.CREATED, itemRegistry.get(itemname),\n+                        locale, null);\n+            } else if (managedItemProvider.get(itemname) != null) {\n+                // item already exists as a managed item, update it\n+                managedItemProvider.update(newItem);\n+                return getItemResponse(uriBuilder(uriInfo, httpHeaders), Status.OK, itemRegistry.get(itemname), locale,\n+                        null);\n+            } else {\n+                // Item exists but cannot be updated\n+                logger.warn(\"Cannot update existing item '{}', because is not managed.\", itemname);\n+                return JSONResponse.createErrorResponse(Status.METHOD_NOT_ALLOWED,\n+                        \"Cannot update non-managed Item \" + itemname);\n+            }\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"Received HTTP PUT request at '{}' with an invalid item name '{}'.\", uriInfo.getPath(),\n+                    item.name);\n+            return Response.status(Status.BAD_REQUEST).build();", "originalCommit": "a8e29036a41a0305272a6e0099caeea855428a79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAxNTIzNw==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r524015237", "bodyText": "I also see that the method is annotated with:\n@Path(\"/{itemname: [a-zA-Z_0-9]+}\")\nDo you know if it returns the same response code for item names that do not match this expression?\nIt might be confusing if there are several response codes for invalid item names.", "author": "wborn", "createdAt": "2020-11-16T09:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5NDI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzOTEyOA==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r525539128", "bodyText": "It actually results in a 404.\nAnd the topic is rather complex: The regex is checking for the path of the request - and our code only uses that path for determining if a new item should be created or an existing one is to be updated.\nThe request itself then contains the item as json payload - and if this is wrong, we (imho correctly) use a 400.\nYou can actually send the request to /items/ABC and have as payload XYZ as the item name - it will happily create the XYZ item for you... I have now added another check for that case as well (which will return HTTP 400, i.e. \"invalid payload\").", "author": "kaikreuzer", "createdAt": "2020-11-17T21:34:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5NDI1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5OTI4Nw==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r523999287", "body": "The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item lists:\r\n\r\n```java\r\n@ApiResponse(responseCode = \"400\", description = \"Item list is null.\")\r\n```", "bodyText": "The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item lists:\n@ApiResponse(responseCode = \"400\", description = \"Item list is null.\")", "bodyHTML": "<p dir=\"auto\">The OpenAPI doc should be improved for this response since this response is currently unexpected for non-null item lists:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ApiResponse(responseCode = &quot;400&quot;, description = &quot;Item list is null.&quot;)\n\"><pre><span class=\"pl-k\">@ApiResponse</span>(<span class=\"pl-c1\">responseCode</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>400<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Item list is null.<span class=\"pl-pds\">\"</span></span>)</pre></div>", "author": "wborn", "createdAt": "2020-11-16T09:08:46Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java", "diffHunk": "@@ -641,12 +647,17 @@ public Response createOrUpdateItems(\n         Map<String, Collection<String>> tagMap = new HashMap<>();\n \n         for (GroupItemDTO item : items) {\n-            Item newItem = ItemDTOMapper.map(item, itemBuilderFactory);\n-            if (newItem == null) {\n-                wrongTypes.add(item);\n-                tagMap.put(item.name, item.tags);\n-            } else {\n-                activeItems.add(newItem);\n+            try {\n+                Item newItem = ItemDTOMapper.map(item, itemBuilderFactory);\n+                if (newItem == null) {\n+                    wrongTypes.add(item);\n+                    tagMap.put(item.name, item.tags);\n+                } else {\n+                    activeItems.add(newItem);\n+                }\n+            } catch (IllegalArgumentException e) {\n+                logger.warn(\"Received HTTP PUT request with an invalid item name '{}'.\", item.name);\n+                return Response.status(Status.BAD_REQUEST).build();", "originalCommit": "a8e29036a41a0305272a6e0099caeea855428a79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMDkyNA==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r524000924", "body": "```suggestion\r\n            throw new IllegalArgumentException(\"The item name '\" + itemDTO.name + \"' is invalid.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"The item name `\" + itemDTO.name + \"` is invalid.\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"The item name '\" + itemDTO.name + \"' is invalid.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The item name <span class=\"x x-first x-last\">`</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> itemDTO<span class=\"pl-k\">.</span>name <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">`</span> is invalid.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The item name <span class=\"x x-first x-last\">'</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> itemDTO<span class=\"pl-k\">.</span>name <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">'</span> is invalid.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wborn", "createdAt": "2020-11-16T09:10:11Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/dto/ItemDTOMapper.java", "diffHunk": "@@ -52,6 +53,10 @@\n             throw new IllegalArgumentException(\"The argument 'itemBuilderFactory' must no be null.\");\n         }\n \n+        if (!ItemUtil.isValidItemName(itemDTO.name)) {\n+            throw new IllegalArgumentException(\"The item name `\" + itemDTO.name + \"` is invalid.\");", "originalCommit": "a8e29036a41a0305272a6e0099caeea855428a79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwMTI0MQ==", "url": "https://github.com/openhab/openhab-core/pull/1825#discussion_r524001241", "body": "```suggestion\r\n            throw new IllegalArgumentException(\"The item name '\" + element.getName() + \"' is invalid.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"The item name `\" + element.getName() + \"` is invalid.\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"The item name '\" + element.getName() + \"' is invalid.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The item name <span class=\"x x-first x-last\">`</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> element<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">`</span> is invalid.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The item name <span class=\"x x-first x-last\">'</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> element<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">'</span> is invalid.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wborn", "createdAt": "2020-11-16T09:10:28Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java", "diffHunk": "@@ -105,6 +105,14 @@ public ManagedItemProvider(final @Reference StorageService storageService,\n         }\n     }\n \n+    @Override\n+    public void add(Item element) {\n+        if (!ItemUtil.isValidItemName(element.getName())) {\n+            throw new IllegalArgumentException(\"The item name `\" + element.getName() + \"` is invalid.\");", "originalCommit": "a8e29036a41a0305272a6e0099caeea855428a79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6932e8b898f4839fd284a5fc8c4881eb7f0b5109", "url": "https://github.com/openhab/openhab-core/commit/6932e8b898f4839fd284a5fc8c4881eb7f0b5109", "message": "Harden item creation by checking for validity of name\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-11-17T20:52:11Z", "type": "commit"}, {"oid": "0763cc335a2447c4a444af03b2fc234d19295a39", "url": "https://github.com/openhab/openhab-core/commit/0763cc335a2447c4a444af03b2fc234d19295a39", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-11-17T21:33:05Z", "type": "commit"}, {"oid": "0763cc335a2447c4a444af03b2fc234d19295a39", "url": "https://github.com/openhab/openhab-core/commit/0763cc335a2447c4a444af03b2fc234d19295a39", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-11-17T21:33:05Z", "type": "forcePushed"}]}