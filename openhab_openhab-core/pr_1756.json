{"pr_number": 1756, "pr_title": "[REST] Apply metadata selector regex on all namespaces", "pr_author": "silamon", "pr_createdAt": "2020-10-25T13:10:20Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1756", "timeline": [{"oid": "30ba23c96f2bdc1f042a82e2d98d4478b8cd8bf6", "url": "https://github.com/openhab/openhab-core/commit/30ba23c96f2bdc1f042a82e2d98d4478b8cd8bf6", "message": "Change metadata selector\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-10-25T13:07:29Z", "type": "commit"}, {"oid": "16ad56948ea4a518d877c8316af73a07b0da688c", "url": "https://github.com/openhab/openhab-core/commit/16ad56948ea4a518d877c8316af73a07b0da688c", "message": "apply spotless\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-10-25T13:27:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MDU2NQ==", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519360565", "body": "Use shortcut here or remove static import.\r\n\r\n```suggestion\r\n                    .collect(toSet());\r\n```", "bodyText": "Use shortcut here or remove static import.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .collect(Collectors.toSet());\n          \n          \n            \n                                .collect(toSet());", "bodyHTML": "<p dir=\"auto\">Use shortcut here or remove static import.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .collect(<span class=\"pl-smi x x-first\">Collectors</span><span class=\"pl-k x x-last\">.</span>toSet());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .collect(toSet());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-11-08T11:28:36Z", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcher.java", "diffHunk": "@@ -72,19 +63,22 @@ public MetadataSelectorMatcher(final @Reference MetadataRegistry metadataRegistr\n                     .map(n -> n.trim()) //\n                     .collect(Collectors.toSet());\n \n+            Set<String> allMetadataNamespaces = metadataRegistry.getAll().stream() //\n+                    .map(metadata -> metadata.getUID().getNamespace()) //\n+                    .distinct() //\n+                    .collect(Collectors.toSet());", "originalCommit": "16ad56948ea4a518d877c8316af73a07b0da688c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MTc3NA==", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519361774", "body": "Private property `configDescriptionRegistry` can be removed completely from this test.", "bodyText": "Private property configDescriptionRegistry can be removed completely from this test.", "bodyHTML": "<p dir=\"auto\">Private property <code>configDescriptionRegistry</code> can be removed completely from this test.</p>", "author": "cweitkamp", "createdAt": "2020-11-08T11:31:52Z", "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "diffHunk": "@@ -53,21 +53,21 @@\n \n     @BeforeEach\n     public void setup() throws Exception {\n-        when(configDescriptionRegistry.getConfigDescriptions(null)).thenReturn(mockConfigDescriptions());\n+        when(metadataRegistry.getAll()).thenReturn(mockMetadata());\n         when(metadataRegistry.isInternalNamespace(anyString())).thenReturn(false);\n \n-        matcher = new MetadataSelectorMatcher(metadataRegistry, configDescriptionRegistry);\n+        matcher = new MetadataSelectorMatcher(metadataRegistry);", "originalCommit": "16ad56948ea4a518d877c8316af73a07b0da688c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MjY1Mg==", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519362652", "body": "We do not need the method `mockMetadate()`. Can be implemented like this:\r\n\r\n```\r\n       when(metadataRegistry.getAll()).thenReturn(List.of(new Metadata(new MetadataKey(\"magic\", \"test_item\"), \"test\", Map.of()), ... ));\r\n```", "bodyText": "We do not need the method mockMetadate(). Can be implemented like this:\n       when(metadataRegistry.getAll()).thenReturn(List.of(new Metadata(new MetadataKey(\"magic\", \"test_item\"), \"test\", Map.of()), ... ));", "bodyHTML": "<p dir=\"auto\">We do not need the method <code>mockMetadate()</code>. Can be implemented like this:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"       when(metadataRegistry.getAll()).thenReturn(List.of(new Metadata(new MetadataKey(&quot;magic&quot;, &quot;test_item&quot;), &quot;test&quot;, Map.of()), ... ));\n\"><pre><code>       when(metadataRegistry.getAll()).thenReturn(List.of(new Metadata(new MetadataKey(\"magic\", \"test_item\"), \"test\", Map.of()), ... ));\n</code></pre></div>", "author": "cweitkamp", "createdAt": "2020-11-08T11:34:03Z", "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "diffHunk": "@@ -53,21 +53,21 @@\n \n     @BeforeEach\n     public void setup() throws Exception {\n-        when(configDescriptionRegistry.getConfigDescriptions(null)).thenReturn(mockConfigDescriptions());\n+        when(metadataRegistry.getAll()).thenReturn(mockMetadata());", "originalCommit": "16ad56948ea4a518d877c8316af73a07b0da688c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc1baff3866cf17f2e9742ef76e569b081ac5640", "url": "https://github.com/openhab/openhab-core/commit/bc1baff3866cf17f2e9742ef76e569b081ac5640", "message": "pr feedback\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-11-14T12:11:37Z", "type": "commit"}, {"oid": "83f18544ee6e1cfc332b18929fa55a504fdc5350", "url": "https://github.com/openhab/openhab-core/commit/83f18544ee6e1cfc332b18929fa55a504fdc5350", "message": "pr feedback\n\nSigned-off-by: Simon Lamon <simonlamon93@hotmail.com>", "committedDate": "2020-11-14T12:17:54Z", "type": "commit"}]}