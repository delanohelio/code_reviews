{"pr_number": 1441, "pr_title": "Removed dependency on 'org.apache.commons.io'", "pr_author": "cweitkamp", "pr_createdAt": "2020-04-22T20:19:51Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1441", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMwOTkxMw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r413309913", "body": "We only need the first line. Could be changed to:\r\n\r\n```suggestion\r\n            final BufferedReader reader = Files.newBufferedReader(file.toPath());\r\n            return reader.readLine();\r\n```", "bodyText": "We only need the first line. Could be changed to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final List<String> lines = Files.readAllLines(file.toPath(), StandardCharsets.UTF_8);\n          \n          \n            \n                        return lines.isEmpty() ? \"\" : lines.get(0);\n          \n          \n            \n                        final BufferedReader reader = Files.newBufferedReader(file.toPath());\n          \n          \n            \n                        return reader.readLine();", "bodyHTML": "<p dir=\"auto\">We only need the first line. Could be changed to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first\">List&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> lines</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">readAllLines</span>(file<span class=\"pl-k\">.</span>toPath()<span class=\"x x-first\">, </span><span class=\"pl-smi x\">StandardCharsets</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">UTF_8</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"x x-first\">lines</span><span class=\"pl-k x\">.</span><span class=\"x\">isEmpty() </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> lines</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x x-last\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi x x-first\">BufferedReader</span><span class=\"x x-last\"> reader</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">newBufferedReader</span>(file<span class=\"pl-k\">.</span>toPath());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"x x-first\">reader</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">readLine(</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-22T20:34:03Z", "path": "bundles/org.openhab.core.id/src/main/java/org/openhab/core/id/InstanceUUID.java", "diffHunk": "@@ -75,19 +73,21 @@ public static synchronized String get() {\n     private static void writeFile(File file, String content) throws IOException {\n         // create intermediary directories\n         file.getParentFile().mkdirs();\n-        try (OutputStream outputStream = new FileOutputStream(file)) {\n-            IOUtils.write(content, outputStream);\n+        try {\n+            Files.writeString(file.toPath(), content, StandardCharsets.UTF_8);\n+        } catch (IOException ioe) {\n+            LOGGER.warn(\"Failed writing to file '{}': {}\", content, file.getAbsolutePath(), ioe.getMessage());\n         }\n     }\n \n     private static String readFirstLine(File file) {\n-        List<String> lines = null;\n         try {\n-            lines = IOUtils.readLines(new FileInputStream(file));\n+            final List<String> lines = Files.readAllLines(file.toPath(), StandardCharsets.UTF_8);\n+            return lines.isEmpty() ? \"\" : lines.get(0);", "originalCommit": "bf7ec179d251a0a5fcfc83dc0b51b7f316aa1a6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxMDc0Mg==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r413310742", "body": "We only need the first line. Could be changed to:\r\n\r\n```suggestion\r\n            final BufferedReader reader = Files.newBufferedReader(file.toPath());\r\n            return (RsaJsonWebKey) JsonWebKey.Factory.newJwk(reader.readLine());\r\n```", "bodyText": "We only need the first line. Could be changed to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<String> lines = Files.readAllLines(file.toPath(), StandardCharsets.UTF_8);\n          \n          \n            \n                        return (RsaJsonWebKey) JsonWebKey.Factory.newJwk(lines.get(0));\n          \n          \n            \n                        final BufferedReader reader = Files.newBufferedReader(file.toPath());\n          \n          \n            \n                        return (RsaJsonWebKey) JsonWebKey.Factory.newJwk(reader.readLine());", "bodyHTML": "<p dir=\"auto\">We only need the first line. Could be changed to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\"><span class=\"x x-first\">List&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> lines </span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">readAllLines</span>(file<span class=\"pl-k\">.</span>toPath()<span class=\"x x-first\">, </span><span class=\"pl-smi x\">StandardCharsets</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">UTF_8</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">RsaJsonWebKey</span>) <span class=\"pl-smi\">JsonWebKey</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Factory</span><span class=\"pl-k\">.</span>newJwk(<span class=\"x x-first\">lines</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x x-last\">0</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">BufferedReader</span><span class=\"x x-last\"> reader </span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">newBufferedReader</span>(file<span class=\"pl-k\">.</span>toPath());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">RsaJsonWebKey</span>) <span class=\"pl-smi\">JsonWebKey</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Factory</span><span class=\"pl-k\">.</span>newJwk(<span class=\"x x-first\">reader</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">readLine(</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-22T20:35:29Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/JwtHelper.java", "diffHunk": "@@ -78,13 +77,14 @@ private RsaJsonWebKey generateNewKey() throws JoseException, FileNotFoundExcepti\n \n         String keyJson = newKey.toJson(OutputControlLevel.INCLUDE_PRIVATE);\n \n-        IOUtils.write(keyJson, new FileOutputStream(file));\n+        Files.writeString(file.toPath(), keyJson, StandardCharsets.UTF_8);\n         return newKey;\n     }\n \n     private RsaJsonWebKey loadOrGenerateKey() throws FileNotFoundException, JoseException, IOException {\n         try {\n-            List<String> lines = IOUtils.readLines(new FileInputStream(KEY_FILE_PATH));\n+            File file = new File(KEY_FILE_PATH);\n+            List<String> lines = Files.readAllLines(file.toPath(), StandardCharsets.UTF_8);\n             return (RsaJsonWebKey) JsonWebKey.Factory.newJwk(lines.get(0));", "originalCommit": "bf7ec179d251a0a5fcfc83dc0b51b7f316aa1a6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxMjg5MQ==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r413312891", "body": "```suggestion\r\n        final BufferedReader reader = Files.newBufferedReader(configFile.toPath());\r\n        String exclusivePID = getPIDFromLine(reader.readLine());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> lines = Files.readAllLines(configFile.toPath(), StandardCharsets.UTF_8);\n          \n          \n            \n                    String exclusivePID = lines.size() > 0 ? getPIDFromLine(lines.get(0)) : null;\n          \n          \n            \n                    final BufferedReader reader = Files.newBufferedReader(configFile.toPath());\n          \n          \n            \n                    String exclusivePID = getPIDFromLine(reader.readLine());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"303\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\"><span class=\"x x-first\">List&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> lines </span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">readAllLines</span>(configFile<span class=\"pl-k\">.</span>toPath()<span class=\"x x-first\">, </span><span class=\"pl-smi x\">StandardCharsets</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">UTF_8</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"304\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> exclusivePID <span class=\"pl-k\">=</span> <span class=\"x x-first\">lines</span><span class=\"pl-k x\">.</span><span class=\"x\">size() </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">0</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x x-last\"> </span>getPIDFromLine(<span class=\"x x-first\">lines</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x\">0</span><span class=\"x\">)) </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"303\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">BufferedReader</span><span class=\"x x-last\"> reader </span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">newBufferedReader</span>(configFile<span class=\"pl-k\">.</span>toPath());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"304\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> exclusivePID <span class=\"pl-k\">=</span> getPIDFromLine(<span class=\"x x-first\">reader</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">readLine())</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-22T20:38:57Z", "path": "bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcher.java", "diffHunk": "@@ -300,7 +300,7 @@ private void internalProcessConfigFile(File configFile) throws IOException, File\n         String context = null;\n \n         // configuration file contains a PID Marker\n-        List<String> lines = IOUtils.readLines(new FileInputStream(configFile));\n+        List<String> lines = Files.readAllLines(configFile.toPath(), StandardCharsets.UTF_8);\n         String exclusivePID = lines.size() > 0 ? getPIDFromLine(lines.get(0)) : null;", "originalCommit": "bf7ec179d251a0a5fcfc83dc0b51b7f316aa1a6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExNDQ5OQ==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r419114499", "bodyText": "all lines are required later (line 359)", "author": "Legion2", "createdAt": "2020-05-03T14:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxMjg5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3OTI5Nw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r419379297", "bodyText": "Correct. Thanks for the hint.", "author": "cweitkamp", "createdAt": "2020-05-04T11:49:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxMjg5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxNDcwNw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r413314707", "body": "Could be changed to `Files.lines(file.toPath()).foreach(...)`", "bodyText": "Could be changed to Files.lines(file.toPath()).foreach(...)", "bodyHTML": "<p dir=\"auto\">Could be changed to <code>Files.lines(file.toPath()).foreach(...)</code></p>", "author": "cweitkamp", "createdAt": "2020-04-22T20:41:49Z", "path": "itests/org.openhab.core.config.dispatch.tests/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherOSGiTest.java", "diffHunk": "@@ -1028,22 +1029,22 @@ private void verifyNoPropertiesForConfiguration(String pid) {\n     }\n \n     private void truncateLastLine(File file) throws IOException {\n-        List<String> lines = IOUtils.readLines(new FileInputStream(file));\n-        IOUtils.writeLines(lines.subList(0, lines.size() - 1), \"\\n\", new FileOutputStream(file));\n+        final Path path = file.toPath();\n+        List<String> lines = Files.readAllLines(path, StandardCharsets.UTF_8);\n+        Files.writeString(path, lines.subList(0, lines.size() - 1).stream().collect(Collectors.joining(\"\\n\")),\n+                StandardCharsets.UTF_8);\n     }\n \n     private String getLastModifiedValueForPoperty(String path, String property) {\n-        // This method will return null, if there are no files in the directory.\n-        final String separator = property + \"=\";\n-        String value = null;\n-\n         File file = getLastModifiedFileFromDir(path);\n         if (file == null) {\n             return null;\n         }\n-        try (FileInputStream fileInputStream = new FileInputStream(file)) {\n-            List<String> lines = IOUtils.readLines(fileInputStream);\n-            for (String line : lines) {\n+        // This method will return null, if there are no files in the directory.\n+        final String separator = property + \"=\";\n+        String value = null;\n+        try {\n+            for (String line : Files.readAllLines(file.toPath(), StandardCharsets.UTF_8)) {", "originalCommit": "bf7ec179d251a0a5fcfc83dc0b51b7f316aa1a6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk5Mzg3Mw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r414993873", "body": "```suggestion\r\n            LOGGER.warn(\"Failed writing to file '{}': {}\", file.getAbsolutePath(), ioe.getMessage());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warn(\"Failed writing to file '{}': {}\", content, file.getAbsolutePath(), ioe.getMessage());\n          \n          \n            \n                        LOGGER.warn(\"Failed writing to file '{}': {}\", file.getAbsolutePath(), ioe.getMessage());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed writing to file '{}': {}<span class=\"pl-pds\">\"</span></span>, <span class=\"x x-first x-last\">content, </span>file<span class=\"pl-k\">.</span>getAbsolutePath(), ioe<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed writing to file '{}': {}<span class=\"pl-pds\">\"</span></span>, file<span class=\"pl-k\">.</span>getAbsolutePath(), ioe<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-25T06:21:42Z", "path": "bundles/org.openhab.core.id/src/main/java/org/openhab/core/id/InstanceUUID.java", "diffHunk": "@@ -75,19 +73,21 @@ public static synchronized String get() {\n     private static void writeFile(File file, String content) throws IOException {\n         // create intermediary directories\n         file.getParentFile().mkdirs();\n-        try (OutputStream outputStream = new FileOutputStream(file)) {\n-            IOUtils.write(content, outputStream);\n+        try {\n+            Files.writeString(file.toPath(), content, StandardCharsets.UTF_8);\n+        } catch (IOException ioe) {\n+            LOGGER.warn(\"Failed writing to file '{}': {}\", content, file.getAbsolutePath(), ioe.getMessage());", "originalCommit": "c98381499addd951126d8ec9cebf35e75b1d1372", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0MjY0NA==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421142644", "body": "Converting urls to files can cause a lot of problems if the urls don't have the right schema so create the path from a URI instead.\r\n```suggestion\r\n                    for (final String line : Files.readAllLines(Paths.get(URI.create(url)))) {\r\n```", "bodyText": "Converting urls to files can cause a lot of problems if the urls don't have the right schema so create the path from a URI instead.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                for (final String line : Files.readAllLines(new File(url).toPath())) {\n          \n          \n            \n                                for (final String line : Files.readAllLines(Paths.get(URI.create(url)))) {", "bodyHTML": "<p dir=\"auto\">Converting urls to files can cause a lot of problems if the urls don't have the right schema so create the path from a URI instead.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> line <span class=\"pl-k\">:</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span>readAllLines(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">File</span><span class=\"x\">(url)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toPath(</span>))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> line <span class=\"pl-k\">:</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span>readAllLines(<span class=\"pl-smi x x-first\">Paths</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x\">URI</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">create(url)</span>))) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-06T23:05:37Z", "path": "bundles/org.openhab.core.audio/src/main/java/org/openhab/core/audio/URLAudioStream.java", "diffHunk": "@@ -65,24 +66,20 @@ private InputStream createInputStream() throws AudioException {\n         try {\n             switch (extension) {\n                 case M3U_EXTENSION:\n-                    try (final InputStream isM3U = new URL(url).openStream()) {\n-                        for (final String line : IOUtils.readLines(isM3U)) {\n-                            if (!line.isEmpty() && !line.startsWith(\"#\")) {\n-                                url = line;\n-                                break;\n-                            }\n+                    for (final String line : Files.readAllLines(new File(url).toPath())) {", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0Mjg4Mg==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421142882", "body": "```suggestion\r\n                    for (final String line : Files.readAllLines(Paths.get(URI.create(url)))) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                for (final String line : Files.readAllLines(new File(url).toPath())) {\n          \n          \n            \n                                for (final String line : Files.readAllLines(Paths.get(URI.create(url)))) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> line <span class=\"pl-k\">:</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span>readAllLines(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">File</span><span class=\"x\">(url)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toPath(</span>))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> line <span class=\"pl-k\">:</span> <span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span>readAllLines(<span class=\"pl-smi x x-first\">Paths</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x\">URI</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">create(url)</span>))) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-06T23:06:17Z", "path": "bundles/org.openhab.core.audio/src/main/java/org/openhab/core/audio/URLAudioStream.java", "diffHunk": "@@ -65,24 +66,20 @@ private InputStream createInputStream() throws AudioException {\n         try {\n             switch (extension) {\n                 case M3U_EXTENSION:\n-                    try (final InputStream isM3U = new URL(url).openStream()) {\n-                        for (final String line : IOUtils.readLines(isM3U)) {\n-                            if (!line.isEmpty() && !line.startsWith(\"#\")) {\n-                                url = line;\n-                                break;\n-                            }\n+                    for (final String line : Files.readAllLines(new File(url).toPath())) {\n+                        if (!line.isEmpty() && !line.startsWith(\"#\")) {\n+                            url = line;\n+                            break;\n                         }\n                     }\n                     break;\n                 case PLS_EXTENSION:\n-                    try (final InputStream isPLS = new URL(url).openStream()) {\n-                        for (final String line : IOUtils.readLines(isPLS)) {\n-                            if (!line.isEmpty() && line.startsWith(\"File\")) {\n-                                final Matcher matcher = PLS_STREAM_PATTERN.matcher(line);\n-                                if (matcher.find()) {\n-                                    url = matcher.group(1);\n-                                    break;\n-                                }\n+                    for (final String line : Files.readAllLines(new File(url).toPath())) {", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0ODUyNw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421148527", "body": "Does`originalInputStream.readAllBytes()` not work?", "bodyText": "DoesoriginalInputStream.readAllBytes() not work?", "bodyHTML": "<p dir=\"auto\">Does<code>originalInputStream.readAllBytes()</code> not work?</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:22:58Z", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,7 +98,9 @@ public boolean addOrRefreshModel(String name, final InputStream originalInputStr\n         try {\n             InputStream inputStream = null;\n             if (originalInputStream != null) {\n-                byte[] bytes = IOUtils.toByteArray(originalInputStream);\n+                final ByteArrayOutputStream output = new ByteArrayOutputStream();\n+                originalInputStream.transferTo(output);\n+                byte[] bytes = output.toByteArray();", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0OTI1OQ==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421149259", "body": "Charset should be specified", "bodyText": "Charset should be specified", "bodyHTML": "<p dir=\"auto\">Charset should be specified</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:25:13Z", "path": "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/HTTP.java", "diffHunk": "@@ -147,16 +148,19 @@ static public String sendHttpPutRequest(String url, String contentType, String c\n      *\r\n      * @param url the URL to be used for the PUT request.\r\n      * @param contentType the content type of the given <code>content</code>\r\n-     * @param content the content to be send to the given <code>url</code> or <code>null</code> if no content should be sent.\r\n+     * @param content the content to be send to the given <code>url</code> or <code>null</code> if no content should be\r\n+     *            sent.\r\n      * @param headers the HTTP headers to be sent in the request.\r\n      * @param timeout timeout in ms\r\n      * @return the response body or <code>NULL</code> when the request went wrong\r\n      */\r\n-    static public String sendHttpPutRequest(String url, String contentType, String content, Map<String, String> headers, int timeout) {\r\n+    static public String sendHttpPutRequest(String url, String contentType, String content, Map<String, String> headers,\r\n+            int timeout) {\r\n         try {\r\n             Properties headerProperties = new Properties();\r\n             headerProperties.putAll(headers);\r\n-            return HttpUtil.executeUrl(HttpMethod.PUT.name(), url, headerProperties, IOUtils.toInputStream(content), contentType, timeout);\r\n+            return HttpUtil.executeUrl(HttpMethod.PUT.name(), url, headerProperties,\r\n+                    new ByteArrayInputStream(content.getBytes()), contentType, timeout);\r", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0OTMzMw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421149333", "body": "Charset should be specified", "bodyText": "Charset should be specified", "bodyHTML": "<p dir=\"auto\">Charset should be specified</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:25:26Z", "path": "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/HTTP.java", "diffHunk": "@@ -216,7 +220,8 @@ static public String sendHttpPostRequest(String url, String contentType, String\n     static public String sendHttpPostRequest(String url, String contentType, String content, int timeout) {\r\n         String response = null;\r\n         try {\r\n-            response = HttpUtil.executeUrl(HttpMethod.POST.name(), url, IOUtils.toInputStream(content), contentType, timeout);\r\n+            response = HttpUtil.executeUrl(HttpMethod.POST.name(), url, new ByteArrayInputStream(content.getBytes()),\r", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0OTM5OA==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421149398", "body": "see above", "bodyText": "see above", "bodyHTML": "<p dir=\"auto\">see above</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:25:37Z", "path": "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/HTTP.java", "diffHunk": "@@ -225,19 +230,22 @@ static public String sendHttpPostRequest(String url, String contentType, String\n \r\n     /**\r\n      * Send out a POST-HTTP request. Errors will be logged, returned values just ignored.\r\n-     * \r\n+     *\r\n      * @param url the URL to be used for the GET request.\r\n      * @param contentType the content type of the given <code>content</code>\r\n-     * @param content the content to be send to the given <code>url</code> or <code>null</code> if no content should be sent.\r\n+     * @param content the content to be send to the given <code>url</code> or <code>null</code> if no content should be\r\n+     *            sent.\r\n      * @param headers the HTTP headers to be sent in the request.\r\n      * @param timeout timeout in ms\r\n      * @return the response body or <code>NULL</code> when the request went wrong\r\n      */\r\n-    public static String sendHttpPostRequest(String url, String contentType, String content, Map<String, String> headers, int timeout) {\r\n+    public static String sendHttpPostRequest(String url, String contentType, String content,\r\n+            Map<String, String> headers, int timeout) {\r\n         try {\r\n             Properties headerProperties = new Properties();\r\n             headerProperties.putAll(headers);\r\n-            return HttpUtil.executeUrl(HttpMethod.POST.name(), url, headerProperties, IOUtils.toInputStream(content), contentType, timeout);\r\n+            return HttpUtil.executeUrl(HttpMethod.POST.name(), url, headerProperties,\r\n+                    new ByteArrayInputStream(content.getBytes()), contentType, timeout);\r", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE0OTY0Mw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421149643", "body": "Same question as earlier", "bodyText": "Same question as earlier", "bodyHTML": "<p dir=\"auto\">Same question as earlier</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:26:25Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareImpl.java", "diffHunk": "@@ -176,7 +176,9 @@ public FirmwareRestriction getFirmwareRestriction() {\n                 MessageDigest md = MessageDigest.getInstance(\"MD5\");\n \n                 try (DigestInputStream dis = new DigestInputStream(inputStream, md)) {\n-                    bytes = IOUtils.toByteArray(dis);\n+                    final ByteArrayOutputStream output = new ByteArrayOutputStream();\n+                    dis.transferTo(output);\n+                    bytes = output.toByteArray();", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE1MjUzOA==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r421152538", "body": "Charset should be specified", "bodyText": "Charset should be specified", "bodyHTML": "<p dir=\"auto\">Charset should be specified</p>", "author": "cpmeister", "createdAt": "2020-05-06T23:35:38Z", "path": "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/HTTP.java", "diffHunk": "@@ -135,7 +135,8 @@ static public String sendHttpPutRequest(String url, String contentType, String c\n     static public String sendHttpPutRequest(String url, String contentType, String content, int timeout) {\r\n         String response = null;\r\n         try {\r\n-            response = HttpUtil.executeUrl(HttpMethod.PUT.name(), url, IOUtils.toInputStream(content), contentType, timeout);\r\n+            response = HttpUtil.executeUrl(HttpMethod.PUT.name(), url, new ByteArrayInputStream(content.getBytes()),\r", "originalCommit": "dea4b40aeba4388eed73b620afc2ae6d46653832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d0db3722cf20268adbc6d7e58588e00c8a0c647e", "url": "https://github.com/openhab/openhab-core/commit/d0db3722cf20268adbc6d7e58588e00c8a0c647e", "message": "incorporated feedback from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-05-08T18:27:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3Nzk4Mw==", "url": "https://github.com/openhab/openhab-core/pull/1441#discussion_r422377983", "body": "You should also close this reader after you are done with it", "bodyText": "You should also close this reader after you are done with it", "bodyHTML": "<p dir=\"auto\">You should also close this reader after you are done with it</p>", "author": "cpmeister", "createdAt": "2020-05-08T21:13:27Z", "path": "bundles/org.openhab.core.io.rest.auth/src/main/java/org/openhab/core/io/rest/auth/internal/JwtHelper.java", "diffHunk": "@@ -78,14 +79,14 @@ private RsaJsonWebKey generateNewKey() throws JoseException, FileNotFoundExcepti\n \n         String keyJson = newKey.toJson(OutputControlLevel.INCLUDE_PRIVATE);\n \n-        IOUtils.write(keyJson, new FileOutputStream(file));\n+        Files.writeString(file.toPath(), keyJson, StandardCharsets.UTF_8);\n         return newKey;\n     }\n \n     private RsaJsonWebKey loadOrGenerateKey() throws FileNotFoundException, JoseException, IOException {\n         try {\n-            List<String> lines = IOUtils.readLines(new FileInputStream(KEY_FILE_PATH));\n-            return (RsaJsonWebKey) JsonWebKey.Factory.newJwk(lines.get(0));\n+            final BufferedReader reader = Files.newBufferedReader(Paths.get(KEY_FILE_PATH));", "originalCommit": "d0db3722cf20268adbc6d7e58588e00c8a0c647e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d4109ee94597786ac6ae348be6cd8989e95f95d8", "url": "https://github.com/openhab/openhab-core/commit/d4109ee94597786ac6ae348be6cd8989e95f95d8", "message": "Removed dependency on 'org.apache.commons.io'\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-05-21T09:30:27Z", "type": "commit"}, {"oid": "d4109ee94597786ac6ae348be6cd8989e95f95d8", "url": "https://github.com/openhab/openhab-core/commit/d4109ee94597786ac6ae348be6cd8989e95f95d8", "message": "Removed dependency on 'org.apache.commons.io'\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-05-21T09:30:27Z", "type": "forcePushed"}]}