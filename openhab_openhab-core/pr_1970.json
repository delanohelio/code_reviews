{"pr_number": 1970, "pr_title": "[automation] Added ItemStateUpdate action", "pr_author": "cweitkamp", "pr_createdAt": "2020-12-20T11:01:09Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1970", "timeline": [{"oid": "9263a9c205411afdeb2f5b66b175a966441ccef4", "url": "https://github.com/openhab/openhab-core/commit/9263a9c205411afdeb2f5b66b175a966441ccef4", "message": "Added ItemUpdate action\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-12-20T10:59:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2MDkzMQ==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546360931", "body": "```suggestion\r\n * This is an implementation of an ActionHandler. It sends state updates for items.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This is an implementation of an ActionHandler. It send state updates for items.\n          \n          \n            \n             * This is an implementation of an ActionHandler. It sends state updates for items.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">This</span> is an implementation of an <span class=\"pl-smi\">ActionHandler</span>. <span class=\"pl-smi\">It</span> <span class=\"x x-first x-last\">send</span> state updates <span class=\"pl-k\">for</span> items.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">This</span> is an implementation of an <span class=\"pl-smi\">ActionHandler</span>. <span class=\"pl-smi\">It</span> <span class=\"x x-first x-last\">sends</span> state updates <span class=\"pl-k\">for</span> items.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kaikreuzer", "createdAt": "2020-12-20T11:06:26Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemUpdateActionHandler.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.Action;\n+import org.openhab.core.automation.handler.BaseActionModuleHandler;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.TypeParser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an implementation of an ActionHandler. It send state updates for items.", "originalCommit": "9263a9c205411afdeb2f5b66b175a966441ccef4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2MTM2MQ==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546361361", "body": "We have ItemStateEvents for this and we generally refer to ItemStateUpdates in order to distinguish them from ItemUpdates (i.e. changes to the item itself). I'd hence prefer to also keep it here this way and name this `core.ItemStateUpdateAction`.", "bodyText": "We have ItemStateEvents for this and we generally refer to ItemStateUpdates in order to distinguish them from ItemUpdates (i.e. changes to the item itself). I'd hence prefer to also keep it here this way and name this core.ItemStateUpdateAction.", "bodyHTML": "<p dir=\"auto\">We have ItemStateEvents for this and we generally refer to ItemStateUpdates in order to distinguish them from ItemUpdates (i.e. changes to the item itself). I'd hence prefer to also keep it here this way and name this <code>core.ItemStateUpdateAction</code>.</p>", "author": "kaikreuzer", "createdAt": "2020-12-20T11:10:03Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemUpdateActionHandler.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.Action;\n+import org.openhab.core.automation.handler.BaseActionModuleHandler;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.TypeParser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an implementation of an ActionHandler. It send state updates for items.\n+ *\n+ * @author Christoph Weitkamp - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ItemUpdateActionHandler extends BaseActionModuleHandler {\n+\n+    public static final String ITEM_UPDATE_ACTION = \"core.ItemUpdateAction\";", "originalCommit": "9263a9c205411afdeb2f5b66b175a966441ccef4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2MTY0OA==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546361648", "body": "The `ItemCommandActionHandler` does this check only within `execute`, but not within the constructor. I think that's the much better approach, because the item might not be defined at rule definition time, while this should not cause the rule to not initialize.", "bodyText": "The ItemCommandActionHandler does this check only within execute, but not within the constructor. I think that's the much better approach, because the item might not be defined at rule definition time, while this should not cause the rule to not initialize.", "bodyHTML": "<p dir=\"auto\">The <code>ItemCommandActionHandler</code> does this check only within <code>execute</code>, but not within the constructor. I think that's the much better approach, because the item might not be defined at rule definition time, while this should not cause the rule to not initialize.</p>", "author": "kaikreuzer", "createdAt": "2020-12-20T11:12:46Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemUpdateActionHandler.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.Action;\n+import org.openhab.core.automation.handler.BaseActionModuleHandler;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.TypeParser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an implementation of an ActionHandler. It send state updates for items.\n+ *\n+ * @author Christoph Weitkamp - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ItemUpdateActionHandler extends BaseActionModuleHandler {\n+\n+    public static final String ITEM_UPDATE_ACTION = \"core.ItemUpdateAction\";\n+    public static final String ITEM_NAME = \"itemName\";\n+    public static final String STATE = \"state\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(ItemUpdateActionHandler.class);\n+\n+    private final EventPublisher eventPublisher;\n+\n+    private final Item item;\n+    private final @Nullable State state;\n+\n+    /**\n+     * constructs a new ItemCommandActionHandler\n+     *\n+     * @param module\n+     * @param moduleTypes\n+     */\n+    public ItemUpdateActionHandler(Action module, EventPublisher eventPublisher, ItemRegistry itemRegistry) {\n+        super(module);\n+\n+        this.eventPublisher = eventPublisher;\n+\n+        final Configuration config = module.getConfiguration();\n+\n+        final String itemName = (String) config.get(ITEM_NAME);\n+        try {\n+            this.item = itemRegistry.getItem(itemName);\n+        } catch (ItemNotFoundException e) {", "originalCommit": "9263a9c205411afdeb2f5b66b175a966441ccef4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2MTkwMg==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546361902", "body": "The item should not be cached here as it can potentially change over time. Get the latest item in `execute` instead.", "bodyText": "The item should not be cached here as it can potentially change over time. Get the latest item in execute instead.", "bodyHTML": "<p dir=\"auto\">The item should not be cached here as it can potentially change over time. Get the latest item in <code>execute</code> instead.</p>", "author": "kaikreuzer", "createdAt": "2020-12-20T11:15:00Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemUpdateActionHandler.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.Action;\n+import org.openhab.core.automation.handler.BaseActionModuleHandler;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.TypeParser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an implementation of an ActionHandler. It send state updates for items.\n+ *\n+ * @author Christoph Weitkamp - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ItemUpdateActionHandler extends BaseActionModuleHandler {\n+\n+    public static final String ITEM_UPDATE_ACTION = \"core.ItemUpdateAction\";\n+    public static final String ITEM_NAME = \"itemName\";\n+    public static final String STATE = \"state\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(ItemUpdateActionHandler.class);\n+\n+    private final EventPublisher eventPublisher;\n+\n+    private final Item item;", "originalCommit": "9263a9c205411afdeb2f5b66b175a966441ccef4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13d7f31cc5089ce1d6d2b84ebccba4281b222771", "url": "https://github.com/openhab/openhab-core/commit/13d7f31cc5089ce1d6d2b84ebccba4281b222771", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-12-20T11:33:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2NTI1Mw==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546365253", "body": "Looking closer into the code, I am not 100% certain that the module configuration cannot be changed during the lifetime of the handler. I at least found `ConfigurationNormalizer.normalizeConfiguration`, which reads the configuration object and modifies it. I'd hence feel safer if this would be re-read in `execute`, just as it is done for the `ItemCommandActionHandler`.", "bodyText": "Looking closer into the code, I am not 100% certain that the module configuration cannot be changed during the lifetime of the handler. I at least found ConfigurationNormalizer.normalizeConfiguration, which reads the configuration object and modifies it. I'd hence feel safer if this would be re-read in execute, just as it is done for the ItemCommandActionHandler.", "bodyHTML": "<p dir=\"auto\">Looking closer into the code, I am not 100% certain that the module configuration cannot be changed during the lifetime of the handler. I at least found <code>ConfigurationNormalizer.normalizeConfiguration</code>, which reads the configuration object and modifies it. I'd hence feel safer if this would be re-read in <code>execute</code>, just as it is done for the <code>ItemCommandActionHandler</code>.</p>", "author": "kaikreuzer", "createdAt": "2020-12-20T11:44:50Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateUpdateActionHandler.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.Action;\n+import org.openhab.core.automation.handler.BaseActionModuleHandler;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.TypeParser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an implementation of an ActionHandler. It sends state updates for items.\n+ *\n+ * @author Christoph Weitkamp - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ItemStateUpdateActionHandler extends BaseActionModuleHandler {\n+\n+    public static final String ITEM_STATE_UPDATE_ACTION = \"core.ItemStateUpdateAction\";\n+    public static final String ITEM_NAME = \"itemName\";\n+    public static final String STATE = \"state\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(ItemStateUpdateActionHandler.class);\n+\n+    private final EventPublisher eventPublisher;\n+    private final ItemRegistry itemRegistry;\n+\n+    private final String itemName;\n+    private final String state;\n+\n+    public ItemStateUpdateActionHandler(Action module, EventPublisher eventPublisher, ItemRegistry itemRegistry) {\n+        super(module);\n+\n+        this.eventPublisher = eventPublisher;\n+        this.itemRegistry = itemRegistry;\n+\n+        final Configuration config = module.getConfiguration();", "originalCommit": "13d7f31cc5089ce1d6d2b84ebccba4281b222771", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM3MzAwNA==", "url": "https://github.com/openhab/openhab-core/pull/1970#discussion_r546373004", "bodyText": "I applied these suggestions. But I have to investigate later on that because IIRC I contributed other automation modules doing it in the same way.", "author": "cweitkamp", "createdAt": "2020-12-20T12:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2NTI1Mw=="}], "type": "inlineReview"}, {"oid": "f0e67e542d84a948001ad445e88a2aee35af6f38", "url": "https://github.com/openhab/openhab-core/commit/f0e67e542d84a948001ad445e88a2aee35af6f38", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-12-20T12:49:14Z", "type": "commit"}]}