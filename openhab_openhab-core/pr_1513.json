{"pr_number": 1513, "pr_title": "[automation] Moved constants to top and made them public for reference", "pr_author": "kaikreuzer", "pr_createdAt": "2020-06-07T15:39:42Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1513", "timeline": [{"oid": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "url": "https://github.com/openhab/openhab-core/commit/031a0f527eed6f1f94c98720eccd041b4a9ad179", "message": "moved constants to top and made them public for reference\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-07T15:37:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386471", "body": "I think you can simplify this to:\r\n\r\n```suggestion\r\n            if (RuleStatus.IDLE.equals(ruleStatus)) {\r\n```", "bodyText": "I think you can simplify this to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {\n          \n          \n            \n                        if (RuleStatus.IDLE.equals(ruleStatus)) {", "bodyHTML": "<p dir=\"auto\">I think you can simplify this to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"975\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"x x-first\">ruleStatus </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> ruleStatus </span><span class=\"pl-k x\">!=</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">RuleStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>IDLE</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"975\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">RuleStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>IDLE</span><span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">equals(ruleStatus)</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-06-07T17:51:19Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -974,7 +972,7 @@ protected void runRule(String ruleUID, TriggerHandlerCallbackImpl.TriggerData td\n         }\n         synchronized (this) {\n             final RuleStatus ruleStatus = getRuleStatus(ruleUID);\n-            if (ruleStatus != RuleStatus.IDLE) {\n+            if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4OTUyMA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436389520", "bodyText": "No, the check is whether it is NOT IDLE (and also must not be null)", "author": "kaikreuzer", "createdAt": "2020-06-07T18:29:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5NTMyNw==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436395327", "bodyText": "Ah, I see. I read it too quickly.", "author": "cweitkamp", "createdAt": "2020-06-07T19:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjQ5OA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386498", "body": "See above.", "bodyText": "See above.", "bodyHTML": "<p dir=\"auto\">See above.</p>", "author": "cweitkamp", "createdAt": "2020-06-07T17:51:30Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -1016,7 +1014,7 @@ public void runNow(String ruleUID, boolean considerConditions, @Nullable Map<Str\n         }\n         synchronized (this) {\n             final RuleStatus ruleStatus = getRuleStatus(ruleUID);\n-            if (ruleStatus != RuleStatus.IDLE) {\n+            if (ruleStatus != null && ruleStatus != RuleStatus.IDLE) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjU5MA==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386590", "body": "One more minor improvement: Omit the `@SuppressWarnings`.", "bodyText": "One more minor improvement: Omit the @SuppressWarnings.", "bodyHTML": "<p dir=\"auto\">One more minor improvement: Omit the <code>@SuppressWarnings</code>.</p>", "author": "cweitkamp", "createdAt": "2020-06-07T17:52:34Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java", "diffHunk": "@@ -46,19 +46,19 @@\n  */\n public class GenericEventTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n \n+    public static final String MODULE_TYPE_ID = \"core.GenericEventTrigger\";\n+\n+    private static final String CFG_EVENT_TOPIC = \"eventTopic\";\n+    private static final String CFG_EVENT_SOURCE = \"eventSource\";\n+    private static final String CFG_EVENT_TYPES = \"eventTypes\";\n+\n     private final Logger logger = LoggerFactory.getLogger(GenericEventTriggerHandler.class);\n \n     private final String source;\n     private String topic;\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String MODULE_TYPE_ID = \"core.GenericEventTrigger\";\n-\n-    private static final String CFG_EVENT_TOPIC = \"eventTopic\";\n-    private static final String CFG_EVENT_SOURCE = \"eventSource\";\n-    private static final String CFG_EVENT_TYPES = \"eventTypes\";\n-\n     @SuppressWarnings(\"rawtypes\")\n     private ServiceRegistration eventSubscriberRegistration;", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjYxOQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386619", "body": "Omit.", "bodyText": "Omit.", "bodyHTML": "<p dir=\"auto\">Omit.</p>", "author": "cweitkamp", "createdAt": "2020-06-07T17:52:52Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java", "diffHunk": "@@ -50,11 +55,6 @@\n     private final Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String MODULE_TYPE_ID = \"core.ItemCommandTrigger\";\n-\n-    private static final String CFG_ITEMNAME = \"itemName\";\n-    private static final String CFG_COMMAND = \"command\";\n-\n     @SuppressWarnings(\"rawtypes\")", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NjY0Ng==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386646", "body": "Omit.", "bodyText": "Omit.", "bodyHTML": "<p dir=\"auto\">Omit.</p>", "author": "cweitkamp", "createdAt": "2020-06-07T17:53:13Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java", "diffHunk": "@@ -52,13 +60,6 @@\n     private Set<String> types;\n     private final BundleContext bundleContext;\n \n-    public static final String UPDATE_MODULE_TYPE_ID = \"core.ItemStateUpdateTrigger\";\n-    public static final String CHANGE_MODULE_TYPE_ID = \"core.ItemStateChangeTrigger\";\n-\n-    private static final String CFG_ITEMNAME = \"itemName\";\n-    private static final String CFG_STATE = \"state\";\n-    private static final String CFG_PREVIOUS_STATE = \"previousState\";\n-\n     @SuppressWarnings(\"rawtypes\")", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4Njk4OQ==", "url": "https://github.com/openhab/openhab-core/pull/1513#discussion_r436386989", "body": "Why is this necessary? Because the method returns a `Boolean`? If so should we change it to\r\n\r\n```suggestion\r\n        if (isEnabled(rUID) == Boolean.TRUE) {\r\n```", "bodyText": "Why is this necessary? Because the method returns a Boolean? If so should we change it to\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (isEnabled(rUID) == true) {\n          \n          \n            \n                    if (isEnabled(rUID) == Boolean.TRUE) {", "bodyHTML": "<p dir=\"auto\">Why is this necessary? Because the method returns a <code>Boolean</code>? If so should we change it to</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (isEnabled(rUID) <span class=\"pl-k\">==</span> <span class=\"pl-c1 x x-first x-last\">true</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (isEnabled(rUID) <span class=\"pl-k\">==</span> <span class=\"pl-smi x x-first\">Boolean</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">TRUE</span></span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-06-07T17:57:13Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -459,7 +460,7 @@ protected void addRule(Rule newRule) {\n             unregister(oldRule);\n         }\n \n-        if (isEnabled(rUID)) {\n+        if (isEnabled(rUID) == true) {", "originalCommit": "031a0f527eed6f1f94c98720eccd041b4a9ad179", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "94c0069b9dfe866dfd36cbfcd31486e8886e412f", "url": "https://github.com/openhab/openhab-core/commit/94c0069b9dfe866dfd36cbfcd31486e8886e412f", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-06-07T18:32:58Z", "type": "commit"}]}