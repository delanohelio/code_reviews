{"pr_number": 1750, "pr_title": "[automation] Allow dashes in rule file names", "pr_author": "kaikreuzer", "pr_createdAt": "2020-10-24T21:31:47Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1750", "timeline": [{"oid": "1f49d1f6e127d6fcf3bd7ef244ff1a5ccbb05ee9", "url": "https://github.com/openhab/openhab-core/commit/1f49d1f6e127d6fcf3bd7ef244ff1a5ccbb05ee9", "message": "Allow dashes in rule file names\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-10-24T21:30:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MTkxNw==", "url": "https://github.com/openhab/openhab-core/pull/1750#discussion_r511571917", "body": "We can store `contextString.lastIndexOf('-')` in a local variable and reuse it:\r\n\r\n```suggestion\r\n                int index = contextString.lastIndexOf('-');\r\n                if (index != -1) {\r\n                    modelName = contextString.substring(0, index);\r\n                    String ruleIndex = contextString.substring(index + 1);\r\n```", "bodyText": "We can store contextString.lastIndexOf('-') in a local variable and reuse it:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (contextString.contains(\"-\")) {\n          \n          \n            \n                                modelName = contextString.substring(0, contextString.lastIndexOf('-'));\n          \n          \n            \n                                String ruleIndex = contextString.substring(contextString.lastIndexOf('-') + 1);\n          \n          \n            \n                            int index = contextString.lastIndexOf('-');\n          \n          \n            \n                            if (index != -1) {\n          \n          \n            \n                                modelName = contextString.substring(0, index);\n          \n          \n            \n                                String ruleIndex = contextString.substring(index + 1);", "bodyHTML": "<p dir=\"auto\">We can store <code>contextString.lastIndexOf('-')</code> in a local variable and reuse it:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (contextString<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    modelName <span class=\"pl-k\">=</span> contextString<span class=\"pl-k\">.</span>substring(<span class=\"pl-c1\">0</span>, contextString<span class=\"pl-k\">.</span>lastIndexOf(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-<span class=\"pl-pds\">'</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">String</span> ruleIndex <span class=\"pl-k\">=</span> contextString<span class=\"pl-k\">.</span>substring(contextString<span class=\"pl-k\">.</span>lastIndexOf(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">int</span> index <span class=\"pl-k\">=</span> contextString<span class=\"pl-k\">.</span>lastIndexOf(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-<span class=\"pl-pds\">'</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (index <span class=\"pl-k\">!=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    modelName <span class=\"pl-k\">=</span> contextString<span class=\"pl-k\">.</span>substring(<span class=\"pl-c1\">0</span>, index);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">String</span> ruleIndex <span class=\"pl-k\">=</span> contextString<span class=\"pl-k\">.</span>substring(index <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-10-25T09:36:31Z", "path": "bundles/org.openhab.core.model.script.runtime/src/org/openhab/core/model/script/runtime/internal/engine/DSLScriptEngine.java", "diffHunk": "@@ -87,10 +87,9 @@ public Object eval(String script) throws ScriptException {\n             if (script.stripLeading().startsWith(DSLScriptContextProvider.CONTEXT_IDENTIFIER)) {\n                 String contextString = script.stripLeading().substring(\n                         DSLScriptContextProvider.CONTEXT_IDENTIFIER.length(), script.stripLeading().indexOf('\\n'));\n-                String[] segments = contextString.split(\"-\");\n-                if (segments.length == 2) {\n-                    modelName = segments[0];\n-                    String ruleIndex = segments[1];\n+                if (contextString.contains(\"-\")) {\n+                    modelName = contextString.substring(0, contextString.lastIndexOf('-'));\n+                    String ruleIndex = contextString.substring(contextString.lastIndexOf('-') + 1);", "originalCommit": "1f49d1f6e127d6fcf3bd7ef244ff1a5ccbb05ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU5NjIyMA==", "url": "https://github.com/openhab/openhab-core/pull/1750#discussion_r511596220", "bodyText": "addressed", "author": "kaikreuzer", "createdAt": "2020-10-25T13:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MTkxNw=="}], "type": "inlineReview"}, {"oid": "dec28445444f0a314ee7105d780543d26e269f41", "url": "https://github.com/openhab/openhab-core/commit/dec28445444f0a314ee7105d780543d26e269f41", "message": "addressed review comment\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>", "committedDate": "2020-10-25T13:17:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzMjU2NA==", "url": "https://github.com/openhab/openhab-core/pull/1750#discussion_r511632564", "body": "Thanks. But I could be improved a little bit more. It is possible to skip the `contains(\"-\")` check when calculation the `indexLastDash = lastIndexOf(\"-\")` first and check for `-1` on it.", "bodyText": "Thanks. But I could be improved a little bit more. It is possible to skip the contains(\"-\") check when calculation the indexLastDash = lastIndexOf(\"-\") first and check for -1 on it.", "bodyHTML": "<p dir=\"auto\">Thanks. But I could be improved a little bit more. It is possible to skip the <code>contains(\"-\")</code> check when calculation the <code>indexLastDash = lastIndexOf(\"-\")</code> first and check for <code>-1</code> on it.</p>", "author": "cweitkamp", "createdAt": "2020-10-25T18:35:32Z", "path": "bundles/org.openhab.core.model.script.runtime/src/org/openhab/core/model/script/runtime/internal/engine/DSLScriptEngine.java", "diffHunk": "@@ -87,10 +87,10 @@ public Object eval(String script) throws ScriptException {\n             if (script.stripLeading().startsWith(DSLScriptContextProvider.CONTEXT_IDENTIFIER)) {\n                 String contextString = script.stripLeading().substring(\n                         DSLScriptContextProvider.CONTEXT_IDENTIFIER.length(), script.stripLeading().indexOf('\\n'));\n-                String[] segments = contextString.split(\"-\");\n-                if (segments.length == 2) {\n-                    modelName = segments[0];\n-                    String ruleIndex = segments[1];\n+                if (contextString.contains(\"-\")) {\n+                    int indexLastDash = contextString.lastIndexOf('-');", "originalCommit": "dec28445444f0a314ee7105d780543d26e269f41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzMjc1OQ==", "url": "https://github.com/openhab/openhab-core/pull/1750#discussion_r511632759", "bodyText": "I preferred it this way as it is imho better readable and the few cpu cycles should not really matter :-)", "author": "kaikreuzer", "createdAt": "2020-10-25T18:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzMjU2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDgxNQ==", "url": "https://github.com/openhab/openhab-core/pull/1750#discussion_r511634815", "bodyText": "Okay. Then I will agree on it too.", "author": "cweitkamp", "createdAt": "2020-10-25T18:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzMjU2NA=="}], "type": "inlineReview"}]}