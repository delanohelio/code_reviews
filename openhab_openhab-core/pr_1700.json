{"pr_number": 1700, "pr_title": "Make ExecUtil more robust", "pr_author": "cpmeister", "pr_createdAt": "2020-10-07T06:31:02Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1700", "timeline": [{"oid": "cd2ce3ca0fa5b03db1c9fef6abb6d27df727c070", "url": "https://github.com/openhab/openhab-core/commit/cd2ce3ca0fa5b03db1c9fef6abb6d27df727c070", "message": "Make ExecUtil more robust\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-07T06:21:29Z", "type": "commit"}, {"oid": "a5739fa22a62cffce52507b86485462b4fa6c76c", "url": "https://github.com/openhab/openhab-core/commit/a5739fa22a62cffce52507b86485462b4fa6c76c", "message": "Adjusted according to code review\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-07T16:53:59Z", "type": "commit"}, {"oid": "f467089103cd0450cc24becf177fd8b91154ac1d", "url": "https://github.com/openhab/openhab-core/commit/f467089103cd0450cc24becf177fd8b91154ac1d", "message": "Fix script Exec class.\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-07T17:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MjM0MA==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501272340", "body": "This JavaDoc still needs to be updated for the latest changes.", "bodyText": "This JavaDoc still needs to be updated for the latest changes.", "bodyHTML": "<p dir=\"auto\">This JavaDoc still needs to be updated for the latest changes.</p>", "author": "wborn", "createdAt": "2020-10-07T19:55:48Z", "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -28,87 +35,101 @@\n  *\n  * @author Pauli Anttila - Initial contribution\n  * @author Kai Kreuzer - added exception logging\n+ * @author Connor Petty - rewrote\n  */\n+@NonNullByDefault\n public class ExecUtil {\n \n     private static Logger logger = LoggerFactory.getLogger(ExecUtil.class);\n \n-    /**\n-     * Use this to separate between command and parameter, and also between parameters.\n-     */\n-    public static final String CMD_LINE_DELIMITER = \"@@\";\n+    private static ExecutorService executor = ThreadPoolManager.getPool(\"ExecUtil\");\n \n     /**\n      * <p>\n-     * Executes <code>commandLine</code>. Sometimes (especially observed on MacOS) the commandLine isn't executed\n-     * properly. In that cases another exec-method is to be used. To accomplish this please use the special delimiter\n-     * '<code>@@</code>'. If <code>commandLine</code> contains this delimiter it is split into a String list and the\n-     * special exec-method is used.\n+     * Executes <code>commandLine</code>.\n      *\n      * <p>\n      * A possible {@link IOException} gets logged but no further processing is done.\n      *\n      * @param commandLine the command line to execute\n      */\n-    public static void executeCommandLine(String commandLine) {\n-        internalExecute(commandLine);\n+    public static void executeCommandLine(String... commandLine) {\n+        try {\n+            new ProcessBuilder(commandLine).redirectError(Redirect.DISCARD).redirectOutput(Redirect.DISCARD).start();\n+        } catch (IOException e) {\n+            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e);\n+        }\n     }\n \n     /**\n      * <p>\n-     * Executes <code>commandLine</code> and return its result. Sometimes (especially observed on MacOS) the commandLine\n-     * isn't executed properly. In that cases another exec-method is to be used. To accomplish this please use the\n-     * special delimiter '<code>@@</code>'. If <code>commandLine</code> contains this delimiter it is split into a\n-     * String list and the special exec-method is used.\n+     * Executes <code>commandLine</code> and return its result.\n      *\n      * <p>\n      * A possible {@link IOException} gets logged but no further processing is done.\n      *\n+     * @param timeout timeout for execution in milliseconds, 0 to wait indefinitely", "originalCommit": "f467089103cd0450cc24becf177fd8b91154ac1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwNzgzMQ==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501307831", "bodyText": "done", "author": "cpmeister", "createdAt": "2020-10-07T21:01:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MjM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MjUxNg==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501272516", "body": "Can you  be a bit more specific?", "bodyText": "Can you  be a bit more specific?", "bodyHTML": "<p dir=\"auto\">Can you  be a bit more specific?</p>", "author": "wborn", "createdAt": "2020-10-07T19:56:09Z", "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -28,87 +35,101 @@\n  *\n  * @author Pauli Anttila - Initial contribution\n  * @author Kai Kreuzer - added exception logging\n+ * @author Connor Petty - rewrote", "originalCommit": "f467089103cd0450cc24becf177fd8b91154ac1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwNzg3NQ==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501307875", "bodyText": "done", "author": "cpmeister", "createdAt": "2020-10-07T21:02:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MjUxNg=="}], "type": "inlineReview"}, {"oid": "c7a47bcd6540ae3d50cfdecf7188dd1bb18d1c3a", "url": "https://github.com/openhab/openhab-core/commit/c7a47bcd6540ae3d50cfdecf7188dd1bb18d1c3a", "message": "Fixed javadoc\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-07T21:01:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5MDI4Ng==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501490286", "body": "The timeout is only used when it is not null:\r\n\r\n```suggestion\r\n     * @param timeout the max time to wait for a process to finish, null to wait indefinitely\r\n```", "bodyText": "The timeout is only used when it is not null:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param timeout the max time to wait for a process to finish, 0 to wait indefinitely\n          \n          \n            \n                 * @param timeout the max time to wait for a process to finish, null to wait indefinitely", "bodyHTML": "<p dir=\"auto\">The timeout is only used when it is not null:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> timeout the max time to wait <span class=\"pl-k\">for</span> a process to finish, <span class=\"pl-c1 x x-first x-last\">0</span> to wait indefinitely</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> timeout the max time to wait <span class=\"pl-k\">for</span> a process to finish, <span class=\"pl-c1 x x-first x-last\">null</span> to wait indefinitely</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wborn", "createdAt": "2020-10-08T07:01:25Z", "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -28,87 +35,101 @@\n  *\n  * @author Pauli Anttila - Initial contribution\n  * @author Kai Kreuzer - added exception logging\n+ * @author Connor Petty - replaced delimiter usage with argument array\n  */\n+@NonNullByDefault\n public class ExecUtil {\n \n     private static Logger logger = LoggerFactory.getLogger(ExecUtil.class);\n \n-    /**\n-     * Use this to separate between command and parameter, and also between parameters.\n-     */\n-    public static final String CMD_LINE_DELIMITER = \"@@\";\n+    private static ExecutorService executor = ThreadPoolManager.getPool(\"ExecUtil\");\n \n     /**\n      * <p>\n-     * Executes <code>commandLine</code>. Sometimes (especially observed on MacOS) the commandLine isn't executed\n-     * properly. In that cases another exec-method is to be used. To accomplish this please use the special delimiter\n-     * '<code>@@</code>'. If <code>commandLine</code> contains this delimiter it is split into a String list and the\n-     * special exec-method is used.\n+     * Executes <code>commandLine</code>.\n      *\n      * <p>\n      * A possible {@link IOException} gets logged but no further processing is done.\n      *\n      * @param commandLine the command line to execute\n      */\n-    public static void executeCommandLine(String commandLine) {\n-        internalExecute(commandLine);\n+    public static void executeCommandLine(String... commandLine) {\n+        try {\n+            new ProcessBuilder(commandLine).redirectError(Redirect.DISCARD).redirectOutput(Redirect.DISCARD).start();\n+        } catch (IOException e) {\n+            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e);\n+        }\n     }\n \n     /**\n      * <p>\n-     * Executes <code>commandLine</code> and return its result. Sometimes (especially observed on MacOS) the commandLine\n-     * isn't executed properly. In that cases another exec-method is to be used. To accomplish this please use the\n-     * special delimiter '<code>@@</code>'. If <code>commandLine</code> contains this delimiter it is split into a\n-     * String list and the special exec-method is used.\n+     * Executes <code>commandLine</code> and return its result.\n      *\n      * <p>\n      * A possible {@link IOException} gets logged but no further processing is done.\n      *\n+     * @param timeout the max time to wait for a process to finish, 0 to wait indefinitely", "originalCommit": "c7a47bcd6540ae3d50cfdecf7188dd1bb18d1c3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxNjk0Mw==", "url": "https://github.com/openhab/openhab-core/pull/1700#discussion_r501816943", "bodyText": "oof, forgot that one.\nFixed", "author": "cpmeister", "createdAt": "2020-10-08T15:34:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5MDI4Ng=="}], "type": "inlineReview"}, {"oid": "38168e34c8929ff6b0dacfb2885d9c0cfd8b33ca", "url": "https://github.com/openhab/openhab-core/commit/38168e34c8929ff6b0dacfb2885d9c0cfd8b33ca", "message": "Fix javadoc\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>", "committedDate": "2020-10-08T15:33:27Z", "type": "commit"}]}