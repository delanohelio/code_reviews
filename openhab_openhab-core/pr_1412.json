{"pr_number": 1412, "pr_title": "Add null annotations to providers and ThingManager", "pr_author": "wborn", "pr_createdAt": "2020-04-07T06:42:46Z", "pr_url": "https://github.com/openhab/openhab-core/pull/1412", "merge_commit": "fb7a7ac42173d3228b7e4447582e827aa541e9ac", "timeline": [{"oid": "7767119f8b2a3b823282ef27d491eac0f35c8a72", "url": "https://github.com/openhab/openhab-core/commit/7767119f8b2a3b823282ef27d491eac0f35c8a72", "message": "Add null annotations to providers and ThingManager\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-07T06:39:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3MTU3MA==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r404571570", "body": "It seems that `@NonNullByDefault` is not applied to generic type parameters. So it would be nice if SAT will not generate warnings for these.\r\n\r\nWe might also want to test what happens when annotating the generic type parameter in the interface with `@NonNull`. Maybe adding `@Nullable` on these types in methods would then override `@NonNull`?", "bodyText": "It seems that @NonNullByDefault is not applied to generic type parameters. So it would be nice if SAT will not generate warnings for these.\nWe might also want to test what happens when annotating the generic type parameter in the interface with @NonNull. Maybe adding @Nullable on these types in methods would then override @NonNull?", "bodyHTML": "<p dir=\"auto\">It seems that <code>@NonNullByDefault</code> is not applied to generic type parameters. So it would be nice if SAT will not generate warnings for these.</p>\n<p dir=\"auto\">We might also want to test what happens when annotating the generic type parameter in the interface with <code>@NonNull</code>. Maybe adding <code>@Nullable</code> on these types in methods would then override <code>@NonNull</code>?</p>", "author": "wborn", "createdAt": "2020-04-07T06:45:15Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/common/registry/ManagedProvider.java", "diffHunk": "@@ -63,6 +65,6 @@\n      * @return returns element or null, if no element for the given key exists\n      */\n     @Nullable\n-    E get(K key);\n+    E get(@NonNull K key);", "originalCommit": "7767119f8b2a3b823282ef27d491eac0f35c8a72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0ODAxOA==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r404648018", "bodyText": "Have you tried to state that K in general extends a non null object?", "author": "maggu2810", "createdAt": "2020-04-07T08:56:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3MTU3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTQ3Mw==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r404701473", "bodyText": "It seems to work and you can also override the annotations at method level. But it has a domino effect so I have to add/fix more annotations to get this working. \ud83d\ude09", "author": "wborn", "createdAt": "2020-04-07T10:24:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3MTU3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0NDQxNg==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r404744416", "bodyText": "Apparently Xtend doesn't support type annotations\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=506374\nSo there is no way to satisfy the nullness annotations of the GenericThingProvider causing the compiler to error on this project:\n\n  \n    \n      openhab-core/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\n    \n    \n         Line 76\n      in\n      aae207b\n    \n    \n    \n    \n\n        \n          \n           class GenericThingProvider extends AbstractProvider<Thing> implements ThingProvider, ModelRepositoryChangeListener, ReadyService.ReadyTracker { \n        \n    \n  \n\n\nFor now I've reconfigured the compiler to only log warnings for such issues on this project.", "author": "wborn", "createdAt": "2020-04-07T11:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU3MTU3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7cc1401251e42542a4623b08d071a33e95e853ef", "changed_code": [{"header": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/common/registry/ManagedProvider.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/common/registry/ManagedProvider.java\nindex d5614d525..1d24df704 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/common/registry/ManagedProvider.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/common/registry/ManagedProvider.java\n", "chunk": "@@ -65,6 +65,6 @@ public interface ManagedProvider<E extends Identifiable<K>, K> extends Provider<\n      * @return returns element or null, if no element for the given key exists\n      */\n     @Nullable\n-    E get(@NonNull K key);\n+    E get(K key);\n \n }\n", "next_change": null}]}}, {"oid": "d7da61c59b47fc04e5fe64b2196c8a638f7584a1", "url": "https://github.com/openhab/openhab-core/commit/d7da61c59b47fc04e5fe64b2196c8a638f7584a1", "message": "Use @NonNull with generic type parameters\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-07T11:43:39Z", "type": "commit"}, {"oid": "2f0ad3cbab0d7f899ca996607620284de57150ab", "url": "https://github.com/openhab/openhab-core/commit/2f0ad3cbab0d7f899ca996607620284de57150ab", "message": "Cast to ThingRegistryImpl as before\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-07T20:36:03Z", "type": "commit"}, {"oid": "7cc1401251e42542a4623b08d071a33e95e853ef", "url": "https://github.com/openhab/openhab-core/commit/7cc1401251e42542a4623b08d071a33e95e853ef", "message": "Cleanup code\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-07T21:17:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyNzAxOQ==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r405727019", "body": "Minor improvement:\r\n\r\n```suggestion\r\n        if (reference != null && Parser.PARSER_RULE.equals(reference.getProperty(Parser.PARSER_TYPE))) {\r\n```", "bodyText": "Minor improvement:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (reference != null && reference.getProperty(Parser.PARSER_TYPE).equals(Parser.PARSER_RULE)) {\n          \n          \n            \n                    if (reference != null && Parser.PARSER_RULE.equals(reference.getProperty(Parser.PARSER_TYPE))) {", "bodyHTML": "<p dir=\"auto\">Minor improvement:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (reference <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> reference<span class=\"pl-k\">.</span>getProperty(<span class=\"pl-smi\">Parser</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PARSER_TYPE</span>)<span class=\"pl-k x x-first\">.</span><span class=\"x\">equals(</span><span class=\"pl-smi x\">Parser</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">PARSER_RULE</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (reference <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi x x-first\">Parser</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">PARSER_RULE</span></span><span class=\"pl-k x\">.</span><span class=\"x x-last\">equals(</span>reference<span class=\"pl-k\">.</span>getProperty(<span class=\"pl-smi\">Parser</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PARSER_TYPE</span>))) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-08T18:26:56Z", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/commands/CommandlineRuleImporter.java", "diffHunk": "@@ -66,8 +69,8 @@ public CommandlineRuleImporter(BundleContext context, RuleRegistry ruleRegistry)\n      * @see AbstractCommandProvider#addingService(org.osgi.framework.ServiceReference)\n      */\n     @Override\n-    public Object addingService(@SuppressWarnings(\"rawtypes\") ServiceReference reference) {\n-        if (reference.getProperty(Parser.PARSER_TYPE).equals(Parser.PARSER_RULE)) {\n+    public @Nullable Object addingService(@SuppressWarnings(\"rawtypes\") @Nullable ServiceReference reference) {\n+        if (reference != null && reference.getProperty(Parser.PARSER_TYPE).equals(Parser.PARSER_RULE)) {", "originalCommit": "7cc1401251e42542a4623b08d071a33e95e853ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e319ca27f9a86cb6fd5b8450afc8f51c248969d", "changed_code": [{"header": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/commands/CommandlineRuleImporter.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/commands/CommandlineRuleImporter.java\nindex aa8aeb9e1..6f11725e2 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/commands/CommandlineRuleImporter.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/commands/CommandlineRuleImporter.java\n", "chunk": "@@ -70,7 +70,7 @@ public class CommandlineRuleImporter extends AbstractCommandProvider<Rule> {\n      */\n     @Override\n     public @Nullable Object addingService(@SuppressWarnings(\"rawtypes\") @Nullable ServiceReference reference) {\n-        if (reference != null && reference.getProperty(Parser.PARSER_TYPE).equals(Parser.PARSER_RULE)) {\n+        if (reference != null && Parser.PARSER_RULE.equals(reference.getProperty(Parser.PARSER_TYPE))) {\n             return super.addingService(reference);\n         }\n         return null;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyODk3NQ==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r405728975", "body": "We use `ThingTypeUID` in other log messages.\r\n\r\n```suggestion\r\n                            logger.debug(\"No ThingHandler to dispose for {}\", thing.getThingTypeUID());\r\n```", "bodyText": "We use ThingTypeUID in other log messages.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        logger.debug(\"No ThingHandler to dispose for {}\", thing.getUID());\n          \n          \n            \n                                        logger.debug(\"No ThingHandler to dispose for {}\", thing.getThingTypeUID());", "bodyHTML": "<p dir=\"auto\">We use <code>ThingTypeUID</code> in other log messages.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"420\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No ThingHandler to dispose for {}<span class=\"pl-pds\">\"</span></span>, thing<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getUID</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"420\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No ThingHandler to dispose for {}<span class=\"pl-pds\">\"</span></span>, thing<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getThingTypeUID</span>());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-08T18:30:09Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java", "diffHunk": "@@ -379,8 +413,12 @@ public void run() {\n                     final ThingHandlerFactory oldThingHandlerFactory = findThingHandlerFactory(thing.getThingTypeUID());\n                     if (oldThingHandlerFactory != null) {\n                         ThingHandler thingHandler = thing.getHandler();\n-                        unregisterAndDisposeHandler(oldThingHandlerFactory, thing, thingHandler);\n-                        waitUntilHandlerUnregistered(thing, 60 * 1000);\n+                        if (thingHandler != null) {\n+                            unregisterAndDisposeHandler(oldThingHandlerFactory, thing, thingHandler);\n+                            waitUntilHandlerUnregistered(thing, 60 * 1000);\n+                        } else {\n+                            logger.debug(\"No ThingHandler to dispose for {}\", thing.getUID());", "originalCommit": "7cc1401251e42542a4623b08d071a33e95e853ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwNzg1NA==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r406007854", "bodyText": "You can derive the type from the UID and I think you want to know which specific handler is null in this case because there can be many instances but only this one is null for a reason:\n                    // Remove the ThingHandler, if any\n                    final ThingHandlerFactory oldThingHandlerFactory = findThingHandlerFactory(thing.getThingTypeUID());\n                    if (oldThingHandlerFactory != null) {\n                        ThingHandler thingHandler = thing.getHandler();\n                        if (thingHandler != null) {\n                            unregisterAndDisposeHandler(oldThingHandlerFactory, thing, thingHandler);\n                            waitUntilHandlerUnregistered(thing, 60 * 1000);\n                        } else {\n                            logger.debug(\"No ThingHandler to dispose for {}\", thing.getUID());\n                        }\n                    } else {\n                        logger.debug(\"No ThingHandlerFactory available that can handle {}\", thing.getThingTypeUID());\n                    }", "author": "wborn", "createdAt": "2020-04-09T07:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyODk3NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTcyMQ==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r405729721", "body": ":+1: ", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "cweitkamp", "createdAt": "2020-04-08T18:31:22Z", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java", "diffHunk": "@@ -659,7 +702,7 @@ private void initializeHandler(Thing thing) {\n \n             if (isInitializable(thing, thingType)) {\n                 setThingStatus(thing, buildStatusInfo(ThingStatus.INITIALIZING, ThingStatusDetail.NONE));\n-                doInitializeHandler(thing.getHandler());\n+                doInitializeHandler(handler);", "originalCommit": "7cc1401251e42542a4623b08d071a33e95e853ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDI4MA==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r405734280", "body": "Wow ... this looks crazy ...", "bodyText": "Wow ... this looks crazy ...", "bodyHTML": "<p dir=\"auto\">Wow ... this looks crazy ...</p>", "author": "cweitkamp", "createdAt": "2020-04-08T18:38:56Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java", "diffHunk": "@@ -78,7 +78,7 @@ public PersistedItem(String itemType) {\n     public static class PersistedItemInstanceCreator implements InstanceCreator<PersistedItem> {\n \n         @Override\n-        public PersistedItem createInstance(Type type) {\n+        public PersistedItem createInstance(@NonNullByDefault({}) Type type) {", "originalCommit": "7cc1401251e42542a4623b08d071a33e95e853ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwNTI3Mg==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r406005272", "bodyText": "It's an overridden method from a Gson class which isn't annotated. It's not null but if you add @NonNull or don't annotate the compiler errors:\nIllegal redefinition of parameter type, inherited method from InstanceCreator<ManagedItemProvider.PersistedItem> does not constrain this parameter\nAdding @Nullable works but isn't correct. Adding @NonNullByDefault({}) makes the compiler happy too. The best way would of course be resolving this using  EEAs (#888).", "author": "wborn", "createdAt": "2020-04-09T07:22:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDI4MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDY4MQ==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r405734681", "body": "```suggestion\r\n        if (GroupItem.TYPE.equals(persistedItem.itemType)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (persistedItem.itemType.equals(GroupItem.TYPE)) {\n          \n          \n            \n                    if (GroupItem.TYPE.equals(persistedItem.itemType)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first\">persistedItem</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">itemType</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-smi x x-first\">GroupItem</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">TYPE</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi x x-first\">GroupItem</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">TYPE</span></span><span class=\"pl-k\">.</span>equals(<span class=\"x x-first\">persistedItem</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">itemType</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cweitkamp", "createdAt": "2020-04-08T18:39:41Z", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java", "diffHunk": "@@ -195,12 +195,13 @@ protected void removeItemFactory(ItemFactory itemFactory) {\n     }\n \n     @Override\n-    protected Item toElement(String itemName, PersistedItem persistedItem) {\n+    protected @Nullable Item toElement(String itemName, PersistedItem persistedItem) {\n         Item item = null;\n \n         if (persistedItem.itemType.equals(GroupItem.TYPE)) {", "originalCommit": "7cc1401251e42542a4623b08d071a33e95e853ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMjI3Nw==", "url": "https://github.com/openhab/openhab-core/pull/1412#discussion_r406022277", "bodyText": "I might do a PR to improve this everywhere in the code base. \ud83d\ude09", "author": "wborn", "createdAt": "2020-04-09T07:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8e319ca27f9a86cb6fd5b8450afc8f51c248969d", "changed_code": [{"header": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java\nindex 11b017bca..8f5812690 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/ManagedItemProvider.java\n", "chunk": "@@ -198,7 +198,7 @@ public class ManagedItemProvider extends AbstractManagedProvider<Item, String, P\n     protected @Nullable Item toElement(String itemName, PersistedItem persistedItem) {\n         Item item = null;\n \n-        if (persistedItem.itemType.equals(GroupItem.TYPE)) {\n+        if (GroupItem.TYPE.equals(persistedItem.itemType)) {\n             String baseItemType = persistedItem.baseItemType;\n             if (baseItemType != null) {\n                 Item baseItem = createItem(baseItemType, itemName);\n", "next_change": null}]}}, {"oid": "8e319ca27f9a86cb6fd5b8450afc8f51c248969d", "url": "https://github.com/openhab/openhab-core/commit/8e319ca27f9a86cb6fd5b8450afc8f51c248969d", "message": "Prevent NPEs by calling equals on non-null constants\n\nSigned-off-by: Wouter Born <github@maindrain.net>", "committedDate": "2020-04-09T07:53:18Z", "type": "commit"}]}