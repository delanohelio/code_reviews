{"pr_number": 4389, "pr_title": "Fixed vm-templates not being removed from primary storage with storag\u2026", "pr_author": "Spaceman1984", "pr_createdAt": "2020-10-07T07:10:08Z", "pr_url": "https://github.com/apache/cloudstack/pull/4389", "timeline": [{"oid": "802d3154166b3a71da80e44b7e8e6aa1ab6bc75e", "url": "https://github.com/apache/cloudstack/commit/802d3154166b3a71da80e44b7e8e6aa1ab6bc75e", "message": "Fixed vm-templates not being removed from primary storage with storage garbage collection", "committedDate": "2020-10-07T07:01:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500834894", "body": "@Spaceman1984 why to mark as VirtualMachine before destroying it ? will the destroy operation fail without it?", "bodyText": "@Spaceman1984 why to mark as VirtualMachine before destroying it ? will the destroy operation fail without it?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Spaceman1984/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Spaceman1984\">@Spaceman1984</a> why to mark as VirtualMachine before destroying it ? will the destroy operation fail without it?</p>", "author": "sureshanaparti", "createdAt": "2020-10-07T08:35:22Z", "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java", "diffHunk": "@@ -6785,6 +6785,7 @@ public Answer execute(DestroyCommand cmd) {\n                 if (s_logger.isInfoEnabled()) {\n                     s_logger.info(\"Destroy template volume \" + vol.getPath());\n                 }\n+                vmMo.markAsVirtualMachine(hyperHost.getHyperHostOwnerResourcePool(), hyperHost.getMor());", "originalCommit": "802d3154166b3a71da80e44b7e8e6aa1ab6bc75e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0NTgxMw==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500845813", "bodyText": "Yes, it did @sureshanaparti,", "author": "Spaceman1984", "createdAt": "2020-10-07T08:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1OTQ1NQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500859455", "bodyText": "I see delete/destory operation works for VM & Template in the vCenter. so, I think destroyTask() API can be used with the template mor as well, no need to explicitly mark as VM. What are the errors seen in the logs for failed destroy task without marking as VM?", "author": "sureshanaparti", "createdAt": "2020-10-07T09:13:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg2MDcyMQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500860721", "bodyText": "If destroy() works only when marked as a VM, then the same should be ensured across the usages of vmMO destroy()", "author": "sureshanaparti", "createdAt": "2020-10-07T09:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MTQxMA==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500881410", "bodyText": "The error was:\nUnable to delete template with snapshots - convert the template to a Virtual Machine first.", "author": "Spaceman1984", "createdAt": "2020-10-07T09:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyMTExNQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500921115", "bodyText": "@Spaceman1984 @sureshanaparti - in case of linked clones, it makes sense (the error). Do we/CloudStack check that template is not used by any of the VMs, prior to removing it. In that case it perfectly makes sense, if we don't delete the template from primary storage. Thoughts?", "author": "rhtyd", "createdAt": "2020-10-07T10:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyMTk0OQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500921949", "bodyText": "Yes, in this case, better not to mark the VM as template while spooling it from the secondary storage. So, no need to mark it back to VM for deletion.", "author": "sureshanaparti", "createdAt": "2020-10-07T10:59:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzMTY3OA==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500931678", "bodyText": "The error happened for all templates I tested, even systemvm. I speculate that it is referring to the internal command that vmware calls when you click on the delete button from the UI.", "author": "Spaceman1984", "createdAt": "2020-10-07T11:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzODI0MQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500938241", "bodyText": "Do we/CloudStack check that template is not used by any of the VMs, prior to removing it.\n\nYes", "author": "Spaceman1984", "createdAt": "2020-10-07T11:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4MTUzNw==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r501181537", "bodyText": "Looks good. I tried vmMo.removeAllSnapshots(); before the destroy but fails. I wonder if templates GC worked before not being marked as templates.", "author": "nvazquez", "createdAt": "2020-10-07T17:19:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNTYyNw==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500835627", "body": "```suggestion\r\n    public void markAsVirtualMachine(ManagedObjectReference resourcePool, ManagedObjectReference host) throws Exception {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void markAsVirtualMachine(ManagedObjectReference pool, ManagedObjectReference host) throws Exception {\n          \n          \n            \n                public void markAsVirtualMachine(ManagedObjectReference resourcePool, ManagedObjectReference host) throws Exception {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> markAsVirtualMachine(<span class=\"pl-smi\">ManagedObjectReference</span> <span class=\"x x-first x-last\">pool</span>, <span class=\"pl-smi\">ManagedObjectReference</span> host) throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> markAsVirtualMachine(<span class=\"pl-smi\">ManagedObjectReference</span> <span class=\"x x-first x-last\">resourcePool</span>, <span class=\"pl-smi\">ManagedObjectReference</span> host) throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sureshanaparti", "createdAt": "2020-10-07T08:36:32Z", "path": "vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java", "diffHunk": "@@ -406,6 +406,10 @@ public void markAsTemplate() throws Exception {\n         _context.getService().markAsTemplate(_mor);\n     }\n \n+    public void markAsVirtualMachine(ManagedObjectReference pool, ManagedObjectReference host) throws Exception {", "originalCommit": "802d3154166b3a71da80e44b7e8e6aa1ab6bc75e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d3d3be2593fee936b2e8b73ee307709e0dcbc998", "url": "https://github.com/apache/cloudstack/commit/d3d3be2593fee936b2e8b73ee307709e0dcbc998", "message": "Update vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java\n\nCo-authored-by: sureshanaparti <12028987+sureshanaparti@users.noreply.github.com>", "committedDate": "2020-10-07T08:50:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0ODIyNw==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500848227", "body": "_pool_ => _resourcePool_", "bodyText": "pool => resourcePool", "bodyHTML": "<p dir=\"auto\"><em>pool</em> =&gt; <em>resourcePool</em></p>", "author": "sureshanaparti", "createdAt": "2020-10-07T08:55:47Z", "path": "vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java", "diffHunk": "@@ -406,6 +406,10 @@ public void markAsTemplate() throws Exception {\n         _context.getService().markAsTemplate(_mor);\n     }\n \n+    public void markAsVirtualMachine(ManagedObjectReference resourcePool, ManagedObjectReference host) throws Exception {\n+        _context.getService().markAsVirtualMachine(_mor, pool, host);", "originalCommit": "d3d3be2593fee936b2e8b73ee307709e0dcbc998", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MTU5MQ==", "url": "https://github.com/apache/cloudstack/pull/4389#discussion_r500851591", "bodyText": "Fixed", "author": "Spaceman1984", "createdAt": "2020-10-07T09:01:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0ODIyNw=="}], "type": "inlineReview"}, {"oid": "68e918f11b05cc70741a857661d0a0420cb21c24", "url": "https://github.com/apache/cloudstack/commit/68e918f11b05cc70741a857661d0a0420cb21c24", "message": "Var name", "committedDate": "2020-10-07T08:59:53Z", "type": "commit"}]}