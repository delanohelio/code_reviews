{"pr_number": 4399, "pr_title": "PR multi tags in compute offering [#4398]", "pr_author": "DK101010", "pr_createdAt": "2020-10-13T06:42:42Z", "pr_url": "https://github.com/apache/cloudstack/pull/4399", "timeline": [{"oid": "ab4eb9b94d590fcbae98916b6068fcab170f3177", "url": "https://github.com/apache/cloudstack/commit/ab4eb9b94d590fcbae98916b6068fcab170f3177", "message": "[#4398] adapt code to handle multi tag string with commas", "committedDate": "2020-10-13T06:31:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NzM5OA==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r503977398", "body": "trailing white spce on these lines\r\n```suggestion\r\n            while (rs.next()) {\r\n                result.add(rs.getLong(1));\r\n            }\r\n```", "bodyText": "trailing white spce on these lines\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (rs.next()) {     \n          \n          \n            \n                            result.add(rs.getLong(1));             \n          \n          \n            \n                        }        \n          \n          \n            \n                        while (rs.next()) {\n          \n          \n            \n                            result.add(rs.getLong(1));\n          \n          \n            \n                        }", "bodyHTML": "<p dir=\"auto\">trailing white spce on these lines</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">while</span> (rs<span class=\"pl-k\">.</span>next()) {<span class=\"x x-first x-last\">     </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                result<span class=\"pl-k\">.</span>add(rs<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">1</span>));<span class=\"x x-first x-last\">             </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }<span class=\"x x-first x-last\">        </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">while</span> (rs<span class=\"pl-k\">.</span>next()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                result<span class=\"pl-k\">.</span>add(rs<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaanHoogland", "createdAt": "2020-10-13T14:01:28Z", "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -1147,27 +1155,68 @@ public HostVO findByIp(final String ipAddress) {\n     }\n \n     @Override\n-    public List<Long> listClustersByHostTag(String hostTagOnOffering) {\n+    public List<Long> listClustersByHostTag(String computeOfferingTags) {\n         TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        String sql = this.LIST_CLUSTERID_FOR_HOST_TAG;\n         PreparedStatement pstmt = null;\n-        List<Long> result = new ArrayList<Long>();\n-        StringBuilder sql = new StringBuilder(LIST_CLUSTERID_FOR_HOST_TAG);\n-        // during listing the clusters that cross the threshold\n-        // we need to check with disabled thresholds of each cluster if not defined at cluster consider the global value\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String subselect = getHostIdsByComputeTags(tags);\n+        sql = String.format(sql, subselect);\n+        \n         try {\n-            pstmt = txn.prepareAutoCloseStatement(sql.toString());\n-            pstmt.setString(1, hostTagOnOffering);\n+            pstmt = txn.prepareStatement(sql);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            //pstmt = txn.prepareAutoCloseStatement();\n             ResultSet rs = pstmt.executeQuery();\n-            while (rs.next()) {\n-                result.add(rs.getLong(1));\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             \n+            }        ", "originalCommit": "ab4eb9b94d590fcbae98916b6068fcab170f3177", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ2NTg4MQ==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r504465881", "bodyText": "ups sorry, i've fixed this", "author": "DK101010", "createdAt": "2020-10-14T07:40:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NzM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3Nzk0Ng==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r503977946", "body": "```suggestion\r\n            while (rs.next()) {\r\n                result.add(rs.getLong(1));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (rs.next()) {     \n          \n          \n            \n                            result.add(rs.getLong(1));             \n          \n          \n            \n                        while (rs.next()) {\n          \n          \n            \n                            result.add(rs.getLong(1));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">while</span> (rs<span class=\"pl-k\">.</span>next()) {<span class=\"x x-first x-last\">     </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                result<span class=\"pl-k\">.</span>add(rs<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">1</span>));<span class=\"x x-first x-last\">             </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">while</span> (rs<span class=\"pl-k\">.</span>next()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                result<span class=\"pl-k\">.</span>add(rs<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaanHoogland", "createdAt": "2020-10-13T14:02:12Z", "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -1147,27 +1155,68 @@ public HostVO findByIp(final String ipAddress) {\n     }\n \n     @Override\n-    public List<Long> listClustersByHostTag(String hostTagOnOffering) {\n+    public List<Long> listClustersByHostTag(String computeOfferingTags) {\n         TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        String sql = this.LIST_CLUSTERID_FOR_HOST_TAG;\n         PreparedStatement pstmt = null;\n-        List<Long> result = new ArrayList<Long>();\n-        StringBuilder sql = new StringBuilder(LIST_CLUSTERID_FOR_HOST_TAG);\n-        // during listing the clusters that cross the threshold\n-        // we need to check with disabled thresholds of each cluster if not defined at cluster consider the global value\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String subselect = getHostIdsByComputeTags(tags);\n+        sql = String.format(sql, subselect);\n+        \n         try {\n-            pstmt = txn.prepareAutoCloseStatement(sql.toString());\n-            pstmt.setString(1, hostTagOnOffering);\n+            pstmt = txn.prepareStatement(sql);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            //pstmt = txn.prepareAutoCloseStatement();\n             ResultSet rs = pstmt.executeQuery();\n-            while (rs.next()) {\n-                result.add(rs.getLong(1));\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             \n+            }        \n+            pstmt.close();\n+            if(result.isEmpty()){\n+                throw new CloudRuntimeException(\"No suitable host found for follow compute offering tags: \" + computeOfferingTags);\n             }\n             return result;\n         } catch (SQLException e) {\n             throw new CloudRuntimeException(\"DB Exception on: \" + sql, e);\n-        } catch (Throwable e) {\n-            throw new CloudRuntimeException(\"Caught: \" + sql, e);\n         }\n     }\n+    \n+    private List<Long> findHostByComputeOfferings(String computeOfferingTags){\n+        TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        PreparedStatement pstmt = null;\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String select = getHostIdsByComputeTags(tags);\n+        try {\n+            pstmt = txn.prepareStatement(select);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            \n+            ResultSet rs = pstmt.executeQuery();\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             ", "originalCommit": "ab4eb9b94d590fcbae98916b6068fcab170f3177", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2957af8beabfb826ded102c6a8c7f07b551ba237", "url": "https://github.com/apache/cloudstack/commit/2957af8beabfb826ded102c6a8c7f07b551ba237", "message": "[#4398] remove trailing spaces", "committedDate": "2020-10-14T07:37:15Z", "type": "commit"}, {"oid": "c43684cda8b0784334aef5c4db7f3d3927cd763a", "url": "https://github.com/apache/cloudstack/commit/c43684cda8b0784334aef5c4db7f3d3927cd763a", "message": "[#4398] add multi host tag support for ingest process", "committedDate": "2020-11-12T11:22:49Z", "type": "commit"}, {"oid": "611fc43e1d9a9dea186e7e3adfd17cd7ae01390f", "url": "https://github.com/apache/cloudstack/commit/611fc43e1d9a9dea186e7e3adfd17cd7ae01390f", "message": "Merge pull request #1 from apache/master\n\nUpdate Fork", "committedDate": "2020-11-16T15:18:35Z", "type": "commit"}, {"oid": "ea3072fb95ebb48868f8e27a5eeea5b9804654fc", "url": "https://github.com/apache/cloudstack/commit/ea3072fb95ebb48868f8e27a5eeea5b9804654fc", "message": "Merge branch 'master' into feat/multihost_tag_support_compute_offerings", "committedDate": "2020-11-16T15:21:22Z", "type": "commit"}, {"oid": "4c93714110bff328abb5d1c2a70e9e9712cb88fc", "url": "https://github.com/apache/cloudstack/commit/4c93714110bff328abb5d1c2a70e9e9712cb88fc", "message": "[#4398] add test for multi tag support in offerings", "committedDate": "2020-12-04T12:35:41Z", "type": "commit"}, {"oid": "f3a709cec78cd83b3b10afc07453ca25722a1bc5", "url": "https://github.com/apache/cloudstack/commit/f3a709cec78cd83b3b10afc07453ca25722a1bc5", "message": "[#4398]  update multitag support for DeploymentPlanningManagerImpl\n\nencapsulate multi tag check from Ingest Feature, DepolymentPlanningManager into\nHostDaoImpl to prevent code duplicates", "committedDate": "2020-12-09T14:13:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r539970205", "body": "trying to isolate this check is fine but the DAO is for DB interaction, and this is really business logic. personally I would make it a default method for the Host interface, but a member of HostVO could also be.\r\nCan you (shortly) explain why you put it here, @DK101010 ?", "bodyText": "trying to isolate this check is fine but the DAO is for DB interaction, and this is really business logic. personally I would make it a default method for the Host interface, but a member of HostVO could also be.\nCan you (shortly) explain why you put it here, @DK101010 ?", "bodyHTML": "<p dir=\"auto\">trying to isolate this check is fine but the DAO is for DB interaction, and this is really business logic. personally I would make it a default method for the Host interface, but a member of HostVO could also be.<br>\nCan you (shortly) explain why you put it here, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/DK101010/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DK101010\">@DK101010</a> ?</p>", "author": "DaanHoogland", "createdAt": "2020-12-10T08:30:39Z", "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -480,6 +482,25 @@ public Integer countAllByTypeInZone(long zoneId, Type type) {\n         return listBy(sc);\n     }\n \n+    @Override\n+    public boolean checkHostServiceOfferingTags(HostVO host, ServiceOffering serviceOffering){\n+        if (host == null) {\n+            return false;\n+        }\n+        if (serviceOffering == null) {\n+            return false;\n+        }\n+        if (Strings.isNullOrEmpty(serviceOffering.getHostTag())) {\n+            return true;\n+        }\n+\n+        List<String> serviceOfferingTags = Arrays.asList(serviceOffering.getHostTag().split(\",\"));\n+        if(host.getHostTags() != null && host.getHostTags().containsAll(serviceOfferingTags)){\n+            return true;\n+        }\n+        return false;\n+    }", "originalCommit": "f3a709cec78cd83b3b10afc07453ca25722a1bc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAxNDMxMw==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r540014313", "bodyText": "Hi,\nIn the HostDaoImpl there are a couple of other methods that are check host tags, therefore i thought will be good to add this also here. So will be encapsulate common logic in one class, but my experience is still not very well in CS and when it destroy other guidelines then will be also ok to move this method. For me sounds HostVO good, because it  seems to be only relevant for this object.", "author": "DK101010", "createdAt": "2020-12-10T09:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAxOTUwOQ==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r541019509", "bodyText": "as said I prefer a default method on the interface but it maight require undesirable imports so HostVO is good for my part.", "author": "DaanHoogland", "createdAt": "2020-12-11T15:16:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1NTE2MA==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r542355160", "bodyText": "will you be moving this method @DK101010 ?", "author": "DaanHoogland", "createdAt": "2020-12-14T12:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM2Mzg4MA==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r542363880", "bodyText": "is moved ;)", "author": "DK101010", "createdAt": "2020-12-14T12:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ=="}], "type": "inlineReview"}, {"oid": "a652c6a435784538dc7cb1c073a1ef602b2352f7", "url": "https://github.com/apache/cloudstack/commit/a652c6a435784538dc7cb1c073a1ef602b2352f7", "message": "[#4398] move logic to HostVO and add tests", "committedDate": "2020-12-14T12:55:49Z", "type": "commit"}, {"oid": "562818a48804e8d170d5d9816123da9173caef50", "url": "https://github.com/apache/cloudstack/commit/562818a48804e8d170d5d9816123da9173caef50", "message": "rename test method", "committedDate": "2020-12-14T13:01:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMTIxNQ==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r542401215", "body": "sorry to keep nagging you, but we have a string utils proxy class in place. It has an isEmpty() that does the same check. if for some reason you need this one anyway , please add it there if the functioonality doesn't suffice.", "bodyText": "sorry to keep nagging you, but we have a string utils proxy class in place. It has an isEmpty() that does the same check. if for some reason you need this one anyway , please add it there if the functioonality doesn't suffice.", "bodyHTML": "<p dir=\"auto\">sorry to keep nagging you, but we have a string utils proxy class in place. It has an isEmpty() that does the same check. if for some reason you need this one anyway , please add it there if the functioonality doesn't suffice.</p>", "author": "DaanHoogland", "createdAt": "2020-12-14T13:55:12Z", "path": "engine/schema/src/main/java/com/cloud/host/HostVO.java", "diffHunk": "@@ -740,6 +743,18 @@ public void setUuid(String uuid) {\n         this.uuid = uuid;\n     }\n \n+    public boolean checkHostServiceOfferingTags(ServiceOffering serviceOffering){\n+        if (serviceOffering == null) {\n+            return false;\n+        }\n+        if (Strings.isNullOrEmpty(serviceOffering.getHostTag())) {", "originalCommit": "562818a48804e8d170d5d9816123da9173caef50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNTcxNg==", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r542425716", "bodyText": "@DaanHoogland Is ok, I think I will survive this :D\nThis method was not my idea, it was a part of the old implementation and I thought it was nice, so I reused this.\nI will change it ;)", "author": "DK101010", "createdAt": "2020-12-14T14:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMTIxNQ=="}], "type": "inlineReview"}, {"oid": "8b3255996d45cb20f368e62e8019fb7ed6ec3f04", "url": "https://github.com/apache/cloudstack/commit/8b3255996d45cb20f368e62e8019fb7ed6ec3f04", "message": "[#4398] Change string method to apaches StringUtils", "committedDate": "2020-12-14T14:30:51Z", "type": "commit"}, {"oid": "f54380b520cacbf91bf22d396769816a0ad73cdf", "url": "https://github.com/apache/cloudstack/commit/f54380b520cacbf91bf22d396769816a0ad73cdf", "message": "[#4398] modify test for multi tag support", "committedDate": "2020-12-15T13:16:03Z", "type": "commit"}, {"oid": "8258de08ebf160e8ee6d8798d726a3c43e32f258", "url": "https://github.com/apache/cloudstack/commit/8258de08ebf160e8ee6d8798d726a3c43e32f258", "message": "adapt sql for double tags", "committedDate": "2021-08-02T07:13:17Z", "type": "commit"}, {"oid": "4ad259d45abf48c4578769214651ac79211f8af1", "url": "https://github.com/apache/cloudstack/commit/4ad259d45abf48c4578769214651ac79211f8af1", "message": "merge main", "committedDate": "2021-08-04T06:59:45Z", "type": "commit"}]}