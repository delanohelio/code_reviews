{"pr_number": 4555, "pr_title": "VMware: Fix template upload from local", "pr_author": "nvazquez", "pr_createdAt": "2020-12-21T19:33:50Z", "pr_url": "https://github.com/apache/cloudstack/pull/4555", "timeline": [{"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43", "url": "https://github.com/apache/cloudstack/commit/9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43", "message": "Fix template upload from local", "committedDate": "2020-12-21T14:37:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547089083", "body": "Should we simply ignore for VMware, even if ostypeid is provided?", "bodyText": "Should we simply ignore for VMware, even if ostypeid is provided?", "bodyHTML": "<p dir=\"auto\">Should we simply ignore for VMware, even if ostypeid is provided?</p>", "author": "rhtyd", "createdAt": "2020-12-22T06:15:17Z", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "originalCommit": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTUwMQ==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547089501", "bodyText": "... read the code down below, looks like we want the ostypeid to be null so we can get  it from getDefaultDeployAsIsGuestOsId", "author": "rhtyd", "createdAt": "2020-12-22T06:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNjEwNA==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547216104", "bodyText": "should we really refuse the parameter as opposed to just ignore it? being this strict may crash operator scripts unnecessarily.", "author": "DaanHoogland", "createdAt": "2020-12-22T11:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNjgzOQ==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547216839", "bodyText": "guess I'm late too the party. see ^^", "author": "DaanHoogland", "createdAt": "2020-12-22T11:10:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI0OTE4MA==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547249180", "bodyText": "This change is in line with the changes we have done with the registerTemplate API. We are informing the user in case they provide the 'ostypeid' parameter that it is not used anymore and failing", "author": "nvazquez", "createdAt": "2020-12-22T12:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}], "type": "inlineReview"}, {"oid": "c747c9b985010b45543ba6c1f05727eb4c9f0e73", "url": "https://github.com/apache/cloudstack/commit/c747c9b985010b45543ba6c1f05727eb4c9f0e73", "message": "Update the guest OS from the OVF file after upload is completed", "committedDate": "2020-12-22T15:52:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM1ODg4Mw==", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547358883", "body": "very significant review comment:\r\n```suggestion\r\n     * Roll back actions in case of unexpected errors\r\n```", "bodyText": "very significant review comment:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Roll back actions in case of unexpected erros\n          \n          \n            \n                 * Roll back actions in case of unexpected errors", "bodyHTML": "<p dir=\"auto\">very significant review comment:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Roll</span> back actions in <span class=\"pl-k\">case</span> of unexpected <span class=\"x x-first x-last\">erros</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Roll</span> back actions in <span class=\"pl-k\">case</span> of unexpected <span class=\"x x-first x-last\">errors</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaanHoogland", "createdAt": "2020-12-22T15:59:22Z", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -175,14 +168,27 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n             GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n-            LOGGER.info(\"Updating deploy-as-is template guest OS to \" + guestOsType);\n-            updateTemplateGuestOsId(template, guestOsId);\n+            return mapping.getGuestOsId();\n         } else {\n             throw new CloudRuntimeException(\"Did not find a guest OS with type \" + guestOsType);\n         }\n     }\n \n+    /**\n+     * Handle the guest OS read from the OVF and try to match it to an existing guest OS in DB.\n+     * If the guest OS cannot be mapped to an existing guest OS in DB, then create it and create support for hypervisor versions.\n+     * Roll back actions in case of unexpected erros", "originalCommit": "c747c9b985010b45543ba6c1f05727eb4c9f0e73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "13677e404467e6861834d53bc36471cc0f0b351c", "url": "https://github.com/apache/cloudstack/commit/13677e404467e6861834d53bc36471cc0f0b351c", "message": "Update engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>", "committedDate": "2020-12-22T16:50:38Z", "type": "commit"}]}