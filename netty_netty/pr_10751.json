{"pr_number": 10751, "pr_title": "Allow and skip null handlers when adding a vararg list of handlers", "pr_author": "Bennett-Lynch", "pr_createdAt": "2020-10-29T18:13:16Z", "pr_url": "https://github.com/netty/netty/pull/10751", "timeline": [{"oid": "80fa0cf28da899e812049543c261097978d524ac", "url": "https://github.com/netty/netty/commit/80fa0cf28da899e812049543c261097978d524ac", "message": "Allow and skip null handlers when adding a vararg list of handlers\n\nMotivation\n\nAllowing null handlers allows for more convenient idioms in\nconditionally adding handlers, e.g.,\n\nch.pipeline().addLast(\n        new FooHandler(),\n        condition ? new BarHandler() : null,\n        new BazHandler()\n);\n\nModifications\n\n* Change addFirst(..) and addLast(..) to skip null handlers, rather than\nbreak or short-circuit.\n* Add new unit tests.\n\nResult\n\n* Makes addFirst(..) and addLast(..) behavior more consistent\n* Resolves https://github.com/netty/netty/issues/10728", "committedDate": "2020-10-29T18:10:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDA4OQ==", "url": "https://github.com/netty/netty/pull/10751#discussion_r514994089", "body": "```suggestion\r\n            if (h != null) {\r\n                addFirst(executor, null, h);\r\n            }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (h == null) {\n          \n          \n            \n                            continue;\n          \n          \n            \n                        }\n          \n          \n            \n                        addFirst(executor, null, h);\n          \n          \n            \n                        if (h != null) {\n          \n          \n            \n                            addFirst(executor, null, h);\n          \n          \n            \n                        }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (h <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">continue</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            addFirst(executor, <span class=\"pl-c1\">null</span>, h);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (h <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                addFirst(executor, <span class=\"pl-c1\">null</span>, h);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chrisvest", "createdAt": "2020-10-30T10:15:27Z", "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java", "diffHunk": "@@ -342,19 +342,12 @@ public final ChannelPipeline addFirst(ChannelHandler... handlers) {\n     @Override\n     public final ChannelPipeline addFirst(EventExecutorGroup executor, ChannelHandler... handlers) {\n         ObjectUtil.checkNotNull(handlers, \"handlers\");\n-        if (handlers.length == 0 || handlers[0] == null) {\n-            return this;\n-        }\n \n-        int size;\n-        for (size = 1; size < handlers.length; size ++) {\n-            if (handlers[size] == null) {\n-                break;\n-            }\n-        }\n-\n-        for (int i = size - 1; i >= 0; i --) {\n+        for (int i = handlers.length - 1; i >= 0; i --) {\n             ChannelHandler h = handlers[i];\n+            if (h == null) {\n+                continue;\n+            }\n             addFirst(executor, null, h);", "originalCommit": "80fa0cf28da899e812049543c261097978d524ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0ODMwMg==", "url": "https://github.com/netty/netty/pull/10751#discussion_r515348302", "bodyText": "Can change. Was trying to minimize lines changed, but will clean it up.", "author": "Bennett-Lynch", "createdAt": "2020-10-30T20:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDA4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDUzOQ==", "url": "https://github.com/netty/netty/pull/10751#discussion_r514994539", "body": "Same here.", "bodyText": "Same here.", "bodyHTML": "<p dir=\"auto\">Same here.</p>", "author": "chrisvest", "createdAt": "2020-10-30T10:16:19Z", "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java", "diffHunk": "@@ -376,7 +369,7 @@ public final ChannelPipeline addLast(EventExecutorGroup executor, ChannelHandler\n \n         for (ChannelHandler h: handlers) {\n             if (h == null) {\n-                break;\n+                continue;\n             }\n             addLast(executor, null, h);", "originalCommit": "80fa0cf28da899e812049543c261097978d524ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1f4278dc17716fd464796e4ebfbc9404d25233f", "url": "https://github.com/netty/netty/commit/f1f4278dc17716fd464796e4ebfbc9404d25233f", "message": "Allow and skip null handlers when adding a vararg list of handlers\n\nMotivation\n\nAllowing null handlers allows for more convenient idioms in\nconditionally adding handlers, e.g.,\n\nch.pipeline().addLast(\n        new FooHandler(),\n        condition ? new BarHandler() : null,\n        new BazHandler()\n);\n\nModifications\n\n* Change addFirst(..) and addLast(..) to skip null handlers, rather than\nbreak or short-circuit.\n* Add new unit tests.\n\nResult\n\n* Makes addFirst(..) and addLast(..) behavior more consistent\n* Resolves https://github.com/netty/netty/issues/10728", "committedDate": "2020-10-30T20:00:35Z", "type": "commit"}]}