{"pr_number": 10819, "pr_title": "Let Http2ConnectionHandler close stream with voidPromise", "pr_author": "valerauko", "pr_createdAt": "2020-11-24T11:03:07Z", "pr_url": "https://github.com/netty/netty/pull/10819", "timeline": [{"oid": "495ecd79896df11e5f607b2b4879dfc1f0cf363f", "url": "https://github.com/netty/netty/commit/495ecd79896df11e5f607b2b4879dfc1f0cf363f", "message": "Let Http2ConnectionHandler close stream with voidPromise\n\nMotivation:\n\nHttp2ConnectionHandler tries to addListener to the future without checking if it's void. If it is void, this will fail and generate an exception. \n \nModifications:\n\nGet a new promise from the future's channel if the future is void.\n \nResult:\n\nFixes #10816\nWriting with a voidPromise no longer generates exceptions.", "committedDate": "2020-11-24T10:23:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ1OTkyNA==", "url": "https://github.com/netty/netty/pull/10819#discussion_r529459924", "body": "Based on the other tests I wanted to do something like this:\r\n```java\r\n        verify(voidPromise, never()).addListener(any(GenericFutureListener.class));\r\n        verify(ctx.channel(), times(1)).newPromise();\r\n        verify(promise, times(1)).addListener(any(GenericFutureListener.class));\r\n```\r\nI'm not used to this testing suite, so please advise how can I get these checks to work... :pray: ", "bodyText": "Based on the other tests I wanted to do something like this:\n        verify(voidPromise, never()).addListener(any(GenericFutureListener.class));\n        verify(ctx.channel(), times(1)).newPromise();\n        verify(promise, times(1)).addListener(any(GenericFutureListener.class));\nI'm not used to this testing suite, so please advise how can I get these checks to work... \ud83d\ude4f", "bodyHTML": "<p dir=\"auto\">Based on the other tests I wanted to do something like this:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        verify(voidPromise, never()).addListener(any(GenericFutureListener.class));\n        verify(ctx.channel(), times(1)).newPromise();\n        verify(promise, times(1)).addListener(any(GenericFutureListener.class));\"><pre>        verify(voidPromise, never())<span class=\"pl-k\">.</span>addListener(any(<span class=\"pl-smi\">GenericFutureListener</span><span class=\"pl-k\">.</span>class));\n        verify(ctx<span class=\"pl-k\">.</span>channel(), times(<span class=\"pl-c1\">1</span>))<span class=\"pl-k\">.</span>newPromise();\n        verify(promise, times(<span class=\"pl-c1\">1</span>))<span class=\"pl-k\">.</span>addListener(any(<span class=\"pl-smi\">GenericFutureListener</span><span class=\"pl-k\">.</span>class));</pre></div>\n<p dir=\"auto\">I'm not used to this testing suite, so please advise how can I get these checks to work... <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png\">\ud83d\ude4f</g-emoji></p>", "author": "valerauko", "createdAt": "2020-11-24T11:04:28Z", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java", "diffHunk": "@@ -691,6 +691,14 @@ public ChannelFuture answer(InvocationOnMock invocation) throws Throwable {\n         verify(pipeline).fireExceptionCaught(cause);\n     }\n \n+    @Test\n+    public void canCloseStreamWithVoidPromise() throws Exception {\n+        handler = newHandler();\n+        handler.closeStream(stream, ctx.voidPromise());\n+        verify(stream, times(1)).close();\n+        verifyNoMoreInteractions(stream);", "originalCommit": "495ecd79896df11e5f607b2b4879dfc1f0cf363f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89f12801e0d61729c3d71556a76edeb4edf393d1", "url": "https://github.com/netty/netty/commit/89f12801e0d61729c3d71556a76edeb4edf393d1", "message": "Unvoid the promise in writeData()", "committedDate": "2020-11-30T05:25:45Z", "type": "commit"}]}