{"pr_number": 2249, "pr_title": "Issue #2248: Fix various ContractMarket exceptions when operating at the bounds of MekHQ data", "pr_author": "sixlettervariables", "pr_createdAt": "2020-11-30T21:57:51Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2249", "timeline": [{"oid": "2ec15faf3b86611bc2360096d2d1124edad0a29b", "url": "https://github.com/MegaMek/mekhq/commit/2ec15faf3b86611bc2360096d2d1124edad0a29b", "message": "Have ContractMarket more gracefully deal with tough situations #2248", "committedDate": "2020-11-30T21:43:18Z", "type": "commit"}, {"oid": "c7bf1f0be702722f49ba01405392c9b384a14a5a", "url": "https://github.com/MegaMek/mekhq/commit/c7bf1f0be702722f49ba01405392c9b384a14a5a", "message": "Avoid infinite loop if we can only generate MERC employers #2248", "committedDate": "2020-11-30T21:51:08Z", "type": "commit"}, {"oid": "ffd21daf045f3eae0a1e04646415dc9571069ae0", "url": "https://github.com/MegaMek/mekhq/commit/ffd21daf045f3eae0a1e04646415dc9571069ae0", "message": "Improve debug message when factions cannot be found", "committedDate": "2020-11-30T22:00:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTEyMg==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r532991122", "body": "Why > 0 instead of == 0?", "bodyText": "Why > 0 instead of == 0?", "bodyHTML": "<p dir=\"auto\">Why &gt; 0 instead of == 0?</p>", "author": "Windchild292", "createdAt": "2020-12-01T00:23:37Z", "path": "MekHQ/src/mekhq/campaign/market/ContractMarket.java", "diffHunk": "@@ -182,7 +189,7 @@ public void generateContractOffers(Campaign campaign, boolean newCampaign) {\n                         inBackwater = false;\n                     }\n                 }\n-            } else {\n+            } else if (currentFactions.size() > 0) {", "originalCommit": "ffd21daf045f3eae0a1e04646415dc9571069ae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5NjI5Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r532996293", "bodyText": "This case is for at least one faction. The above case is for more than one.", "author": "sixlettervariables", "createdAt": "2020-12-01T00:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMTAyNQ==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r533001025", "bodyText": "Sorry, the latter should have been == 1", "author": "Windchild292", "createdAt": "2020-12-01T00:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTEyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMjQwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r533002409", "bodyText": "I noticed the static analysis tools we use have problems with ranges mixed with (in)equality and did much better with ranges alone. I believe it was elsewhere with target rolls.", "author": "sixlettervariables", "createdAt": "2020-12-01T00:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTQzMg==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r532991432", "body": "```suggestion\r\n            for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; attempts++) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; ++attempts) {\n          \n          \n            \n                        for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; attempts++) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"338\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> attempts <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; attempts <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER</span>; <span class=\"pl-k x x-first\">++</span><span class=\"x x-last\">attempts</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"338\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> attempts <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; attempts <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER</span>; <span class=\"x x-first\">attempts</span><span class=\"pl-k x x-last\">++</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-12-01T00:24:28Z", "path": "MekHQ/src/mekhq/campaign/market/ContractMarket.java", "diffHunk": "@@ -314,8 +335,16 @@ private AtBContract generateAtBContract(Campaign campaign, String employer, int\n \n         if (employer.equals(\"MERC\")) {\n             contract.setMercSubcontract(true);\n-            while (employer.equals(\"MERC\")) {\n+            for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; ++attempts) {", "originalCommit": "ffd21daf045f3eae0a1e04646415dc9571069ae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTU2Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2249#discussion_r532991562", "bodyText": "more standard format", "author": "Windchild292", "createdAt": "2020-12-01T00:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTQzMg=="}], "type": "inlineReview"}, {"oid": "f414d402b9151e6504be5fa06a7548fd109cb3a7", "url": "https://github.com/MegaMek/mekhq/commit/f414d402b9151e6504be5fa06a7548fd109cb3a7", "message": "Address LGTM feedback", "committedDate": "2020-12-01T14:14:39Z", "type": "commit"}]}