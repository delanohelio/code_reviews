{"pr_number": 593, "pr_title": "Unify fastpass version", "pr_author": "tpasternak", "pr_createdAt": "2020-12-03T13:40:09Z", "pr_url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/593", "timeline": [{"oid": "e88ee0e6b0ba6ca299f97d85a840b727f31d2d03", "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/e88ee0e6b0ba6ca299f97d85a840b727f31d2d03", "message": "Unify fastpass version", "committedDate": "2020-12-03T13:39:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MDc2Mw==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/593#discussion_r535250763", "body": "What happens if `fastpass/bin/fastpass` doesn't exist? For instance, what if I use this plugin in any other repo? Should we return an empty optional if the file doesn't exist?", "bodyText": "What happens if fastpass/bin/fastpass doesn't exist? For instance, what if I use this plugin in any other repo? Should we return an empty optional if the file doesn't exist?", "bodyHTML": "<p dir=\"auto\">What happens if <code>fastpass/bin/fastpass</code> doesn't exist? For instance, what if I use this plugin in any other repo? Should we return an empty optional if the file doesn't exist?</p>", "author": "Duhemm", "createdAt": "2020-12-03T14:02:02Z", "path": "src/com/twitter/intellij/pants/bsp/FastpassUtils.java", "diffHunk": "@@ -68,32 +69,27 @@\n     });\n   }\n \n-\n-  private static List<String> coursierPart(){\n-    return Arrays.asList(\"launch\", \"org.scalameta:fastpass_2.12:latest.stable\",\n-                         \"--main\", \"scala.meta.fastpass.Fastpass\",\n-                         \"--\"\n-    );\n-  }\n-\n-  public static Path coursierPath() throws IOException {\n-    Path destination = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"pants-plugin-coursier\");\n-    if (!Files.exists(destination)) {\n-      URL url = new URL(\"https://git.io/coursier-cli\");\n-      Files.copy(url.openConnection().getInputStream(), destination);\n-      destination.toFile().setExecutable(true);\n+  @NotNull\n+  public static GeneralCommandLine makeFastpassCommand(Project project, @NotNull Collection<String> amendPart) {\n+    Optional<Path> fastpassPath = getFastpassPath(project);\n+    if(fastpassPath.isPresent()) {\n+      GeneralCommandLine commandLine = PantsUtil.defaultCommandLine(project);\n+      commandLine.setExePath(fastpassPath.get().toString());\n+      commandLine.addParameters(new ArrayList<>(amendPart));\n+      return commandLine;\n+    } else {\n+      throw new PantsException(\"Could not find fastpass executable\");\n     }\n-    return destination;\n   }\n \n   @NotNull\n-  public static GeneralCommandLine makeFastpassCommand(Project project, @NotNull Collection<String> amendPart) throws IOException {\n-    GeneralCommandLine commandLine = PantsUtil.defaultCommandLine(project);\n-    String coursier = FastpassUtils.coursierPath().toString();\n-    commandLine.setExePath(coursier);\n-    commandLine.addParameters(coursierPart());\n-    commandLine.addParameters(new ArrayList<>(amendPart));\n-    return commandLine;\n+  public static Optional<Path> getFastpassPath(Project project) {\n+    Optional<Path> root = PantsUtil.findPantsExecutable(project).map(VirtualFile::getParent).map(r -> Paths.get(r.getCanonicalPath()));\n+    if(!root.isPresent()){\n+      throw new PantsException(\"Not a pants project\");\n+    }\n+\n+    return root.map(r -> r.resolve(\"fastpass/bin/fastpass\"));", "originalCommit": "e88ee0e6b0ba6ca299f97d85a840b727f31d2d03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1OTAxNg==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/593#discussion_r535259016", "bodyText": "Done", "author": "tpasternak", "createdAt": "2020-12-03T14:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MDc2Mw=="}], "type": "inlineReview"}, {"oid": "409baccbdabf3e9bd6d91da7ecc404d5e4f468ec", "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/409baccbdabf3e9bd6d91da7ecc404d5e4f468ec", "message": "Return empty() if fastpass/bin/fastpass path does not exist", "committedDate": "2020-12-03T14:11:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MDg2Mg==", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/593#discussion_r535290862", "body": "I think it would be easier to understand that way:\r\n```suggestion\r\n    return fastpassPath.filter(p -> p.toFile().exists());\r\n```", "bodyText": "I think it would be easier to understand that way:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(fastpassPath.map(p -> p.toFile().exists()).orElse(false)){\n          \n          \n            \n                  return fastpassPath;\n          \n          \n            \n                } else {\n          \n          \n            \n                  return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                return fastpassPath.filter(p -> p.toFile().exists());", "bodyHTML": "<p dir=\"auto\">I think it would be easier to understand that way:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span>(fastpassPath<span class=\"pl-k\">.</span>map(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> p<span class=\"pl-k\">.</span>toFile()<span class=\"pl-k\">.</span>exists())<span class=\"pl-k\">.</span>orElse(<span class=\"pl-c1\">false</span>)){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> fastpassPath;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> fastpassPath<span class=\"pl-k\">.</span>filter(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> p<span class=\"pl-k\">.</span>toFile()<span class=\"pl-k\">.</span>exists());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Duhemm", "createdAt": "2020-12-03T14:45:26Z", "path": "src/com/twitter/intellij/pants/bsp/FastpassUtils.java", "diffHunk": "@@ -68,32 +69,32 @@\n     });\n   }\n \n-\n-  private static List<String> coursierPart(){\n-    return Arrays.asList(\"launch\", \"org.scalameta:fastpass_2.12:latest.stable\",\n-                         \"--main\", \"scala.meta.fastpass.Fastpass\",\n-                         \"--\"\n-    );\n-  }\n-\n-  public static Path coursierPath() throws IOException {\n-    Path destination = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"pants-plugin-coursier\");\n-    if (!Files.exists(destination)) {\n-      URL url = new URL(\"https://git.io/coursier-cli\");\n-      Files.copy(url.openConnection().getInputStream(), destination);\n-      destination.toFile().setExecutable(true);\n+  @NotNull\n+  public static GeneralCommandLine makeFastpassCommand(Project project, @NotNull Collection<String> amendPart) {\n+    Optional<Path> fastpassPath = getFastpassPath(project);\n+    if(fastpassPath.isPresent()) {\n+      GeneralCommandLine commandLine = PantsUtil.defaultCommandLine(project);\n+      commandLine.setExePath(fastpassPath.get().toString());\n+      commandLine.addParameters(new ArrayList<>(amendPart));\n+      return commandLine;\n+    } else {\n+      throw new PantsException(\"Could not find fastpass executable\");\n     }\n-    return destination;\n   }\n \n   @NotNull\n-  public static GeneralCommandLine makeFastpassCommand(Project project, @NotNull Collection<String> amendPart) throws IOException {\n-    GeneralCommandLine commandLine = PantsUtil.defaultCommandLine(project);\n-    String coursier = FastpassUtils.coursierPath().toString();\n-    commandLine.setExePath(coursier);\n-    commandLine.addParameters(coursierPart());\n-    commandLine.addParameters(new ArrayList<>(amendPart));\n-    return commandLine;\n+  public static Optional<Path> getFastpassPath(Project project) {\n+    Optional<Path> root = PantsUtil.findPantsExecutable(project).map(VirtualFile::getParent).map(r -> Paths.get(r.getCanonicalPath()));\n+    if(!root.isPresent()){\n+      throw new PantsException(\"Not a Pants project\");\n+    }\n+\n+    Optional<Path> fastpassPath = root.map(r -> r.resolve(\"fastpass/bin/fastpass\"));\n+    if(fastpassPath.map(p -> p.toFile().exists()).orElse(false)){\n+      return fastpassPath;\n+    } else {\n+      return Optional.empty();\n+    }", "originalCommit": "409baccbdabf3e9bd6d91da7ecc404d5e4f468ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}