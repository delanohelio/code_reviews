{"pr_number": 6864, "pr_title": "Fix PBF remember password", "pr_author": "DanVanAtta", "pr_createdAt": "2020-06-26T05:59:55Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6864", "timeline": [{"oid": "7c793bcbca8ca02df86e77ad1e0f84a36810be5f", "url": "https://github.com/triplea-game/triplea/commit/7c793bcbca8ca02df86e77ad1e0f84a36810be5f", "message": "Fix PBF remember password\n\n1. Change the dummy password length to match users password length.\n   Note, we write a dummy password to the UI to avoid having to\n   write the real password as a string value back to the UI.\n\n2. Fix PBF password being over-written by the dummy password by\n   detecting if we are over-writing using a dummy password. The UI\n   was not supposed to fire an event unless the user was typing\n   a real password into the password field, though UI events\n   can be fired for other reasons which will send a dummy password\n   for persistence to the back-end. Ignoring a dummy password\n   value resolves this, otherwise the users password is overwritten.", "committedDate": "2020-06-26T05:55:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzY4NA==", "url": "https://github.com/triplea-game/triplea/pull/6864#discussion_r446037684", "body": "```suggestion\r\n    return password.length > 0 && Arrays.stream(password).allMatch(c -> c == '*');\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                boolean dummyPassword = true;\n          \n          \n            \n                for (final Character passwordChar : password) {\n          \n          \n            \n                  if (passwordChar != '*') {\n          \n          \n            \n                    dummyPassword = false;\n          \n          \n            \n                    break;\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n                return password.length > 0 && dummyPassword;\n          \n          \n            \n                return password.length > 0 && Arrays.stream(password).allMatch(c -> c == '*');", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">boolean</span> dummyPassword <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Character</span> passwordChar <span class=\"pl-k\">:</span> password) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (passwordChar <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*<span class=\"pl-pds\">'</span></span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        dummyPassword <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">break</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> password<span class=\"pl-k\">.</span>length <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> dummyPassword;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> password<span class=\"pl-k\">.</span>length <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>stream(password)<span class=\"pl-k\">.</span>allMatch(c <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> c <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>*<span class=\"pl-pds\">'</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "RoiEXLab", "createdAt": "2020-06-26T08:17:22Z", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbf/ForumPosterEditorViewModel.java", "diffHunk": "@@ -62,6 +71,17 @@ void setForumPassword(final char[] password) {\n     readyCallback.run();\n   }\n \n+  private boolean isDummyPassword(final char[] password) {\n+    boolean dummyPassword = true;\n+    for (final Character passwordChar : password) {\n+      if (passwordChar != '*') {\n+        dummyPassword = false;\n+        break;\n+      }\n+    }\n+    return password.length > 0 && dummyPassword;", "originalCommit": "7c793bcbca8ca02df86e77ad1e0f84a36810be5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA2MTg1NA==", "url": "https://github.com/triplea-game/triplea/pull/6864#discussion_r446061854", "bodyText": "Arrays.stream() kept doing a Stream<char[]> instead of Stream<Character>, I'll be curious if this works.", "author": "DanVanAtta", "createdAt": "2020-06-26T09:04:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzY4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA3NTY0MQ==", "url": "https://github.com/triplea-game/triplea/pull/6864#discussion_r446075641", "bodyText": "You're right forgot this detail, however I found this approach:\nCharBuffer.wrap(abc).chars().allMatch(c -> c == '*')", "author": "RoiEXLab", "createdAt": "2020-06-26T09:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzY4NA=="}], "type": "inlineReview"}]}