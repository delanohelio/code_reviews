{"pr_number": 2487, "pr_title": "Read process output stream before waiting the exit code of the process", "pr_author": "umutkocasarac", "pr_createdAt": "2020-09-15T08:20:26Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2487", "timeline": [{"oid": "e8b439d1997b1cce1502a6c950063ba1bf36e886", "url": "https://github.com/fabric8io/kubernetes-client/commit/e8b439d1997b1cce1502a6c950063ba1bf36e886", "message": "Resolve Conflict", "committedDate": "2020-09-15T06:58:04Z", "type": "commit"}, {"oid": "32d4cef0a241c78f3b58c0ad3f4eccef2b33f19e", "url": "https://github.com/fabric8io/kubernetes-client/commit/32d4cef0a241c78f3b58c0ad3f4eccef2b33f19e", "message": "Read process output stream before waiting the exit code of the process", "committedDate": "2020-09-15T08:17:35Z", "type": "commit"}, {"oid": "e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "url": "https://github.com/fabric8io/kubernetes-client/commit/e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "message": "Merge branch 'master' into iss_2458", "committedDate": "2020-09-21T08:37:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r491903604", "body": "In this excerpt you are no longer considering the error stream.\r\n\r\nWould something like this work with your solution?\r\n```suggestion\r\n      final String errorOutput = IOHelpers.readFully(p.getErrorStream());\r\n      final String standardOutput = IOHelpers.readFully(p.getInputStream());\r\n      if (p.waitFor() != 0) {\r\n        LOGGER.warn(errorOutput);\r\n      }\r\n      ExecCredential ec = Serialization.unmarshal(standardOutput, ExecCredential.class);\r\n```\r\n", "bodyText": "In this excerpt you are no longer considering the error stream.\nWould something like this work with your solution?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  StringBuilder sb = new StringBuilder();\n          \n          \n            \n                  try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n          \n          \n            \n                    String line;\n          \n          \n            \n                    while ((line = in.readLine()) != null) {\n          \n          \n            \n                      sb.append(line);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  if (p.waitFor() != 0) {\n          \n          \n            \n                    LOGGER.warn(IOHelpers.readFully(p.getErrorStream()));\n          \n          \n            \n                    LOGGER.warn(sb.toString());\n          \n          \n            \n                  }\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(p.getInputStream(), ExecCredential.class);\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(sb.toString(), ExecCredential.class);\n          \n          \n            \n                  final String errorOutput = IOHelpers.readFully(p.getErrorStream());\n          \n          \n            \n                  final String standardOutput = IOHelpers.readFully(p.getInputStream());\n          \n          \n            \n                  if (p.waitFor() != 0) {\n          \n          \n            \n                    LOGGER.warn(errorOutput);\n          \n          \n            \n                  }\n          \n          \n            \n                  ExecCredential ec = Serialization.unmarshal(standardOutput, ExecCredential.class);", "bodyHTML": "<p dir=\"auto\">In this excerpt you are no longer considering the error stream.</p>\n<p dir=\"auto\">Would something like this work with your solution?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">StringBuilder</span> sb <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringBuilder</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">BufferedReader</span> in <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BufferedReader</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">InputStreamReader</span>(p<span class=\"pl-k\">.</span>getInputStream()))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> line;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">while</span> ((line <span class=\"pl-k\">=</span> in<span class=\"pl-k\">.</span>readLine()) <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          sb<span class=\"pl-k\">.</span>append(line);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (p<span class=\"pl-k\">.</span>waitFor() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-smi\">IOHelpers</span><span class=\"pl-k\">.</span>readFully(p<span class=\"pl-k\">.</span>getErrorStream()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(sb<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ExecCredential</span> ec <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Serialization</span><span class=\"pl-k\">.</span>unmarshal(p<span class=\"pl-k\">.</span>getInputStream(), <span class=\"pl-smi\">ExecCredential</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ExecCredential</span> ec <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Serialization</span><span class=\"pl-k\">.</span>unmarshal(sb<span class=\"pl-k\">.</span>toString(), <span class=\"pl-smi\">ExecCredential</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> errorOutput <span class=\"pl-k\">=</span> <span class=\"pl-smi\">IOHelpers</span><span class=\"pl-k\">.</span>readFully(p<span class=\"pl-k\">.</span>getErrorStream());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> standardOutput <span class=\"pl-k\">=</span> <span class=\"pl-smi\">IOHelpers</span><span class=\"pl-k\">.</span>readFully(p<span class=\"pl-k\">.</span>getInputStream());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (p<span class=\"pl-k\">.</span>waitFor() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(errorOutput);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ExecCredential</span> ec <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Serialization</span><span class=\"pl-k\">.</span>unmarshal(standardOutput, <span class=\"pl-smi\">ExecCredential</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "manusa", "createdAt": "2020-09-21T09:28:41Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/Config.java", "diffHunk": "@@ -634,15 +634,23 @@ protected static ExecCredential getExecCredentialFromExecConfig(ExecConfig exec,\n       List<ExecEnvVar> env = exec.getEnv();\n       // TODO check behavior of tty & stdin\n       ProcessBuilder pb = new ProcessBuilder(getAuthenticatorCommandFromExecConfig(exec, configFile, Utils.getSystemPathVariable()));\n+      pb.redirectErrorStream(true);\n       if (env != null) {\n         Map<String, String> environment = pb.environment();\n         env.forEach(var -> environment.put(var.getName(), var.getValue()));\n       }\n       Process p = pb.start();\n+      StringBuilder sb = new StringBuilder();\n+      try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n+        String line;\n+        while ((line = in.readLine()) != null) {\n+          sb.append(line);\n+        }\n+      }\n       if (p.waitFor() != 0) {\n-        LOGGER.warn(IOHelpers.readFully(p.getErrorStream()));\n+        LOGGER.warn(sb.toString());\n       }\n-      ExecCredential ec = Serialization.unmarshal(p.getInputStream(), ExecCredential.class);\n+      ExecCredential ec = Serialization.unmarshal(sb.toString(), ExecCredential.class);", "originalCommit": "e17125cbd279b7b84b86bf4c195bd0ab0d28d5ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwMjAyMw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r492502023", "bodyText": "I am redirecting the error stream to outputstream with the following code\npb.redirectErrorStream(true);\nand if the command exit code is other than 0 then reading the outputstream as error log, so we don't need to read ErrorStream anymore", "author": "umutkocasarac", "createdAt": "2020-09-22T06:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwOTE4OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493209188", "bodyText": "Oh, sorry I missed that line.\nHowever, I still don't see why we removed IOHelpers#readFully method in favor of the read stream boilerplate code.", "author": "manusa", "createdAt": "2020-09-23T05:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzY0OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493263649", "bodyText": "@manusa because we have redirected all output to outputstream of the process and that will be read with the following code.\ntry (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n        String line;\n        while ((line = in.readLine()) != null) {\n          sb.append(line);\n        }\n      }\n\nand in case of failure sb variable will have the error messages\nIn case of error sb variable will have the error output", "author": "umutkocasarac", "createdAt": "2020-09-23T07:39:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2NjUxNw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493266517", "bodyText": "Yes, but can't seem to understand why that stream can't be read using\nfinal String output = IOHelpers.readFully(p.getInputStream());\nwhich in essence encapsulates that expanded code (or should).", "author": "manusa", "createdAt": "2020-09-23T07:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODA3Mw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493278073", "bodyText": "I could read the output with that command however that helper method was not closing the anything. If you want I could change the\ntry (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) { String line; while ((line = in.readLine()) != null) { sb.append(line); } } \nwith final String output = IOHelpers.readFully(p.getInputStream());", "author": "umutkocasarac", "createdAt": "2020-09-23T07:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI5Njk1Nw==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493296957", "bodyText": "This should take care of closing the stream and avoid extra boilerplate code:\nString output;\ntry (InputStream is = p.getInputStream()) {\n  output = IOHelpers.readFully(is);\n}\nMy main concern is that I wouldn't like to keep same read stream logic lying around several parts of the codebase. It would be hard then to maintain buffer sizes or other stream reading configurations.\nIOHelpers also requires a refactor. Besides, in case we want to delegate this to some library (e.g. commons-io), we'll only need to change this in a single place.", "author": "manusa", "createdAt": "2020-09-23T08:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQwMTY4OA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493401688", "bodyText": "It is updated with IOHelpers", "author": "umutkocasarac", "createdAt": "2020-09-23T10:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwOTc2Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2487#discussion_r493509762", "bodyText": "Great, thx!", "author": "manusa", "createdAt": "2020-09-23T12:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwMzYwNA=="}], "type": "inlineReview"}, {"oid": "12839a5e934540061436a9551ced4655239a48f9", "url": "https://github.com/fabric8io/kubernetes-client/commit/12839a5e934540061436a9551ced4655239a48f9", "message": "IOHelper used for reading message", "committedDate": "2020-09-23T09:35:36Z", "type": "commit"}, {"oid": "6b20cb70eff324962d9e58b5d4c77f6642671894", "url": "https://github.com/fabric8io/kubernetes-client/commit/6b20cb70eff324962d9e58b5d4c77f6642671894", "message": "Merge branch 'iss_2458' of github.com-personal:umutkocasarac/kubernetes-client into iss_2458", "committedDate": "2020-09-23T09:41:56Z", "type": "commit"}]}