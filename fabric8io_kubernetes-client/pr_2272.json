{"pr_number": 2272, "pr_title": "Fix #1868: Add Support for rolling update", "pr_author": "rohanKanojia", "pr_createdAt": "2020-06-08T16:06:56Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2272", "timeline": [{"oid": "45ae281ce743a0409acb3d0dbddb73a971dd082b", "url": "https://github.com/fabric8io/kubernetes-client/commit/45ae281ce743a0409acb3d0dbddb73a971dd082b", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-08T16:34:56Z", "type": "forcePushed"}, {"oid": "ab6ab044c53cd135f9c22a2a1584664d4a173ab9", "url": "https://github.com/fabric8io/kubernetes-client/commit/ab6ab044c53cd135f9c22a2a1584664d4a173ab9", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-09T09:52:18Z", "type": "forcePushed"}, {"oid": "c869fe3043ac26b1a40387704fe40e75c4e5f968", "url": "https://github.com/fabric8io/kubernetes-client/commit/c869fe3043ac26b1a40387704fe40e75c4e5f968", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-11T10:02:29Z", "type": "forcePushed"}, {"oid": "01e10c414cfac5c533587c976d0482e47f49a1b5", "url": "https://github.com/fabric8io/kubernetes-client/commit/01e10c414cfac5c533587c976d0482e47f49a1b5", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-11T11:22:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3MTQ1Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2272#discussion_r439971452", "body": "nit: when retrieving the first item of a collection, in general it's better to do\r\n```suggestion\r\n    Container container = oldRC.getSpec().getTemplate().getSpec().getContainers().iterator().next();\r\n```\r\nThis won't be affected by performance issues for specific collection implementations (imagine containers was some sort of LinkedList where access by index was heavily penalized)", "bodyText": "nit: when retrieving the first item of a collection, in general it's better to do\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Container container = oldRC.getSpec().getTemplate().getSpec().getContainers().get(0);\n          \n          \n            \n                Container container = oldRC.getSpec().getTemplate().getSpec().getContainers().iterator().next();\n          \n      \n    \n    \n  \n\nThis won't be affected by performance issues for specific collection implementations (imagine containers was some sort of LinkedList where access by index was heavily penalized)", "bodyHTML": "<p dir=\"auto\">nit: when retrieving the first item of a collection, in general it's better to do</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">Container</span> container <span class=\"pl-k\">=</span> oldRC<span class=\"pl-k\">.</span>getSpec()<span class=\"pl-k\">.</span>getTemplate()<span class=\"pl-k\">.</span>getSpec()<span class=\"pl-k\">.</span>getContainers()<span class=\"pl-k\">.</span><span class=\"x x-first\">get(</span><span class=\"pl-c1 x x-last\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Container</span> container <span class=\"pl-k\">=</span> oldRC<span class=\"pl-k\">.</span>getSpec()<span class=\"pl-k\">.</span>getTemplate()<span class=\"pl-k\">.</span>getSpec()<span class=\"pl-k\">.</span>getContainers()<span class=\"pl-k\">.</span><span class=\"x x-first\">iterator()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">next(</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This won't be affected by performance issues for specific collection implementations (imagine containers was some sort of LinkedList where access by index was heavily penalized)</p>", "author": "manusa", "createdAt": "2020-06-15T07:11:48Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/apps/v1/ReplicaSetOperationsImpl.java", "diffHunk": "@@ -78,23 +77,57 @@ public ReplicaSet updateImage(String image) {\n     ReplicaSet oldRC = get();\n \n     if (oldRC == null) {\n-      throw new KubernetesClientException(\"Existing replica set doesn't exist\");\n+      throw new KubernetesClientException(\"Existing replication controller doesn't exist\");\n     }\n     if (oldRC.getSpec().getTemplate().getSpec().getContainers().size() > 1) {\n       throw new KubernetesClientException(\"Image update is not supported for multicontainer pods\");\n     }\n-    if (oldRC.getSpec().getTemplate().getSpec().getContainers().size() == 0) {\n+    if (oldRC.getSpec().getTemplate().getSpec().getContainers().isEmpty()) {\n       throw new KubernetesClientException(\"Pod has no containers!\");\n     }\n \n-    Container updatedContainer = new ContainerBuilder(oldRC.getSpec().getTemplate().getSpec().getContainers().iterator().next()).withImage(image).build();\n+    Container container = oldRC.getSpec().getTemplate().getSpec().getContainers().get(0);", "originalCommit": "01e10c414cfac5c533587c976d0482e47f49a1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b3ea32b6a109fcd434f669e9f0e02bf811e245df", "url": "https://github.com/fabric8io/kubernetes-client/commit/b3ea32b6a109fcd434f669e9f0e02bf811e245df", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-15T12:53:23Z", "type": "commit"}, {"oid": "b3ea32b6a109fcd434f669e9f0e02bf811e245df", "url": "https://github.com/fabric8io/kubernetes-client/commit/b3ea32b6a109fcd434f669e9f0e02bf811e245df", "message": "Fix #1868: Add Support for rolling update", "committedDate": "2020-06-15T12:53:23Z", "type": "forcePushed"}]}