{"pr_number": 2234, "pr_title": "Fix #2218: Uberjar: Package rewrite issues in META-INF/services", "pr_author": "rohanKanojia", "pr_createdAt": "2020-05-15T18:09:36Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2234", "timeline": [{"oid": "80bbd0aeeb000a62cac8c39c2fae9ab29a390c21", "url": "https://github.com/fabric8io/kubernetes-client/commit/80bbd0aeeb000a62cac8c39c2fae9ab29a390c21", "message": "Fix #2218: Uberjar: Package rewrite issues in META-INF/services\n\nLooks like space in `resource-handler-services.vm` file was the root cause of\nthe issue :laughing:", "committedDate": "2020-05-18T06:48:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMTQwOQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2234#discussion_r426511409", "body": "This method is quite dangerous as it is it, you can replace by something more deterministic (e.g. unmarshal pom.xml and access specific node):\r\n```suggestion\r\n  private String getProjectVersion() throws Exception {\r\n    final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\r\n    final DocumentBuilder builder = factory.newDocumentBuilder();\r\n    try (final FileInputStream fis = new FileInputStream(pomFile)) {\r\n      final Document pom = builder.parse(fis);\r\n      final XPath xPath = XPathFactory.newInstance().newXPath();\r\n      return xPath.compile(\"/project/parent/version\").evaluate(pom);\r\n    }\r\n  }\r\n```", "bodyText": "This method is quite dangerous as it is it, you can replace by something more deterministic (e.g. unmarshal pom.xml and access specific node):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private String getProjectVersion() throws IOException {\n          \n          \n            \n                List<String> pomLines = readPomLines();\n          \n          \n            \n                for (String line : pomLines) {\n          \n          \n            \n                  if (line.contains(\"<version>\")) {\n          \n          \n            \n                    line = line.replaceAll(\"version>\", \"\");\n          \n          \n            \n                    line = line.replaceAll(\"/\", \"\");\n          \n          \n            \n                    line = line.replaceAll(\"<\", \"\");\n          \n          \n            \n                    line = line.replaceAll(\" \", \"\");\n          \n          \n            \n                    return line;\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n                return null;\n          \n          \n            \n              }\n          \n          \n            \n              private String getProjectVersion() throws Exception {\n          \n          \n            \n                final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n          \n          \n            \n                final DocumentBuilder builder = factory.newDocumentBuilder();\n          \n          \n            \n                try (final FileInputStream fis = new FileInputStream(pomFile)) {\n          \n          \n            \n                  final Document pom = builder.parse(fis);\n          \n          \n            \n                  final XPath xPath = XPathFactory.newInstance().newXPath();\n          \n          \n            \n                  return xPath.compile(\"/project/parent/version\").evaluate(pom);\n          \n          \n            \n                }\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">This method is quite dangerous as it is it, you can replace by something more deterministic (e.g. unmarshal pom.xml and access specific node):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"176\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> getProjectVersion() throws <span class=\"pl-smi\">IOException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"177\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span> pomLines <span class=\"pl-k\">=</span> readPomLines();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"178\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">String</span> line <span class=\"pl-k\">:</span> pomLines) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"179\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (line<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;version&gt;<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"180\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        line <span class=\"pl-k\">=</span> line<span class=\"pl-k\">.</span>replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>version&gt;<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"181\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        line <span class=\"pl-k\">=</span> line<span class=\"pl-k\">.</span>replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"182\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        line <span class=\"pl-k\">=</span> line<span class=\"pl-k\">.</span>replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"183\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        line <span class=\"pl-k\">=</span> line<span class=\"pl-k\">.</span>replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"184\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> line;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"185\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"186\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"187\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"188\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"176\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> getProjectVersion() throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"177\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">DocumentBuilderFactory</span> factory <span class=\"pl-k\">=</span> <span class=\"pl-smi\">DocumentBuilderFactory</span><span class=\"pl-k\">.</span>newInstance();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"178\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">DocumentBuilder</span> builder <span class=\"pl-k\">=</span> factory<span class=\"pl-k\">.</span>newDocumentBuilder();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"179\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">try</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">FileInputStream</span> fis <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FileInputStream</span>(pomFile)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"180\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Document</span> pom <span class=\"pl-k\">=</span> builder<span class=\"pl-k\">.</span>parse(fis);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"181\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">XPath</span> xPath <span class=\"pl-k\">=</span> <span class=\"pl-smi\">XPathFactory</span><span class=\"pl-k\">.</span>newInstance()<span class=\"pl-k\">.</span>newXPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"182\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> xPath<span class=\"pl-k\">.</span>compile(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/project/parent/version<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>evaluate(pom);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"183\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"184\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "manusa", "createdAt": "2020-05-18T10:01:22Z", "path": "uberjar/src/test/java/io/fabric8/kubernetes/clnt/UberJarTest.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/**\n+ * Copyright (C) 2015 Red Hat, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.fabric8.kubernetes.clnt;\n+\n+import org.junit.Rule;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.migrationsupport.rules.EnableRuleMigrationSupport;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.List;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipInputStream;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@EnableRuleMigrationSupport\n+public class UberJarTest {\n+  private static final String OUTPUT_DIR = System.getProperty(\"user.dir\") + File.separator + \"target\";\n+  private static final File pomFile = new File(System.getProperty(\"user.dir\") + File.separator + \"pom.xml\");\n+  private static final String JAR_NAME_SEPARATOR = \"-\";\n+  private static final String JAR_SUFFIX = \".jar\";\n+  private static final String ARTIFACT_ID = \"kubernetes-openshift-uberjar\";\n+\n+  @Rule\n+  public TemporaryFolder folder = new TemporaryFolder();\n+\n+  @Test\n+  @DisplayName(\"UberJar should be generated and should contain necessary files\")\n+  public void testUberJar() throws IOException {\n+    // Given\n+    String projectVersion = getProjectVersion();\n+    assertNotNull(projectVersion);\n+    String uberJarFilePath = OUTPUT_DIR + File.separator + ARTIFACT_ID + JAR_NAME_SEPARATOR + projectVersion + JAR_SUFFIX;\n+\n+    // When\n+    File uberJar = new File(uberJarFilePath);\n+    File jarExtractedDir = folder.newFolder(\"extractedJar\");\n+    unzip(uberJar.getAbsolutePath(), jarExtractedDir.getAbsolutePath());\n+\n+    // Then\n+    assertTrue(uberJar.exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/builder/Builder.class\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/builder/Visitor.class\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/admission\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/apps\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/autoscaling\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/coordination\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/extensions\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/policy\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/settings\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/admissionregistration\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/authentication\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/batch\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/discovery\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/metrics\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/rbac\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/storage\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/authorization\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/client/dsl\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/client/handlers\").exists());\n+    File resourceHandlerServiceFile = getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.client.ResourceHandler\");\n+    assertTrue(resourceHandlerServiceFile.exists());\n+    assertTrue(containsOpenShiftKubernetesResources(resourceHandlerServiceFile, null, null));\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.client.ExtensionAdapter\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.client.ServiceToURLProvider\").exists());\n+  }\n+\n+  @Test\n+  public void testUberJarVersioned() throws IOException {\n+    // Given\n+    String projectVersion = getProjectVersion();\n+    assertNotNull(projectVersion);\n+    String majorVersion = getMajorVersion(projectVersion);\n+    String minorVersion = getMinorVersion(projectVersion);\n+    String versionedJarFilePath = OUTPUT_DIR + File.separator + ARTIFACT_ID + JAR_NAME_SEPARATOR + projectVersion + JAR_NAME_SEPARATOR + \"versioned\" + JAR_SUFFIX;\n+\n+    // When\n+    File uberJarVersioned = new File(versionedJarFilePath);\n+    File jarExtractedDir = folder.newFolder(\"extractedJar\");\n+    unzip(uberJarVersioned.getAbsolutePath(), jarExtractedDir.getAbsolutePath());\n+\n+    // Then\n+    assertTrue(uberJarVersioned.exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/builder/v\" + majorVersion + \"_\" + minorVersion + \"/Builder.class\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/builder/v\" + majorVersion + \"_\" + minorVersion + \"/Visitor.class\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/admission\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/apps\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/autoscaling\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/coordination\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/extensions\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/policy\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/settings\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/admissionregistration\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/authentication\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/batch\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/discovery\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/metrics\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/rbac\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/storage\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/api/model/v\" + majorVersion + \"_\" + minorVersion + \"/authorization\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/clnt/v\" + majorVersion + \"_\" + minorVersion + \"/dsl\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"io/fabric8/kubernetes/clnt/v\" + majorVersion + \"_\" + minorVersion + \"/handlers\").exists());\n+    File resourceHandlerServiceFile = getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.clnt.v\" + majorVersion + \"_\" + minorVersion + \".ResourceHandler\");\n+    assertTrue(resourceHandlerServiceFile.exists());\n+    assertTrue(containsOpenShiftKubernetesResources(resourceHandlerServiceFile, majorVersion, minorVersion));\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.clnt.v\" + majorVersion + \"_\" + minorVersion + \".ExtensionAdapter\").exists());\n+    assertTrue(getFileInDirectory(jarExtractedDir, \"META-INF/services/io.fabric8.kubernetes.clnt.v\" + majorVersion + \"_\" + minorVersion + \".ServiceToURLProvider\").exists());\n+  }\n+\n+  private boolean containsOpenShiftKubernetesResources(File resourceHandlerServiceFile, String majorVersion, String minorVersion) throws IOException {\n+    List<String> lines = Files.readAllLines(resourceHandlerServiceFile.toPath());\n+    final String deploymentConfigOpenShiftHandler = (majorVersion != null && minorVersion != null) ?\n+      \"io.fabric8.openshift.clnt.v\" + majorVersion + \"_\" + minorVersion + \".handlers.DeploymentConfigHandler\" :\n+      \"io.fabric8.openshift.client.handlers.DeploymentConfigHandler\";\n+    final String deploymentKubernetesHandler = (majorVersion != null && minorVersion != null) ?\n+      \"io.fabric8.kubernetes.clnt.v\" + majorVersion + \"_\" + minorVersion + \".handlers.apps.v1.DeploymentHandler\" :\n+      \"io.fabric8.kubernetes.client.handlers.apps.v1.DeploymentHandler\";\n+\n+    return lines.stream().anyMatch(line -> line.contains(deploymentConfigOpenShiftHandler)) &&\n+      lines.stream().anyMatch(line -> line.contains(deploymentKubernetesHandler));\n+  }\n+\n+  private String getMajorVersion(String projectVersion) {\n+    return projectVersion.split(\"\\\\.\")[0];\n+  }\n+\n+  private String getMinorVersion(String projectVersion) {\n+    String[] versionParts = projectVersion.split(\"\\\\.\");\n+    String minorPatchVersion = projectVersion.substring(versionParts[0].length() + 1);\n+    if (minorPatchVersion.contains(\"-\")) { // SNAPSHOT VERSION\n+      return minorPatchVersion.split(\"-\")[0];\n+    } else { // RELEASE VERSION\n+      return versionParts[1];\n+    }\n+  }\n+\n+  private File getFileInDirectory(File parentFile, String pathToFile) {\n+    pathToFile = pathToFile.replaceAll(\"/\", File.separator);\n+    return new File(parentFile, pathToFile);\n+  }\n+\n+  private String getProjectVersion() throws IOException {\n+    List<String> pomLines = readPomLines();\n+    for (String line : pomLines) {\n+      if (line.contains(\"<version>\")) {\n+        line = line.replaceAll(\"version>\", \"\");\n+        line = line.replaceAll(\"/\", \"\");\n+        line = line.replaceAll(\"<\", \"\");\n+        line = line.replaceAll(\" \", \"\");\n+        return line;\n+      }\n+    }\n+    return null;\n+  }", "originalCommit": "80bbd0aeeb000a62cac8c39c2fae9ab29a390c21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fcef2d67510d534529ea9d23add38de5dcb27332", "url": "https://github.com/fabric8io/kubernetes-client/commit/fcef2d67510d534529ea9d23add38de5dcb27332", "message": "Fix #2218: Uberjar: Package rewrite issues in META-INF/services\n\nLooks like space in `resource-handler-services.vm` file was the root cause of\nthe issue :laughing:", "committedDate": "2020-05-19T11:46:04Z", "type": "forcePushed"}, {"oid": "88c9a78b78c57a804b095c8b833242df69add861", "url": "https://github.com/fabric8io/kubernetes-client/commit/88c9a78b78c57a804b095c8b833242df69add861", "message": "Fix #2218: Uberjar: Package rewrite issues in META-INF/services\n\nLooks like space in `resource-handler-services.vm` file was the root cause of\nthe issue :laughing:", "committedDate": "2020-05-20T18:08:16Z", "type": "commit"}, {"oid": "88c9a78b78c57a804b095c8b833242df69add861", "url": "https://github.com/fabric8io/kubernetes-client/commit/88c9a78b78c57a804b095c8b833242df69add861", "message": "Fix #2218: Uberjar: Package rewrite issues in META-INF/services\n\nLooks like space in `resource-handler-services.vm` file was the root cause of\nthe issue :laughing:", "committedDate": "2020-05-20T18:08:16Z", "type": "forcePushed"}]}