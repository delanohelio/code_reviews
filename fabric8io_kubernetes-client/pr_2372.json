{"pr_number": 2372, "pr_title": "Fix #2292: Update BaseOperation#createOrReplace()", "pr_author": "rohanKanojia", "pr_createdAt": "2020-07-27T18:44:21Z", "pr_url": "https://github.com/fabric8io/kubernetes-client/pull/2372", "timeline": [{"oid": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "url": "https://github.com/fabric8io/kubernetes-client/commit/0005c580b90b1027bb7b3cd4f456e3615fe26e86", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-27T19:43:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTUwMQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461585501", "body": "I'm guessing this recurses into this function", "bodyText": "I'm guessing this recurses into this function", "bodyHTML": "<p dir=\"auto\">I'm guessing this recurses into this function</p>", "author": "manusa", "createdAt": "2020-07-28T13:37:19Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODA3NA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461588074", "bodyText": "Yes, I think previously also it was like this.", "author": "rohanKanojia", "createdAt": "2020-07-28T13:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "changed_code": [{"header": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\nindex 53c6458bd..7e548d053 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n", "chunk": "@@ -413,7 +413,6 @@ public class BaseOperation<T extends HasMetadata, L extends KubernetesResourceLi\n       return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);\n     }\n \n-    String resourceVersion = KubernetesResourceUtil.getResourceVersion(itemToCreateOrReplace);\n     try {\n       // Create\n       KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, null);\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4Njk2Mg==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461586962", "body": "Are we sure we want to reuse the resourceVersion retrieved in line 416? Or maybe use the one of the latest version retrieved from the server (427)?", "bodyText": "Are we sure we want to reuse the resourceVersion retrieved in line 416? Or maybe use the one of the latest version retrieved from the server (427)?", "bodyHTML": "<p dir=\"auto\">Are we sure we want to reuse the resourceVersion retrieved in line 416? Or maybe use the one of the latest version retrieved from the server (427)?</p>", "author": "manusa", "createdAt": "2020-07-28T13:39:21Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);\n     }\n-    if (fromServer().get() == null) {\n-      return create(item);\n-    } else {\n-      return replace(item);\n+\n+    String resourceVersion = KubernetesResourceUtil.getResourceVersion(itemToCreateOrReplace);\n+    try {\n+      // Create\n+      KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, null);\n+      return create(itemToCreateOrReplace);\n+    } catch (KubernetesClientException exception) {\n+      if (exception.getCode() != HttpURLConnection.HTTP_CONFLICT) {\n+        throw exception;\n+      }\n+\n+      // Conflict; Do Replace\n+      T itemFromServer = fromServer().get();\n+      if (ResourceCompare.equals(itemFromServer, itemToCreateOrReplace)) {\n+        // Nothing changed, ignore\n+        return itemToCreateOrReplace;\n+      } else {\n+        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, resourceVersion);", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "changed_code": [{"header": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\nindex 53c6458bd..7e548d053 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n", "chunk": "@@ -429,7 +428,7 @@ public class BaseOperation<T extends HasMetadata, L extends KubernetesResourceLi\n         // Nothing changed, ignore\n         return itemToCreateOrReplace;\n       } else {\n-        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, resourceVersion);\n+        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, KubernetesResourceUtil.getResourceVersion(itemFromServer));\n         return replace(itemToCreateOrReplace);\n       }\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461588599", "body": "Will a PUT in the server of the same resource update its resource version (propagate event to watchers, etc.)? if so, maybe this is something expected from users invoking this function. WDYT?", "bodyText": "Will a PUT in the server of the same resource update its resource version (propagate event to watchers, etc.)? if so, maybe this is something expected from users invoking this function. WDYT?", "bodyHTML": "<p dir=\"auto\">Will a PUT in the server of the same resource update its resource version (propagate event to watchers, etc.)? if so, maybe this is something expected from users invoking this function. WDYT?</p>", "author": "manusa", "createdAt": "2020-07-28T13:41:32Z", "path": "kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java", "diffHunk": "@@ -395,24 +397,41 @@ public D createOrReplaceWithNew() throws KubernetesClientException {\n \n   @Override\n   public T createOrReplace(T... items) {\n-    T item = getItem();\n+    T itemToCreateOrReplace = getItem();\n     if (items.length > 1) {\n       throw new IllegalArgumentException(\"Too many items to create.\");\n     } else if (items.length == 1) {\n-      item = items[0];\n+      itemToCreateOrReplace = items[0];\n     }\n \n-    if (item == null) {\n+    if (itemToCreateOrReplace == null) {\n       throw new IllegalArgumentException(\"Nothing to create.\");\n     }\n \n-    if (Utils.isNullOrEmpty(name) && item instanceof HasMetadata) {\n-      return withName(((HasMetadata)item).getMetadata().getName()).createOrReplace(item);\n+    if (Utils.isNullOrEmpty(name)) {\n+\n+      return withName(itemToCreateOrReplace.getMetadata().getName()).createOrReplace(itemToCreateOrReplace);\n     }\n-    if (fromServer().get() == null) {\n-      return create(item);\n-    } else {\n-      return replace(item);\n+\n+    String resourceVersion = KubernetesResourceUtil.getResourceVersion(itemToCreateOrReplace);\n+    try {\n+      // Create\n+      KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, null);\n+      return create(itemToCreateOrReplace);\n+    } catch (KubernetesClientException exception) {\n+      if (exception.getCode() != HttpURLConnection.HTTP_CONFLICT) {\n+        throw exception;\n+      }\n+\n+      // Conflict; Do Replace\n+      T itemFromServer = fromServer().get();\n+      if (ResourceCompare.equals(itemFromServer, itemToCreateOrReplace)) {\n+        // Nothing changed, ignore\n+        return itemToCreateOrReplace;", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4ODI4MQ==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r462088281", "bodyText": "I checked and doing a PUT with same resource doesn't change resource version or add any event to watcher", "author": "rohanKanojia", "createdAt": "2020-07-29T07:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "changed_code": [{"header": "diff --git a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\nindex 53c6458bd..7e548d053 100644\n--- a/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n+++ b/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/base/BaseOperation.java\n", "chunk": "@@ -429,7 +428,7 @@ public class BaseOperation<T extends HasMetadata, L extends KubernetesResourceLi\n         // Nothing changed, ignore\n         return itemToCreateOrReplace;\n       } else {\n-        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, resourceVersion);\n+        KubernetesResourceUtil.setResourceVersion(itemToCreateOrReplace, KubernetesResourceUtil.getResourceVersion(itemFromServer));\n         return replace(itemToCreateOrReplace);\n       }\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5NDc3MA==", "url": "https://github.com/fabric8io/kubernetes-client/pull/2372#discussion_r461594770", "body": "You are getting sonar issues here. In order to make sure exception is thrown in the right place:\r\n```suggestion\r\n    Pod pod = client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build());\r\n    // When\r\n    assertThrows(KubernetesClientException.class, () -> pod.createOrReplace());\r\n```\r\n\r\nSame for the rest of warnings.", "bodyText": "You are getting sonar issues here. In order to make sure exception is thrown in the right place:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThrows(KubernetesClientException.class, () -> client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build()).createOrReplace());\n          \n          \n            \n                Pod pod = client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build());\n          \n          \n            \n                // When\n          \n          \n            \n                assertThrows(KubernetesClientException.class, () -> pod.createOrReplace());\n          \n      \n    \n    \n  \n\nSame for the rest of warnings.", "bodyHTML": "<p dir=\"auto\">You are getting sonar issues here. In order to make sure exception is thrown in the right place:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first\">assertThrows(</span><span class=\"pl-smi x\">KubernetesClientException</span><span class=\"pl-k x\">.</span><span class=\"x\">class, () </span><span class=\"pl-k x\">-</span><span class=\"pl-k x x-last\">&gt;</span> client<span class=\"pl-k\">.</span>resource(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">PodBuilder</span>()<span class=\"pl-k\">.</span>withNewMetadata()<span class=\"pl-k\">.</span>withName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pod123<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>endMetadata()<span class=\"pl-k\">.</span>build<span class=\"x x-first\">())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">createOrReplace</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi x x-first\">Pod</span><span class=\"x\"> pod </span><span class=\"pl-k x x-last\">=</span> client<span class=\"pl-k\">.</span>resource(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">PodBuilder</span>()<span class=\"pl-k\">.</span>withNewMetadata()<span class=\"pl-k\">.</span>withName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pod123<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>endMetadata()<span class=\"pl-k\">.</span>build());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> When</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThrows(<span class=\"pl-smi\">KubernetesClientException</span><span class=\"pl-k\">.</span>class, () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> pod<span class=\"pl-k\">.</span>createOrReplace());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Same for the rest of warnings.</p>", "author": "manusa", "createdAt": "2020-07-28T13:49:51Z", "path": "kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java", "diffHunk": "@@ -70,10 +75,21 @@ public void testResourceCreate() throws Exception {\n   }\n \n   @Test\n-  public void testCreate() throws Exception {\n-    server.expect().get().withPath(\"/api/v1/namespaces/test/pods/pod123\").andReturn(404, new StatusBuilder().build()).always();\n+  @DisplayName(\"Should throw Exception on failed create\")\n+  void testResourceCreateFailure() {\n+    // Given\n+    server.expect().post().withPath(\"/api/v1/namespaces/test/pods\").andReturn(HttpURLConnection.HTTP_BAD_REQUEST, new PodBuilder()\n+      .withNewMetadata().withResourceVersion(\"12345\").endMetadata().build()).once();\n+    KubernetesClient client = server.getClient();\n \n-    server.expect().post().withPath(\"/api/v1/namespaces/test/pods\").andReturn(201, new PodBuilder()\n+    // When\n+    assertThrows(KubernetesClientException.class, () -> client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build()).createOrReplace());", "originalCommit": "0005c580b90b1027bb7b3cd4f456e3615fe26e86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "changed_code": [{"header": "diff --git a/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java b/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java\nindex 70c1fcdf1..4e0ffe8fa 100644\n--- a/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java\n+++ b/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock/CreateOrReplaceResourceTest.java\n", "chunk": "@@ -81,9 +84,10 @@ public class CreateOrReplaceResourceTest {\n     server.expect().post().withPath(\"/api/v1/namespaces/test/pods\").andReturn(HttpURLConnection.HTTP_BAD_REQUEST, new PodBuilder()\n       .withNewMetadata().withResourceVersion(\"12345\").endMetadata().build()).once();\n     KubernetesClient client = server.getClient();\n+    NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable<Pod, Boolean> podOperation = client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build());\n \n     // When\n-    assertThrows(KubernetesClientException.class, () -> client.resource(new PodBuilder().withNewMetadata().withName(\"pod123\").endMetadata().build()).createOrReplace());\n+    assertThrows(KubernetesClientException.class, podOperation::createOrReplace);\n   }\n \n   @Test\n", "next_change": null}]}}, {"oid": "ae070516ccd429c23b52bddc6b67981c50acd0ba", "url": "https://github.com/fabric8io/kubernetes-client/commit/ae070516ccd429c23b52bddc6b67981c50acd0ba", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-29T07:16:19Z", "type": "forcePushed"}, {"oid": "2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-31T07:04:08Z", "type": "commit"}, {"oid": "2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "url": "https://github.com/fabric8io/kubernetes-client/commit/2652139fd7b293a42b3b02d38f130bb2b5b4caf2", "message": "Fix #2292: Update BaseOperation#createOrReplace()", "committedDate": "2020-07-31T07:04:08Z", "type": "forcePushed"}]}