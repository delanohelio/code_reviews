{"pr_number": 1309, "pr_title": "Axon Server connector notifies the success or failure of the execution of an event processor split/merge instruction.", "pr_author": "saratry", "pr_createdAt": "2020-01-07T13:55:57Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1309", "timeline": [{"oid": "9a4ccdf45da76334f5addbe8b2dc30486535482a", "url": "https://github.com/AxonFramework/AxonFramework/commit/9a4ccdf45da76334f5addbe8b2dc30486535482a", "message": "Axon Server connector notifies the success or failure of the execution of a event processor split/merge instruction.", "committedDate": "2020-01-07T13:18:35Z", "type": "commit"}, {"oid": "086b897038007b145fbec3f02a6e5f738ab5e183", "url": "https://github.com/AxonFramework/AxonFramework/commit/086b897038007b145fbec3f02a6e5f738ab5e183", "message": "Fix unit test.", "committedDate": "2020-01-07T13:48:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MDc4Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364170783", "body": "```suggestion\r\n * Responsible for publishing the {@link InstructionResult} messages through a gRPC call to Axon Server.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Responsible to publish through gRPC call the {@link InstructionResult} messages to Axon Server.\n          \n          \n            \n             * Responsible for publishing the {@link InstructionResult} messages through a gRPC call to Axon Server.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Responsible</span> <span class=\"x x-first x-last\">to publish through gRPC call </span>the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">InstructionResult</span>} messages to <span class=\"pl-smi\">Axon</span> <span class=\"pl-smi\">Server</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Responsible</span> <span class=\"pl-k x x-first\">for</span><span class=\"x x-last\"> publishing </span>the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">InstructionResult</span>} messages<span class=\"x x-first x-last\"> through a gRPC call</span> to <span class=\"pl-smi\">Axon</span> <span class=\"pl-smi\">Server</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "smcvb", "createdAt": "2020-01-08T10:49:24Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/GrpcInstructionResultPublisher.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.axonframework.axonserver.connector;\n+\n+import io.axoniq.axonserver.grpc.ErrorMessage;\n+import io.axoniq.axonserver.grpc.InstructionResult;\n+import io.axoniq.axonserver.grpc.control.PlatformInboundInstruction;\n+import org.axonframework.axonserver.connector.util.ExceptionSerializer;\n+\n+import java.util.function.Supplier;\n+\n+import static io.axoniq.axonserver.grpc.ErrorMessage.newBuilder;\n+import static org.axonframework.axonserver.connector.ErrorCode.INSTRUCTION_EXECUTION_ERROR;\n+\n+/**\n+ * Responsible to publish through gRPC call the {@link InstructionResult} messages to Axon Server.", "originalCommit": "086b897038007b145fbec3f02a6e5f738ab5e183", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3MjY2Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364172666", "body": "Just changing the constructors would essentially mean a breaking changes. I however think that the amount of users constructing a `EventProcessorControlService` themselves is near zero..should be fine for once to just change the constructor then.", "bodyText": "Just changing the constructors would essentially mean a breaking changes. I however think that the amount of users constructing a EventProcessorControlService themselves is near zero..should be fine for once to just change the constructor then.", "bodyHTML": "<p dir=\"auto\">Just changing the constructors would essentially mean a breaking changes. I however think that the amount of users constructing a <code>EventProcessorControlService</code> themselves is near zero..should be fine for once to just change the constructor then.</p>", "author": "smcvb", "createdAt": "2020-01-08T10:53:49Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -58,10 +62,15 @@\n      *                                    {@link PlatformOutboundInstruction} have been received\n      * @param eventProcessorController    the {@link EventProcessorController} used to perform operations on the\n      *                                    {@link EventProcessor}s\n+     * @param axonServerConfiguration     the {@link AxonServerConfiguration} used to retrieve the client identifier\n      */\n     public EventProcessorControlService(AxonServerConnectionManager axonServerConnectionManager,", "originalCommit": "086b897038007b145fbec3f02a6e5f738ab5e183", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3NDIwNA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364174204", "body": "The `EventProcessorController#splitSegment(String, int)` method returns a `boolean` which states whether the operation was successful according to the `TrackingEventProcessor`. Might be valuable to use this result too to either publish a success or failure.", "bodyText": "The EventProcessorController#splitSegment(String, int) method returns a boolean which states whether the operation was successful according to the TrackingEventProcessor. Might be valuable to use this result too to either publish a success or failure.", "bodyHTML": "<p dir=\"auto\">The <code>EventProcessorController#splitSegment(String, int)</code> method returns a <code>boolean</code> which states whether the operation was successful according to the <code>TrackingEventProcessor</code>. Might be valuable to use this result too to either publish a success or failure.</p>", "author": "smcvb", "createdAt": "2020-01-08T10:57:38Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -143,8 +154,10 @@ private void splitSegment(PlatformOutboundInstruction platformOutboundInstructio\n         String processorName = splitSegment.getProcessorName();\n         try {\n             eventProcessorController.splitSegment(processorName, segmentId);", "originalCommit": "086b897038007b145fbec3f02a6e5f738ab5e183", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE3NDI1Nw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r364174257", "body": "The `EventProcessorController#mergeSegment(String, int)` method returns a `boolean` which states whether the operation was successful according to the `TrackingEventProcessor`. Might be valuable to use this result too to either publish a success or failure.", "bodyText": "The EventProcessorController#mergeSegment(String, int) method returns a boolean which states whether the operation was successful according to the TrackingEventProcessor. Might be valuable to use this result too to either publish a success or failure.", "bodyHTML": "<p dir=\"auto\">The <code>EventProcessorController#mergeSegment(String, int)</code> method returns a <code>boolean</code> which states whether the operation was successful according to the <code>TrackingEventProcessor</code>. Might be valuable to use this result too to either publish a success or failure.</p>", "author": "smcvb", "createdAt": "2020-01-08T10:57:46Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -154,8 +167,10 @@ private void mergeSegment(PlatformOutboundInstruction platformOutboundInstructio\n         int segmentId = mergeSegment.getSegmentIdentifier();\n         try {\n             eventProcessorController.mergeSegment(processorName, segmentId);", "originalCommit": "086b897038007b145fbec3f02a6e5f738ab5e183", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a01106b76147b108a7c2bd6e216700320e96d573", "url": "https://github.com/AxonFramework/AxonFramework/commit/a01106b76147b108a7c2bd6e216700320e96d573", "message": "Update axon-server-connector/src/main/java/org/axonframework/axonserver/connector/GrpcInstructionResultPublisher.java\n\nCo-Authored-By: Steven van Beelen <steven.vanbeelen@axoniq.io>", "committedDate": "2020-01-08T11:03:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NjAwMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r366446001", "body": "Not all failures are represented by a `Throwable`. Having an overload with a String representing a cause could be beneficial. What do you think?", "bodyText": "Not all failures are represented by a Throwable. Having an overload with a String representing a cause could be beneficial. What do you think?", "bodyHTML": "<p dir=\"auto\">Not all failures are represented by a <code>Throwable</code>. Having an overload with a String representing a cause could be beneficial. What do you think?</p>", "author": "m1l4n54v1c", "createdAt": "2020-01-14T16:37:43Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/InstructionResultPublisher.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.axonframework.axonserver.connector;\n+\n+/**\n+ * Interface that encapsulates the instruction result publication functionality.\n+ *\n+ * @author Sara Pellegrini\n+ * @since 4.4\n+ */\n+public interface InstructionResultPublisher {\n+\n+    /**\n+     * Notifies to Axon Server a successful execution of the specified instruction.\n+     *\n+     * @param instructionId the identifier of the instruction that has been successfully processed.\n+     */\n+    void publishSuccessFor(String instructionId);\n+\n+    /**\n+     * Notifies to Axon Server a failure during the execution of the specified instruction.\n+     *\n+     * @param instructionId the identifier of the instruction.\n+     * @param error         the error happened during the instruction execution.\n+     */\n+    void publishFailureFor(String instructionId, Throwable error);", "originalCommit": "a01106b76147b108a7c2bd6e216700320e96d573", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0NzM2Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r366447362", "body": "I'm missing tests for checking whether instruction result is sent after split/merge.", "bodyText": "I'm missing tests for checking whether instruction result is sent after split/merge.", "bodyHTML": "<p dir=\"auto\">I'm missing tests for checking whether instruction result is sent after split/merge.</p>", "author": "m1l4n54v1c", "createdAt": "2020-01-14T16:40:04Z", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "diffHunk": "@@ -27,15 +28,18 @@\n \n class EventProcessorControlServiceTest {", "originalCommit": "a01106b76147b108a7c2bd6e216700320e96d573", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2640905748023292a091f0447c76a10117c1cb7e", "url": "https://github.com/AxonFramework/AxonFramework/commit/2640905748023292a091f0447c76a10117c1cb7e", "message": "Publish a failure message to Axon Server any time the Axon client receive a split/merge instruction for an Event Processor that is not a Tracking Event Processor instance.", "committedDate": "2020-03-23T15:08:04Z", "type": "commit"}, {"oid": "f859e744ccd2224f12d9c99e7806c3aafa9632bb", "url": "https://github.com/AxonFramework/AxonFramework/commit/f859e744ccd2224f12d9c99e7806c3aafa9632bb", "message": "Add an overload of publishFailureFor method with a String representing the cause of the failure.", "committedDate": "2020-03-23T15:25:53Z", "type": "commit"}, {"oid": "ab7608257bd76fe3e69b9cd46515574b9c8d4935", "url": "https://github.com/AxonFramework/AxonFramework/commit/ab7608257bd76fe3e69b9cd46515574b9c8d4935", "message": "Add test for InstructionResult on split and merge operations.", "committedDate": "2020-03-24T11:13:09Z", "type": "commit"}, {"oid": "f67e4842c8ff78e67f3b02ee367748663967d432", "url": "https://github.com/AxonFramework/AxonFramework/commit/f67e4842c8ff78e67f3b02ee367748663967d432", "message": "Merge branch 'master' into feature/split-merge-result", "committedDate": "2020-03-24T14:22:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjA3Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692076", "body": "The `EventProcessorController#splitSegment(String, int)` function will also return `false` if the underlying `TrackingEventProcessor` couldn't fulfill the request. Thus stating it's an `IllegalArgumentException` because the given `processorName` is not a `TrackingEventProcessor` is not always correct.", "bodyText": "The EventProcessorController#splitSegment(String, int) function will also return false if the underlying TrackingEventProcessor couldn't fulfill the request. Thus stating it's an IllegalArgumentException because the given processorName is not a TrackingEventProcessor is not always correct.", "bodyHTML": "<p dir=\"auto\">The <code>EventProcessorController#splitSegment(String, int)</code> function will also return <code>false</code> if the underlying <code>TrackingEventProcessor</code> couldn't fulfill the request. Thus stating it's an <code>IllegalArgumentException</code> because the given <code>processorName</code> is not a <code>TrackingEventProcessor</code> is not always correct.</p>", "author": "smcvb", "createdAt": "2020-03-25T08:53:40Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -146,9 +158,13 @@ private void splitSegment(PlatformOutboundInstruction platformOutboundInstructio\n         int segmentId = splitSegment.getSegmentIdentifier();\n         String processorName = splitSegment.getProcessorName();\n         try {\n-            eventProcessorController.splitSegment(processorName, segmentId);\n+            if (!eventProcessorController.splitSegment(processorName, segmentId)) {", "originalCommit": "f67e4842c8ff78e67f3b02ee367748663967d432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk0MjQxOQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397942419", "bodyText": "Yes, you are right. I will change it with a generic message like \"Impossible to split/merge segment [{}] for processor [{}]\", or something similar.", "author": "saratry", "createdAt": "2020-03-25T15:24:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjA3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjE3OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692179", "body": "The `EventProcessorController#mergeSegment(String, int)` function will also return `false` if the underlying `TrackingEventProcessor` couldn't fulfill the request. Thus stating it's an `IllegalArgumentException` because the given `processorName` is not a `TrackingEventProcessor` is not always correct.", "bodyText": "The EventProcessorController#mergeSegment(String, int) function will also return false if the underlying TrackingEventProcessor couldn't fulfill the request. Thus stating it's an IllegalArgumentException because the given processorName is not a TrackingEventProcessor is not always correct.", "bodyHTML": "<p dir=\"auto\">The <code>EventProcessorController#mergeSegment(String, int)</code> function will also return <code>false</code> if the underlying <code>TrackingEventProcessor</code> couldn't fulfill the request. Thus stating it's an <code>IllegalArgumentException</code> because the given <code>processorName</code> is not a <code>TrackingEventProcessor</code> is not always correct.</p>", "author": "smcvb", "createdAt": "2020-03-25T08:53:51Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/processor/EventProcessorControlService.java", "diffHunk": "@@ -157,9 +173,13 @@ private void mergeSegment(PlatformOutboundInstruction platformOutboundInstructio\n         String processorName = mergeSegment.getProcessorName();\n         int segmentId = mergeSegment.getSegmentIdentifier();\n         try {\n-            eventProcessorController.mergeSegment(processorName, segmentId);\n+            if (!eventProcessorController.mergeSegment(processorName, segmentId)) {", "originalCommit": "f67e4842c8ff78e67f3b02ee367748663967d432", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjYwOA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397692608", "body": "Nit: I think the test constants can be made `private`.", "bodyText": "Nit: I think the test constants can be made private.", "bodyHTML": "<p dir=\"auto\">Nit: I think the test constants can be made <code>private</code>.</p>", "author": "smcvb", "createdAt": "2020-03-25T08:54:36Z", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/EventProcessorControlServiceTest.java", "diffHunk": "@@ -16,26 +16,55 @@\n \n package org.axonframework.axonserver.connector.processor;\n \n+import io.axoniq.axonserver.grpc.ErrorMessage;\n+import io.axoniq.axonserver.grpc.InstructionResult;\n+import io.axoniq.axonserver.grpc.control.EventProcessorSegmentReference;\n+import io.axoniq.axonserver.grpc.control.PlatformInboundInstruction;\n+import io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction;\n+import org.axonframework.axonserver.connector.AxonServerConfiguration;\n import org.axonframework.axonserver.connector.AxonServerConnectionManager;\n import org.junit.jupiter.api.*;\n \n+import java.util.concurrent.atomic.AtomicReference;\n import java.util.function.Consumer;\n+import javax.annotation.Nonnull;\n \n import static io.axoniq.axonserver.grpc.control.PlatformOutboundInstruction.RequestCase.*;\n import static org.axonframework.axonserver.connector.TestTargetContextResolver.BOUNDED_CONTEXT;\n import static org.mockito.Mockito.*;\n \n class EventProcessorControlServiceTest {\n \n+    public static final String GOOD_INSTRUCTION_ID = \"goodInstructionId\";\n+    public static final String TRACKING_EVENT_PROCESSOR = \"TEP\";", "originalCommit": "f67e4842c8ff78e67f3b02ee367748663967d432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzOTc3OA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1309#discussion_r397939778", "bodyText": "Sure, right!", "author": "saratry", "createdAt": "2020-03-25T15:20:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5MjYwOA=="}], "type": "inlineReview"}, {"oid": "989847fba1c7bf190f045716d6cb5a120d64cef3", "url": "https://github.com/AxonFramework/AxonFramework/commit/989847fba1c7bf190f045716d6cb5a120d64cef3", "message": "Fix the error message and the exception thrown when the split/merge operation fails.", "committedDate": "2020-03-25T15:33:21Z", "type": "commit"}, {"oid": "ad66b477a0cfc7a8235b74cec7d22393ae7cef26", "url": "https://github.com/AxonFramework/AxonFramework/commit/ad66b477a0cfc7a8235b74cec7d22393ae7cef26", "message": "Set AxonServerCommandBus running property to false only after termination of the execution of commands that are in progress.", "committedDate": "2020-03-25T16:28:45Z", "type": "commit"}, {"oid": "d1ebc0de72dea51304a480f4dae3c91b1036fd6a", "url": "https://github.com/AxonFramework/AxonFramework/commit/d1ebc0de72dea51304a480f4dae3c91b1036fd6a", "message": "Fix the error message when the split/merge operation fails.", "committedDate": "2020-03-25T16:51:28Z", "type": "commit"}]}