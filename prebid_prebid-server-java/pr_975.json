{"pr_number": 975, "pr_title": "Deprecate TCF GVL v1", "pr_author": "snahornyi", "pr_createdAt": "2020-10-23T11:34:22Z", "pr_url": "https://github.com/prebid/prebid-server-java/pull/975", "timeline": [{"oid": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "url": "https://github.com/prebid/prebid-server-java/commit/61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "message": "Deprecate TCF GVL v1", "committedDate": "2020-10-23T11:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxNTM4MQ==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512515381", "body": "Pls move declaration after `refreshMissingListPeriodMs` field.", "bodyText": "Pls move declaration after refreshMissingListPeriodMs field.", "bodyHTML": "<p dir=\"auto\">Pls move declaration after <code>refreshMissingListPeriodMs</code> field.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T08:58:24Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -54,6 +54,7 @@\n \n     private final String cacheDir;\n     private final String endpointTemplate;\n+    private final boolean deprecated;", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxODU2Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512518563", "body": "It is not a part of this PR but let's make some refactoring: add checking for the path specified like `fallbackVendorListPath != null ? ... : null;`\r\nSo, then we can remove redundant condition in `readFallbackVendorList(..)` method.", "bodyText": "It is not a part of this PR but let's make some refactoring: add checking for the path specified like fallbackVendorListPath != null ? ... : null;\nSo, then we can remove redundant condition in readFallbackVendorList(..) method.", "bodyHTML": "<p dir=\"auto\">It is not a part of this PR but let's make some refactoring: add checking for the path specified like <code>fallbackVendorListPath != null ? ... : null;</code><br>\nSo, then we can remove redundant condition in <code>readFallbackVendorList(..)</code> method.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:03:32Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -102,7 +105,8 @@ public VendorListService(String cacheDir,\n         cache = Objects.requireNonNull(createCache(fileSystem, cacheDir));\n \n         fallbackVendorList = readFallbackVendorList(fallbackVendorListPath);", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxOTA4Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512519083", "body": "Place after `fallbackVendorListPath` arg.", "bodyText": "Place after fallbackVendorListPath arg.", "bodyHTML": "<p dir=\"auto\">Place after <code>fallbackVendorListPath</code> arg.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:04:21Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -75,6 +76,7 @@\n \n     public VendorListService(String cacheDir,\n                              String endpointTemplate,\n+                             boolean deprecated,", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMjE5OQ==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512522199", "body": "(!) Seems we have a dependencies between `deprecated` and `fallbackVendorList` fields.\r\nIt is reasonable for case when `deprecated == true` to check `fallbackVendorList` is not NULL and throw exception if not so.\r\n\r\nIn other words, this is configuration misleading and we need to fail application start up if was no fallback GVL determined for deprecated GVL version.", "bodyText": "(!) Seems we have a dependencies between deprecated and fallbackVendorList fields.\nIt is reasonable for case when deprecated == true to check fallbackVendorList is not NULL and throw exception if not so.\nIn other words, this is configuration misleading and we need to fail application start up if was no fallback GVL determined for deprecated GVL version.", "bodyHTML": "<p dir=\"auto\">(!) Seems we have a dependencies between <code>deprecated</code> and <code>fallbackVendorList</code> fields.<br>\nIt is reasonable for case when <code>deprecated == true</code> to check <code>fallbackVendorList</code> is not NULL and throw exception if not so.</p>\n<p dir=\"auto\">In other words, this is configuration misleading and we need to fail application start up if was no fallback GVL determined for deprecated GVL version.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:09:15Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -89,6 +91,7 @@ public VendorListService(String cacheDir,\n         this.cacheDir = Objects.requireNonNull(cacheDir);\n         this.endpointTemplate = Objects.requireNonNull(endpointTemplate);\n         this.defaultTimeoutMs = defaultTimeoutMs;\n+        this.deprecated = deprecated;", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNTA3Mw==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512525073", "body": "Don't think we need this condition, rather i'd recommend to modify `shouldFallback(..)` to take into account `deprecated` flag.", "bodyText": "Don't think we need this condition, rather i'd recommend to modify shouldFallback(..) to take into account deprecated flag.", "bodyHTML": "<p dir=\"auto\">Don't think we need this condition, rather i'd recommend to modify <code>shouldFallback(..)</code> to take into account <code>deprecated</code> flag.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:13:49Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListService.java", "diffHunk": "@@ -127,6 +131,15 @@ public VendorListService(String cacheDir,\n             return Future.succeededFuture(fallbackVendorList);\n         }\n \n+        if (deprecated) {", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNTU4Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512525586", "body": "Change arg order as in parent `org.prebid.server.privacy.gdpr.vendorlist.VendorListService` class.", "bodyText": "Change arg order as in parent org.prebid.server.privacy.gdpr.vendorlist.VendorListService class.", "bodyHTML": "<p dir=\"auto\">Change arg order as in parent <code>org.prebid.server.privacy.gdpr.vendorlist.VendorListService</code> class.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:14:33Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListServiceV1.java", "diffHunk": "@@ -27,6 +27,7 @@\n \n     public VendorListServiceV1(String cacheDir,\n                                String endpointTemplate,\n+                               boolean deprecated,", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNTY2Mg==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512525662", "body": "Change arg order as in parent `org.prebid.server.privacy.gdpr.vendorlist.VendorListService` class.", "bodyText": "Change arg order as in parent org.prebid.server.privacy.gdpr.vendorlist.VendorListService class.", "bodyHTML": "<p dir=\"auto\">Change arg order as in parent <code>org.prebid.server.privacy.gdpr.vendorlist.VendorListService</code> class.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:14:42Z", "path": "src/main/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListServiceV2.java", "diffHunk": "@@ -26,6 +26,7 @@\n \n     public VendorListServiceV2(String cacheDir,\n                                String endpointTemplate,\n+                               boolean deprecated,", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNjM2Ng==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512526366", "body": "1. Place after `fallbackVendorListPath` argument.\r\n2. Update `/docs/config-app.md` with this new configuration option.\r\n3. According to project code style we prefer to avoid defaults in `@Value`s. Let it be defined in application.yaml explicitly.", "bodyText": "Place after fallbackVendorListPath argument.\nUpdate /docs/config-app.md with this new configuration option.\nAccording to project code style we prefer to avoid defaults in @Values. Let it be defined in application.yaml explicitly.", "bodyHTML": "<ol dir=\"auto\">\n<li>Place after <code>fallbackVendorListPath</code> argument.</li>\n<li>Update <code>/docs/config-app.md</code> with this new configuration option.</li>\n<li>According to project code style we prefer to avoid defaults in <code>@Value</code>s. Let it be defined in application.yaml explicitly.</li>\n</ol>", "author": "rpanchyk", "createdAt": "2020-10-27T09:15:46Z", "path": "src/main/java/org/prebid/server/spring/config/PrivacyServiceConfiguration.java", "diffHunk": "@@ -53,6 +53,7 @@\n     VendorListServiceV1 vendorListServiceV1(\n             @Value(\"${gdpr.vendorlist.v1.cache-dir}\") String cacheDir,\n             @Value(\"${gdpr.vendorlist.v1.http-endpoint-template}\") String endpointTemplate,\n+            @Value(\"${gdpr.vendorlist.v1.deprecated:#{false}}\") boolean deprecated,", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyOTU2MA==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512529560", "body": "Add verfication `httpClient` is never not called for deprecated GVL version.", "bodyText": "Add verfication httpClient is never not called for deprecated GVL version.", "bodyHTML": "<p dir=\"auto\">Add verfication <code>httpClient</code> is never not called for deprecated GVL version.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:20:36Z", "path": "src/test/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListServiceV1Test.java", "diffHunk": "@@ -113,6 +115,56 @@ public void creationShouldFailIfCannotCreateCacheDir() {\n                 .hasMessage(\"dir creation error\");\n     }\n \n+    @Test\n+    public void shouldStartUsingFallbackVersionIfDeprecatedIsTrue() {\n+        // given\n+        vendorListService = new VendorListServiceV1(\n+                CACHE_DIR,\n+                \"http://vendorlist/{VERSION}\",\n+                true,\n+                0,\n+                REFRESH_MISSING_LIST_PERIOD_MS,\n+                null,\n+                FALLBACK_VENDOR_LIST_PATH,\n+                bidderCatalog,\n+                vertx,\n+                fileSystem,\n+                httpClient,\n+                metrics,\n+                jacksonMapper);\n+\n+        // when\n+        final Future<Map<Integer, VendorV1>> future = vendorListService.forVersion(1);\n+\n+        // then\n+        assertThat(future).succeededWith(singletonMap(52, VendorV1.of(52, singleton(1), singleton(2))));", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyOTc5NQ==", "url": "https://github.com/prebid/prebid-server-java/pull/975#discussion_r512529795", "body": "Can be removed.", "bodyText": "Can be removed.", "bodyHTML": "<p dir=\"auto\">Can be removed.</p>", "author": "rpanchyk", "createdAt": "2020-10-27T09:20:58Z", "path": "src/test/java/org/prebid/server/privacy/gdpr/vendorlist/VendorListServiceV1Test.java", "diffHunk": "@@ -113,6 +115,56 @@ public void creationShouldFailIfCannotCreateCacheDir() {\n                 .hasMessage(\"dir creation error\");\n     }\n \n+    @Test\n+    public void shouldStartUsingFallbackVersionIfDeprecatedIsTrue() {\n+        // given\n+        vendorListService = new VendorListServiceV1(\n+                CACHE_DIR,\n+                \"http://vendorlist/{VERSION}\",\n+                true,\n+                0,\n+                REFRESH_MISSING_LIST_PERIOD_MS,\n+                null,\n+                FALLBACK_VENDOR_LIST_PATH,\n+                bidderCatalog,\n+                vertx,\n+                fileSystem,\n+                httpClient,\n+                metrics,\n+                jacksonMapper);\n+\n+        // when\n+        final Future<Map<Integer, VendorV1>> future = vendorListService.forVersion(1);\n+\n+        // then\n+        assertThat(future).succeededWith(singletonMap(52, VendorV1.of(52, singleton(1), singleton(2))));\n+    }\n+\n+    @Test\n+    public void shouldReturnFailFutureForDeprecatedVersionsWithNoFallbackPresent() throws JsonProcessingException {", "originalCommit": "61b2e62e8353dc4188298d980cdd7e5bffa3bea9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5525acd4313b4a7e6d33f6fb0d003bb7d30e7c0a", "url": "https://github.com/prebid/prebid-server-java/commit/5525acd4313b4a7e6d33f6fb0d003bb7d30e7c0a", "message": "Fixes after review", "committedDate": "2020-10-27T11:50:08Z", "type": "commit"}, {"oid": "9c784304613d647059d61b9162d0fe575126226f", "url": "https://github.com/prebid/prebid-server-java/commit/9c784304613d647059d61b9162d0fe575126226f", "message": "Fixes after review", "committedDate": "2020-10-27T14:00:21Z", "type": "commit"}]}