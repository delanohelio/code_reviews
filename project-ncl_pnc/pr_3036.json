{"pr_number": 3036, "pr_title": "[NCL-5754] add duplication validation to productMilestone validation endpoint", "pr_author": "michalovjan", "pr_createdAt": "2020-05-12T12:01:23Z", "pr_url": "https://github.com/project-ncl/pnc/pull/3036", "merge_commit": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "timeline": [{"oid": "75f06c46e0a07aec7c906df8521538e2fc8654b5", "url": "https://github.com/project-ncl/pnc/commit/75f06c46e0a07aec7c906df8521538e2fc8654b5", "message": "[NCL-5754] upgrade productMilestone validation endpoint", "committedDate": "2020-05-12T12:31:08Z", "type": "forcePushed"}, {"oid": "41c7b2463b095c800c2aa3af6bff51611bc29e76", "url": "https://github.com/project-ncl/pnc/commit/41c7b2463b095c800c2aa3af6bff51611bc29e76", "message": "[NCL-5754] upgrade productMilestone validation endpoint", "committedDate": "2020-05-12T13:35:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNTA0MA==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424935040", "body": "I would prefer Collections.singletonList() instead of using guava library", "bodyText": "I would prefer Collections.singletonList() instead of using guava library", "bodyHTML": "<p dir=\"auto\">I would prefer Collections.singletonList() instead of using guava library</p>", "author": "janinko", "createdAt": "2020-05-14T07:46:44Z", "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(", "originalCommit": "41c7b2463b095c800c2aa3af6bff51611bc29e76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDIyNA==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426524224", "bodyText": "Sure", "author": "michalovjan", "createdAt": "2020-05-18T10:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNTA0MA=="}], "type": "inlineReview", "revised_code": {"commit": "433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "changed_code": [{"header": "diff --git a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\nindex 77aacb10b..b33c8ccd8 100644\n--- a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n+++ b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n", "chunk": "@@ -288,21 +288,19 @@ public class ProductMilestoneProviderImpl\n         if (!matches) {\n             return builder.errorType(FORMAT)\n                     .hints(\n-                            Lists.newArrayList(\n+                            Collections.singletonList(\n                                     \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n                                             + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n                     .build();\n         }\n-        org.jboss.pnc.model.ProductMilestone duplicate = null;\n-        if (productVersionId != null) {\n-            duplicate = repository\n-                    .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n-        }\n+\n+        org.jboss.pnc.model.ProductMilestone duplicate = repository\n+                .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n \n         if (duplicate != null) {\n             return builder.isValid(false)\n                     .errorType(DUPLICATION)\n-                    .hints(Lists.newArrayList(\"Product Milestone version already exists\"))\n+                    .hints(Collections.singletonList(\"Product Milestone version already exists\"))\n                     .build();\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "changed_code": [{"header": "diff --git a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\nindex 77aacb10b..b33c8ccd8 100644\n--- a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n+++ b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n", "chunk": "@@ -288,21 +288,19 @@ public class ProductMilestoneProviderImpl\n         if (!matches) {\n             return builder.errorType(FORMAT)\n                     .hints(\n-                            Lists.newArrayList(\n+                            Collections.singletonList(\n                                     \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n                                             + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n                     .build();\n         }\n-        org.jboss.pnc.model.ProductMilestone duplicate = null;\n-        if (productVersionId != null) {\n-            duplicate = repository\n-                    .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n-        }\n+\n+        org.jboss.pnc.model.ProductMilestone duplicate = repository\n+                .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n \n         if (duplicate != null) {\n             return builder.isValid(false)\n                     .errorType(DUPLICATION)\n-                    .hints(Lists.newArrayList(\"Product Milestone version already exists\"))\n+                    .hints(Collections.singletonList(\"Product Milestone version already exists\"))\n                     .build();\n         }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "message": "Merge commit", "committedDate": null}, {"oid": "66ebdc7ba78a618bd88fa72d65e8c8be002c6bc4", "committedDate": "2020-06-04 21:18:44 +0200", "message": "Add support for non-int ids."}, {"oid": "1789df99731c63d1de36f23a90cda3b230296d0f", "committedDate": "2020-06-10 16:27:16 +0200", "message": "Remove unused fields from DTOs"}, {"oid": "e0542574ef7707efb4dc13c48f7cd4ff89953e88", "committedDate": "2020-06-15 09:49:28 +0200", "message": "[NCL-5760] Fix Product Milestone update"}, {"oid": "9f9c79fac5b9308d731a3a36f91125201de17724", "committedDate": "2020-07-21 10:09:51 +0200", "message": "NCL-5868 - remove DTO form milestone close endpoint."}, {"oid": "b6f7c31454686781f96a6d39fc2aacb4d2326556", "committedDate": "2020-08-03 12:46:04 +0200", "message": "Milesote close user logs."}, {"oid": "57ebc4e67e8c594ef0dcb4096d70cf0aa7afd1e3", "committedDate": "2020-09-11 10:05:44 +0200", "message": "[NCL-6005] When milestones doesn't contain any builds, close ends with system error instead of failure."}, {"oid": "263a2e31c388e5c0a5d1c9f61308ead070d0390c", "committedDate": "2020-11-02 15:24:16 +0100", "message": "[NCL-5812] Add AbstractUpdatableProvider usin new updateEntity mapper methods to fix JPA problems"}, {"oid": "5d3dbaf56301faa646cc60a7bb65eb5eed3e1d5d", "committedDate": "2020-11-03 11:48:41 +0100", "message": "[NCL-6199] fix NPE, eliminate cross joins, fix no results returned"}, {"oid": "e3d03abc045449a0897990a42c73f8fbc3f87fa4", "committedDate": "2020-11-13 13:45:04 -0500", "message": "[NCL-6141] Implement RHPAM implementation for product milestone"}, {"oid": "d555c8690d1c70097d00fe1182941a3d361b6733", "committedDate": "2020-12-08 16:55:06 +0100", "message": "Always use new BPM connector."}, {"oid": "cd700d9160a226fd0258a97324b586e147c5b59a", "committedDate": "2020-12-14 10:46:28 +0100", "message": "Throw validation exception when parsing of String ID fails and return 404"}, {"oid": "94b062a0a4a4fd6640777059ab3890ee1b845607", "committedDate": "2021-05-17 14:55:54 +0200", "message": "Make use of new BPM configurable."}, {"oid": "53c9e7487755469781ce877be5fdbdd2e700b26f", "committedDate": "2021-08-03 14:17:31 +0200", "message": "[NCL-6535] Milestone release - stateless cancel."}, {"oid": "59498daf18f85fd67dc847eb2d64274f46ef5bda", "committedDate": "2022-01-20 18:24:42 +0100", "message": "Bump license year."}, {"oid": "ba61340f48f12520884a6dec8c873f83551a92de", "committedDate": "2022-11-02 09:51:18 +0100", "message": "[NCL-7076] - remove old BPM invocation code."}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzI4Mw==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424937283", "body": "add `@Valid` to VersionValidationRequest and I belive then you can rely on the fields not be null. ", "bodyText": "add @Valid to VersionValidationRequest and I belive then you can rely on the fields not be null.", "bodyHTML": "<p dir=\"auto\">add <code>@Valid</code> to VersionValidationRequest and I belive then you can rely on the fields not be null.</p>", "author": "janinko", "createdAt": "2020-05-14T07:50:34Z", "path": "rest-new/src/main/java/org/jboss/pnc/rest/endpoints/ProductMilestoneEndpointImpl.java", "diffHunk": "@@ -132,12 +129,7 @@ public void cancelMilestoneClose(String id) {\n \n     @Override\n     public ValidationResponse validateVersion(VersionValidationRequest versionRequest) {", "originalCommit": "41c7b2463b095c800c2aa3af6bff51611bc29e76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "message": "Merge commit", "committedDate": null}, {"oid": "e83625e5b95a5124f7b12f4cbbaa567470adef60", "committedDate": "2020-05-21 16:40:49 +0200", "message": "Fix name of enpoint method"}, {"oid": "8e4ec9249845a0a544c6c8e61b04aaf5d7ec66d8", "committedDate": "2020-05-26 14:25:51 +0200", "message": "[NCL-5703] Document REST API endpoints"}, {"oid": "9f9c79fac5b9308d731a3a36f91125201de17724", "committedDate": "2020-07-21 10:09:51 +0200", "message": "NCL-5868 - remove DTO form milestone close endpoint."}, {"oid": "1e0f425bd7a5d55350353b91fdd5efad720697ae", "committedDate": "2020-07-21 15:00:05 +0200", "message": "Use milestone releaseId instead of milestone id as MDC.processContext."}, {"oid": "94a61a6ea83f22742167babe744f68096585b62c", "committedDate": "2020-07-23 13:46:26 +0200", "message": "Rename rest-new module to rest"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424937757", "body": "if you use `@Valid` then you don't need this check, I think.", "bodyText": "if you use @Valid then you don't need this check, I think.", "bodyHTML": "<p dir=\"auto\">if you use <code>@Valid</code> then you don't need this check, I think.</p>", "author": "janinko", "createdAt": "2020-05-14T07:51:22Z", "path": "facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java", "diffHunk": "@@ -275,6 +281,34 @@ public void cancelMilestoneCloseProcess(String id) throws RepositoryViolationExc\n         return new Page<>(pageIndex, pageSize, milestoneIds.size(), milestones);\n     }\n \n+    @Override\n+    public ValidationResponse validateVersion(String productVersionId, String version) {\n+        boolean matches = Pattern.matches(Patterns.PRODUCT_MILESTONE_VERSION, version);\n+        ValidationResponse.Builder builder = ValidationResponse.builder().isValid(matches);\n+        if (!matches) {\n+            return builder.errorType(FORMAT)\n+                    .hints(\n+                            Lists.newArrayList(\n+                                    \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n+                                            + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n+                    .build();\n+        }\n+        org.jboss.pnc.model.ProductMilestone duplicate = null;\n+        if (productVersionId != null) {", "originalCommit": "41c7b2463b095c800c2aa3af6bff51611bc29e76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDg3MA==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426524870", "bodyText": "I mean, I don't mind having null there. If it is null, then only REGEX check will be done.", "author": "michalovjan", "createdAt": "2020-05-18T10:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NzA2Nw==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426557067", "bodyText": "Then why did you added @NotBlank to it in the DTO?", "author": "janinko", "createdAt": "2020-05-18T11:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU3NDE0Mg==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426574142", "bodyText": "That's a valid point :D. I forgot that NotBlank doesn't allow nulls. I wanted it to cover a case \"if there is a string don't let it be empty\". I'll add the @Valid there.", "author": "michalovjan", "createdAt": "2020-05-18T12:01:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzNzc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "changed_code": [{"header": "diff --git a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\nindex 77aacb10b..b33c8ccd8 100644\n--- a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n+++ b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n", "chunk": "@@ -288,21 +288,19 @@ public class ProductMilestoneProviderImpl\n         if (!matches) {\n             return builder.errorType(FORMAT)\n                     .hints(\n-                            Lists.newArrayList(\n+                            Collections.singletonList(\n                                     \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n                                             + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n                     .build();\n         }\n-        org.jboss.pnc.model.ProductMilestone duplicate = null;\n-        if (productVersionId != null) {\n-            duplicate = repository\n-                    .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n-        }\n+\n+        org.jboss.pnc.model.ProductMilestone duplicate = repository\n+                .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n \n         if (duplicate != null) {\n             return builder.isValid(false)\n                     .errorType(DUPLICATION)\n-                    .hints(Lists.newArrayList(\"Product Milestone version already exists\"))\n+                    .hints(Collections.singletonList(\"Product Milestone version already exists\"))\n                     .build();\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "changed_code": [{"header": "diff --git a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\nindex 77aacb10b..b33c8ccd8 100644\n--- a/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n+++ b/facade/src/main/java/org/jboss/pnc/facade/providers/ProductMilestoneProviderImpl.java\n", "chunk": "@@ -288,21 +288,19 @@ public class ProductMilestoneProviderImpl\n         if (!matches) {\n             return builder.errorType(FORMAT)\n                     .hints(\n-                            Lists.newArrayList(\n+                            Collections.singletonList(\n                                     \"Allowed format consists of 2 or 3 numeric components (separated by a dot) followed by a string \"\n                                             + \"qualifier starting with a character, eg. 3.0.0.GA, 1.0.11.CR2.ER1, 3.0.CR2\"))\n                     .build();\n         }\n-        org.jboss.pnc.model.ProductMilestone duplicate = null;\n-        if (productVersionId != null) {\n-            duplicate = repository\n-                    .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n-        }\n+\n+        org.jboss.pnc.model.ProductMilestone duplicate = repository\n+                .queryByPredicates(withProductVersionIdAndVersion(Integer.parseInt(productVersionId), version));\n \n         if (duplicate != null) {\n             return builder.isValid(false)\n                     .errorType(DUPLICATION)\n-                    .hints(Lists.newArrayList(\"Product Milestone version already exists\"))\n+                    .hints(Collections.singletonList(\"Product Milestone version already exists\"))\n                     .build();\n         }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "message": "Merge commit", "committedDate": null}, {"oid": "66ebdc7ba78a618bd88fa72d65e8c8be002c6bc4", "committedDate": "2020-06-04 21:18:44 +0200", "message": "Add support for non-int ids."}, {"oid": "1789df99731c63d1de36f23a90cda3b230296d0f", "committedDate": "2020-06-10 16:27:16 +0200", "message": "Remove unused fields from DTOs"}, {"oid": "e0542574ef7707efb4dc13c48f7cd4ff89953e88", "committedDate": "2020-06-15 09:49:28 +0200", "message": "[NCL-5760] Fix Product Milestone update"}, {"oid": "9f9c79fac5b9308d731a3a36f91125201de17724", "committedDate": "2020-07-21 10:09:51 +0200", "message": "NCL-5868 - remove DTO form milestone close endpoint."}, {"oid": "b6f7c31454686781f96a6d39fc2aacb4d2326556", "committedDate": "2020-08-03 12:46:04 +0200", "message": "Milesote close user logs."}, {"oid": "57ebc4e67e8c594ef0dcb4096d70cf0aa7afd1e3", "committedDate": "2020-09-11 10:05:44 +0200", "message": "[NCL-6005] When milestones doesn't contain any builds, close ends with system error instead of failure."}, {"oid": "263a2e31c388e5c0a5d1c9f61308ead070d0390c", "committedDate": "2020-11-02 15:24:16 +0100", "message": "[NCL-5812] Add AbstractUpdatableProvider usin new updateEntity mapper methods to fix JPA problems"}, {"oid": "5d3dbaf56301faa646cc60a7bb65eb5eed3e1d5d", "committedDate": "2020-11-03 11:48:41 +0100", "message": "[NCL-6199] fix NPE, eliminate cross joins, fix no results returned"}, {"oid": "e3d03abc045449a0897990a42c73f8fbc3f87fa4", "committedDate": "2020-11-13 13:45:04 -0500", "message": "[NCL-6141] Implement RHPAM implementation for product milestone"}, {"oid": "d555c8690d1c70097d00fe1182941a3d361b6733", "committedDate": "2020-12-08 16:55:06 +0100", "message": "Always use new BPM connector."}, {"oid": "cd700d9160a226fd0258a97324b586e147c5b59a", "committedDate": "2020-12-14 10:46:28 +0100", "message": "Throw validation exception when parsing of String ID fails and return 404"}, {"oid": "94b062a0a4a4fd6640777059ab3890ee1b845607", "committedDate": "2021-05-17 14:55:54 +0200", "message": "Make use of new BPM configurable."}, {"oid": "53c9e7487755469781ce877be5fdbdd2e700b26f", "committedDate": "2021-08-03 14:17:31 +0200", "message": "[NCL-6535] Milestone release - stateless cancel."}, {"oid": "59498daf18f85fd67dc847eb2d64274f46ef5bda", "committedDate": "2022-01-20 18:24:42 +0100", "message": "Bump license year."}, {"oid": "ba61340f48f12520884a6dec8c873f83551a92de", "committedDate": "2022-11-02 09:51:18 +0100", "message": "[NCL-7076] - remove old BPM invocation code."}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r424939052", "body": "ValidationErrorType? + javadoc on class level", "bodyText": "ValidationErrorType? + javadoc on class level", "bodyHTML": "<p dir=\"auto\">ValidationErrorType? + javadoc on class level</p>", "author": "janinko", "createdAt": "2020-05-14T07:53:34Z", "path": "constants/src/main/java/org/jboss/pnc/enums/ErrorType.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.jboss.pnc.enums;\n+\n+public enum ErrorType {", "originalCommit": "41c7b2463b095c800c2aa3af6bff51611bc29e76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNjI4Ng==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426526286", "bodyText": "I don't like Java style of long names. I'd like to keep it simple and generic. This enum could be furthermore developed and used elsewhere.", "author": "michalovjan", "createdAt": "2020-05-18T10:28:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1ODcwNQ==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426558705", "bodyText": "Now both values are for validation. Do you have any example of other values that could be put here now?", "author": "janinko", "createdAt": "2020-05-18T11:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU3ODgxMQ==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426578811", "bodyText": "The enum is a simple collection of error types. If someone wants to specify a type of error in their DTO, he can add them to the enum and use it. Right now, only milestone validation uses it, so no other values are needed.", "author": "michalovjan", "createdAt": "2020-05-18T12:10:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4MTY2Ng==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426581666", "bodyText": "Then why would ValidationResponse class have generic error type that can have value that has nothing to do with validation? If it was a generic response class then I would understand that, but it's specific validation response.", "author": "janinko", "createdAt": "2020-05-18T12:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4OTU2MQ==", "url": "https://github.com/project-ncl/pnc/pull/3036#discussion_r426589561", "bodyText": "Ok, I am convinced.", "author": "michalovjan", "createdAt": "2020-05-18T12:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "changed_code": [{"header": "diff --git a/constants/src/main/java/org/jboss/pnc/enums/ErrorType.java b/constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\nsimilarity index 88%\nrename from constants/src/main/java/org/jboss/pnc/enums/ErrorType.java\nrename to constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\nindex 13500f2b3..5b8ea3d21 100644\n--- a/constants/src/main/java/org/jboss/pnc/enums/ErrorType.java\n+++ b/constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\n", "chunk": "@@ -17,7 +17,10 @@\n  */\n package org.jboss.pnc.enums;\n \n-public enum ErrorType {\n+/**\n+ * This enum represents various types of errors found throughout validation\n+ */\n+public enum ValidationErrorType {\n     /**\n      * Validated entity has invalid format (f.e. regex pattern does not match).\n      */\n", "next_change": null}]}, "revised_code_in_main": {"commit": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "changed_code": [{"header": "diff --git a/constants/src/main/java/org/jboss/pnc/enums/ErrorType.java b/constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\nsimilarity index 88%\nrename from constants/src/main/java/org/jboss/pnc/enums/ErrorType.java\nrename to constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\nindex 13500f2b3..5b8ea3d21 100644\n--- a/constants/src/main/java/org/jboss/pnc/enums/ErrorType.java\n+++ b/constants/src/main/java/org/jboss/pnc/enums/ValidationErrorType.java\n", "chunk": "@@ -17,7 +17,10 @@\n  */\n package org.jboss.pnc.enums;\n \n-public enum ErrorType {\n+/**\n+ * This enum represents various types of errors found throughout validation\n+ */\n+public enum ValidationErrorType {\n     /**\n      * Validated entity has invalid format (f.e. regex pattern does not match).\n      */\n", "next_change": null}]}, "commits_in_main": [{"oid": "29155f19e97be9f0f737f041f8ce9d6b5098c875", "message": "Merge commit", "committedDate": null}]}, {"oid": "433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "url": "https://github.com/project-ncl/pnc/commit/433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "message": "[NCL-5754] upgrade productMilestone validation endpoint", "committedDate": "2020-05-18T12:47:38Z", "type": "commit"}, {"oid": "433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "url": "https://github.com/project-ncl/pnc/commit/433ce2f6a8f0c44b506a32093b9aac6ed81c5a74", "message": "[NCL-5754] upgrade productMilestone validation endpoint", "committedDate": "2020-05-18T12:47:38Z", "type": "forcePushed"}]}