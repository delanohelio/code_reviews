{"pr_number": 2943, "pr_title": "[v1.8] NCL-5527 - Update lastModificationTime only if audited fields are updated", "pr_author": "vibe13", "pr_createdAt": "2020-03-27T16:23:08Z", "pr_url": "https://github.com/project-ncl/pnc/pull/2943", "timeline": [{"oid": "2081dfb085f10b240b13b928d13bcc5d6205ff37", "url": "https://github.com/project-ncl/pnc/commit/2081dfb085f10b240b13b928d13bcc5d6205ff37", "message": "Backport NCL-4284 - creationTime null on build configuration audited", "committedDate": "2020-03-27T16:17:49Z", "type": "commit"}, {"oid": "6fd1b88e7776138663de7a82b016924663dea80f", "url": "https://github.com/project-ncl/pnc/commit/6fd1b88e7776138663de7a82b016924663dea80f", "message": "Remove @PreUpdate and handle the update of lastModificationTime manually, so that no new revisions are created if only the description of BuildConfiguration is changed", "committedDate": "2020-03-27T16:19:04Z", "type": "commit"}, {"oid": "3e5664bcae3e1c1c9fd88dce66af297d381763d5", "url": "https://github.com/project-ncl/pnc/commit/3e5664bcae3e1c1c9fd88dce66af297d381763d5", "message": "Fix tests and verify lastModificationTime correct change", "committedDate": "2020-03-27T16:19:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MDQ3MA==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399650470", "body": "reinwenting wheel: https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#equals-java.lang.Object-java.lang.Object-", "bodyText": "reinwenting wheel: https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#equals-java.lang.Object-java.lang.Object-", "bodyHTML": "<p dir=\"auto\">reinwenting wheel: <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#equals-java.lang.Object-java.lang.Object-\" rel=\"nofollow\">https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#equals-java.lang.Object-java.lang.Object-</a></p>", "author": "janinko", "createdAt": "2020-03-28T11:16:47Z", "path": "datastore/src/main/java/org/jboss/pnc/datastore/repositories/BuildConfigurationRepositoryImpl.java", "diffHunk": "@@ -53,15 +54,51 @@ public BuildConfiguration save(BuildConfiguration buildConfiguration) {\n         if (id != null && id > 0) {\n             BuildConfiguration persisted = queryById(id);\n \n-            if (!areParametersEqual(persisted, buildConfiguration)) {\n+            if (!areParametersEqual(persisted, buildConfiguration) || !equalAuditedValues(persisted, buildConfiguration)) {\n                 //always increment the revision of main entity when the child collection is updated\n+                //the @PreUpdate method in BuildConfiguration was removed, the calculation of whether the lastModificationTime needs to be changed is done here\n                 buildConfiguration.setLastModificationTime(new Date());\n             }\n         }\n \n         return springRepository.save(buildConfiguration);\n     }\n \n+    private boolean equalAuditedValues(BuildConfiguration persisted, BuildConfiguration toUpdate) {\n+        return equalsWithNull(persisted.getName(), toUpdate.getName()) &&\n+                equalsWithNull(persisted.getBuildScript(), toUpdate.getBuildScript()) &&\n+                equalsId(persisted.getRepositoryConfiguration(), toUpdate.getRepositoryConfiguration()) &&\n+                equalsWithNull(persisted.getScmRevision(), toUpdate.getScmRevision()) &&\n+                equalsId(persisted.getProject(), toUpdate.getProject()) &&\n+                equalsId(persisted.getBuildEnvironment(), toUpdate.getBuildEnvironment()) &&\n+                (persisted.isArchived() == toUpdate.isArchived()) &&\n+                (persisted.getBuildType() == toUpdate.getBuildType());\n+    }\n+\n+    private boolean equalsWithNull(Object o1, Object o2) {", "originalCommit": "3e5664bcae3e1c1c9fd88dce66af297d381763d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTU5MQ==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399675591", "bodyText": "Ah thanks, ok using existing wheel now :-), here and in another place where I first found it", "author": "vibe13", "createdAt": "2020-03-28T15:38:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MDQ3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MDc1OA==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399650758", "body": "You can shorten it as:\r\n```suggestion\r\n        if (persisted == null || toUpdate == null) {\r\n            return false;\r\n        }\r\n```\r\nNot sure which one is better. For mine you need to consider previous guard, yours is more explicit.", "bodyText": "You can shorten it as:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (persisted == null && toUpdate != null) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    if (persisted != null && toUpdate == null) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (persisted == null || toUpdate == null) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nNot sure which one is better. For mine you need to consider previous guard, yours is more explicit.", "bodyHTML": "<p dir=\"auto\">You can shorten it as:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (persisted <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> toUpdate <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (persisted <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> toUpdate <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (persisted <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> toUpdate <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Not sure which one is better. For mine you need to consider previous guard, yours is more explicit.</p>", "author": "janinko", "createdAt": "2020-03-28T11:19:25Z", "path": "datastore/src/main/java/org/jboss/pnc/datastore/repositories/BuildConfigurationRepositoryImpl.java", "diffHunk": "@@ -53,15 +54,51 @@ public BuildConfiguration save(BuildConfiguration buildConfiguration) {\n         if (id != null && id > 0) {\n             BuildConfiguration persisted = queryById(id);\n \n-            if (!areParametersEqual(persisted, buildConfiguration)) {\n+            if (!areParametersEqual(persisted, buildConfiguration) || !equalAuditedValues(persisted, buildConfiguration)) {\n                 //always increment the revision of main entity when the child collection is updated\n+                //the @PreUpdate method in BuildConfiguration was removed, the calculation of whether the lastModificationTime needs to be changed is done here\n                 buildConfiguration.setLastModificationTime(new Date());\n             }\n         }\n \n         return springRepository.save(buildConfiguration);\n     }\n \n+    private boolean equalAuditedValues(BuildConfiguration persisted, BuildConfiguration toUpdate) {\n+        return equalsWithNull(persisted.getName(), toUpdate.getName()) &&\n+                equalsWithNull(persisted.getBuildScript(), toUpdate.getBuildScript()) &&\n+                equalsId(persisted.getRepositoryConfiguration(), toUpdate.getRepositoryConfiguration()) &&\n+                equalsWithNull(persisted.getScmRevision(), toUpdate.getScmRevision()) &&\n+                equalsId(persisted.getProject(), toUpdate.getProject()) &&\n+                equalsId(persisted.getBuildEnvironment(), toUpdate.getBuildEnvironment()) &&\n+                (persisted.isArchived() == toUpdate.isArchived()) &&\n+                (persisted.getBuildType() == toUpdate.getBuildType());\n+    }\n+\n+    private boolean equalsWithNull(Object o1, Object o2) {\n+        if(o1 == null) {\n+            return o2 == null;\n+        } else {\n+            return o1.equals(o2);\n+        }\n+    }\n+\n+    private boolean equalsId(GenericEntity persisted, GenericEntity toUpdate) {\n+        if (persisted == null && toUpdate == null) {\n+            return true;\n+        }\n+\n+        if (persisted == null && toUpdate != null) {\n+            return false;\n+        }\n+\n+        if (persisted != null && toUpdate == null) {\n+            return false;\n+        }", "originalCommit": "3e5664bcae3e1c1c9fd88dce66af297d381763d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTY4NQ==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399675685", "bodyText": "I applied yours as I like it more, here an in another method in same class", "author": "vibe13", "createdAt": "2020-03-28T15:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MDc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTI1MA==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399651250", "body": "why do you call `new String` here?", "bodyText": "why do you call new String here?", "bodyHTML": "<p dir=\"auto\">why do you call <code>new String</code> here?</p>", "author": "janinko", "createdAt": "2020-03-28T11:24:50Z", "path": "integration-test/src/test/java/org/jboss/pnc/integration/BuildTest.java", "diffHunk": "@@ -264,25 +270,103 @@ public void shouldBuildTemporaryBuildAndNotAssignItToMilestone() {\n         assertThat(buildRecordRestResponse.getValue().getProductMilestoneId()).isNull();\n     }\n \n+    @Test\n+    public void shouldNotTriggerANewPersistentBuildWithoutForceIfOnlyDescriptionChanged() {\n+        BuildConfigurationRest buildConfigurationRest = buildConfigurationRestClient.getByName(\"maven-plugin-test\").getValue();\n+        BuildOptions persistent = new BuildOptions();\n+        persistent.setRebuildMode(RebuildMode.FORCE);\n+\n+        // Trigger force build\n+        RestResponse<BuildRecordRest> forcedPersistentBuild = triggerBCBuild(buildConfigurationRest, Optional.empty(), persistent);\n+        assertThat(forcedPersistentBuild.getRestCallResponse().getStatusCode()).isEqualTo(200);\n+        ResponseUtils.waitSynchronouslyFor(() -> {\n+            RestResponse<BuildRecordRest> record = buildRecordRestClient.get(forcedPersistentBuild.getValue().getId(),\n+                    false);\n+            return record.hasValue() && record.getValue().getStatus().equals(BuildCoordinationStatus.DONE);\n+        } , 15, TimeUnit.SECONDS);\n+\n+        // Update only description, should not create a new revision and keep same lastModificationTime\n+        String oldDescription = buildConfigurationRest.getDescription() != null ? new String(buildConfigurationRest.getDescription()) : null;", "originalCommit": "3e5664bcae3e1c1c9fd88dce66af297d381763d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTUzOQ==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399651539", "bodyText": "Why isn't this enough? Strings are immutable\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String oldDescription = buildConfigurationRest.getDescription() != null ? new String(buildConfigurationRest.getDescription()) : null;\n          \n          \n            \n                    String oldDescription = buildConfigurationRest.getDescription();", "author": "janinko", "createdAt": "2020-03-28T11:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTgyOA==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399675828", "bodyText": "They are enough, this is leftover of junk code I put when I was frustrated by tests not passing (due to other issues), which I did not remove. Thanks!", "author": "vibe13", "createdAt": "2020-03-28T15:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTgwMA==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399651800", "body": "The same here. I know Date is mutable, but is the lastModificationTime being altered?", "bodyText": "The same here. I know Date is mutable, but is the lastModificationTime being altered?", "bodyHTML": "<p dir=\"auto\">The same here. I know Date is mutable, but is the lastModificationTime being altered?</p>", "author": "janinko", "createdAt": "2020-03-28T11:31:34Z", "path": "integration-test/src/test/java/org/jboss/pnc/integration/BuildTest.java", "diffHunk": "@@ -264,25 +270,103 @@ public void shouldBuildTemporaryBuildAndNotAssignItToMilestone() {\n         assertThat(buildRecordRestResponse.getValue().getProductMilestoneId()).isNull();\n     }\n \n+    @Test\n+    public void shouldNotTriggerANewPersistentBuildWithoutForceIfOnlyDescriptionChanged() {\n+        BuildConfigurationRest buildConfigurationRest = buildConfigurationRestClient.getByName(\"maven-plugin-test\").getValue();\n+        BuildOptions persistent = new BuildOptions();\n+        persistent.setRebuildMode(RebuildMode.FORCE);\n+\n+        // Trigger force build\n+        RestResponse<BuildRecordRest> forcedPersistentBuild = triggerBCBuild(buildConfigurationRest, Optional.empty(), persistent);\n+        assertThat(forcedPersistentBuild.getRestCallResponse().getStatusCode()).isEqualTo(200);\n+        ResponseUtils.waitSynchronouslyFor(() -> {\n+            RestResponse<BuildRecordRest> record = buildRecordRestClient.get(forcedPersistentBuild.getValue().getId(),\n+                    false);\n+            return record.hasValue() && record.getValue().getStatus().equals(BuildCoordinationStatus.DONE);\n+        } , 15, TimeUnit.SECONDS);\n+\n+        // Update only description, should not create a new revision and keep same lastModificationTime\n+        String oldDescription = buildConfigurationRest.getDescription() != null ? new String(buildConfigurationRest.getDescription()) : null;\n+        Date oldLastModDate = buildConfigurationRest.getLastModificationTime() != null ? new Date(buildConfigurationRest.getLastModificationTime().getTime()) : null;", "originalCommit": "3e5664bcae3e1c1c9fd88dce66af297d381763d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTg0OQ==", "url": "https://github.com/project-ncl/pnc/pull/2943#discussion_r399675849", "bodyText": "Same as above", "author": "vibe13", "createdAt": "2020-03-28T15:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MTgwMA=="}], "type": "inlineReview"}, {"oid": "e1f56e1135e5a388162e0f027dde6a5e02bc481f", "url": "https://github.com/project-ncl/pnc/commit/e1f56e1135e5a388162e0f027dde6a5e02bc481f", "message": "Implement changes after review", "committedDate": "2020-03-28T15:36:43Z", "type": "commit"}]}