{"pr_number": 1648, "pr_title": "Check if Cassandra session is closed before using", "pr_author": "mactaggart", "pr_createdAt": "2020-04-20T02:22:12Z", "pr_url": "https://github.com/Netflix/conductor/pull/1648", "merge_commit": "0705f483d6a9912bbfc7efce2e28128331d63352", "timeline": [{"oid": "40713612b5c31d5bfff7123c7bd0a3bf42d4db1e", "url": "https://github.com/Netflix/conductor/commit/40713612b5c31d5bfff7123c7bd0a3bf42d4db1e", "message": "make cassandra session static, check if session is closed", "committedDate": "2020-04-20T02:17:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3NTA4OA==", "url": "https://github.com/Netflix/conductor/pull/1648#discussion_r411075088", "body": "Please remove `session = embeddedCassandra.getSession();` from the setUp block.", "bodyText": "Please remove session = embeddedCassandra.getSession(); from the setUp block.", "bodyHTML": "<p dir=\"auto\">Please remove <code>session = embeddedCassandra.getSession();</code> from the setUp block.</p>", "author": "apanicker-nflx", "createdAt": "2020-04-20T03:51:34Z", "path": "cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java", "diffHunk": "@@ -69,6 +69,7 @@\n     @BeforeClass\n     public static void init() throws Exception {\n         embeddedCassandra = new EmbeddedCassandra();\n+        session = embeddedCassandra.getSession();\n     }\n \n     @Before", "originalCommit": "40713612b5c31d5bfff7123c7bd0a3bf42d4db1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3ODEwMA==", "url": "https://github.com/Netflix/conductor/pull/1648#discussion_r411078100", "bodyText": "Ok; removed.", "author": "mactaggart", "createdAt": "2020-04-20T04:03:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3NTA4OA=="}], "type": "inlineReview", "revised_code": {"commit": "95523879dc36fb643636a8ec7d76a6c127df03b7", "changed_code": [{"header": "diff --git a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java b/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\nindex 064845ae2..6bb16f266 100644\n--- a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\n+++ b/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\n", "chunk": "@@ -74,7 +74,6 @@ public class CassandraDAOTest {\n \n     @Before\n     public void setUp() {\n-        session = embeddedCassandra.getSession();\n         Statements statements = new Statements(testConfiguration);\n         metadataDAO = new CassandraMetadataDAO(session, objectMapper, testConfiguration, statements);\n         executionDAO = new CassandraExecutionDAO(session, objectMapper, testConfiguration, statements);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0705f483d6a9912bbfc7efce2e28128331d63352", "changed_code": [{"header": "diff --git a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java b/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\nindex 064845ae2..6bb16f266 100644\n--- a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\n+++ b/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\n", "chunk": "@@ -74,7 +74,6 @@ public class CassandraDAOTest {\n \n     @Before\n     public void setUp() {\n-        session = embeddedCassandra.getSession();\n         Statements statements = new Statements(testConfiguration);\n         metadataDAO = new CassandraMetadataDAO(session, objectMapper, testConfiguration, statements);\n         executionDAO = new CassandraExecutionDAO(session, objectMapper, testConfiguration, statements);\n", "next_change": {"commit": "c5c56a38a06e26fee9c269bdd900deeadda50b47", "changed_code": [{"header": "diff --git a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java b/cassandra-persistence/src/test/java/com/netflix/conductor/cassandra/dao/CassandraDAOTest.java\nsimilarity index 90%\nrename from cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\nrename to cassandra-persistence/src/test/java/com/netflix/conductor/cassandra/dao/CassandraDAOTest.java\nindex 6bb16f266..08ad27e90 100644\n--- a/cassandra-persistence/src/test/java/com/netflix/conductor/dao/cassandra/CassandraDAOTest.java\n+++ b/cassandra-persistence/src/test/java/com/netflix/conductor/cassandra/dao/CassandraDAOTest.java\n", "chunk": "@@ -74,10 +86,23 @@ public class CassandraDAOTest {\n \n     @Before\n     public void setUp() {\n-        Statements statements = new Statements(testConfiguration);\n-        metadataDAO = new CassandraMetadataDAO(session, objectMapper, testConfiguration, statements);\n-        executionDAO = new CassandraExecutionDAO(session, objectMapper, testConfiguration, statements);\n-        eventHandlerDAO = new CassandraEventHandlerDAO(session, objectMapper, testConfiguration, statements);\n+        properties = mock(CassandraProperties.class);\n+        when(properties.getHostAddress()).thenReturn(\"127.0.0.1\");\n+        when(properties.getPort()).thenReturn(9142);\n+        when(properties.getCassandraKeyspace()).thenReturn(\"junit\");\n+        when(properties.getShardSize()).thenReturn(100);\n+        when(properties.getReplicationStrategy()).thenReturn(\"SimpleStrategy\");\n+        when(properties.getReplicationFactorKey()).thenReturn(\"replication_factor\");\n+        when(properties.getReplicationFactorValue()).thenReturn(1);\n+        when(properties.getReadConsistencyLevel()).thenReturn(ConsistencyLevel.LOCAL_ONE);\n+        when(properties.getWriteConsistencyLevel()).thenReturn(ConsistencyLevel.LOCAL_ONE);\n+        when(properties.getTaskDefRefreshTimeSecs()).thenReturn(60);\n+        when(properties.getEventHandlerRefreshTimeSecs()).thenReturn(60);\n+        when(properties.getEventExecutionPersistenceTTL()).thenReturn(5);\n+        Statements statements = new Statements(properties);\n+        metadataDAO = new CassandraMetadataDAO(session, objectMapper, properties, statements);\n+        executionDAO = new CassandraExecutionDAO(session, objectMapper, properties, statements);\n+        eventHandlerDAO = new CassandraEventHandlerDAO(session, objectMapper, properties, statements);\n     }\n \n     @AfterClass\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "0705f483d6a9912bbfc7efce2e28128331d63352", "message": "Merge commit", "committedDate": null}, {"oid": "c5c56a38a06e26fee9c269bdd900deeadda50b47", "committedDate": "2020-11-25 16:50:14 -0800", "message": "Switched to Spring Boot. See CHANGELOG.md for a rough log of changes in the branch."}]}, {"oid": "95523879dc36fb643636a8ec7d76a6c127df03b7", "url": "https://github.com/Netflix/conductor/commit/95523879dc36fb643636a8ec7d76a6c127df03b7", "message": "remove session init from setUp", "committedDate": "2020-04-20T04:01:23Z", "type": "commit"}]}