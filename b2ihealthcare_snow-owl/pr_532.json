{"pr_number": 532, "pr_title": "SO-4007 Restore effectiveTime during RF2 Delta imports", "pr_author": "cmark", "pr_createdAt": "2020-04-14T06:27:01Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/532", "timeline": [{"oid": "2443757fe934a66a4563c1edfc4aaa705a769d95", "url": "https://github.com/b2ihealthcare/snow-owl/commit/2443757fe934a66a4563c1edfc4aaa705a769d95", "message": "SO-4007: support additional predicate when checking for running jobs", "committedDate": "2020-04-14T06:11:54Z", "type": "commit"}, {"oid": "cdfe761650917ec7003368b7fbad2061accff742", "url": "https://github.com/b2ihealthcare/snow-owl/commit/cdfe761650917ec7003368b7fbad2061accff742", "message": "SO-4007: rename RF2ReleaseType field `type` due to collision with...\n\n...`Request.getType()` method.", "committedDate": "2020-04-14T06:12:42Z", "type": "commit"}, {"oid": "8cc0200df0c97f6c9ce859b1a9d28f4028f080c7", "url": "https://github.com/b2ihealthcare/snow-owl/commit/8cc0200df0c97f6c9ce859b1a9d28f4028f080c7", "message": "SO-4007 #resolve\n\nRun effectiveTime restore process during RF2 Delta imports.", "committedDate": "2020-04-14T06:18:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwNjM3Mw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/532#discussion_r407906373", "body": "The predicate is not applied to the current job.", "bodyText": "The predicate is not applied to the current job.", "bodyHTML": "<p dir=\"auto\">The predicate is not applied to the current job.</p>", "author": "apeteri", "createdAt": "2020-04-14T06:56:15Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java", "diffHunk": "@@ -80,14 +83,33 @@\n \t * @return\n \t */\n \tdefault boolean isJobRunning(String jobKey) {\n+\t\treturn isJobRunning(jobKey, (job) -> true); \n+\t}\n+\t\n+\t/**\n+\t * Returns <code>true</code> if any job present with the given jobKey in {@link RemoteJobEntry#isRunning()} state and matches the given predicate, <code>false</code> otherwise.\n+\t * \n+\t * @param jobKey - the logical key assigned to the job\n+\t * @param predicate - the predicate filter to further customize the search process\n+\t * @return\n+\t */\n+\tdefault boolean isJobRunning(String jobKey, Predicate<RemoteJobEntry> predicate) {\n+\t\tcheckNotNull(predicate, \"Predicate should not be null\");\n \t\t// check first if this context is running inside a job with the given jobKey\n \t\tOptional<RemoteJob> job = optionalService(RemoteJob.class);\n \t\tif (job.isPresent() && Objects.equals(jobKey, job.get().getKey())) {\n \t\t\treturn true;", "originalCommit": "8cc0200df0c97f6c9ce859b1a9d28f4028f080c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNDE5Mg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/532#discussion_r407924192", "bodyText": "Right, thanks! \ud83d\ude05", "author": "cmark", "createdAt": "2020-04-14T07:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwNjM3Mw=="}], "type": "inlineReview"}, {"oid": "e6c3bcbdad7e50e43b04acc68c081a0c6be8d869", "url": "https://github.com/b2ihealthcare/snow-owl/commit/e6c3bcbdad7e50e43b04acc68c081a0c6be8d869", "message": "SO-4007: use parametersPredicate instead of jobPredicate in...\n\n...ServiceProvider.isJobRunning() method", "committedDate": "2020-04-14T10:27:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2NDU2Mw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/532#discussion_r408064563", "body": "```suggestion\r\n\t * @param parametersPredicate - the predicate to filter the job by its parameters\r\n\t * @return\r\n\t */\r\n\tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredicate) {\r\n\t\tcheckNotNull(parametersPredicate, \"Parameters predicate should not be null\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param parametersPredice - the predicate to filter the job by its parameters\n          \n          \n            \n            \t * @return\n          \n          \n            \n            \t */\n          \n          \n            \n            \tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredice) {\n          \n          \n            \n            \t\tcheckNotNull(parametersPredice, \"Parameters Predicate should not be null\");\n          \n          \n            \n            \t * @param parametersPredicate - the predicate to filter the job by its parameters\n          \n          \n            \n            \t * @return\n          \n          \n            \n            \t */\n          \n          \n            \n            \tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredicate) {\n          \n          \n            \n            \t\tcheckNotNull(parametersPredicate, \"Parameters predicate should not be null\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> <span class=\"x x-first x-last\">parametersPredice</span> <span class=\"pl-k\">-</span> the predicate to filter the job by its parameters</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">default</span> <span class=\"pl-k\">boolean</span> isJobRunning(<span class=\"pl-smi\">String</span> jobKey, <span class=\"pl-k\">Predicate&lt;<span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">parametersPredice</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tcheckNotNull(<span class=\"x x-first x-last\">parametersPredice</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Parameters <span class=\"x x-first x-last\">Predicate</span> should not be null<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> <span class=\"x x-first x-last\">parametersPredicate</span> <span class=\"pl-k\">-</span> the predicate to filter the job by its parameters</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">default</span> <span class=\"pl-k\">boolean</span> isJobRunning(<span class=\"pl-smi\">String</span> jobKey, <span class=\"pl-k\">Predicate&lt;<span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span>&gt;</span> <span class=\"x x-first x-last\">parametersPredicate</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\tcheckNotNull(<span class=\"x x-first x-last\">parametersPredicate</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Parameters <span class=\"x x-first x-last\">predicate</span> should not be null<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "apeteri", "createdAt": "2020-04-14T11:29:35Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java", "diffHunk": "@@ -80,14 +85,34 @@\n \t * @return\n \t */\n \tdefault boolean isJobRunning(String jobKey) {\n+\t\treturn isJobRunning(jobKey, (job) -> true); \n+\t}\n+\t\n+\t/**\n+\t * Returns <code>true</code> if any job present with the given jobKey in {@link RemoteJobEntry#isRunning()} state and matches the given parameters predicate, <code>false</code> otherwise.\n+\t * \n+\t * @param jobKey - the logical key assigned to the job\n+\t * @param parametersPredice - the predicate to filter the job by its parameters\n+\t * @return\n+\t */\n+\tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredice) {\n+\t\tcheckNotNull(parametersPredice, \"Parameters Predicate should not be null\");", "originalCommit": "e6c3bcbdad7e50e43b04acc68c081a0c6be8d869", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2NDcxNg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/532#discussion_r408064716", "body": "```suggestion\r\n\t\t\treturn Objects.equals(jobKey, job.get().getKey()) && parametersPredicate.test(job.get().getParameters(service(ObjectMapper.class)));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\treturn Objects.equals(jobKey, job.get().getKey()) && parametersPredice.test(job.get().getParameters(service(ObjectMapper.class)));\n          \n          \n            \n            \t\t\treturn Objects.equals(jobKey, job.get().getKey()) && parametersPredicate.test(job.get().getParameters(service(ObjectMapper.class)));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(jobKey, job<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getKey()) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">parametersPredice</span><span class=\"pl-k\">.</span>test(job<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getParameters(service(<span class=\"pl-smi\">ObjectMapper</span><span class=\"pl-k\">.</span>class)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(jobKey, job<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getKey()) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">parametersPredicate</span><span class=\"pl-k\">.</span>test(job<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getParameters(service(<span class=\"pl-smi\">ObjectMapper</span><span class=\"pl-k\">.</span>class)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "apeteri", "createdAt": "2020-04-14T11:29:50Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java", "diffHunk": "@@ -80,14 +85,34 @@\n \t * @return\n \t */\n \tdefault boolean isJobRunning(String jobKey) {\n+\t\treturn isJobRunning(jobKey, (job) -> true); \n+\t}\n+\t\n+\t/**\n+\t * Returns <code>true</code> if any job present with the given jobKey in {@link RemoteJobEntry#isRunning()} state and matches the given parameters predicate, <code>false</code> otherwise.\n+\t * \n+\t * @param jobKey - the logical key assigned to the job\n+\t * @param parametersPredice - the predicate to filter the job by its parameters\n+\t * @return\n+\t */\n+\tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredice) {\n+\t\tcheckNotNull(parametersPredice, \"Parameters Predicate should not be null\");\n \t\t// check first if this context is running inside a job with the given jobKey\n \t\tOptional<RemoteJob> job = optionalService(RemoteJob.class);\n-\t\tif (job.isPresent() && Objects.equals(jobKey, job.get().getKey())) {\n-\t\t\treturn true;\n+\t\tif (job.isPresent()) {\n+\t\t\treturn Objects.equals(jobKey, job.get().getKey()) && parametersPredice.test(job.get().getParameters(service(ObjectMapper.class)));", "originalCommit": "e6c3bcbdad7e50e43b04acc68c081a0c6be8d869", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2NDgzNg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/532#discussion_r408064836", "body": "```suggestion\r\n\t\t\t\t.filter(parametersPredicate)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.filter(parametersPredice)\n          \n          \n            \n            \t\t\t\t.filter(parametersPredicate)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t.filter(<span class=\"x x-first x-last\">parametersPredice</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t.filter(<span class=\"x x-first x-last\">parametersPredicate</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "apeteri", "createdAt": "2020-04-14T11:30:04Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java", "diffHunk": "@@ -80,14 +85,34 @@\n \t * @return\n \t */\n \tdefault boolean isJobRunning(String jobKey) {\n+\t\treturn isJobRunning(jobKey, (job) -> true); \n+\t}\n+\t\n+\t/**\n+\t * Returns <code>true</code> if any job present with the given jobKey in {@link RemoteJobEntry#isRunning()} state and matches the given parameters predicate, <code>false</code> otherwise.\n+\t * \n+\t * @param jobKey - the logical key assigned to the job\n+\t * @param parametersPredice - the predicate to filter the job by its parameters\n+\t * @return\n+\t */\n+\tdefault boolean isJobRunning(String jobKey, Predicate<Map<String, Object>> parametersPredice) {\n+\t\tcheckNotNull(parametersPredice, \"Parameters Predicate should not be null\");\n \t\t// check first if this context is running inside a job with the given jobKey\n \t\tOptional<RemoteJob> job = optionalService(RemoteJob.class);\n-\t\tif (job.isPresent() && Objects.equals(jobKey, job.get().getKey())) {\n-\t\t\treturn true;\n+\t\tif (job.isPresent()) {\n+\t\t\treturn Objects.equals(jobKey, job.get().getKey()) && parametersPredice.test(job.get().getParameters(service(ObjectMapper.class)));\n \t\t}\n \n \t\t// if not inside a job context or running in non-job context check the jobs index\n-\t\treturn JobRequests.prepareSearch().one().filterByKey(jobKey).build().execute(this).first().map(RemoteJobEntry::isRunning).orElse(false);\n+\t\treturn JobRequests.prepareSearch().one()\n+\t\t\t\t.filterByKey(jobKey)\n+\t\t\t\t.build()\n+\t\t\t\t.execute(this)\n+\t\t\t\t.first()\n+\t\t\t\t.filter(RemoteJobEntry::isRunning)\n+\t\t\t\t.map(j -> j.getParameters(service(ObjectMapper.class)))\n+\t\t\t\t.filter(parametersPredice)", "originalCommit": "e6c3bcbdad7e50e43b04acc68c081a0c6be8d869", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f38b2f5a706b8740d29848c9bfc639d52672d5da", "url": "https://github.com/b2ihealthcare/snow-owl/commit/f38b2f5a706b8740d29848c9bfc639d52672d5da", "message": "Update core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java\n\nCo-Authored-By: Andr\u00e1s P\u00e9teri <apeteri@b2international.com>", "committedDate": "2020-04-14T12:32:13Z", "type": "commit"}, {"oid": "bdced8215af673e46c67fbf5043c5574863009d2", "url": "https://github.com/b2ihealthcare/snow-owl/commit/bdced8215af673e46c67fbf5043c5574863009d2", "message": "Update core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java\n\nCo-Authored-By: Andr\u00e1s P\u00e9teri <apeteri@b2international.com>", "committedDate": "2020-04-14T12:32:19Z", "type": "commit"}, {"oid": "20965b239a010ccafc5e94484e80be5f915e4892", "url": "https://github.com/b2ihealthcare/snow-owl/commit/20965b239a010ccafc5e94484e80be5f915e4892", "message": "Update core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/ServiceProvider.java\n\nCo-Authored-By: Andr\u00e1s P\u00e9teri <apeteri@b2international.com>", "committedDate": "2020-04-14T12:32:25Z", "type": "commit"}]}