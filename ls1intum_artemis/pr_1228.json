{"pr_number": 1228, "pr_title": "Filter participations without submissions + add submission count to participations", "pr_author": "madwau", "pr_createdAt": "2020-02-09T13:07:10Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1228", "timeline": [{"oid": "50086d4c2016d8ee39116f380126836a4e69cddd", "url": "https://github.com/ls1intum/Artemis/commit/50086d4c2016d8ee39116f380126836a4e69cddd", "message": "Add participation filter for participations without submissions + add submission count column to participations table", "committedDate": "2020-02-08T18:31:35Z", "type": "commit"}, {"oid": "116cbf9b1aa1a033eddf2eb5ab4a631b7c221569", "url": "https://github.com/ls1intum/Artemis/commit/116cbf9b1aa1a033eddf2eb5ab4a631b7c221569", "message": "Undo yarn.lock", "committedDate": "2020-02-09T13:09:48Z", "type": "commit"}, {"oid": "8d5e86e9fb7d073ddc7a5805cb0be433f20bd4c6", "url": "https://github.com/ls1intum/Artemis/commit/8d5e86e9fb7d073ddc7a5805cb0be433f20bd4c6", "message": "Center align head cells for submissionCount + specify width on columns for participations data table", "committedDate": "2020-02-09T13:33:42Z", "type": "commit"}, {"oid": "75b62f0d91d3fcf4b84ea2f6cf5e579bcdc70760", "url": "https://github.com/ls1intum/Artemis/commit/75b62f0d91d3fcf4b84ea2f6cf5e579bcdc70760", "message": "Fix query", "committedDate": "2020-02-09T14:06:38Z", "type": "commit"}, {"oid": "14e86f825c2cf26a1c1e7bcf96e0d9da47e40d99", "url": "https://github.com/ls1intum/Artemis/commit/14e86f825c2cf26a1c1e7bcf96e0d9da47e40d99", "message": "Fix query", "committedDate": "2020-02-09T14:59:29Z", "type": "commit"}, {"oid": "c8af073375e99440f8e300ccf1fe5b4912901ce0", "url": "https://github.com/ls1intum/Artemis/commit/c8af073375e99440f8e300ccf1fe5b4912901ce0", "message": "Get rid of very expensive query", "committedDate": "2020-02-09T16:18:59Z", "type": "commit"}, {"oid": "64e81cf313f6abe21ea6de09930fa67989f8b4d1", "url": "https://github.com/ls1intum/Artemis/commit/64e81cf313f6abe21ea6de09930fa67989f8b4d1", "message": "Center submissionCount table header cell", "committedDate": "2020-02-09T16:45:25Z", "type": "commit"}, {"oid": "eb0be2459aa31cd995fae509f6836be80af901d2", "url": "https://github.com/ls1intum/Artemis/commit/eb0be2459aa31cd995fae509f6836be80af901d2", "message": "Refactor", "committedDate": "2020-02-09T16:52:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyNTU0NA==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377225544", "body": "Can you use primitive types here for returned result and parameter? https://crunchify.com/java-tip-wherever-possible-try-to-use-primitive-types-instead-of-wrapper-classes/", "bodyText": "Can you use primitive types here for returned result and parameter? https://crunchify.com/java-tip-wherever-possible-try-to-use-primitive-types-instead-of-wrapper-classes/", "bodyHTML": "<p dir=\"auto\">Can you use primitive types here for returned result and parameter? <a href=\"https://crunchify.com/java-tip-wherever-possible-try-to-use-primitive-types-instead-of-wrapper-classes/\" rel=\"nofollow\">https://crunchify.com/java-tip-wherever-possible-try-to-use-primitive-types-instead-of-wrapper-classes/</a></p>", "author": "maxr96", "createdAt": "2020-02-10T18:02:37Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -110,4 +110,13 @@\n     @EntityGraph(attributePaths = { \"submissions\", \"submissions.result\", \"submissions.result.assessor\" })\n     @Query(\"select distinct p from StudentParticipation p left join fetch p.submissions s where p.exercise.id = :#{#exerciseId} and (s.result.assessor.id = :#{#assessorId} and s.id = (select max(id) from p.submissions) or s.id = null)\")\n     List<StudentParticipation> findWithLatestSubmissionByExerciseAndAssessor(@Param(\"exerciseId\") Long exerciseId, @Param(\"assessorId\") Long assessorId);\n+\n+    /**\n+     * Count the number of submissions for each participation in a given exercise.\n+     *\n+     * @param exerciseId the id of the exercise for which to consider participations\n+     * @return the number of submissions per participation\n+     */\n+    @Query(\"select participation.id, count(submissions) from StudentParticipation participation left join participation.submissions submissions where participation.exercise.id = :#{#exerciseId} group by participation.id\")\n+    List<Long[]> countSubmissionsPerParticipationByExerciseId(@Param(\"exerciseId\") Long exerciseId);", "originalCommit": "eb0be2459aa31cd995fae509f6836be80af901d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2OTA5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377269097", "bodyText": "I switched to primitive types.", "author": "madwau", "createdAt": "2020-02-10T19:28:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyNTU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyNzk1NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377227955", "body": "This can also be a primitive type. The count should not be a null value, right?", "bodyText": "This can also be a primitive type. The count should not be a null value, right?", "bodyHTML": "<p dir=\"auto\">This can also be a primitive type. The count should not be a null value, right?</p>", "author": "maxr96", "createdAt": "2020-02-10T18:07:49Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/participation/Participation.java", "diffHunk": "@@ -85,6 +85,22 @@\n     @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n     private Set<Submission> submissions = new HashSet<>();\n \n+    /**\n+     * This property stores the total number of submissions in this participation. Not stored in the database, computed dynamically and used in showing statistics to the user in\n+     * the exercise view.\n+     */\n+    @Transient\n+    @JsonProperty\n+    private Integer submissionCount;", "originalCommit": "eb0be2459aa31cd995fae509f6836be80af901d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2OTMzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377269335", "bodyText": "It will always be an actual int value. I switched it.", "author": "madwau", "createdAt": "2020-02-10T19:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyNzk1NQ=="}], "type": "inlineReview"}, {"oid": "d0e49da5fd084cf83fe137c52fd6665ab87551ff", "url": "https://github.com/ls1intum/Artemis/commit/d0e49da5fd084cf83fe137c52fd6665ab87551ff", "message": "Feedback", "committedDate": "2020-02-10T19:27:03Z", "type": "commit"}, {"oid": "751685a00dd3d49640e74ad789d39d39ecdff5a4", "url": "https://github.com/ls1intum/Artemis/commit/751685a00dd3d49640e74ad789d39d39ecdff5a4", "message": "Feedback", "committedDate": "2020-02-10T19:27:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzI1NA==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377317254", "body": "I think this can be easier using `.stream(toMap({}))`.", "bodyText": "I think this can be easier using .stream(toMap({})).", "bodyHTML": "<p dir=\"auto\">I think this can be easier using <code>.stream(toMap({}))</code>.</p>", "author": "jpbernius", "createdAt": "2020-02-10T21:08:36Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -1013,4 +1013,21 @@ private boolean userHasPermissions(StudentParticipation participation) {\n     public List<StudentParticipation> findWithSubmissionsWithResultByStudentIdAndExercise(Long studentId, Set<Exercise> exercises) {\n         return studentParticipationRepository.findByStudentIdAndExerciseWithEagerSubmissionsResult(studentId, exercises);\n     }\n+\n+    /**\n+     * Get a mapping of participation ids to the number of submission for each participation.\n+     *\n+     * @param exerciseId the id of the exercise for which to consider participations\n+     * @return the number of submissions per participation in the given exercise\n+     */\n+    public Map<Long, Integer> countSubmissionsPerParticipationByExerciseId(Long exerciseId) {\n+        List<long[]> submissionCountResults = studentParticipationRepository.countSubmissionsPerParticipationByExerciseId(exerciseId);\n+        Map<Long, Integer> map = new HashMap<Long, Integer>();\n+        submissionCountResults.forEach(submissionCountResult -> {\n+            Long participationId = submissionCountResult[0];\n+            Integer submissionCount = Math.toIntExact(submissionCountResult[1]);\n+            map.put(participationId, submissionCount);\n+        });", "originalCommit": "751685a00dd3d49640e74ad789d39d39ecdff5a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUzNDk2Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377534967", "bodyText": "Thanks, that does make it much shorter!", "author": "madwau", "createdAt": "2020-02-11T09:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzk5Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377317992", "body": "```suggestion\r\n     * @return Tuples of participation ids and number of submissions per participation\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the number of submissions per participation\n          \n          \n            \n                 * @return Tuples of participation ids and number of submissions per participation", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"x x-first x-last\">the</span> number of submissions per participation</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi x x-first\">Tuples</span><span class=\"x x-last\"> of participation ids and</span> number of submissions per participation</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jpbernius", "createdAt": "2020-02-10T21:10:14Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -110,4 +110,13 @@\n     @EntityGraph(attributePaths = { \"submissions\", \"submissions.result\", \"submissions.result.assessor\" })\n     @Query(\"select distinct p from StudentParticipation p left join fetch p.submissions s where p.exercise.id = :#{#exerciseId} and (s.result.assessor.id = :#{#assessorId} and s.id = (select max(id) from p.submissions) or s.id = null)\")\n     List<StudentParticipation> findWithLatestSubmissionByExerciseAndAssessor(@Param(\"exerciseId\") Long exerciseId, @Param(\"assessorId\") Long assessorId);\n+\n+    /**\n+     * Count the number of submissions for each participation in a given exercise.\n+     *\n+     * @param exerciseId the id of the exercise for which to consider participations\n+     * @return the number of submissions per participation", "originalCommit": "751685a00dd3d49640e74ad789d39d39ecdff5a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxODM3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377318372", "body": "This got refactored from `Result`. Should we also update `toString`?", "bodyText": "This got refactored from Result. Should we also update toString?", "bodyHTML": "<p dir=\"auto\">This got refactored from <code>Result</code>. Should we also update <code>toString</code>?</p>", "author": "jpbernius", "createdAt": "2020-02-10T21:10:59Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/participation/Participation.java", "diffHunk": "@@ -85,6 +85,22 @@\n     @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n     private Set<Submission> submissions = new HashSet<>();\n \n+    /**\n+     * This property stores the total number of submissions in this participation. Not stored in the database, computed dynamically and used in showing statistics to the user in\n+     * the exercise view.\n+     */\n+    @Transient\n+    @JsonProperty\n+    private int submissionCount;", "originalCommit": "751685a00dd3d49640e74ad789d39d39ecdff5a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyNjUxOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377526519", "bodyText": "I added it to the toString method.", "author": "madwau", "createdAt": "2020-02-11T09:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxODM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1MjEyNw==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377652127", "bodyText": "Please use Integer, because this value might not be initialized", "author": "krusche", "createdAt": "2020-02-11T14:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxODM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NDcwNA==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377684704", "bodyText": "Done", "author": "madwau", "createdAt": "2020-02-11T14:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxODM3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM0OTIwNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377349205", "body": "Can you also change this `Long exerciseId` one to primitive type please?", "bodyText": "Can you also change this Long exerciseId one to primitive type please?", "bodyHTML": "<p dir=\"auto\">Can you also change this <code>Long exerciseId</code> one to primitive type please?</p>", "author": "maxr96", "createdAt": "2020-02-10T22:15:33Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -1013,4 +1013,21 @@ private boolean userHasPermissions(StudentParticipation participation) {\n     public List<StudentParticipation> findWithSubmissionsWithResultByStudentIdAndExercise(Long studentId, Set<Exercise> exercises) {\n         return studentParticipationRepository.findByStudentIdAndExerciseWithEagerSubmissionsResult(studentId, exercises);\n     }\n+\n+    /**\n+     * Get a mapping of participation ids to the number of submission for each participation.\n+     *\n+     * @param exerciseId the id of the exercise for which to consider participations\n+     * @return the number of submissions per participation in the given exercise\n+     */\n+    public Map<Long, Integer> countSubmissionsPerParticipationByExerciseId(Long exerciseId) {", "originalCommit": "751685a00dd3d49640e74ad789d39d39ecdff5a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyNDcyNg==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377524726", "bodyText": "Done", "author": "madwau", "createdAt": "2020-02-11T09:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM0OTIwNQ=="}], "type": "inlineReview"}, {"oid": "a05f13ab7dfe543ce17ceaaac3554f7d0470864c", "url": "https://github.com/ls1intum/Artemis/commit/a05f13ab7dfe543ce17ceaaac3554f7d0470864c", "message": "Merge branch 'develop' into feature/participations/filter-by-no-submissions", "committedDate": "2020-02-11T09:39:38Z", "type": "commit"}, {"oid": "94dc23e20c06ade0686ec0b7436856f3dda91163", "url": "https://github.com/ls1intum/Artemis/commit/94dc23e20c06ade0686ec0b7436856f3dda91163", "message": "Primitive type", "committedDate": "2020-02-11T09:40:32Z", "type": "commit"}, {"oid": "f7bb31a5520e31c170189689cc1b9cc7b36535fc", "url": "https://github.com/ls1intum/Artemis/commit/f7bb31a5520e31c170189689cc1b9cc7b36535fc", "message": "Add submissionCount to toString for Participation", "committedDate": "2020-02-11T09:42:17Z", "type": "commit"}, {"oid": "c21668eb3720f50b5dcd688648ae38c4b79a02a3", "url": "https://github.com/ls1intum/Artemis/commit/c21668eb3720f50b5dcd688648ae38c4b79a02a3", "message": "Update src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java\n\nCo-Authored-By: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-02-11T09:43:33Z", "type": "commit"}, {"oid": "213a773e877a8ceac8b7a1f442c54ef985f7565a", "url": "https://github.com/ls1intum/Artemis/commit/213a773e877a8ceac8b7a1f442c54ef985f7565a", "message": "Refactor", "committedDate": "2020-02-11T09:58:58Z", "type": "commit"}, {"oid": "ba2703390b04706e565b29f8363ff19c2f647f0b", "url": "https://github.com/ls1intum/Artemis/commit/ba2703390b04706e565b29f8363ff19c2f647f0b", "message": "Fix sorting by submission count in exercise scores", "committedDate": "2020-02-11T10:33:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1NDQyOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377654429", "body": "please use a better variable name than `t` and add one natural language comment before such asa\r\n\r\nconvert the list of arrays (with 2 values: participatoinId, submissionCount) into a Map <participationIid -> submissionCount>", "bodyText": "please use a better variable name than t and add one natural language comment before such asa\nconvert the list of arrays (with 2 values: participatoinId, submissionCount) into a Map <participationIid -> submissionCount>", "bodyHTML": "<p dir=\"auto\">please use a better variable name than <code>t</code> and add one natural language comment before such asa</p>\n<p dir=\"auto\">convert the list of arrays (with 2 values: participatoinId, submissionCount) into a Map &lt;participationIid -&gt; submissionCount&gt;</p>", "author": "krusche", "createdAt": "2020-02-11T14:07:01Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -1011,4 +1011,15 @@ private boolean userHasPermissions(StudentParticipation participation) {\n     public List<StudentParticipation> findWithSubmissionsWithResultByStudentIdAndExercise(Long studentId, Set<Exercise> exercises) {\n         return studentParticipationRepository.findByStudentIdAndExerciseWithEagerSubmissionsResult(studentId, exercises);\n     }\n+\n+    /**\n+     * Get a mapping of participation ids to the number of submission for each participation.\n+     *\n+     * @param exerciseId the id of the exercise for which to consider participations\n+     * @return the number of submissions per participation in the given exercise\n+     */\n+    public Map<Long, Integer> countSubmissionsPerParticipationByExerciseId(long exerciseId) {\n+        List<long[]> submissionCountTuples = studentParticipationRepository.countSubmissionsPerParticipationByExerciseId(exerciseId);\n+        return submissionCountTuples.stream().collect(Collectors.toMap(t -> t[0], t -> Math.toIntExact(t[1])));", "originalCommit": "ba2703390b04706e565b29f8363ff19c2f647f0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4NTcyOA==", "url": "https://github.com/ls1intum/Artemis/pull/1228#discussion_r377685728", "bodyText": "I decided to name it participationIdAndSubmissionCountPair instead of t and added the following comment:\n// convert List<[participationId, submissionCount]> into Map<participationId -> submissionCount>", "author": "madwau", "createdAt": "2020-02-11T14:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY1NDQyOQ=="}], "type": "inlineReview"}, {"oid": "0c1fe95bb5dab594551a1df8a10eacff95a0552d", "url": "https://github.com/ls1intum/Artemis/commit/0c1fe95bb5dab594551a1df8a10eacff95a0552d", "message": "Use Integer instead of int for submissionCount (to be able to differentiate between zero and null where null means that the submission count is not available, i.e. has not been computed and set)", "committedDate": "2020-02-11T14:46:27Z", "type": "commit"}, {"oid": "f255454bba6f7c82387a63437334a042b988065c", "url": "https://github.com/ls1intum/Artemis/commit/f255454bba6f7c82387a63437334a042b988065c", "message": "Rename variable + explanatory comment", "committedDate": "2020-02-11T14:54:17Z", "type": "commit"}, {"oid": "93ce2a3e64b3259ad9b2c452e621cfa80c499303", "url": "https://github.com/ls1intum/Artemis/commit/93ce2a3e64b3259ad9b2c452e621cfa80c499303", "message": "Merge branch 'develop' into feature/participations/filter-by-no-submissions", "committedDate": "2020-02-11T14:56:53Z", "type": "commit"}]}