{"pr_number": 740, "pr_title": "[CheckRuns] Add method for listing checkruns for given ref", "pr_author": "avano", "pr_createdAt": "2020-03-14T15:36:02Z", "pr_url": "https://github.com/hub4j/github-api/pull/740", "timeline": [{"oid": "2afffdd6c5abba9039c9d6418eb7457097ee2de7", "url": "https://github.com/hub4j/github-api/commit/2afffdd6c5abba9039c9d6418eb7457097ee2de7", "message": "[CheckRuns] Add method for listing checkruns for given ref", "committedDate": "2020-03-14T18:03:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3NDY2NA==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393774664", "body": "```suggestion\r\n     *             the io exception\r\n     * @see <a href=\"https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref\">List check runs for a specific ref</a>\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *             the io exception\n          \n          \n            \n                 *             the io exception\n          \n          \n            \n                 * @see <a href=\"https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref\">List check runs for a specific ref</a>", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"1783\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span>             the io exception</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"1783\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span>             the io exception</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"1784\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@see</span> <span class=\"pl-k\">&lt;</span>a href<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">List</span> check runs <span class=\"pl-k\">for</span> a specific ref<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>a<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-03-17T15:41:55Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -1773,6 +1773,24 @@ public GHCommitStatus getLastCommitStatus(String sha1) throws IOException {\n         return v.isEmpty() ? null : v.get(0);\n     }\n \n+    /**\n+     * Gets check runs for given ref.\n+     *\n+     * @param ref\n+     *            ref\n+     * @return check runs for given ref\n+     * @throws IOException\n+     *             the io exception", "originalCommit": "2afffdd6c5abba9039c9d6418eb7457097ee2de7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df0a3ff69e895daa9a6474eba263bfcf9f734584", "url": "https://github.com/hub4j/github-api/commit/df0a3ff69e895daa9a6474eba263bfcf9f734584", "message": "[CheckRuns] Add method for listing checkruns for given ref", "committedDate": "2020-03-17T16:03:54Z", "type": "forcePushed"}, {"oid": "04dca90294888a2e53c41e58c2bba5fd806147a3", "url": "https://github.com/hub4j/github-api/commit/04dca90294888a2e53c41e58c2bba5fd806147a3", "message": "[CheckRuns] Add method for listing checkruns for given ref", "committedDate": "2020-03-17T16:07:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393780434", "body": "I think you'll need to model this after the `PagedSearchIterable`.  The check runs use paged responses: https://developer.github.com/v3/checks/runs/#response-3\r\n\r\nYou'll also need to have a test that returns multiple pages (you can force this by having a paged iterable with a small `pageCount`.", "bodyText": "I think you'll need to model this after the PagedSearchIterable.  The check runs use paged responses: https://developer.github.com/v3/checks/runs/#response-3\nYou'll also need to have a test that returns multiple pages (you can force this by having a paged iterable with a small pageCount.", "bodyHTML": "<p dir=\"auto\">I think you'll need to model this after the <code>PagedSearchIterable</code>.  The check runs use paged responses: <a href=\"https://developer.github.com/v3/checks/runs/#response-3\">https://developer.github.com/v3/checks/runs/#response-3</a></p>\n<p dir=\"auto\">You'll also need to have a test that returns multiple pages (you can force this by having a paged iterable with a small <code>pageCount</code>.</p>", "author": "bitwiseman", "createdAt": "2020-03-17T15:49:18Z", "path": "src/main/java/org/kohsuke/github/GHCheckRuns.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.kohsuke.github;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Represents the response of listing check-runs for given ref.\n+ */\n+public class GHCheckRuns {", "originalCommit": "2afffdd6c5abba9039c9d6418eb7457097ee2de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Mzc0Mw==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393883743", "bodyText": "FYI, I don't love the behavior of PageSearchIterable currently. The Iterable has methods that I would rather see done elsewhere.\nThis method relies on a cached result, meaning the Iterable can get out of sync with underlying search results. \ud83d\ude2d\nhttps://github.com/github-api/github-api/blob/bccae94c7a740fa7ba297fd6eb2a6782ed156a98/src/main/java/org/kohsuke/github/PagedSearchIterable.java#L48-L50\nOpened #749 for this.", "author": "bitwiseman", "createdAt": "2020-03-17T18:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0NjA4Mg==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393946082", "bodyText": "Thanks, I didn't spot that :-) Is it OK to create a search builder class - with one method specifying the ref and not extending GHSearchBuilder - so that it's similar to other search builders even though it's not using the search api? Or should I not mix it with search other builders? Or any other idea? :-)", "author": "avano", "createdAt": "2020-03-17T20:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2NTMyMg==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393965322", "bodyText": "I don't have any strong requirement here except that the api properly support paging.\nNo, it shouldn't extend search builder, just use a the same basic structure with an adapt() method to create an iterator that works.\nProbably want to make GHCheckRuns into GHCheckRunsPage and make it internal.\nAnd then have a CheckRunsIterable also internal that extends PagedIterable<GHCheckRun>.   Finally, have getCheckRuns(String ref) return PagedIterable<GHCheckRun>.\nThe reason I suggest doing it this way, is to limit added API surface area. While your underlying implementation will be different, users will interact with it as a normal PagedIterable.", "author": "bitwiseman", "createdAt": "2020-03-17T20:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMTY2OQ==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r394201669", "bodyText": "I created a temp commit here avano@6ba7b3d - can you please check if I understood correctly?", "author": "avano", "createdAt": "2020-03-18T09:17:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMTUxNg==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r394601516", "bodyText": "@avano Yes, that looks right to me.", "author": "bitwiseman", "createdAt": "2020-03-18T19:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MDQzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4NDg3Mg==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393784872", "body": "Once you have `GHCheckRuns` using paging you can set page count to `1` and rerecord this.  Also, you could record this based on `github-api/github-api` which currently has a larger number of checks.", "bodyText": "Once you have GHCheckRuns using paging you can set page count to 1 and rerecord this.  Also, you could record this based on github-api/github-api which currently has a larger number of checks.", "bodyHTML": "<p dir=\"auto\">Once you have <code>GHCheckRuns</code> using paging you can set page count to <code>1</code> and rerecord this.  Also, you could record this based on <code>github-api/github-api</code> which currently has a larger number of checks.</p>", "author": "bitwiseman", "createdAt": "2020-03-17T15:55:06Z", "path": "src/test/java/org/kohsuke/github/GHRepositoryTest.java", "diffHunk": "@@ -496,4 +496,21 @@ public void listCollaborators() throws Exception {\n         List<GHUser> collaborators = repo.listCollaborators().toList();\n         assertThat(collaborators.size(), greaterThan(10));\n     }\n+\n+    @Test\n+    public void getCheckRuns() throws Exception {\n+        GHCheckRuns checkRuns = getRepository().getCheckRuns(\"8051615eff597f4e49f4f47625e6fc2b49f26bfc\");", "originalCommit": "2afffdd6c5abba9039c9d6418eb7457097ee2de7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg2OTkwNw==", "url": "https://github.com/hub4j/github-api/pull/740#discussion_r393869907", "body": "This method has bad performance.  Opened #748.  Thanks!", "bodyText": "This method has bad performance.  Opened #748.  Thanks!", "bodyHTML": "<p dir=\"auto\">This method has bad performance.  Opened <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"583197683\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hub4j/github-api/issues/748\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hub4j/github-api/issues/748/hovercard\" href=\"https://github.com/hub4j/github-api/issues/748\">#748</a>.  Thanks!</p>", "author": "bitwiseman", "createdAt": "2020-03-17T18:01:36Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -1773,6 +1773,26 @@ public GHCommitStatus getLastCommitStatus(String sha1) throws IOException {\n         return v.isEmpty() ? null : v.get(0);", "originalCommit": "04dca90294888a2e53c41e58c2bba5fd806147a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3b9c4a4f5898a2672b874c8e3e609c92f253e240", "url": "https://github.com/hub4j/github-api/commit/3b9c4a4f5898a2672b874c8e3e609c92f253e240", "message": "[GHEvent] Add new enum for registry_package event", "committedDate": "2020-03-19T16:37:41Z", "type": "forcePushed"}, {"oid": "5cb6bfa633ea40af49e3a148a37a4beaf0a1de06", "url": "https://github.com/hub4j/github-api/commit/5cb6bfa633ea40af49e3a148a37a4beaf0a1de06", "message": "[CheckRuns] Add method for listing checkruns for given ref", "committedDate": "2020-03-20T10:47:04Z", "type": "commit"}, {"oid": "452b56c47b44ad9851c70c5f12b8cf5620fbf83d", "url": "https://github.com/hub4j/github-api/commit/452b56c47b44ad9851c70c5f12b8cf5620fbf83d", "message": "[GHEvent] Add new enum for registry_package event", "committedDate": "2020-03-20T10:47:04Z", "type": "commit"}, {"oid": "452b56c47b44ad9851c70c5f12b8cf5620fbf83d", "url": "https://github.com/hub4j/github-api/commit/452b56c47b44ad9851c70c5f12b8cf5620fbf83d", "message": "[GHEvent] Add new enum for registry_package event", "committedDate": "2020-03-20T10:47:04Z", "type": "forcePushed"}]}