{"pr_number": 979, "pr_title": "pull_request action \"edited\": changes", "pr_author": "seregamorph", "pr_createdAt": "2020-11-18T18:14:42Z", "pr_url": "https://github.com/hub4j/github-api/pull/979", "timeline": [{"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "url": "https://github.com/hub4j/github-api/commit/04b283c5390cecdd48f55c840e4880c38a0d2e0e", "message": "pull_request action \"edited\": changes", "committedDate": "2020-11-18T17:41:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzA2MA==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317060", "body": "`base` changed - covered with UT\r\n`title` changed - covered with UT\r\n`body` changed - cover on demand", "bodyText": "base changed - covered with UT\ntitle changed - covered with UT\nbody changed - cover on demand", "bodyHTML": "<p dir=\"auto\"><code>base</code> changed - covered with UT<br>\n<code>title</code> changed - covered with UT<br>\n<code>body</code> changed - cover on demand</p>", "author": "seregamorph", "createdAt": "2020-11-18T18:15:21Z", "path": "src/main/java/org/kohsuke/github/GHPullRequestChanges.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * Wrapper to define changed fields on pull_request action=\"edited\"\n+ *\n+ * @see GHEventPayload.PullRequest\n+ */\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHPullRequestChanges {\n+\n+    private GHCommitPointer base;", "originalCommit": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzU5OA==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317598", "body": "body not changed - hence `\"changes\"` does not contain it", "bodyText": "body not changed - hence \"changes\" does not contain it", "bodyHTML": "<p dir=\"auto\">body not changed - hence <code>\"changes\"</code> does not contain it</p>", "author": "seregamorph", "createdAt": "2020-11-18T18:16:08Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));", "originalCommit": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDIyOQ==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400229", "body": "```suggestion\r\n        assertThat(event.getChanges().getBody(), nullValue());\r\n        assertThat(event.getChanges().getTitle(), nullValue());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"229\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span>getBody(), nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"229\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span>getBody(), nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"230\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span>getTitle(), nullValue());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-18T20:29:28Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "originalCommit": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDY2MA==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400660", "body": "```suggestion\r\n        assertThat(event.getChanges().getBody(), nullValue());\r\n        assertThat(event.getChanges(). getChanges(), nullValue());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"243\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span>getBody(), nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"243\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span>getBody(), nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"244\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-c1\">.</span> getChanges(), nullValue());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-18T20:30:13Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "originalCommit": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4", "url": "https://github.com/hub4j/github-api/commit/9ad0329c5692afd3c1903539fc0713b088487eb4", "message": "Apply suggestions from code review", "committedDate": "2020-11-18T20:47:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDY1NA==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526410654", "body": "```suggestion\r\n        assertThat(event.getChanges().getTitle(), nullValue());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-c1\">.</span><span class=\"x x-first x-last\"> getChanges</span>(), nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(event<span class=\"pl-k\">.</span>getChanges()<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getTitle</span>(), nullValue());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-18T20:48:45Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "originalCommit": "9ad0329c5692afd3c1903539fc0713b088487eb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8c81e48a31737e59945dbbd9f8d868cbad9afb52", "url": "https://github.com/hub4j/github-api/commit/8c81e48a31737e59945dbbd9f8d868cbad9afb52", "message": "Update src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "committedDate": "2020-11-18T20:48:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTQ1NQ==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411455", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        assertThat(event</span><span class=\"pl-k x\">.</span><span class=\"x\">getChanges()</span><span class=\"pl-c1 x\">.</span><span class=\"x x-last\"> getChanges(), nullValue());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-18T20:50:04Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "originalCommit": "9ad0329c5692afd3c1903539fc0713b088487eb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTgwNw==", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411807", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        assertThat(event</span><span class=\"pl-k x\">.</span><span class=\"x\">getChanges()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getTitle(), nullValue());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-18T20:50:41Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());", "originalCommit": "8c81e48a31737e59945dbbd9f8d868cbad9afb52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4415ac8fd2f72ee1290b3d958ae7ecaf16578316", "url": "https://github.com/hub4j/github-api/commit/4415ac8fd2f72ee1290b3d958ae7ecaf16578316", "message": "Update src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "committedDate": "2020-11-18T20:50:47Z", "type": "commit"}, {"oid": "ca365b12f62a1962150264df0c38bdaf33f757ec", "url": "https://github.com/hub4j/github-api/commit/ca365b12f62a1962150264df0c38bdaf33f757ec", "message": "Merge remote-tracking branch 'origin/master' into feature/pull_request-edited", "committedDate": "2020-11-19T10:44:56Z", "type": "commit"}, {"oid": "0feb520549632c8ddb41f36d192dffdd5f385676", "url": "https://github.com/hub4j/github-api/commit/0feb520549632c8ddb41f36d192dffdd5f385676", "message": "pull_request action \"edited\": changes - test", "committedDate": "2020-11-19T10:50:33Z", "type": "commit"}]}