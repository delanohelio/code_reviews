{"pr_number": 674, "pr_title": "Retry when SocketException with some sleep", "pr_author": "v1v", "pr_createdAt": "2020-01-23T16:57:18Z", "pr_url": "https://github.com/hub4j/github-api/pull/674", "timeline": [{"oid": "fca179abab6eb4f9c8305d3f2f0ad635a04542ba", "url": "https://github.com/hub4j/github-api/commit/fca179abab6eb4f9c8305d3f2f0ad635a04542ba", "message": "Retry if SocketException\n\nSee https://github.com/github-api/github-api/pull/373", "committedDate": "2020-01-23T13:33:12Z", "type": "commit"}, {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412", "url": "https://github.com/hub4j/github-api/commit/4f38ab36403166f2f4909c1d7d8970fd8519a412", "message": "Cosmetic change", "committedDate": "2020-01-23T14:01:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTc1NQ==", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370249755", "body": "Make a configurable static for this and probably make it 500 millis to start? \r\n```suggestion\r\n                    Thread.sleep(Requester.retryTimeoutMillis);\r\n```", "bodyText": "Make a configurable static for this and probably make it 500 millis to start?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Thread.sleep(5000);\n          \n          \n            \n                                Thread.sleep(Requester.retryTimeoutMillis);", "bodyHTML": "<p dir=\"auto\">Make a configurable static for this and probably make it 500 millis to start?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>sleep(<span class=\"pl-c1 x x-first x-last\">5000</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>sleep(<span class=\"pl-smi x x-first\">Requester</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">retryTimeoutMillis</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-01-23T17:17:57Z", "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);", "originalCommit": "4f38ab36403166f2f4909c1d7d8970fd8519a412", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MjgzMQ==", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370252831", "body": "This is also needed or the error just keeps happening.\r\n```suggestion\r\n                uc = setupConnection(uc.getURL());\r\n                return parse(type, instance, timeouts - 1);\r\n```", "bodyText": "This is also needed or the error just keeps happening.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return parse(type, instance, timeouts - 1);\n          \n          \n            \n                            uc = setupConnection(uc.getURL());\n          \n          \n            \n                            return parse(type, instance, timeouts - 1);", "bodyHTML": "<p dir=\"auto\">This is also needed or the error just keeps happening.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k x x-first\">return</span><span class=\"x\"> parse(type, instance, timeouts </span><span class=\"pl-k x\">-</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"x x-first\">uc </span><span class=\"pl-k x\">=</span><span class=\"x\"> setupConnection(uc</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getURL()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> parse(type, instance, timeouts <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-01-23T17:24:10Z", "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);\n+                } catch (InterruptedException _) {\n+                    throw (IOException) new InterruptedIOException().initCause(e);\n+                }\n                 return parse(type, instance, timeouts - 1);", "originalCommit": "4f38ab36403166f2f4909c1d7d8970fd8519a412", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cbe1022f20d3e9d1b02c3540f5f3cb0feca316c2", "url": "https://github.com/hub4j/github-api/commit/cbe1022f20d3e9d1b02c3540f5f3cb0feca316c2", "message": "Support more generic Socket Exceptions\n\nFor instance: connection reset by peer", "committedDate": "2020-01-23T20:28:57Z", "type": "commit"}, {"oid": "a5f04d44a4215e7e8811b6d08a3184794ac6f233", "url": "https://github.com/hub4j/github-api/commit/a5f04d44a4215e7e8811b6d08a3184794ac6f233", "message": "Fix javadoc warning", "committedDate": "2020-01-23T20:29:55Z", "type": "commit"}, {"oid": "20f04febf29c427d16f9202090352eae6ebcca2a", "url": "https://github.com/hub4j/github-api/commit/20f04febf29c427d16f9202090352eae6ebcca2a", "message": "As suggested in the code review, make a configurable sleep", "committedDate": "2020-01-23T20:36:00Z", "type": "commit"}, {"oid": "418ea9a19e936680ee371ac27586b2f05a833e73", "url": "https://github.com/hub4j/github-api/commit/418ea9a19e936680ee371ac27586b2f05a833e73", "message": "As suggested in the code review, handle exceptions and setup the connection", "committedDate": "2020-01-23T20:39:58Z", "type": "commit"}, {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "url": "https://github.com/hub4j/github-api/commit/d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "message": "UTs for the Timeout and Retry", "committedDate": "2020-01-23T21:09:14Z", "type": "commit"}, {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "url": "https://github.com/hub4j/github-api/commit/d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "message": "UTs for the Timeout and Retry", "committedDate": "2020-01-23T21:09:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjI4OQ==", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442289", "body": "I'd rather you do this in the test class. Override `before` and add this code there.", "bodyText": "I'd rather you do this in the test class. Override before and add this code there.", "bodyHTML": "<p dir=\"auto\">I'd rather you do this in the test class. Override <code>before</code> and add this code there.</p>", "author": "bitwiseman", "createdAt": "2020-01-24T01:44:33Z", "path": "src/test/java/org/kohsuke/github/junit/GitHubWireMockRule.java", "diffHunk": "@@ -87,6 +87,9 @@ protected void initializeServers() {\n     @Override\n     protected void before() {\n         super.before();\n+        this.apiServer()", "originalCommit": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjkxNg==", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442916", "body": "Cool thanks.  Take a look at #678. When you get a chance. You don't have to change this, just meant as an FYI. ", "bodyText": "Cool thanks.  Take a look at #678. When you get a chance. You don't have to change this, just meant as an FYI.", "bodyHTML": "<p dir=\"auto\">Cool thanks.  Take a look at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"554502471\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hub4j/github-api/issues/678\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/hub4j/github-api/pull/678/hovercard\" href=\"https://github.com/hub4j/github-api/pull/678\">#678</a>. When you get a chance. You don't have to change this, just meant as an FYI.</p>", "author": "bitwiseman", "createdAt": "2020-01-24T01:47:25Z", "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -923,7 +939,11 @@ private void retryInvalidCached404Response() throws IOException {\n         // scenarios. If GitHub ever fixes their issue and/or begins providing accurate ETags to\n         // their 404 responses, this will result in at worst two requests being made for each 404\n         // responses. However, only the second request will count against rate limit.\n-        int responseCode = uc.getResponseCode();\n+        int responseCode = 0;", "originalCommit": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "764599a7d9015a1b441f35c45195dbbe868e7d01", "url": "https://github.com/hub4j/github-api/commit/764599a7d9015a1b441f35c45195dbbe868e7d01", "message": "Move socket handling and add test", "committedDate": "2020-01-24T04:54:13Z", "type": "commit"}, {"oid": "74dd887c7922128cac78d82eb301f4eb5972c179", "url": "https://github.com/hub4j/github-api/commit/74dd887c7922128cac78d82eb301f4eb5972c179", "message": "Merge branch 'master' into master", "committedDate": "2020-01-24T06:22:42Z", "type": "commit"}, {"oid": "eb4000f26b60824be176d5fd6df687f6b817b388", "url": "https://github.com/hub4j/github-api/commit/eb4000f26b60824be176d5fd6df687f6b817b388", "message": "Streamline retry code path", "committedDate": "2020-01-24T20:32:04Z", "type": "commit"}]}