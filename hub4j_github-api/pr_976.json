{"pr_number": 976, "pr_title": "#947 base event payload", "pr_author": "seregamorph", "pr_createdAt": "2020-11-09T19:53:42Z", "pr_url": "https://github.com/hub4j/github-api/pull/976", "timeline": [{"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "url": "https://github.com/hub4j/github-api/commit/929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "message": "#947 base event payload", "committedDate": "2020-11-09T19:48:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4MzMzOA==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520083338", "body": "Pay attention: class made non-abstract. Reasoning: it allow to instantiate common event object:\r\n```java\r\nGitHub.offline()\r\n                .parseEventPayload(new StringReader(payload), GHEventPayload.class)\r\n```\r\nWhy this may be needed: if you want to validate the `X-Hub-Signature` before handling the payload, you may need common information like `repository` to resolve the secret.\r\nPossible workaround in case if the class is still abstract: make an empty subclass (in your local project, but in `org.kohsuke.github` package) and instantiate it.\r\nPossible incompatibility: not expected.", "bodyText": "Pay attention: class made non-abstract. Reasoning: it allow to instantiate common event object:\nGitHub.offline()\n                .parseEventPayload(new StringReader(payload), GHEventPayload.class)\nWhy this may be needed: if you want to validate the X-Hub-Signature before handling the payload, you may need common information like repository to resolve the secret.\nPossible workaround in case if the class is still abstract: make an empty subclass (in your local project, but in org.kohsuke.github package) and instantiate it.\nPossible incompatibility: not expected.", "bodyHTML": "<p dir=\"auto\">Pay attention: class made non-abstract. Reasoning: it allow to instantiate common event object:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"GitHub.offline()\n                .parseEventPayload(new StringReader(payload), GHEventPayload.class)\"><pre><span class=\"pl-smi\">GitHub</span><span class=\"pl-k\">.</span>offline()\n                .parseEventPayload(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringReader</span>(payload), <span class=\"pl-smi\">GHEventPayload</span><span class=\"pl-k\">.</span>class)</pre></div>\n<p dir=\"auto\">Why this may be needed: if you want to validate the <code>X-Hub-Signature</code> before handling the payload, you may need common information like <code>repository</code> to resolve the secret.<br>\nPossible workaround in case if the class is still abstract: make an empty subclass (in your local project, but in <code>org.kohsuke.github</code> package) and instantiate it.<br>\nPossible incompatibility: not expected.</p>", "author": "seregamorph", "createdAt": "2020-11-09T19:58:15Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4Mzc1MQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520083751", "body": "as declared in #947 moved from subclasses. Field may be null depending on the event type", "bodyText": "as declared in #947 moved from subclasses. Field may be null depending on the event type", "bodyHTML": "<p dir=\"auto\">as declared in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"709576476\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hub4j/github-api/issues/947\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hub4j/github-api/issues/947/hovercard\" href=\"https://github.com/hub4j/github-api/issues/947\">#947</a> moved from subclasses. Field may be null depending on the event type</p>", "author": "seregamorph", "createdAt": "2020-11-09T19:58:57Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NDE2Mw==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520084163", "body": "aggregated from overriden `wrapUp` methods and a getter with side effect (see below) because of fields lift", "bodyText": "aggregated from overriden wrapUp methods and a getter with side effect (see below) because of fields lift", "bodyHTML": "<p dir=\"auto\">aggregated from overriden <code>wrapUp</code> methods and a getter with side effect (see below) because of fields lift</p>", "author": "seregamorph", "createdAt": "2020-11-09T19:59:33Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -43,11 +59,64 @@ public void setSender(GHUser sender) {\n         this.sender = sender;\n     }\n \n+    /**\n+     * Gets repository.\n+     *\n+     * @return the repository\n+     */\n+    public GHRepository getRepository() {\n+        return repository;\n+    }\n+\n+    /**\n+     * Sets repository.\n+     *\n+     * @param repository\n+     *            the repository\n+     */\n+    public void setRepository(GHRepository repository) {\n+        this.repository = repository;\n+    }\n+\n+    /**\n+     * Gets organization.\n+     *\n+     * @return the organization\n+     */\n+    public GHOrganization getOrganization() {\n+        return organization;\n+    }\n+\n+    /**\n+     * Sets organization.\n+     *\n+     * @param organization\n+     *            the organization\n+     */\n+    public void setOrganization(GHOrganization organization) {\n+        this.organization = organization;\n+    }\n+\n+    /**\n+     * Gets installation\n+     *\n+     * @return the installation\n+     */\n+    public GHAppInstallation getInstallation() {\n+        return installation;\n+    }\n+\n     void wrapUp(GitHub root) {\n         this.root = root;\n         if (sender != null) {\n             sender.wrapUp(root);\n         }\n+        if (repository != null) {", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NDU3Mg==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520084572", "body": "replaced with `wrapUp` on the super-class", "bodyText": "replaced with wrapUp on the super-class", "bodyHTML": "<p dir=\"auto\">replaced with <code>wrapUp</code> on the super-class</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:00:16Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -131,16 +186,6 @@ public GHRequestedAction getRequestedAction() {\n             return requestedAction;\n         }\n \n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            repository.root = root;", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NTIwMg==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520085202", "body": "Note: all methods that were moved to a superclass were covered with tests `GHEventPayloadTest`. Where were not covered - tests enhanced.", "bodyText": "Note: all methods that were moved to a superclass were covered with tests GHEventPayloadTest. Where were not covered - tests enhanced.", "bodyHTML": "<p dir=\"auto\">Note: all methods that were moved to a superclass were covered with tests <code>GHEventPayloadTest</code>. Where were not covered - tests enhanced.</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:01:19Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -65,24 +134,10 @@ void wrapUp(GitHub root) {\n      *      check_run event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/checks#check-runs\">Check Runs</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n-            justification = \"JSON API\")\n     public static class CheckRun extends GHEventPayload {\n-        private String action;\n         private int number;\n         private GHCheckRun checkRun;\n         private GHRequestedAction requestedAction;\n-        private GHRepository repository;\n-\n-        /**\n-         * Gets action.\n-         *\n-         * @return the action\n-         */\n-        public String getAction() {", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NTUzMA==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520085530", "body": "most of suppressed spotbugs findings were redundant, also generalized on the class", "bodyText": "most of suppressed spotbugs findings were redundant, also generalized on the class", "bodyHTML": "<p dir=\"auto\">most of suppressed spotbugs findings were redundant, also generalized on the class</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:01:53Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -163,22 +208,8 @@ void wrapUp(GitHub root) {\n      *      check_suite event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/checks#check-suites\">Check Suites</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520086103", "body": "some fields are package visible, because subclasses work with them directly. Considerable: make private, replace with accessors", "bodyText": "some fields are package visible, because subclasses work with them directly. Considerable: make private, replace with accessors", "bodyHTML": "<p dir=\"auto\">some fields are package visible, because subclasses work with them directly. Considerable: make private, replace with accessors</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:02:53Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxMTU1NQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522311555", "bodyText": "@seregamorph\nYes, please make these private.", "author": "bitwiseman", "createdAt": "2020-11-12T18:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDM0NQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800345", "bodyText": "done", "author": "seregamorph", "createdAt": "2020-11-13T08:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjYxNQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520086615", "body": "note: snake_case replaced with camelCase, mapper is set up to force snake_case, so it was redundant", "bodyText": "note: snake_case replaced with camelCase, mapper is set up to force snake_case, so it was redundant", "bodyHTML": "<p dir=\"auto\">note: snake_case replaced with camelCase, mapper is set up to force snake_case, so it was redundant</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:03:57Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -454,19 +411,8 @@ void wrapUp(GitHub root) {\n      * @see <a href=\"https://docs.github.com/en/rest/reference/pulls#reviews\">Pull Request Reviews</a>\n      */\n     public static class PullRequestReview extends GHEventPayload {\n-        private String action;\n         private GHPullRequestReview review;\n-        private GHPullRequest pull_request;", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NzAwNQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520087005", "body": "moved to superclass", "bodyText": "moved to superclass", "bodyHTML": "<p dir=\"auto\">moved to superclass</p>", "author": "seregamorph", "createdAt": "2020-11-09T20:04:42Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -1183,55 +891,11 @@ void wrapUp(GitHub root) {\n      * event</a>\n      */\n     public static class Ping extends GHEventPayload {\n-        private GHRepository repository;\n-        private GHOrganization organization;\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Gets organization.\n-         *\n-         * @return the organization\n-         */\n-        public GHOrganization getOrganization() {\n-            return organization;\n-        }\n-\n-        /**\n-         * Sets organization.\n-         *\n-         * @param organization\n-         *            the organization\n-         */\n-        public void setOrganization(GHOrganization organization) {\n-            this.organization = organization;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             if (repository != null)\n                 repository.wrap(root);\n-            if (organization != null) {", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NzQ1Ng==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520087456", "body": "test for already addressed #943", "bodyText": "test for already addressed #943", "bodyHTML": "<p dir=\"auto\">test for already addressed <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"708386410\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hub4j/github-api/issues/943\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hub4j/github-api/issues/943/hovercard\" href=\"https://github.com/hub4j/github-api/issues/943\">#943</a></p>", "author": "seregamorph", "createdAt": "2020-11-09T20:05:34Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -232,6 +242,7 @@ public void pull_request_labeled() throws Exception {\n         assertThat(event.getPullRequest().getAdditions(), is(137));\n         assertThat(event.getPullRequest().getDeletions(), is(81));\n         assertThat(event.getPullRequest().getChangedFiles(), is(22));\n+        assertThat(event.getPullRequest().getLabels().iterator().next().getName(), is(\"Ready for Review\"));", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNDc3Mg==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522314772", "body": "```suggestion\r\n     *  Gets the action for the trigged event.\r\n     *\r\n     * Most but not all webhook payloads contain an action property that contains the specific activity that triggered the event.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Most webhook payloads contain an action property that contains the specific activity that triggered the event.\n          \n          \n            \n                 *  Gets the action for the trigged event.\n          \n          \n            \n                 *\n          \n          \n            \n                 * Most but not all webhook payloads contain an action property that contains the specific activity that triggered the event.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">Most</span><span class=\"x x-last\"> webhook payloads contain an </span>action <span class=\"x x-first x-last\">property that contains </span>the <span class=\"x x-first x-last\">specific activity that triggered the</span> event.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"x x-first\"> </span><span class=\"pl-smi x\">Gets</span><span class=\"x x-last\"> the </span>action <span class=\"pl-k x x-first\">for</span><span class=\"x x-last\"> </span>the <span class=\"x x-first x-last\">trigged</span> event.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Most</span> but not all webhook payloads contain an action property that contains the specific activity that triggered the event.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-12T18:13:30Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;\n+    private GHOrganization organization;\n+    GHAppInstallation installation;\n \n     GHEventPayload() {\n     }\n \n+    /**\n+     * Most webhook payloads contain an action property that contains the specific activity that triggered the event.", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDU2Mg==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800562", "bodyText": "done (typo in suggestion fixed)", "author": "seregamorph", "createdAt": "2020-11-13T08:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNDc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDkyMg==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522494922", "body": "The `super` handles the `repository.wrap()`, right?\r\n\r\n```suggestion\r\n        void wrapUp(GitHub root) {\r\n            super.wrapUp(root);\r\n```", "bodyText": "The super handles the repository.wrap(), right?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    void wrapUp(GitHub root) {\n          \n          \n            \n                        super.wrapUp(root);\n          \n          \n            \n                        repository.wrap(root);\n          \n          \n            \n                    void wrapUp(GitHub root) {\n          \n          \n            \n                        super.wrapUp(root);", "bodyHTML": "<p dir=\"auto\">The <code>super</code> handles the <code>repository.wrap()</code>, right?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">void</span> wrapUp(<span class=\"pl-smi\">GitHub</span> root) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>wrapUp(root);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            repository<span class=\"pl-k\">.</span>wrap(root);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">void</span> wrapUp(<span class=\"pl-smi\">GitHub</span> root) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>wrapUp(root);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bitwiseman", "createdAt": "2020-11-12T23:14:33Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -1635,68 +1235,11 @@ void wrapUp(GitHub root) {\n      *      repository event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/repos\">Repositories</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR\", \"NP_UNWRITTEN_FIELD\", \"UWF_UNWRITTEN_FIELD\" },\n-            justification = \"Constructed by JSON deserialization\")\n     public static class Repository extends GHEventPayload {\n-        private String action;\n-        private GHRepository repository;\n-        private GHOrganization organization;\n-\n-        /**\n-         * Gets action.\n-         *\n-         * @return the action\n-         */\n-        public String getAction() {\n-            return action;\n-        }\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Gets organization.\n-         *\n-         * @return the organization\n-         */\n-        public GHOrganization getOrganization() {\n-            return organization;\n-        }\n-\n-        /**\n-         * Sets organization.\n-         *\n-         * @param organization\n-         *            the organization\n-         */\n-        public void setOrganization(GHOrganization organization) {\n-            this.organization = organization;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             repository.wrap(root);", "originalCommit": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDcyNQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800725", "bodyText": "done. the inherited method removed (contains only a call to super)", "author": "seregamorph", "createdAt": "2020-11-13T08:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDkyMg=="}], "type": "inlineReview"}, {"oid": "74496d32da8899d6cde0a28a98e7ad18193a636b", "url": "https://github.com/hub4j/github-api/commit/74496d32da8899d6cde0a28a98e7ad18193a636b", "message": "Merge remote-tracking branch 'origin/master' into feature/base-event-payload", "committedDate": "2020-11-13T07:27:57Z", "type": "commit"}, {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "url": "https://github.com/hub4j/github-api/commit/b51d655f7757c87114a5a93a4acb8229a825c6ef", "message": "#947 address review comments", "committedDate": "2020-11-13T08:02:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTAwNw==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801007", "body": "inherited", "bodyText": "inherited", "bodyHTML": "<p dir=\"auto\">inherited</p>", "author": "seregamorph", "createdAt": "2020-11-13T08:41:34Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -131,24 +190,14 @@ public GHRequestedAction getRequestedAction() {\n             return requestedAction;\n         }\n \n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            repository.root = root;\n-            return repository;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             if (checkRun == null)\n                 throw new IllegalStateException(\n                         \"Expected check_run payload, but got something else. Maybe we've got another type of event?\");\n+            GHRepository repository = getRepository();\n             if (repository != null) {\n-                repository.wrap(root);", "originalCommit": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTEyNQ==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801125", "body": "inherited", "bodyText": "inherited", "bodyHTML": "<p dir=\"auto\">inherited</p>", "author": "seregamorph", "createdAt": "2020-11-13T08:41:50Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -258,11 +262,10 @@ public GHAppInstallation getInstallation() {\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n-            if (installation == null)\n+            if (getInstallation() == null) {\n                 throw new IllegalStateException(\n                         \"Expected check_suite payload, but got something else. Maybe we've got another type of event?\");\n-            else\n-                installation.wrapUp(root);", "originalCommit": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTU2OA==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801568", "body": "BTW this logic kept, but this line looks redundant (see wrapUp)", "bodyText": "BTW this logic kept, but this line looks redundant (see wrapUp)", "bodyHTML": "<p dir=\"auto\">BTW this logic kept, but this line looks redundant (see wrapUp)</p>", "author": "seregamorph", "createdAt": "2020-11-13T08:42:43Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -408,17 +376,8 @@ public int getNumber() {\n          * @return the pull request\n          */\n         public GHPullRequest getPullRequest() {\n-            pull_request.root = root;\n-            return pull_request;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n+            pullRequest.root = root;", "originalCommit": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMzgzMw==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522803833", "body": "fully inherited - hence removed", "bodyText": "fully inherited - hence removed", "bodyHTML": "<p dir=\"auto\">fully inherited - hence removed</p>", "author": "seregamorph", "createdAt": "2020-11-13T08:45:15Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -880,33 +697,6 @@ public String getMasterBranch() {\n         public String getDescription() {\n             return description;\n         }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        @Override\n-        void wrapUp(GitHub root) {", "originalCommit": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwNTMzOA==", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522805338", "body": "note: `repository.root = root;` replaced with `repository.wrap(root);`, a more complex. This way we can inherit this action in subclasses and remove `repository.wrap(root);` line from them.", "bodyText": "note: repository.root = root; replaced with repository.wrap(root);, a more complex. This way we can inherit this action in subclasses and remove repository.wrap(root); line from them.", "bodyHTML": "<p dir=\"auto\">note: <code>repository.root = root;</code> replaced with <code>repository.wrap(root);</code>, a more complex. This way we can inherit this action in subclasses and remove <code>repository.wrap(root);</code> line from them.</p>", "author": "seregamorph", "createdAt": "2020-11-13T08:46:55Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -112,11 +113,14 @@ void wrapUp(GitHub root) {\n             sender.wrapUp(root);\n         }\n         if (repository != null) {\n-            repository.root = root;\n+            repository.wrap(root);", "originalCommit": "b51d655f7757c87114a5a93a4acb8229a825c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}