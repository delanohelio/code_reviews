{"pr_number": 7150, "pr_title": "KEYCLOAK-14412 Keycloak.js should honor configured default scopes when onload 'require-login' is used", "pr_author": "thomasdarimont", "pr_createdAt": "2020-06-08T15:58:55Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7150", "timeline": [{"oid": "5a8d8c97aca6ed39af638c81dff24ac6d9347ebe", "url": "https://github.com/keycloak/keycloak/commit/5a8d8c97aca6ed39af638c81dff24ac6d9347ebe", "message": "KEYCLOAK-14412 Keycloak.js should honor configured default scopes when onload 'require-login' is used\n\nWe now add the configured default scopes to the login url when onload 'require-login' is used.\nPreviously, the configured default scopes were ignored when when\nonLoad: 'login-required' is used in the Keycloak configuration.", "committedDate": "2020-06-08T16:06:34Z", "type": "forcePushed"}, {"oid": "0ce69d0a92478970609c53eaba79e9bb097e7ecf", "url": "https://github.com/keycloak/keycloak/commit/0ce69d0a92478970609c53eaba79e9bb097e7ecf", "message": "KEYCLOAK-14412 Keycloak.js should honor configured default scopes when onload 'require-login' is used\n\nWe now add the configured default scopes to the login url when onload 'require-login' is used.\nPreviously, the configured default scopes were ignored when when\nonLoad: 'login-required' is used in the Keycloak configuration.", "committedDate": "2020-06-11T09:56:51Z", "type": "forcePushed"}, {"oid": "b161a68c50908d8d2744d437430369f2565077cd", "url": "https://github.com/keycloak/keycloak/commit/b161a68c50908d8d2744d437430369f2565077cd", "message": "KEYCLOAK-14412 Keycloak.js should honor configured default scopes when onload 'require-login' is used\n\nAdd support for passing scope to login URL creation from:\n- Configuration derived from `Keycloak.json`\n- Explicit keycloak configuration via `new Keycloak({...,scope:\"...\"})`\n- Keycloak init via `keycloak.init({...,scope:\"...\"})`", "committedDate": "2020-06-15T21:59:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1MTA2MA==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441051060", "body": "If I am not mistaken, before this line, you can do also something like that.\r\n\r\n```java\r\nassertThat(jsDriver.getCurrentUrl(), constainsString(\"&scope=profile email phone\"))\r\n```", "bodyText": "If I am not mistaken, before this line, you can do also something like that.\nassertThat(jsDriver.getCurrentUrl(), constainsString(\"&scope=profile email phone\"))", "bodyHTML": "<p dir=\"auto\">If I am not mistaken, before this line, you can do also something like that.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assertThat(jsDriver.getCurrentUrl(), constainsString(&quot;&amp;scope=profile email phone&quot;))\"><pre>assertThat(jsDriver<span class=\"pl-k\">.</span>getCurrentUrl(), constainsString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&amp;scope=profile email phone<span class=\"pl-pds\">\"</span></span>))</pre></div>", "author": "mhajas", "createdAt": "2020-06-16T18:18:16Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +397,69 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via explicit Keycloak configuration: <pre>{@code\n+     * new Keycloak({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testOnLoadRequireLoginShouldHonorScopes() {\n+\n+        JSObjectBuilder config = JSObjectBuilder.create()\n+                .add(\"url\", authServerContextRootPage + \"/auth\")\n+                .add(\"realm\", REALM_NAME)\n+                .add(\"clientId\", CLIENT_ID)\n+                .add(\"scope\", \"profile email phone\") // phone is optional client scope\n+                ;\n+\n+        JSObjectBuilder initOptions = defaultArguments().loginRequiredOnLoad();\n+\n+        try {\n+            testExecutor.configure(config)\n+                        .init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)", "originalCommit": "b161a68c50908d8d2744d437430369f2565077cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3OTI0Ng==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441179246", "bodyText": "I gave this a try:\nassertThat(jsDriver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));\nseems to work.", "author": "thomasdarimont", "createdAt": "2020-06-16T22:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1MTA2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NDAwNg==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441054006", "body": "This doesn't need to be async script, it is used if we need an output from asynchronous function, in this case you can use simple return like this:\r\n```suggestion\r\n       .executeScript(\"return window.keycloak.tokenParsed.scope\", assertOutputContains(\"phone\"));\r\n```", "bodyText": "This doesn't need to be async script, it is used if we need an output from asynchronous function, in this case you can use simple return like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .executeAsyncScript(\"var callback = arguments[arguments.length - 1];\" +\n          \n          \n            \n                   .executeScript(\"return window.keycloak.tokenParsed.scope\", assertOutputContains(\"phone\"));", "bodyHTML": "<p dir=\"auto\">This doesn't need to be async script, it is used if we need an output from asynchronous function, in this case you can use simple return like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">       <span class=\"x x-first\"> .executeAsyncScript(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">var callback = arguments[arguments.length - 1];</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">       <span class=\"x x-first\">.executeScript(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">return window.keycloak.tokenParsed.scope</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, assertOutputContains(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">phone</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">));</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mhajas", "createdAt": "2020-06-16T18:21:35Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +397,69 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via explicit Keycloak configuration: <pre>{@code\n+     * new Keycloak({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testOnLoadRequireLoginShouldHonorScopes() {\n+\n+        JSObjectBuilder config = JSObjectBuilder.create()\n+                .add(\"url\", authServerContextRootPage + \"/auth\")\n+                .add(\"realm\", REALM_NAME)\n+                .add(\"clientId\", CLIENT_ID)\n+                .add(\"scope\", \"profile email phone\") // phone is optional client scope\n+                ;\n+\n+        JSObjectBuilder initOptions = defaultArguments().loginRequiredOnLoad();\n+\n+        try {\n+            testExecutor.configure(config)\n+                        .init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)\n+                .init(initOptions, this::assertSuccessfullyLoggedIn)\n+        .executeAsyncScript(\"var callback = arguments[arguments.length - 1];\" +", "originalCommit": "b161a68c50908d8d2744d437430369f2565077cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NTUzMg==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441055532", "body": "Could you add a test also for the `init` function? ", "bodyText": "Could you add a test also for the init function?", "bodyHTML": "<p dir=\"auto\">Could you add a test also for the <code>init</code> function?</p>", "author": "mhajas", "createdAt": "2020-06-16T18:23:24Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +397,69 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via explicit Keycloak configuration: <pre>{@code\n+     * new Keycloak({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testOnLoadRequireLoginShouldHonorScopes() {\n+\n+        JSObjectBuilder config = JSObjectBuilder.create()\n+                .add(\"url\", authServerContextRootPage + \"/auth\")\n+                .add(\"realm\", REALM_NAME)\n+                .add(\"clientId\", CLIENT_ID)\n+                .add(\"scope\", \"profile email phone\") // phone is optional client scope\n+                ;\n+\n+        JSObjectBuilder initOptions = defaultArguments().loginRequiredOnLoad();\n+\n+        try {\n+            testExecutor.configure(config)\n+                        .init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)\n+                .init(initOptions, this::assertSuccessfullyLoggedIn)\n+        .executeAsyncScript(\"var callback = arguments[arguments.length - 1];\" +\n+                \"callback(window.keycloak.tokenParsed.scope)\", assertOutputContains(\"phone\"));\n+    }\n+\n+    /**\n+     * Test for scope handling via Keycloak configuration from {@code keycloak.json} : <pre>{@code\n+     * new Keycloak() -> keycloak.json {.... \"scope\": \"profile email phone\"}\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test // TODO findout why this test fails\n+    public void testConfigFromKeycloakJsonShouldHonorScopes() {\n+\n+        JSObjectBuilder initOptions = defaultArguments().loginRequiredOnLoad();\n+\n+        try {\n+            testExecutor.configure() // use keycloak.json from testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/resources/javascript/keycloak.json\n+                    .init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)\n+                .init(initOptions, this::assertSuccessfullyLoggedIn)\n+                .executeAsyncScript(\"var callback = arguments[arguments.length - 1];\" +\n+                        \"callback(window.keycloak.tokenParsed.scope)\", assertOutputContains(\"phone\"));\n+    }\n+", "originalCommit": "b161a68c50908d8d2744d437430369f2565077cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxOTAyNQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441319025", "bodyText": "There are now two tests, one for initOptions and another one loginOptions.", "author": "thomasdarimont", "createdAt": "2020-06-17T06:52:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NTUzMg=="}], "type": "inlineReview"}, {"oid": "c19c0571fc4877569ec332ba4e9c8d573ce7b490", "url": "https://github.com/keycloak/keycloak/commit/c19c0571fc4877569ec332ba4e9c8d573ce7b490", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-16T23:22:57Z", "type": "forcePushed"}, {"oid": "4e3d80d3cee89ed2052d334c6ccb458293a2f676", "url": "https://github.com/keycloak/keycloak/commit/4e3d80d3cee89ed2052d334c6ccb458293a2f676", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-16T23:26:02Z", "type": "forcePushed"}, {"oid": "6ebef5a3432fb4ec09106b38dc65ebd7186da290", "url": "https://github.com/keycloak/keycloak/commit/6ebef5a3432fb4ec09106b38dc65ebd7186da290", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-16T23:29:45Z", "type": "forcePushed"}, {"oid": "7b7d4428104268fea1f61e8c9a17281c919e4e3b", "url": "https://github.com/keycloak/keycloak/commit/7b7d4428104268fea1f61e8c9a17281c919e4e3b", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-16T23:30:28Z", "type": "forcePushed"}, {"oid": "2c8ead9df393e4656106ee31a9d49338db5562a2", "url": "https://github.com/keycloak/keycloak/commit/2c8ead9df393e4656106ee31a9d49338db5562a2", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-16T23:31:56Z", "type": "forcePushed"}, {"oid": "282e86964e1736037d97ba59b58163a6053fc2a0", "url": "https://github.com/keycloak/keycloak/commit/282e86964e1736037d97ba59b58163a6053fc2a0", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T06:46:51Z", "type": "forcePushed"}, {"oid": "8e29cc8dbe3b4fc7ec808fb2570cd34618d6270c", "url": "https://github.com/keycloak/keycloak/commit/8e29cc8dbe3b4fc7ec808fb2570cd34618d6270c", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T06:50:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxOTkxMw==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441319913", "body": "The JavascriptAdapter tests are a little bit confusing in this. They are mixing two variable names `driver` and `jsDriver`. Out testsuite has two browsers because JS adapter doesn't work in Htmlunit, which is the default browser for majority of tests (it is default because it is fast). So we added `jsDriver` as the second browser, which defaults to Phantomjs. This browser is able to work with JS adapter. \r\n\r\nNow the `JavascriptStateValidator` is there for checking the state after some Javascript piece of code was executed. It has three parameters `(driver, output, events)`. At the moment, the `driver` parameter is maybe a little bit redundant here as we always use `jsDriver`, but this can change in the future. So it would be better to use it here like this:\r\n```suggestion\r\n            assertThat(driver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));\r\n```\r\n\r\nthis way you use a webdriver provided by testExecutor and function (in this case `login()`) can decide what browser to use for validating the condition.\r\n\r\n\r\nOne more thing, you don't need to use the `testExecutor` for everything, the `jsDriver` (do not use `driver` outside of) is available even outside of testExecutor and it is perfectly ok to use it.", "bodyText": "The JavascriptAdapter tests are a little bit confusing in this. They are mixing two variable names driver and jsDriver. Out testsuite has two browsers because JS adapter doesn't work in Htmlunit, which is the default browser for majority of tests (it is default because it is fast). So we added jsDriver as the second browser, which defaults to Phantomjs. This browser is able to work with JS adapter.\nNow the JavascriptStateValidator is there for checking the state after some Javascript piece of code was executed. It has three parameters (driver, output, events). At the moment, the driver parameter is maybe a little bit redundant here as we always use jsDriver, but this can change in the future. So it would be better to use it here like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat(jsDriver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));\n          \n          \n            \n                        assertThat(driver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));\n          \n      \n    \n    \n  \n\nthis way you use a webdriver provided by testExecutor and function (in this case login()) can decide what browser to use for validating the condition.\nOne more thing, you don't need to use the testExecutor for everything, the jsDriver (do not use driver outside of) is available even outside of testExecutor and it is perfectly ok to use it.", "bodyHTML": "<p dir=\"auto\">The JavascriptAdapter tests are a little bit confusing in this. They are mixing two variable names <code>driver</code> and <code>jsDriver</code>. Out testsuite has two browsers because JS adapter doesn't work in Htmlunit, which is the default browser for majority of tests (it is default because it is fast). So we added <code>jsDriver</code> as the second browser, which defaults to Phantomjs. This browser is able to work with JS adapter.</p>\n<p dir=\"auto\">Now the <code>JavascriptStateValidator</code> is there for checking the state after some Javascript piece of code was executed. It has three parameters <code>(driver, output, events)</code>. At the moment, the <code>driver</code> parameter is maybe a little bit redundant here as we always use <code>jsDriver</code>, but this can change in the future. So it would be better to use it here like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            assertThat(<span class=\"x x-first x-last\">jsDriver</span><span class=\"pl-k\">.</span>getCurrentUrl(), containsString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&amp;scope=openid%20profile%20email%20phone<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertThat(<span class=\"x x-first x-last\">driver</span><span class=\"pl-k\">.</span>getCurrentUrl(), containsString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&amp;scope=openid%20profile%20email%20phone<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">this way you use a webdriver provided by testExecutor and function (in this case <code>login()</code>) can decide what browser to use for validating the condition.</p>\n<p dir=\"auto\">One more thing, you don't need to use the <code>testExecutor</code> for everything, the <code>jsDriver</code> (do not use <code>driver</code> outside of) is available even outside of testExecutor and it is perfectly ok to use it.</p>", "author": "mhajas", "createdAt": "2020-06-17T06:54:27Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +398,58 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via {@code initOptions}: <pre>{@code\n+     * Keycloak keycloak = new Keycloak(); keycloak.init({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testScopeInInitOptionsShouldBeConsideredByLoginUrl() {\n+\n+        JSObjectBuilder initOptions = defaultArguments()\n+                .loginRequiredOnLoad()\n+                // phone is optional client scope\n+                .add(\"scope\", \"profile email phone\");\n+\n+        try {\n+            testExecutor.init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)\n+                .init(initOptions, this::assertSuccessfullyLoggedIn)\n+        .executeScript(\"return window.keycloak.tokenParsed.scope\", assertOutputContains(\"phone\"));\n+    }\n+\n+    /**\n+     * Test for scope handling via {@code loginOptions}: <pre>{@code\n+     * Keycloak keycloak = new Keycloak(); keycloak.login({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testScopeInLoginOptionsShouldBeConsideredByLoginUrl() {\n+\n+        try {\n+            testExecutor.configure()\n+                        .init(defaultArguments());\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        JSObjectBuilder loginOptions = JSObjectBuilder.create().add(\"scope\", \"profile email phone\");\n+\n+        testExecutor.login(loginOptions.build(), (JavascriptStateValidator) (driver, output, events) -> {\n+            assertThat(jsDriver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));", "originalCommit": "8e29cc8dbe3b4fc7ec808fb2570cd34618d6270c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMzMwMQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441323301", "bodyText": "Hopefully, it is understandable and I don't just confuse you more. I like our JS tests, but lots of people are struggling with them. It is almost done though,  just some nitpicks to fix", "author": "mhajas", "createdAt": "2020-06-17T07:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxOTkxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMDc0OQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441320749", "body": "You can put this here as well:\r\n```suggestion\r\nassertThat(jsDriver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));\r\n```", "bodyText": "You can put this here as well:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            assertThat(jsDriver.getCurrentUrl(), containsString(\"&scope=openid%20profile%20email%20phone\"));", "bodyHTML": "<p dir=\"auto\">You can put this here as well:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"474\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"474\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">assertThat(jsDriver</span><span class=\"pl-k x\">.</span><span class=\"x\">getCurrentUrl(), containsString(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">&amp;scope=openid%20profile%20email%20phone</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">));</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mhajas", "createdAt": "2020-06-17T06:55:55Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +398,58 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via {@code initOptions}: <pre>{@code\n+     * Keycloak keycloak = new Keycloak(); keycloak.init({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testScopeInInitOptionsShouldBeConsideredByLoginUrl() {\n+\n+        JSObjectBuilder initOptions = defaultArguments()\n+                .loginRequiredOnLoad()\n+                // phone is optional client scope\n+                .add(\"scope\", \"profile email phone\");\n+\n+        try {\n+            testExecutor.init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+", "originalCommit": "8e29cc8dbe3b4fc7ec808fb2570cd34618d6270c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3OTUyMQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441379521", "bodyText": "This doesn't work here:\nExpected :a string containing \"&scope=openid%20profile%20email%20phone\"\nActual   :\"https://localhost:8543/auth/realms/test/protocol/openid-connect/auth?client_id=account&redirect_uri=https%3A%2F%2Flocalhost%3A8543%2Fauth%2Frealms%2Ftest%2Faccount%2Flogin-redirect&state=0%2F4c2c6895-ca59-491c-b874-2d440ee84732&response_type=code&scope=openid\"\n\nThe following test for the phone claim works though.", "author": "thomasdarimont", "createdAt": "2020-06-17T08:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMDc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzNDQ3Mg==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441634472", "bodyText": "Weird. This works for me, are you sure you used the exact line I pasted here?", "author": "mhajas", "createdAt": "2020-06-17T15:27:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMDc0OQ=="}], "type": "inlineReview"}, {"oid": "0c0b5798cc53a4ba2a2b81b75960d95627b04adf", "url": "https://github.com/keycloak/keycloak/commit/0c0b5798cc53a4ba2a2b81b75960d95627b04adf", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T06:59:42Z", "type": "forcePushed"}, {"oid": "47bf49f833b5a7ef20ce8fb3f9bc939884230a0d", "url": "https://github.com/keycloak/keycloak/commit/47bf49f833b5a7ef20ce8fb3f9bc939884230a0d", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T08:38:40Z", "type": "forcePushed"}, {"oid": "969c014001a9f239a8d10c3bdfc0733b24050729", "url": "https://github.com/keycloak/keycloak/commit/969c014001a9f239a8d10c3bdfc0733b24050729", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T08:41:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNTY3MQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441605671", "body": "```suggestion\r\n        return login((String)null, null);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return login((JSObjectBuilder)null, null);\n          \n          \n            \n                    return login((String)null, null);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> login((<span class=\"pl-smi x x-first x-last\">JSObjectBuilder</span>)<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> login((<span class=\"pl-smi x x-first x-last\">String</span>)<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mhajas", "createdAt": "2020-06-17T14:50:22Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/util/javascript/JavascriptTestExecutor.java", "diffHunk": "@@ -39,13 +39,17 @@ protected JavascriptTestExecutor(WebDriver driver, OIDCLogin loginPage) {\n     }\n \n     public JavascriptTestExecutor login() {\n-        return login(null, null);\n+        return login((JSObjectBuilder)null, null);", "originalCommit": "969c014001a9f239a8d10c3bdfc0733b24050729", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxNjkwNQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441716905", "bodyText": "k", "author": "thomasdarimont", "createdAt": "2020-06-17T17:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNTY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNTgwNw==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441605807", "body": "```suggestion\r\n        return login((String)null, validator);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return login((JSObjectBuilder)null, validator);\n          \n          \n            \n                    return login((String)null, validator);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> login((<span class=\"pl-smi x x-first x-last\">JSObjectBuilder</span>)<span class=\"pl-c1\">null</span>, validator);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> login((<span class=\"pl-smi x x-first x-last\">String</span>)<span class=\"pl-c1\">null</span>, validator);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mhajas", "createdAt": "2020-06-17T14:50:32Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/util/javascript/JavascriptTestExecutor.java", "diffHunk": "@@ -39,13 +39,17 @@ protected JavascriptTestExecutor(WebDriver driver, OIDCLogin loginPage) {\n     }\n \n     public JavascriptTestExecutor login() {\n-        return login(null, null);\n+        return login((JSObjectBuilder)null, null);\n     }\n     \n     public JavascriptTestExecutor login(JavascriptStateValidator validator) {\n-        return login(null, validator);\n+        return login((JSObjectBuilder)null, validator);", "originalCommit": "969c014001a9f239a8d10c3bdfc0733b24050729", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxNjg3MA==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441716870", "bodyText": "k", "author": "thomasdarimont", "createdAt": "2020-06-17T17:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNTgwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNjU2Mw==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441606563", "body": "This `try-catch` block is not necessary. It is necessary only when you are using `onLoad: login-required`.", "bodyText": "This try-catch block is not necessary. It is necessary only when you are using onLoad: login-required.", "bodyHTML": "<p dir=\"auto\">This <code>try-catch</code> block is not necessary. It is necessary only when you are using <code>onLoad: login-required</code>.</p>", "author": "mhajas", "createdAt": "2020-06-17T14:51:33Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/javascript/JavascriptAdapterTest.java", "diffHunk": "@@ -400,6 +398,58 @@ public void loginRequiredAction() {\n                 .init(defaultArguments(), this::assertSuccessfullyLoggedIn);\n     }\n \n+    /**\n+     * Test for scope handling via {@code initOptions}: <pre>{@code\n+     * Keycloak keycloak = new Keycloak(); keycloak.init({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testScopeInInitOptionsShouldBeConsideredByLoginUrl() {\n+\n+        JSObjectBuilder initOptions = defaultArguments()\n+                .loginRequiredOnLoad()\n+                // phone is optional client scope\n+                .add(\"scope\", \"profile email phone\");\n+\n+        try {\n+            testExecutor.init(initOptions);\n+            // This throws exception because when JavascriptExecutor waits for AsyncScript to finish\n+            // it is redirected to login page and executor gets no response\n+\n+            throw new RuntimeException(\"Probably the login-required OnLoad mode doesn't work, because testExecutor should fail with error that page was redirected.\");\n+        } catch (WebDriverException ex) {\n+            // should happen\n+        }\n+\n+        testExecutor.loginForm(testUser, this::assertOnTestAppUrl)\n+                    .init(initOptions, this::assertSuccessfullyLoggedIn)\n+                    .executeScript(\"return window.keycloak.tokenParsed.scope\", assertOutputContains(\"phone\"));\n+    }\n+\n+    /**\n+     * Test for scope handling via {@code loginOptions}: <pre>{@code\n+     * Keycloak keycloak = new Keycloak(); keycloak.login({.... scope: \"profile email phone\"})\n+     * }</pre>\n+     * See KEYCLOAK-14412\n+     */\n+    @Test\n+    public void testScopeInLoginOptionsShouldBeConsideredByLoginUrl() {\n+\n+        try {", "originalCommit": "969c014001a9f239a8d10c3bdfc0733b24050729", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxNjgyNQ==", "url": "https://github.com/keycloak/keycloak/pull/7150#discussion_r441716825", "bodyText": "Okay, I'll remove the block.", "author": "thomasdarimont", "createdAt": "2020-06-17T17:40:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNjU2Mw=="}], "type": "inlineReview"}, {"oid": "87a644e21f45464e44a14df9d8f9ed4ee9d13323", "url": "https://github.com/keycloak/keycloak/commit/87a644e21f45464e44a14df9d8f9ed4ee9d13323", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-17T17:42:38Z", "type": "forcePushed"}, {"oid": "c2f257bdb0c02f10d0ae9c65b34e98c6270e0ded", "url": "https://github.com/keycloak/keycloak/commit/c2f257bdb0c02f10d0ae9c65b34e98c6270e0ded", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-06-18T12:38:24Z", "type": "forcePushed"}, {"oid": "8e5f1520ca2439dc188e8d53fb7c5f8a5476a992", "url": "https://github.com/keycloak/keycloak/commit/8e5f1520ca2439dc188e8d53fb7c5f8a5476a992", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-07-02T20:32:19Z", "type": "forcePushed"}, {"oid": "d3d605e0091d08b779c996dabf419496bb120e71", "url": "https://github.com/keycloak/keycloak/commit/d3d605e0091d08b779c996dabf419496bb120e71", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-10-20T22:41:53Z", "type": "forcePushed"}, {"oid": "5a91287c59544e9e812f13e1ff99f47f3d43e10a", "url": "https://github.com/keycloak/keycloak/commit/5a91287c59544e9e812f13e1ff99f47f3d43e10a", "message": "KEYCLOAK-14412 Fixed compiler error in JavascriptAdapterTests", "committedDate": "2020-10-20T23:23:03Z", "type": "forcePushed"}, {"oid": "f294518fbe5137c56642876192f21ef2239944c6", "url": "https://github.com/keycloak/keycloak/commit/f294518fbe5137c56642876192f21ef2239944c6", "message": "KEYCLOAK-14412 Fixed compiler error in JavascriptAdapterTests", "committedDate": "2020-10-26T23:31:29Z", "type": "forcePushed"}, {"oid": "433b6d4a77e0fabf06b85617dce5d8ec6c79c0d4", "url": "https://github.com/keycloak/keycloak/commit/433b6d4a77e0fabf06b85617dce5d8ec6c79c0d4", "message": "KEYCLOAK-14412 Fixed compiler error in JavascriptAdapterTests", "committedDate": "2020-11-18T13:44:13Z", "type": "forcePushed"}, {"oid": "ba0b6ff282cdac5592a2f9f41b8d14fea9620751", "url": "https://github.com/keycloak/keycloak/commit/ba0b6ff282cdac5592a2f9f41b8d14fea9620751", "message": "KEYCLOAK-14412 Keycloak.js should honor scopes configured in initOptions and loginOptions", "committedDate": "2020-11-18T13:44:11Z", "type": "commit"}, {"oid": "433b6d4a77e0fabf06b85617dce5d8ec6c79c0d4", "url": "https://github.com/keycloak/keycloak/commit/433b6d4a77e0fabf06b85617dce5d8ec6c79c0d4", "message": "KEYCLOAK-14412 Fixed compiler error in JavascriptAdapterTests", "committedDate": "2020-11-18T13:44:13Z", "type": "commit"}]}