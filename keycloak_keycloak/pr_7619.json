{"pr_number": 7619, "pr_title": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user\u2026", "pr_author": "sguilhen", "pr_createdAt": "2020-11-17T05:14:00Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7619", "timeline": [{"oid": "9010662b5b72764beebae029a683128f84af43aa", "url": "https://github.com/keycloak/keycloak/commit/9010662b5b72764beebae029a683128f84af43aa", "message": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user interfaces default instead of the collection-based versions.\n - this ensures that providing implementation for the collection-based methods is enough, which preserves\n   backwards compatibility with older custom implementations.\n - alternative interfaces now allow new implementations to focus on the stream variants of the query methods.", "committedDate": "2020-11-18T01:01:06Z", "type": "forcePushed"}, {"oid": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c", "url": "https://github.com/keycloak/keycloak/commit/a80a19ce93fe04630f6c4f2cc6793cb8ab55117c", "message": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user interfaces default instead of the collection-based versions.\n - this ensures that providing implementation for the collection-based methods is enough, which preserves\n   backwards compatibility with older custom implementations.\n - alternative interfaces now allow new implementations to focus on the stream variants of the query methods.", "committedDate": "2020-11-18T01:04:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2MDE3Ng==", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525960176", "body": "Default implementation from the superinterface gets inherited regardless.\r\nPerhaps the following could be used instead:\r\n```suggestion\r\n        @Override\r\n        default Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm) {\r\n            throw new UnsupportedOperationException(\"Not implemented yet.\");\r\n        }\r\n\r\n```", "bodyText": "Default implementation from the superinterface gets inherited regardless.\nPerhaps the following could be used instead:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    @Override\n          \n          \n            \n                    Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm);\n          \n          \n            \n                    @Override\n          \n          \n            \n                    default Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm) {\n          \n          \n            \n                        throw new UnsupportedOperationException(\"Not implemented yet.\");\n          \n          \n            \n                    }", "bodyHTML": "<p dir=\"auto\">Default implementation from the superinterface gets inherited regardless.<br>\nPerhaps the following could be used instead:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"182\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"183\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">FederatedIdentityModel</span>&gt;</span> getFederatedIdentitiesStream(<span class=\"pl-smi\">UserModel</span> user, <span class=\"pl-smi\">RealmModel</span> realm);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"182\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"183\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">default</span> <span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">FederatedIdentityModel</span>&gt;</span> getFederatedIdentitiesStream(<span class=\"pl-smi\">UserModel</span> user, <span class=\"pl-smi\">RealmModel</span> realm) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"184\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UnsupportedOperationException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not implemented yet.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"185\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"186\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-11-18T10:04:01Z", "path": "server-spi/src/main/java/org/keycloak/models/UserProvider.java", "diffHunk": "@@ -168,4 +172,38 @@\n     void close();\n \n     void preRemove(RealmModel realm, ComponentModel component);\n+\n+    interface Streams extends UserProvider, UserQueryProvider.Streams {\n+        @Override\n+        default Set<FederatedIdentityModel> getFederatedIdentities(UserModel user, RealmModel realm) {\n+            return this.getFederatedIdentitiesStream(user, realm).collect(Collectors.toSet());\n+        }\n+\n+        @Override\n+        Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm);\n+", "originalCommit": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NzE2Mw==", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525987163", "bodyText": "Please ignore this one. I must have made a mistake when trying this.", "author": "hmlnarik", "createdAt": "2020-11-18T10:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2MDE3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2OTQwNg==", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525969406", "body": "Please return this file to the state before #7524.", "bodyText": "Please return this file to the state before #7524.", "bodyHTML": "<p dir=\"auto\">Please return this file to the state before <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"726712959\" data-permission-text=\"Title is private\" data-url=\"https://github.com/keycloak/keycloak/issues/7524\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/keycloak/keycloak/pull/7524/hovercard\" href=\"https://github.com/keycloak/keycloak/pull/7524\">#7524</a>.</p>", "author": "hmlnarik", "createdAt": "2020-11-18T10:17:50Z", "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/federation/UserPropertyFileStorage.java", "diffHunk": "@@ -43,7 +43,8 @@\n  * @author <a href=\"mailto:bill@burkecentral.com\">Bill Burke</a>\n  * @version $Revision: 1 $\n  */\n-public class UserPropertyFileStorage implements UserLookupProvider, UserStorageProvider, UserQueryProvider, CredentialInputValidator {\n+public class UserPropertyFileStorage implements UserLookupProvider, UserStorageProvider, UserQueryProvider.Streams,", "originalCommit": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0120bf9b2d4b213edc314e9533c07b587b77ccaf", "url": "https://github.com/keycloak/keycloak/commit/0120bf9b2d4b213edc314e9533c07b587b77ccaf", "message": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user interfaces default instead of the collection-based versions.\n - this ensures that providing implementation for the collection-based methods is enough, which preserves\n   backwards compatibility with older custom implementations.\n - alternative interfaces now allow new implementations to focus on the stream variants of the query methods.", "committedDate": "2020-11-18T11:24:46Z", "type": "forcePushed"}, {"oid": "6687364fbf434a8277b937a76ba53129488ebcf5", "url": "https://github.com/keycloak/keycloak/commit/6687364fbf434a8277b937a76ba53129488ebcf5", "message": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user interfaces default instead of the collection-based versions.\n - this ensures that providing implementation for the collection-based methods is enough, which preserves\n   backwards compatibility with older custom implementations.\n - alternative interfaces now allow new implementations to focus on the stream variants of the query methods.", "committedDate": "2020-11-18T18:12:23Z", "type": "commit"}, {"oid": "6687364fbf434a8277b937a76ba53129488ebcf5", "url": "https://github.com/keycloak/keycloak/commit/6687364fbf434a8277b937a76ba53129488ebcf5", "message": "[KEYCLOAK-16341] Make the new stream-based methods in server-spi user interfaces default instead of the collection-based versions.\n - this ensures that providing implementation for the collection-based methods is enough, which preserves\n   backwards compatibility with older custom implementations.\n - alternative interfaces now allow new implementations to focus on the stream variants of the query methods.", "committedDate": "2020-11-18T18:12:23Z", "type": "forcePushed"}]}