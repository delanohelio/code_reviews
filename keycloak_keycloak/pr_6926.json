{"pr_number": 6926, "pr_title": "[KEYCLOAK-2343] - Allow exact user search by user attributes", "pr_author": "pedroigor", "pr_createdAt": "2020-03-24T13:55:02Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6926", "timeline": [{"oid": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "url": "https://github.com/keycloak/keycloak/commit/91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes", "committedDate": "2020-03-24T15:05:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzNTk3Nw==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r397235977", "body": "?????", "bodyText": "?????", "bodyHTML": "<p dir=\"auto\">?????</p>", "author": "stianst", "createdAt": "2020-03-24T15:19:52Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/ldap/LDAPGroupMapperTest.java", "diffHunk": "@@ -74,6 +74,11 @@ protected void afterImportTestRealm() {\n     @Test\n     public void test01_ldapOnlyGroupMappings() {\n         test01_ldapOnlyGroupMappings(true);\n+        try {\n+            Thread.sleep(1000000000);", "originalCommit": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM1OTIzMA==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r397359230", "bodyText": "Oops !", "author": "pedroigor", "createdAt": "2020-03-24T18:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzNTk3Nw=="}], "type": "inlineReview"}, {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db", "url": "https://github.com/keycloak/keycloak/commit/d0e6d474385d397a37b5d581006f181f0b3a28db", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes", "committedDate": "2020-03-24T18:05:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4Mjg0Nw==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437482847", "body": "I believe admin client should rather add `exact` on the parameter-richest variant of `search(String search, Integer firstResult, Integer maxResults, Boolean briefRepresentation)`. \r\n\\<sigh>Pity Java does not have any support for default parameter values.\\</sigh>", "bodyText": "I believe admin client should rather add exact on the parameter-richest variant of search(String search, Integer firstResult, Integer maxResults, Boolean briefRepresentation).\n<sigh>Pity Java does not have any support for default parameter values.</sigh>", "bodyHTML": "<p dir=\"auto\">I believe admin client should rather add <code>exact</code> on the parameter-richest variant of <code>search(String search, Integer firstResult, Integer maxResults, Boolean briefRepresentation)</code>.<br>\n&lt;sigh&gt;Pity Java does not have any support for default parameter values.&lt;/sigh&gt;</p>", "author": "hmlnarik", "createdAt": "2020-06-09T14:48:33Z", "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UsersResource.java", "diffHunk": "@@ -56,6 +56,10 @@\n     @Produces(MediaType.APPLICATION_JSON)\n     List<UserRepresentation> search(@QueryParam(\"username\") String username);\n \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<UserRepresentation> search(@QueryParam(\"username\") String username, @QueryParam(\"exact\") Boolean exact);", "originalCommit": "d0e6d474385d397a37b5d581006f181f0b3a28db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3ODgyNw==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437578827", "bodyText": "I see your point. However, that is going to break people using that method. What I can do is add a new variant of it with the new parameter.\nThe method you mentioned means also another type of query that looks up multiple properties (iirc, email, username, first/last names).\nThis one is specific for username and for other usages the API is ready. The focus here is really the API.", "author": "pedroigor", "createdAt": "2020-06-09T16:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4Mjg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4NjQ0MA==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437486440", "body": "For better performance and smaller memory footprint, evaluate the predicate early:\r\n```suggestion\r\n        Predicate<String> p = Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))\r\n            ? username -> username.equals(search)\r\n            : username -> username.contains(search);\r\n        return searchForUser(search, realm, firstResult, maxResults, p);\r\n```", "bodyText": "For better performance and smaller memory footprint, evaluate the predicate early:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return searchForUser(search, realm, firstResult, maxResults, username -> {\n          \n          \n            \n                        if (Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))) {\n          \n          \n            \n                            return username.equals(search);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            return username.contains(search);\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    Predicate<String> p = Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))\n          \n          \n            \n                        ? username -> username.equals(search)\n          \n          \n            \n                        : username -> username.contains(search);\n          \n          \n            \n                    return searchForUser(search, realm, firstResult, maxResults, p);", "bodyHTML": "<p dir=\"auto\">For better performance and smaller memory footprint, evaluate the predicate early:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> searchForUser(search, realm, firstResult, maxResults, username <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span>valueOf(attributes<span class=\"pl-k\">.</span>getOrDefault(<span class=\"pl-smi\">UserModel</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>EXACT</span>, <span class=\"pl-smi\">Boolean</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>FALSE</span><span class=\"pl-k\">.</span>toString()))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> username<span class=\"pl-k\">.</span>equals(search);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> username<span class=\"pl-k\">.</span>contains(search);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">String</span>&gt;</span> p <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span>valueOf(attributes<span class=\"pl-k\">.</span>getOrDefault(<span class=\"pl-smi\">UserModel</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>EXACT</span>, <span class=\"pl-smi\">Boolean</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>FALSE</span><span class=\"pl-k\">.</span>toString()))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">?</span> username <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> username<span class=\"pl-k\">.</span>equals(search)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">:</span> username <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> username<span class=\"pl-k\">.</span>contains(search);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> searchForUser(search, realm, firstResult, maxResults, p);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-06-09T14:53:06Z", "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/federation/UserPropertyFileStorage.java", "diffHunk": "@@ -174,28 +175,21 @@ public int getUsersCount(RealmModel realm) {\n \n     @Override\n     public List<UserModel> searchForUser(String search, RealmModel realm, int firstResult, int maxResults) {\n-        if (maxResults == 0) return Collections.EMPTY_LIST;\n-        List<UserModel> users = new LinkedList<>();\n-        int count = 0;\n-        for (Object un : userPasswords.keySet()) {\n-            String username = (String)un;\n-            if (username.contains(search)) {\n-                if (count++ < firstResult) {\n-                    continue;\n-                }\n-                users.add(createUser(realm, username));\n-                if (users.size() + 1 > maxResults) break;\n-            }\n-        }\n-        return users;\n+        return searchForUser(search, realm, firstResult, maxResults, username -> username.contains(search));\n     }\n \n     @Override\n     public List<UserModel> searchForUser(Map<String, String> attributes, RealmModel realm, int firstResult, int maxResults) {\n         String search = Optional.ofNullable(attributes.get(UserModel.USERNAME))\n                 .orElseGet(()-> attributes.get(UserModel.SEARCH));\n         if (search == null) return Collections.EMPTY_LIST;\n-        return searchForUser(search, realm, firstResult, maxResults);\n+        return searchForUser(search, realm, firstResult, maxResults, username -> {\n+            if (Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))) {\n+                return username.equals(search);\n+            } else {\n+                return username.contains(search);\n+            }\n+        });", "originalCommit": "d0e6d474385d397a37b5d581006f181f0b3a28db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5NzcwOQ==", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437497709", "body": "When using \r\n\r\n```suggestion\r\n        Assert.assertThat(testRealmResource().users().search(\"a\", true), Matchers.hasSize(0));\r\n        Assert.assertThat(testRealmResource().users().search(\"apollo\", true), Matchers.hasSize(1));\r\n        Assert.assertThat(testRealmResource().users().search(\"tbrady\", true), Matchers.hasSize(1));\r\n```\r\n\r\nthe output on failure shows the search results which is better for debugging potential failures.", "bodyText": "When using\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(0, testRealmResource().users().search(\"a\", true).size());\n          \n          \n            \n                    Assert.assertEquals(1, testRealmResource().users().search(\"apollo\", true).size());\n          \n          \n            \n                    Assert.assertEquals(1, testRealmResource().users().search(\"tbrady\", true).size());\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"a\", true), Matchers.hasSize(0));\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"apollo\", true), Matchers.hasSize(1));\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"tbrady\", true), Matchers.hasSize(1));\n          \n      \n    \n    \n  \n\nthe output on failure shows the search results which is better for debugging potential failures.", "bodyHTML": "<p dir=\"auto\">When using</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first\">assertEquals(</span><span class=\"pl-c1 x\">0</span><span class=\"x x-last\">, </span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">size(</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first\">assertEquals(</span><span class=\"pl-c1 x\">1</span><span class=\"x x-last\">, </span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>apollo<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">size(</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first\">assertEquals(</span><span class=\"pl-c1 x\">1</span><span class=\"x x-last\">, </span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tbrady<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">size(</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">assertThat(</span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"x x-first\">, </span><span class=\"pl-smi x\">Matchers</span><span class=\"pl-k x\">.</span><span class=\"x\">hasSize(</span><span class=\"pl-c1 x x-last\">0</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">assertThat(</span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>apollo<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"x x-first\">, </span><span class=\"pl-smi x\">Matchers</span><span class=\"pl-k x\">.</span><span class=\"x\">hasSize(</span><span class=\"pl-c1 x x-last\">1</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">assertThat(</span>testRealmResource()<span class=\"pl-k\">.</span>users()<span class=\"pl-k\">.</span>search(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tbrady<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>)<span class=\"x x-first\">, </span><span class=\"pl-smi x\">Matchers</span><span class=\"pl-k x\">.</span><span class=\"x\">hasSize(</span><span class=\"pl-c1 x x-last\">1</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">the output on failure shows the search results which is better for debugging potential failures.</p>", "author": "hmlnarik", "createdAt": "2020-06-09T15:07:45Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java", "diffHunk": "@@ -474,6 +474,13 @@ public void testQuery() {\n         });\n     }\n \n+    @Test\n+    public void testQueryExactMatch() {\n+        Assert.assertEquals(0, testRealmResource().users().search(\"a\", true).size());\n+        Assert.assertEquals(1, testRealmResource().users().search(\"apollo\", true).size());\n+        Assert.assertEquals(1, testRealmResource().users().search(\"tbrady\", true).size());", "originalCommit": "d0e6d474385d397a37b5d581006f181f0b3a28db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "url": "https://github.com/keycloak/keycloak/commit/d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "message": "Update testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>", "committedDate": "2020-06-09T17:13:14Z", "type": "forcePushed"}, {"oid": "4738c15e2670efc805602d67631eff9d7a235229", "url": "https://github.com/keycloak/keycloak/commit/4738c15e2670efc805602d67631eff9d7a235229", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>", "committedDate": "2020-06-10T12:37:33Z", "type": "commit"}, {"oid": "4738c15e2670efc805602d67631eff9d7a235229", "url": "https://github.com/keycloak/keycloak/commit/4738c15e2670efc805602d67631eff9d7a235229", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>", "committedDate": "2020-06-10T12:37:33Z", "type": "forcePushed"}]}