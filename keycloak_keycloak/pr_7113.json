{"pr_number": 7113, "pr_title": "[KEYCLOAK-11679] - Creating keys right after master realm creation", "pr_author": "pedroigor", "pr_createdAt": "2020-05-27T12:29:40Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7113", "timeline": [{"oid": "b21bb260d88bc295c644d9629b8098e1e84eaabb", "url": "https://github.com/keycloak/keycloak/commit/b21bb260d88bc295c644d9629b8098e1e84eaabb", "message": "[KEYCLOAK-11679] - Creating keys right after master realm creation", "committedDate": "2020-05-27T12:39:44Z", "type": "forcePushed"}, {"oid": "7c4fad2785a7dc0c137e7cd590e628f49ecc08c9", "url": "https://github.com/keycloak/keycloak/commit/7c4fad2785a7dc0c137e7cd590e628f49ecc08c9", "message": "[KEYCLOAK-11679] - Creating keys right after master realm creation", "committedDate": "2020-05-27T13:18:22Z", "type": "commit"}, {"oid": "7c4fad2785a7dc0c137e7cd590e628f49ecc08c9", "url": "https://github.com/keycloak/keycloak/commit/7c4fad2785a7dc0c137e7cd590e628f49ecc08c9", "message": "[KEYCLOAK-11679] - Creating keys right after master realm creation", "committedDate": "2020-05-27T13:18:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MjA3Nw==", "url": "https://github.com/keycloak/keycloak/pull/7113#discussion_r431082077", "body": "```suggestion\r\n                // TODO Remove once we have figured out the issue caused by not having keys pre-created\r\n                DefaultKeyProviders.createProviders(session.getContext().getRealm());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            DefaultKeyProviders.createProviders(session.getContext().getRealm());\n          \n          \n            \n                            // TODO Remove once we have figured out the issue caused by not having keys pre-created\n          \n          \n            \n                            DefaultKeyProviders.createProviders(session.getContext().getRealm());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"385\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi x x-first\">DefaultKeyProviders</span><span class=\"pl-k x\">.</span><span class=\"x\">createProviders(session</span><span class=\"pl-k x\">.</span><span class=\"x\">getContext()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getRealm());</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"385\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> TODO Remove once we have figured out the issue caused by not having keys pre-created</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"386\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">DefaultKeyProviders</span><span class=\"pl-k\">.</span>createProviders(session<span class=\"pl-k\">.</span>getContext()<span class=\"pl-k\">.</span>getRealm());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "stianst", "createdAt": "2020-05-27T12:34:57Z", "path": "quarkus/runtime/src/main/java/org/keycloak/connections/jpa/QuarkusJpaConnectionProviderFactory.java", "diffHunk": "@@ -380,6 +381,7 @@ protected ExportImportManager createMasterRealm(ExportImportManager exportImport\n \n             if (createMasterRealm) {\n                 applianceBootstrap.createMasterRealm();\n+                DefaultKeyProviders.createProviders(session.getContext().getRealm());", "originalCommit": "8c115128aa13b5085729b0878adcb82a8a05cdfc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}