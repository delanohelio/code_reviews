{"pr_number": 7246, "pr_title": "KEYCLOAK-14698 Support complex SAML Attribute Values (e.g. XUA++)", "pr_author": "mwalliczek", "pr_createdAt": "2020-07-08T14:50:57Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7246", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY0Mg==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452016642", "body": "Currently it is expected that `attributeValue` starts with `AttributeValue` element. Yet for the sake of consistency with the rest of the values and enforcing schema compliance, the attribute value should only be the value without `AttributeValue`. In other words, introduce a `writeElementAttributeValue(Element attributeValue)` method similar to e.g. `writeNameIDTypeAttributeValue`", "bodyText": "Currently it is expected that attributeValue starts with AttributeValue element. Yet for the sake of consistency with the rest of the values and enforcing schema compliance, the attribute value should only be the value without AttributeValue. In other words, introduce a writeElementAttributeValue(Element attributeValue) method similar to e.g. writeNameIDTypeAttributeValue", "bodyHTML": "<p dir=\"auto\">Currently it is expected that <code>attributeValue</code> starts with <code>AttributeValue</code> element. Yet for the sake of consistency with the rest of the values and enforcing schema compliance, the attribute value should only be the value without <code>AttributeValue</code>. In other words, introduce a <code>writeElementAttributeValue(Element attributeValue)</code> method similar to e.g. <code>writeNameIDTypeAttributeValue</code></p>", "author": "hmlnarik", "createdAt": "2020-07-09T07:26:15Z", "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/saml/v2/writers/BaseWriter.java", "diffHunk": "@@ -174,6 +175,8 @@ public void writeAttributeTypeWithoutRootTag(AttributeType attributeType) throws\n                     \twriteNameIDTypeAttributeValue((NameIDType) attributeValue);\n                     } else if (attributeValue instanceof XMLGregorianCalendar) {\n                         writeDateAttributeValue((XMLGregorianCalendar) attributeValue);\n+                    } else if (attributeValue instanceof Element) {\n+                        StaxUtil.writeDOMElement(writer, (Element) attributeValue);", "originalCommit": "74f1f43990d88ed904d198f24ca803eae5ffdc4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1NTI4NQ==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452055285", "bodyText": "Thanks for the suggestions - I changed the code in the proposed way. Because the type of the AttributeValue is variable, I created a new AttributeValueElementType class to contain both the type and the element.", "author": "mwalliczek", "createdAt": "2020-07-09T08:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3b8c935a4bed019c8908e05ba1cff98497964a02", "changed_code": [{"header": "diff --git a/saml-core/src/main/java/org/keycloak/saml/processing/core/saml/v2/writers/BaseWriter.java b/saml-core/src/main/java/org/keycloak/saml/processing/core/saml/v2/writers/BaseWriter.java\nindex 6aa4238733..24b2f615e0 100755\n--- a/saml-core/src/main/java/org/keycloak/saml/processing/core/saml/v2/writers/BaseWriter.java\n+++ b/saml-core/src/main/java/org/keycloak/saml/processing/core/saml/v2/writers/BaseWriter.java\n", "chunk": "@@ -176,7 +177,7 @@ public class BaseWriter {\n                     } else if (attributeValue instanceof XMLGregorianCalendar) {\n                         writeDateAttributeValue((XMLGregorianCalendar) attributeValue);\n                     } else if (attributeValue instanceof Element) {\n-                        StaxUtil.writeDOMElement(writer, (Element) attributeValue);\n+                        writeElementAttributeValue((Element) attributeValue);\n                     } else\n                         throw logger.writerUnsupportedAttributeValueError(attributeValue.getClass().getName());\n                 } else {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjk3Nw==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452016977", "body": "This element should be removed.", "bodyText": "This element should be removed.", "bodyHTML": "<p dir=\"auto\">This element should be removed.</p>", "author": "hmlnarik", "createdAt": "2020-07-09T07:26:52Z", "path": "saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.keycloak.saml.processing.core.saml.v2.writers;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.keycloak.dom.saml.v2.assertion.AttributeStatementType;\n+import org.keycloak.dom.saml.v2.assertion.AttributeType;\n+import org.keycloak.saml.common.constants.GeneralConstants;\n+import org.keycloak.saml.common.constants.JBossSAMLURIConstants;\n+import org.keycloak.saml.common.exceptions.ConfigurationException;\n+import org.keycloak.saml.common.exceptions.ProcessingException;\n+import org.keycloak.saml.common.util.DocumentUtil;\n+import org.keycloak.saml.common.util.StaxUtil;\n+import org.w3c.dom.Attr;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+\n+public class XUATokenWriterTest {\n+\n+    @Test\n+    public void testXUAToken() throws ConfigurationException, ProcessingException {\n+        Document document = DocumentUtil.createDocument();\n+\n+        AttributeType roleAttr = new AttributeType(\"urn:oasis:names:tc:xacml:2.0:subject:role\");\n+        Element attributeValue =", "originalCommit": "74f1f43990d88ed904d198f24ca803eae5ffdc4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b8c935a4bed019c8908e05ba1cff98497964a02", "changed_code": [{"header": "diff --git a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\nindex 9982ce6ab9..f202d2bd47 100644\n--- a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n+++ b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n", "chunk": "@@ -23,12 +23,7 @@ public class XUATokenWriterTest {\n         Document document = DocumentUtil.createDocument();\n \n         AttributeType roleAttr = new AttributeType(\"urn:oasis:names:tc:xacml:2.0:subject:role\");\n-        Element attributeValue =\n-                document.createElementNS(JBossSAMLURIConstants.ASSERTION_NSURI.get(), \"AttributeValue\");\n-        Attr attrRoleType = document.createAttributeNS(JBossSAMLURIConstants.XSI_NSURI.get(), \"type\");\n-        attrRoleType.setValue(\"Role\");\n-        attrRoleType.setPrefix(\"xsi\");\n-        attributeValue.setAttributeNodeNS(attrRoleType);\n+\n         Element role = document.createElementNS(\"urn:hl7-org:v3\", \"Role\");\n         role.setAttributeNS(\"urn:hl7-org:v3\", \"code\", \"46255001\");\n         role.setAttributeNS(\"urn:hl7-org:v3\", \"codeSystem\", \"2.16.840.1.113883.6.96\");\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxODUyNA==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452018524", "body": "```suggestion\r\n        roleAttr.addAttributeValue(role);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    attributeValue.appendChild(role);\n          \n          \n            \n                    roleAttr.addAttributeValue(attributeValue);\n          \n          \n            \n                    roleAttr.addAttributeValue(role);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        attributeValue<span class=\"pl-k\">.</span>appendChild(role);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        roleAttr<span class=\"pl-k\">.</span>addAttributeValue(attributeValue);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        roleAttr<span class=\"pl-k\">.</span>addAttributeValue(role);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-07-09T07:29:51Z", "path": "saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.keycloak.saml.processing.core.saml.v2.writers;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.keycloak.dom.saml.v2.assertion.AttributeStatementType;\n+import org.keycloak.dom.saml.v2.assertion.AttributeType;\n+import org.keycloak.saml.common.constants.GeneralConstants;\n+import org.keycloak.saml.common.constants.JBossSAMLURIConstants;\n+import org.keycloak.saml.common.exceptions.ConfigurationException;\n+import org.keycloak.saml.common.exceptions.ProcessingException;\n+import org.keycloak.saml.common.util.DocumentUtil;\n+import org.keycloak.saml.common.util.StaxUtil;\n+import org.w3c.dom.Attr;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+\n+public class XUATokenWriterTest {\n+\n+    @Test\n+    public void testXUAToken() throws ConfigurationException, ProcessingException {\n+        Document document = DocumentUtil.createDocument();\n+\n+        AttributeType roleAttr = new AttributeType(\"urn:oasis:names:tc:xacml:2.0:subject:role\");\n+        Element attributeValue =\n+                document.createElementNS(JBossSAMLURIConstants.ASSERTION_NSURI.get(), \"AttributeValue\");\n+        Attr attrRoleType = document.createAttributeNS(JBossSAMLURIConstants.XSI_NSURI.get(), \"type\");\n+        attrRoleType.setValue(\"Role\");\n+        attrRoleType.setPrefix(\"xsi\");\n+        attributeValue.setAttributeNodeNS(attrRoleType);\n+        Element role = document.createElementNS(\"urn:hl7-org:v3\", \"Role\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"code\", \"46255001\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"codeSystem\", \"2.16.840.1.113883.6.96\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"codeSystemName\", \"SNOMED_CT\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"displayName\", \"Pharmacist\");\n+        Attr attrCEType = document.createAttributeNS(JBossSAMLURIConstants.XSI_NSURI.get(), \"type\");\n+        attrCEType.setValue(\"CE\");\n+        attrCEType.setPrefix(\"xsi\");\n+        role.setAttributeNodeNS(attrCEType);\n+        attributeValue.appendChild(role);\n+        roleAttr.addAttributeValue(attributeValue);", "originalCommit": "74f1f43990d88ed904d198f24ca803eae5ffdc4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b8c935a4bed019c8908e05ba1cff98497964a02", "changed_code": [{"header": "diff --git a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\nindex 9982ce6ab9..f202d2bd47 100644\n--- a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n+++ b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n", "chunk": "@@ -38,8 +33,8 @@ public class XUATokenWriterTest {\n         attrCEType.setValue(\"CE\");\n         attrCEType.setPrefix(\"xsi\");\n         role.setAttributeNodeNS(attrCEType);\n-        attributeValue.appendChild(role);\n-        roleAttr.addAttributeValue(attributeValue);\n+\n+        roleAttr.addAttributeValue(role);\n \n         ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n         SAMLAssertionWriter samlAssertionWriter =\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxOTI5NA==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452019294", "body": "extra attribute in AttributeValue does not conform with SAML schema\r\n```suggestion\r\n                        + \"><Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" \"\r\n```", "bodyText": "extra attribute in AttributeValue does not conform with SAML schema\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"xsi:type=\\\"Role\\\"><Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" \"\n          \n          \n            \n                                    + \"><Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" \"", "bodyHTML": "<p dir=\"auto\">extra attribute in AttributeValue does not conform with SAML schema</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first\">xsi:type=</span><span class=\"pl-cce x\">\\\"</span><span class=\"x\">Role</span><span class=\"pl-cce x x-last\">\\\"</span>&gt;&lt;Role xmlns=<span class=\"pl-cce\">\\\"</span>urn:hl7-org:v3<span class=\"pl-cce\">\\\"</span> code=<span class=\"pl-cce\">\\\"</span>46255001<span class=\"pl-cce\">\\\"</span> <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt;&lt;Role xmlns=<span class=\"pl-cce\">\\\"</span>urn:hl7-org:v3<span class=\"pl-cce\">\\\"</span> code=<span class=\"pl-cce\">\\\"</span>46255001<span class=\"pl-cce\">\\\"</span> <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-07-09T07:31:12Z", "path": "saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.keycloak.saml.processing.core.saml.v2.writers;\n+\n+import java.io.ByteArrayOutputStream;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.keycloak.dom.saml.v2.assertion.AttributeStatementType;\n+import org.keycloak.dom.saml.v2.assertion.AttributeType;\n+import org.keycloak.saml.common.constants.GeneralConstants;\n+import org.keycloak.saml.common.constants.JBossSAMLURIConstants;\n+import org.keycloak.saml.common.exceptions.ConfigurationException;\n+import org.keycloak.saml.common.exceptions.ProcessingException;\n+import org.keycloak.saml.common.util.DocumentUtil;\n+import org.keycloak.saml.common.util.StaxUtil;\n+import org.w3c.dom.Attr;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+\n+public class XUATokenWriterTest {\n+\n+    @Test\n+    public void testXUAToken() throws ConfigurationException, ProcessingException {\n+        Document document = DocumentUtil.createDocument();\n+\n+        AttributeType roleAttr = new AttributeType(\"urn:oasis:names:tc:xacml:2.0:subject:role\");\n+        Element attributeValue =\n+                document.createElementNS(JBossSAMLURIConstants.ASSERTION_NSURI.get(), \"AttributeValue\");\n+        Attr attrRoleType = document.createAttributeNS(JBossSAMLURIConstants.XSI_NSURI.get(), \"type\");\n+        attrRoleType.setValue(\"Role\");\n+        attrRoleType.setPrefix(\"xsi\");\n+        attributeValue.setAttributeNodeNS(attrRoleType);\n+        Element role = document.createElementNS(\"urn:hl7-org:v3\", \"Role\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"code\", \"46255001\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"codeSystem\", \"2.16.840.1.113883.6.96\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"codeSystemName\", \"SNOMED_CT\");\n+        role.setAttributeNS(\"urn:hl7-org:v3\", \"displayName\", \"Pharmacist\");\n+        Attr attrCEType = document.createAttributeNS(JBossSAMLURIConstants.XSI_NSURI.get(), \"type\");\n+        attrCEType.setValue(\"CE\");\n+        attrCEType.setPrefix(\"xsi\");\n+        role.setAttributeNodeNS(attrCEType);\n+        attributeValue.appendChild(role);\n+        roleAttr.addAttributeValue(attributeValue);\n+\n+        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        SAMLAssertionWriter samlAssertionWriter =\n+                new SAMLAssertionWriter(StaxUtil.getXMLStreamWriter(byteArrayOutputStream));\n+\n+        AttributeStatementType attributeStatementType = new AttributeStatementType();\n+        attributeStatementType.addAttribute(new AttributeStatementType.ASTChoiceType(roleAttr));\n+\n+        samlAssertionWriter.write(attributeStatementType);\n+\n+        String serializedAssertion = new String(byteArrayOutputStream.toByteArray(), GeneralConstants.SAML_CHARSET);\n+        Assert.assertEquals(\"<saml:AttributeStatement><saml:Attribute Name=\\\"urn:oasis:names:tc:xacml:2\"\n+                        + \".0:subject:role\\\"><AttributeValue xmlns=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" \"\n+                        + \"xsi:type=\\\"Role\\\"><Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" \"", "originalCommit": "74f1f43990d88ed904d198f24ca803eae5ffdc4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1NjQ0Mg==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r452056442", "bodyText": "I think it does conform - because for String values xsi:type=\"xs:string\" is written.", "author": "mwalliczek", "createdAt": "2020-07-09T08:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxOTI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "3b8c935a4bed019c8908e05ba1cff98497964a02", "changed_code": [{"header": "diff --git a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\nindex 9982ce6ab9..f202d2bd47 100644\n--- a/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n+++ b/saml-core/src/test/java/org/keycloak/saml/processing/core/saml/v2/writers/XUATokenWriterTest.java\n", "chunk": "@@ -51,11 +46,12 @@ public class XUATokenWriterTest {\n         samlAssertionWriter.write(attributeStatementType);\n \n         String serializedAssertion = new String(byteArrayOutputStream.toByteArray(), GeneralConstants.SAML_CHARSET);\n-        Assert.assertEquals(\"<saml:AttributeStatement><saml:Attribute Name=\\\"urn:oasis:names:tc:xacml:2\"\n-                        + \".0:subject:role\\\"><AttributeValue xmlns=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" \"\n-                        + \"xsi:type=\\\"Role\\\"><Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" \"\n-                        + \"codeSystem=\\\"2.16.840.1.113883.6.96\\\" codeSystemName=\\\"SNOMED_CT\\\" \"\n-                        + \"displayName=\\\"Pharmacist\\\" xsi:type=\\\"CE\\\"></Role></AttributeValue></saml:Attribute>\"\n+        Assert.assertEquals(\"<saml:AttributeStatement>\"\n+                        + \"<saml:Attribute Name=\\\"urn:oasis:names:tc:xacml:2.0:subject:role\\\">\"\n+                        + \"<saml:AttributeValue>\"\n+                        + \"<Role xmlns=\\\"urn:hl7-org:v3\\\" code=\\\"46255001\\\" codeSystem=\\\"2.16.840.1.113883.6.96\\\" \"\n+                        + \"codeSystemName=\\\"SNOMED_CT\\\" displayName=\\\"Pharmacist\\\" \"\n+                        + \"xsi:type=\\\"CE\\\"></Role></saml:AttributeValue></saml:Attribute>\"\n                         + \"</saml:AttributeStatement>\",\n                 serializedAssertion);\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMDk1Mg==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r453210952", "body": "The `type` should be a `QName` to include namespace definition, to allow for schema validation (see `xs` or `ns` in the following example):\r\n```xml\r\n        <saml:AttributeValue xsi:type=\"xs:string\">value</saml:AttributeValue>\r\n        <saml:AttributeValue xsi:type=\"ns:Role\" xmlns:ns=\"urn:my:resource:type\">value</saml:AttributeValue>\r\n```\r\nIn the case of serialization of the type, if the namespace part of `QName` is defined, in needs to be declared in the `AttributeValue` attribute. If it is not, it would allow declarations from the PR like:\r\n```xml\r\n        <saml:AttributeValue xsi:type=\"Role\">value</saml:AttributeValue>\r\n```\r\nYet the namespace-less variants do not allow schema validation so should be not used.", "bodyText": "The type should be a QName to include namespace definition, to allow for schema validation (see xs or ns in the following example):\n        <saml:AttributeValue xsi:type=\"xs:string\">value</saml:AttributeValue>\n        <saml:AttributeValue xsi:type=\"ns:Role\" xmlns:ns=\"urn:my:resource:type\">value</saml:AttributeValue>\nIn the case of serialization of the type, if the namespace part of QName is defined, in needs to be declared in the AttributeValue attribute. If it is not, it would allow declarations from the PR like:\n        <saml:AttributeValue xsi:type=\"Role\">value</saml:AttributeValue>\nYet the namespace-less variants do not allow schema validation so should be not used.", "bodyHTML": "<p dir=\"auto\">The <code>type</code> should be a <code>QName</code> to include namespace definition, to allow for schema validation (see <code>xs</code> or <code>ns</code> in the following example):</p>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        &lt;saml:AttributeValue xsi:type=&quot;xs:string&quot;&gt;value&lt;/saml:AttributeValue&gt;\n        &lt;saml:AttributeValue xsi:type=&quot;ns:Role&quot; xmlns:ns=&quot;urn:my:resource:type&quot;&gt;value&lt;/saml:AttributeValue&gt;\"><pre>        &lt;<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span> <span class=\"pl-e\">xsi</span><span class=\"pl-e\">:</span><span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>xs:string<span class=\"pl-pds\">\"</span></span>&gt;value&lt;/<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span>&gt;\n        &lt;<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span> <span class=\"pl-e\">xsi</span><span class=\"pl-e\">:</span><span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ns:Role<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ns</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>urn:my:resource:type<span class=\"pl-pds\">\"</span></span>&gt;value&lt;/<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span>&gt;</pre></div>\n<p dir=\"auto\">In the case of serialization of the type, if the namespace part of <code>QName</code> is defined, in needs to be declared in the <code>AttributeValue</code> attribute. If it is not, it would allow declarations from the PR like:</p>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        &lt;saml:AttributeValue xsi:type=&quot;Role&quot;&gt;value&lt;/saml:AttributeValue&gt;\"><pre>        &lt;<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span> <span class=\"pl-e\">xsi</span><span class=\"pl-e\">:</span><span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Role<span class=\"pl-pds\">\"</span></span>&gt;value&lt;/<span class=\"pl-ent\">saml</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">AttributeValue</span>&gt;</pre></div>\n<p dir=\"auto\">Yet the namespace-less variants do not allow schema validation so should be not used.</p>", "author": "hmlnarik", "createdAt": "2020-07-11T16:28:03Z", "path": "saml-core-api/src/main/java/org/keycloak/dom/saml/v2/assertion/AttributeValueElementType.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package org.keycloak.dom.saml.v2.assertion;\n+\n+import java.io.Serializable;\n+\n+import org.w3c.dom.Element;\n+\n+public class AttributeValueElementType implements Serializable {\n+\n+    private String type;", "originalCommit": "429bf337fbcd76e998a2ef2a7b563b403500008c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ2NTM5OQ==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r453465399", "bodyText": "I implemented the changes as suggested.", "author": "mwalliczek", "createdAt": "2020-07-13T06:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMDk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ3MjYxMA==", "url": "https://github.com/keycloak/keycloak/pull/7246#discussion_r453472610", "bodyText": "I just read the specification one more time and I think you were right with the first comment: The type attribute at attributeValue is obsolete, when the child is an element with its own type and namespace declaration.\nThe type is only necessary at simple elements like string and date, but not at complex elements.\nSo I removed the type and the AttributeValueType completly.\nSorry for the confusion.", "author": "mwalliczek", "createdAt": "2020-07-13T08:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMDk1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3b8c935a4bed019c8908e05ba1cff98497964a02", "changed_code": [{"header": "diff --git a/saml-core-api/src/main/java/org/keycloak/dom/saml/v2/assertion/AttributeValueElementType.java b/saml-core-api/src/main/java/org/keycloak/dom/saml/v2/assertion/AttributeValueElementType.java\ndeleted file mode 100644\nindex 5a587acb25..0000000000\n--- a/saml-core-api/src/main/java/org/keycloak/dom/saml/v2/assertion/AttributeValueElementType.java\n+++ /dev/null\n", "chunk": "@@ -1,27 +0,0 @@\n-package org.keycloak.dom.saml.v2.assertion;\n-\n-import java.io.Serializable;\n-\n-import org.w3c.dom.Element;\n-\n-public class AttributeValueElementType implements Serializable {\n-\n-    private String type;\n-    private Element content;\n-\n-    public String getType() {\n-        return type;\n-    }\n-\n-    public void setType(String type) {\n-        this.type = type;\n-    }\n-\n-    public Element getContent() {\n-        return content;\n-    }\n-\n-    public void setContent(Element content) {\n-        this.content = content;\n-    }\n-}\n", "next_change": null}]}}, {"oid": "3b8c935a4bed019c8908e05ba1cff98497964a02", "url": "https://github.com/keycloak/keycloak/commit/3b8c935a4bed019c8908e05ba1cff98497964a02", "message": "KEYCLOAK-14698 Support complex SAML Attribute Values (e.g. XUA++)", "committedDate": "2020-07-15T04:49:39Z", "type": "commit"}]}