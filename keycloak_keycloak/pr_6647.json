{"pr_number": 6647, "pr_title": "KEYCLOAK-6817 Ignore SniSSLSocketFactory exception for IBM jdk", "pr_author": "mhajas", "pr_createdAt": "2020-01-09T09:01:06Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6647", "timeline": [{"oid": "d50a8ddece821c1840bda24dc12b33bfc8761492", "url": "https://github.com/keycloak/keycloak/commit/d50a8ddece821c1840bda24dc12b33bfc8761492", "message": "KEYCLOAK-6817 Ignore SniSSLSocketFactory exception for IBM jdk", "committedDate": "2020-01-13T10:56:59Z", "type": "forcePushed"}, {"oid": "edcbd407f146e0ce04284dc4762413798cf496ee", "url": "https://github.com/keycloak/keycloak/commit/edcbd407f146e0ce04284dc4762413798cf496ee", "message": "KEYCLOAK-6817 Ignore SniSSLSocketFactory exception for IBM jdk", "committedDate": "2020-01-13T11:01:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTAwOQ==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r366531009", "body": "Should be `final`\r\n```suggestion\r\n    private static final AtomicBoolean skipSNIApplicationToSslSocket = new AtomicBoolean(false);\r\n```", "bodyText": "Should be final\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static AtomicBoolean skipSNIApplication = new AtomicBoolean(false);\n          \n          \n            \n                private static final AtomicBoolean skipSNIApplicationToSslSocket = new AtomicBoolean(false);", "bodyHTML": "<p dir=\"auto\">Should be <code>final</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">AtomicBoolean</span> <span class=\"x x-first x-last\">skipSNIApplication</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AtomicBoolean</span>(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">AtomicBoolean</span> <span class=\"x x-first x-last\">skipSNIApplicationToSslSocket</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AtomicBoolean</span>(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-01-14T19:31:11Z", "path": "adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/SniSSLSocketFactory.java", "diffHunk": "@@ -46,7 +50,8 @@\n  */\n public class SniSSLSocketFactory extends SSLSocketFactory {\n \n-    private static Logger log = Logger.getLogger(SniSSLSocketFactory.class.getName());\n+    private static final Logger LOG = Logger.getLogger(SniSSLSocketFactory.class.getName());\n+    private static AtomicBoolean skipSNIApplication = new AtomicBoolean(false);", "originalCommit": "edcbd407f146e0ce04284dc4762413798cf496ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTI2Ng==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r366531266", "body": "This is not necessarily only IBM JDK, please improve the message.", "bodyText": "This is not necessarily only IBM JDK, please improve the message.", "bodyHTML": "<p dir=\"auto\">This is not necessarily only IBM JDK, please improve the message.</p>", "author": "hmlnarik", "createdAt": "2020-01-14T19:31:43Z", "path": "adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/SniSSLSocketFactory.java", "diffHunk": "@@ -115,18 +120,34 @@ public Socket createLayeredSocket(Socket socket, String target, int port, HttpCo\n     }\n \n     private Socket applySNI(final Socket socket, String hostname) {\n+        if (skipSNIApplication.get()) {\n+            LOG.log(Level.FINE, \"Skipping application of SNI because IBM JDK is missing setHost() method.\");", "originalCommit": "edcbd407f146e0ce04284dc4762413798cf496ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTUzMA==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r366531530", "body": "```suggestion\r\n                if (e.getCause() instanceof NoSuchMethodException) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (e.getCause() instanceof NoSuchMethodException && Environment.IS_IBM_JAVA) {\n          \n          \n            \n                            if (e.getCause() instanceof NoSuchMethodException) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (e<span class=\"pl-k\">.</span>getCause() <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">NoSuchMethodException</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> </span><span class=\"pl-smi x\">Environment</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">IS_IBM_JAVA</span></span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (e<span class=\"pl-k\">.</span>getCause() <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">NoSuchMethodException</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-01-14T19:32:14Z", "path": "adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/SniSSLSocketFactory.java", "diffHunk": "@@ -115,18 +120,34 @@ public Socket createLayeredSocket(Socket socket, String target, int port, HttpCo\n     }\n \n     private Socket applySNI(final Socket socket, String hostname) {\n+        if (skipSNIApplication.get()) {\n+            LOG.log(Level.FINE, \"Skipping application of SNI because IBM JDK is missing setHost() method.\");\n+            return socket;\n+        }\n+\n         if (socket instanceof SSLSocket) {\n             try {\n                 Method setHostMethod = AccessController.doPrivileged(new PrivilegedExceptionAction<Method>() {\n+                    @Override\n                     public Method run() throws NoSuchMethodException {\n                         return socket.getClass().getMethod(\"setHost\", String.class);\n                     }\n                 });\n \n                 setHostMethod.invoke(socket, hostname);\n-                log.finest(\"Applied SNI to socket for: \" + hostname);\n-            } catch (Exception e) {\n-                log.log(Level.WARNING, \"Failed to apply SNI to SSLSocket\", e);\n+                LOG.log(Level.FINEST, \"Applied SNI to socket for host {0}\", hostname);\n+            } catch (PrivilegedActionException e) {\n+                if (e.getCause() instanceof NoSuchMethodException && Environment.IS_IBM_JAVA) {", "originalCommit": "edcbd407f146e0ce04284dc4762413798cf496ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4NTM5OA==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r370085398", "bodyText": "@hmlnarik I am not sure we want this. I agree we should set skipSNIApplication to true for all JDKs in case the exception is NoSuchMethod, but we don't want to set log level to FINE for each JDK as for now we know only for IBM JDK that it is ok to skip SNI application. Does it make sense?", "author": "mhajas", "createdAt": "2020-01-23T12:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg2OTU3Nw==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r372869577", "bodyText": "Ok, let's leave this as is.", "author": "hmlnarik", "createdAt": "2020-01-30T10:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMTUzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMjQ2OA==", "url": "https://github.com/keycloak/keycloak/pull/6647#discussion_r366532468", "body": "```suggestion\r\n                LOG.log(Level.FINE, \"Applied SNI to socket for host {0}\", hostname);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.log(Level.FINEST, \"Applied SNI to socket for host {0}\", hostname);\n          \n          \n            \n                            LOG.log(Level.FINE, \"Applied SNI to socket for host {0}\", hostname);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>log(<span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">FINEST</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Applied SNI to socket for host {0}<span class=\"pl-pds\">\"</span></span>, hostname);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>log(<span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">FINE</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Applied SNI to socket for host {0}<span class=\"pl-pds\">\"</span></span>, hostname);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-01-14T19:34:16Z", "path": "adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/SniSSLSocketFactory.java", "diffHunk": "@@ -115,18 +120,34 @@ public Socket createLayeredSocket(Socket socket, String target, int port, HttpCo\n     }\n \n     private Socket applySNI(final Socket socket, String hostname) {\n+        if (skipSNIApplication.get()) {\n+            LOG.log(Level.FINE, \"Skipping application of SNI because IBM JDK is missing setHost() method.\");\n+            return socket;\n+        }\n+\n         if (socket instanceof SSLSocket) {\n             try {\n                 Method setHostMethod = AccessController.doPrivileged(new PrivilegedExceptionAction<Method>() {\n+                    @Override\n                     public Method run() throws NoSuchMethodException {\n                         return socket.getClass().getMethod(\"setHost\", String.class);\n                     }\n                 });\n \n                 setHostMethod.invoke(socket, hostname);\n-                log.finest(\"Applied SNI to socket for: \" + hostname);\n-            } catch (Exception e) {\n-                log.log(Level.WARNING, \"Failed to apply SNI to SSLSocket\", e);\n+                LOG.log(Level.FINEST, \"Applied SNI to socket for host {0}\", hostname);", "originalCommit": "edcbd407f146e0ce04284dc4762413798cf496ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ecf35d9d6d7feb07a15740bdb03a640938c54278", "url": "https://github.com/keycloak/keycloak/commit/ecf35d9d6d7feb07a15740bdb03a640938c54278", "message": "KEYCLOAK-6817 Ignore SniSSLSocketFactory exception for IBM jdk", "committedDate": "2020-01-30T10:53:13Z", "type": "commit"}, {"oid": "ecf35d9d6d7feb07a15740bdb03a640938c54278", "url": "https://github.com/keycloak/keycloak/commit/ecf35d9d6d7feb07a15740bdb03a640938c54278", "message": "KEYCLOAK-6817 Ignore SniSSLSocketFactory exception for IBM jdk", "committedDate": "2020-01-30T10:53:13Z", "type": "forcePushed"}]}