{"pr_number": 7307, "pr_title": "KEYCLOAK-14961 SAML Identity Provider: Add ability to request specific AuthnContexts to remote IdPs", "pr_author": "lscorcia", "pr_createdAt": "2020-07-30T21:00:25Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7307", "timeline": [{"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "url": "https://github.com/keycloak/keycloak/commit/402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs", "committedDate": "2020-08-01T13:52:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDUzMw==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364533", "body": "Nit: Use `LinkedList` instead.", "bodyText": "Nit: Use LinkedList instead.", "bodyHTML": "<p dir=\"auto\">Nit: Use <code>LinkedList</code> instead.</p>", "author": "hmlnarik", "createdAt": "2020-08-31T19:55:20Z", "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDY2NA==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364664", "body": "```suggestion\r\n            if (requestedAuthnContextClassRef != null && ! requestedAuthnContextClassRef.isEmpty())\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)\n          \n          \n            \n                        if (requestedAuthnContextClassRef != null && ! requestedAuthnContextClassRef.isEmpty())", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (requestedAuthnContextClassRef <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> requestedAuthnContextClassRef<span class=\"pl-k\">.</span><span class=\"x x-first\">length() </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (requestedAuthnContextClassRef <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k x x-first\">!</span><span class=\"x x-last\"> </span>requestedAuthnContextClassRef<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-08-31T19:55:37Z", "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();\n+        this.requestedAuthnContextDeclRefList = new ArrayList<String>();\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder setComparison(AuthnContextComparisonType comparison) {\n+        this.comparison = comparison;\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextClassRef(String authnContextClassRef) {\n+        this.requestedAuthnContextClassRefList.add(authnContextClassRef);\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextDeclRef(String authnContextDeclRef) {\n+        this.requestedAuthnContextDeclRefList.add(authnContextDeclRef);\n+        return this;\n+    }\n+\n+    public RequestedAuthnContextType build() {\n+        if (this.comparison != null)\n+            this.requestedAuthnContextType.setComparison(this.comparison);\n+\n+        for (String requestedAuthnContextClassRef: this.requestedAuthnContextClassRefList)\n+            if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDc1Nw==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364757", "body": "Nit:\r\n```suggestion\r\n            if (requestedAuthnContextDeclRef != null && ! requestedAuthnContextDeclRef.isEmpty())\r\n```", "bodyText": "Nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (requestedAuthnContextDeclRef != null && requestedAuthnContextDeclRef.length() > 0)\n          \n          \n            \n                        if (requestedAuthnContextDeclRef != null && ! requestedAuthnContextDeclRef.isEmpty())", "bodyHTML": "<p dir=\"auto\">Nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (requestedAuthnContextDeclRef <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> requestedAuthnContextDeclRef<span class=\"pl-k\">.</span><span class=\"x x-first\">length() </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (requestedAuthnContextDeclRef <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k x x-first\">!</span><span class=\"x x-last\"> </span>requestedAuthnContextDeclRef<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-08-31T19:55:51Z", "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();\n+        this.requestedAuthnContextDeclRefList = new ArrayList<String>();\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder setComparison(AuthnContextComparisonType comparison) {\n+        this.comparison = comparison;\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextClassRef(String authnContextClassRef) {\n+        this.requestedAuthnContextClassRefList.add(authnContextClassRef);\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextDeclRef(String authnContextDeclRef) {\n+        this.requestedAuthnContextDeclRefList.add(authnContextDeclRef);\n+        return this;\n+    }\n+\n+    public RequestedAuthnContextType build() {\n+        if (this.comparison != null)\n+            this.requestedAuthnContextType.setComparison(this.comparison);\n+\n+        for (String requestedAuthnContextClassRef: this.requestedAuthnContextClassRefList)\n+            if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)\n+                this.requestedAuthnContextType.addAuthnContextClassRef(requestedAuthnContextClassRef);\n+\n+        for (String requestedAuthnContextDeclRef: this.requestedAuthnContextDeclRefList)\n+            if (requestedAuthnContextDeclRef != null && requestedAuthnContextDeclRef.length() > 0)", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjA1Mw==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366053", "body": "Is this class necessary? Can the serialized form be just a list of `String`s instead?\r\nNote: Changing this to `String` would have impact on themes as well.", "bodyText": "Is this class necessary? Can the serialized form be just a list of Strings instead?\nNote: Changing this to String would have impact on themes as well.", "bodyHTML": "<p dir=\"auto\">Is this class necessary? Can the serialized form be just a list of <code>String</code>s instead?<br>\nNote: Changing this to <code>String</code> would have impact on themes as well.</p>", "author": "hmlnarik", "createdAt": "2020-08-31T19:58:29Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjU0MA==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366540", "body": "```suggestion\r\n            return Arrays.asList(JsonSerialization.readValue(authnContextClassRefs, String[].class));\r\n```\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);\n          \n          \n            \n                        return Arrays.asList(JsonSerialization.readValue(authnContextClassRefs, String[].class));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k x x-first\">AuthnContextClassRefJsonObject</span><span class=\"x\">[] jsonObjects </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">JsonSerialization</span><span class=\"pl-k\">.</span>readValue(authnContextClassRefs, <span class=\"pl-k x x-first x-last\">AuthnContextClassRefJsonObject</span>[]<span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">return</span><span class=\"x\"> </span><span class=\"pl-smi x\">Arrays</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">asList(</span><span class=\"pl-smi\">JsonSerialization</span><span class=\"pl-k\">.</span>readValue(authnContextClassRefs, <span class=\"pl-k x x-first x-last\">String</span>[]<span class=\"pl-k\">.</span>class<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-08-31T19:59:33Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {\n+        public String uri;\n+    }\n+\n+    private List<String> getAuthnContextClassRefUris() {\n+        ArrayList<String> output = new ArrayList<String>();\n+\n+        String authnContextClassRefs = getConfig().getAuthnContextClassRefs();\n+        if (authnContextClassRefs == null || authnContextClassRefs.length() == 0)\n+            return output;\n+\n+        try {\n+            AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjczMA==", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366730", "body": "same here ", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "hmlnarik", "createdAt": "2020-08-31T19:59:58Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {\n+        public String uri;\n+    }\n+\n+    private List<String> getAuthnContextClassRefUris() {\n+        ArrayList<String> output = new ArrayList<String>();\n+\n+        String authnContextClassRefs = getConfig().getAuthnContextClassRefs();\n+        if (authnContextClassRefs == null || authnContextClassRefs.length() == 0)\n+            return output;\n+\n+        try {\n+            AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);\n+\n+            for (AuthnContextClassRefJsonObject jsonObject: jsonObjects)\n+                output.add(jsonObject.uri);\n+        } catch (Exception e) {\n+            logger.warn(\"Could not json-deserialize AuthContextClassRefs config entry: \" + authnContextClassRefs, e);\n+        }\n+\n+        return output;\n+    }\n+\n+    static class AuthnContextDeclRefJsonObject {", "originalCommit": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "148d2634fecf694a9bee168fe1fce56716b6c9ff", "url": "https://github.com/keycloak/keycloak/commit/148d2634fecf694a9bee168fe1fce56716b6c9ff", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs", "committedDate": "2020-08-31T23:23:29Z", "type": "forcePushed"}, {"oid": "ee7e6e923d63b59f389e674609bba4b852098922", "url": "https://github.com/keycloak/keycloak/commit/ee7e6e923d63b59f389e674609bba4b852098922", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs", "committedDate": "2020-09-01T00:52:37Z", "type": "forcePushed"}, {"oid": "0e23f4e083b06eb57c9a499771e51e98c6311456", "url": "https://github.com/keycloak/keycloak/commit/0e23f4e083b06eb57c9a499771e51e98c6311456", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs", "committedDate": "2020-09-02T20:17:58Z", "type": "commit"}, {"oid": "0e23f4e083b06eb57c9a499771e51e98c6311456", "url": "https://github.com/keycloak/keycloak/commit/0e23f4e083b06eb57c9a499771e51e98c6311456", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs", "committedDate": "2020-09-02T20:17:58Z", "type": "forcePushed"}]}