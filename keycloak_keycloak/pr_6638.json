{"pr_number": 6638, "pr_title": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "pr_author": "vramik", "pr_createdAt": "2020-01-06T15:03:32Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6638", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5NjI3NQ==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363796275", "body": "nit: `assertThat(users, hasSize(1));`", "bodyText": "nit: assertThat(users, hasSize(1));", "bodyHTML": "<p dir=\"auto\">nit: <code>assertThat(users, hasSize(1));</code></p>", "author": "hmlnarik", "createdAt": "2020-01-07T15:15:42Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -716,6 +718,19 @@ public void attributes() {\n         assertNull(user1.getAttributes());\n     }\n \n+    @Test\n+    public void testImportUserWithNullAttribute() {\n+        RealmRepresentation rep = loadJson(getClass().getResourceAsStream(\"/import/testrealm-user-null-attr.json\"), RealmRepresentation.class);\n+\n+        try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n+            List<UserRepresentation> users = c.resource().users().list();\n+            // there should be only one user\n+            assertThat(users.size(), equalTo(1));", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5NjQxNA==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363796414", "body": "```suggestion\r\n            // test there are only 2 attributes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n          \n          \n            \n                        // test there are only 2 attributes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> test there are only 2 <span class=\"x x-first x-last\">attibutes</span> imported from json file, attribute \"key3\" : [ null ] shoudn't be imported</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> test there are only 2 <span class=\"x x-first x-last\">attributes</span> imported from json file, attribute \"key3\" : [ null ] shoudn't be imported</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "hmlnarik", "createdAt": "2020-01-07T15:15:58Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -716,6 +718,19 @@ public void attributes() {\n         assertNull(user1.getAttributes());\n     }\n \n+    @Test\n+    public void testImportUserWithNullAttribute() {\n+        RealmRepresentation rep = loadJson(getClass().getResourceAsStream(\"/import/testrealm-user-null-attr.json\"), RealmRepresentation.class);\n+\n+        try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n+            List<UserRepresentation> users = c.resource().users().list();\n+            // there should be only one user\n+            assertThat(users.size(), equalTo(1));\n+            // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5ODA5MA==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363798090", "body": "No need to realize this list into memory via `.collect`. you can either obtain a stream `iterator()` or use `Stream.forEach()`.", "bodyText": "No need to realize this list into memory via .collect. you can either obtain a stream iterator() or use Stream.forEach().", "bodyHTML": "<p dir=\"auto\">No need to realize this list into memory via <code>.collect</code>. you can either obtain a stream <code>iterator()</code> or use <code>Stream.forEach()</code>.</p>", "author": "hmlnarik", "createdAt": "2020-01-07T15:19:09Z", "path": "model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java", "diffHunk": "@@ -147,8 +152,9 @@ public void setAttribute(String name, List<String> values) {\n         // Remove all existing\n         removeAttribute(name);\n \n-        // Put all new\n-        for (String value : values) {\n+        List<String> nonNullValues = values.stream().filter(Objects::nonNull).collect(Collectors.toList());", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bc144b6a198aab57fe3c721eb7569fb9c93896b3", "url": "https://github.com/keycloak/keycloak/commit/bc144b6a198aab57fe3c721eb7569fb9c93896b3", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:03:19Z", "type": "forcePushed"}, {"oid": "5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "url": "https://github.com/keycloak/keycloak/commit/5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:45:56Z", "type": "commit"}, {"oid": "5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "url": "https://github.com/keycloak/keycloak/commit/5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:45:56Z", "type": "forcePushed"}]}