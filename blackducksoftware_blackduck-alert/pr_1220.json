{"pr_number": 1220, "pr_title": " saml init disable", "pr_author": "psantos1113", "pr_createdAt": "2020-10-12T21:14:48Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220", "timeline": [{"oid": "339990efe3831d93592f04c932c4f9109ab48f9e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/339990efe3831d93592f04c932c4f9109ab48f9e", "message": "feat: Validate SAML config and disable if invalid.", "committedDate": "2020-10-06T13:55:26Z", "type": "commit"}, {"oid": "03c9fb7d407695f11927379e259350102c62d26e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/03c9fb7d407695f11927379e259350102c62d26e", "message": "Merge remote-tracking branch 'origin/master' into ps_saml_init_disable_merge", "committedDate": "2020-10-12T12:17:54Z", "type": "commit"}, {"oid": "a4278973f1d051fcdbf878947a03057697be38b5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a4278973f1d051fcdbf878947a03057697be38b5", "message": "Merge remote-tracking branch 'origin/master' into ps_saml_init_disable", "committedDate": "2020-10-12T13:23:55Z", "type": "commit"}, {"oid": "daf4433006165503f24ae8a9a395caa7287e93d7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/daf4433006165503f24ae8a9a395caa7287e93d7", "message": "refactor: Update to disable SAML if configuration is invalid.", "committedDate": "2020-10-12T21:10:56Z", "type": "commit"}, {"oid": "f495a8764339bec89f435c712362b3a9829255b9", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f495a8764339bec89f435c712362b3a9829255b9", "message": "Merge remote-tracking branch 'origin/master' into ps_saml_init_disable", "committedDate": "2020-10-12T21:11:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkzODM3Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r503938376", "body": "This could be simplified to:\r\n```suggestion\r\n            if (null == enabledField) {\r\n                enabledField = ConfigurationFieldModel.create(AuthenticationDescriptor.KEY_SAML_ENABLED);\r\n                fields.put(AuthenticationDescriptor.KEY_SAML_ENABLED, enabledField);\r\n            }\r\n            enabledField.setFieldValue(String.valueOf(false));\r\n```\r\nIf it feels weird to modify the reference after the `fields.put(...)` call, you could call `fields.put(...)` after the last line without any significant performance impact. ", "bodyText": "This could be simplified to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (null != enabledField) {\n          \n          \n            \n                            enabledField.setFieldValue(String.valueOf(false));\n          \n          \n            \n                        } else {\n          \n          \n            \n                            enabledField = ConfigurationFieldModel.create(AuthenticationDescriptor.KEY_SAML_ENABLED);\n          \n          \n            \n                            enabledField.setFieldValue(String.valueOf(false));\n          \n          \n            \n                            fields.put(AuthenticationDescriptor.KEY_SAML_ENABLED, enabledField);\n          \n          \n            \n                        }\n          \n          \n            \n                        if (null == enabledField) {\n          \n          \n            \n                            enabledField = ConfigurationFieldModel.create(AuthenticationDescriptor.KEY_SAML_ENABLED);\n          \n          \n            \n                            fields.put(AuthenticationDescriptor.KEY_SAML_ENABLED, enabledField);\n          \n          \n            \n                        }\n          \n          \n            \n                        enabledField.setFieldValue(String.valueOf(false));\n          \n      \n    \n    \n  \n\nIf it feels weird to modify the reference after the fields.put(...) call, you could call fields.put(...) after the last line without any significant performance impact.", "bodyHTML": "<p dir=\"auto\">This could be simplified to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> enabledField) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                enabledField<span class=\"pl-k\">.</span>setFieldValue(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                enabledField <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ConfigurationFieldModel</span><span class=\"pl-k\">.</span>create(<span class=\"pl-smi\">AuthenticationDescriptor</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>KEY_SAML_ENABLED</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                enabledField<span class=\"pl-k\">.</span>setFieldValue(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                fields<span class=\"pl-k\">.</span>put(<span class=\"pl-smi\">AuthenticationDescriptor</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>KEY_SAML_ENABLED</span>, enabledField);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">null</span> <span class=\"pl-k\">==</span> enabledField) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                enabledField <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ConfigurationFieldModel</span><span class=\"pl-k\">.</span>create(<span class=\"pl-smi\">AuthenticationDescriptor</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>KEY_SAML_ENABLED</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                fields<span class=\"pl-k\">.</span>put(<span class=\"pl-smi\">AuthenticationDescriptor</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>KEY_SAML_ENABLED</span>, enabledField);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            enabledField<span class=\"pl-k\">.</span>setFieldValue(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">If it feels weird to modify the reference after the <code>fields.put(...)</code> call, you could call <code>fields.put(...)</code> after the last line without any significant performance impact.</p>", "author": "gkillough", "createdAt": "2020-10-13T13:12:44Z", "path": "component/src/main/java/com/synopsys/integration/alert/component/authentication/security/saml/SAMLContext.java", "diffHunk": "@@ -69,6 +70,24 @@ public boolean isSAMLEnabled() {\n         return false;\n     }\n \n+    public void disableSAML() {\n+        try {\n+            ConfigurationModel configurationModel = getCurrentConfiguration();\n+            Map<String, ConfigurationFieldModel> fields = configurationModel.getCopyOfKeyToFieldMap();\n+            ConfigurationFieldModel enabledField = fields.get(AuthenticationDescriptor.KEY_SAML_ENABLED);\n+            if (null != enabledField) {\n+                enabledField.setFieldValue(String.valueOf(false));\n+            } else {\n+                enabledField = ConfigurationFieldModel.create(AuthenticationDescriptor.KEY_SAML_ENABLED);\n+                enabledField.setFieldValue(String.valueOf(false));\n+                fields.put(AuthenticationDescriptor.KEY_SAML_ENABLED, enabledField);\n+            }", "originalCommit": "f495a8764339bec89f435c712362b3a9829255b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxMjA3Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r504012076", "bodyText": "That's not a problem.  I'll implement the change.", "author": "psantos1113", "createdAt": "2020-10-13T14:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkzODM3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NDI0OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r503974249", "body": "Should we be handling such broad exceptions here? ", "bodyText": "Should we be handling such broad exceptions here?", "bodyHTML": "<p dir=\"auto\">Should we be handling such broad exceptions here?</p>", "author": "bamandel", "createdAt": "2020-10-13T13:57:35Z", "path": "component/src/main/java/com/synopsys/integration/alert/component/authentication/security/saml/SAMLManager.java", "diffHunk": "@@ -166,4 +173,33 @@ private ExtendedMetadataDelegate createDelegate(MetadataProvider provider) {\n     private HttpClient httpClient() {\n         return new HttpClient(new MultiThreadedHttpConnectionManager());\n     }\n+\n+    private boolean checkMetadataProvidersValid(String metaDataUrl, String entityId) {\n+        boolean httpProviderValid = false;\n+        boolean fileProviderValid = false;\n+        boolean entityIdValid = StringUtils.isNotBlank(entityId);\n+        if (!entityIdValid) {\n+            logger.error(\"Validated SAML entity id missing.\");\n+        }\n+        try {\n+            Optional<ExtendedMetadataDelegate> provider = createHttpProvider(metaDataUrl);\n+            if (provider.isPresent()) {\n+                provider.get().initialize();\n+                httpProviderValid = true;\n+            }\n+        } catch (Exception ex) {", "originalCommit": "f495a8764339bec89f435c712362b3a9829255b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxMDIzNw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r504010237", "bodyText": "Yes, because if there's a runtime exception on initialize of the metadata provider then you won't be able to login with SAML, LDAP or the database users.  The only exception that is advertised by the initialize method is a MetadataProviderException, but if the XML Metadata file isn't formatted correctly you can get a SAXParser exception which isn't wrapped in a MetaDataProviderException or advertised as a thrown exception.  We don't want the exception to bubble all the way up because it could cause the server to crash.\nHere we are validating as best we can that the SAML configuration is good.  If it is, then configure SAML.  If it isn't valid, then we want to be able to disable the SAML configuration.  SAML has two parts to it.  The database configuration to enable SAML authentication in Alert, which has already happened before this point, and the SAML library portion.  We need to be able to recover from an exception in order to disable SAML configuration in the database. This is the most cautious way to be able to recover.", "author": "psantos1113", "createdAt": "2020-10-13T14:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NDI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NDQ0Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r503974446", "body": "Another very broad exception handling", "bodyText": "Another very broad exception handling", "bodyHTML": "<p dir=\"auto\">Another very broad exception handling</p>", "author": "bamandel", "createdAt": "2020-10-13T13:57:50Z", "path": "component/src/main/java/com/synopsys/integration/alert/component/authentication/security/saml/SAMLManager.java", "diffHunk": "@@ -166,4 +173,33 @@ private ExtendedMetadataDelegate createDelegate(MetadataProvider provider) {\n     private HttpClient httpClient() {\n         return new HttpClient(new MultiThreadedHttpConnectionManager());\n     }\n+\n+    private boolean checkMetadataProvidersValid(String metaDataUrl, String entityId) {\n+        boolean httpProviderValid = false;\n+        boolean fileProviderValid = false;\n+        boolean entityIdValid = StringUtils.isNotBlank(entityId);\n+        if (!entityIdValid) {\n+            logger.error(\"Validated SAML entity id missing.\");\n+        }\n+        try {\n+            Optional<ExtendedMetadataDelegate> provider = createHttpProvider(metaDataUrl);\n+            if (provider.isPresent()) {\n+                provider.get().initialize();\n+                httpProviderValid = true;\n+            }\n+        } catch (Exception ex) {\n+            logger.error(\"Validating SAML Metadata URL error: \", ex);\n+        }\n+\n+        try {\n+            Optional<ExtendedMetadataDelegate> provider = createFileProvider();\n+            if (provider.isPresent()) {\n+                provider.get().initialize();\n+                fileProviderValid = true;\n+            }\n+        } catch (Exception ex) {", "originalCommit": "f495a8764339bec89f435c712362b3a9829255b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxMDM5Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1220#discussion_r504010396", "bodyText": "see the previous comment", "author": "psantos1113", "createdAt": "2020-10-13T14:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NDQ0Ng=="}], "type": "inlineReview"}, {"oid": "3af60d03f6dd2d32d946f420230ad3a5721df965", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3af60d03f6dd2d32d946f420230ad3a5721df965", "message": "test: Add more test cases for SAMLManager.", "committedDate": "2020-10-13T14:30:05Z", "type": "commit"}, {"oid": "162980035eab3d3afc508c7cd6742246dbb653a1", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/162980035eab3d3afc508c7cd6742246dbb653a1", "message": "refactor: Update based on PR feedback.", "committedDate": "2020-10-13T14:45:38Z", "type": "commit"}, {"oid": "24a62bda5fa3b2b94dfb24f5c633c64719434627", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/24a62bda5fa3b2b94dfb24f5c633c64719434627", "message": "test: Fix the startup component test.", "committedDate": "2020-10-13T16:15:16Z", "type": "commit"}]}