{"pr_number": 1274, "pr_title": "Request all job-audit data at once", "pr_author": "gkillough", "pr_createdAt": "2020-11-24T17:08:57Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1274", "timeline": [{"oid": "a35b9d67ccd5506f7285c28ced02a610e92dfe0f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a35b9d67ccd5506f7285c28ced02a610e92dfe0f", "message": "Feat(Audit): Add controller to query for audit statues of multiple jobs at a time", "committedDate": "2020-11-24T15:39:45Z", "type": "commit"}, {"oid": "4751440b798fab536cbf5dc28b9a0c8c00acaa36", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4751440b798fab536cbf5dc28b9a0c8c00acaa36", "message": "Feat(UI): Call new endpoint to query for all job-audit data at once", "committedDate": "2020-11-24T16:14:40Z", "type": "commit"}, {"oid": "cce90e073b087643e58c66f0cdecfc86166b0578", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cce90e073b087643e58c66f0cdecfc86166b0578", "message": "Fix(Audit): Query per job rather than all at once to avoid collisions", "committedDate": "2020-11-24T17:06:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5MTgyMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1274#discussion_r529791823", "body": "You could do this slightly differently but it shouldn't make a difference.\r\n```\r\nOptional<UUID> nullJobId = jobIds.stream()\r\n .filter(Objects::isNull)\r\n .findFirst();\r\nif(nullJobId.isPresent()){\r\n\treturn new ActionResponse<>(HttpStatus.BAD_REQUEST, \"The field 'jobIds' cannot contain null values\");\r\n}\r\n```", "bodyText": "You could do this slightly differently but it shouldn't make a difference.\nOptional<UUID> nullJobId = jobIds.stream()\n .filter(Objects::isNull)\n .findFirst();\nif(nullJobId.isPresent()){\n\treturn new ActionResponse<>(HttpStatus.BAD_REQUEST, \"The field 'jobIds' cannot contain null values\");\n}", "bodyHTML": "<p dir=\"auto\">You could do this slightly differently but it shouldn't make a difference.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Optional&lt;UUID&gt; nullJobId = jobIds.stream()\n .filter(Objects::isNull)\n .findFirst();\nif(nullJobId.isPresent()){\n\treturn new ActionResponse&lt;&gt;(HttpStatus.BAD_REQUEST, &quot;The field 'jobIds' cannot contain null values&quot;);\n}\"><pre><code>Optional&lt;UUID&gt; nullJobId = jobIds.stream()\n .filter(Objects::isNull)\n .findFirst();\nif(nullJobId.isPresent()){\n\treturn new ActionResponse&lt;&gt;(HttpStatus.BAD_REQUEST, \"The field 'jobIds' cannot contain null values\");\n}\n</code></pre></div>", "author": "jamesrichard91", "createdAt": "2020-11-24T18:29:44Z", "path": "component/src/main/java/com/synopsys/integration/alert/component/audit/web/AuditEntryActions.java", "diffHunk": "@@ -123,6 +125,22 @@ public AuditEntryActions(\n         return new ActionResponse<>(HttpStatus.GONE, \"The Audit information could not be found for this job.\");\n     }\n \n+    public ActionResponse<AuditJobStatusesModel> queryForAuditInfoInJobs(JobIdsRequestModel queryRequestModel) {\n+        if (!authorizationManager.hasReadPermission(ConfigContextEnum.GLOBAL, descriptorKey)) {\n+            return new ActionResponse<>(HttpStatus.FORBIDDEN, ActionResponse.FORBIDDEN_MESSAGE);\n+        }\n+\n+        List<UUID> jobIds = queryRequestModel.getJobIds();\n+        for (UUID jobId : jobIds) {\n+            if (null == jobId) {\n+                return new ActionResponse<>(HttpStatus.BAD_REQUEST, \"The field 'jobIds' cannot contain null values\");\n+            }\n+        }\n+", "originalCommit": "cce90e073b087643e58c66f0cdecfc86166b0578", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}