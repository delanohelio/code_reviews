{"pr_number": 4631, "pr_title": "DHFPROD-4809: Substitute tokens when loading user artifacts", "pr_author": "akshaysonvane", "pr_createdAt": "2020-09-28T18:07:09Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4631", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2MDA5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496160093", "body": "We've got 5 instances of code all wanting to do the same thing - convert a File or Resource into a JsonNode, and now they all want to replace tokens at the same time. \r\n\r\nIt's best to do this via a new private method - particularly as when we add a 6th instance of the code, we can just reuse that method and not worry about forgetting to replace tokens. \r\n\r\nSince we know that everything is a File here, the 2 places that use a Resource should just do \"resource.getFile()\". The reusable method can then have a signature of:\r\n\r\n    private JsonNode readArtifact(File file);\r\n\r\nAnd it should catch any exception that occurs and throwing a generic error message of:\r\n\r\n    throw new RuntimeException(\"Unless to read file \" + f.getFilename() \" + as JSON; cause: \" + e.getMessage(), e);\r\n\r\n", "bodyText": "We've got 5 instances of code all wanting to do the same thing - convert a File or Resource into a JsonNode, and now they all want to replace tokens at the same time.\nIt's best to do this via a new private method - particularly as when we add a 6th instance of the code, we can just reuse that method and not worry about forgetting to replace tokens.\nSince we know that everything is a File here, the 2 places that use a Resource should just do \"resource.getFile()\". The reusable method can then have a signature of:\nprivate JsonNode readArtifact(File file);\n\nAnd it should catch any exception that occurs and throwing a generic error message of:\nthrow new RuntimeException(\"Unless to read file \" + f.getFilename() \" + as JSON; cause: \" + e.getMessage(), e);", "bodyHTML": "<p dir=\"auto\">We've got 5 instances of code all wanting to do the same thing - convert a File or Resource into a JsonNode, and now they all want to replace tokens at the same time.</p>\n<p dir=\"auto\">It's best to do this via a new private method - particularly as when we add a 6th instance of the code, we can just reuse that method and not worry about forgetting to replace tokens.</p>\n<p dir=\"auto\">Since we know that everything is a File here, the 2 places that use a Resource should just do \"resource.getFile()\". The reusable method can then have a signature of:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private JsonNode readArtifact(File file);\"><pre><code>private JsonNode readArtifact(File file);\n</code></pre></div>\n<p dir=\"auto\">And it should catch any exception that occurs and throwing a generic error message of:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"throw new RuntimeException(&quot;Unless to read file &quot; + f.getFilename() &quot; + as JSON; cause: &quot; + e.getMessage(), e);\"><pre><code>throw new RuntimeException(\"Unless to read file \" + f.getFilename() \" + as JSON; cause: \" + e.getMessage(), e);\n</code></pre></div>", "author": "rjrudin", "createdAt": "2020-09-28T18:45:53Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -155,9 +159,10 @@ private void loadModels(HubClient hubClient) throws IOException {\n                 public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)  {\n                     logger.info(\"Loading models from directory \" + dir);\n                     modulesFinder.findModules(dir.toString()).getAssets().forEach(r -> {\n-                        try {\n+                        try (InputStream inputStream = r.getInputStream()) {", "originalCommit": "919f3f1e111c40f03aefe15dda61a601bdb456c0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ac8134812e0ba9f27a9d1af03eec0dea5485b1c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9ac8134812e0ba9f27a9d1af03eec0dea5485b1c", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:17:04Z", "type": "forcePushed"}, {"oid": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:18:59Z", "type": "commit"}, {"oid": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:18:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwOTE2Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496209167", "body": "This is fine to keep, but generally I think it's simpler to just do \"return objectMapper.readTree\" as opposed to declaring this variable here. Shortens the method too. ", "bodyText": "This is fine to keep, but generally I think it's simpler to just do \"return objectMapper.readTree\" as opposed to declaring this variable here. Shortens the method too.", "bodyHTML": "<p dir=\"auto\">This is fine to keep, but generally I think it's simpler to just do \"return objectMapper.readTree\" as opposed to declaring this variable here. Shortens the method too.</p>", "author": "rjrudin", "createdAt": "2020-09-28T20:21:01Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -382,6 +378,25 @@ protected ObjectNode replaceLanguageWithLang(ObjectNode object) {\n         return newObject;\n     }\n \n+    /**\n+     * Reads the artifact file, replaces tokens and then returns the content as a JsonNode.\n+     *\n+     * @param file\n+     * @return\n+     */\n+    private JsonNode readArtifact(File file) {\n+        JsonNode jsonNode;", "originalCommit": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}