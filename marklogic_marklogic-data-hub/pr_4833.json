{"pr_number": 4833, "pr_title": "DHFPROD-6184:  Write records via URI Template using spark connector", "pr_author": "josvanroosmalen", "pr_createdAt": "2020-11-09T08:39:26Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4833", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5ODM4Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r519998382", "body": "This test class already has too many scenarios in it - let's make a new \"WriteDataWithUriTemplateTest\" to capture all of these tests. Makes it easy to see all the test coverage for this feature. ", "bodyText": "This test class already has too many scenarios in it - let's make a new \"WriteDataWithUriTemplateTest\" to capture all of these tests. Makes it easy to see all the test coverage for this feature.", "bodyHTML": "<p dir=\"auto\">This test class already has too many scenarios in it - let's make a new \"WriteDataWithUriTemplateTest\" to capture all of these tests. Makes it easy to see all the test coverage for this feature.</p>", "author": "rjrudin", "createdAt": "2020-11-09T17:41:28Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/writer/WriteDataWithOptionsTest.java", "diffHunk": "@@ -6,13 +6,102 @@\n import com.marklogic.hub.spark.sql.sources.v2.AbstractSparkConnectorTest;\n import org.junit.jupiter.api.Test;\n \n+import org.apache.spark.sql.sources.v2.writer.WriterCommitMessage;\n+\n import java.util.Set;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n \n public class WriteDataWithOptionsTest extends AbstractSparkConnectorTest {\n \n+    @Test", "originalCommit": "61417d4a6e4f1f423494d530455c9b9c71f281bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA3MDQwMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520070401", "bodyText": "ready for commit", "author": "josvanroosmalen", "createdAt": "2020-11-09T19:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5ODM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5ODgxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r519998814", "body": "For consistency with other tests, do this:\r\n\r\n```\r\nRuntimeException ex = assertThrows(RuntimeException.class, () -> initializeDataWriter....);\r\nassertEquals(\"...\", ex.getMessage());\r\n```", "bodyText": "For consistency with other tests, do this:\nRuntimeException ex = assertThrows(RuntimeException.class, () -> initializeDataWriter....);\nassertEquals(\"...\", ex.getMessage());", "bodyHTML": "<p dir=\"auto\">For consistency with other tests, do this:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"RuntimeException ex = assertThrows(RuntimeException.class, () -&gt; initializeDataWriter....);\nassertEquals(&quot;...&quot;, ex.getMessage());\"><pre><code>RuntimeException ex = assertThrows(RuntimeException.class, () -&gt; initializeDataWriter....);\nassertEquals(\"...\", ex.getMessage());\n</code></pre></div>", "author": "rjrudin", "createdAt": "2020-11-09T17:42:07Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/writer/WriteDataWithOptionsTest.java", "diffHunk": "@@ -6,13 +6,102 @@\n import com.marklogic.hub.spark.sql.sources.v2.AbstractSparkConnectorTest;\n import org.junit.jupiter.api.Test;\n \n+import org.apache.spark.sql.sources.v2.writer.WriterCommitMessage;\n+\n import java.util.Set;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n \n public class WriteDataWithOptionsTest extends AbstractSparkConnectorTest {\n \n+    @Test\n+    void testInvalidUriTemplate1() {\n+        String uriTemplate = \"{property1.json\";\n+        try {", "originalCommit": "61417d4a6e4f1f423494d530455c9b9c71f281bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA3NDM1Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520074356", "bodyText": "Ready for commit", "author": "josvanroosmalen", "createdAt": "2020-11-09T19:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5ODgxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNDAzOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520004039", "body": "For consistency with my proposal for error messages in the DS endpoint, let's do a format of:\r\n\r\n```\r\nthrow new IllegalArgumentException(\"Cannot apply uriTemplate: \" + uriTemplate + \"; closing curly bracket found without opening bracket\");\r\n```\r\n\r\nIllegalArgumentException is a bit more descriptive than RuntimeException. And we don't have a precedent for using \"[\" and \"]\" to surround user-provided inputs (it's a nice pattern, we just don't do it elsewhere). ", "bodyText": "For consistency with my proposal for error messages in the DS endpoint, let's do a format of:\nthrow new IllegalArgumentException(\"Cannot apply uriTemplate: \" + uriTemplate + \"; closing curly bracket found without opening bracket\");\n\nIllegalArgumentException is a bit more descriptive than RuntimeException. And we don't have a precedent for using \"[\" and \"]\" to surround user-provided inputs (it's a nice pattern, we just don't do it elsewhere).", "bodyHTML": "<p dir=\"auto\">For consistency with my proposal for error messages in the DS endpoint, let's do a format of:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"throw new IllegalArgumentException(&quot;Cannot apply uriTemplate: &quot; + uriTemplate + &quot;; closing curly bracket found without opening bracket&quot;);\"><pre><code>throw new IllegalArgumentException(\"Cannot apply uriTemplate: \" + uriTemplate + \"; closing curly bracket found without opening bracket\");\n</code></pre></div>\n<p dir=\"auto\">IllegalArgumentException is a bit more descriptive than RuntimeException. And we don't have a precedent for using \"[\" and \"]\" to surround user-provided inputs (it's a nice pattern, we just don't do it elsewhere).</p>", "author": "rjrudin", "createdAt": "2020-11-09T17:50:25Z", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataSourceWriter.java", "diffHunk": "@@ -101,6 +100,48 @@ private boolean atLeastOneWriteFailed(WriterCommitMessage[] messages) {\n         return false;\n     }\n \n+    /**\n+     * Validate the URI template if present in the options.\n+     *\n+     * A valid URI template:\n+     * - Has no missing opening or closing curly brackets.\n+     * - Each token has >0 characters.\n+     * - Has no nested curcly brackets.\n+     */\n+    private void validateUriTemplateIfPresent() {\n+        String uriTemplate = options.get(\"uritemplate\");\n+        if ( uriTemplate == null ) {\n+            return;\n+        }\n+        boolean inToken = false;\n+        int tokenSize = 0;\n+        char[] chars = uriTemplate.toCharArray();\n+        for ( char ch : chars ) {\n+            if ( ch == '}' ) {\n+                if ( !inToken ) {\n+                    throw new RuntimeException(\"Closing curly bracket found without opening bracket. uritemplate=[\" + uriTemplate + \"].\");", "originalCommit": "61417d4a6e4f1f423494d530455c9b9c71f281bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4MzMzOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520083339", "bodyText": "ready for commit.", "author": "josvanroosmalen", "createdAt": "2020-11-09T19:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNDAzOQ=="}], "type": "inlineReview"}, {"oid": "56f76cac564e288a361ce479e4c24c482cf49cc2", "url": "https://github.com/marklogic/marklogic-data-hub/commit/56f76cac564e288a361ce479e4c24c482cf49cc2", "message": "UriTemplate\n\nUri template\n\nDHFPROD-6184\n\nDHFPROD-6184", "committedDate": "2020-11-09T20:28:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEwNDY1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520104658", "body": "Just do a revert on this file so that there are no changes to it", "bodyText": "Just do a revert on this file so that there are no changes to it", "bodyHTML": "<p dir=\"auto\">Just do a revert on this file so that there are no changes to it</p>", "author": "rjrudin", "createdAt": "2020-11-09T20:37:37Z", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/writer/WriteDataWithOptionsTest.java", "diffHunk": "@@ -6,13 +6,16 @@\n import com.marklogic.hub.spark.sql.sources.v2.AbstractSparkConnectorTest;\n import org.junit.jupiter.api.Test;\n \n+import org.apache.spark.sql.sources.v2.writer.WriterCommitMessage;", "originalCommit": "56f76cac564e288a361ce479e4c24c482cf49cc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExOTA5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4833#discussion_r520119093", "bodyText": "ready for commit", "author": "josvanroosmalen", "createdAt": "2020-11-09T21:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEwNDY1OA=="}], "type": "inlineReview"}, {"oid": "90f5c228aecb94d79618e3c3ab9d9486a19364a8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/90f5c228aecb94d79618e3c3ab9d9486a19364a8", "message": "DHFPROD-6184\n\nUriTemplate\n\nUri template\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nUriTemplate\n\nUri template\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184", "committedDate": "2020-11-09T21:38:52Z", "type": "commit"}, {"oid": "90f5c228aecb94d79618e3c3ab9d9486a19364a8", "url": "https://github.com/marklogic/marklogic-data-hub/commit/90f5c228aecb94d79618e3c3ab9d9486a19364a8", "message": "DHFPROD-6184\n\nUriTemplate\n\nUri template\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nUriTemplate\n\nUri template\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184\n\nDHFPROD-6184", "committedDate": "2020-11-09T21:38:52Z", "type": "forcePushed"}]}