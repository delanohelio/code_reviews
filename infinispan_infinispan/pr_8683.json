{"pr_number": 8683, "pr_title": "ISPN-12316 Convert expiration to no longer use transactions", "pr_author": "wburns", "pr_createdAt": "2020-09-10T14:01:53Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8683", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDE5Mg==", "url": "https://github.com/infinispan/infinispan/pull/8683#discussion_r486424192", "body": "lambda can be cached (sound like Dan xD)", "bodyText": "lambda can be cached (sound like Dan xD)", "bodyHTML": "<p dir=\"auto\">lambda can be cached (sound like Dan xD)</p>", "author": "pruivo", "createdAt": "2020-09-10T15:14:05Z", "path": "core/src/main/java/org/infinispan/interceptors/impl/TransactionalExceptionEvictionInterceptor.java", "diffHunk": "@@ -166,6 +168,31 @@ public Object visitInvalidateCommand(InvocationContext ctx, InvalidateCommand co\n       return super.visitInvalidateCommand(ctx, command);\n    }\n \n+   // Remove Expired is not transactional\n+   @Override\n+   public Object visitRemoveExpiredCommand(InvocationContext ctx, RemoveExpiredCommand command) {\n+      Object key = command.getKey();\n+      // Skip adding changeAmount if originator is not primary\n+      if (ctx.isOriginLocal() && dm != null && !dm.getCacheTopology().getSegmentDistribution(command.getSegment()).isPrimary()) {\n+         return invokeNext(ctx, command);\n+      }\n+      return invokeNextThenAccept(ctx, command, ((rCtx, rCommand, rv) -> {\n+         if (rCommand.isSuccessful()) {", "originalCommit": "e98511638bb37b4b0d4ea3c6f3d02738dd8337ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNzUyNw==", "url": "https://github.com/infinispan/infinispan/pull/8683#discussion_r486437527", "bodyText": "Sure.", "author": "wburns", "createdAt": "2020-09-10T15:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDU0Ng==", "url": "https://github.com/infinispan/infinispan/pull/8683#discussion_r486424546", "body": "```suggestion\r\n               MVCCEntry<?, ?> entry = (MVCCEntry<?, ?>) ctx.lookupEntry(key);\r\n```\r\njust to remove the warning from IDEA :)", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                           MVCCEntry<Object, Object> entry = (MVCCEntry) ctx.lookupEntry(key);\n          \n          \n            \n                           MVCCEntry<?, ?> entry = (MVCCEntry<?, ?>) ctx.lookupEntry(key);\n          \n      \n    \n    \n  \n\njust to remove the warning from IDEA :)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">               <span class=\"pl-k\">MVCCEntry&lt;<span class=\"pl-smi x x-first\">Object</span><span class=\"x\">, </span><span class=\"pl-smi x x-last\">Object</span>&gt;</span> entry <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">MVCCEntry</span>) ctx<span class=\"pl-k\">.</span>lookupEntry(key);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">               <span class=\"pl-k\">MVCCEntry&lt;<span class=\"x x-first x-last\">?, ?</span>&gt;</span> entry <span class=\"pl-k\">=</span> (<span class=\"pl-k\">MVCCEntry<span class=\"x x-first x-last\">&lt;?, ?&gt;</span></span>) ctx<span class=\"pl-k\">.</span>lookupEntry(key);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">just to remove the warning from IDEA :)</p>", "author": "pruivo", "createdAt": "2020-09-10T15:14:32Z", "path": "core/src/main/java/org/infinispan/interceptors/impl/TransactionalExceptionEvictionInterceptor.java", "diffHunk": "@@ -166,6 +168,31 @@ public Object visitInvalidateCommand(InvocationContext ctx, InvalidateCommand co\n       return super.visitInvalidateCommand(ctx, command);\n    }\n \n+   // Remove Expired is not transactional\n+   @Override\n+   public Object visitRemoveExpiredCommand(InvocationContext ctx, RemoveExpiredCommand command) {\n+      Object key = command.getKey();\n+      // Skip adding changeAmount if originator is not primary\n+      if (ctx.isOriginLocal() && dm != null && !dm.getCacheTopology().getSegmentDistribution(command.getSegment()).isPrimary()) {\n+         return invokeNext(ctx, command);\n+      }\n+      return invokeNextThenAccept(ctx, command, ((rCtx, rCommand, rv) -> {\n+         if (rCommand.isSuccessful()) {\n+            if (dm == null || dm.getCacheTopology().getSegmentDistribution(rCommand.getSegment()).isWriteOwner()) {\n+               MVCCEntry<Object, Object> entry = (MVCCEntry) ctx.lookupEntry(key);", "originalCommit": "e98511638bb37b4b0d4ea3c6f3d02738dd8337ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNzU2MQ==", "url": "https://github.com/infinispan/infinispan/pull/8683#discussion_r486437561", "bodyText": "Sure.", "author": "wburns", "createdAt": "2020-09-10T15:31:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDU0Ng=="}], "type": "inlineReview"}, {"oid": "865b40b2ef82a32791d9312f2e4362b579792bc0", "url": "https://github.com/infinispan/infinispan/commit/865b40b2ef82a32791d9312f2e4362b579792bc0", "message": "ISPN-12316 Convert expiration to no longer use transactions", "committedDate": "2020-09-10T16:27:59Z", "type": "commit"}, {"oid": "865b40b2ef82a32791d9312f2e4362b579792bc0", "url": "https://github.com/infinispan/infinispan/commit/865b40b2ef82a32791d9312f2e4362b579792bc0", "message": "ISPN-12316 Convert expiration to no longer use transactions", "committedDate": "2020-09-10T16:27:59Z", "type": "forcePushed"}]}