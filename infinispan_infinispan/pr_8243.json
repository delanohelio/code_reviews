{"pr_number": 8243, "pr_title": "ISPN-11626 Server report", "pr_author": "tristantarrant", "pr_createdAt": "2020-04-24T16:26:18Z", "pr_url": "https://github.com/infinispan/infinispan/pull/8243", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzODQwOQ==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r415638409", "body": "Better to define a constant ```MediaType.APPLICATION_GZIP```", "bodyText": "Better to define a constant MediaType.APPLICATION_GZIP", "bodyHTML": "<p dir=\"auto\">Better to define a constant <code>MediaType.APPLICATION_GZIP</code></p>", "author": "gustavocoding", "createdAt": "2020-04-27T09:02:03Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/ServerResource.java", "diffHunk": "@@ -122,6 +125,26 @@ public Invocations getInvocations() {\n             .build());\n    }\n \n+   private CompletionStage<RestResponse> report(RestRequest restRequest) {\n+      ServerManagement server = invocationHelper.getServer();\n+      NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n+      return server.getServerReport().handle((path, t) -> {\n+         if (t != null) {\n+            return responseBuilder.status(HttpResponseStatus.INTERNAL_SERVER_ERROR).build();\n+         } else {\n+            return responseBuilder\n+                  .contentType(MediaType.fromString(\"application/gzip\"))", "originalCommit": "0987dd20f5aad618484fb1adbd5334314742a6c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzOTQ3NA==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r415639474", "body": "What is this header for?", "bodyText": "What is this header for?", "bodyHTML": "<p dir=\"auto\">What is this header for?</p>", "author": "gustavocoding", "createdAt": "2020-04-27T09:03:36Z", "path": "server/rest/src/main/java/org/infinispan/rest/resources/ServerResource.java", "diffHunk": "@@ -122,6 +125,26 @@ public Invocations getInvocations() {\n             .build());\n    }\n \n+   private CompletionStage<RestResponse> report(RestRequest restRequest) {\n+      ServerManagement server = invocationHelper.getServer();\n+      NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n+      return server.getServerReport().handle((path, t) -> {\n+         if (t != null) {\n+            return responseBuilder.status(HttpResponseStatus.INTERNAL_SERVER_ERROR).build();\n+         } else {\n+            return responseBuilder\n+                  .contentType(MediaType.fromString(\"application/gzip\"))\n+                  .header(\"Content-Disposition\",", "originalCommit": "0987dd20f5aad618484fb1adbd5334314742a6c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY0MjIzMg==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r415642232", "bodyText": "It forces the browser to download and sets the name of the file.", "author": "tristantarrant", "createdAt": "2020-04-27T09:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzOTQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY0MTAxOQ==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r415641019", "body": "Is Windows going to be handled? It probably needs to return ```501``` from the REST endpoint", "bodyText": "Is Windows going to be handled? It probably needs to return 501 from the REST endpoint", "bodyHTML": "<p dir=\"auto\">Is Windows going to be handled? It probably needs to return <code>501</code> from the REST endpoint</p>", "author": "gustavocoding", "createdAt": "2020-04-27T09:05:53Z", "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -536,4 +545,24 @@ public ComponentStatus getStatus() {\n    public TaskManager getTaskManager() {\n       return taskManager;\n    }\n+\n+   @Override\n+   public CompletionStage<Path> getServerReport() {\n+      return CompletableFuture.supplyAsync(() -> {\n+         Path home = serverHome.toPath();\n+         ProcessBuilder builder = new ProcessBuilder(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), home.toString());", "originalCommit": "0987dd20f5aad618484fb1adbd5334314742a6c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY0MjM3NQ==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r415642375", "bodyText": "I'll do that for non-Linux.", "author": "tristantarrant", "createdAt": "2020-04-27T09:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY0MTAxOQ=="}], "type": "inlineReview"}, {"oid": "a84bf1555f38e25aad96b8ace931770ad369da8e", "url": "https://github.com/infinispan/infinispan/commit/a84bf1555f38e25aad96b8ace931770ad369da8e", "message": "ISPN-11626 Server report", "committedDate": "2020-05-07T13:47:15Z", "type": "forcePushed"}, {"oid": "8c4372243fc866b0e44bcad8bc2a47a02b6bfa94", "url": "https://github.com/infinispan/infinispan/commit/8c4372243fc866b0e44bcad8bc2a47a02b6bfa94", "message": "ISPN-11626 Server report", "committedDate": "2020-05-07T13:57:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5OTM0NA==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422199344", "body": "print help all the time?\r\nthe command `> server` alone isn't valid.", "bodyText": "print help all the time?\nthe command > server alone isn't valid.", "bodyHTML": "<p dir=\"auto\">print help all the time?<br>\nthe command <code>&gt; server</code> alone isn't valid.</p>", "author": "pruivo", "createdAt": "2020-05-08T15:10:00Z", "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Server.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Server.CMD, description = \"Obtains information about the server\", activator = ConnectionActivator.class, groupCommands = {Server.Report.class})\n+public class Server extends CliCommand {\n+\n+   public static final String CMD = \"server\";\n+   public static final String TYPE = \"type\";\n+   public static final String NAME = \"name\";\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation commandInvocation) {\n+      if (help) {", "originalCommit": "36930b9657389fc092009afa3f28b38f0910e475", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIwOTYwOA==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422209608", "body": "nitpick: you don't need the `ForkJoinPool.commonPool()`. It is used by default.", "bodyText": "nitpick: you don't need the ForkJoinPool.commonPool(). It is used by default.", "bodyHTML": "<p dir=\"auto\">nitpick: you don't need the <code>ForkJoinPool.commonPool()</code>. It is used by default.</p>", "author": "pruivo", "createdAt": "2020-05-08T15:29:20Z", "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -536,4 +548,35 @@ public ComponentStatus getStatus() {\n    public TaskManager getTaskManager() {\n       return taskManager;\n    }\n+\n+   @Override\n+   public CompletionStage<Path> getServerReport() {\n+      long pid = ProcessInfo.getInstance().getPid();\n+      Path home = serverHome.toPath();\n+      Path root = serverRoot.toPath();\n+      ProcessBuilder builder = new ProcessBuilder();\n+      OS os = OS.getCurrentOs();\n+      switch (os) {\n+         case LINUX:\n+            builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\n+            break;\n+         default:\n+            return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n+      }\n+\n+      return CompletableFuture.supplyAsync(() -> {\n+         try {\n+            Process process = builder.start();\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+            Path path = Paths.get(reader.readLine());\n+            process.waitFor(1, TimeUnit.MINUTES);\n+            return path;\n+         } catch (IOException e) {\n+            throw new RuntimeException(e);\n+         } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            throw new RuntimeException(e);\n+         }\n+      }, ForkJoinPool.commonPool());", "originalCommit": "36930b9657389fc092009afa3f28b38f0910e475", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyNDg2Nw==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422224867", "bodyText": "Checkstyle wants it :) Blame @wburns", "author": "tristantarrant", "createdAt": "2020-05-08T15:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIwOTYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIyOTQzMA==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422229430", "bodyText": "Are you not able to pass the blocking executor in some way? We are trying not to use common pool at all. Tbh I should add a checkstyle to prevent calling ForkJoinPool.commonPool as well :)", "author": "wburns", "createdAt": "2020-05-08T16:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIwOTYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzMDI2Mg==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422230262", "bodyText": "Should be able to just extract it from the first cacheManager.", "author": "wburns", "createdAt": "2020-05-08T16:08:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIwOTYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzMDgyNA==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422230824", "bodyText": "To be honest I am not a fan of the multiple cacheManagers in this class still. Having multiple GLOBAL components could be quite problematic.", "author": "wburns", "createdAt": "2020-05-08T16:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIwOTYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIxMDMxNQ==", "url": "https://github.com/infinispan/infinispan/pull/8243#discussion_r422210315", "body": "```suggestion\r\n      OS os = OS.getCurrentOs();\r\n      if (os != OS.LINUX) {\r\n         return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\r\n      }\r\n      \r\n      long pid = ProcessInfo.getInstance().getPid();\r\n      Path home = serverHome.toPath();\r\n      Path root = serverRoot.toPath();\r\n      ProcessBuilder builder = new ProcessBuilder();\r\n      builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  long pid = ProcessInfo.getInstance().getPid();\n          \n          \n            \n                  Path home = serverHome.toPath();\n          \n          \n            \n                  Path root = serverRoot.toPath();\n          \n          \n            \n                  ProcessBuilder builder = new ProcessBuilder();\n          \n          \n            \n                  OS os = OS.getCurrentOs();\n          \n          \n            \n                  switch (os) {\n          \n          \n            \n                     case LINUX:\n          \n          \n            \n                        builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\n          \n          \n            \n                        break;\n          \n          \n            \n                     default:\n          \n          \n            \n                        return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n          \n          \n            \n                  }\n          \n          \n            \n                  OS os = OS.getCurrentOs();\n          \n          \n            \n                  if (os != OS.LINUX) {\n          \n          \n            \n                     return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n          \n          \n            \n                  }\n          \n          \n            \n                  \n          \n          \n            \n                  long pid = ProcessInfo.getInstance().getPid();\n          \n          \n            \n                  Path home = serverHome.toPath();\n          \n          \n            \n                  Path root = serverRoot.toPath();\n          \n          \n            \n                  ProcessBuilder builder = new ProcessBuilder();\n          \n          \n            \n                  builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">long</span> pid <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ProcessInfo</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>getPid();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">Path</span> home <span class=\"pl-k\">=</span> serverHome<span class=\"pl-k\">.</span>toPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">Path</span> root <span class=\"pl-k\">=</span> serverRoot<span class=\"pl-k\">.</span>toPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">ProcessBuilder</span> builder <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ProcessBuilder</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">OS</span> os <span class=\"pl-k\">=</span> <span class=\"pl-c1\">OS</span><span class=\"pl-k\">.</span>getCurrentOs();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">switch</span> (os) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">         <span class=\"pl-k\">case</span> <span class=\"pl-c1\">LINUX</span><span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            builder<span class=\"pl-k\">.</span>command(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sh<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-c<span class=\"pl-pds\">\"</span></span>, home<span class=\"pl-k\">.</span>resolve(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bin/report.sh<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>toString(), <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>toString(pid), root<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">break</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">         <span class=\"pl-k\">default</span><span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">CompletableFutures</span><span class=\"pl-k\">.</span>completedExceptionFuture(log<span class=\"pl-k\">.</span>serverReportUnavailable(os));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">OS</span> os <span class=\"pl-k\">=</span> <span class=\"pl-c1\">OS</span><span class=\"pl-k\">.</span>getCurrentOs();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (os <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">OS<span class=\"pl-k\">.</span>LINUX</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">return</span> <span class=\"pl-smi\">CompletableFutures</span><span class=\"pl-k\">.</span>completedExceptionFuture(log<span class=\"pl-k\">.</span>serverReportUnavailable(os));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">long</span> pid <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ProcessInfo</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>getPid();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">Path</span> home <span class=\"pl-k\">=</span> serverHome<span class=\"pl-k\">.</span>toPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">Path</span> root <span class=\"pl-k\">=</span> serverRoot<span class=\"pl-k\">.</span>toPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">ProcessBuilder</span> builder <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ProcessBuilder</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      builder<span class=\"pl-k\">.</span>command(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sh<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-c<span class=\"pl-pds\">\"</span></span>, home<span class=\"pl-k\">.</span>resolve(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bin/report.sh<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>toString(), <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>toString(pid), root<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pruivo", "createdAt": "2020-05-08T15:30:43Z", "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -536,4 +548,35 @@ public ComponentStatus getStatus() {\n    public TaskManager getTaskManager() {\n       return taskManager;\n    }\n+\n+   @Override\n+   public CompletionStage<Path> getServerReport() {\n+      long pid = ProcessInfo.getInstance().getPid();\n+      Path home = serverHome.toPath();\n+      Path root = serverRoot.toPath();\n+      ProcessBuilder builder = new ProcessBuilder();\n+      OS os = OS.getCurrentOs();\n+      switch (os) {\n+         case LINUX:\n+            builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\n+            break;\n+         default:\n+            return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n+      }", "originalCommit": "36930b9657389fc092009afa3f28b38f0910e475", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bab8f8a8ff3a6f97184cf67f7158fa1c722f6cd3", "url": "https://github.com/infinispan/infinispan/commit/bab8f8a8ff3a6f97184cf67f7158fa1c722f6cd3", "message": "ISPN-11626 Server report", "committedDate": "2020-05-08T15:59:23Z", "type": "forcePushed"}, {"oid": "39a3185b5239644b4bc5e5319ed846b2f6c53f83", "url": "https://github.com/infinispan/infinispan/commit/39a3185b5239644b4bc5e5319ed846b2f6c53f83", "message": "ISPN-11626 Server report", "committedDate": "2020-05-08T16:53:21Z", "type": "forcePushed"}, {"oid": "ce1135c4a3204fcc2b7e458f49311d838c43d2d3", "url": "https://github.com/infinispan/infinispan/commit/ce1135c4a3204fcc2b7e458f49311d838c43d2d3", "message": "ISPN-11626 Server report", "committedDate": "2020-05-09T13:47:57Z", "type": "forcePushed"}, {"oid": "c37adbf009b7fdacdc06e3faf54d485d5534bdc5", "url": "https://github.com/infinispan/infinispan/commit/c37adbf009b7fdacdc06e3faf54d485d5534bdc5", "message": "ISPN-11626 Server report", "committedDate": "2020-05-19T08:07:41Z", "type": "commit"}, {"oid": "c37adbf009b7fdacdc06e3faf54d485d5534bdc5", "url": "https://github.com/infinispan/infinispan/commit/c37adbf009b7fdacdc06e3faf54d485d5534bdc5", "message": "ISPN-11626 Server report", "committedDate": "2020-05-19T08:07:41Z", "type": "forcePushed"}]}