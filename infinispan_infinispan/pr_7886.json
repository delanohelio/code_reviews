{"pr_number": 7886, "pr_title": "ISPN-11333 Remove deprecated RpcManager methods", "pr_author": "ryanemerson", "pr_createdAt": "2020-02-13T17:02:37Z", "pr_url": "https://github.com/infinispan/infinispan/pull/7886", "timeline": [{"oid": "fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "url": "https://github.com/infinispan/infinispan/commit/fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "message": "ISPN-11333 Remove deprecated RpcManager methods", "committedDate": "2020-02-13T17:04:24Z", "type": "forcePushed"}, {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "url": "https://github.com/infinispan/infinispan/commit/bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "message": "ISPN-11333 Remove deprecated RpcManager methods", "committedDate": "2020-02-13T18:14:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzODAyNw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379038027", "body": "offtopic, this looks like a very old code. \r\nThe method's code could be replaced with a single line: `cacheManager.administration().createCache(cacheName, baseCacheName);`", "bodyText": "offtopic, this looks like a very old code.\nThe method's code could be replaced with a single line: cacheManager.administration().createCache(cacheName, baseCacheName);", "bodyHTML": "<p dir=\"auto\">offtopic, this looks like a very old code.<br>\nThe method's code could be replaced with a single line: <code>cacheManager.administration().createCache(cacheName, baseCacheName);</code></p>", "author": "pruivo", "createdAt": "2020-02-13T18:24:04Z", "path": "cli/cli-interpreter/src/main/java/org/infinispan/cli/interpreter/session/SessionImpl.java", "diffHunk": "@@ -117,7 +118,7 @@ public void createCache(String cacheName, String baseCacheName) {\n \n          CreateCacheCommand ccc = factory.buildCreateCacheCommand(cacheName, baseCacheName);\n          try {\n-            rpc.invokeRemotely(null, ccc, rpc.getSyncRpcOptions());\n+            rpc.blocking(rpc.invokeCommandOnAll(ccc, VoidResponseCollector.ignoreLeavers(), rpc.getSyncRpcOptions()));", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3ODAxMw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379178013", "bodyText": "Good point! This is the legacy code for the wfly server integration, so I'm not sure what the plan is in terms of refactoring and maintenance. @tristantarrant when are we killing these modules?", "author": "ryanemerson", "createdAt": "2020-02-13T23:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzODAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzOTc3Mw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379039773", "body": "use `rpcManager.blocking()` instead?", "bodyText": "use rpcManager.blocking() instead?", "bodyHTML": "<p dir=\"auto\">use <code>rpcManager.blocking()</code> instead?</p>", "author": "pruivo", "createdAt": "2020-02-13T18:27:22Z", "path": "core/src/main/java/org/infinispan/persistence/cluster/ClusterLoader.java", "diffHunk": "@@ -71,7 +70,16 @@ public MarshallableEntry loadEntry(Object key) throws PersistenceException {\n       ClusteredGetCommand clusteredGetCommand = commandsFactory.buildClusteredGetCommand(key,\n             keyPartitioner.getSegment(key), EnumUtil.bitSetOf(Flag.SKIP_OWNERSHIP_CHECK));\n \n-      Collection<Response> responses = doRemoteCall(clusteredGetCommand);\n+      Collection<Response> responses;\n+      try {\n+         clusteredGetCommand.setTopologyId(rpcManager.getTopologyId());\n+         CompletionStage<Map<Address, Response>> getAll = rpcManager.invokeCommandOnAll(clusteredGetCommand,\n+               MapResponseCollector.ignoreLeavers(), rpcManager.getSyncRpcOptions());\n+         responses = CompletionStages.join(getAll).values();", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MzU1Mg==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379043552", "body": "SYNC is correct otherwise you would get an empty Map everytime. ", "bodyText": "SYNC is correct otherwise you would get an empty Map everytime.", "bodyHTML": "<p dir=\"auto\">SYNC is correct otherwise you would get an empty Map everytime.</p>", "author": "pruivo", "createdAt": "2020-02-13T18:34:21Z", "path": "core/src/main/java/org/infinispan/remoting/rpc/RpcManagerImpl.java", "diffHunk": "@@ -303,10 +300,11 @@ private void checkTopologyId(ReplicableCommand command) {\n       long startTimeNanos = statisticsEnabled ? timeService.time() : 0;\n       CompletableFuture<Map<Address, Response>> invocation;\n       try {\n+         // TODO what's the correct ResponseMode?", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0NDQwMA==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379044400", "body": "nitpick: replace `if` with `&&`\r\n```suggestion\r\n      return timeout == options.timeout && \r\n             deliverOrder == options.deliverOrder && \r\n             unit == options.unit;\r\n```", "bodyText": "nitpick: replace if with &&\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return unit == options.unit;\n          \n          \n            \n                  return timeout == options.timeout && \n          \n          \n            \n                         deliverOrder == options.deliverOrder && \n          \n          \n            \n                         unit == options.unit;", "bodyHTML": "<p dir=\"auto\">nitpick: replace <code>if</code> with <code>&amp;&amp;</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\">unit</span> <span class=\"pl-k\">==</span> options<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">unit;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\">timeout</span> <span class=\"pl-k\">==</span> options<span class=\"pl-k\">.</span><span class=\"x x-first\">timeout </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             deliverOrder <span class=\"pl-k\">==</span> options<span class=\"pl-k\">.</span>deliverOrder <span class=\"pl-k\">&amp;&amp;</span> </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             unit <span class=\"pl-k\">==</span> options<span class=\"pl-k\">.</span>unit;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pruivo", "createdAt": "2020-02-13T18:36:00Z", "path": "core/src/main/java/org/infinispan/remoting/rpc/RpcOptions.java", "diffHunk": "@@ -111,21 +60,14 @@ public boolean equals(Object o) {\n \n       if (timeout != options.timeout) return false;\n       if (deliverOrder != options.deliverOrder) return false;\n-      if (responseFilter != null ? !responseFilter.equals(options.responseFilter) : options.responseFilter != null)\n-         return false;\n-      if (responseMode != options.responseMode) return false;\n-      if (unit != options.unit) return false;\n-\n-      return true;\n+      return unit == options.unit;", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0OTQ5Nw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379049497", "body": "suggestion: create `RpcManager.getSyncOrderedRpcOptions();` if this method is invoked too often.", "bodyText": "suggestion: create RpcManager.getSyncOrderedRpcOptions(); if this method is invoked too often.", "bodyHTML": "<p dir=\"auto\">suggestion: create <code>RpcManager.getSyncOrderedRpcOptions();</code> if this method is invoked too often.</p>", "author": "pruivo", "createdAt": "2020-02-13T18:45:41Z", "path": "hibernate/cache-commons/src/main/java/org/infinispan/hibernate/cache/commons/util/Caches.java", "diffHunk": "@@ -225,8 +229,10 @@ public static void broadcastEvictAll(AdvancedCache cache) {\n \t\tfinal RpcManager rpcManager = cache.getRpcManager();\n \t\tif ( rpcManager != null ) {\n \t\t\tfinal EvictAllCommand cmd = new EvictAllCommand(ByteString.fromString(cache.getName()));\n-\t\t\tfinal RpcOptions options = rpcManager.getDefaultRpcOptions(isSynchronousCache(cache));\n-\t\t\trpcManager.invokeRemotely(null, cmd, options);\n+\t\t\tfinal RpcOptions options = isSynchronousCache(cache) ? rpcManager.getSyncRpcOptions() :\n+\t\t\t\t\tnew RpcOptions(DeliverOrder.PER_SENDER, cache.getCacheConfiguration().clustering().remoteTimeout(), TimeUnit.MILLISECONDS);", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MzU2MQ==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379163561", "bodyText": "I think we should do that if the number of uses increased. At the moment, it's only used twice throughout the codebase AFAICT.", "author": "ryanemerson", "createdAt": "2020-02-13T22:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0OTQ5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTEyMw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379051123", "body": "nitpick: no idea why this line has the timeout hardcoded... \r\ncan it be removed and use `rpcManager.getSyncRpcOptions()` below?", "bodyText": "nitpick: no idea why this line has the timeout hardcoded...\ncan it be removed and use rpcManager.getSyncRpcOptions() below?", "bodyHTML": "<p dir=\"auto\">nitpick: no idea why this line has the timeout hardcoded...<br>\ncan it be removed and use <code>rpcManager.getSyncRpcOptions()</code> below?</p>", "author": "pruivo", "createdAt": "2020-02-13T18:48:43Z", "path": "query/src/main/java/org/infinispan/query/clustered/ClusteredQueryInvoker.java", "diffHunk": "@@ -46,7 +47,7 @@\n       this.asyncExecutor = asyncExecutor;\n       this.rpcManager = cache.getRpcManager();\n       this.myAddress = rpcManager.getAddress();\n-      this.rpcOptions = rpcManager.getRpcOptionsBuilder(ResponseMode.SYNCHRONOUS).timeout(10000, TimeUnit.MILLISECONDS).build();\n+      this.rpcOptions = new RpcOptions(DeliverOrder.NONE, 10000, TimeUnit.MILLISECONDS);", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1ODM5OQ==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379158399", "bodyText": "Hmm I'm not sure either. @gustavonalle Any idea if this would have a detrimental effect?", "author": "ryanemerson", "createdAt": "2020-02-13T22:36:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTEyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQzNjQxNA==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379436414", "bodyText": "This will be configurable soon, don't worry about it", "author": "gustavonalle", "createdAt": "2020-02-14T13:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MjQ0Mw==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379052443", "body": "you are ignoring the `sync` parameter.\r\nThe `recipients` can be replaced with a single `Address` (it doesn't change since it is assigned in the constructor)", "bodyText": "you are ignoring the sync parameter.\nThe recipients can be replaced with a single Address (it doesn't change since it is assigned in the constructor)", "bodyHTML": "<p dir=\"auto\">you are ignoring the <code>sync</code> parameter.<br>\nThe <code>recipients</code> can be replaced with a single <code>Address</code> (it doesn't change since it is assigned in the constructor)</p>", "author": "pruivo", "createdAt": "2020-02-13T18:51:15Z", "path": "query/src/main/java/org/infinispan/query/indexmanager/RemoteIndexingBackend.java", "diffHunk": "@@ -132,7 +134,8 @@ private void waitForReplacementBackend() {\n    }\n \n    private void sendCommand(ReplicableCommand command, List<LuceneWork> workList, boolean sync) {\n-      rpcManager.invokeRemotely(recipients, command, rpcManager.getDefaultRpcOptions(sync));\n+      CompletionStages.join(rpcManager.invokeCommand(recipients, command, VoidResponseCollector.ignoreLeavers(),", "originalCommit": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "url": "https://github.com/infinispan/infinispan/commit/3c0b4e962ce25e38578515bd5498ab4d106098ab", "message": "ISPN-11333 Remove deprecated RpcManager methods", "committedDate": "2020-02-13T23:25:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyODg2MQ==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379328861", "body": "How I did I miss this before!?\r\nyou shouldn't do that. `invokeCommandOnAll()` as it is always sync, i.e. it waits for a response.\r\nyou need to use `sendToAll()` for async. ", "bodyText": "How I did I miss this before!?\nyou shouldn't do that. invokeCommandOnAll() as it is always sync, i.e. it waits for a response.\nyou need to use sendToAll() for async.", "bodyHTML": "<p dir=\"auto\">How I did I miss this before!?<br>\nyou shouldn't do that. <code>invokeCommandOnAll()</code> as it is always sync, i.e. it waits for a response.<br>\nyou need to use <code>sendToAll()</code> for async.</p>", "author": "pruivo", "createdAt": "2020-02-14T09:31:08Z", "path": "hibernate/cache-commons/src/main/java/org/infinispan/hibernate/cache/commons/util/Caches.java", "diffHunk": "@@ -223,10 +226,18 @@ public static AdvancedCache failSilentReadCache(AdvancedCache cache) {\n \t */\n \tpublic static void broadcastEvictAll(AdvancedCache cache) {\n \t\tfinal RpcManager rpcManager = cache.getRpcManager();\n-\t\tif ( rpcManager != null ) {\n+\t\tif (rpcManager != null) {\n \t\t\tfinal EvictAllCommand cmd = new EvictAllCommand(ByteString.fromString(cache.getName()));\n-\t\t\tfinal RpcOptions options = rpcManager.getDefaultRpcOptions(isSynchronousCache(cache));\n-\t\t\trpcManager.invokeRemotely(null, cmd, options);\n+\n+\t\t\tfinal RpcOptions options;\n+\t\t\tif (isSynchronousCache(cache)) {\n+\t\t\t\toptions = rpcManager.getSyncRpcOptions();\n+\t\t\t} else {\n+\t\t\t\tlong timeout = cache.getCacheConfiguration().clustering().remoteTimeout();\n+\t\t\t\toptions = new RpcOptions(DeliverOrder.PER_SENDER, timeout, TimeUnit.MILLISECONDS);\n+\t\t\t}\n+\n+\t\t\trpcManager.blocking(rpcManager.invokeCommandOnAll(cmd, VoidResponseCollector.validOnly(), options));", "originalCommit": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyOTI1MA==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379329250", "body": "`DeliverOrder.PER_SENDER`! \r\n`rpcManager.getDefaultRpcOptions(sync)` with `sync=false` uses `PER_SENDER` instead of `NONE`.", "bodyText": "DeliverOrder.PER_SENDER!\nrpcManager.getDefaultRpcOptions(sync) with sync=false uses PER_SENDER instead of NONE.", "bodyHTML": "<p dir=\"auto\"><code>DeliverOrder.PER_SENDER</code>!<br>\n<code>rpcManager.getDefaultRpcOptions(sync)</code> with <code>sync=false</code> uses <code>PER_SENDER</code> instead of <code>NONE</code>.</p>", "author": "pruivo", "createdAt": "2020-02-14T09:31:55Z", "path": "query/src/main/java/org/infinispan/query/indexmanager/RemoteIndexingBackend.java", "diffHunk": "@@ -132,7 +134,13 @@ private void waitForReplacementBackend() {\n    }\n \n    private void sendCommand(ReplicableCommand command, List<LuceneWork> workList, boolean sync) {\n-      rpcManager.invokeRemotely(recipients, command, rpcManager.getDefaultRpcOptions(sync));\n+      if (sync) {\n+         CompletionStage<Void> completionStage = rpcManager.invokeCommand(recipient, command, VoidResponseCollector.ignoreLeavers(),\n+               rpcManager.getSyncRpcOptions());\n+         rpcManager.blocking(completionStage);\n+      } else {\n+         rpcManager.sendTo(recipient, command, DeliverOrder.NONE);", "originalCommit": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyOTczOA==", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379329738", "body": "`DeliverOrder.PER_SENDER`", "bodyText": "DeliverOrder.PER_SENDER", "bodyHTML": "<p dir=\"auto\"><code>DeliverOrder.PER_SENDER</code></p>", "author": "pruivo", "createdAt": "2020-02-14T09:33:00Z", "path": "query/src/test/java/org/infinispan/query/backend/AsyncBackendTest.java", "diffHunk": "@@ -122,9 +122,12 @@ private void calledIndexAsynchronously(Transport transport, String indexName) th\n \n    private void assertIndexCall(Transport transport, String indexName, boolean sync) throws Exception {\n       ArgumentCaptor<IndexUpdateCommand> argument = ArgumentCaptor.forClass(IndexUpdateCommand.class);\n-      verify(transport, atLeastOnce()).invokeRemotelyAsync(anyCollection(), argument.capture(),\n-                                                           eq(sync ? ResponseMode.SYNCHRONOUS : ResponseMode.ASYNCHRONOUS),\n-                                                           anyLong(), any(), any(), anyBoolean());\n+      if (sync) {\n+         verify(transport, atLeastOnce()).invokeCommand(any(Address.class), argument.capture(), any(VoidResponseCollector.class),\n+               eq(DeliverOrder.NONE), anyLong(), any());\n+      } else {\n+         verify(transport, atLeastOnce()).sendTo(any(Address.class), argument.capture(), eq(DeliverOrder.NONE));", "originalCommit": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46dce44e6749a95d18eed23c9d89af491b3e3682", "url": "https://github.com/infinispan/infinispan/commit/46dce44e6749a95d18eed23c9d89af491b3e3682", "message": "ISPN-11333 Remove deprecated RpcManager methods", "committedDate": "2020-02-14T10:49:47Z", "type": "commit"}, {"oid": "46dce44e6749a95d18eed23c9d89af491b3e3682", "url": "https://github.com/infinispan/infinispan/commit/46dce44e6749a95d18eed23c9d89af491b3e3682", "message": "ISPN-11333 Remove deprecated RpcManager methods", "committedDate": "2020-02-14T10:49:47Z", "type": "forcePushed"}]}