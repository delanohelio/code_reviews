{"pr_number": 4635, "pr_title": "DB-10734 expose entire row history to foreign key child interceptor", "pr_author": "hatyo", "pr_createdAt": "2020-11-17T12:07:59Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4635", "timeline": [{"oid": "db358110d45b127a42b03a23413c1d927c89fc14", "url": "https://github.com/splicemachine/spliceengine/commit/db358110d45b127a42b03a23413c1d927c89fc14", "message": "DB-10734 expose entire row history to foreign key child interceptor.", "committedDate": "2020-11-17T12:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3ODk4MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525178981", "body": "I don't like this long pause here. Without the pause I think most of the times the next insert will happen before we have a chance to remove the rollback (specially if we have everything set up, the connection, prepared statement, etc), so I'd rather do that than introduce 30 more seconds of runtime on ITs", "bodyText": "I don't like this long pause here. Without the pause I think most of the times the next insert will happen before we have a chance to remove the rollback (specially if we have everything set up, the connection, prepared statement, etc), so I'd rather do that than introduce 30 more seconds of runtime on ITs", "bodyHTML": "<p dir=\"auto\">I don't like this long pause here. Without the pause I think most of the times the next insert will happen before we have a chance to remove the rollback (specially if we have everything set up, the connection, prepared statement, etc), so I'd rather do that than introduce 30 more seconds of runtime on ITs</p>", "author": "dgomezferro", "createdAt": "2020-11-17T14:04:55Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,36 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);\n+\n+            try (Statement statement = c.createStatement()) {\n+                statement.executeUpdate(\"update P set col1 = 42\");\n+            }\n+            Thread.sleep(30 * 1000);", "originalCommit": "db358110d45b127a42b03a23413c1d927c89fc14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzOTMyOA==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525239328", "bodyText": "done.", "author": "hatyo", "createdAt": "2020-11-17T15:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3ODk4MQ=="}], "type": "inlineReview"}, {"oid": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "url": "https://github.com/splicemachine/spliceengine/commit/62ae0a6d55f66923f3a4135c7e56991cb4e33928", "message": "DB-10734 address comments.", "committedDate": "2020-11-17T14:46:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mjc3Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525262773", "body": "```suggestion\r\n        try(Connection c = newNoAutoCommitConnection();\r\n        Connection c2 = newNoAutoCommitConnection();\r\n        PreparedStatement ps = c2.preparedQuery(\"insert into C values (400, 'a', 1, 42)\")) {\r\n            c.setAutoCommit(false);\r\n\r\n            try (Statement statement = c.createStatement()) {\r\n                statement.executeUpdate(\"update P set col1 = 42\");\r\n            }\r\n            c.rollback();\r\n            \r\n            ps.executeUpdate();\r\n            c2.commit();\r\n        }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try(Connection c = newNoAutoCommitConnection()) {\n          \n          \n            \n                        c.setAutoCommit(false);\n          \n          \n            \n            \n          \n          \n            \n                        try (Statement statement = c.createStatement()) {\n          \n          \n            \n                            statement.executeUpdate(\"update P set col1 = 42\");\n          \n          \n            \n                        }\n          \n          \n            \n                        c.rollback();\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    try(Connection conn = newNoAutoCommitConnection()) {\n          \n          \n            \n                        try(Statement s = conn.createStatement()) {\n          \n          \n            \n                            s.executeUpdate(\"insert into C values (400, 'a', 1, 42)\"); // should not fail\n          \n          \n            \n                        }\n          \n          \n            \n                        conn.commit();\n          \n          \n            \n                    }\n          \n          \n            \n                    try(Connection c = newNoAutoCommitConnection();\n          \n          \n            \n                    Connection c2 = newNoAutoCommitConnection();\n          \n          \n            \n                    PreparedStatement ps = c2.preparedQuery(\"insert into C values (400, 'a', 1, 42)\")) {\n          \n          \n            \n                        c.setAutoCommit(false);\n          \n          \n            \n            \n          \n          \n            \n                        try (Statement statement = c.createStatement()) {\n          \n          \n            \n                            statement.executeUpdate(\"update P set col1 = 42\");\n          \n          \n            \n                        }\n          \n          \n            \n                        c.rollback();\n          \n          \n            \n                        \n          \n          \n            \n                        ps.executeUpdate();\n          \n          \n            \n                        c2.commit();\n          \n          \n            \n                    }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"722\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">try</span>(<span class=\"pl-smi\">Connection</span> c <span class=\"pl-k\">=</span> newNoAutoCommitConnection()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"723\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            c<span class=\"pl-k\">.</span>setAutoCommit(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"724\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"725\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Statement</span> statement <span class=\"pl-k\">=</span> c<span class=\"pl-k\">.</span>createStatement()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"726\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                statement<span class=\"pl-k\">.</span>executeUpdate(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>update P set col1 = 42<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"727\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"728\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            c<span class=\"pl-k\">.</span>rollback();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"729\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"730\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"731\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">try</span>(<span class=\"pl-smi\">Connection</span> conn <span class=\"pl-k\">=</span> newNoAutoCommitConnection()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"732\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">try</span>(<span class=\"pl-smi\">Statement</span> s <span class=\"pl-k\">=</span> conn<span class=\"pl-k\">.</span>createStatement()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"733\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                s<span class=\"pl-k\">.</span>executeUpdate(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>insert into C values (400, 'a', 1, 42)<span class=\"pl-pds\">\"</span></span>); <span class=\"pl-c\"><span class=\"pl-c\">//</span> should not fail</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"734\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"735\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            conn<span class=\"pl-k\">.</span>commit();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"736\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"722\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">try</span>(<span class=\"pl-smi\">Connection</span> c <span class=\"pl-k\">=</span> newNoAutoCommitConnection();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"723\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Connection</span> c2 <span class=\"pl-k\">=</span> newNoAutoCommitConnection();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"724\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">PreparedStatement</span> ps <span class=\"pl-k\">=</span> c2<span class=\"pl-k\">.</span>preparedQuery(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>insert into C values (400, 'a', 1, 42)<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"725\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            c<span class=\"pl-k\">.</span>setAutoCommit(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"726\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"727\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Statement</span> statement <span class=\"pl-k\">=</span> c<span class=\"pl-k\">.</span>createStatement()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"728\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                statement<span class=\"pl-k\">.</span>executeUpdate(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>update P set col1 = 42<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"729\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"730\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            c<span class=\"pl-k\">.</span>rollback();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"731\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"732\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            ps<span class=\"pl-k\">.</span>executeUpdate();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"733\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            c2<span class=\"pl-k\">.</span>commit();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"734\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "dgomezferro", "createdAt": "2020-11-17T15:41:40Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,35 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);\n+\n+            try (Statement statement = c.createStatement()) {\n+                statement.executeUpdate(\"update P set col1 = 42\");\n+            }\n+            c.rollback();\n+        }\n+\n+        try(Connection conn = newNoAutoCommitConnection()) {\n+            try(Statement s = conn.createStatement()) {\n+                s.executeUpdate(\"insert into C values (400, 'a', 1, 42)\"); // should not fail\n+            }\n+            conn.commit();\n+        }", "originalCommit": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mzg2OA==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525263868", "bodyText": "I think something like this would be better to reduce the window of time between the rollback and the update, but as it is it looks fine to me.", "author": "dgomezferro", "createdAt": "2020-11-17T15:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mjc3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI3NDg1NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525274855", "body": "setAutoCommit(false) is redundant", "bodyText": "setAutoCommit(false) is redundant", "bodyHTML": "<p dir=\"auto\">setAutoCommit(false) is redundant</p>", "author": "arnaud-splice", "createdAt": "2020-11-17T15:56:09Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,35 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);", "originalCommit": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}