{"pr_number": 14372, "pr_title": "[FLINK-19259][Kinesis] Remove references to allow classloader unloading", "pr_author": "rmetzger", "pr_createdAt": "2020-12-12T19:13:12Z", "pr_url": "https://github.com/apache/flink/pull/14372", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0MzUwMA==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542643500", "body": "revert", "bodyText": "revert", "bodyHTML": "<p dir=\"auto\">revert</p>", "author": "zentol", "createdAt": "2020-12-14T18:54:53Z", "path": "flink-core/src/main/java/org/apache/flink/api/common/functions/RuntimeContext.java", "diffHunk": "@@ -128,12 +129,11 @@\n \t *\n \t * <p>The release hook is executed just before the user code class loader is being released.\n \t * Registration only happens if no hook has been registered under this name already.\n-\t *", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0NDk2MA==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542644960", "body": "~~Shouldn't we be able to use `getClass().getClassLoader()`? Then we wouldn't have to modify the `RuntimeContext` API.~~", "bodyText": "Shouldn't we be able to use getClass().getClassLoader()? Then we wouldn't have to modify the RuntimeContext API.", "bodyHTML": "<p dir=\"auto\"><del>Shouldn't we be able to use <code>getClass().getClassLoader()</code>? Then we wouldn't have to modify the <code>RuntimeContext</code> API.</del></p>", "author": "zentol", "createdAt": "2020-12-14T18:56:07Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2Njc1Mg==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542666752", "bodyText": "Ignore my previous suggestion; we shouldn't do that on the off-chance that the connector is loaded via /lib.\nCould we use RuntimeContext#getUserCodeClassLoader instead?", "author": "zentol", "createdAt": "2020-12-14T19:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0NDk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMTg5Nw==", "url": "https://github.com/apache/flink/pull/14372#discussion_r544221897", "bodyText": "Good idea! That works.", "author": "rmetzger", "createdAt": "2020-12-16T11:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0NDk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0ODkzMA==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542648930", "body": "This should be the key change necessary to ensure the ClassLoader can be cleaned up.\r\nWe shouldn't have to touch the FileAgeManager#instance reference; so long as no thread has references to them we should be good.", "bodyText": "This should be the key change necessary to ensure the ClassLoader can be cleaned up.\nWe shouldn't have to touch the FileAgeManager#instance reference; so long as no thread has references to them we should be good.", "bodyHTML": "<p dir=\"auto\">This should be the key change necessary to ensure the ClassLoader can be cleaned up.<br>\nWe shouldn't have to touch the FileAgeManager#instance reference; so long as no thread has references to them we should be good.</p>", "author": "zentol", "createdAt": "2020-12-14T18:59:07Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);\n+\t\t\tField instanceField = fileAgeManagerClazz.getDeclaredField(\"instance\");\n+\t\t\tinstanceField.setAccessible(true);\n+\n+\t\t\t// unset (static final) field FileAgeManager.instance\n+\t\t\tField modifiersField = Field.class.getDeclaredField(\"modifiers\");\n+\t\t\tmodifiersField.setAccessible(true);\n+\t\t\tmodifiersField.setInt(instanceField, instanceField.getModifiers() & ~Modifier.FINAL);\n+\t\t\tObject fileAgeManager = instanceField.get(null);\n+\t\t\tinstanceField.set(null, null);\n+\n+\t\t\t// shutdown thread pool", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMjA4NA==", "url": "https://github.com/apache/flink/pull/14372#discussion_r544222084", "bodyText": "You are right. Only the thread pool is the problem.", "author": "rmetzger", "createdAt": "2020-12-16T11:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0ODkzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1MjY1Nw==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542652657", "body": "Why are we clearing this singleton?", "bodyText": "Why are we clearing this singleton?", "bodyHTML": "<p dir=\"auto\">Why are we clearing this singleton?</p>", "author": "zentol", "createdAt": "2020-12-14T19:01:52Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);\n+\t\t\tField instanceField = fileAgeManagerClazz.getDeclaredField(\"instance\");\n+\t\t\tinstanceField.setAccessible(true);\n+\n+\t\t\t// unset (static final) field FileAgeManager.instance\n+\t\t\tField modifiersField = Field.class.getDeclaredField(\"modifiers\");\n+\t\t\tmodifiersField.setAccessible(true);\n+\t\t\tmodifiersField.setInt(instanceField, instanceField.getModifiers() & ~Modifier.FINAL);\n+\t\t\tObject fileAgeManager = instanceField.get(null);\n+\t\t\tinstanceField.set(null, null);\n+\n+\t\t\t// shutdown thread pool\n+\t\t\tField executorField = fileAgeManagerClazz.getDeclaredField(\"executorService\");\n+\t\t\texecutorField.setAccessible(true);\n+\t\t\tExecutorService executorService = (ExecutorService) executorField.get(fileAgeManager);\n+\t\t\texecutorService.shutdown();\n+\t\t\texecutorService.awaitTermination(1, TimeUnit.MINUTES);\n+\n+\t\t\t// Remove InstanceProfileCredentialsProvider\n+\t\t\tClass<?> credProviderClazz = Class.forName(\"com.amazonaws.auth.InstanceProfileCredentialsProvider\", true, classLoader);", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMjIwNg==", "url": "https://github.com/apache/flink/pull/14372#discussion_r544222206", "bodyText": "That's again not needed. I'll remove that.", "author": "rmetzger", "createdAt": "2020-12-16T11:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1MjY1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1NzYwOA==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542657608", "body": "It would be good to add a version reference for which `aws-java-sdk-core` was used.", "bodyText": "It would be good to add a version reference for which aws-java-sdk-core was used.", "bodyHTML": "<p dir=\"auto\">It would be good to add a version reference for which <code>aws-java-sdk-core</code> was used.</p>", "author": "zentol", "createdAt": "2020-12-14T19:06:28Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1ODYyMg==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542658622", "body": "seems outdated?", "bodyText": "seems outdated?", "bodyHTML": "<p dir=\"auto\">seems outdated?</p>", "author": "zentol", "createdAt": "2020-12-14T19:07:23Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1ODcxNw==", "url": "https://github.com/apache/flink/pull/14372#discussion_r542658717", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// unregister admin mbean", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">\t\t</span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> unregister admin mbean</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "zentol", "createdAt": "2020-12-14T19:07:28Z", "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean", "originalCommit": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "url": "https://github.com/apache/flink/commit/f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "message": "[FLINK-19259][kinesis] Remove references to allow classloader unloading", "committedDate": "2020-12-16T11:34:10Z", "type": "commit"}, {"oid": "f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "url": "https://github.com/apache/flink/commit/f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "message": "[FLINK-19259][kinesis] Remove references to allow classloader unloading", "committedDate": "2020-12-16T11:34:10Z", "type": "forcePushed"}]}