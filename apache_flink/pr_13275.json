{"pr_number": 13275, "pr_title": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "pr_author": "SteNicholas", "pr_createdAt": "2020-08-28T07:57:37Z", "pr_url": "https://github.com/apache/flink/pull/13275", "timeline": [{"oid": "8534c89725bb874f6c6126bbe6db4e9ccf64a820", "url": "https://github.com/apache/flink/commit/8534c89725bb874f6c6126bbe6db4e9ccf64a820", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-08-28T07:41:14Z", "type": "commit"}, {"oid": "1f9eaf6163562083066c4e6a7d22b7f4c6ee65e5", "url": "https://github.com/apache/flink/commit/1f9eaf6163562083066c4e6a7d22b7f4c6ee65e5", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-02T13:12:14Z", "type": "commit"}, {"oid": "1f9eaf6163562083066c4e6a7d22b7f4c6ee65e5", "url": "https://github.com/apache/flink/commit/1f9eaf6163562083066c4e6a7d22b7f4c6ee65e5", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-02T13:12:14Z", "type": "forcePushed"}, {"oid": "74ac3764e017be069dd2eae07e893a0c8cad40e4", "url": "https://github.com/apache/flink/commit/74ac3764e017be069dd2eae07e893a0c8cad40e4", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-08T02:04:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMjAwMA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r484722000", "body": "1.`HBaseTestBase` will pull up a HBase cluster which is a heavy action.\r\nwe can move this test to `HBaseConnectorITCase` avoid pulling up the cluster twice.", "bodyText": "1.HBaseTestBase will pull up a HBase cluster which is a heavy action.\nwe can move this test to HBaseConnectorITCase avoid pulling up the cluster twice.", "bodyHTML": "<p dir=\"auto\">1.<code>HBaseTestBase</code> will pull up a HBase cluster which is a heavy action.<br>\nwe can move this test to <code>HBaseConnectorITCase</code> avoid pulling up the cluster twice.</p>", "author": "leonardBang", "createdAt": "2020-09-08T07:54:07Z", "path": "flink-connectors/flink-connector-hbase/src/test/java/org/apache/flink/connector/hbase/HBaseTableInputFormatTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.connector.hbase;\n+\n+import org.apache.flink.connector.hbase.source.HBaseRowInputFormat;\n+import org.apache.flink.connector.hbase.source.TableInputSplit;\n+import org.apache.flink.connector.hbase.util.HBaseTableSchema;\n+import org.apache.flink.connector.hbase.util.HBaseTestBase;\n+import org.apache.flink.connector.hbase.util.PlannerType;\n+\n+import org.apache.hadoop.hbase.TableName;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test case for {@link HBaseRowInputFormat} table input format.\n+ */\n+public class HBaseTableInputFormatTest extends HBaseTestBase {", "originalCommit": "74ac3764e017be069dd2eae07e893a0c8cad40e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMjUwNA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r484722504", "body": "2.`HBaseRowInputFormat` is used by legacy connector, `HBaseRowDataInputFormat` is used by new connector,\r\nwe can cover them in `HBaseConnectorITCase` via parameterized parameter 'isLegacyConnector' easily", "bodyText": "2.HBaseRowInputFormat is used by legacy connector, HBaseRowDataInputFormat is used by new connector,\nwe can cover them in HBaseConnectorITCase via parameterized parameter 'isLegacyConnector' easily", "bodyHTML": "<p dir=\"auto\">2.<code>HBaseRowInputFormat</code> is used by legacy connector, <code>HBaseRowDataInputFormat</code> is used by new connector,<br>\nwe can cover them in <code>HBaseConnectorITCase</code> via parameterized parameter 'isLegacyConnector' easily</p>", "author": "leonardBang", "createdAt": "2020-09-08T07:54:58Z", "path": "flink-connectors/flink-connector-hbase/src/test/java/org/apache/flink/connector/hbase/HBaseTableInputFormatTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.connector.hbase;\n+\n+import org.apache.flink.connector.hbase.source.HBaseRowInputFormat;\n+import org.apache.flink.connector.hbase.source.TableInputSplit;\n+import org.apache.flink.connector.hbase.util.HBaseTableSchema;\n+import org.apache.flink.connector.hbase.util.HBaseTestBase;\n+import org.apache.flink.connector.hbase.util.PlannerType;\n+\n+import org.apache.hadoop.hbase.TableName;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test case for {@link HBaseRowInputFormat} table input format.\n+ */\n+public class HBaseTableInputFormatTest extends HBaseTestBase {\n+\n+\tprotected PlannerType planner() {\n+\t\treturn PlannerType.BLINK_PLANNER;\n+\t}\n+\n+\t@Test\n+\tpublic void testOpenClose() throws IOException {\n+\t\tHBaseTableSchema tableSchema = new HBaseTableSchema();\n+\t\ttableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n+\t\tHBaseRowInputFormat inputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);", "originalCommit": "74ac3764e017be069dd2eae07e893a0c8cad40e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "27d9c90c0393f1febaec84f28e850867eed6222d", "url": "https://github.com/apache/flink/commit/27d9c90c0393f1febaec84f28e850867eed6222d", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-09T01:12:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMTM2NQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485331365", "body": "We don't need to declare it `public`.", "bodyText": "We don't need to declare it public.", "bodyHTML": "<p dir=\"auto\">We don't need to declare it <code>public</code>.</p>", "author": "wuchong", "createdAt": "2020-09-09T04:33:05Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/TableInputSplit.java", "diffHunk": "@@ -26,7 +26,7 @@\n  * references to row below refer to the key of the row.\n  */\n @Internal\n-class TableInputSplit extends LocatableInputSplit {\n+public class TableInputSplit extends LocatableInputSplit {", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MTg4Mg==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490071882", "bodyText": "@wuchong I have already removed this declaration.", "author": "SteNicholas", "createdAt": "2020-09-17T08:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMTM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjE3MQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485332171", "body": "This is never closed ?", "bodyText": "This is never closed ?", "bodyHTML": "<p dir=\"auto\">This is never closed ?</p>", "author": "wuchong", "createdAt": "2020-09-09T04:36:16Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -186,24 +193,22 @@ public void close() throws IOException {\n \t\t\tif (resultScanner != null) {\n \t\t\t\tresultScanner.close();\n \t\t\t}\n-\t\t} finally {\n-\t\t\tresultScanner = null;\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void closeInputFormat() throws IOException {\n-\t\ttry {\n \t\t\tif (table != null) {\n \t\t\t\ttable.close();\n \t\t\t}\n+\t\t\tif (connection != null) {\n+\t\t\t\tconnection.close();\n+\t\t\t}\n \t\t} finally {\n+\t\t\tresultScanner = null;\n \t\t\ttable = null;\n+\t\t\tconnection = null;\n \t\t}\n \t}\n \n \t@Override\n \tpublic TableInputSplit[] createInputSplits(final int minNumSplits) throws IOException {\n+\t\tinitTable();", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNzY4NA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485337684", "bodyText": "This is never closed ?\n\n@wuchong This is closed when calling close method. I thought that in the lifecycle, createInputSplits would be called before close. Therefore, I didn't close the connection and table.", "author": "SteNicholas", "createdAt": "2020-09-09T04:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM1MDIxNw==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485350217", "bodyText": "I think it is called on the JobMaster, so we should use a local connection and close the connection in the method.", "author": "wuchong", "createdAt": "2020-09-09T05:39:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA2OTUwNQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490069505", "bodyText": "@wuchong I thought that table isn't close in this method, therefore the connection should not be closed in this method.", "author": "SteNicholas", "createdAt": "2020-09-17T08:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzMjE3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2MjYwOQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485362609", "body": "I believe this (and below) exception messages are not correct anymore.", "bodyText": "I believe this (and below) exception messages are not correct anymore.", "bodyHTML": "<p dir=\"auto\">I believe this (and below) exception messages are not correct anymore.</p>", "author": "rmetzger", "createdAt": "2020-09-09T06:16:21Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -94,25 +102,24 @@ public AbstractTableInputFormat(org.apache.hadoop.conf.Configuration hConf) {\n \t */\n \tprotected abstract T mapResultToOutType(Result r);\n \n-\t/**\n-\t * Creates a {@link Scan} object and opens the {@link HTable} connection.\n-\t *\n-\t * <p>These are opened here because they are needed in the createInputSplits\n-\t * which is called before the openInputFormat method.\n-\t *\n-\t * <p>The connection is opened in this method and closed in {@link #closeInputFormat()}.\n-\t *\n-\t * @param parameters The configuration that is to be used\n-\t * @see Configuration\n-\t */\n-\tpublic abstract void configure(Configuration parameters);\n+\t@Override\n+\tpublic void configure(Configuration parameters) {\n+\t}\n \n \tprotected org.apache.hadoop.conf.Configuration getHadoopConfiguration() {\n \t\treturn HBaseConfigurationUtil.deserializeConfiguration(serializedConfig, HBaseConfigurationUtil.getHBaseConfiguration());\n \t}\n \n+\t/**\n+\t * Creates a {@link Scan} object and opens the {@link HTable} connection.\n+\t * The connection is opened in this method and closed in {@link #close()}.\n+\t *\n+\t * @param split The split to be opened.\n+\t * @throws IOException Thrown, if the spit could not be opened due to an I/O problem.\n+\t */\n \t@Override\n \tpublic void open(TableInputSplit split) throws IOException {\n+\t\tinitTable();\n \t\tif (table == null) {\n \t\t\tthrow new IOException(\"The HBase table has not been opened! \" +\n \t\t\t\t\"This needs to be done in configure().\");", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2MzI0NA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485363244", "body": "Revisit exception message.", "bodyText": "Revisit exception message.", "bodyHTML": "<p dir=\"auto\">Revisit exception message.</p>", "author": "rmetzger", "createdAt": "2020-09-09T06:18:08Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -186,24 +193,22 @@ public void close() throws IOException {\n \t\t\tif (resultScanner != null) {\n \t\t\t\tresultScanner.close();\n \t\t\t}\n-\t\t} finally {\n-\t\t\tresultScanner = null;\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void closeInputFormat() throws IOException {\n-\t\ttry {\n \t\t\tif (table != null) {\n \t\t\t\ttable.close();\n \t\t\t}\n+\t\t\tif (connection != null) {\n+\t\t\t\tconnection.close();\n+\t\t\t}\n \t\t} finally {\n+\t\t\tresultScanner = null;\n \t\t\ttable = null;\n+\t\t\tconnection = null;\n \t\t}\n \t}\n \n \t@Override\n \tpublic TableInputSplit[] createInputSplits(final int minNumSplits) throws IOException {\n+\t\tinitTable();\n \t\tif (table == null) {\n \t\t\tthrow new IOException(\"The HBase table has not been opened! \" +\n \t\t\t\t\"This needs to be done in configure().\");", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2NjUxOQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485366519", "body": "We will leak the connection if table.close() or resultScanner.close() fails with an exception.\r\nI believe the proper way would be to wrap each close in a separate try block, and catch and log the error.", "bodyText": "We will leak the connection if table.close() or resultScanner.close() fails with an exception.\nI believe the proper way would be to wrap each close in a separate try block, and catch and log the error.", "bodyHTML": "<p dir=\"auto\">We will leak the connection if table.close() or resultScanner.close() fails with an exception.<br>\nI believe the proper way would be to wrap each close in a separate try block, and catch and log the error.</p>", "author": "rmetzger", "createdAt": "2020-09-09T06:25:53Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -186,24 +193,22 @@ public void close() throws IOException {\n \t\t\tif (resultScanner != null) {\n \t\t\t\tresultScanner.close();\n \t\t\t}\n-\t\t} finally {\n-\t\t\tresultScanner = null;\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void closeInputFormat() throws IOException {\n-\t\ttry {\n \t\t\tif (table != null) {\n \t\t\t\ttable.close();\n \t\t\t}\n+\t\t\tif (connection != null) {\n+\t\t\t\tconnection.close();\n+\t\t\t}", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3Mzg0NA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490073844", "bodyText": "@rmetzger You are right, but resultScanner.close() doesn't throw exception. Therefore, I just add the close of the connection into catch block.", "author": "SteNicholas", "createdAt": "2020-09-17T08:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2NjUxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2Nzk3Mw==", "url": "https://github.com/apache/flink/pull/13275#discussion_r485367973", "body": "If you make this method `throws IOException`, you don't need to wrap the IOExceptions in HBaseRowDataInputFormat.connectToTable() into RuntimeExceptions.\r\n\r\nThrowing an IOException is not a problem, because initTable is called in open(); which throws an IOException as well.", "bodyText": "If you make this method throws IOException, you don't need to wrap the IOExceptions in HBaseRowDataInputFormat.connectToTable() into RuntimeExceptions.\nThrowing an IOException is not a problem, because initTable is called in open(); which throws an IOException as well.", "bodyHTML": "<p dir=\"auto\">If you make this method <code>throws IOException</code>, you don't need to wrap the IOExceptions in HBaseRowDataInputFormat.connectToTable() into RuntimeExceptions.</p>\n<p dir=\"auto\">Throwing an IOException is not a problem, because initTable is called in open(); which throws an IOException as well.</p>", "author": "rmetzger", "createdAt": "2020-09-09T06:29:27Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -68,6 +71,11 @@ public AbstractTableInputFormat(org.apache.hadoop.conf.Configuration hConf) {\n \t\tserializedConfig = HBaseConfigurationUtil.serializeConfiguration(hConf);\n \t}\n \n+\t/**\n+\t * Creates a {@link Scan} object and opens the {@link HTable} connection to initialize the HBase table.\n+\t */\n+\tprotected abstract void initTable();", "originalCommit": "27d9c90c0393f1febaec84f28e850867eed6222d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3MjY2NQ==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490072665", "bodyText": "@rmetzger Good idea. I have followed up with your point to throws IOException for initTable().", "author": "SteNicholas", "createdAt": "2020-09-17T08:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2Nzk3Mw=="}], "type": "inlineReview"}, {"oid": "de2e4b8c2d1c6e7701c34b47169247da3d89efb5", "url": "https://github.com/apache/flink/commit/de2e4b8c2d1c6e7701c34b47169247da3d89efb5", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-17T08:37:27Z", "type": "commit"}, {"oid": "de2e4b8c2d1c6e7701c34b47169247da3d89efb5", "url": "https://github.com/apache/flink/commit/de2e4b8c2d1c6e7701c34b47169247da3d89efb5", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-17T08:37:27Z", "type": "forcePushed"}, {"oid": "eed5b15d8d10f1c1228e39650bb844385d7a2283", "url": "https://github.com/apache/flink/commit/eed5b15d8d10f1c1228e39650bb844385d7a2283", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-17T11:43:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgxNzA4NA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490817084", "body": "nit:\r\n\r\n```suggestion\r\n\t\t} finally {\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}  finally {\n          \n          \n            \n            \t\t} finally {", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t} <span class=\"x x-first x-last\"> </span><span class=\"pl-k\">finally</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t} <span class=\"pl-k\">finally</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wuchong", "createdAt": "2020-09-18T09:21:36Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -186,73 +188,79 @@ public void close() throws IOException {\n \t\t\tif (resultScanner != null) {\n \t\t\t\tresultScanner.close();\n \t\t\t}\n-\t\t} finally {\n+\t\t\tcloseTable();\n+\t\t}  finally {", "originalCommit": "eed5b15d8d10f1c1228e39650bb844385d7a2283", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyMTIwMA==", "url": "https://github.com/apache/flink/pull/13275#discussion_r490821200", "body": "The duplicate close looks strange to me. I think @rmetzger gave a nice idea above. You can just catch and log the error and move each close in a separate try block. You can take `org.apache.flink.connector.hbase.sink.HBaseSinkFunction#close` as an example. That will be much clean. ", "bodyText": "The duplicate close looks strange to me. I think @rmetzger gave a nice idea above. You can just catch and log the error and move each close in a separate try block. You can take org.apache.flink.connector.hbase.sink.HBaseSinkFunction#close as an example. That will be much clean.", "bodyHTML": "<p dir=\"auto\">The duplicate close looks strange to me. I think <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rmetzger/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmetzger\">@rmetzger</a> gave a nice idea above. You can just catch and log the error and move each close in a separate try block. You can take <code>org.apache.flink.connector.hbase.sink.HBaseSinkFunction#close</code> as an example. That will be much clean.</p>", "author": "wuchong", "createdAt": "2020-09-18T09:29:05Z", "path": "flink-connectors/flink-connector-hbase/src/main/java/org/apache/flink/connector/hbase/source/AbstractTableInputFormat.java", "diffHunk": "@@ -186,73 +188,79 @@ public void close() throws IOException {\n \t\t\tif (resultScanner != null) {\n \t\t\t\tresultScanner.close();\n \t\t\t}\n-\t\t} finally {\n+\t\t\tcloseTable();\n+\t\t}  finally {\n \t\t\tresultScanner = null;\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic void closeInputFormat() throws IOException {\n+\tpublic void closeTable() throws IOException {\n \t\ttry {\n \t\t\tif (table != null) {\n \t\t\t\ttable.close();\n \t\t\t}\n+\t\t\tif (connection != null) {\n+\t\t\t\tconnection.close();\n+\t\t\t}\n+\t\t} catch (IOException e) {\n+\t\t\tif (connection != null) {\n+\t\t\t\tconnection.close();\n+\t\t\t}\n+\t\t\tthrow e;", "originalCommit": "eed5b15d8d10f1c1228e39650bb844385d7a2283", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a1bd39b87efb3680010a3ba9a9fce8485411546", "url": "https://github.com/apache/flink/commit/4a1bd39b87efb3680010a3ba9a9fce8485411546", "message": "[FLINK-19064][hbase] HBaseRowDataInputFormat is leaking resources", "committedDate": "2020-09-18T10:00:44Z", "type": "commit"}]}