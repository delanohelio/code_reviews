{"pr_number": 13368, "pr_title": "[FLINK-19000] Forward initialization timestamp from Dispatcher to ExecGraph", "pr_author": "rmetzger", "pr_createdAt": "2020-09-10T06:44:11Z", "pr_url": "https://github.com/apache/flink/pull/13368", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5MDY2Nw==", "url": "https://github.com/apache/flink/pull/13368#discussion_r488590667", "body": "maybe also check that initializing <= created, to prevent the order from being messed up?", "bodyText": "maybe also check that initializing <= created, to prevent the order from being messed up?", "bodyHTML": "<p dir=\"auto\">maybe also check that initializing &lt;= created, to prevent the order from being messed up?</p>", "author": "zentol", "createdAt": "2020-09-15T11:27:18Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherTest.java", "diffHunk": "@@ -749,6 +750,26 @@ public void testOnRemovedJobGraphDoesNotCleanUpHAFiles() throws Exception {\n \t\t} catch (TimeoutException expected) {}\n \t}\n \n+\t@Test\n+\tpublic void testInitializationTimestampForwardedToExecutionGraph() throws Exception {\n+\t\tdispatcher = createAndStartDispatcher(heartbeatServices, haServices, new ExpectedJobIdJobManagerRunnerFactory(TEST_JOB_ID, createdJobManagerRunnerLatch));\n+\t\tjobMasterLeaderElectionService.isLeader(UUID.randomUUID());\n+\t\tDispatcherGateway dispatcherGateway = dispatcher.getSelfGateway(DispatcherGateway.class);\n+\n+\t\tdispatcherGateway.submitJob(jobGraph, TIMEOUT).get();\n+\n+\t\t// ensure job is running\n+\t\tCommonTestUtils.waitUntilCondition(() -> dispatcherGateway.requestJobStatus(jobGraph.getJobID(), TIMEOUT).get() == JobStatus.RUNNING,\n+\t\t\tDeadline.fromNow(Duration.of(10, ChronoUnit.SECONDS)), 5L);\n+\n+\t\tArchivedExecutionGraph result = dispatcher.requestJob(jobGraph.getJobID(), TIMEOUT).get();\n+\n+\t\t// ensure all statuses are set in the ExecutionGraph\n+\t\tassertThat(result.getStatusTimestamp(JobStatus.INITIALIZING), greaterThan(0L));", "originalCommit": "59deb5d9ae2ddf42b40ff4391d567daa8abef8db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5MjUxNw==", "url": "https://github.com/apache/flink/pull/13368#discussion_r488592517", "body": "```suggestion\r\n\t\t\tDeadline.fromNow(Duration.ofSeconds(10), 5L);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tDeadline.fromNow(Duration.of(10, ChronoUnit.SECONDS)), 5L);\n          \n          \n            \n            \t\t\tDeadline.fromNow(Duration.ofSeconds(10), 5L);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-smi\">Deadline</span><span class=\"pl-k\">.</span>fromNow(<span class=\"pl-smi\">Duration</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">of</span>(<span class=\"pl-c1\">10</span><span class=\"x x-first\">, </span><span class=\"pl-smi x\">ChronoUnit</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">SECONDS</span></span><span class=\"x x-last\">)</span>), <span class=\"pl-c1\">5L</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-smi\">Deadline</span><span class=\"pl-k\">.</span>fromNow(<span class=\"pl-smi\">Duration</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">ofSeconds</span>(<span class=\"pl-c1\">10</span>), <span class=\"pl-c1\">5L</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "zentol", "createdAt": "2020-09-15T11:30:37Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherTest.java", "diffHunk": "@@ -749,6 +750,26 @@ public void testOnRemovedJobGraphDoesNotCleanUpHAFiles() throws Exception {\n \t\t} catch (TimeoutException expected) {}\n \t}\n \n+\t@Test\n+\tpublic void testInitializationTimestampForwardedToExecutionGraph() throws Exception {\n+\t\tdispatcher = createAndStartDispatcher(heartbeatServices, haServices, new ExpectedJobIdJobManagerRunnerFactory(TEST_JOB_ID, createdJobManagerRunnerLatch));\n+\t\tjobMasterLeaderElectionService.isLeader(UUID.randomUUID());\n+\t\tDispatcherGateway dispatcherGateway = dispatcher.getSelfGateway(DispatcherGateway.class);\n+\n+\t\tdispatcherGateway.submitJob(jobGraph, TIMEOUT).get();\n+\n+\t\t// ensure job is running\n+\t\tCommonTestUtils.waitUntilCondition(() -> dispatcherGateway.requestJobStatus(jobGraph.getJobID(), TIMEOUT).get() == JobStatus.RUNNING,\n+\t\t\tDeadline.fromNow(Duration.of(10, ChronoUnit.SECONDS)), 5L);", "originalCommit": "59deb5d9ae2ddf42b40ff4391d567daa8abef8db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU5Mjg3OA==", "url": "https://github.com/apache/flink/pull/13368#discussion_r488592878", "body": "I'd move all arguments on a separate line.", "bodyText": "I'd move all arguments on a separate line.", "bodyHTML": "<p dir=\"auto\">I'd move all arguments on a separate line.</p>", "author": "zentol", "createdAt": "2020-09-15T11:31:14Z", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherTest.java", "diffHunk": "@@ -749,6 +750,26 @@ public void testOnRemovedJobGraphDoesNotCleanUpHAFiles() throws Exception {\n \t\t} catch (TimeoutException expected) {}\n \t}\n \n+\t@Test\n+\tpublic void testInitializationTimestampForwardedToExecutionGraph() throws Exception {\n+\t\tdispatcher = createAndStartDispatcher(heartbeatServices, haServices, new ExpectedJobIdJobManagerRunnerFactory(TEST_JOB_ID, createdJobManagerRunnerLatch));\n+\t\tjobMasterLeaderElectionService.isLeader(UUID.randomUUID());\n+\t\tDispatcherGateway dispatcherGateway = dispatcher.getSelfGateway(DispatcherGateway.class);\n+\n+\t\tdispatcherGateway.submitJob(jobGraph, TIMEOUT).get();\n+\n+\t\t// ensure job is running\n+\t\tCommonTestUtils.waitUntilCondition(() -> dispatcherGateway.requestJobStatus(jobGraph.getJobID(), TIMEOUT).get() == JobStatus.RUNNING,", "originalCommit": "59deb5d9ae2ddf42b40ff4391d567daa8abef8db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2283347d77ac8220df889b20a5906f02f2b1315f", "url": "https://github.com/apache/flink/commit/2283347d77ac8220df889b20a5906f02f2b1315f", "message": "Address PR comments", "committedDate": "2020-09-15T12:30:35Z", "type": "forcePushed"}, {"oid": "12967c8721b5515d55eff87cfdc4b53633b6f1a8", "url": "https://github.com/apache/flink/commit/12967c8721b5515d55eff87cfdc4b53633b6f1a8", "message": "[FLINK-19000] Forward initialization timestamp from Dispatcher to ExecutionGraph\n\nThis closes #13368", "committedDate": "2020-09-16T09:17:55Z", "type": "commit"}, {"oid": "e20229c0d5ad1cc59d51270407f4d3a2a811a144", "url": "https://github.com/apache/flink/commit/e20229c0d5ad1cc59d51270407f4d3a2a811a144", "message": "[hotfix] Consider INITIALIZING JobState also as scheduled in CliFrontend", "committedDate": "2020-09-16T09:18:06Z", "type": "commit"}, {"oid": "e20229c0d5ad1cc59d51270407f4d3a2a811a144", "url": "https://github.com/apache/flink/commit/e20229c0d5ad1cc59d51270407f4d3a2a811a144", "message": "[hotfix] Consider INITIALIZING JobState also as scheduled in CliFrontend", "committedDate": "2020-09-16T09:18:06Z", "type": "forcePushed"}]}