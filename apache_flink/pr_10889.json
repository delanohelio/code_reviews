{"pr_number": 10889, "pr_title": "[Flink-15355][plugins]Enable s3 plugins under Java 11.", "pr_author": "AHeise", "pr_createdAt": "2020-01-17T16:12:17Z", "pr_url": "https://github.com/apache/flink/pull/10889", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MzExOQ==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368873119", "body": "Shouldn't we propagate/handle some errors? ", "bodyText": "Shouldn't we propagate/handle some errors?", "bodyHTML": "<p dir=\"auto\">Shouldn't we propagate/handle some errors?</p>", "author": "pnowojski", "createdAt": "2020-01-21T08:51:42Z", "path": "flink-core/src/main/java/org/apache/flink/core/plugin/PluginLoader.java", "diffHunk": "@@ -182,5 +184,16 @@ private boolean isAllowedFlinkClass(final String name) {\n \t\tprivate boolean isAllowedFlinkResource(final String name) {\n \t\t\treturn Arrays.stream(allowedResourcePrefixes).anyMatch(name::startsWith);\n \t\t}\n+\n+\t\tstatic {\n+\t\t\tClassLoader platformLoader = null;\n+\t\t\ttry {\n+\t\t\t\tplatformLoader = (ClassLoader) ClassLoader.class\n+\t\t\t\t\t.getMethod(\"getPlatformClassLoader\")\n+\t\t\t\t\t.invoke(null);\n+\t\t\t} catch (Exception e) {\n+\t\t\t}", "originalCommit": "afa1419d99ea2bf395d623f24798b7505f0c6a45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4NzA2Ng==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368887066", "bodyText": "This will always fail on Java 8, so not sure what to handle here. I also looked into detecting the Java version and do only specific stuff, but everything is more fragile than just trying.", "author": "AHeise", "createdAt": "2020-01-21T09:21:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MzExOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4NzQ3MQ==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368887471", "bodyText": "We could make it more differentiated and just swallow NoSuchMethodException though.", "author": "AHeise", "createdAt": "2020-01-21T09:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MzExOQ=="}], "type": "inlineReview"}, {"oid": "5efc5d29f49884fe98d8d7540384463fdfda58ee", "url": "https://github.com/apache/flink/commit/5efc5d29f49884fe98d8d7540384463fdfda58ee", "message": "[FLINK-15355][plugins] PluginLoader allows access to JDK9 modules.\n\nWith Java9, classes that have moved to modules are not accessible through the bootstrap classloader anymore. The platform classloader is the equivalent to the Java8 bootstrap classloader and now used for plugins.", "committedDate": "2020-01-21T09:24:18Z", "type": "commit"}, {"oid": "cfa264bfee8bba65fa3218fa64716908f7bab371", "url": "https://github.com/apache/flink/commit/cfa264bfee8bba65fa3218fa64716908f7bab371", "message": "[FLINK-15355][s3]Plugins now use multi-release mechanism to ship jaxb for Java 9+.", "committedDate": "2020-01-21T09:24:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4ODk0MQ==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368888941", "body": "@pnowojski What do you think of the exception handling now? Do you have any reliable way to detect if we are on Java9+?", "bodyText": "@pnowojski What do you think of the exception handling now? Do you have any reliable way to detect if we are on Java9+?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pnowojski/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pnowojski\">@pnowojski</a> What do you think of the exception handling now? Do you have any reliable way to detect if we are on Java9+?</p>", "author": "AHeise", "createdAt": "2020-01-21T09:25:30Z", "path": "flink-core/src/main/java/org/apache/flink/core/plugin/PluginLoader.java", "diffHunk": "@@ -182,5 +184,20 @@ private boolean isAllowedFlinkClass(final String name) {\n \t\tprivate boolean isAllowedFlinkResource(final String name) {\n \t\t\treturn Arrays.stream(allowedResourcePrefixes).anyMatch(name::startsWith);\n \t\t}\n+\n+\t\tstatic {\n+\t\t\tClassLoader platformLoader = null;\n+\t\t\ttry {\n+\t\t\t\tplatformLoader = (ClassLoader) ClassLoader.class\n+\t\t\t\t\t.getMethod(\"getPlatformClassLoader\")\n+\t\t\t\t\t.invoke(null);\n+\t\t\t} catch (NoSuchMethodException e) {", "originalCommit": "5efc5d29f49884fe98d8d7540384463fdfda58ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg5NTYxMw==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368895613", "bodyText": "Maybe this?\nhttps://www.journaldev.com/20930/check-java-version#can-we-check-java-version-programmatically\nbut I'm also kind of fine with as it is.", "author": "pnowojski", "createdAt": "2020-01-21T09:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4ODk0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk1NTM4MA==", "url": "https://github.com/apache/flink/pull/10889#discussion_r368955380", "bodyText": "There's no good way to check for java versions on Java 8; Runtime.Version was added in Java 9.", "author": "zentol", "createdAt": "2020-01-21T11:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4ODk0MQ=="}], "type": "inlineReview"}]}