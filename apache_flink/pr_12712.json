{"pr_number": 12712, "pr_title": "[FLINK-17544][jdbc]fix close() method bug and add test cases for JdbcOutputFormat", "pr_author": "fsk119", "pr_createdAt": "2020-06-19T03:22:15Z", "pr_url": "https://github.com/apache/flink/pull/12712", "timeline": [{"oid": "539beaaef6b373b0b6a4979294a593cb9a0fb939", "url": "https://github.com/apache/flink/commit/539beaaef6b373b0b6a4979294a593cb9a0fb939", "message": "fix close() method bug and add test cases for jdbc", "committedDate": "2020-06-19T03:17:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY5MzMzNg==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442693336", "body": "Please add a comment on this:\r\n\r\n```java\r\n// FLINK-17544: There should be no NPE thrown from this method\r\n```", "bodyText": "Please add a comment on this:\n// FLINK-17544: There should be no NPE thrown from this method", "bodyHTML": "<p dir=\"auto\">Please add a comment on this:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// FLINK-17544: There should be no NPE thrown from this method\n\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> FLINK-17544: There should be no NPE thrown from this method</span></pre></div>", "author": "wuchong", "createdAt": "2020-06-19T08:00:56Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/internal/JdbcTableOutputFormatTest.java", "diffHunk": "@@ -64,6 +64,19 @@ public void setup() {\n \t\tkeyFields = new String[]{\"id\"};\n \t}\n \n+\t@Test\n+\tpublic void testUpsertFormatCloseBeforeOpen() throws Exception{\n+\t\tJdbcOptions options = JdbcOptions.builder()\n+\t\t\t.setDBUrl(getDbMetadata().getUrl())\n+\t\t\t.setTableName(OUTPUT_TABLE)\n+\t\t\t.build();\n+\t\tJdbcDmlOptions dmlOptions = JdbcDmlOptions.builder()\n+\t\t\t.withTableName(options.getTableName()).withDialect(options.getDialect())\n+\t\t\t.withFieldNames(fieldNames).withKeyFields(keyFields).build();\n+\t\tformat = new TableJdbcUpsertOutputFormat(new SimpleJdbcConnectionProvider(options), dmlOptions, JdbcExecutionOptions.defaults());\n+\t\tformat.close();", "originalCommit": "539beaaef6b373b0b6a4979294a593cb9a0fb939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMTg5MQ==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442901891", "bodyText": "Ok. I will fix it.", "author": "fsk119", "createdAt": "2020-06-19T15:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY5MzMzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNDAwOA==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442804008", "body": "Mockito is a bad practice which should be avoided as much as possible. You can \r\n\r\n```java\r\nJdbcExecutionOptions jdbcExecutionOptions = JdbcExecutionOptions.builder()\r\n\t\t\t.withBatchIntervalMs(1000_000L)\r\n\t\t\t.withBatchSize(1)\r\n\t\t\t.withMaxRetries(1)\r\n\t\t\t.build();\r\nExecutionConfig executionConfig = new ExecutionConfig();\r\n```\r\n\r\nto create them.", "bodyText": "Mockito is a bad practice which should be avoided as much as possible. You can\nJdbcExecutionOptions jdbcExecutionOptions = JdbcExecutionOptions.builder()\n\t\t\t.withBatchIntervalMs(1000_000L)\n\t\t\t.withBatchSize(1)\n\t\t\t.withMaxRetries(1)\n\t\t\t.build();\nExecutionConfig executionConfig = new ExecutionConfig();\nto create them.", "bodyHTML": "<p dir=\"auto\">Mockito is a bad practice which should be avoided as much as possible. You can</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"JdbcExecutionOptions jdbcExecutionOptions = JdbcExecutionOptions.builder()\n\t\t\t.withBatchIntervalMs(1000_000L)\n\t\t\t.withBatchSize(1)\n\t\t\t.withMaxRetries(1)\n\t\t\t.build();\nExecutionConfig executionConfig = new ExecutionConfig();\n\"><pre><span class=\"pl-smi\">JdbcExecutionOptions</span> jdbcExecutionOptions <span class=\"pl-k\">=</span> <span class=\"pl-smi\">JdbcExecutionOptions</span><span class=\"pl-k\">.</span>builder()\n\t\t\t.withBatchIntervalMs(<span class=\"pl-c1\">1000_000L</span>)\n\t\t\t.withBatchSize(<span class=\"pl-c1\">1</span>)\n\t\t\t.withMaxRetries(<span class=\"pl-c1\">1</span>)\n\t\t\t.build();\n<span class=\"pl-smi\">ExecutionConfig</span> executionConfig <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ExecutionConfig</span>();</pre></div>\n<p dir=\"auto\">to create them.</p>", "author": "wuchong", "createdAt": "2020-06-19T12:11:54Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/internal/JdbcFullTest.java", "diffHunk": "@@ -104,6 +107,52 @@ public void testEnrichedClassCastException() {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testJdbcBatchingOutputFormatCloseDuringRuntime() throws Exception{\n+\t\tJdbcOptions options = JdbcOptions.builder()\n+\t\t\t.setDBUrl(getDbMetadata().getUrl())\n+\t\t\t.setTableName(OUTPUT_TABLE)\n+\t\t\t.build();\n+\n+\t\tRuntimeContext context = Mockito.mock(RuntimeContext.class);\n+\t\tExecutionConfig executionConfig = Mockito.mock(ExecutionConfig.class);\n+\t\tJdbcExecutionOptions jdbcExecutionOptions = Mockito.mock(JdbcExecutionOptions.class);\n+\t\tJdbcBatchStatementExecutor executor = Mockito.mock(JdbcBatchStatementExecutor.class);\n+\n+\t\tdoReturn(executionConfig).when(context).getExecutionConfig();\n+\t\t// use scheduledThreadPool\n+\t\tdoReturn(500L).when(jdbcExecutionOptions).getBatchIntervalMs();\n+\t\tdoReturn(2).when(jdbcExecutionOptions).getBatchSize();\n+\t\tdoReturn(3).when(jdbcExecutionOptions).getMaxRetries();", "originalCommit": "539beaaef6b373b0b6a4979294a593cb9a0fb939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNDI3Mg==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442804272", "bodyText": "I suggest to suse 1000s for the interval and 1 for the batch to quickly throw the exception and avoid a async exception.", "author": "wuchong", "createdAt": "2020-06-19T12:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNDAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMzYxMg==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442903612", "bodyText": "If we want to use scheduler in batchingOutputFormat, we have to set the batchsize larger than 1.  So I think we setting batsize 2 is better.", "author": "fsk119", "createdAt": "2020-06-19T15:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNDAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNTMxMg==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442805312", "body": "```suggestion\r\n} catch (Exception e) {\r\n\t\t\t// artifact failure\r\n\t\t\tformat.close();\r\n\t\t} finally {\r\n\t\t\tassertNull(format.getConnection());\r\n\t\t}\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t} catch (Exception e) {\n          \n          \n            \n            \t\t\ttry {\n          \n          \n            \n            \t\t\t\tformat.close();\n          \n          \n            \n            \t\t\t} catch (Exception realException){\n          \n          \n            \n            \t\t\t\tConnection connection = format.getConnection();\n          \n          \n            \n            \t\t\t\tif (connection != null && !connection.isClosed()){\n          \n          \n            \n            \t\t\t\t\tthrow new RuntimeException(\"Resource leak!\");\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t}\n          \n          \n            \n            } catch (Exception e) {\n          \n          \n            \n            \t\t\t// artifact failure\n          \n          \n            \n            \t\t\tformat.close();\n          \n          \n            \n            \t\t} finally {\n          \n          \n            \n            \t\t\tassertNull(format.getConnection());\n          \n          \n            \n            \t\t}", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"151\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"152\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"153\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\tformat<span class=\"pl-k\">.</span>close();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"154\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> realException){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"155\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Connection</span> connection <span class=\"pl-k\">=</span> format<span class=\"pl-k\">.</span>getConnection();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"156\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-k\">if</span> (connection <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>connection<span class=\"pl-k\">.</span>isClosed()){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"157\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Resource leak!<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"151\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"152\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">//</span> artifact failure</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"153\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tformat<span class=\"pl-k\">.</span>close();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"154\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t} <span class=\"pl-k\">finally</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"155\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tassertNull(format<span class=\"pl-k\">.</span>getConnection());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"156\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wuchong", "createdAt": "2020-06-19T12:15:11Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/internal/JdbcFullTest.java", "diffHunk": "@@ -104,6 +107,52 @@ public void testEnrichedClassCastException() {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testJdbcBatchingOutputFormatCloseDuringRuntime() throws Exception{\n+\t\tJdbcOptions options = JdbcOptions.builder()\n+\t\t\t.setDBUrl(getDbMetadata().getUrl())\n+\t\t\t.setTableName(OUTPUT_TABLE)\n+\t\t\t.build();\n+\n+\t\tRuntimeContext context = Mockito.mock(RuntimeContext.class);\n+\t\tExecutionConfig executionConfig = Mockito.mock(ExecutionConfig.class);\n+\t\tJdbcExecutionOptions jdbcExecutionOptions = Mockito.mock(JdbcExecutionOptions.class);\n+\t\tJdbcBatchStatementExecutor executor = Mockito.mock(JdbcBatchStatementExecutor.class);\n+\n+\t\tdoReturn(executionConfig).when(context).getExecutionConfig();\n+\t\t// use scheduledThreadPool\n+\t\tdoReturn(500L).when(jdbcExecutionOptions).getBatchIntervalMs();\n+\t\tdoReturn(2).when(jdbcExecutionOptions).getBatchSize();\n+\t\tdoReturn(3).when(jdbcExecutionOptions).getMaxRetries();\n+\t\t// always throw Exception to trigger close() method\n+\t\tdoThrow(SQLException.class).when(executor).executeBatch();\n+\n+\t\tJdbcBatchingOutputFormat<Tuple2<Boolean, Row>, Row, JdbcBatchStatementExecutor<Row>> format =\n+\t\t\tnew JdbcBatchingOutputFormat<>(\n+\t\t\t\tnew SimpleJdbcConnectionProvider(options),\n+\t\t\t\tjdbcExecutionOptions,\n+\t\t\t\t(ctx) -> executor,\n+\t\t\t\t(tuple2) -> tuple2.f1);\n+\n+\t\tformat.setRuntimeContext(context);\n+\t\tformat.open(0, 1);\n+\n+\t\ttry {\n+\t\t\tfor (JdbcTestFixture.TestEntry entry : TEST_DATA) {\n+\t\t\t\tformat.writeRecord(Tuple2.of(true, toRow(entry)));\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\ttry {\n+\t\t\t\tformat.close();\n+\t\t\t} catch (Exception realException){\n+\t\t\t\tConnection connection = format.getConnection();\n+\t\t\t\tif (connection != null && !connection.isClosed()){\n+\t\t\t\t\tthrow new RuntimeException(\"Resource leak!\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}", "originalCommit": "539beaaef6b373b0b6a4979294a593cb9a0fb939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMzk3OQ==", "url": "https://github.com/apache/flink/pull/12712#discussion_r442903979", "bodyText": "It's much better than my origin code. Thanks.", "author": "fsk119", "createdAt": "2020-06-19T15:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNTMxMg=="}], "type": "inlineReview"}, {"oid": "6ca407933bdd15df5fe342e63c2820cf6943629d", "url": "https://github.com/apache/flink/commit/6ca407933bdd15df5fe342e63c2820cf6943629d", "message": "fix Jark's comments.", "committedDate": "2020-06-19T15:26:32Z", "type": "commit"}, {"oid": "c562cbba8de09ac1cd4b8f42dcbcd7319b95558f", "url": "https://github.com/apache/flink/commit/c562cbba8de09ac1cd4b8f42dcbcd7319b95558f", "message": "fix Jark's comments.", "committedDate": "2020-06-19T15:30:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4Mzk4Ng==", "url": "https://github.com/apache/flink/pull/12712#discussion_r443083986", "body": "I think this comment should be belong to `format.close()`.", "bodyText": "I think this comment should be belong to format.close().", "bodyHTML": "<p dir=\"auto\">I think this comment should be belong to <code>format.close()</code>.</p>", "author": "wuchong", "createdAt": "2020-06-20T00:26:04Z", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/internal/JdbcTableOutputFormatTest.java", "diffHunk": "@@ -66,6 +66,7 @@ public void setup() {\n \n \t@Test\n \tpublic void testUpsertFormatCloseBeforeOpen() throws Exception{\n+\t\t// FLINK-17544: There should be no NPE thrown from this method", "originalCommit": "c562cbba8de09ac1cd4b8f42dcbcd7319b95558f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA5MDUwNQ==", "url": "https://github.com/apache/flink/pull/12712#discussion_r443090505", "bodyText": "OK. I have modified it.", "author": "fsk119", "createdAt": "2020-06-20T01:38:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4Mzk4Ng=="}], "type": "inlineReview"}, {"oid": "089a6df7c18f6baa7683d06b5baf47a60ef74731", "url": "https://github.com/apache/flink/commit/089a6df7c18f6baa7683d06b5baf47a60ef74731", "message": "fix Jark's comments.", "committedDate": "2020-06-20T01:37:21Z", "type": "commit"}]}