{"pr_number": 11240, "pr_title": "[FLINK-16190][e2e] Migrate tests to FlinkResource", "pr_author": "zentol", "pr_createdAt": "2020-02-27T12:19:24Z", "pr_url": "https://github.com/apache/flink/pull/11240", "timeline": [{"oid": "efe358ec8f76c5663073e76b324aaf54d4fe118f", "url": "https://github.com/apache/flink/commit/efe358ec8f76c5663073e76b324aaf54d4fe118f", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package", "committedDate": "2020-02-27T14:43:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTA2OQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385795069", "body": "why is it not just `FlinkResource.get()`?\r\nalso in `MetricsAvailabilityITCase`", "bodyText": "why is it not just FlinkResource.get()?\nalso in MetricsAvailabilityITCase", "bodyHTML": "<p dir=\"auto\">why is it not just <code>FlinkResource.get()</code>?<br>\nalso in <code>MetricsAvailabilityITCase</code></p>", "author": "azagrebin", "createdAt": "2020-02-28T16:31:34Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test/java/org/apache/flink/tests/util/kafka/SQLClientKafkaITCase.java", "diffHunk": "@@ -76,7 +77,9 @@\n \t}\n \n \t@Rule\n-\tpublic final FlinkResource flink = new LocalStandaloneFlinkResource();\n+\tpublic final FlinkResource flink = new LocalStandaloneFlinkResourceFactory()\n+\t\t.create(FlinkResourceSetup.builder().build())\n+\t\t.get();", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1NzU3NQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385957575", "bodyText": "These tests have are in some form or another reliant on the cluster running locally. In the case of this test IIRC it was because the input CSV file exists locally; for the metrics IT case it is because it assumes the JM to be on the local host.", "author": "zentol", "createdAt": "2020-02-28T22:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTA2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MDAwMQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r386880001", "bodyText": "nit: shorthand for LocalStandaloneFlinkResourceFactory: FlinkResource#getLocal", "author": "azagrebin", "createdAt": "2020-03-03T09:05:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTczNw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385795737", "body": "I would put it before the constructor for code style", "bodyText": "I would put it before the constructor for code style", "bodyHTML": "<p dir=\"auto\">I would put it before the constructor for code style</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:32:56Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test/java/org/apache/flink/tests/util/kafka/StreamingKafkaITCase.java", "diffHunk": "@@ -68,20 +69,22 @@\n \tpublic final KafkaResource kafka;\n \n \t@Rule\n-\tpublic final FlinkResource flink = FlinkResource.get();\n+\tpublic final FlinkResource flink = FlinkResource.get(FlinkResourceSetup.builder().addConfiguration(getConfiguration()).build());\n \n \tpublic StreamingKafkaITCase(final String kafkaExampleJarPattern, final String kafkaVersion) {\n \t\tthis.kafkaExampleJar = TestUtils.getResourceJar(kafkaExampleJarPattern);\n \t\tthis.kafka = KafkaResource.get(kafkaVersion);\n \t}\n \n-\t@Test\n-\tpublic void testKafka() throws Exception {\n+\tprivate static Configuration getConfiguration() {", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385800557", "body": "is it already expected that there are other types/directions of jar moving?\r\nat this point, it looks that there is only one reasonable way to install things: opt -> lib", "bodyText": "is it already expected that there are other types/directions of jar moving?\nat this point, it looks that there is only one reasonable way to install things: opt -> lib", "bodyHTML": "<p dir=\"auto\">is it already expected that there are other types/directions of jar moving?<br>\nat this point, it looks that there is only one reasonable way to install things: opt -&gt; lib</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:41:26Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/FlinkDistribution.java", "diffHunk": "@@ -261,19 +263,33 @@ public void submitSQLJob(SQLJobSubmission job) throws IOException {\n \t\tAutoClosableProcess.runBlocking(commands.toArray(new String[0]));\n \t}\n \n-\tpublic void copyOptJarsToLib(String jarNamePrefix) throws FileNotFoundException, IOException {\n-\t\tfinal Optional<Path> reporterJarOptional;\n-\t\ttry (Stream<Path> logFiles = Files.walk(opt)) {\n-\t\t\treporterJarOptional = logFiles\n-\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(jarNamePrefix))\n+\tpublic void moveJar(JarMove move) throws IOException {", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTYwNQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385801605", "bodyText": "btw, it is actually a copy operation, not a move", "author": "azagrebin", "createdAt": "2020-02-28T16:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODM1Nw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385958357", "bodyText": "The proposed code is indeed over-engineered for current usages, but we will soon have operations from opt -> plugins and lib -> opt, and this approach can handle this easier since it doesn't require additional methods.\nI will fix the method not doing a move.", "author": "zentol", "createdAt": "2020-02-28T22:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MjA4OA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r386882088", "bodyText": "moveJar -> copyJar?", "author": "azagrebin", "createdAt": "2020-03-03T09:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTM0Nw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385801347", "body": "a bit strange that only first match gets copied, if it is a prefix, as a user, I would naturally expect all matches to be copied", "bodyText": "a bit strange that only first match gets copied, if it is a prefix, as a user, I would naturally expect all matches to be copied", "bodyHTML": "<p dir=\"auto\">a bit strange that only first match gets copied, if it is a prefix, as a user, I would naturally expect all matches to be copied</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:42:48Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/FlinkDistribution.java", "diffHunk": "@@ -261,19 +263,33 @@ public void submitSQLJob(SQLJobSubmission job) throws IOException {\n \t\tAutoClosableProcess.runBlocking(commands.toArray(new String[0]));\n \t}\n \n-\tpublic void copyOptJarsToLib(String jarNamePrefix) throws FileNotFoundException, IOException {\n-\t\tfinal Optional<Path> reporterJarOptional;\n-\t\ttry (Stream<Path> logFiles = Files.walk(opt)) {\n-\t\t\treporterJarOptional = logFiles\n-\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(jarNamePrefix))\n+\tpublic void moveJar(JarMove move) throws IOException {\n+\t\tfinal Path source = mapJarLocationToPath(move.getSource());\n+\t\tfinal Path target = mapJarLocationToPath(move.getTarget());\n+\n+\t\tfinal Optional<Path> jarOptional;\n+\t\ttry (Stream<Path> files = Files.walk(source)) {\n+\t\t\tjarOptional = files\n+\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(move.getJarNamePrefix()))", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2MDI1OQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385960259", "bodyText": "The method name implies that only 1 jar will be moved.\nOnly went with prefix since spelling out the entire jar name is error-prone.\nWe may actually want to fail here if the prefix matches more than one jar, as it was likely a mistake. In any case, not related to this PR as the current behavior isn't new.", "author": "zentol", "createdAt": "2020-02-28T22:57:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwMDgyNQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r386900825", "bodyText": "Why not to allow copying of multiple matching files?\nIf so, I like the idea of failing then and jdocs can be extended to state this", "author": "azagrebin", "createdAt": "2020-03-03T09:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTM0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNTM4NA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385805384", "body": "at least `@param` to make it different from `get()`?", "bodyText": "at least @param to make it different from get()?", "bodyHTML": "<p dir=\"auto\">at least <code>@param</code> to make it different from <code>get()</code>?</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:49:57Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResource.java", "diffHunk": "@@ -52,15 +46,34 @@\n \t */\n \tClusterController startCluster(int numTaskManagers) throws IOException;\n \n+\t/**\n+\t * Searches the logs of all processes for the given pattern, and applies the given processor for every line for\n+\t * which {@link Matcher#matches()} returned true.\n+\t *\n+\t * @param pattern pattern to search for\n+\t * @param matchProcessor match processor\n+\t * @return stream of matched strings\n+\t */\n+\tStream<String> searchAllLogs(Pattern pattern, Function<Matcher, String> matchProcessor) throws IOException;\n+\n \t/**\n \t * Returns the configured FlinkResource implementation, or a {@link LocalStandaloneFlinkResource} if none is configured.\n \t *\n \t * @return configured FlinkResource, or {@link LocalStandaloneFlinkResource} is none is configured\n \t */\n \tstatic FlinkResource get() {\n+\t\treturn get(FlinkResourceSetup.builder().build());\n+\t}\n+\n+\t/**\n+\t * Returns the configured FlinkResource implementation, or a {@link LocalStandaloneFlinkResource} if none is configured.\n+\t *\n+\t * @return configured FlinkResource, or {@link LocalStandaloneFlinkResource} is none is configured", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNTcyNA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385805724", "body": "`@param`", "bodyText": "@param", "bodyHTML": "<p dir=\"auto\"><code>@param</code></p>", "author": "azagrebin", "createdAt": "2020-02-28T16:50:37Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceFactory.java", "diffHunk": "@@ -32,5 +32,5 @@\n \t *\n \t * @return FlinkResource instance, or an empty Optional if the instance could not be instantiated\n \t */\n-\tOptional<FlinkResource> create();\n+\tOptional<FlinkResource> create(FlinkResourceSetup setup);", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjY4NA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385806684", "body": "AFAIS, class and all methods can be already package private in this commit", "bodyText": "AFAIS, class and all methods can be already package private in this commit", "bodyHTML": "<p dir=\"auto\">AFAIS, class and all methods can be already package private in this commit</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:52:26Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/JarMove.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+/**\n+ * Represents a move operation for a jar..\n+ */\n+public class JarMove {", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1ODc0Mg==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385958742", "bodyText": "incorrect, FlinkDistribution is in a different package and relies on JarMove.", "author": "zentol", "createdAt": "2020-02-28T22:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjY4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwMjUwMw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r386902503", "bodyText": "ok, then after moving it to flink package", "author": "azagrebin", "createdAt": "2020-03-03T09:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjY4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjkzNg==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385806936", "body": "```suggestion\r\n * Represents a move operation for a jar.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Represents a move operation for a jar..\n          \n          \n            \n             * Represents a move operation for a jar.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Represents</span> a move operation <span class=\"pl-k\">for</span> a jar<span class=\"pl-k\">.</span><span class=\"pl-c1 x x-first x-last\">.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Represents</span> a move operation <span class=\"pl-k\">for</span> a jar.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "azagrebin", "createdAt": "2020-02-28T16:52:57Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/JarMove.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+/**\n+ * Represents a move operation for a jar..", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwOTgxOA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385809818", "body": "nit: defensive copy", "bodyText": "nit: defensive copy", "bodyHTML": "<p dir=\"auto\">nit: defensive copy</p>", "author": "azagrebin", "createdAt": "2020-02-28T16:58:27Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceSetup.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.util.Preconditions;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Setup instructions for a {@link FlinkResource}.\n+ */\n+public class FlinkResourceSetup {\n+\n+\t@Nullable\n+\tprivate final Configuration config;\n+\tprivate final Collection<JarMove> jarMoveOperations;\n+\n+\tprivate FlinkResourceSetup(@Nullable Configuration config, Collection<JarMove> jarMoveOperations) {\n+\t\tthis.config = config;\n+\t\tthis.jarMoveOperations = Preconditions.checkNotNull(jarMoveOperations);\n+\t}\n+\n+\tpublic Optional<Configuration> getConfig() {\n+\t\treturn Optional.ofNullable(config);\n+\t}\n+\n+\tpublic Collection<JarMove> getJarMoveOperations() {\n+\t\treturn jarMoveOperations;", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1OTA5MQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385959091", "bodyText": "wrong place, should be done in the constructor call", "author": "zentol", "createdAt": "2020-02-28T22:53:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwOTgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwMzk0NA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r386903944", "bodyText": "true, also unmodifiableCollection there, why in builder now?", "author": "azagrebin", "createdAt": "2020-03-03T09:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwOTgxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMDg5Ng==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385810896", "body": "unused leftover?\r\nalthough I would go with it for now instead of `jarMoveOperations` if there are no other use cases for it in foreseeable future", "bodyText": "unused leftover?\nalthough I would go with it for now instead of jarMoveOperations if there are no other use cases for it in foreseeable future", "bodyHTML": "<p dir=\"auto\">unused leftover?<br>\nalthough I would go with it for now instead of <code>jarMoveOperations</code> if there are no other use cases for it in foreseeable future</p>", "author": "azagrebin", "createdAt": "2020-02-28T17:00:24Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceSetup.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.util.Preconditions;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Setup instructions for a {@link FlinkResource}.\n+ */\n+public class FlinkResourceSetup {\n+\n+\t@Nullable\n+\tprivate final Configuration config;\n+\tprivate final Collection<JarMove> jarMoveOperations;\n+\n+\tprivate FlinkResourceSetup(@Nullable Configuration config, Collection<JarMove> jarMoveOperations) {\n+\t\tthis.config = config;\n+\t\tthis.jarMoveOperations = Preconditions.checkNotNull(jarMoveOperations);\n+\t}\n+\n+\tpublic Optional<Configuration> getConfig() {\n+\t\treturn Optional.ofNullable(config);\n+\t}\n+\n+\tpublic Collection<JarMove> getJarMoveOperations() {\n+\t\treturn jarMoveOperations;\n+\t}\n+\n+\tpublic static FlinkResourceSetupBuilder builder() {\n+\t\treturn new FlinkResourceSetupBuilder();\n+\t}\n+\n+\t/**\n+\t * Builder for {@link FlinkResourceSetup}.\n+\t */\n+\tpublic static class FlinkResourceSetupBuilder {\n+\n+\t\tprivate Configuration config;\n+\t\tprivate final Collection<String> jarsToCopyFromOptToLib = new ArrayList<>();", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1OTM2OQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385959369", "bodyText": "indeed leftovers, will remove them. See my above answer for why the jarMoveOperations will stay.", "author": "zentol", "createdAt": "2020-02-28T22:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMDg5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNjQ0OA==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385826448", "body": "```suggestion\r\n\t\ttry (ClusterController ignored = dist.startCluster(1)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\ttry (ClusterController cluster = dist.startCluster(1)) {\n          \n          \n            \n            \t\ttry (ClusterController ignored = dist.startCluster(1)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">try</span> (<span class=\"pl-smi\">ClusterController</span> <span class=\"x x-first x-last\">cluster</span> <span class=\"pl-k\">=</span> dist<span class=\"pl-k\">.</span>startCluster(<span class=\"pl-c1\">1</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">try</span> (<span class=\"pl-smi\">ClusterController</span> <span class=\"x x-first x-last\">ignored</span> <span class=\"pl-k\">=</span> dist<span class=\"pl-k\">.</span>startCluster(<span class=\"pl-c1\">1</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "azagrebin", "createdAt": "2020-02-28T17:29:22Z", "path": "flink-end-to-end-tests/flink-metrics-availability-test/src/test/java/org/pache/flink/metrics/tests/MetricsAvailabilityITCase.java", "diffHunk": "@@ -91,16 +96,16 @@ public static void shutdownExecutor() {\n \n \t@Test\n \tpublic void testReporter() throws Exception {\n-\t\tdist.startFlinkCluster();\n+\t\ttry (ClusterController cluster = dist.startCluster(1)) {", "originalCommit": "1bd966ab34a87027fe0446d0987542960fbec568", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNzg2Mw==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385827863", "body": "other non-overridden methods can also be package private?", "bodyText": "other non-overridden methods can also be package private?", "bodyHTML": "<p dir=\"auto\">other non-overridden methods can also be package private?</p>", "author": "azagrebin", "createdAt": "2020-02-28T17:32:38Z", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java", "diffHunk": "@@ -86,7 +84,7 @@\n \n \tprivate Configuration defaultConfig;\n \n-\tpublic FlinkDistribution() {\n+\tFlinkDistribution() {", "originalCommit": "efe358ec8f76c5663073e76b324aaf54d4fe118f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk1OTc0MQ==", "url": "https://github.com/apache/flink/pull/11240#discussion_r385959741", "bodyText": "This represents the actual API that would be public if it were in another package; will not change it.", "author": "zentol", "createdAt": "2020-02-28T22:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNzg2Mw=="}], "type": "inlineReview"}, {"oid": "662e405a63d064000d67306c67c219d2d76fdfa0", "url": "https://github.com/apache/flink/commit/662e405a63d064000d67306c67c219d2d76fdfa0", "message": "javadocs", "committedDate": "2020-02-28T23:00:44Z", "type": "forcePushed"}, {"oid": "f1b623a907cc3298f63db7515e1640b0e74f5ca3", "url": "https://github.com/apache/flink/commit/f1b623a907cc3298f63db7515e1640b0e74f5ca3", "message": "[FLINK-16190][e2e] Migrate tests to FlinkResource", "committedDate": "2020-03-03T10:48:18Z", "type": "commit"}, {"oid": "b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "url": "https://github.com/apache/flink/commit/b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package", "committedDate": "2020-03-03T10:48:18Z", "type": "commit"}, {"oid": "b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "url": "https://github.com/apache/flink/commit/b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package", "committedDate": "2020-03-03T10:48:18Z", "type": "forcePushed"}]}