{"pr_number": 1155, "pr_title": "Do not normalize new lines in attributes during config loading", "pr_author": "alisihab", "pr_createdAt": "2020-10-16T12:46:55Z", "pr_url": "https://github.com/ibissource/iaf/pull/1155", "timeline": [{"oid": "0ba0f87d46af5c3ed601c4a8cb7226d9ee956eda", "url": "https://github.com/ibissource/iaf/commit/0ba0f87d46af5c3ed601c4a8cb7226d9ee956eda", "message": "do not normalize new lines in attributes during config loading", "committedDate": "2020-10-16T12:44:47Z", "type": "commit"}, {"oid": "de0775631dc871cac00c0843c5013d6d7f4c2661", "url": "https://github.com/ibissource/iaf/commit/de0775631dc871cac00c0843c5013d6d7f4c2661", "message": "another wrapper", "committedDate": "2020-10-16T12:55:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0MjU4Ng==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r506542586", "body": "I think it would be a good idea not to introduce two new resources, but to add the ``&#xa;`` value to 'in.xml', to a element, to an attribute, to the escaped data in ``<data1>`` and to the CDATA in ``<data2>`` .\r\nYou'll also have to change quite some other resource files, but it makes the test cover more.", "bodyText": "I think it would be a good idea not to introduce two new resources, but to add the &#xa; value to 'in.xml', to a element, to an attribute, to the escaped data in <data1> and to the CDATA in <data2> .\nYou'll also have to change quite some other resource files, but it makes the test cover more.", "bodyHTML": "<p dir=\"auto\">I think it would be a good idea not to introduce two new resources, but to add the <code>&amp;#xa;</code> value to 'in.xml', to a element, to an attribute, to the escaped data in <code>&lt;data1&gt;</code> and to the CDATA in <code>&lt;data2&gt;</code> .<br>\nYou'll also have to change quite some other resource files, but it makes the test cover more.</p>", "author": "gvanbrakel", "createdAt": "2020-10-16T15:25:26Z", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlWriterTest.java", "diffHunk": "@@ -71,4 +71,20 @@ public void testNoLexicalHandling() throws Exception {\n \t\tassertEquals(expected,xmlWriter.toString());\n \t}\n \n+\t@Test\n+\tpublic void testDisableOutputEscaping() throws Exception {", "originalCommit": "de0775631dc871cac00c0843c5013d6d7f4c2661", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9cbac312109bcc70bb58a6a8d76769eccdb2c29a", "url": "https://github.com/ibissource/iaf/commit/9cbac312109bcc70bb58a6a8d76769eccdb2c29a", "message": "include new line in xml, xsl test cases", "committedDate": "2020-10-19T12:03:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0ODU1Mw==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r507748553", "body": "Should the xmlWriter really resolve the new line? I would think not!", "bodyText": "Should the xmlWriter really resolve the new line? I would think not!", "bodyHTML": "<p dir=\"auto\">Should the xmlWriter really resolve the new line? I would think not!</p>", "author": "gvanbrakel", "createdAt": "2020-10-19T13:32:22Z", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlWriterTest.java", "diffHunk": "@@ -20,6 +20,8 @@ public void testBasic() throws Exception {\n \t\tString expected = input;\n \t\tXmlWriter xmlWriter = new XmlWriter();\n \t\tXmlUtils.parseXml(input, xmlWriter);\n+\t\t/* parseXml method will resolve new line*/\n+\t\texpected = expected.replace(\"newline &#10;\", \"newline \\n\").replace(\"&lt;LF&gt;&#xa;&lt;/LF&gt;\", \"&lt;LF&gt;\\n&lt;/LF&gt;\");", "originalCommit": "9cbac312109bcc70bb58a6a8d76769eccdb2c29a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0efd4b209276c134318bed5f529dd96118c49f16", "url": "https://github.com/ibissource/iaf/commit/0efd4b209276c134318bed5f529dd96118c49f16", "message": "have the new line only in an attribute", "committedDate": "2020-10-19T14:12:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NDU4Ng==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r508344586", "body": "2019 - 2020 WeAreFrank!", "bodyText": "2019 - 2020 WeAreFrank!", "bodyHTML": "<p dir=\"auto\">2019 - 2020 WeAreFrank!</p>", "author": "nielsm5", "createdAt": "2020-10-20T09:21:17Z", "path": "core/src/main/java/nl/nn/adapterframework/xml/XmlWriter.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2019 Integration Partners\n+   Copyright 2019 Integration Partners, 2020 WeAreFrank!", "originalCommit": "0efd4b209276c134318bed5f529dd96118c49f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NDcyMw==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r508344723", "body": "\ud83d\udc4d ", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "nielsm5", "createdAt": "2020-10-20T09:21:30Z", "path": "core/src/main/java/nl/nn/adapterframework/xml/XmlWriter.java", "diffHunk": "@@ -37,22 +37,22 @@\n \n public class XmlWriter extends DefaultHandler implements LexicalHandler {\n \tprotected Logger log = LogUtil.getLogger(this);\n-\t\n-\tprivate final String DISABLE_OUTPUT_ESCAPING=\"javax.xml.transform.disable-output-escaping\";\n-\tprivate final String ENABLE_OUTPUT_ESCAPING=\"javax.xml.transform.enable-output-escaping\";\n-\t\n+\n+\tpublic static final String DISABLE_OUTPUT_ESCAPING=\"javax.xml.transform.disable-output-escaping\";\n+\tpublic static final String ENABLE_OUTPUT_ESCAPING=\"javax.xml.transform.enable-output-escaping\";", "originalCommit": "0efd4b209276c134318bed5f529dd96118c49f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NTM5OQ==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r508345399", "body": "Good comment! (maybe fix mehtod though)", "bodyText": "Good comment! (maybe fix mehtod though)", "bodyHTML": "<p dir=\"auto\">Good comment! (maybe fix mehtod though)</p>", "author": "nielsm5", "createdAt": "2020-10-20T09:22:29Z", "path": "core/src/test/java/nl/nn/adapterframework/xslt/ParallelXsltTest.java", "diffHunk": "@@ -119,6 +119,8 @@ protected void assertResultsAreCorrect(String expected, String actual, IPipeLine\n \n //\t\tsuper.assertResultsAreCorrect(combinedExpected, actual, session);\n \n+\t\t/* Parallel sender uses toXml mehtod which escapes the new line char. In the comparison we need unescaped char.*/", "originalCommit": "0efd4b209276c134318bed5f529dd96118c49f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NTYwOA==", "url": "https://github.com/ibissource/iaf/pull/1155#discussion_r508345608", "body": "A tip I can give you for next time, try to not put too many test cases in 1 junit-test. It will make it more difficult to analyse the problem. In this case you're testing the escape part so it's understandable \ud83d\udc4d ", "bodyText": "A tip I can give you for next time, try to not put too many test cases in 1 junit-test. It will make it more difficult to analyse the problem. In this case you're testing the escape part so it's understandable \ud83d\udc4d", "bodyHTML": "<p dir=\"auto\">A tip I can give you for next time, try to not put too many test cases in 1 junit-test. It will make it more difficult to analyse the problem. In this case you're testing the escape part so it's understandable <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "nielsm5", "createdAt": "2020-10-20T09:22:45Z", "path": "core/src/test/java/nl/nn/adapterframework/xslt/XsltTestBase.java", "diffHunk": "@@ -353,7 +353,7 @@ public void xpathAttrText() throws Exception {\n \t@Test\n \tpublic void xpathNodeXml() throws Exception {\n \t\tString input = TestFileUtils.getTestFile(\"/Xslt/AnyXml/in.xml\");\n-\t\tString expected = \"<g attr=\\\"Euro \u20ac single quote ' double quote escaped &quot; \\\">Euro \u20ac single quote ' double quote \\\"</g>\";\n+\t\tString expected = \"<g attr=\\\"Euro \u20ac single quote ' double quote escaped &quot; newline escaped &#10;\\\">Euro \u20ac single quote ' double quote \\\"</g>\";", "originalCommit": "0efd4b209276c134318bed5f529dd96118c49f16", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd4fae0f00eba25f8306ac20a6eb6021b2e87f92", "url": "https://github.com/ibissource/iaf/commit/dd4fae0f00eba25f8306ac20a6eb6021b2e87f92", "message": "fix copyright, comment typo", "committedDate": "2020-10-20T11:25:00Z", "type": "commit"}]}