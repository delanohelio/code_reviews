{"pr_number": 734, "pr_title": "Fix getting live application routes on bg-deploy", "pr_author": "theghost5800", "pr_createdAt": "2020-01-22T15:34:13Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxOTYwMw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370019603", "body": "As we talked, this could break the new suffixes scenario for the new bg-deploy process.\r\nA new mechanism should be introduced which to provide the information about the deployedMtaColor but in the same time to be hidden and easily estendible. Think in this way.", "bodyText": "As we talked, this could break the new suffixes scenario for the new bg-deploy process.\nA new mechanism should be introduced which to provide the information about the deployedMtaColor but in the same time to be hidden and easily estendible. Think in this way.", "bodyHTML": "<p dir=\"auto\">As we talked, this could break the new suffixes scenario for the new bg-deploy process.<br>\nA new mechanism should be introduced which to provide the information about the deployedMtaColor but in the same time to be hidden and easily estendible. Think in this way.</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:49:37Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxOTkzNw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370019937", "body": "If you apply the below comment, you could get rid of the Live word in the class name.\r\n", "bodyText": "If you apply the below comment, you could get rid of the Live word in the class name.", "bodyHTML": "<p dir=\"auto\">If you apply the below comment, you could get rid of the Live word in the class name.</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:50:20Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMDI2OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370020269", "body": "Rename to isModuleNameMatching", "bodyText": "Rename to isModuleNameMatching", "bodyHTML": "<p dir=\"auto\">Rename to isModuleNameMatching</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:50:57Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMDUxNA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370020514", "body": "Could we check whether !deployedModules.isEmpty() ?", "bodyText": "Could we check whether !deployedModules.isEmpty() ?", "bodyHTML": "<p dir=\"auto\">Could we check whether !deployedModules.isEmpty() ?</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:51:26Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMTg4OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370021889", "body": "The naming of the method is not applicable for two reasons:\r\n1. You bring the App notation here although you were talking for modules all above\r\n2. It is not correct in the syntax --> hasApplicationNameContainLiveDeployedColor...\r\nThink of a new method name and take in mind the comments at the begining of the class.", "bodyText": "The naming of the method is not applicable for two reasons:\n\nYou bring the App notation here although you were talking for modules all above\nIt is not correct in the syntax --> hasApplicationNameContainLiveDeployedColor...\nThink of a new method name and take in mind the comments at the begining of the class.", "bodyHTML": "<p dir=\"auto\">The naming of the method is not applicable for two reasons:</p>\n<ol dir=\"auto\">\n<li>You bring the App notation here although you were talking for modules all above</li>\n<li>It is not correct in the syntax --&gt; hasApplicationNameContainLiveDeployedColor...<br>\nThink of a new method name and take in mind the comments at the begining of the class.</li>\n</ol>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:54:05Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean isAppNameHasLiveDeployedColor(DeployedMtaModule deployedModule) {", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMTk2Nw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370021967", "body": "Same here - refactor", "bodyText": "Same here - refactor", "bodyHTML": "<p dir=\"auto\">Same here - refactor</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:54:14Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean isAppNameHasLiveDeployedColor(DeployedMtaModule deployedModule) {\n+        String appName = deployedModule.getAppName();\n+        return appName.endsWith(deployedMtaColor.asSuffix()) || isAppNameHasColorWithoutSuffix(appName);\n+    }\n+\n+    private boolean isAppNameHasColorWithoutSuffix(String appName) {", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMjQyMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370022422", "body": "Now, if you decide that you want to fix the first two comments(at the begining of the class), you should also think of a way how these checks could be done in more abstract way - think of it.", "bodyText": "Now, if you decide that you want to fix the first two comments(at the begining of the class), you should also think of a way how these checks could be done in more abstract way - think of it.", "bodyHTML": "<p dir=\"auto\">Now, if you decide that you want to fix the first two comments(at the begining of the class), you should also think of a way how these checks could be done in more abstract way - think of it.</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:55:08Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean isAppNameHasLiveDeployedColor(DeployedMtaModule deployedModule) {\n+        String appName = deployedModule.getAppName();\n+        return appName.endsWith(deployedMtaColor.asSuffix()) || isAppNameHasColorWithoutSuffix(appName);\n+    }\n+\n+    private boolean isAppNameHasColorWithoutSuffix(String appName) {\n+        return !appName.endsWith(ApplicationColor.BLUE.asSuffix()) && !appName.endsWith(ApplicationColor.GREEN.asSuffix())", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMzQzNQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370023435", "body": "The ApplicationCloudModelBuilder is complex enough without adding addition Live notation in it.\r\nHowever, if you think of a good way how to achieve the comments in the DeployedLiveModuleCalculator.java file, you would remove this Live notation and there will be no problem.", "bodyText": "The ApplicationCloudModelBuilder is complex enough without adding addition Live notation in it.\nHowever, if you think of a good way how to achieve the comments in the DeployedLiveModuleCalculator.java file, you would remove this Live notation and there will be no problem.", "bodyHTML": "<p dir=\"auto\">The ApplicationCloudModelBuilder is complex enough without adding addition Live notation in it.<br>\nHowever, if you think of a good way how to achieve the comments in the DeployedLiveModuleCalculator.java file, you would remove this Live notation and there will be no problem.</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:56:59Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -58,19 +58,20 @@\n     protected final DeploymentDescriptor deploymentDescriptor;\r\n     protected final boolean prettyPrinting;\r\n     protected final ApplicationEnvironmentCloudModelBuilder applicationEnvCloudModelBuilder;\r\n-    protected final DeployedMta deployedMta;\r\n+    protected final DeployedLiveModuleCalculator deployedLiveModuleCalculator;\r\n     protected final UserMessageLogger stepLogger;\r\n \r\n     protected final ParametersChainBuilder parametersChainBuilder;\r\n \r\n-    public ApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting, DeployedMta deployedMta,\r\n-                                        String deployId, UserMessageLogger stepLogger) {\r\n+    public ApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting,\r\n+                                        DeployedLiveModuleCalculator deployedLiveModuleCalculator, String deployId,\r\n+                                        UserMessageLogger stepLogger) {\r\n         HandlerFactory handlerFactory = createHandlerFactory();\r\n         this.handler = handlerFactory.getDescriptorHandler();\r\n         this.deploymentDescriptor = deploymentDescriptor;\r\n         this.prettyPrinting = prettyPrinting;\r\n         this.applicationEnvCloudModelBuilder = new ApplicationEnvironmentCloudModelBuilder(deploymentDescriptor, deployId, prettyPrinting);\r\n-        this.deployedMta = deployedMta;\r\n+        this.deployedLiveModuleCalculator = deployedLiveModuleCalculator;\r", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMzYzNg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370023636", "body": "Is there some case when deployedModules.get(0) will be reached?", "bodyText": "Is there some case when deployedModules.get(0) will be reached?", "bodyHTML": "<p dir=\"auto\">Is there some case when deployedModules.get(0) will be reached?</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:57:23Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNDIzNQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370024235", "body": "Can this deployedLiveModuleCalculator be null? If yes, when and why?", "bodyText": "Can this deployedLiveModuleCalculator be null? If yes, when and why?", "bodyHTML": "<p dir=\"auto\">Can this deployedLiveModuleCalculator be null? If yes, when and why?</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T09:58:31Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -128,16 +129,16 @@ private ApplicationUrisCloudModelBuilder getApplicationUrisCloudModelBuilder(Lis\n \r\n     public List<String> getApplicationUris(Module module) {\r\n         List<Map<String, Object>> parametersList = parametersChainBuilder.buildModuleChain(module.getName());\r\n-        DeployedMtaModule deployedModule = findDeployedModule(deployedMta, module);\r\n+        DeployedMtaModule deployedModule = getDeployedMtaModule(module);\r\n         return getApplicationUrisCloudModelBuilder(parametersList).getApplicationUris(module, parametersList, deployedModule);\r\n     }\r\n \r\n-    protected <R> R parseParameters(List<Map<String, Object>> parametersList, ParametersParser<R> parser) {\r\n-        return parser.parse(parametersList);\r\n+    private DeployedMtaModule getDeployedMtaModule(Module module) {\r\n+        return deployedLiveModuleCalculator == null ? null : deployedLiveModuleCalculator.getLiveDeployedModule(module.getName());\r", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0ODA5NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370148095", "bodyText": "+1", "author": "radito3", "createdAt": "2020-01-23T14:27:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNDIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNjMyMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370026322", "body": "Why do you need map here(expectedLiveDeployedModuleName), only the module names?", "bodyText": "Why do you need map here(expectedLiveDeployedModuleName), only the module names?", "bodyHTML": "<p dir=\"auto\">Why do you need map here(expectedLiveDeployedModuleName), only the module names?</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T10:02:34Z", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.common.util.MapUtil;\n+\n+public class DeployedLiveModuleCalculatorTest {\n+\n+    private static Stream<Arguments> testGetLiveDeployedModule() {\n+        return Stream.of(\n+        // @formatter:off\n+               // (1) Get module-1 from deployed modules [module-1, module-2]\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-2\", \"bar-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo-blue\")),\n+               // (2) Get live application in case where both blue and green are deployed\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, MapUtil.asMap(\"module-1\", \"foo-green\")),\n+               // (3) Get module-2 from deployed modules [module-1, module-2] without colors\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-2\", \"bar\")), null, MapUtil.asMap(\"module-2\", \"bar\")),\n+               // (4) Test without deployed mta\n+               Arguments.of(Collections.emptyList(), null, Collections.emptyMap()),\n+               // (5) Get application without color suffix when previous deployed color is BLUE\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo\")),\n+               // (6) Get live application (foo-green) when foo and foo-blue exists\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, \n+                            MapUtil.asMap(\"module-1\", \"foo-green\"))\n+        // @formatter:on\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetLiveDeployedModule(List<Map<String, String>> deployedModulesNames, ApplicationColor deployedMtaColor,\n+                                          Map<String, String> expectedLiveDeployedModuleName) {", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNjk1Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370026953", "body": "Why this is removed from here?", "bodyText": "Why this is removed from here?", "bodyHTML": "<p dir=\"auto\">Why this is removed from here?</p>", "author": "enchobelezirev", "createdAt": "2020-01-23T10:03:44Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/helpers/ApplicationColorDetector.java", "diffHunk": "@@ -26,8 +27,6 @@\n @Named(\"applicationColorDetector\")\n public class ApplicationColorDetector {\n \n-    private static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MzgyNg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370593826", "bodyText": "It was moved from cf.process in cf.core package because the constant couldn't be used from classes in cf.core package.", "author": "theghost5800", "createdAt": "2020-01-24T11:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNjk1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA0MjUzOQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370042539", "body": "This should be in a separate commit, because it addresses a different issue.", "bodyText": "This should be in a separate commit, because it addresses a different issue.", "bodyHTML": "<p dir=\"auto\">This should be in a separate commit, because it addresses a different issue.</p>", "author": "nictas", "createdAt": "2020-01-23T10:35:47Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/helpers/ApplicationColorDetector.java", "diffHunk": "@@ -69,7 +68,7 @@ public ApplicationColor detectLiveApplicationColor(DeployedMta deployedMta, Stri\n         if (latestDeployedColor == null) {\n             return olderApplicationColor;\n         }\n-        return phase == Phase.UNDEPLOY ? latestDeployedColor : olderApplicationColor;\n+        return phase == Phase.UNDEPLOY ? latestDeployedColor : latestDeployedColor.getAlternativeColor();", "originalCommit": "07894bb67af21cbe69a4e990bc05bf4ef7cb7b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExMDM1Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370110356", "bodyText": "done", "author": "theghost5800", "createdAt": "2020-01-23T13:17:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA0MjUzOQ=="}], "type": "inlineReview"}, {"oid": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/44fb40a5942feec23455b7c7f3c888b78f1b241f", "message": "Fix getting live application routes on bg-deploy\n\nJIRA:LMCROSSITXSADEPLOY-1875", "committedDate": "2020-01-23T13:10:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzNTE0Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370135142", "body": "Why are the names being compared in a case-insensitive manner?\r\nWhat if there are 2 different modules, the names of which only differ in uppercase and lowercase letters?", "bodyText": "Why are the names being compared in a case-insensitive manner?\nWhat if there are 2 different modules, the names of which only differ in uppercase and lowercase letters?", "bodyHTML": "<p dir=\"auto\">Why are the names being compared in a case-insensitive manner?<br>\nWhat if there are 2 different modules, the names of which only differ in uppercase and lowercase letters?</p>", "author": "radito3", "createdAt": "2020-01-23T14:05:05Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5Mjc1OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370592759", "bodyText": "I am using the same logic from DeployedMta class for find module by name:\npublic DeployedMtaModule findDeployedModule(String moduleName) {\t return getModules().stream()\t .filter(module -> module.getModuleName()\t .equalsIgnoreCase(moduleName))\t .findFirst()\t .orElse(null);\t }", "author": "theghost5800", "createdAt": "2020-01-24T11:39:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzNTE0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEzOTQ2OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370139468", "body": "I don't understand the name of the method\r\nIt starts with `isAppName`, which leads me to believe that you are going to check something about the application name, ok, but then `hasLiveDeployedColor` is not a grammatically correct way to end the question.\r\nMaybe switch the words around, something like `isLiveColorInAppName`?\r\n\r\nBut also, this method is doing 2 things, checking if the name ends with the deployed color and if the name has no suffix. Split it into 2 methods", "bodyText": "I don't understand the name of the method\nIt starts with isAppName, which leads me to believe that you are going to check something about the application name, ok, but then hasLiveDeployedColor is not a grammatically correct way to end the question.\nMaybe switch the words around, something like isLiveColorInAppName?\nBut also, this method is doing 2 things, checking if the name ends with the deployed color and if the name has no suffix. Split it into 2 methods", "bodyHTML": "<p dir=\"auto\">I don't understand the name of the method<br>\nIt starts with <code>isAppName</code>, which leads me to believe that you are going to check something about the application name, ok, but then <code>hasLiveDeployedColor</code> is not a grammatically correct way to end the question.<br>\nMaybe switch the words around, something like <code>isLiveColorInAppName</code>?</p>\n<p dir=\"auto\">But also, this method is doing 2 things, checking if the name ends with the deployed color and if the name has no suffix. Split it into 2 methods</p>", "author": "radito3", "createdAt": "2020-01-23T14:12:46Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean isAppNameHasLiveDeployedColor(DeployedMtaModule deployedModule) {", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0MTgwOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370141808", "body": "Again, the question is grammatically incorrect. If you stick with these words, an alternative is `doesAppNameHaveColorWithoutSuffix`.\r\n\r\nBut this method also checks 2 things.\r\nFirstly it checks the 'appName' that it is passed if it doesn't end in either suffix and checks something unrelated to the app name, the deployedMtaColor.\r\nI think the second check should be in a different method", "bodyText": "Again, the question is grammatically incorrect. If you stick with these words, an alternative is doesAppNameHaveColorWithoutSuffix.\nBut this method also checks 2 things.\nFirstly it checks the 'appName' that it is passed if it doesn't end in either suffix and checks something unrelated to the app name, the deployedMtaColor.\nI think the second check should be in a different method", "bodyHTML": "<p dir=\"auto\">Again, the question is grammatically incorrect. If you stick with these words, an alternative is <code>doesAppNameHaveColorWithoutSuffix</code>.</p>\n<p dir=\"auto\">But this method also checks 2 things.<br>\nFirstly it checks the 'appName' that it is passed if it doesn't end in either suffix and checks something unrelated to the app name, the deployedMtaColor.<br>\nI think the second check should be in a different method</p>", "author": "radito3", "createdAt": "2020-01-23T14:16:45Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        List<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                      .filter(deployedModule -> isModuleNamesEqual(deployedModule,\n+                                                                                                                   moduleName))\n+                                                                      .collect(Collectors.toList());\n+\n+        if (deployedModules.size() > 1 && deployedMtaColor != null) {\n+            return deployedModules.stream()\n+                                  .filter(this::isAppNameHasLiveDeployedColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.isEmpty() ? null : deployedModules.get(0);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNamesEqual(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean isAppNameHasLiveDeployedColor(DeployedMtaModule deployedModule) {\n+        String appName = deployedModule.getAppName();\n+        return appName.endsWith(deployedMtaColor.asSuffix()) || isAppNameHasColorWithoutSuffix(appName);\n+    }\n+\n+    private boolean isAppNameHasColorWithoutSuffix(String appName) {", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0OTY5Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370149696", "body": "If the module name and app name pairs are the only entry in the maps, why not make a nested class for these two things, rather than creating maps each time?", "bodyText": "If the module name and app name pairs are the only entry in the maps, why not make a nested class for these two things, rather than creating maps each time?", "bodyHTML": "<p dir=\"auto\">If the module name and app name pairs are the only entry in the maps, why not make a nested class for these two things, rather than creating maps each time?</p>", "author": "radito3", "createdAt": "2020-01-23T14:30:02Z", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.common.util.MapUtil;\n+\n+public class DeployedLiveModuleCalculatorTest {\n+\n+    private static Stream<Arguments> testGetLiveDeployedModule() {\n+        return Stream.of(\n+        // @formatter:off\n+               // (1) Get module-1 from deployed modules [module-1, module-2]\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-2\", \"bar-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo-blue\")),\n+               // (2) Get live application in case where both blue and green are deployed\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, MapUtil.asMap(\"module-1\", \"foo-green\")),\n+               // (3) Get module-2 from deployed modules [module-1, module-2] without colors\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-2\", \"bar\")), null, MapUtil.asMap(\"module-2\", \"bar\")),\n+               // (4) Test without deployed mta\n+               Arguments.of(Collections.emptyList(), null, Collections.emptyMap()),\n+               // (5) Get application without color suffix when previous deployed color is BLUE\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo\")),\n+               // (6) Get live application (foo-green) when foo and foo-blue exists\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, \n+                            MapUtil.asMap(\"module-1\", \"foo-green\"))\n+        // @formatter:on\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetLiveDeployedModule(List<Map<String, String>> deployedModulesNames, ApplicationColor deployedMtaColor,", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE1MDMxMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370150311", "body": "Can this module be null?", "bodyText": "Can this module be null?", "bodyHTML": "<p dir=\"auto\">Can this module be null?</p>", "author": "radito3", "createdAt": "2020-01-23T14:30:53Z", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.common.util.MapUtil;\n+\n+public class DeployedLiveModuleCalculatorTest {\n+\n+    private static Stream<Arguments> testGetLiveDeployedModule() {\n+        return Stream.of(\n+        // @formatter:off\n+               // (1) Get module-1 from deployed modules [module-1, module-2]\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-2\", \"bar-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo-blue\")),\n+               // (2) Get live application in case where both blue and green are deployed\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, MapUtil.asMap(\"module-1\", \"foo-green\")),\n+               // (3) Get module-2 from deployed modules [module-1, module-2] without colors\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-2\", \"bar\")), null, MapUtil.asMap(\"module-2\", \"bar\")),\n+               // (4) Test without deployed mta\n+               Arguments.of(Collections.emptyList(), null, Collections.emptyMap()),\n+               // (5) Get application without color suffix when previous deployed color is BLUE\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.BLUE, MapUtil.asMap(\"module-1\", \"foo\")),\n+               // (6) Get live application (foo-green) when foo and foo-blue exists\n+               Arguments.of(Arrays.asList(MapUtil.asMap(\"module-1\", \"foo\"), MapUtil.asMap(\"module-1\", \"foo-blue\"), MapUtil.asMap(\"module-1\", \"foo-green\")), ApplicationColor.GREEN, \n+                            MapUtil.asMap(\"module-1\", \"foo-green\"))\n+        // @formatter:on\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetLiveDeployedModule(List<Map<String, String>> deployedModulesNames, ApplicationColor deployedMtaColor,\n+                                          Map<String, String> expectedLiveDeployedModuleName) {\n+        DeployedMta deployedMta = buildDeployedMta(deployedModulesNames);\n+        DeployedMtaModule expectedDeployedModule = buildDeployedModule(expectedLiveDeployedModuleName);\n+        String moduleName = expectedDeployedModule != null ? expectedDeployedModule.getModuleName() : \"\";", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MTQ0NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370591445", "bodyText": "Yes, in case when you don't have deployed modules and tested method should return null", "author": "theghost5800", "createdAt": "2020-01-24T11:35:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE1MDMxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NTUxMA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370185510", "body": "I think this constant is better here, rather than in the calculator ", "bodyText": "I think this constant is better here, rather than in the calculator", "bodyHTML": "<p dir=\"auto\">I think this constant is better here, rather than in the calculator</p>", "author": "radito3", "createdAt": "2020-01-23T15:26:56Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/helpers/ApplicationColorDetector.java", "diffHunk": "@@ -104,7 +103,7 @@ private ApplicationColor getApplicationColor(DeployedMtaModule deployedMtaModule\n                      .filter(color -> deployedMtaModule.getAppName()\n                                                        .endsWith(color.asSuffix()))\n                      .findFirst()\n-                     .orElse(COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX);\n+                     .orElse(DeployedLiveModuleCalculator.COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX);", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5MTA5Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370591093", "bodyText": "The reason for moving is that DeployedModuleCalculator doesn't have dependency to cf.process package and can't access classes from cf.processes, so the constant should be moved somewhere where it could be accessible from cf.core and cf.processes packages.", "author": "theghost5800", "createdAt": "2020-01-24T11:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NTUxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4ODgyOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370188828", "body": "Add a builder.\r\nThis many arguments is a bit much", "bodyText": "Add a builder.\nThis many arguments is a bit much", "bodyHTML": "<p dir=\"auto\">Add a builder.<br>\nThis many arguments is a bit much</p>", "author": "radito3", "createdAt": "2020-01-23T15:32:08Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -58,19 +58,20 @@\n     protected final DeploymentDescriptor deploymentDescriptor;\r\n     protected final boolean prettyPrinting;\r\n     protected final ApplicationEnvironmentCloudModelBuilder applicationEnvCloudModelBuilder;\r\n-    protected final DeployedMta deployedMta;\r\n+    protected final DeployedLiveModuleCalculator deployedLiveModuleCalculator;\r\n     protected final UserMessageLogger stepLogger;\r\n \r\n     protected final ParametersChainBuilder parametersChainBuilder;\r\n \r\n-    public ApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting, DeployedMta deployedMta,\r\n-                                        String deployId, UserMessageLogger stepLogger) {\r\n+    public ApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting,\r", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxOTE1Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370619156", "bodyText": "I tried to use Immutables for builder but it will be need more time to refactor due to inheritence from V3 application cloud model builder.", "author": "theghost5800", "createdAt": "2020-01-24T12:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4ODgyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMzEzNA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370623134", "bodyText": "Then write a custom builder", "author": "radito3", "createdAt": "2020-01-24T13:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4ODgyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4OTI3OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370189278", "body": "Maybe a better name would be `LiveDeployedModuleCalculator`", "bodyText": "Maybe a better name would be LiveDeployedModuleCalculator", "bodyHTML": "<p dir=\"auto\">Maybe a better name would be <code>LiveDeployedModuleCalculator</code></p>", "author": "radito3", "createdAt": "2020-01-23T15:32:55Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedLiveModuleCalculator.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedLiveModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedLiveModuleCalculator(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {", "originalCommit": "44fb40a5942feec23455b7c7f3c888b78f1b241f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMDE1MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370620150", "body": "The public modifier is redundant in an interface", "bodyText": "The public modifier is redundant in an interface", "bodyHTML": "<p dir=\"auto\">The public modifier is redundant in an interface</p>", "author": "radito3", "createdAt": "2020-01-24T12:57:37Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedModuleCalculator.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public interface DeployedModuleCalculator {\n+\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName);", "originalCommit": "bc2f717e6da005ac9a4e23d04678af6cac1ba0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMjgwNw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370622807", "body": "The change to `DeployedModuleCalculator` is good but with the `Color` suffix, not so much.\r\nMy suggestion is name the concrete class something like `DeployedModuleCalculatorWithColor`", "bodyText": "The change to DeployedModuleCalculator is good but with the Color suffix, not so much.\nMy suggestion is name the concrete class something like DeployedModuleCalculatorWithColor", "bodyHTML": "<p dir=\"auto\">The change to <code>DeployedModuleCalculator</code> is good but with the <code>Color</code> suffix, not so much.<br>\nMy suggestion is name the concrete class something like <code>DeployedModuleCalculatorWithColor</code></p>", "author": "radito3", "createdAt": "2020-01-24T13:04:28Z", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/v2/CloudModelBuilderTest.java", "diffHunk": "@@ -23,7 +23,7 @@\n import com.sap.cloud.lm.sl.cf.client.lib.domain.CloudApplicationExtended;\n import com.sap.cloud.lm.sl.cf.client.lib.domain.CloudServiceExtended;\n import com.sap.cloud.lm.sl.cf.core.cf.HandlerFactory;\n-import com.sap.cloud.lm.sl.cf.core.cf.util.DeployedLiveModuleCalculator;\n+import com.sap.cloud.lm.sl.cf.core.cf.util.DeployedModuleCalculatorColor;", "originalCommit": "bc2f717e6da005ac9a4e23d04678af6cac1ba0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMzQyMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370623421", "body": "`doesAppNameHaveColorSuffix`", "bodyText": "doesAppNameHaveColorSuffix", "bodyHTML": "<p dir=\"auto\"><code>doesAppNameHaveColorSuffix</code></p>", "author": "radito3", "createdAt": "2020-01-24T13:05:58Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedModuleCalculatorColor.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedModuleCalculatorColor implements DeployedModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedModuleCalculatorColor(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    @Override\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        Stream<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                        .filter(deployedModule -> isModuleNameMatching(deployedModule,\n+                                                                                                                       moduleName));\n+\n+        if (deployedMtaColor != null) {\n+            return deployedModules.filter(this::hasDeployedModuleContainLiveColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.findFirst()\n+                              .orElse(null);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNameMatching(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean hasDeployedModuleContainLiveColor(DeployedMtaModule deployedModule) {\n+        String appName = deployedModule.getAppName();\n+        return appName.endsWith(deployedMtaColor.asSuffix())\n+            || (hasDeployedModuleContainColorWithoutSuffix(appName) && doesDeployedColorMatchColorWithoutSuffix());\n+    }\n+\n+    private boolean hasDeployedModuleContainColorWithoutSuffix(String appName) {", "originalCommit": "bc2f717e6da005ac9a4e23d04678af6cac1ba0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMzY2Nw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370623667", "body": "`doesDeployedModuleContainLiveColor`", "bodyText": "doesDeployedModuleContainLiveColor", "bodyHTML": "<p dir=\"auto\"><code>doesDeployedModuleContainLiveColor</code></p>", "author": "radito3", "createdAt": "2020-01-24T13:06:34Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedModuleCalculatorColor.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedModuleCalculatorColor implements DeployedModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedModuleCalculatorColor(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    @Override\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        Stream<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                        .filter(deployedModule -> isModuleNameMatching(deployedModule,\n+                                                                                                                       moduleName));\n+\n+        if (deployedMtaColor != null) {\n+            return deployedModules.filter(this::hasDeployedModuleContainLiveColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.findFirst()\n+                              .orElse(null);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {\n+        return deployedMta.getModules();\n+    }\n+\n+    private boolean isModuleNameMatching(DeployedMtaModule deployedModule, String moduleName) {\n+        return deployedModule.getModuleName()\n+                             .equalsIgnoreCase(moduleName);\n+    }\n+\n+    private boolean hasDeployedModuleContainLiveColor(DeployedMtaModule deployedModule) {", "originalCommit": "bc2f717e6da005ac9a4e23d04678af6cac1ba0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyNDEyMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r370624122", "body": "I don't think the amount of uses and length (as an expression) of `deployedMta.getModules` warrants the need for this method. Just use it normally and delete this ", "bodyText": "I don't think the amount of uses and length (as an expression) of deployedMta.getModules warrants the need for this method. Just use it normally and delete this", "bodyHTML": "<p dir=\"auto\">I don't think the amount of uses and length (as an expression) of <code>deployedMta.getModules</code> warrants the need for this method. Just use it normally and delete this</p>", "author": "radito3", "createdAt": "2020-01-24T13:07:45Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/util/DeployedModuleCalculatorColor.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.sap.cloud.lm.sl.cf.core.cf.util;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMta;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public class DeployedModuleCalculatorColor implements DeployedModuleCalculator {\n+\n+    public static final ApplicationColor COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX = ApplicationColor.BLUE;\n+\n+    private DeployedMta deployedMta;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    public DeployedModuleCalculatorColor(DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        this.deployedMta = deployedMta;\n+        this.deployedMtaColor = deployedMtaColor;\n+    }\n+\n+    @Override\n+    public DeployedMtaModule getLiveDeployedModule(String moduleName) {\n+        if (deployedMta == null) {\n+            return null;\n+        }\n+\n+        Stream<DeployedMtaModule> deployedModules = getDeployedModules().stream()\n+                                                                        .filter(deployedModule -> isModuleNameMatching(deployedModule,\n+                                                                                                                       moduleName));\n+\n+        if (deployedMtaColor != null) {\n+            return deployedModules.filter(this::hasDeployedModuleContainLiveColor)\n+                                  .findFirst()\n+                                  .orElse(null);\n+        }\n+\n+        return deployedModules.findFirst()\n+                              .orElse(null);\n+    }\n+\n+    private List<DeployedMtaModule> getDeployedModules() {", "originalCommit": "bc2f717e6da005ac9a4e23d04678af6cac1ba0df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2dc66c5ace63680bcc0651ea9c33330bcc16a7fa", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/2dc66c5ace63680bcc0651ea9c33330bcc16a7fa", "message": "Refactor 2", "committedDate": "2020-01-27T07:58:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1NjY0NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371756645", "body": "It is nice with boolean but could we make it with enum or?", "bodyText": "It is nice with boolean but could we make it with enum or?", "bodyHTML": "<p dir=\"auto\">It is nice with boolean but could we make it with enum or?</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T11:50:14Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/DeployedMtaModule.java", "diffHunk": "@@ -12,6 +12,7 @@\n     private List<String> services;\n     private List<String> providedDependencyNames;\n     private List<String> uris;\n+    private boolean isLive = true;", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1NjkzMA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371756930", "body": "typo applicatioN", "bodyText": "typo applicatioN", "bodyHTML": "<p dir=\"auto\">typo applicatioN</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T11:50:58Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/message/Messages.java", "diffHunk": "@@ -418,6 +418,7 @@\n     public static final String ARCHIVE_IS_VERIFIED = \"Archive signature is verified\";\r\n     public static final String CHECKING_FOR_OVERWRITING_READ_ONLY_PARAMETERS = \"Checking for overwriting read-only parameters for mta with id: \\\"{0}\\\"\";\r\n     public static final String NO_READ_ONLY_PARAMETERS_ARE_OVERWRITTEN = \"No read-only parameters are overwritten\";\r\n+    public static final String MARKED_MODULE_AS_IDLE = \"Module \\\"{0}\\\" with applicatio name \\\"{1}\\\" was marked as idle\";\r", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2NzY0Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371767646", "body": "Could we rename this method to doesDeployedModuleHaveIdleColor?", "bodyText": "Could we rename this method to doesDeployedModuleHaveIdleColor?", "bodyHTML": "<p dir=\"auto\">Could we rename this method to doesDeployedModuleHaveIdleColor?</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T12:16:54Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DeployedModuleCalculatorWithColor.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.cf.process.helpers.ApplicationColorDetector;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public class DeployedModuleCalculatorWithColor implements DeployedModuleCalculator {\n+\n+    private List<DeployedMtaModule> deployedModules;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    private StepLogger stepLogger;\n+\n+    public DeployedModuleCalculatorWithColor(List<DeployedMtaModule> deployedModules, ApplicationColor deployedMtaColor,\n+                                             StepLogger stepLogger) {\n+        this.deployedModules = deployedModules;\n+        this.deployedMtaColor = deployedMtaColor;\n+        this.stepLogger = stepLogger;\n+    }\n+\n+    @Override\n+    public List<DeployedMtaModule> updateIdleDeployedModules() {\n+        return deployedModules.stream()\n+                              .map(this::setIdleModules)\n+                              .collect(Collectors.toList());\n+    }\n+\n+    private DeployedMtaModule setIdleModules(DeployedMtaModule deployedModule) {\n+        if (doesDeployedModuleNotContainLiveColor(deployedModule)) {", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2OTgxNQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371769815", "body": "Calculator is used for calculating one thing from two or more other things.\r\nYour class is taking one set of modules and it is returning the same set.", "bodyText": "Calculator is used for calculating one thing from two or more other things.\nYour class is taking one set of modules and it is returning the same set.", "bodyHTML": "<p dir=\"auto\">Calculator is used for calculating one thing from two or more other things.<br>\nYour class is taking one set of modules and it is returning the same set.</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T12:21:58Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DeployedModuleCalculator.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public interface DeployedModuleCalculator {", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2OTk5OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371769998", "body": "Think of a better naming for this method", "bodyText": "Think of a better naming for this method", "bodyHTML": "<p dir=\"auto\">Think of a better naming for this method</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T12:22:23Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DeployedModuleCalculator.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+\n+public interface DeployedModuleCalculator {\n+\n+    List<DeployedMtaModule> updateIdleDeployedModules();", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MDA4NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371770084", "body": "Is this logic extensible?", "bodyText": "Is this logic extensible?", "bodyHTML": "<p dir=\"auto\">Is this logic extensible?</p>", "author": "enchobelezirev", "createdAt": "2020-01-28T12:22:37Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DeployedModuleCalculatorWithColor.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.cf.process.helpers.ApplicationColorDetector;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public class DeployedModuleCalculatorWithColor implements DeployedModuleCalculator {\n+\n+    private List<DeployedMtaModule> deployedModules;\n+\n+    private ApplicationColor deployedMtaColor;\n+\n+    private StepLogger stepLogger;\n+\n+    public DeployedModuleCalculatorWithColor(List<DeployedMtaModule> deployedModules, ApplicationColor deployedMtaColor,\n+                                             StepLogger stepLogger) {\n+        this.deployedModules = deployedModules;\n+        this.deployedMtaColor = deployedMtaColor;\n+        this.stepLogger = stepLogger;\n+    }\n+\n+    @Override\n+    public List<DeployedMtaModule> updateIdleDeployedModules() {\n+        return deployedModules.stream()\n+                              .map(this::setIdleModules)\n+                              .collect(Collectors.toList());\n+    }\n+\n+    private DeployedMtaModule setIdleModules(DeployedMtaModule deployedModule) {\n+        if (doesDeployedModuleNotContainLiveColor(deployedModule)) {\n+            deployedModule.setLive(false);\n+            stepLogger.debug(Messages.MARKED_MODULE_AS_IDLE, deployedModule.getModuleName(), deployedModule.getAppName());\n+        }\n+        return deployedModule;\n+    }\n+\n+    private boolean doesDeployedModuleNotContainLiveColor(DeployedMtaModule deployedModule) {\n+        String appName = deployedModule.getAppName();\n+        return !appName.endsWith(deployedMtaColor.asSuffix())\n+            && !(doesDeployedModuleContainColorWithoutSuffix(appName) && doesDeployedColorMatchColorWithoutSuffix());\n+    }\n+\n+    private boolean doesDeployedModuleContainColorWithoutSuffix(String appName) {\n+        return !appName.endsWith(ApplicationColor.BLUE.asSuffix()) && !appName.endsWith(ApplicationColor.GREEN.asSuffix());", "originalCommit": "305061f8d3ff34cacffbc44ed1d9a0d75690e45d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxMjc1OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371812759", "body": "Why rename from `find` to `get`?", "bodyText": "Why rename from find to get?", "bodyHTML": "<p dir=\"auto\">Why rename from <code>find</code> to <code>get</code>?</p>", "author": "nictas", "createdAt": "2020-01-28T13:51:10Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -128,16 +128,16 @@ private ApplicationUrisCloudModelBuilder getApplicationUrisCloudModelBuilder(Lis\n \r\n     public List<String> getApplicationUris(Module module) {\r\n         List<Map<String, Object>> parametersList = parametersChainBuilder.buildModuleChain(module.getName());\r\n-        DeployedMtaModule deployedModule = findDeployedModule(deployedMta, module);\r\n+        DeployedMtaModule deployedModule = getDeployedMtaModule(module);\r\n         return getApplicationUrisCloudModelBuilder(parametersList).getApplicationUris(module, parametersList, deployedModule);\r\n     }\r\n \r\n-    protected <R> R parseParameters(List<Map<String, Object>> parametersList, ParametersParser<R> parser) {\r\n-        return parser.parse(parametersList);\r\n+    private DeployedMtaModule getDeployedMtaModule(Module module) {\r", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxMzA0NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371813044", "body": "Why is this not configurable? Why can't I pass the `DeployedModuleLabel` I want?", "bodyText": "Why is this not configurable? Why can't I pass the DeployedModuleLabel I want?", "bodyHTML": "<p dir=\"auto\">Why is this not configurable? Why can't I pass the <code>DeployedModuleLabel</code> I want?</p>", "author": "nictas", "createdAt": "2020-01-28T13:51:37Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -128,16 +128,16 @@ private ApplicationUrisCloudModelBuilder getApplicationUrisCloudModelBuilder(Lis\n \r\n     public List<String> getApplicationUris(Module module) {\r\n         List<Map<String, Object>> parametersList = parametersChainBuilder.buildModuleChain(module.getName());\r\n-        DeployedMtaModule deployedModule = findDeployedModule(deployedMta, module);\r\n+        DeployedMtaModule deployedModule = getDeployedMtaModule(module);\r\n         return getApplicationUrisCloudModelBuilder(parametersList).getApplicationUris(module, parametersList, deployedModule);\r\n     }\r\n \r\n-    protected <R> R parseParameters(List<Map<String, Object>> parametersList, ParametersParser<R> parser) {\r\n-        return parser.parse(parametersList);\r\n+    private DeployedMtaModule getDeployedMtaModule(Module module) {\r\n+        return deployedMta == null ? null : deployedMta.findLiveDeployedModule(module.getName());\r", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNjkzMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371816931", "body": "Rename to `ProductizationState`.", "bodyText": "Rename to ProductizationState.", "bodyHTML": "<p dir=\"auto\">Rename to <code>ProductizationState</code>.</p>", "author": "nictas", "createdAt": "2020-01-28T13:58:56Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/DeployedModuleLabel.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.sap.cloud.lm.sl.cf.core.model;\n+\n+public enum DeployedModuleLabel {", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNzMxMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371817311", "body": "Redundant prefix.", "bodyText": "Redundant prefix.", "bodyHTML": "<p dir=\"auto\">Redundant prefix.</p>", "author": "nictas", "createdAt": "2020-01-28T13:59:36Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/DeployedMtaModule.java", "diffHunk": "@@ -55,6 +56,10 @@ public Date getUpdatedOn() {\n         return uris;\n     }\n \n+    public DeployedModuleLabel getDeployedModuleLabel() {", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNzY0OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371817649", "body": "The constant name suggests more generic message than the actual message is.", "bodyText": "The constant name suggests more generic message than the actual message is.", "bodyHTML": "<p dir=\"auto\">The constant name suggests more generic message than the actual message is.</p>", "author": "nictas", "createdAt": "2020-01-28T14:00:12Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/message/Messages.java", "diffHunk": "@@ -418,6 +418,7 @@\n     public static final String ARCHIVE_IS_VERIFIED = \"Archive signature is verified\";\r\n     public static final String CHECKING_FOR_OVERWRITING_READ_ONLY_PARAMETERS = \"Checking for overwriting read-only parameters for mta with id: \\\"{0}\\\"\";\r\n     public static final String NO_READ_ONLY_PARAMETERS_ARE_OVERWRITTEN = \"No read-only parameters are overwritten\";\r\n+    public static final String MODULE_WITH_APPLICATION_NAME_WAS_MARKED = \"Module \\\"{0}\\\" with application name \\\"{1}\\\" was marked as idle\";\r", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNzk1NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371817955", "body": "I need some explanation about this.", "bodyText": "I need some explanation about this.", "bodyHTML": "<p dir=\"auto\">I need some explanation about this.</p>", "author": "nictas", "createdAt": "2020-01-28T14:00:49Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/BlueGreenRenameStep.java", "diffHunk": "@@ -45,9 +49,12 @@ protected StepPhase executeStep(ExecutionWrapper execution) {\n             ApplicationColor liveMtaColor = getLiveApplicationColor(deployedMta, execution);\n             ApplicationColor idleMtaColor = liveMtaColor.getAlternativeColor();\n             getStepLogger().info(Messages.ASSUMED_LIVE_AND_IDLE_COLORS, liveMtaColor, idleMtaColor);\n+            deployedMtaColor = liveMtaColor;", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxODA1NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371818055", "body": "This.", "bodyText": "This.", "bodyHTML": "<p dir=\"auto\">This.</p>", "author": "nictas", "createdAt": "2020-01-28T14:01:03Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/BlueGreenRenameStep.java", "diffHunk": "@@ -68,6 +75,16 @@ private ApplicationColor getLiveApplicationColor(DeployedMta deployedMta, Execut\n                                                                                                   .getVariable(Constants.VAR_CORRELATION_ID));\n     }\n \n+    private void setIdleModules(ExecutionWrapper execution, DeployedMta deployedMta, ApplicationColor deployedMtaColor) {\n+        if (deployedMta != null && deployedMtaColor != null) {\n+            List<DeployedMtaModule> updatedModules = new DetermineDeployedModuleLabelBasedOnColor(deployedMta.getModules(),", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxODI1OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371818259", "body": "Using a verb for a class name.", "bodyText": "Using a verb for a class name.", "bodyHTML": "<p dir=\"auto\">Using a verb for a class name.</p>", "author": "nictas", "createdAt": "2020-01-28T14:01:26Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DetermineDeployedModuleLabel.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedModuleLabel;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public abstract class DetermineDeployedModuleLabel {", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxODM2OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371818369", "body": "The name of this method does not fit with the class.", "bodyText": "The name of this method does not fit with the class.", "bodyHTML": "<p dir=\"auto\">The name of this method does not fit with the class.</p>", "author": "nictas", "createdAt": "2020-01-28T14:01:39Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DetermineDeployedModuleLabel.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedModuleLabel;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public abstract class DetermineDeployedModuleLabel {\n+\n+    private List<DeployedMtaModule> deployedModules;\n+\n+    private StepLogger stepLogger;\n+\n+    public DetermineDeployedModuleLabel(List<DeployedMtaModule> deployedModules, StepLogger stepLogger) {\n+        this.deployedModules = deployedModules;\n+        this.stepLogger = stepLogger;\n+    }\n+\n+    public List<DeployedMtaModule> updateIdleDeployedModules() {", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxODQ2MQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r371818461", "body": "Setters should not return values.", "bodyText": "Setters should not return values.", "bodyHTML": "<p dir=\"auto\">Setters should not return values.</p>", "author": "nictas", "createdAt": "2020-01-28T14:01:53Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/DetermineDeployedModuleLabel.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaModule;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedModuleLabel;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public abstract class DetermineDeployedModuleLabel {\n+\n+    private List<DeployedMtaModule> deployedModules;\n+\n+    private StepLogger stepLogger;\n+\n+    public DetermineDeployedModuleLabel(List<DeployedMtaModule> deployedModules, StepLogger stepLogger) {\n+        this.deployedModules = deployedModules;\n+        this.stepLogger = stepLogger;\n+    }\n+\n+    public List<DeployedMtaModule> updateIdleDeployedModules() {\n+        return deployedModules.stream()\n+                              .map(this::setIdleModules)\n+                              .collect(Collectors.toList());\n+    }\n+\n+    private DeployedMtaModule setIdleModules(DeployedMtaModule deployedModule) {", "originalCommit": "da914a32db7dd8a800b2b488eadba2fe559b6b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "702a0da8c0a42eaa3fa59568280f2da478fca654", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/702a0da8c0a42eaa3fa59568280f2da478fca654", "message": "Fix determine of live application color\n\nIn case where live and idle application are deployed and live application is not the older one could reflect to\nupdate the live application instead of idle application. This leads to\ndowntime of productive application.\n\nJIRA:LMCROSSITXSADEPLOY-1875", "committedDate": "2020-01-28T15:31:50Z", "type": "commit"}, {"oid": "b0070c9969164f64e7042d2f9234ef72848e3612", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/b0070c9969164f64e7042d2f9234ef72848e3612", "message": "Big Refactor", "committedDate": "2020-01-28T16:37:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0Mzc5Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372243796", "body": "Remove `Live` from the name of the method.", "bodyText": "Remove Live from the name of the method.", "bodyHTML": "<p dir=\"auto\">Remove <code>Live</code> from the name of the method.</p>", "author": "nictas", "createdAt": "2020-01-29T08:25:38Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationCloudModelBuilder.java", "diffHunk": "@@ -128,16 +128,17 @@ private ApplicationUrisCloudModelBuilder getApplicationUrisCloudModelBuilder(Lis\n \r\n     public List<String> getApplicationUris(Module module) {\r\n         List<Map<String, Object>> parametersList = parametersChainBuilder.buildModuleChain(module.getName());\r\n-        DeployedMtaModule deployedModule = findDeployedModule(deployedMta, module);\r\n+        DeployedMtaApplication deployedModule = findDeployedMtaModule(module);\r\n         return getApplicationUrisCloudModelBuilder(parametersList).getApplicationUris(module, parametersList, deployedModule);\r\n     }\r\n \r\n-    protected <R> R parseParameters(List<Map<String, Object>> parametersList, ParametersParser<R> parser) {\r\n-        return parser.parse(parametersList);\r\n+    private DeployedMtaApplication findDeployedMtaModule(Module module) {\r\n+        return deployedMta == null ? null\r\n+            : deployedMta.findLiveApplication(module.getName(), DeployedMtaApplication.ProductizationState.LIVE);\r", "originalCommit": "b0070c9969164f64e7042d2f9234ef72848e3612", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NDEyMw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372244123", "body": "These are two separate checks. Use two filter() calls in the method above.", "bodyText": "These are two separate checks. Use two filter() calls in the method above.", "bodyHTML": "<p dir=\"auto\">These are two separate checks. Use two filter() calls in the method above.</p>", "author": "nictas", "createdAt": "2020-01-29T08:26:34Z", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/DeployedMta.java", "diffHunk": "@@ -63,12 +65,17 @@ public boolean equals(Object object) {\n         return Objects.equals(metadata, other.metadata);\r\n     }\r\n \r\n-    public DeployedMtaModule findDeployedModule(String moduleName) {\r\n+    public DeployedMtaApplication findLiveApplication(String moduleName, DeployedMtaApplication.ProductizationState state) {\r\n         return getModules().stream()\r\n-                           .filter(module -> module.getModuleName()\r\n-                                                   .equalsIgnoreCase(moduleName))\r\n+                           .filter(deployedApplication -> doesDeployedApplicationMatch(moduleName, deployedApplication, state))\r\n                            .findFirst()\r\n                            .orElse(null);\r\n     }\r\n \r\n+    private boolean doesDeployedApplicationMatch(String moduleName, DeployedMtaApplication deployedApplication, ProductizationState state) {\r\n+        return deployedApplication.getModuleName()\r", "originalCommit": "b0070c9969164f64e7042d2f9234ef72848e3612", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4MzY2Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372283662", "bodyText": "fixed", "author": "theghost5800", "createdAt": "2020-01-29T09:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NDEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NTEwNQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372245105", "body": "Why do we still need this check?", "bodyText": "Why do we still need this check?", "bodyHTML": "<p dir=\"auto\">Why do we still need this check?</p>", "author": "nictas", "createdAt": "2020-01-29T08:28:56Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ApplicationProductizationStateUpdaterColor.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaApplication;\n+import com.sap.cloud.lm.sl.cf.core.util.CloudModelBuilderUtil;\n+\n+public class ApplicationProductizationStateUpdaterColor extends ApplicationProductizationStateUpdater {\n+\n+    private ApplicationColor liveMtaColor;\n+\n+    public ApplicationProductizationStateUpdaterColor(List<DeployedMtaApplication> deployedApplications, ApplicationColor liveMtaColor,\n+                                                    StepLogger stepLogger) {\n+        super(deployedApplications, stepLogger);\n+        this.liveMtaColor = liveMtaColor;\n+    }\n+\n+    @Override\n+    protected boolean doesDeployedApplicationHasIdleLabel(DeployedMtaApplication deployedApplication) {\n+        String appName = deployedApplication.getAppName();\n+        return !(appName.endsWith(liveMtaColor.asSuffix())", "originalCommit": "b0070c9969164f64e7042d2f9234ef72848e3612", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NTIxOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372245218", "body": "Shouldn't this be negated?", "bodyText": "Shouldn't this be negated?", "bodyHTML": "<p dir=\"auto\">Shouldn't this be negated?</p>", "author": "nictas", "createdAt": "2020-01-29T08:29:14Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ApplicationProductizationStateUpdaterColor.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.ApplicationColor;\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaApplication;\n+import com.sap.cloud.lm.sl.cf.core.util.CloudModelBuilderUtil;\n+\n+public class ApplicationProductizationStateUpdaterColor extends ApplicationProductizationStateUpdater {\n+\n+    private ApplicationColor liveMtaColor;\n+\n+    public ApplicationProductizationStateUpdaterColor(List<DeployedMtaApplication> deployedApplications, ApplicationColor liveMtaColor,\n+                                                    StepLogger stepLogger) {\n+        super(deployedApplications, stepLogger);\n+        this.liveMtaColor = liveMtaColor;\n+    }\n+\n+    @Override\n+    protected boolean doesDeployedApplicationHasIdleLabel(DeployedMtaApplication deployedApplication) {\n+        String appName = deployedApplication.getAppName();\n+        return !(appName.endsWith(liveMtaColor.asSuffix())\n+            || CloudModelBuilderUtil.getApplicationColor(deployedApplication) == liveMtaColor);", "originalCommit": "b0070c9969164f64e7042d2f9234ef72848e3612", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2MzA0NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372263045", "body": "Why do we need `Color` at the end of the class name?", "bodyText": "Why do we need Color at the end of the class name?", "bodyHTML": "<p dir=\"auto\">Why do we need <code>Color</code> at the end of the class name?</p>", "author": "nictas", "createdAt": "2020-01-29T09:10:32Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/BlueGreenRenameStep.java", "diffHunk": "@@ -68,6 +70,16 @@ private ApplicationColor getLiveApplicationColor(DeployedMta deployedMta, Execut\n                                                                                                   .getVariable(Constants.VAR_CORRELATION_ID));\n     }\n \n+    private void setIdleModules(ExecutionWrapper execution, DeployedMta deployedMta, ApplicationColor liveMtaColor) {\n+        if (deployedMta != null && liveMtaColor != null) {\n+            List<DeployedMtaApplication> updatedModules = new ApplicationProductizationStateUpdaterColor(deployedMta.getModules(),", "originalCommit": "054a50eb742c8d90409aa6e72be04970ffc8ca7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NDA4Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372264086", "body": "This state is only used in the `updateIdleDeployedApplications` method. Why not pass it as an argument to the method itself?", "bodyText": "This state is only used in the updateIdleDeployedApplications method. Why not pass it as an argument to the method itself?", "bodyHTML": "<p dir=\"auto\">This state is only used in the <code>updateIdleDeployedApplications</code> method. Why not pass it as an argument to the method itself?</p>", "author": "nictas", "createdAt": "2020-01-29T09:12:47Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ApplicationProductizationStateUpdater.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaApplication;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public abstract class ApplicationProductizationStateUpdater {\n+\n+    private List<DeployedMtaApplication> deployedModules;", "originalCommit": "054a50eb742c8d90409aa6e72be04970ffc8ca7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NDI3Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/734#discussion_r372264273", "body": "The name of this method still does not match the name of the class.", "bodyText": "The name of this method still does not match the name of the class.", "bodyHTML": "<p dir=\"auto\">The name of this method still does not match the name of the class.</p>", "author": "nictas", "createdAt": "2020-01-29T09:13:11Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ApplicationProductizationStateUpdater.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.DeployedMtaApplication;\n+import com.sap.cloud.lm.sl.cf.process.message.Messages;\n+\n+public abstract class ApplicationProductizationStateUpdater {\n+\n+    private List<DeployedMtaApplication> deployedModules;\n+\n+    private StepLogger stepLogger;\n+\n+    public ApplicationProductizationStateUpdater(List<DeployedMtaApplication> deployedModules, StepLogger stepLogger) {\n+        this.deployedModules = deployedModules;\n+        this.stepLogger = stepLogger;\n+    }\n+\n+    public List<DeployedMtaApplication> updateIdleDeployedApplications() {", "originalCommit": "054a50eb742c8d90409aa6e72be04970ffc8ca7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cdc532ab841d5a071ddcdbebdc4abfdcc3edb404", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/cdc532ab841d5a071ddcdbebdc4abfdcc3edb404", "message": "Rename part 2", "committedDate": "2020-01-29T12:57:37Z", "type": "forcePushed"}, {"oid": "3555415fcf20b9de422dae2dcaa01bd78a37b46d", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/3555415fcf20b9de422dae2dcaa01bd78a37b46d", "message": "Fix getting live application routes on bg-deploy\n\nJIRA:LMCROSSITXSADEPLOY-1875", "committedDate": "2020-01-29T13:13:36Z", "type": "commit"}, {"oid": "3555415fcf20b9de422dae2dcaa01bd78a37b46d", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/3555415fcf20b9de422dae2dcaa01bd78a37b46d", "message": "Fix getting live application routes on bg-deploy\n\nJIRA:LMCROSSITXSADEPLOY-1875", "committedDate": "2020-01-29T13:13:36Z", "type": "forcePushed"}]}