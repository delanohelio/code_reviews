{"pr_number": 789, "pr_title": "fixes #750 Re-enable AuditBean in Embedded, Filter out shaded guava c\u2026", "pr_author": "billoley", "pr_createdAt": "2020-03-23T14:17:31Z", "pr_url": "https://github.com/NationalSecurityAgency/datawave/pull/789", "timeline": [{"oid": "1dc424506498cddc3ccdbba84104e502fdb3da79", "url": "https://github.com/NationalSecurityAgency/datawave/commit/1dc424506498cddc3ccdbba84104e502fdb3da79", "message": "fixes #750 Re-enable AuditBean in Embedded, Filter out shaded guava classes from jboss-client.jar while writing to job distributed cache", "committedDate": "2020-03-20T21:01:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxOTcxNw==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396519717", "body": "Not required, but you can simplify this quite a bit with streams...\r\n```suggestion\r\n                        final String entryName = zipEntry.getName();\r\n                        if (patterns.stream().noneMatch(p -> p.matcher(entryName).matches())) {\r\n```", "bodyText": "Not required, but you can simplify this quite a bit with streams...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    boolean include = true;\n          \n          \n            \n                                    Iterator<Pattern> patternItr = patterns.iterator();\n          \n          \n            \n                                    while (patternItr.hasNext() && include == true) {\n          \n          \n            \n                                        Pattern p = patternItr.next();\n          \n          \n            \n                                        if (p.matcher(zipEntry.getName()).matches()) {\n          \n          \n            \n                                            include = false;\n          \n          \n            \n                                        }\n          \n          \n            \n                                    }\n          \n          \n            \n                                    if (include) {\n          \n          \n            \n                                    final String entryName = zipEntry.getName();\n          \n          \n            \n                                    if (patterns.stream().noneMatch(p -> p.matcher(entryName).matches())) {", "bodyHTML": "<p dir=\"auto\">Not required, but you can simplify this quite a bit with streams...</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">boolean</span> include <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">Iterator&lt;<span class=\"pl-smi\">Pattern</span>&gt;</span> patternItr <span class=\"pl-k\">=</span> patterns<span class=\"pl-k\">.</span>iterator();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">while</span> (patternItr<span class=\"pl-k\">.</span>hasNext() <span class=\"pl-k\">&amp;&amp;</span> include <span class=\"pl-k\">==</span> <span class=\"pl-c1\">true</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-smi\">Pattern</span> p <span class=\"pl-k\">=</span> patternItr<span class=\"pl-k\">.</span>next();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">if</span> (p<span class=\"pl-k\">.</span>matcher(zipEntry<span class=\"pl-k\">.</span>getName())<span class=\"pl-k\">.</span>matches()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                include <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">if</span> (include) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> entryName <span class=\"pl-k\">=</span> zipEntry<span class=\"pl-k\">.</span>getName();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">if</span> (patterns<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>noneMatch(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> p<span class=\"pl-k\">.</span>matcher(entryName)<span class=\"pl-k\">.</span>matches())) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "brianloss", "createdAt": "2020-03-23T15:04:53Z", "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -302,6 +316,40 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         exportSystemProperties(jobId, job, fs, classpath);\n     }\n     \n+    private File filterJar(File source, List<Pattern> patterns) {\n+        File f = null;\n+        try {\n+            f = File.createTempFile(source.getName() + \".\", \"\");\n+            try (FileOutputStream fos = new FileOutputStream(f); ZipOutputStream zipOutputStream = new ZipOutputStream(fos)) {\n+                try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(source))) {\n+                    for (ZipEntry zipEntry = zipInputStream.getNextEntry(); zipEntry != null; zipEntry = zipInputStream.getNextEntry()) {\n+                        boolean include = true;\n+                        Iterator<Pattern> patternItr = patterns.iterator();\n+                        while (patternItr.hasNext() && include == true) {\n+                            Pattern p = patternItr.next();\n+                            if (p.matcher(zipEntry.getName()).matches()) {\n+                                include = false;\n+                            }\n+                        }\n+                        if (include) {", "originalCommit": "1dc424506498cddc3ccdbba84104e502fdb3da79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTk5OQ==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396521999", "body": "Another way...\r\n```suggestion\r\n                            ByteStreams.copy(zipInputStream, zipOutputStream);\r\n```", "bodyText": "Another way...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        byte[] buffer = new byte[2048];\n          \n          \n            \n                                        int len;\n          \n          \n            \n                                        while ((len = zipInputStream.read(buffer)) > 0) {\n          \n          \n            \n                                            zipOutputStream.write(buffer, 0, len);\n          \n          \n            \n                                        }\n          \n          \n            \n                                        ByteStreams.copy(zipInputStream, zipOutputStream);", "bodyHTML": "<p dir=\"auto\">Another way...</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">byte</span>[] buffer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">2048</span>];</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">int</span> len;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">while</span> ((len <span class=\"pl-k\">=</span> zipInputStream<span class=\"pl-k\">.</span>read(buffer)) <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                zipOutputStream<span class=\"pl-k\">.</span>write(buffer, <span class=\"pl-c1\">0</span>, len);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-smi\">ByteStreams</span><span class=\"pl-k\">.</span>copy(zipInputStream, zipOutputStream);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "brianloss", "createdAt": "2020-03-23T15:08:03Z", "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -302,6 +316,40 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         exportSystemProperties(jobId, job, fs, classpath);\n     }\n     \n+    private File filterJar(File source, List<Pattern> patterns) {\n+        File f = null;\n+        try {\n+            f = File.createTempFile(source.getName() + \".\", \"\");\n+            try (FileOutputStream fos = new FileOutputStream(f); ZipOutputStream zipOutputStream = new ZipOutputStream(fos)) {\n+                try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(source))) {\n+                    for (ZipEntry zipEntry = zipInputStream.getNextEntry(); zipEntry != null; zipEntry = zipInputStream.getNextEntry()) {\n+                        boolean include = true;\n+                        Iterator<Pattern> patternItr = patterns.iterator();\n+                        while (patternItr.hasNext() && include == true) {\n+                            Pattern p = patternItr.next();\n+                            if (p.matcher(zipEntry.getName()).matches()) {\n+                                include = false;\n+                            }\n+                        }\n+                        if (include) {\n+                            zipOutputStream.putNextEntry(zipEntry);\n+                            byte[] buffer = new byte[2048];\n+                            int len;\n+                            while ((len = zipInputStream.read(buffer)) > 0) {\n+                                zipOutputStream.write(buffer, 0, len);\n+                            }", "originalCommit": "1dc424506498cddc3ccdbba84104e502fdb3da79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NDA4Ng==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396574086", "bodyText": "Thanks for the suggestions.  This way is much cleaner.  It took me a while to figure out the Zip(Input/Output)Stream semantics and I didn't circle back to clean it up.\nOh the irony that we are using a guava class in the wildfly jvm to remove the wildfly classes from a shaded jar.  I combined both suggestions and pushed a commit.", "author": "billoley", "createdAt": "2020-03-23T16:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NDg2NQ==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396574865", "bodyText": "Figured you'd appreciate that. ;)", "author": "brianloss", "createdAt": "2020-03-23T16:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTk5OQ=="}], "type": "inlineReview"}, {"oid": "53bee4e8e0291ab1394996861c420d318244fde7", "url": "https://github.com/NationalSecurityAgency/datawave/commit/53bee4e8e0291ab1394996861c420d318244fde7", "message": "fixes #750 Simplify pattern interation and stream copy", "committedDate": "2020-03-23T16:11:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2NTA2NA==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396765064", "body": "ugh, but ok for now I guess....", "bodyText": "ugh, but ok for now I guess....", "bodyHTML": "<p dir=\"auto\">ugh, but ok for now I guess....</p>", "author": "ivakegg", "createdAt": "2020-03-23T21:22:57Z", "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -284,7 +288,17 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         File[] jarFiles = libDir.listFiles(jarFilter);\n         if (jarFiles != null) {\n             for (File jar : jarFiles) {\n-                addSingleFile(jar, new Path(classpath, jar.getName()), jobId, job, fs);\n+                // remove guava classes from jboss-client.jar\n+                if (jar.getName().equals(\"jboss-client.jar\")) {\n+                    List<Pattern> patterns = new ArrayList<>();", "originalCommit": "53bee4e8e0291ab1394996861c420d318244fde7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4Mjc2MQ==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396782761", "bodyText": "I know, but the alternative is storing a modified version of that file in our version control.  That's not great either.  The dependency is needed for our MapReduce jobs to run, but because of the inability to order the user classpath to the job we have to eliminate the newer guava classes that are shaded into that jar.\nI considered adding configuration to take care of this (which jar to transfer, which regexes to filter out).  I can do that later.  The java would be cleaner at least.   I ran out of time at the end of the week and this will work for now.", "author": "billoley", "createdAt": "2020-03-23T22:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2NTA2NA=="}], "type": "inlineReview"}]}