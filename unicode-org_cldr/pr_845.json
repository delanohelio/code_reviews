{"pr_number": 845, "pr_title": "CLDR-8802 Fetch DBPedia abstracts, show in info panel", "pr_author": "srl295", "pr_createdAt": "2020-11-16T20:18:41Z", "pr_url": "https://github.com/unicode-org/cldr/pull/845", "merge_commit": "f7d6d55ca3073b209d3bf2dd9fcf15d28c259e16", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzAzNw==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524583037", "body": "Since processRequest is already over 700 lines, this block should definitely go in a subroutine", "bodyText": "Since processRequest is already over 700 lines, this block should definitely go in a subroutine", "bodyHTML": "<p dir=\"auto\">Since processRequest is already over 700 lines, this block should definitely go in a subroutine</p>", "author": "btangmu", "createdAt": "2020-11-16T21:09:12Z", "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java", "diffHunk": "@@ -1039,6 +1050,34 @@ public CheckCLDR handleCheck(String path, String fullPath, String value, Options\n                 final JSONWriter r = newJSONStatusQuick(sm);\n                 r.put(\"locmap\", getJSONLocMap(sm));\n                 send(r, out);\n+            } else if(what.equals(WHAT_ABSTRACT)) {\n+                if(xpath == null || xpath.isEmpty()) {", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "changed_code": [{"header": "diff --git a/tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java b/tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java\nindex efde22abe0..401a57cab0 100644\n--- a/tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java\n+++ b/tools/cldr-apps/src/main/java/org/unicode/cldr/web/SurveyAjax.java\n", "chunk": "@@ -1051,33 +1051,7 @@ public class SurveyAjax extends HttpServlet {\n                 r.put(\"locmap\", getJSONLocMap(sm));\n                 send(r, out);\n             } else if(what.equals(WHAT_ABSTRACT)) {\n-                if(xpath == null || xpath.isEmpty()) {\n-                    sendError(out, \"Missing xpath parameter\", ErrorCode.E_INTERNAL);\n-                } else {\n-                    if(!xpath.startsWith(\"//\")) { // If not a string xpath\n-                        String xp = sm.xpt.getByStringID(xpath); // lookup by hex\n-                        if(xp != null) xpath = xp;\n-                    }\n-                    final JSONWriter r = newJSONStatusQuick(sm);\n-                    AbstractResult abstractResult = AbstractCache.getInstance().abstractFor(xpath);\n-                    \n-                    String helpHtml = sm.getTranslationHintsExample().getHelpHtml(xpath, sm.getTranslationHintsFile().getStringValue(xpath));\n-                    \n-                    if(abstractResult == null && helpHtml == null) {\n-                        response.sendError(404, \"No help found for \" + xpath);\n-                    } else {\n-                        response.addHeader(\"Cache-Control\", \"public, max-age=86400\"); // allow to cache for 1 day\n-                        if(abstractResult != null) {\n-                            response.setDateHeader(\"Last-Modified\", abstractResult.getContentDate().toEpochMilli());\n-                            response.addHeader(\"Content-Location\", abstractResult.getResourceUri());\n-                            r.put(\"abstract\", JSONWriter.wrap(abstractResult));\n-                        }\n-                        if(helpHtml != null) {\n-                            r.put(\"helpHtml\", helpHtml);\n-                        }\n-                        send(r, out);\n-                    }\n-                }\n+                handleSendAbstract(response, sm, out, xpath);\n             } else {\n                 sendError(out, \"Unknown Request: \" + what, ErrorCode.E_INTERNAL);\n             }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDUzMg==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524604532", "body": "Is this boilerplate comment generated by Eclipse?", "bodyText": "Is this boilerplate comment generated by Eclipse?", "bodyHTML": "<p dir=\"auto\">Is this boilerplate comment generated by Eclipse?</p>", "author": "btangmu", "createdAt": "2020-11-16T21:28:33Z", "path": "tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxNDE3OA==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524614178", "bodyText": "by netbeans, but yes", "author": "srl295", "createdAt": "2020-11-16T21:36:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNDUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "changed_code": [{"header": "diff --git a/tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java b/tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java\nindex c7b7b7116f..dcdcd55267 100644\n--- a/tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java\n+++ b/tools/cldr-code/src/main/java/org/unicode/cldr/util/abstracts/AbstractCache.java\n", "chunk": "@@ -1,8 +1,6 @@\n-/*\n- * To change this license header, choose License Headers in Project Properties.\n- * To change this template file, choose Tools | Templates\n- * and open the template in the editor.\n- */\n+// \u00a9 2020 and later: Unicode, Inc. and others.\n+// License & terms of use: http://www.unicode.org/copyright.html\n+\n package org.unicode.cldr.util.abstracts;\n \n import com.google.common.io.Files;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY0MTc5Ng==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r524641796", "body": "O_LANGUAGE thru SPARQL_SERVER could be private?", "bodyText": "O_LANGUAGE thru SPARQL_SERVER could be private?", "bodyHTML": "<p dir=\"auto\">O_LANGUAGE thru SPARQL_SERVER could be private?</p>", "author": "btangmu", "createdAt": "2020-11-16T21:57:05Z", "path": "tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.unicode.cldr.rdf.tool;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.apache.jena.arq.querybuilder.SelectBuilder;\n+import org.apache.jena.query.Query;\n+import org.apache.jena.query.QueryExecutionFactory;\n+import org.apache.jena.query.QuerySolution;\n+import org.apache.jena.query.ResultSet;\n+import org.apache.jena.sparql.engine.http.QueryEngineHTTP;\n+import org.apache.jena.sparql.lang.sparql_11.ParseException;\n+import org.unicode.cldr.util.Pair;\n+\n+class FetchAbstracts {\n+    public static void main(String args[]) throws ParseException {\n+        final String code = \"grc\";\n+        Pair<String, String> abs = getInstance().fetchLanguageAbstract(code);\n+        System.out.println(abs.getFirst());\n+        System.out.println(code + \": \" + abs.getSecond());\n+    }\n+    \n+    final static class FetchAbstractsHelper {\n+        private static FetchAbstracts INSTANCE = new FetchAbstracts();\n+    }\n+    \n+    public static final FetchAbstracts getInstance() {\n+        return FetchAbstractsHelper.INSTANCE;\n+    }\n+\n+    public Pair<String, String> fetchLanguageAbstract(final String code) {\n+        Pair<String,String> abs = null;\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_1, code, \"en\");\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_2, code, \"en\");\n+        if(abs == null) abs = new FetchAbstracts().getAbstract(O_LANGUAGE, DBO_639_3, code, \"en\");\n+        return abs;\n+    }\n+\n+    \n+    public Pair<String,String> getAbstract(final String resType, final String codeKeyword, final String codeValue, final String abstractLang) {\n+        try {\n+            SelectBuilder builder = new SelectBuilder()\n+//                .addPrefixes(PrefixMapping.Extended)\n+                    .addPrefix(\"dbo\", \"http://dbpedia.org/ontology/\")\n+                    .addVar(\"*\")\n+                    .addWhere(O_LANGUAGE, codeKeyword, codeValue)\n+                    .addWhere( O_LANGUAGE, \"dbo:abstract\", \"?abstract\")\n+                    .addFilter(\"langMatches(lang(?abstract),\\\"\"+abstractLang+\"\\\")\")\n+                    ;\n+            \n+            Query q = builder.build();\n+            System.err.println(\"Query: \" + codeKeyword+\"=\"+codeValue);\n+            //        System.out.println(builder.buildString());\n+            QueryEngineHTTP qEngine = QueryExecutionFactory.createServiceRequest(SPARQL_SERVER, q);\n+            //        qEngine.setHttpContext(httpContext);\n+            ResultSet results = qEngine.execSelect();\n+            while(results.hasNext()) {\n+                QuerySolution qs = results.next();\n+                //            System.out.println(qs.toString());\n+//            for(Iterator<String> iter = qs.varNames(); iter.hasNext();) {\n+                //                System.out.println(\"v=\" + iter.next());\n+                //            }\n+                String rv = qs.getLiteral(\"abstract\").getString();\n+                String rs = qs.getResource(resType.substring(1)).getURI();\n+                //            System.out.println(rv);\n+                return Pair.of(rs, rv);\n+            }\n+            System.err.println(\" -> no result\");\n+            return null;\n+        } catch (ParseException ex) {\n+            Logger.getLogger(FetchAbstracts.class.getName()).log(Level.SEVERE, null, ex);\n+            return null;\n+        }\n+    }\n+\n+    public static final String O_LANGUAGE = \"?language\";\n+    public static final String DBO_639_3 = \"dbo:iso6393Code\";\n+    public static final String DBO_639_2 = \"dbo:iso6392Code\";\n+    public static final String DBO_639_1 = \"dbo:iso6391Code\";\n+    public static final String SPARQL_SERVER = \"https://dbpedia.org/sparql/\";", "originalCommit": "31bd27a0aebe338a4f024c07f982566ce37cf6b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MjM1OQ==", "url": "https://github.com/unicode-org/cldr/pull/845#discussion_r525372359", "bodyText": "this was refactored, but yes", "author": "srl295", "createdAt": "2020-11-17T18:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY0MTc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "changed_code": [{"header": "diff --git a/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java b/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\nindex a7a18f515e..cffab32781 100644\n--- a/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\n+++ b/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\n", "chunk": "@@ -71,23 +60,58 @@ class FetchAbstracts {\n             return null;\n         }\n     }\n+    public static final String DEFAULT_CLDR_SPARQL_SERVER = \"https://dbpedia.org/sparql/\";\n \n-    public static final String O_LANGUAGE = \"?language\";\n-    public static final String DBO_639_3 = \"dbo:iso6393Code\";\n-    public static final String DBO_639_2 = \"dbo:iso6392Code\";\n-    public static final String DBO_639_1 = \"dbo:iso6391Code\";\n-    public static final String SPARQL_SERVER = \"https://dbpedia.org/sparql/\";\n+    public static final String SPARQL_SERVER = System.getProperty(\"CLDR_SPARQL_SERVER\", DEFAULT_CLDR_SPARQL_SERVER);\n+    \n+    public ResultSet queryLanguageResources() throws ParseException {\n+        final String resType = \"?language\";\n+            SelectBuilder builder = new SelectBuilder()\n+                    .addPrefix(\"dbo\", PREFIX_DBO)\n+                    .addPrefix(\"dbr\", PREFIX_DBR)\n+                    .addPrefix(\"rdf\", PREFIX_RDF)\n+//                    .addPrefix(\"plg\", PREFIX_PLG)\n+                    .addVar(\"*\")\n+                    .addWhere(resType, \"rdf:type\", \"dbo:Language\")\n+                    .addWhere(resType, \"<\"+PREFIX_PLG+\"hypernym\"+\">\", \"dbr:Language\") // Only language (not dialect etc)\n+                    .addOptional(resType, \"dbo:iso6392Code\", \"?iso6392\")\n+                    .addOptional(resType, \"dbo:iso6391Code\", \"?iso6391\")\n+//                    .addOptional(resType, \"dbo:iso6393Code\", \"?iso6393\") \n+                    \n+                    .addWhere( resType, \"dbo:abstract\", \"?abstract\")\n+                    .addFilter(\"langMatches(lang(?abstract),\\\"\"+abstractLang+\"\\\")\")\n+                    .addFilter(\"(?iso6391 || ?iso6392 \"\n+//                            + \"|| ?iso6393\"\n+                            + \") && \"\n+                            + \"(?iso6391 != 'none' && ?iso6392 != 'none' \"\n+//                            + \"&& ?iso6393 != 'none'\"\n+                            + \")\")\n+//                    .setLimit(3)\n+                    ;\n+        Query q = builder.build();\n+        System.out.println(builder.buildString());\n+        QueryEngineHTTP qEngine = QueryExecutionFactory.createServiceRequest(SPARQL_SERVER, q);\n+        // qEngine.setHttpContext(httpContext);\n+        ResultSet results = qEngine.execSelect();\n+        return results;\n+    }\n+    public static final String PREFIX_PLG = \"http://purl.org/linguistics/gold/\";\n+    public static final String PREFIX_RDF = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n+    public static final String PREFIX_DBO = \"http://dbpedia.org/ontology/\";\n+    public static final String PREFIX_DBP = \"http://dbpedia.org/property/\";\n+    public static final String PREFIX_DBR = \"http://dbpedia.org/resource/\";\n+    public static final String abstractLang = \"en\"; // for now\n+    \n+    public static final String getStringOrNull(final QuerySolution qs, final String k) {\n+        final Literal l = qs.getLiteral(k);\n+        if(l == null) return null;\n+        return l.getString();\n+    }\n+    public static final String getResourceOrNull(final QuerySolution qs, final String k) {\n+        final Resource l = qs.getResource(k);\n+        if(l == null) return null;\n+        return l.getURI();\n+    }\n }\n \n-/*\n-\n-PREFIX dbo: <http://dbpedia.org/ontology/>\n-\n-select *\n-WHERE {\n-  ?language dbo:iso6393Code \"ssy\" .\n-  ?language dbo:abstract ?abstract\n-   filter langMatches(lang(?abstract),\"en\")\n-}\n \n- */\n\\ No newline at end of file\n", "next_change": {"commit": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "changed_code": [{"header": "diff --git a/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java b/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\nindex cffab32781..f917761786 100644\n--- a/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\n+++ b/tools/cldr-rdf/src/main/java/org/unicode/cldr/rdf/tool/FetchAbstracts.java\n", "chunk": "@@ -112,6 +112,16 @@ class FetchAbstracts {\n         if(l == null) return null;\n         return l.getURI();\n     }\n+    \n+    \n+    /**\n+     * Update all data\n+     * @param args\n+     * @throws ParseException\n+     */\n+    public static void main(String args[]) throws ParseException {\n+    \tLanguageProvider.updateLanguages();\n+    }\n }\n \n \n", "next_change": null}]}}]}}, {"oid": "fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "url": "https://github.com/unicode-org/cldr/commit/fb4483baeab4b4c76ceec522bcf6993d9d5efd25", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.", "committedDate": "2020-11-17T16:59:07Z", "type": "forcePushed"}, {"oid": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "url": "https://github.com/unicode-org/cldr/commit/b0d2132bac86be7689ecfe4b9066d7152976a47f", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.\n- moved deferred help into js/CldrDeferredHelp.js", "committedDate": "2020-11-18T00:04:25Z", "type": "commit"}, {"oid": "b0d2132bac86be7689ecfe4b9066d7152976a47f", "url": "https://github.com/unicode-org/cldr/commit/b0d2132bac86be7689ecfe4b9066d7152976a47f", "message": "CLDR-8802 Fetch DBPedia abstracts, show in info panel\n\n- new cldr-rdf project, to keep the dependencies out of other tools\n- add AbstractFetcher using Jena\n- adding a cache provider that stores into 2 properties files under tools/cldr-rdf/abstracts/\n- move helpHtml.jsp into SurveyAjax\n- add DBPedia abstracts alongside helpHtml\n- add a deferred help section with the language information\n- For now: only non-comprehensive languages.  Batch process for fetching.\n- moved deferred help into js/CldrDeferredHelp.js", "committedDate": "2020-11-18T00:04:25Z", "type": "forcePushed"}]}