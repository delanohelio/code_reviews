{"pr_number": 2234, "pr_title": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test", "pr_author": "fjtirado", "pr_createdAt": "2020-09-14T16:34:26Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234", "timeline": [{"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-14T16:39:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NTI2NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488455265", "body": "might be worth failing the test as well?\r\n```suggestion\r\n            fail(\"Something went wrong: \" + ex.getMessage());\r\n            throw ex;\r\n```", "bodyText": "might be worth failing the test as well?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw ex;\n          \n          \n            \n                        fail(\"Something went wrong: \" + ex.getMessage());\n          \n          \n            \n                        throw ex;", "bodyHTML": "<p dir=\"auto\">might be worth failing the test as well?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k x x-first\">throw</span><span class=\"x x-last\"> ex</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first\">fail(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Something went wrong: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> ex</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage())</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> ex;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-09-15T07:43:19Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488456921", "body": "Shouldn't we try to abort process instance even if above exception is raised? like using this in a `finally` block? Otherwise this process instance won't be aborted in case of an exception.", "bodyText": "Shouldn't we try to abort process instance even if above exception is raised? like using this in a finally block? Otherwise this process instance won't be aborted in case of an exception.", "bodyHTML": "<p dir=\"auto\">Shouldn't we try to abort process instance even if above exception is raised? like using this in a <code>finally</code> block? Otherwise this process instance won't be aborted in case of an exception.</p>", "author": "afalhambra", "createdAt": "2020-09-15T07:46:03Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        processClient.abortProcessInstance(containerId2, processInstanceId);", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUyNDYwOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488524609", "bodyText": "If the migration has failed, that code is not reached and it should not be (abort over the former container is performed). This code only makes sense in a sunny day scensario (aborting the migrated instance). If that abort failed, there is nothing else to do, since the instance is not any longer in the former container (has been properly migrated)", "author": "fjtirado", "createdAt": "2020-09-15T09:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzMzE1NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488533155", "bodyText": "got it now - thanks!", "author": "afalhambra", "createdAt": "2020-09-15T09:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2NDc3NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488464775", "body": "typo\r\n```suggestion\r\n        //abort process instance (outside try/catch), to not hide exception that will certainly occur if migration fails\r\n```", "bodyText": "typo\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n          \n          \n            \n                    //abort process instance (outside try/catch), to not hide exception that will certainly occur if migration fails", "bodyHTML": "<p dir=\"auto\">typo</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span>abort process instance (outside try/<span class=\"x x-first x-last\">cath</span>), to not hide exception that will certainly <span class=\"x x-first x-last\">occurs</span> if <span class=\"x x-first x-last\"> </span>migration <span class=\"x x-first x-last\">failed </span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span>abort process instance (outside try/<span class=\"x x-first x-last\">catch</span>), to not hide exception that will certainly <span class=\"x x-first x-last\">occur</span> if migration <span class=\"x x-first x-last\">fails</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-09-15T07:59:17Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed ", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5aca8b6f2a651da1e00318477bc3120125536b54", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5aca8b6f2a651da1e00318477bc3120125536b54", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T09:31:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3OTUyMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488079521", "body": "Shouldn't it be useful to log something in case abort process operation fails?", "bodyText": "Shouldn't it be useful to log something in case abort process operation fails?", "bodyHTML": "<p dir=\"auto\">Shouldn't it be useful to log something in case abort process operation fails?</p>", "author": "gmunozfe", "createdAt": "2020-09-14T16:49:56Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T12:33:22Z", "type": "commit"}, {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T12:33:22Z", "type": "forcePushed"}]}