{"pr_number": 2149, "pr_title": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "pr_author": "gmunozfe", "pr_createdAt": "2020-07-07T17:59:41Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149", "timeline": [{"oid": "58d404f453fce44b8d255cb6adc03e48e89aa5f2", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/58d404f453fce44b8d255cb6adc03e48e89aa5f2", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-07T22:35:27Z", "type": "forcePushed"}, {"oid": "90eb4118c878ad6f15ec26937ba93f73f2c31595", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/90eb4118c878ad6f15ec26937ba93f73f2c31595", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-07T22:38:00Z", "type": "forcePushed"}, {"oid": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-07T22:39:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1ODY1Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453558653", "body": "Maybe we could shorten it by adding the full java name to the import section. Just a minor thing.\r\n\r\n```suggestion\r\n        } catch (CompileException e) {\r\n```", "bodyText": "Maybe we could shorten it by adding the full java name to the import section. Just a minor thing.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (org.mvel2.CompileException e) {\n          \n          \n            \n                    } catch (CompileException e) {", "bodyHTML": "<p dir=\"auto\">Maybe we could shorten it by adding the full java name to the import section. Just a minor thing.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\"><span class=\"x x-first\">org.mvel2</span><span class=\"pl-k x x-last\">.</span>CompileException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">CompileException</span> e) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T10:39:53Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-case-id-generator/src/main/java/org/kie/server/generator/CustomNumberPrefixCaseIdGenerator.java", "diffHunk": "@@ -41,4 +60,13 @@ public void register(String prefix) {\n     public void unregister(String prefix) {\n         caseIdMap.remove(prefix);\n     }\n+    \n+    @Override\n+    public String resolveCaseIdPrefix(String expression, Map<String, Object> optionalParameters) {\n+        try {\n+            return !expression.isEmpty() ? (String) TemplateRuntime.eval(expression, CASE_ID_FUNCTIONS, optionalParameters) : \"\";\n+        } catch (org.mvel2.CompileException e) {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5MzM4OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453993388", "bodyText": "Done", "author": "gmunozfe", "createdAt": "2020-07-13T22:56:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU1ODY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2MTA2MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453561060", "body": "Exception is never not thrown in the method (same goes to `testCustomCaseId()` method)\r\n\r\n```suggestion\r\n    public void testCustomCaseIdWithOptionalParams() {\r\n```", "bodyText": "Exception is never not thrown in the method (same goes to testCustomCaseId() method)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testCustomCaseIdWithOptionalParams() throws Exception {\n          \n          \n            \n                public void testCustomCaseIdWithOptionalParams() {", "bodyHTML": "<p dir=\"auto\">Exception is never not thrown in the method (same goes to <code>testCustomCaseId()</code> method)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testCustomCaseIdWithOptionalParams() <span class=\"x x-first\">throws </span><span class=\"pl-smi x\">Exception</span><span class=\"x x-last\"> </span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testCustomCaseIdWithOptionalParams() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T10:44:23Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-case-id-generator/src/test/java/org/kie/server/integrationtests/generator/CustomCaseIdIntegrationTest.java", "diffHunk": "@@ -67,4 +68,23 @@ public void testCustomCaseId() throws Exception {\n         assertNotNull(caseId);\n         assertTrue(\"Created Case Id doesn't start with expected value, value is: \" + caseId, caseId.startsWith(\"HR-01234\"));\n     }\n+    \n+    @Test\n+    public void testCustomCaseIdWithOptionalParams() throws Exception {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2NjgwOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453566809", "body": "`final` not needed for a static method.\r\n\r\n```suggestion\r\n    public static String CAPITALIZE(String text) {\r\n```", "bodyText": "final not needed for a static method.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String CAPITALIZE(String text) {\n          \n          \n            \n                public static String CAPITALIZE(String text) {", "bodyHTML": "<p dir=\"auto\"><code>final</code> not needed for a static method.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">String</span> <span class=\"pl-c1\">CAPITALIZE</span>(<span class=\"pl-smi\">String</span> text) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">CAPITALIZE</span>(<span class=\"pl-smi\">String</span> text) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T10:55:23Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-case-id-generator/src/main/java/org/kie/server/generator/CustomCaseIdExpressionFunctions.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.generator;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class CustomCaseIdExpressionFunctions {\n+\n+    public static final CustomCaseIdExpressionFunctions CASE_ID_FUNCTIONS = new CustomCaseIdExpressionFunctions();\n+\n+    private CustomCaseIdExpressionFunctions() {}\n+\n+    public static final String CAPITALIZE(String text) {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU2Njk2NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453566965", "body": "final not needed for a static method.\r\n\r\n```suggestion\r\n    public static String LOWER(String text) {\r\n```", "bodyText": "final not needed for a static method.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String LOWER(String text) {\n          \n          \n            \n                public static String LOWER(String text) {", "bodyHTML": "<p dir=\"auto\">final not needed for a static method.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">String</span> <span class=\"pl-c1\">LOWER</span>(<span class=\"pl-smi\">String</span> text) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">LOWER</span>(<span class=\"pl-smi\">String</span> text) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T10:55:42Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-case-id-generator/src/main/java/org/kie/server/generator/CustomCaseIdExpressionFunctions.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.generator;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class CustomCaseIdExpressionFunctions {\n+\n+    public static final CustomCaseIdExpressionFunctions CASE_ID_FUNCTIONS = new CustomCaseIdExpressionFunctions();\n+\n+    private CustomCaseIdExpressionFunctions() {}\n+\n+    public static final String CAPITALIZE(String text) {\n+        return StringUtils.capitalize(text);\n+    }\n+\n+    public static final String LOWER(String text) {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MzU2MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453573560", "body": "Unused import.", "bodyText": "Unused import.", "bodyHTML": "<p dir=\"auto\">Unused import.</p>", "author": "afalhambra", "createdAt": "2020-07-13T11:09:15Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MzY4MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453573680", "body": "Unused import.", "bodyText": "Unused import.", "bodyHTML": "<p dir=\"auto\">Unused import.</p>", "author": "afalhambra", "createdAt": "2020-07-13T11:09:29Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3OTM0MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453579340", "body": "Just some rewording, wdyt?\r\n\r\n```suggestion\r\n    public void testStartEmptyCaseWithCaseDefaultPrefixId() {\r\n```", "bodyText": "Just some rewording, wdyt?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n          \n          \n            \n                public void testStartEmptyCaseWithCaseDefaultPrefixId() {", "bodyHTML": "<p dir=\"auto\">Just some rewording, wdyt?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDefaultPrefix</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithCaseDefaultPrefixId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:20:34Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4MDI3Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453580272", "body": "Just some rewording here\r\n\r\n```suggestion\r\n    public void testStartEmptyCaseWithNoSequenceCaseDefaultPrefixId() {\r\n```", "bodyText": "Just some rewording here\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n          \n          \n            \n                public void testStartEmptyCaseWithNoSequenceCaseDefaultPrefixId() {", "bodyHTML": "<p dir=\"auto\">Just some rewording here</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithNoSequenceCaseDefaultPrefixId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:22:32Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4MjQ1Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453582452", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_CASE_DEPLOYMENT_ID = \"EmptyCaseWithCaseDeploymentId\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_CASE_DEPLOYMENT_ID = \"EmptyCaseWithCaseDeploymentId\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_CASE_DEPLOYMENT</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithIdCaseDeployment</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_CASE_DEPLOYMENT_ID</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithCaseDeploymentId</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:27:03Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4MjkyOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453582929", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_PREFIX_CASE_ID = \"EmptyCaseWithCasePrefixId\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_PREFIX_CASE_ID = \"EmptyCaseWithCasePrefixId\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_CASE_PREFIX</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithIdCasePrefix</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_PREFIX_CASE_ID</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithCasePrefixId</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:28:02Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4NTc0OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453585748", "body": "```suggestion\r\n    public void testStartEmptyCaseWithCaseDeploymentId() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDeployment() {\n          \n          \n            \n                public void testStartEmptyCaseWithCaseDeploymentId() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDeployment</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithCaseDeploymentId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:33:35Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4ODAyNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453588026", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_CASE_DEFINITION_ID = \"EmptyCaseWithCaseDefinitionId\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_CASE_DEFINITION_ID = \"EmptyCaseWithCaseDefinitionId\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_CASE_DEFINITION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithIdCaseDefinition</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_CASE_DEFINITION_ID</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithCaseDefinitionId</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:38:03Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4ODc0Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453588742", "body": "```suggestion\r\n    public void testStartEmptyCaseWithNoSequenceCaseDeploymentId() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n          \n          \n            \n                public void testStartEmptyCaseWithNoSequenceCaseDeploymentId() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDeploymentNoSequence</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithNoSequenceCaseDeploymentId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T11:39:36Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjY2OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453602669", "body": "```suggestion\r\n    public void testStartEmptyCaseWithCaseDefinitionId() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDefinition() {\n          \n          \n            \n                public void testStartEmptyCaseWithCaseDefinitionId() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDefinition</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithCaseDefinitionId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:07:58Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMzQ5NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453603494", "body": "```suggestion\r\n    public void testStartEmptyCaseWithNoSequenceCaseDefinitionId() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n          \n          \n            \n                public void testStartEmptyCaseWithNoSequenceCaseDefinitionId() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithIdCaseDefinitionNoSequence</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithNoSequenceCaseDefinitionId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:09:43Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNDk3Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453604973", "body": "To avoid any confusion, as there is another bpmn with a similar name, I would rename this to:\r\n\r\n```suggestion\r\n    private static final String EMPTY_CASE_WITH_CASE_CORRELATION_KEY = \"EmptyCaseWithCaseCorrelationKey\";\r\n```", "bodyText": "To avoid any confusion, as there is another bpmn with a similar name, I would rename this to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_CASE_CORRELATION_KEY = \"EmptyCaseWithCaseCorrelationKey\";", "bodyHTML": "<p dir=\"auto\">To avoid any confusion, as there is another bpmn with a similar name, I would rename this to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_VARIABLE_PREFIX</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdVariablePrefix</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_CASE_CORRELATION_KEY</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithCaseCorrelationKey</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:12:45Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNTg3MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453605871", "body": "```suggestion\r\n    public void testStartEmptyCaseWithCaseCorrelationId() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithVariableCaseId() {\n          \n          \n            \n                public void testStartEmptyCaseWithCaseCorrelationId() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithVariableCaseId</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithCaseCorrelationId</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:14:38Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzAyNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453607024", "body": "Not sure whether a correlation key can be any string like this? does it make sense? wdyt?", "bodyText": "Not sure whether a correlation key can be any string like this? does it make sense? wdyt?", "bodyHTML": "<p dir=\"auto\">Not sure whether a correlation key can be any string like this? does it make sense? wdyt?</p>", "author": "afalhambra", "createdAt": "2020-07-13T12:16:47Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk4MDgyMg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453980822", "bodyText": "Yes, it's a free string", "author": "gmunozfe", "createdAt": "2020-07-13T22:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzQzNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453607436", "body": "```suggestion\r\n    public void testStartEmptyCaseWithNoSequenceCaseCorrelationKey() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithVariableCaseIdNoSequence() {\n          \n          \n            \n                public void testStartEmptyCaseWithNoSequenceCaseCorrelationKey() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithVariableCaseIdNoSequence</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithNoSequenceCaseCorrelationKey</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:17:35Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(CORRELATION_KEY+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdNoSequence() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYxMzY4NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453613685", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_NO_SEQ_CORRELATION_KEY = \"EmptyCaseWithNoSequenceCorrelationKey\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_NO_SEQ_CORRELATION_KEY = \"EmptyCaseWithNoSequenceCorrelationKey\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdVariablePrefixNoSequence</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_NO_SEQ_CORRELATION_KEY</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithNoSequenceCorrelationKey</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:29:33Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYxNDIwNQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453614205", "body": "```suggestion\r\n    public void testStartEmptyCaseWithNoSeqCorrelationKeyDefinedAtResource() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseWithVariableCaseIdDefinedAtResource() {\n          \n          \n            \n                public void testStartEmptyCaseWithNoSeqCorrelationKeyDefinedAtResource() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithVariableCaseIdDefinedAtResource</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithNoSeqCorrelationKeyDefinedAtResource</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T12:30:30Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(CORRELATION_KEY+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdNoSequence() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdDefinedAtResource() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0OTgzMg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453649832", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_UPPER_PREFIX_ID_EXPRESSION = \"EmptyCaseWithUpperPrefixIdExpression\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_UPPER_PREFIX_ID_EXPRESSION = \"EmptyCaseWithUpperPrefixIdExpression\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdExpressionPrefixUpper</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_UPPER_PREFIX_ID_EXPRESSION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithUpperPrefixIdExpression</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:29:41Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1MDMzMA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453650330", "body": "```suggestion\r\n    public void testStartEmptyCaseWithUpperPrefixIdExpression() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseImplicitVariableWithExpressionUpper() {\n          \n          \n            \n                public void testStartEmptyCaseWithUpperPrefixIdExpression() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseImplicitVariableWithExpressionUpper</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithUpperPrefixIdExpression</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:30:24Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(CORRELATION_KEY+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdNoSequence() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdDefinedAtResource() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionUpper() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1MTg5Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453651897", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_TRUNCATE_PREFIX_ID_EXPRESSION = \"EmptyCaseWithTruncatePrefixIdExpression\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_TRUNCATE_PREFIX_ID_EXPRESSION = \"EmptyCaseWithTruncatePrefixIdExpression\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdExpressionPrefixTruncate</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_TRUNCATE_PREFIX_ID_EXPRESSION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithTruncatePrefixIdExpression</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:32:46Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1MjM3OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453652379", "body": "```suggestion\r\n    public void testStartEmptyCaseWithTruncatePrefixIdExpression() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseImplicitVariableWithExpressionTruncate() {\n          \n          \n            \n                public void testStartEmptyCaseWithTruncatePrefixIdExpression() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseImplicitVariableWithExpressionTruncate</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithTruncatePrefixIdExpression</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:33:32Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(CORRELATION_KEY+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdNoSequence() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdDefinedAtResource() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionUpper() {\n+        data.put(\"type\", \"type1\");\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER+\"-TYPE1-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionTruncate() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1MzczNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453653737", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_LPAD_PREFIX_ID_EXPRESSION = \"EmptyCaseWithLpadPrefixIdExpression\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_LPAD_PREFIX_ID_EXPRESSION = \"EmptyCaseWithLpadPrefixIdExpression\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdExpressionPrefixLpad</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_LPAD_PREFIX_ID_EXPRESSION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithLpadPrefixIdExpression</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:35:41Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NDAzOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453654039", "body": "```suggestion\r\n    public void testStartEmptyCaseWithLpadPrefixIdExpression() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testStartEmptyCaseImplicitVariableWithExpressionLpad() {\n          \n          \n            \n                public void testStartEmptyCaseWithLpadPrefixIdExpression() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseImplicitVariableWithExpressionLpad</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testStartEmptyCaseWithLpadPrefixIdExpression</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:36:08Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n+    \n+\n+    private Map<String, Object> data;\n+    private CaseFile caseFile;\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/case-id-generator\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId);\n+    }\n+    \n+    @Before\n+    public void init() {\n+        data = new HashMap<>();\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefix() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(\"CASE-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefaultPrefixNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"CASE\", caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeployment() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                    caseId.matches(CONTAINER_ID+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDeploymentNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEPLOYMENT, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CONTAINER_ID, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinition() {\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match with expected value, value is: \" + caseId, \n+                caseId.matches(EMPTY_CASE_ID_CASE_DEFINITION+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithIdCaseDefinitionNoSequence() {\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_CASE_DEFINITION, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(EMPTY_CASE_ID_CASE_DEFINITION, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseId() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(CORRELATION_KEY+\"-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdNoSequence() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithVariableCaseIdDefinedAtResource() {\n+        data.put(\"CORRELATION_KEY\", CORRELATION_KEY);\n+        buildCaseFile();\n+        \n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ, caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(CORRELATION_KEY, caseId);\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionUpper() {\n+        data.put(\"type\", \"type1\");\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER+\"-TYPE1-[0-9]+\"));\n+    }\n+    \n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionTruncate() {\n+        data.put(\"type\", \"type_very_very_long\");\n+        buildCaseFile();\n+        String caseId = caseClient.startCase(CONTAINER_ID, EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE, caseFile);\n+        assertNotNull(caseId);\n+        assertTrue(\"Created Case Id doesn't match expected value, value is: \" + caseId, \n+                    caseId.matches(EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE+\"-type_very-[0-9]+\"));\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseImplicitVariableWithExpressionLpad() {", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NTUxOA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2149#discussion_r453655518", "body": "```suggestion\r\n    private static final String EMPTY_CASE_WITH_RPAD_PREFIX_ID_EXPRESSION = \"EmptyCaseWithRpadPrefixIdExpression\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";\n          \n          \n            \n                private static final String EMPTY_CASE_WITH_RPAD_PREFIX_ID_EXPRESSION = \"EmptyCaseWithRpadPrefixIdExpression\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseIdExpressionPrefixRpad</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">EMPTY_CASE_WITH_RPAD_PREFIX_ID_EXPRESSION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">EmptyCaseWithRpadPrefixIdExpression</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-07-13T13:38:22Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/cases/CaseIdGeneratorIntegrationTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm.cases;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.cases.CaseFile;\n+import org.kie.server.integrationtests.jbpm.JbpmKieServerBaseIntegrationTest;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class CaseIdGeneratorIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"case-id-generator\", \"1.0.0.Final\");\n+\n+    private static final String CONTAINER_ID = \"id-generator\";\n+\n+    private static final String CASE_OWNER_ROLE = \"owner\";\n+    \n+    private static final String CORRELATION_KEY = \"my correlation key\";\n+    \n+    private static final String EMPTY_CASE_ID_CASE_PREFIX = \"EmptyCaseWithIdCasePrefix\";\n+    private static final String EMPTY_CASE_ID_CASE_DEPLOYMENT = \"EmptyCaseWithIdCaseDeployment\";\n+    private static final String EMPTY_CASE_ID_CASE_DEFINITION = \"EmptyCaseWithIdCaseDefinition\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX = \"EmptyCaseIdVariablePrefix\";\n+    private static final String EMPTY_CASE_ID_VARIABLE_PREFIX_NO_SEQ = \"EmptyCaseIdVariablePrefixNoSequence\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_UPPER = \"EmptyCaseIdExpressionPrefixUpper\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_TRUNCATE = \"EmptyCaseIdExpressionPrefixTruncate\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_LPAD = \"EmptyCaseIdExpressionPrefixLpad\";\n+    private static final String EMPTY_CASE_ID_EXPRESSION_PREFIX_RPAD = \"EmptyCaseIdExpressionPrefixRpad\";", "originalCommit": "b6c89d21384a66a3c60cc7ad9bfdd26c2227fe1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8cb7d616b9cc67b4a079a49a637e8e5a2936ae01", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8cb7d616b9cc67b4a079a49a637e8e5a2936ae01", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-13T22:54:57Z", "type": "forcePushed"}, {"oid": "3e6577adeb3d34dba535cf56751f52ed38a45379", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/3e6577adeb3d34dba535cf56751f52ed38a45379", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-14T11:28:11Z", "type": "commit"}, {"oid": "3e6577adeb3d34dba535cf56751f52ed38a45379", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/3e6577adeb3d34dba535cf56751f52ed38a45379", "message": "[JBPM-9094] Integration tests for new customCaseIdPrefix ability", "committedDate": "2020-07-14T11:28:11Z", "type": "forcePushed"}]}