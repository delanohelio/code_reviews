{"pr_number": 3233, "pr_title": "Added ExprLastAttacker and ExprLastDamage", "pr_author": "DeltaRays", "pr_createdAt": "2020-07-27T15:52:28Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3233", "timeline": [{"oid": "9153b1ea3e981d5a93520a884d9523fcb9d3eee8", "url": "https://github.com/SkriptLang/Skript/commit/9153b1ea3e981d5a93520a884d9523fcb9d3eee8", "message": "Added ExprLastAttacker and ExprLastDamage (which can be used to get the last entity/block who damaged them and by how much they did)", "committedDate": "2020-07-27T15:51:10Z", "type": "commit"}, {"oid": "412b5eec2d665b4ce3e81208b518734fe12df8e1", "url": "https://github.com/SkriptLang/Skript/commit/412b5eec2d665b4ce3e81208b518734fe12df8e1", "message": "Updated the indentation", "committedDate": "2020-07-27T15:54:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjI1MA==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461196250", "body": "Was this meant to be `-1`?", "bodyText": "Was this meant to be -1?", "bodyHTML": "<p dir=\"auto\">Was this meant to be <code>-1</code>?</p>", "author": "ShaneBeee", "createdAt": "2020-07-27T22:02:12Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null)\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0]);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase REMOVE:\n+\t\t\t\t\tmod = 1;", "originalCommit": "412b5eec2d665b4ce3e81208b518734fe12df8e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NzQwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461397401", "bodyText": "Yup", "author": "DeltaRays", "createdAt": "2020-07-28T08:09:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjM3NA==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461196374", "body": "I know we ask for an extra line at the end, but I think you went a bit far here ;)", "bodyText": "I know we ask for an extra line at the end, but I think you went a bit far here ;)", "bodyHTML": "<p dir=\"auto\">I know we ask for an extra line at the end, but I think you went a bit far here ;)</p>", "author": "ShaneBeee", "createdAt": "2020-07-27T22:02:32Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.entity.EntityDamageByBlockEvent;\n+import org.bukkit.event.entity.EntityDamageByEntityEvent;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.bukkitutil.ProjectileUtils;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Last Attacker\")\n+@Description(\"The last block / entity that attacked an entity.\")\n+@Examples({\"send \\\"%last attacker of event-entity%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastAttacker extends SimplePropertyExpression<Entity, Object> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tpublic Object convert(Entity entity) {\n+\t\tif (entity.getLastDamageCause() != null) {\n+\t\t\tif (entity.getLastDamageCause() instanceof EntityDamageByBlockEvent)\n+\t\t\t\treturn ((EntityDamageByBlockEvent) entity.getLastDamageCause()).getDamager();\n+\t\t\tEntityDamageEvent event = entity.getLastDamageCause();\n+\t\t\tif (event instanceof EntityDamageByEntityEvent) {\n+\t\t\t\tEntityDamageByEntityEvent evt = (EntityDamageByEntityEvent) event;\n+\t\t\t\tif (evt.getDamager() instanceof Projectile) {\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tObject shooter = ProjectileUtils.getShooter((Projectile) evt.getDamager());\n+\t\t\t\t\tif (shooter instanceof Entity)\n+\t\t\t\t\t\treturn shooter;\n+\t\t\t\t}\n+\t\t\t\treturn evt.getDamager();\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<?> getReturnType() {\n+\t\treturn Object.class;\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"last attacker\";\n+\t}\n+\t\n+}\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+", "originalCommit": "412b5eec2d665b4ce3e81208b518734fe12df8e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NjU0MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461396541", "bodyText": "Lmao", "author": "DeltaRays", "createdAt": "2020-07-28T08:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjM3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjUwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461196501", "body": "Needs a line at the end, you can grab one of the extra ones from the other expression ;)", "bodyText": "Needs a line at the end, you can grab one of the extra ones from the other expression ;)", "bodyHTML": "<p dir=\"auto\">Needs a line at the end, you can grab one of the extra ones from the other expression ;)</p>", "author": "ShaneBeee", "createdAt": "2020-07-27T22:02:50Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null)\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0]);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase REMOVE:\n+\t\t\t\t\tmod = 1;\n+\t\t\t\tcase ADD:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0] + mod * entity.getLastDamage());\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"last damage\";\n+\t}\n+\t\n+}", "originalCommit": "412b5eec2d665b4ce3e81208b518734fe12df8e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NjY1Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r461396652", "bodyText": "I'll make sure to do that \ud83d\ude09", "author": "DeltaRays", "createdAt": "2020-07-28T08:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NjUwMQ=="}], "type": "inlineReview"}, {"oid": "ddaf88c208049fa6f8f5a72d350d83e1caa47416", "url": "https://github.com/SkriptLang/Skript/commit/ddaf88c208049fa6f8f5a72d350d83e1caa47416", "message": "Merge branch 'master' into LastDamage-&-LastAttacker", "committedDate": "2020-07-28T08:08:09Z", "type": "commit"}, {"oid": "dfac51509381230cbe76a9353811e4798a77bdf3", "url": "https://github.com/SkriptLang/Skript/commit/dfac51509381230cbe76a9353811e4798a77bdf3", "message": "Distributed the new lines at the end of one file across two files and fixed a REMOVE issue", "committedDate": "2020-07-28T08:10:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMDEzOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r463220139", "body": "```suggestion\r\n@Description(\"The last block or entity that attacked an entity.\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Description(\"The last block / entity that attacked an entity.\")\n          \n          \n            \n            @Description(\"The last block or entity that attacked an entity.\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">@Description</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The last block <span class=\"x x-first x-last\">/</span> entity that attacked an entity.<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">@Description</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The last block <span class=\"x x-first x-last\">or</span> entity that attacked an entity.<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "APickledWalrus", "createdAt": "2020-07-30T19:25:12Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.entity.EntityDamageByBlockEvent;\n+import org.bukkit.event.entity.EntityDamageByEntityEvent;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.bukkitutil.ProjectileUtils;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Last Attacker\")\n+@Description(\"The last block / entity that attacked an entity.\")", "originalCommit": "dfac51509381230cbe76a9353811e4798a77bdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjQxMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r463222411", "body": "Are you able to remove the inline annotation? I think I remember someone saying to just keep annotations to the method declaration. \ud83d\ude42 ", "bodyText": "Are you able to remove the inline annotation? I think I remember someone saying to just keep annotations to the method declaration. \ud83d\ude42", "bodyHTML": "<p dir=\"auto\">Are you able to remove the inline annotation? I think I remember someone saying to just keep annotations to the method declaration. <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">\ud83d\ude42</g-emoji></p>", "author": "APickledWalrus", "createdAt": "2020-07-30T19:29:35Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.entity.EntityDamageByBlockEvent;\n+import org.bukkit.event.entity.EntityDamageByEntityEvent;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.bukkitutil.ProjectileUtils;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Last Attacker\")\n+@Description(\"The last block / entity that attacked an entity.\")\n+@Examples({\"send \\\"%last attacker of event-entity%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastAttacker extends SimplePropertyExpression<Entity, Object> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tpublic Object convert(Entity entity) {\n+\t\tif (entity.getLastDamageCause() != null) {\n+\t\t\tif (entity.getLastDamageCause() instanceof EntityDamageByBlockEvent)\n+\t\t\t\treturn ((EntityDamageByBlockEvent) entity.getLastDamageCause()).getDamager();\n+\t\t\tEntityDamageEvent event = entity.getLastDamageCause();\n+\t\t\tif (event instanceof EntityDamageByEntityEvent) {\n+\t\t\t\tEntityDamageByEntityEvent evt = (EntityDamageByEntityEvent) event;\n+\t\t\t\tif (evt.getDamager() instanceof Projectile) {\n+\t\t\t\t\t@Nullable", "originalCommit": "dfac51509381230cbe76a9353811e4798a77bdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMzE1Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r463223153", "body": "can you put curly brackets around this check?", "bodyText": "can you put curly brackets around this check?", "bodyHTML": "<p dir=\"auto\">can you put curly brackets around this check?</p>", "author": "APickledWalrus", "createdAt": "2020-07-30T19:31:03Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null)", "originalCommit": "dfac51509381230cbe76a9353811e4798a77bdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyNTc1MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r463225751", "body": "Shouldn't this be\r\n```java\r\nentity.setLastDamage(mod * (Double) delta[0] + entity.getLastDamage());\r\n```\r\n\r\ncurrently (I think), removing `1` when the damage is `2` would result in `-1`", "bodyText": "Shouldn't this be\nentity.setLastDamage(mod * (Double) delta[0] + entity.getLastDamage());\ncurrently (I think), removing 1 when the damage is 2 would result in -1", "bodyHTML": "<p dir=\"auto\">Shouldn't this be</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"entity.setLastDamage(mod * (Double) delta[0] + entity.getLastDamage());\n\"><pre>entity<span class=\"pl-k\">.</span>setLastDamage(mod <span class=\"pl-k\">*</span> (<span class=\"pl-smi\">Double</span>) delta[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">+</span> entity<span class=\"pl-k\">.</span>getLastDamage());</pre></div>\n<p dir=\"auto\">currently (I think), removing <code>1</code> when the damage is <code>2</code> would result in <code>-1</code></p>", "author": "APickledWalrus", "createdAt": "2020-07-30T19:36:09Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null)\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0]);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase REMOVE:\n+\t\t\t\t\tmod = -1;\n+\t\t\t\tcase ADD:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0] + mod * entity.getLastDamage());", "originalCommit": "dfac51509381230cbe76a9353811e4798a77bdf3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "83aef8bcf42f7e25cab97cacda3b5cfe03084242", "url": "https://github.com/SkriptLang/Skript/commit/83aef8bcf42f7e25cab97cacda3b5cfe03084242", "message": "Fixed everything", "committedDate": "2020-07-30T22:07:49Z", "type": "commit"}, {"oid": "0dc4ed0882751e6357a0fc473124f3fc61c7505d", "url": "https://github.com/SkriptLang/Skript/commit/0dc4ed0882751e6357a0fc473124f3fc61c7505d", "message": "Merge branch 'master' into LastDamage-&-LastAttacker", "committedDate": "2020-08-02T16:16:09Z", "type": "commit"}, {"oid": "3ae185ede71568d2f49bcc43baaa3f0437998491", "url": "https://github.com/SkriptLang/Skript/commit/3ae185ede71568d2f49bcc43baaa3f0437998491", "message": "Merge branch 'master' into LastDamage-&-LastAttacker", "committedDate": "2020-09-08T18:17:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDk0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r495480946", "body": "You should add a default case that asserts false.", "bodyText": "You should add a default case that asserts false.", "bodyHTML": "<p dir=\"auto\">You should add a default case that asserts false.</p>", "author": "APickledWalrus", "createdAt": "2020-09-26T18:06:03Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0]);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase REMOVE:\n+\t\t\t\t\tmod = -1;\n+\t\t\t\tcase ADD:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Double) delta[0] * mod + entity.getLastDamage());\n+\t\t\t\t\tbreak;", "originalCommit": "3ae185ede71568d2f49bcc43baaa3f0437998491", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Mzk4Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r495483982", "bodyText": "When you modify the last damage it's purely visual (unless it's used by other plugins to do something), I'll update the description \ud83d\udc4d", "author": "DeltaRays", "createdAt": "2020-09-26T18:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDk0Ng=="}], "type": "inlineReview"}, {"oid": "203fc74cc724ed82acf5afa5a1066fffa7e4c8b8", "url": "https://github.com/SkriptLang/Skript/commit/203fc74cc724ed82acf5afa5a1066fffa7e4c8b8", "message": "Merge branch 'master' into LastDamage-&-LastAttacker", "committedDate": "2020-09-26T18:29:12Z", "type": "commit"}, {"oid": "0cda60bf7d99d23c3eae18b8ec9f5c0dae3774d9", "url": "https://github.com/SkriptLang/Skript/commit/0cda60bf7d99d23c3eae18b8ec9f5c0dae3774d9", "message": "Updated the description and replaced Double with Long", "committedDate": "2020-09-26T18:49:04Z", "type": "commit"}, {"oid": "e666ded46a43780a1e753c1f73ee896daa146f9c", "url": "https://github.com/SkriptLang/Skript/commit/e666ded46a43780a1e753c1f73ee896daa146f9c", "message": "Merge remote-tracking branch 'origin/LastDamage-&-LastAttacker' into LastDamage-&-LastAttacker", "committedDate": "2020-09-26T18:49:17Z", "type": "commit"}, {"oid": "fe1153fe46dc3e332170739d13678b8338163739", "url": "https://github.com/SkriptLang/Skript/commit/fe1153fe46dc3e332170739d13678b8338163739", "message": "Added a default case", "committedDate": "2020-09-26T18:54:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxNzE4NA==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r496317184", "body": "There seems to be a bit of redundancy in calling ``entity.getLastDamageCause()``, perhaps you could cache it instead?\r\nAlso, calling ``entity.getLastDamageCause()`` as ``event``, and ``(EntityDamageByEntityEvent) event`` as ``evt`` are kinda too similar, could you rename them to something that distinguishes them better?", "bodyText": "There seems to be a bit of redundancy in calling entity.getLastDamageCause(), perhaps you could cache it instead?\nAlso, calling entity.getLastDamageCause() as event, and (EntityDamageByEntityEvent) event as evt are kinda too similar, could you rename them to something that distinguishes them better?", "bodyHTML": "<p dir=\"auto\">There seems to be a bit of redundancy in calling <code>entity.getLastDamageCause()</code>, perhaps you could cache it instead?<br>\nAlso, calling <code>entity.getLastDamageCause()</code> as <code>event</code>, and <code>(EntityDamageByEntityEvent) event</code> as <code>evt</code> are kinda too similar, could you rename them to something that distinguishes them better?</p>", "author": "Wealthyturtle", "createdAt": "2020-09-29T01:07:48Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.entity.EntityDamageByBlockEvent;\n+import org.bukkit.event.entity.EntityDamageByEntityEvent;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.bukkitutil.ProjectileUtils;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Last Attacker\")\n+@Description(\"The last block or entity that attacked an entity.\")\n+@Examples({\"send \\\"%last attacker of event-entity%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastAttacker extends SimplePropertyExpression<Entity, Object> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tpublic Object convert(Entity entity) {\n+\t\tif (entity.getLastDamageCause() != null) {\n+\t\t\tif (entity.getLastDamageCause() instanceof EntityDamageByBlockEvent)\n+\t\t\t\treturn ((EntityDamageByBlockEvent) entity.getLastDamageCause()).getDamager();\n+\t\t\tEntityDamageEvent event = entity.getLastDamageCause();\n+\t\t\tif (event instanceof EntityDamageByEntityEvent) {\n+\t\t\t\tEntityDamageByEntityEvent evt = (EntityDamageByEntityEvent) event;\n+\t\t\t\tif (evt.getDamager() instanceof Projectile) {\n+\t\t\t\t\tObject shooter = ProjectileUtils.getShooter((Projectile) evt.getDamager());\n+\t\t\t\t\tif (shooter instanceof Entity)\n+\t\t\t\t\t\treturn shooter;\n+\t\t\t\t}\n+\t\t\t\treturn evt.getDamager();\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}", "originalCommit": "fe1153fe46dc3e332170739d13678b8338163739", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0MjY0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r496442649", "bodyText": "Will do \ud83d\udc4d", "author": "DeltaRays", "createdAt": "2020-09-29T06:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxNzE4NA=="}], "type": "inlineReview"}, {"oid": "46015871bb760de651306fc4ad7be68936d9ebf5", "url": "https://github.com/SkriptLang/Skript/commit/46015871bb760de651306fc4ad7be68936d9ebf5", "message": "Refactored some names and cached entity.getLastDamageCause()", "committedDate": "2020-09-29T06:21:59Z", "type": "commit"}, {"oid": "8cfb755bb27b3a2d17cef52bac0e6ac24c86f154", "url": "https://github.com/SkriptLang/Skript/commit/8cfb755bb27b3a2d17cef52bac0e6ac24c86f154", "message": "Merge branch 'dev-2.5' into LastDamage-&-LastAttacker", "committedDate": "2020-09-29T23:34:30Z", "type": "commit"}, {"oid": "5434792228e831c707b00c5be98c8f7d45154298", "url": "https://github.com/SkriptLang/Skript/commit/5434792228e831c707b00c5be98c8f7d45154298", "message": "Update license header", "committedDate": "2020-09-29T23:55:25Z", "type": "commit"}, {"oid": "8803814bd6900c204c5bafc083e9fee58ab35911", "url": "https://github.com/SkriptLang/Skript/commit/8803814bd6900c204c5bafc083e9fee58ab35911", "message": "Update license header", "committedDate": "2020-09-29T23:55:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNTQ3NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497605475", "body": "instead of duplicating this logic, can we just reuse the logic from ExprAttacker? you can do something like this:\r\n```\r\ninit() {\r\n    this.attackerExpr = new ExprAttacker();\r\n    attackerExpr.init(exprs, 0, isDelayed, null);\r\n}\r\n\r\nconvert(entity) {\r\n    return attackerExpr.get(e.getLastDamageCause())[0];\r\n}\r\n```\r\nthat way we can ensure that both expressions always give the same attacker", "bodyText": "instead of duplicating this logic, can we just reuse the logic from ExprAttacker? you can do something like this:\ninit() {\n    this.attackerExpr = new ExprAttacker();\n    attackerExpr.init(exprs, 0, isDelayed, null);\n}\n\nconvert(entity) {\n    return attackerExpr.get(e.getLastDamageCause())[0];\n}\n\nthat way we can ensure that both expressions always give the same attacker", "bodyHTML": "<p dir=\"auto\">instead of duplicating this logic, can we just reuse the logic from ExprAttacker? you can do something like this:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"init() {\n    this.attackerExpr = new ExprAttacker();\n    attackerExpr.init(exprs, 0, isDelayed, null);\n}\n\nconvert(entity) {\n    return attackerExpr.get(e.getLastDamageCause())[0];\n}\n\"><pre><code>init() {\n    this.attackerExpr = new ExprAttacker();\n    attackerExpr.init(exprs, 0, isDelayed, null);\n}\n\nconvert(entity) {\n    return attackerExpr.get(e.getLastDamageCause())[0];\n}\n</code></pre></div>\n<p dir=\"auto\">that way we can ensure that both expressions always give the same attacker</p>", "author": "Pikachu920", "createdAt": "2020-09-30T15:32:44Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.entity.EntityDamageByBlockEvent;\n+import org.bukkit.event.entity.EntityDamageByEntityEvent;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.bukkitutil.ProjectileUtils;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Last Attacker\")\n+@Description(\"The last block or entity that attacked an entity.\")\n+@Examples({\"send \\\"%last attacker of event-entity%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastAttacker extends SimplePropertyExpression<Entity, Object> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tpublic Object convert(Entity entity) {\n+\t\tEntityDamageEvent damageEvent = entity.getLastDamageCause();", "originalCommit": "8803814bd6900c204c5bafc083e9fee58ab35911", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzYyNw==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497607627", "body": "instead of having this mod variable can you either duplicate the code or use something like `delta[0] = (Long) delta[0] * -1`", "bodyText": "instead of having this mod variable can you either duplicate the code or use something like delta[0] = (Long) delta[0] * -1", "bodyHTML": "<p dir=\"auto\">instead of having this mod variable can you either duplicate the code or use something like <code>delta[0] = (Long) delta[0] * -1</code></p>", "author": "Pikachu920", "createdAt": "2020-09-30T15:35:47Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity. Note that changing it doesn't deal more/less damage.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase SET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint mod = 1;\n+\t\tif (delta != null) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n+\t\t\t\t\t\tentity.setLastDamage((Long) delta[0]);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase REMOVE:\n+\t\t\t\t\tmod = -1;", "originalCommit": "8803814bd6900c204c5bafc083e9fee58ab35911", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwOTk2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497609961", "body": "same thing here, can you just use ExprDamage and pass in the last event? skript actually has some modifiers on how the damage is returned (like dividing by 2 for EntityDamageEvent)", "bodyText": "same thing here, can you just use ExprDamage and pass in the last event? skript actually has some modifiers on how the damage is returned (like dividing by 2 for EntityDamageEvent)", "bodyHTML": "<p dir=\"auto\">same thing here, can you just use ExprDamage and pass in the last event? skript actually has some modifiers on how the damage is returned (like dividing by 2 for EntityDamageEvent)</p>", "author": "Pikachu920", "createdAt": "2020-09-30T15:38:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Last Damage\")\n+@Description(\"The last damage that was done to an entity. Note that changing it doesn't deal more/less damage.\")\n+@Examples({\"set last damage of event-entity to 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprLastDamage extends SimplePropertyExpression<LivingEntity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(LivingEntity livingEntity) {\n+\t\treturn livingEntity.getLastDamage();", "originalCommit": "8803814bd6900c204c5bafc083e9fee58ab35911", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aac6af31d9df54aa66189f3b0362a3e62ef027cb", "url": "https://github.com/SkriptLang/Skript/commit/aac6af31d9df54aa66189f3b0362a3e62ef027cb", "message": "Updated ExprArrowPierceLevel.java", "committedDate": "2020-09-30T16:30:50Z", "type": "commit"}, {"oid": "cbe6908da1fabfb2306577e0120db41e3ce97e99", "url": "https://github.com/SkriptLang/Skript/commit/cbe6908da1fabfb2306577e0120db41e3ce97e99", "message": "Merge remote-tracking branch 'origin/LastDamage-&-LastAttacker' into LastDamage-&-LastAttacker", "committedDate": "2020-09-30T16:31:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczOTQ0NA==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497739444", "body": "could you put a private modifier on this guy?", "bodyText": "could you put a private modifier on this guy?", "bodyHTML": "<p dir=\"auto\">could you put a private modifier on this guy?</p>", "author": "Pikachu920", "createdAt": "2020-09-30T19:10:23Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -42,26 +45,21 @@\n \tstatic {\n \t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n \t}\n+\t@Nullable\n+\tExprAttacker attackerExpr;", "originalCommit": "aac6af31d9df54aa66189f3b0362a3e62ef027cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczOTU5Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497739597", "body": "could you put a private modifier on this guy?", "bodyText": "could you put a private modifier on this guy?", "bodyHTML": "<p dir=\"auto\">could you put a private modifier on this guy?</p>", "author": "Pikachu920", "createdAt": "2020-09-30T19:10:39Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -41,10 +44,20 @@\n \t\tregister(ExprLastDamage.class, Number.class, \"last damage\", \"livingentities\");\n \t}\n \t\n+\t@Nullable\n+\tExprDamage damageExpr;", "originalCommit": "aac6af31d9df54aa66189f3b0362a3e62ef027cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MTA3OA==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497741078", "body": "could you remove the `this.` here? your other file doesn't have it and i checked a couple expressions and it looks like most of them don't either", "bodyText": "could you remove the this. here? your other file doesn't have it and i checked a couple expressions and it looks like most of them don't either", "bodyHTML": "<p dir=\"auto\">could you remove the <code>this.</code> here? your other file doesn't have it and i checked a couple expressions and it looks like most of them don't either</p>", "author": "Pikachu920", "createdAt": "2020-09-30T19:13:29Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastAttacker.java", "diffHunk": "@@ -42,26 +45,21 @@\n \tstatic {\n \t\tregister(ExprLastAttacker.class, Object.class, \"last attacker\", \"entity\");\n \t}\n+\t@Nullable\n+\tExprAttacker attackerExpr;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tthis.attackerExpr = new ExprAttacker();", "originalCommit": "aac6af31d9df54aa66189f3b0362a3e62ef027cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MTcxMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3233#discussion_r497741711", "body": "missing a space after `*`", "bodyText": "missing a space after *", "bodyHTML": "<p dir=\"auto\">missing a space after <code>*</code></p>", "author": "Pikachu920", "createdAt": "2020-09-30T19:14:40Z", "path": "src/main/java/ch/njol/skript/expressions/ExprLastDamage.java", "diffHunk": "@@ -62,18 +75,17 @@ public Number convert(LivingEntity livingEntity) {\n \t\n \t@Override\n \tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n-\t\tint mod = 1;\n \t\tif (delta != null) {\n \t\t\tswitch (mode) {\n \t\t\t\tcase SET:\n \t\t\t\t\tfor (LivingEntity entity : getExpr().getArray(e))\n \t\t\t\t\t\tentity.setLastDamage((Long) delta[0]);\n \t\t\t\t\tbreak;\n \t\t\t\tcase REMOVE:\n-\t\t\t\t\tmod = -1;\n+\t\t\t\t\tdelta[0] = (Long) delta[0] *-1;", "originalCommit": "aac6af31d9df54aa66189f3b0362a3e62ef027cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fa8fb506a3412fed75269163a779d51a8bc1d235", "url": "https://github.com/SkriptLang/Skript/commit/fa8fb506a3412fed75269163a779d51a8bc1d235", "message": "Updated everything according to what Pikachu said.", "committedDate": "2020-09-30T19:18:00Z", "type": "commit"}, {"oid": "57c1b544a99e3b72d8e654e946ed96cf754198e4", "url": "https://github.com/SkriptLang/Skript/commit/57c1b544a99e3b72d8e654e946ed96cf754198e4", "message": "Removed some imports and added an empty line", "committedDate": "2020-09-30T19:18:27Z", "type": "commit"}, {"oid": "0d06ab42e5e3eeb8dc8c3014e79a8aa43ce82b95", "url": "https://github.com/SkriptLang/Skript/commit/0d06ab42e5e3eeb8dc8c3014e79a8aa43ce82b95", "message": "Merge branch 'dev-2.5' into LastDamage-&-LastAttacker", "committedDate": "2020-10-05T06:49:20Z", "type": "commit"}]}