{"pr_number": 8500, "pr_title": "SAK-44061: SAMIGO - Error while saving without From(Required) 'Feedback will be displayed to the student on specific dates'", "pr_author": "jesusmmp", "pr_createdAt": "2020-09-01T10:42:49Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8500", "timeline": [{"oid": "a95a79715abb6687669e8b9c07f1ac2867bc22fe", "url": "https://github.com/sakaiproject/sakai/commit/a95a79715abb6687669e8b9c07f1ac2867bc22fe", "message": "SAK-44061: SAMIGO - Error while saving without From(Required) 'Feedback will be displayed to the student on specific dates'", "committedDate": "2020-09-01T10:41:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNzk3MQ==", "url": "https://github.com/sakaiproject/sakai/pull/8500#discussion_r481137971", "body": "can getFeedbackDate return null here? In the last PR it looked like that was the concern, even though the logic was the wrong way round.This whole approach seems odd, tbh. Why are we checking two different things? It would be a lot better to just have one definitive thing that shows that there has been feedback, then test that. I'm not saying you've made it strange - it was probably strange to begin with. Could you standardise on one test, either getFeedbackDate, or getFeedbackDateString? Or even add an hasFeedback flag to the assessment settings object.\r\n\r\nHow about using getIsValidFeedbackDate as your universal test?", "bodyText": "can getFeedbackDate return null here? In the last PR it looked like that was the concern, even though the logic was the wrong way round.This whole approach seems odd, tbh. Why are we checking two different things? It would be a lot better to just have one definitive thing that shows that there has been feedback, then test that. I'm not saying you've made it strange - it was probably strange to begin with. Could you standardise on one test, either getFeedbackDate, or getFeedbackDateString? Or even add an hasFeedback flag to the assessment settings object.\nHow about using getIsValidFeedbackDate as your universal test?", "bodyHTML": "<p dir=\"auto\">can getFeedbackDate return null here? In the last PR it looked like that was the concern, even though the logic was the wrong way round.This whole approach seems odd, tbh. Why are we checking two different things? It would be a lot better to just have one definitive thing that shows that there has been feedback, then test that. I'm not saying you've made it strange - it was probably strange to begin with. Could you standardise on one test, either getFeedbackDate, or getFeedbackDateString? Or even add an hasFeedback flag to the assessment settings object.</p>\n<p dir=\"auto\">How about using getIsValidFeedbackDate as your universal test?</p>", "author": "adrianfish", "createdAt": "2020-09-01T13:29:52Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/ConfirmPublishAssessmentListener.java", "diffHunk": "@@ -396,9 +396,16 @@ else if (time instanceof java.lang.Boolean) {\n \t\t\t\tString date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n \t\t\t\tcontext.addMessage(null,new FacesMessage(date_err));\n \t\t\t}\n+\t\t\telse {\n+\t\t\t\tif(StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){", "originalCommit": "a95a79715abb6687669e8b9c07f1ac2867bc22fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2NDEwOQ==", "url": "https://github.com/sakaiproject/sakai/pull/8500#discussion_r481164109", "bodyText": "getFeedbackDate can't be null here.\nIf getFeedbackDate was null then the code enters on the if Line 394 and skip the else.\ngetFeedbackDate and getFeedbackDateString are the same.\nI don't know why sometimes was programming with getFeedbackDate and other with getFeedbackDateString.\n(I haven't changed that), I have only ordered that lines (if and else) because and NPE appears.", "author": "jesusmmp", "createdAt": "2020-09-01T14:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNzk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzOTc2NQ==", "url": "https://github.com/sakaiproject/sakai/pull/8500#discussion_r481139765", "body": "If getFeedbackDate is null, then using it later in the same if statement will give an NPE.", "bodyText": "If getFeedbackDate is null, then using it later in the same if statement will give an NPE.", "bodyHTML": "<p dir=\"auto\">If getFeedbackDate is null, then using it later in the same if statement will give an NPE.</p>", "author": "adrianfish", "createdAt": "2020-09-01T13:32:27Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/SavePublishedSettingsListener.java", "diffHunk": "@@ -491,14 +491,16 @@ public boolean checkPublishedSettings(PublishedAssessmentService assessmentServi\n \t\t\t\tString  date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n \t\t\t\tcontext.addMessage(null,new FacesMessage(date_err));\n \t\t\t}\n-\t\t\telse if(!assessmentSettings.getIsValidFeedbackDate()){\n-\t\t\t\tString feedbackDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_feedback_date\");\n-\t\t\t\tcontext.addMessage(null,new FacesMessage(feedbackDateErr));\n-\t\t\t\terror=true;\n+\t\t\telse {\n+\t\t\t\tif(assessmentSettings.getFeedbackDate() == null && StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){", "originalCommit": "a95a79715abb6687669e8b9c07f1ac2867bc22fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE2NTI0MA==", "url": "https://github.com/sakaiproject/sakai/pull/8500#discussion_r481165240", "bodyText": "Same that before. If getFeedbackDate is null then enters on if Line 489 and skip this else.", "author": "jesusmmp", "createdAt": "2020-09-01T14:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzOTc2NQ=="}], "type": "inlineReview"}, {"oid": "344321924b2f3748c81a481aea2fbfc9727372e6", "url": "https://github.com/sakaiproject/sakai/commit/344321924b2f3748c81a481aea2fbfc9727372e6", "message": "SAK-44061: SAMIGO - Error while saving without From(Required) 'Feedback will be displayed to the student on specific dates'", "committedDate": "2020-10-09T10:34:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMzAzNg==", "url": "https://github.com/sakaiproject/sakai/pull/8500#discussion_r504003036", "body": "```suggestion\r\n\t\t\t\t// TODO this logic should be refactored\r\n\t\t\t\tif(StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif(StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){\n          \n          \n            \n            \t\t\t\t// TODO this logic should be refactored\n          \n          \n            \n            \t\t\t\tif(StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"401\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-k x x-first\">if</span><span class=\"x\">(</span><span class=\"pl-smi x\">StringUtils</span><span class=\"pl-k x\">.</span><span class=\"x\">isNotBlank(assessmentSettings</span><span class=\"pl-k x\">.</span><span class=\"x\">getFeedbackEndDateString()) </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> assessmentSettings</span><span class=\"pl-k x\">.</span><span class=\"x\">getFeedbackDate()</span><span class=\"pl-k x\">.</span><span class=\"x\">after(assessmentSettings</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getFeedbackEndDate())){</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"401\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> TODO this logic should be refactored</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"402\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-k\">if</span>(<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>isNotBlank(assessmentSettings<span class=\"pl-k\">.</span>getFeedbackEndDateString()) <span class=\"pl-k\">&amp;&amp;</span> assessmentSettings<span class=\"pl-k\">.</span>getFeedbackDate()<span class=\"pl-k\">.</span>after(assessmentSettings<span class=\"pl-k\">.</span>getFeedbackEndDate())){</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ern", "createdAt": "2020-10-13T14:33:37Z", "path": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/ConfirmPublishAssessmentListener.java", "diffHunk": "@@ -396,9 +396,16 @@ else if (time instanceof java.lang.Boolean) {\n \t\t\t\tString date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n \t\t\t\tcontext.addMessage(null,new FacesMessage(date_err));\n \t\t\t}\n+\t\t\telse {\n+\t\t\t\tif(StringUtils.isNotBlank(assessmentSettings.getFeedbackEndDateString()) && assessmentSettings.getFeedbackDate().after(assessmentSettings.getFeedbackEndDate())){", "originalCommit": "344321924b2f3748c81a481aea2fbfc9727372e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8f77b8b44d252c933615e7781e7600013e199571", "url": "https://github.com/sakaiproject/sakai/commit/8f77b8b44d252c933615e7781e7600013e199571", "message": "Update samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/listener/author/ConfirmPublishAssessmentListener.java", "committedDate": "2020-10-13T14:34:26Z", "type": "commit"}]}