{"pr_number": 8826, "pr_title": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "pr_author": "fostersdesign", "pr_createdAt": "2020-11-19T05:32:50Z", "pr_url": "https://github.com/sakaiproject/sakai/pull/8826", "merge_commit": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "timeline": [{"oid": "7ce3473f5b6b138185defd00035c7597194684e5", "url": "https://github.com/sakaiproject/sakai/commit/7ce3473f5b6b138185defd00035c7597194684e5", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T05:54:15Z", "type": "forcePushed"}, {"oid": "152184ae3b5f76e9ca6839c88908ce941894c1d8", "url": "https://github.com/sakaiproject/sakai/commit/152184ae3b5f76e9ca6839c88908ce941894c1d8", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T05:56:24Z", "type": "forcePushed"}, {"oid": "a084079c928129b6204c9cd00620e9b47ca68a32", "url": "https://github.com/sakaiproject/sakai/commit/a084079c928129b6204c9cd00620e9b47ca68a32", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:02:20Z", "type": "forcePushed"}, {"oid": "f7dd3907c408d0465eff7e59ad4cbd240ba4c449", "url": "https://github.com/sakaiproject/sakai/commit/f7dd3907c408d0465eff7e59ad4cbd240ba4c449", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:14:07Z", "type": "forcePushed"}, {"oid": "e71775ffc9e0d0c54b438222722cce740dfdace2", "url": "https://github.com/sakaiproject/sakai/commit/e71775ffc9e0d0c54b438222722cce740dfdace2", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-11-19T06:18:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NzgyMg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526897822", "body": "Shorten this with a ternary:\r\n\r\n```suggestion\r\n                                    themePrefs.getBooleanProperty(\"darkTheme\") ? themeUserPref = 1 : themeUserPref = 0;\r\n```", "bodyText": "Shorten this with a ternary:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n          \n          \n            \n                                                    themeUserPref = 1;\n          \n          \n            \n                                                } else {\n          \n          \n            \n                                                    themeUserPref = 0;\n          \n          \n            \n                                                }\n          \n          \n            \n                                                themePrefs.getBooleanProperty(\"darkTheme\") ? themeUserPref = 1 : themeUserPref = 0;", "bodyHTML": "<p dir=\"auto\">Shorten this with a ternary:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    <span class=\"pl-k\">if</span>(themePrefs<span class=\"pl-k\">.</span>getBooleanProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>darkTheme<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                        themeUserPref <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                        themeUserPref <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    themePrefs<span class=\"pl-k\">.</span>getBooleanProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>darkTheme<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">?</span> themeUserPref <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">:</span> themeUserPref <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bjones86", "createdAt": "2020-11-19T13:45:35Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..08a596addb1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,13 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n                             \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n+                            String userTheme = \"sakaiUserTheme-notSet\";\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n+\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "64766e5649fe8a59a4a06161a64063044c020f9a", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 08a596addb1..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1740,11 +1740,7 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n                             \n-                            String userTheme = \"sakaiUserTheme-notSet\";\n-                            \n-                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n-\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n                             rcontext.put(\"userTheme\", userTheme);\n                         }\n \n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,9 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n-                            \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "8739791dd10b189c4e62852d834eda5f3e4301fa", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 34be6ff9c3d..b3f8de43ff5 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1737,12 +1739,19 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         \t}\n                         }\n \n-                        if(sakaiThemeSwitcherEnabled) {\n-                            rcontext.put(\"themeSwitcher\", true);\n-                            \n-                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n-                            rcontext.put(\"userTheme\", userTheme);\n-                        }\n+\t\t\tif(sakaiThemesEnabled) {\n+\t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n+\n+\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n+\t\t\t\t}\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\trcontext.put(\"userTheme\", userTheme);\n+\t\t\t}\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n \t\t\t\t\t&& (poweredByAltText != null)\n", "next_change": {"commit": "6c09deeb995c2e82389eb984ee99fce83878964e", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex b3f8de43ff5..d07b1d9a5b1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1668,88 +1693,87 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \t\t\tcopyright = copyright.replaceAll(SERVER_COPYRIGHT_CURRENT_YEAR_KEYWORD, currentServerYear);\n \n \t\t\tString service = ServerConfigurationService.getString(\"ui.service\", \"Sakai\");\n-\t\t\tString serviceVersion = ServerConfigurationService.getString(\n-\t\t\t\t\t\"version.service\", \"?\");\n-\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\",\n-\t\t\t\"?\");\n+\t\t\tString serviceVersion = ServerConfigurationService.getString(\"version.service\", \"?\");\n+\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\", \"?\");\n \t\t\tString server = ServerConfigurationService.getServerId();\n-\t\t\tString[] bottomNav = ServerConfigurationService.getStrings(\"bottomnav\");\n+\t\t\tString[] footerLinks = ServerConfigurationService.getStrings(\"footerlinks\");\n+\t\t\tList<HashMap<String, String>> footerLinksList = Arrays.asList(footerLinks).stream()\n+\t\t\t\t\t.map((footerlink) -> {\n+\t\t\t\t\t\tString[] linkValues = StringUtils.split(footerlink, \";\");\n+\t\t\t\t\t\tif (linkValues.length < 2) {\n+\t\t\t\t\t\t\treturn null;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tHashMap<String, String> linkMap = new HashMap();\n+\t\t\t\t\t\t\tlinkMap.put(\"text\", linkValues[0]);\n+\t\t\t\t\t\t\tlinkMap.put(\"href\", linkValues[1]);\n+\t\t\t\t\t\t\tif (linkValues.length >= 3) {\n+\t\t\t\t\t\t\t\tlinkMap.put(\"target\", linkValues[2]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\treturn linkMap;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t.filter((link) -> link != null)\n+\t\t\t.collect(Collectors.toList());\n+\t\t\trcontext.put(\"footerLinks\", footerLinksList);\n \t\t\tString[] poweredByUrl = ServerConfigurationService.getStrings(\"powered.url\");\n-\t\t\tString[] poweredByImage = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.img\");\n-\t\t\tString[] poweredByAltText = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.alt\");\n+\t\t\tString[] poweredByImage = ServerConfigurationService.getStrings(\"powered.img\");\n+\t\t\tString[] poweredByAltText = ServerConfigurationService.getStrings(\"powered.alt\");\n+\n+\t\t\tString neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n+\t\t\tboolean neoChatAvailable = false;\n+\n+\t\t\tif (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = Boolean.valueOf(neoChatProperty);\n+\t\t\t\tif (site != null) {\n+\t\t\t\t\tString siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n+\t\t\t\t\tif (siteNeoChatStr != null) {\n+\t\t\t\t\t\tneoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\t{\n-\t\t\t\tList<Object> l = new ArrayList<Object>();\n-\t\t\t\tif ((bottomNav != null) && (bottomNav.length > 0))\n-\t\t\t\t{\n-\t\t\t\t\tfor (int i = 0; i < bottomNav.length; i++)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tl.add(bottomNav[i]);\n+\t\t\tif (\"always\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = true;\n+\t\t\t}\n+\n+\t\t\tif (!chatHelper.checkChatPermitted(thisUser)) {\n+\t\t\t\tneoChatAvailable = false;\n+\t\t\t}\n+\n+\t\t\trcontext.put(\"neoChat\", neoChatAvailable);\n+\t\t\trcontext.put(\"portalChatPollInterval\", ServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n+\t\t\trcontext.put(\"neoAvatar\", ServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n+\t\t\trcontext.put(\"neoChatVideo\", ServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n+\t\t\trcontext.put(\"portalVideoChatTimeout\", ServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n+\n+\t\t\tif (sakaiTutorialEnabled && thisUser != null) {\n+\t\t\t\tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n+\t\t\t\t\trcontext.put(\"tutorial\", true);\n+\t\t\t\t\t//now save this in the user's preferences so we don't show it again\n+\t\t\t\t\tPreferencesEdit preferences = null;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tpreferences = preferencesService.edit(thisUser);\n+\t\t\t\t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n+\t\t\t\t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n+\t\t\t\t\t\tpreferencesService.commit(preferences);   \n+\t\t\t\t\t} catch (SakaiException e1) {\n+\t\t\t\t\t\tlog.error(e1.getMessage(), e1);\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\trcontext.put(\"bottomNav\", l);\n \t\t\t}\n \n-                        String neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n-                        boolean neoChatAvailable = false;\n- \n-                        if (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n-                            neoChatAvailable = Boolean.valueOf(neoChatProperty);\n-                            if (site != null) {\n-                                String siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n-                                if (siteNeoChatStr != null) {\n-                                    neoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n-                                }\n-                            }\n-                        }\n-\n-                        if (\"always\".equals(neoChatProperty)) {\n-                            neoChatAvailable = true;\n-                        }\n-\n-                        if (!chatHelper.checkChatPermitted(thisUser)) {\n-                            neoChatAvailable = false;\n-                        }\n-\n-                        rcontext.put(\"neoChat\", neoChatAvailable);\n-                        rcontext.put(\"portalChatPollInterval\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n-                        rcontext.put(\"neoAvatar\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n-                        rcontext.put(\"neoChatVideo\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n-                        rcontext.put(\"portalVideoChatTimeout\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n-\n-                        if(sakaiTutorialEnabled && thisUser != null) {\n-                        \tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n-                        \t\trcontext.put(\"tutorial\", true);\n-                        \t\t//now save this in the user's preferences so we don't show it again\n-                        \t\tPreferencesEdit preferences = null;\n-                        \t\ttry {\n-                        \t\t\tpreferences = preferencesService.edit(thisUser);\n-                        \t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n-                        \t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n-                        \t\t\tpreferencesService.commit(preferences);   \n-                        \t\t} catch (SakaiException e1) {\n-                        \t\t\tlog.error(e1.getMessage(), e1);\n-                        \t\t}\n-                        \t}\n-                        }\n-\n-\t\t\tif(sakaiThemesEnabled) {\n+\t\t\tif (sakaiThemesEnabled) {\n \t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n \n-\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\tif (sakaiThemeSwitcherEnabled) {\n \t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\tif (sakaiThemesAutoDetectDarkEnabled) {\n \t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n \t\t\t\t}\n-\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS)\n+\t\t\t\t\t.getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n \t\t\t\trcontext.put(\"userTheme\", userTheme);\n \t\t\t}\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "message": "Merge commit", "committedDate": null}, {"oid": "8739791dd10b189c4e62852d834eda5f3e4301fa", "committedDate": "2021-03-02 11:38:26 -0500", "message": "SAK-45006 Control dark theme with a property separate of the theme toggle (#9012)"}, {"oid": "53f53ee631ce7f3e55b1f844e56546a4c207f5e6", "committedDate": "2021-06-01 14:00:55 -0400", "message": "SAK-45006 Dark mode update props to be consistent"}, {"oid": "7b7cd99c69a7083d2a7dee00f5b8502d640bc6aa", "committedDate": "2022-06-17 14:49:13 +0200", "message": "SAK-47442 MathJax: Global configuration using properties"}, {"oid": "10963b7eb16b62ccb83b2a873628cc70d2a3841d", "committedDate": "2022-06-23 10:42:53 -0400", "message": "SAK-47489 Bullhorns this disables SSE and modifies the fetch to the /direct/ endpoint (#10680)"}, {"oid": "951cf5c3da8cf1a571f1b302b3ba8506a149d9b9", "committedDate": "2022-09-14 13:50:40 +0200", "message": "SAK-47829 MathJax: Apply portalCDNQuery on mathjax-config.js imports"}, {"oid": "25dab7336707926c685207e20af02b343b1b0ba7", "committedDate": "2022-10-11 11:22:05 -0400", "message": "SAK-47852 Plus (LTI Advantage Provider) initial addition to Sakai (#10877)"}, {"oid": "6c09deeb995c2e82389eb984ee99fce83878964e", "committedDate": "2022-10-27 14:12:50 -0400", "message": "SAK-46392 Trinity portal implementation (#10960)"}, {"oid": "0ee74f6661863a5a17d621bb4f39fce50febcb77", "committedDate": "2022-12-12 10:31:34 +0100", "message": "SAK-48153 - Support Analytics GA4 since Universal is being deprecated"}, {"oid": "07297b46d848674486a1d2abdc36707197b9a21a", "committedDate": "2022-12-14 16:41:23 +0000", "message": "SAK-48188 Merge MessagingService into UserMessagingService (#11092)"}, {"oid": "e74337c40386f59374b018513edef47b5993d06e", "committedDate": "2022-12-27 11:24:34 +0000", "message": "SAK-48245 notifications: add missing types (#11147)"}, {"oid": "e145f85dad88f43eb00a9cb19e4a8a9d0e90d358", "committedDate": "2023-02-17 12:03:47 +0000", "message": "SAK-48444 portal: update pinned when user removed (#11253)"}, {"oid": "b3aefc24ff52b13c006570264c2942ebb23817ef", "committedDate": "2023-02-22 18:11:53 +0000", "message": "SAK-48083 portal: Add push capability to Sakai (#11038)"}, {"oid": "5cc7a4c7e4fe5705a1be2eab64f568318d4adb51", "committedDate": "2023-02-23 17:03:03 +0000", "message": "SAK-48504 Portal:  Uncaught SyntaxError: redeclaration of const roleSwitchButton (#11280)"}, {"oid": "1ac2c9599756da021ef0eeb90e0a41eee8f1dd20", "committedDate": "2023-02-25 11:40:41 +0000", "message": "SAK-48524 portal: added home tool title to sitenav properties (#11294)"}, {"oid": "301ceb85bca0d29fea497f1a440dd3ba3aa5ac0a", "committedDate": "2023-02-26 22:24:58 +0000", "message": "SAK-48528 portal: move connection-manager and profile popup i18n (#11299)"}, {"oid": "a507302ef10c706feaac7d7c7b9518b37cf0679e", "committedDate": "2023-03-21 14:49:20 +0000", "message": "SAK-48638 Portal: xlogin button not launching login prompt (#11348)"}, {"oid": "aa689cf812d1f11efb70d95a58e187b1d5b4aac9", "committedDate": "2023-04-20 09:50:55 +0100", "message": "SAK-48337 Trinity: Improve display of pinned sites by collapsing Home after login (#11467)"}, {"oid": "3a51c7bb12918a7c3801c1ba36c5f7ea5f3d4bae", "committedDate": "2023-05-01 12:30:02 +0100", "message": "SAK-48631 Portal: Theme switch should only display if enabled by properties (#11345)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526898500", "body": "`Boolean.valueOf()` not necessary here:\r\n\r\n```suggestion\r\n                            rcontext.put(\"darkTheme\", darkTheme);\r\n```", "bodyText": "Boolean.valueOf() not necessary here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n          \n          \n            \n                                        rcontext.put(\"darkTheme\", darkTheme);", "bodyHTML": "<p dir=\"auto\"><code>Boolean.valueOf()</code> not necessary here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            rcontext<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>darkTheme<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi x x-first\">Boolean</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">valueOf(</span>darkTheme<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            rcontext<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>darkTheme<span class=\"pl-pds\">\"</span></span>, darkTheme);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bjones86", "createdAt": "2020-11-19T13:46:38Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..08a596addb1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,13 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n                             \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n+                            String userTheme = \"sakaiUserTheme-notSet\";\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n+\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "64766e5649fe8a59a4a06161a64063044c020f9a", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 08a596addb1..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1740,11 +1740,7 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n                             \n-                            String userTheme = \"sakaiUserTheme-notSet\";\n-                            \n-                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n-\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n                             rcontext.put(\"userTheme\", userTheme);\n                         }\n \n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,9 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n-                            \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "8739791dd10b189c4e62852d834eda5f3e4301fa", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 34be6ff9c3d..b3f8de43ff5 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1737,12 +1739,19 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         \t}\n                         }\n \n-                        if(sakaiThemeSwitcherEnabled) {\n-                            rcontext.put(\"themeSwitcher\", true);\n-                            \n-                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n-                            rcontext.put(\"userTheme\", userTheme);\n-                        }\n+\t\t\tif(sakaiThemesEnabled) {\n+\t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n+\n+\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n+\t\t\t\t}\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\trcontext.put(\"userTheme\", userTheme);\n+\t\t\t}\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n \t\t\t\t\t&& (poweredByAltText != null)\n", "next_change": {"commit": "6c09deeb995c2e82389eb984ee99fce83878964e", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex b3f8de43ff5..d07b1d9a5b1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1668,88 +1693,87 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \t\t\tcopyright = copyright.replaceAll(SERVER_COPYRIGHT_CURRENT_YEAR_KEYWORD, currentServerYear);\n \n \t\t\tString service = ServerConfigurationService.getString(\"ui.service\", \"Sakai\");\n-\t\t\tString serviceVersion = ServerConfigurationService.getString(\n-\t\t\t\t\t\"version.service\", \"?\");\n-\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\",\n-\t\t\t\"?\");\n+\t\t\tString serviceVersion = ServerConfigurationService.getString(\"version.service\", \"?\");\n+\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\", \"?\");\n \t\t\tString server = ServerConfigurationService.getServerId();\n-\t\t\tString[] bottomNav = ServerConfigurationService.getStrings(\"bottomnav\");\n+\t\t\tString[] footerLinks = ServerConfigurationService.getStrings(\"footerlinks\");\n+\t\t\tList<HashMap<String, String>> footerLinksList = Arrays.asList(footerLinks).stream()\n+\t\t\t\t\t.map((footerlink) -> {\n+\t\t\t\t\t\tString[] linkValues = StringUtils.split(footerlink, \";\");\n+\t\t\t\t\t\tif (linkValues.length < 2) {\n+\t\t\t\t\t\t\treturn null;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tHashMap<String, String> linkMap = new HashMap();\n+\t\t\t\t\t\t\tlinkMap.put(\"text\", linkValues[0]);\n+\t\t\t\t\t\t\tlinkMap.put(\"href\", linkValues[1]);\n+\t\t\t\t\t\t\tif (linkValues.length >= 3) {\n+\t\t\t\t\t\t\t\tlinkMap.put(\"target\", linkValues[2]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\treturn linkMap;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t.filter((link) -> link != null)\n+\t\t\t.collect(Collectors.toList());\n+\t\t\trcontext.put(\"footerLinks\", footerLinksList);\n \t\t\tString[] poweredByUrl = ServerConfigurationService.getStrings(\"powered.url\");\n-\t\t\tString[] poweredByImage = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.img\");\n-\t\t\tString[] poweredByAltText = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.alt\");\n+\t\t\tString[] poweredByImage = ServerConfigurationService.getStrings(\"powered.img\");\n+\t\t\tString[] poweredByAltText = ServerConfigurationService.getStrings(\"powered.alt\");\n+\n+\t\t\tString neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n+\t\t\tboolean neoChatAvailable = false;\n+\n+\t\t\tif (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = Boolean.valueOf(neoChatProperty);\n+\t\t\t\tif (site != null) {\n+\t\t\t\t\tString siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n+\t\t\t\t\tif (siteNeoChatStr != null) {\n+\t\t\t\t\t\tneoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\t{\n-\t\t\t\tList<Object> l = new ArrayList<Object>();\n-\t\t\t\tif ((bottomNav != null) && (bottomNav.length > 0))\n-\t\t\t\t{\n-\t\t\t\t\tfor (int i = 0; i < bottomNav.length; i++)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tl.add(bottomNav[i]);\n+\t\t\tif (\"always\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = true;\n+\t\t\t}\n+\n+\t\t\tif (!chatHelper.checkChatPermitted(thisUser)) {\n+\t\t\t\tneoChatAvailable = false;\n+\t\t\t}\n+\n+\t\t\trcontext.put(\"neoChat\", neoChatAvailable);\n+\t\t\trcontext.put(\"portalChatPollInterval\", ServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n+\t\t\trcontext.put(\"neoAvatar\", ServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n+\t\t\trcontext.put(\"neoChatVideo\", ServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n+\t\t\trcontext.put(\"portalVideoChatTimeout\", ServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n+\n+\t\t\tif (sakaiTutorialEnabled && thisUser != null) {\n+\t\t\t\tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n+\t\t\t\t\trcontext.put(\"tutorial\", true);\n+\t\t\t\t\t//now save this in the user's preferences so we don't show it again\n+\t\t\t\t\tPreferencesEdit preferences = null;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tpreferences = preferencesService.edit(thisUser);\n+\t\t\t\t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n+\t\t\t\t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n+\t\t\t\t\t\tpreferencesService.commit(preferences);   \n+\t\t\t\t\t} catch (SakaiException e1) {\n+\t\t\t\t\t\tlog.error(e1.getMessage(), e1);\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\trcontext.put(\"bottomNav\", l);\n \t\t\t}\n \n-                        String neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n-                        boolean neoChatAvailable = false;\n- \n-                        if (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n-                            neoChatAvailable = Boolean.valueOf(neoChatProperty);\n-                            if (site != null) {\n-                                String siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n-                                if (siteNeoChatStr != null) {\n-                                    neoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n-                                }\n-                            }\n-                        }\n-\n-                        if (\"always\".equals(neoChatProperty)) {\n-                            neoChatAvailable = true;\n-                        }\n-\n-                        if (!chatHelper.checkChatPermitted(thisUser)) {\n-                            neoChatAvailable = false;\n-                        }\n-\n-                        rcontext.put(\"neoChat\", neoChatAvailable);\n-                        rcontext.put(\"portalChatPollInterval\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n-                        rcontext.put(\"neoAvatar\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n-                        rcontext.put(\"neoChatVideo\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n-                        rcontext.put(\"portalVideoChatTimeout\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n-\n-                        if(sakaiTutorialEnabled && thisUser != null) {\n-                        \tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n-                        \t\trcontext.put(\"tutorial\", true);\n-                        \t\t//now save this in the user's preferences so we don't show it again\n-                        \t\tPreferencesEdit preferences = null;\n-                        \t\ttry {\n-                        \t\t\tpreferences = preferencesService.edit(thisUser);\n-                        \t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n-                        \t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n-                        \t\t\tpreferencesService.commit(preferences);   \n-                        \t\t} catch (SakaiException e1) {\n-                        \t\t\tlog.error(e1.getMessage(), e1);\n-                        \t\t}\n-                        \t}\n-                        }\n-\n-\t\t\tif(sakaiThemesEnabled) {\n+\t\t\tif (sakaiThemesEnabled) {\n \t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n \n-\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\tif (sakaiThemeSwitcherEnabled) {\n \t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\tif (sakaiThemesAutoDetectDarkEnabled) {\n \t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n \t\t\t\t}\n-\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS)\n+\t\t\t\t\t.getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n \t\t\t\trcontext.put(\"userTheme\", userTheme);\n \t\t\t}\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "message": "Merge commit", "committedDate": null}, {"oid": "8739791dd10b189c4e62852d834eda5f3e4301fa", "committedDate": "2021-03-02 11:38:26 -0500", "message": "SAK-45006 Control dark theme with a property separate of the theme toggle (#9012)"}, {"oid": "53f53ee631ce7f3e55b1f844e56546a4c207f5e6", "committedDate": "2021-06-01 14:00:55 -0400", "message": "SAK-45006 Dark mode update props to be consistent"}, {"oid": "7b7cd99c69a7083d2a7dee00f5b8502d640bc6aa", "committedDate": "2022-06-17 14:49:13 +0200", "message": "SAK-47442 MathJax: Global configuration using properties"}, {"oid": "10963b7eb16b62ccb83b2a873628cc70d2a3841d", "committedDate": "2022-06-23 10:42:53 -0400", "message": "SAK-47489 Bullhorns this disables SSE and modifies the fetch to the /direct/ endpoint (#10680)"}, {"oid": "951cf5c3da8cf1a571f1b302b3ba8506a149d9b9", "committedDate": "2022-09-14 13:50:40 +0200", "message": "SAK-47829 MathJax: Apply portalCDNQuery on mathjax-config.js imports"}, {"oid": "25dab7336707926c685207e20af02b343b1b0ba7", "committedDate": "2022-10-11 11:22:05 -0400", "message": "SAK-47852 Plus (LTI Advantage Provider) initial addition to Sakai (#10877)"}, {"oid": "6c09deeb995c2e82389eb984ee99fce83878964e", "committedDate": "2022-10-27 14:12:50 -0400", "message": "SAK-46392 Trinity portal implementation (#10960)"}, {"oid": "0ee74f6661863a5a17d621bb4f39fce50febcb77", "committedDate": "2022-12-12 10:31:34 +0100", "message": "SAK-48153 - Support Analytics GA4 since Universal is being deprecated"}, {"oid": "07297b46d848674486a1d2abdc36707197b9a21a", "committedDate": "2022-12-14 16:41:23 +0000", "message": "SAK-48188 Merge MessagingService into UserMessagingService (#11092)"}, {"oid": "e74337c40386f59374b018513edef47b5993d06e", "committedDate": "2022-12-27 11:24:34 +0000", "message": "SAK-48245 notifications: add missing types (#11147)"}, {"oid": "e145f85dad88f43eb00a9cb19e4a8a9d0e90d358", "committedDate": "2023-02-17 12:03:47 +0000", "message": "SAK-48444 portal: update pinned when user removed (#11253)"}, {"oid": "b3aefc24ff52b13c006570264c2942ebb23817ef", "committedDate": "2023-02-22 18:11:53 +0000", "message": "SAK-48083 portal: Add push capability to Sakai (#11038)"}, {"oid": "5cc7a4c7e4fe5705a1be2eab64f568318d4adb51", "committedDate": "2023-02-23 17:03:03 +0000", "message": "SAK-48504 Portal:  Uncaught SyntaxError: redeclaration of const roleSwitchButton (#11280)"}, {"oid": "1ac2c9599756da021ef0eeb90e0a41eee8f1dd20", "committedDate": "2023-02-25 11:40:41 +0000", "message": "SAK-48524 portal: added home tool title to sitenav properties (#11294)"}, {"oid": "301ceb85bca0d29fea497f1a440dd3ba3aa5ac0a", "committedDate": "2023-02-26 22:24:58 +0000", "message": "SAK-48528 portal: move connection-manager and profile popup i18n (#11299)"}, {"oid": "a507302ef10c706feaac7d7c7b9518b37cf0679e", "committedDate": "2023-03-21 14:49:20 +0000", "message": "SAK-48638 Portal: xlogin button not launching login prompt (#11348)"}, {"oid": "aa689cf812d1f11efb70d95a58e187b1d5b4aac9", "committedDate": "2023-04-20 09:50:55 +0100", "message": "SAK-48337 Trinity: Improve display of pinned sites by collapsing Home after login (#11467)"}, {"oid": "3a51c7bb12918a7c3801c1ba36c5f7ea5f3d4bae", "committedDate": "2023-05-01 12:30:02 +0100", "message": "SAK-48631 Portal: Theme switch should only display if enabled by properties (#11345)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r526993250", "body": "Or just one line rcontext.put(\"darkTheme\", themePrefs.getBooleanProperty(\"darkTheme\"));", "bodyText": "Or just one line rcontext.put(\"darkTheme\", themePrefs.getBooleanProperty(\"darkTheme\"));", "bodyHTML": "<p dir=\"auto\">Or just one line rcontext.put(\"darkTheme\", themePrefs.getBooleanProperty(\"darkTheme\"));</p>", "author": "adrianfish", "createdAt": "2020-11-19T15:49:14Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1738,13 +1738,33 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+\n+                            boolean darkTheme = false;\n+                            int themeUserPref = -1;\n+                            \n+                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            try {\n+                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n+                                    \n+                                    //temporary:\n+                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n+                                        themeUserPref = 1;\n+                                    } else {\n+                                        themeUserPref = 0;\n+                                    }\n+                            }\n+                            catch (Exception any) { \n+                                    // We'll default to light theme\n+                            }\n+                            \n+                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));", "originalCommit": "e71775ffc9e0d0c54b438222722cce740dfdace2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5MDE5Mg==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527090192", "bodyText": "Doesn't it need to be wrapped in the try-catch? And if I move it to the try block, then the default won't get put in the context.", "author": "fostersdesign", "createdAt": "2020-11-19T18:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0OTU0OQ==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r527149549", "bodyText": "Yes, you still need the try/catch. Anyway, you want a string now, don't you?", "author": "adrianfish", "createdAt": "2020-11-19T19:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk5MzI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..08a596addb1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,13 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n                             \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n+                            String userTheme = \"sakaiUserTheme-notSet\";\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n+\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "64766e5649fe8a59a4a06161a64063044c020f9a", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 08a596addb1..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1740,11 +1740,7 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n                             \n-                            String userTheme = \"sakaiUserTheme-notSet\";\n-                            \n-                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n-\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n                             rcontext.put(\"userTheme\", userTheme);\n                         }\n \n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex cfd967d7d66..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1742,28 +1739,9 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n-\n-                            boolean darkTheme = false;\n-                            int themeUserPref = -1;\n-                            \n-                            ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            try {\n-                                    darkTheme = themePrefs.getBooleanProperty(\"darkTheme\");\n-                                    \n-                                    //temporary:\n-                                    if(themePrefs.getBooleanProperty(\"darkTheme\")) {\n-                                        themeUserPref = 1;\n-                                    } else {\n-                                        themeUserPref = 0;\n-                                    }\n-                            }\n-                            catch (Exception any) { \n-                                    // We'll default to light theme\n-                            }\n-                            \n-                            rcontext.put(\"darkTheme\", Boolean.valueOf(darkTheme));\n                             \n-                            rcontext.put(\"themeUserPref\", themeUserPref);\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+                            rcontext.put(\"userTheme\", userTheme);\n                         }\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n", "next_change": {"commit": "8739791dd10b189c4e62852d834eda5f3e4301fa", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 34be6ff9c3d..b3f8de43ff5 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1737,12 +1739,19 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         \t}\n                         }\n \n-                        if(sakaiThemeSwitcherEnabled) {\n-                            rcontext.put(\"themeSwitcher\", true);\n-                            \n-                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n-                            rcontext.put(\"userTheme\", userTheme);\n-                        }\n+\t\t\tif(sakaiThemesEnabled) {\n+\t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n+\n+\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n+\t\t\t\t}\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\trcontext.put(\"userTheme\", userTheme);\n+\t\t\t}\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n \t\t\t\t\t&& (poweredByAltText != null)\n", "next_change": {"commit": "6c09deeb995c2e82389eb984ee99fce83878964e", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex b3f8de43ff5..d07b1d9a5b1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1668,88 +1693,87 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \t\t\tcopyright = copyright.replaceAll(SERVER_COPYRIGHT_CURRENT_YEAR_KEYWORD, currentServerYear);\n \n \t\t\tString service = ServerConfigurationService.getString(\"ui.service\", \"Sakai\");\n-\t\t\tString serviceVersion = ServerConfigurationService.getString(\n-\t\t\t\t\t\"version.service\", \"?\");\n-\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\",\n-\t\t\t\"?\");\n+\t\t\tString serviceVersion = ServerConfigurationService.getString(\"version.service\", \"?\");\n+\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\", \"?\");\n \t\t\tString server = ServerConfigurationService.getServerId();\n-\t\t\tString[] bottomNav = ServerConfigurationService.getStrings(\"bottomnav\");\n+\t\t\tString[] footerLinks = ServerConfigurationService.getStrings(\"footerlinks\");\n+\t\t\tList<HashMap<String, String>> footerLinksList = Arrays.asList(footerLinks).stream()\n+\t\t\t\t\t.map((footerlink) -> {\n+\t\t\t\t\t\tString[] linkValues = StringUtils.split(footerlink, \";\");\n+\t\t\t\t\t\tif (linkValues.length < 2) {\n+\t\t\t\t\t\t\treturn null;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tHashMap<String, String> linkMap = new HashMap();\n+\t\t\t\t\t\t\tlinkMap.put(\"text\", linkValues[0]);\n+\t\t\t\t\t\t\tlinkMap.put(\"href\", linkValues[1]);\n+\t\t\t\t\t\t\tif (linkValues.length >= 3) {\n+\t\t\t\t\t\t\t\tlinkMap.put(\"target\", linkValues[2]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\treturn linkMap;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t.filter((link) -> link != null)\n+\t\t\t.collect(Collectors.toList());\n+\t\t\trcontext.put(\"footerLinks\", footerLinksList);\n \t\t\tString[] poweredByUrl = ServerConfigurationService.getStrings(\"powered.url\");\n-\t\t\tString[] poweredByImage = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.img\");\n-\t\t\tString[] poweredByAltText = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.alt\");\n+\t\t\tString[] poweredByImage = ServerConfigurationService.getStrings(\"powered.img\");\n+\t\t\tString[] poweredByAltText = ServerConfigurationService.getStrings(\"powered.alt\");\n+\n+\t\t\tString neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n+\t\t\tboolean neoChatAvailable = false;\n+\n+\t\t\tif (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = Boolean.valueOf(neoChatProperty);\n+\t\t\t\tif (site != null) {\n+\t\t\t\t\tString siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n+\t\t\t\t\tif (siteNeoChatStr != null) {\n+\t\t\t\t\t\tneoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\t{\n-\t\t\t\tList<Object> l = new ArrayList<Object>();\n-\t\t\t\tif ((bottomNav != null) && (bottomNav.length > 0))\n-\t\t\t\t{\n-\t\t\t\t\tfor (int i = 0; i < bottomNav.length; i++)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tl.add(bottomNav[i]);\n+\t\t\tif (\"always\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = true;\n+\t\t\t}\n+\n+\t\t\tif (!chatHelper.checkChatPermitted(thisUser)) {\n+\t\t\t\tneoChatAvailable = false;\n+\t\t\t}\n+\n+\t\t\trcontext.put(\"neoChat\", neoChatAvailable);\n+\t\t\trcontext.put(\"portalChatPollInterval\", ServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n+\t\t\trcontext.put(\"neoAvatar\", ServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n+\t\t\trcontext.put(\"neoChatVideo\", ServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n+\t\t\trcontext.put(\"portalVideoChatTimeout\", ServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n+\n+\t\t\tif (sakaiTutorialEnabled && thisUser != null) {\n+\t\t\t\tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n+\t\t\t\t\trcontext.put(\"tutorial\", true);\n+\t\t\t\t\t//now save this in the user's preferences so we don't show it again\n+\t\t\t\t\tPreferencesEdit preferences = null;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tpreferences = preferencesService.edit(thisUser);\n+\t\t\t\t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n+\t\t\t\t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n+\t\t\t\t\t\tpreferencesService.commit(preferences);   \n+\t\t\t\t\t} catch (SakaiException e1) {\n+\t\t\t\t\t\tlog.error(e1.getMessage(), e1);\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\trcontext.put(\"bottomNav\", l);\n \t\t\t}\n \n-                        String neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n-                        boolean neoChatAvailable = false;\n- \n-                        if (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n-                            neoChatAvailable = Boolean.valueOf(neoChatProperty);\n-                            if (site != null) {\n-                                String siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n-                                if (siteNeoChatStr != null) {\n-                                    neoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n-                                }\n-                            }\n-                        }\n-\n-                        if (\"always\".equals(neoChatProperty)) {\n-                            neoChatAvailable = true;\n-                        }\n-\n-                        if (!chatHelper.checkChatPermitted(thisUser)) {\n-                            neoChatAvailable = false;\n-                        }\n-\n-                        rcontext.put(\"neoChat\", neoChatAvailable);\n-                        rcontext.put(\"portalChatPollInterval\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n-                        rcontext.put(\"neoAvatar\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n-                        rcontext.put(\"neoChatVideo\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n-                        rcontext.put(\"portalVideoChatTimeout\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n-\n-                        if(sakaiTutorialEnabled && thisUser != null) {\n-                        \tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n-                        \t\trcontext.put(\"tutorial\", true);\n-                        \t\t//now save this in the user's preferences so we don't show it again\n-                        \t\tPreferencesEdit preferences = null;\n-                        \t\ttry {\n-                        \t\t\tpreferences = preferencesService.edit(thisUser);\n-                        \t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n-                        \t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n-                        \t\t\tpreferencesService.commit(preferences);   \n-                        \t\t} catch (SakaiException e1) {\n-                        \t\t\tlog.error(e1.getMessage(), e1);\n-                        \t\t}\n-                        \t}\n-                        }\n-\n-\t\t\tif(sakaiThemesEnabled) {\n+\t\t\tif (sakaiThemesEnabled) {\n \t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n \n-\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\tif (sakaiThemeSwitcherEnabled) {\n \t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\tif (sakaiThemesAutoDetectDarkEnabled) {\n \t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n \t\t\t\t}\n-\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS)\n+\t\t\t\t\t.getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n \t\t\t\trcontext.put(\"userTheme\", userTheme);\n \t\t\t}\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "message": "Merge commit", "committedDate": null}, {"oid": "8739791dd10b189c4e62852d834eda5f3e4301fa", "committedDate": "2021-03-02 11:38:26 -0500", "message": "SAK-45006 Control dark theme with a property separate of the theme toggle (#9012)"}, {"oid": "53f53ee631ce7f3e55b1f844e56546a4c207f5e6", "committedDate": "2021-06-01 14:00:55 -0400", "message": "SAK-45006 Dark mode update props to be consistent"}, {"oid": "7b7cd99c69a7083d2a7dee00f5b8502d640bc6aa", "committedDate": "2022-06-17 14:49:13 +0200", "message": "SAK-47442 MathJax: Global configuration using properties"}, {"oid": "10963b7eb16b62ccb83b2a873628cc70d2a3841d", "committedDate": "2022-06-23 10:42:53 -0400", "message": "SAK-47489 Bullhorns this disables SSE and modifies the fetch to the /direct/ endpoint (#10680)"}, {"oid": "951cf5c3da8cf1a571f1b302b3ba8506a149d9b9", "committedDate": "2022-09-14 13:50:40 +0200", "message": "SAK-47829 MathJax: Apply portalCDNQuery on mathjax-config.js imports"}, {"oid": "25dab7336707926c685207e20af02b343b1b0ba7", "committedDate": "2022-10-11 11:22:05 -0400", "message": "SAK-47852 Plus (LTI Advantage Provider) initial addition to Sakai (#10877)"}, {"oid": "6c09deeb995c2e82389eb984ee99fce83878964e", "committedDate": "2022-10-27 14:12:50 -0400", "message": "SAK-46392 Trinity portal implementation (#10960)"}, {"oid": "0ee74f6661863a5a17d621bb4f39fce50febcb77", "committedDate": "2022-12-12 10:31:34 +0100", "message": "SAK-48153 - Support Analytics GA4 since Universal is being deprecated"}, {"oid": "07297b46d848674486a1d2abdc36707197b9a21a", "committedDate": "2022-12-14 16:41:23 +0000", "message": "SAK-48188 Merge MessagingService into UserMessagingService (#11092)"}, {"oid": "e74337c40386f59374b018513edef47b5993d06e", "committedDate": "2022-12-27 11:24:34 +0000", "message": "SAK-48245 notifications: add missing types (#11147)"}, {"oid": "e145f85dad88f43eb00a9cb19e4a8a9d0e90d358", "committedDate": "2023-02-17 12:03:47 +0000", "message": "SAK-48444 portal: update pinned when user removed (#11253)"}, {"oid": "b3aefc24ff52b13c006570264c2942ebb23817ef", "committedDate": "2023-02-22 18:11:53 +0000", "message": "SAK-48083 portal: Add push capability to Sakai (#11038)"}, {"oid": "5cc7a4c7e4fe5705a1be2eab64f568318d4adb51", "committedDate": "2023-02-23 17:03:03 +0000", "message": "SAK-48504 Portal:  Uncaught SyntaxError: redeclaration of const roleSwitchButton (#11280)"}, {"oid": "1ac2c9599756da021ef0eeb90e0a41eee8f1dd20", "committedDate": "2023-02-25 11:40:41 +0000", "message": "SAK-48524 portal: added home tool title to sitenav properties (#11294)"}, {"oid": "301ceb85bca0d29fea497f1a440dd3ba3aa5ac0a", "committedDate": "2023-02-26 22:24:58 +0000", "message": "SAK-48528 portal: move connection-manager and profile popup i18n (#11299)"}, {"oid": "a507302ef10c706feaac7d7c7b9518b37cf0679e", "committedDate": "2023-03-21 14:49:20 +0000", "message": "SAK-48638 Portal: xlogin button not launching login prompt (#11348)"}, {"oid": "aa689cf812d1f11efb70d95a58e187b1d5b4aac9", "committedDate": "2023-04-20 09:50:55 +0100", "message": "SAK-48337 Trinity: Improve display of pinned sites by collapsing Home after login (#11467)"}, {"oid": "3a51c7bb12918a7c3801c1ba36c5f7ea5f3d4bae", "committedDate": "2023-05-01 12:30:02 +0100", "message": "SAK-48631 Portal: Theme switch should only display if enabled by properties (#11345)"}]}, {"oid": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "url": "https://github.com/sakaiproject/sakai/commit/993b310a1e7f44c03369f27bf11ee635eadebbb9", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-17T05:23:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r545207440", "body": "```suggestion\r\n                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        String userTheme = \"sakaiUserTheme-notSet\";\n          \n          \n            \n                                        \n          \n          \n            \n                                        //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n          \n          \n            \n                                        userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n          \n          \n            \n                                        String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-smi\">String</span> userTheme <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sakaiUserTheme-notSet<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span>ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            userTheme <span class=\"pl-k\">=</span> prefs<span class=\"pl-k\">.</span>getProperties(<span class=\"pl-smi\">org.sakaiproject.user.api<span class=\"pl-k\">.</span>PreferencesService</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>USER_SELECTED_UI_THEME_PREFS</span>)<span class=\"pl-k\">.</span>getProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>theme<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-smi\">String</span> userTheme <span class=\"pl-k\">=</span> <span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>defaultIfEmpty(prefs<span class=\"pl-k\">.</span>getProperties(<span class=\"pl-smi\">org.sakaiproject.user.api<span class=\"pl-k\">.</span>PreferencesService</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>USER_SELECTED_UI_THEME_PREFS</span>)<span class=\"pl-k\">.</span>getProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>theme<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sakaiUserTheme-notSet<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ern", "createdAt": "2020-12-17T16:05:03Z", "path": "portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java", "diffHunk": "@@ -1735,13 +1735,18 @@ public void includeBottom(PortalRenderContext rcontext, Site site)\n                         \t\t\tlog.error(e1.getMessage(), e1);\n                         \t\t}\n                         \t}\n-\t\t\t\t\t\t}\n+                        }\n \n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n+                            \n+                            String userTheme = \"sakaiUserTheme-notSet\";\n+                            \n+                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n+                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");", "originalCommit": "993b310a1e7f44c03369f27bf11ee635eadebbb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI1ODA3Nw==", "url": "https://github.com/sakaiproject/sakai/pull/8826#discussion_r548258077", "bodyText": "Thanks for the suggestion. I've made this change.", "author": "fostersdesign", "createdAt": "2020-12-23T21:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNzQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "64766e5649fe8a59a4a06161a64063044c020f9a", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 08a596addb1..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1740,11 +1740,7 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n                             \n-                            String userTheme = \"sakaiUserTheme-notSet\";\n-                            \n-                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n-\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n                             rcontext.put(\"userTheme\", userTheme);\n                         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 08a596addb1..34be6ff9c3d 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1740,11 +1740,7 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         if(sakaiThemeSwitcherEnabled) {\n                             rcontext.put(\"themeSwitcher\", true);\n                             \n-                            String userTheme = \"sakaiUserTheme-notSet\";\n-                            \n-                            //ResourceProperties themePrefs = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS);\n-                            userTheme = prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\");\n-\n+                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n                             rcontext.put(\"userTheme\", userTheme);\n                         }\n \n", "next_change": {"commit": "8739791dd10b189c4e62852d834eda5f3e4301fa", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex 34be6ff9c3d..b3f8de43ff5 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1737,12 +1739,19 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n                         \t}\n                         }\n \n-                        if(sakaiThemeSwitcherEnabled) {\n-                            rcontext.put(\"themeSwitcher\", true);\n-                            \n-                            String userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n-                            rcontext.put(\"userTheme\", userTheme);\n-                        }\n+\t\t\tif(sakaiThemesEnabled) {\n+\t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n+\n+\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n+\t\t\t\t}\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\trcontext.put(\"userTheme\", userTheme);\n+\t\t\t}\n \n \t\t\tif ((poweredByUrl != null) && (poweredByImage != null)\n \t\t\t\t\t&& (poweredByAltText != null)\n", "next_change": {"commit": "6c09deeb995c2e82389eb984ee99fce83878964e", "changed_code": [{"header": "diff --git a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\nindex b3f8de43ff5..d07b1d9a5b1 100644\n--- a/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n+++ b/portal/portal-impl/impl/src/java/org/sakaiproject/portal/charon/SkinnableCharonPortal.java\n", "chunk": "@@ -1668,88 +1693,87 @@ public class SkinnableCharonPortal extends HttpServlet implements Portal\n \t\t\tcopyright = copyright.replaceAll(SERVER_COPYRIGHT_CURRENT_YEAR_KEYWORD, currentServerYear);\n \n \t\t\tString service = ServerConfigurationService.getString(\"ui.service\", \"Sakai\");\n-\t\t\tString serviceVersion = ServerConfigurationService.getString(\n-\t\t\t\t\t\"version.service\", \"?\");\n-\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\",\n-\t\t\t\"?\");\n+\t\t\tString serviceVersion = ServerConfigurationService.getString(\"version.service\", \"?\");\n+\t\t\tString sakaiVersion = ServerConfigurationService.getString(\"version.sakai\", \"?\");\n \t\t\tString server = ServerConfigurationService.getServerId();\n-\t\t\tString[] bottomNav = ServerConfigurationService.getStrings(\"bottomnav\");\n+\t\t\tString[] footerLinks = ServerConfigurationService.getStrings(\"footerlinks\");\n+\t\t\tList<HashMap<String, String>> footerLinksList = Arrays.asList(footerLinks).stream()\n+\t\t\t\t\t.map((footerlink) -> {\n+\t\t\t\t\t\tString[] linkValues = StringUtils.split(footerlink, \";\");\n+\t\t\t\t\t\tif (linkValues.length < 2) {\n+\t\t\t\t\t\t\treturn null;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tHashMap<String, String> linkMap = new HashMap();\n+\t\t\t\t\t\t\tlinkMap.put(\"text\", linkValues[0]);\n+\t\t\t\t\t\t\tlinkMap.put(\"href\", linkValues[1]);\n+\t\t\t\t\t\t\tif (linkValues.length >= 3) {\n+\t\t\t\t\t\t\t\tlinkMap.put(\"target\", linkValues[2]);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\treturn linkMap;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t})\n+\t\t\t\t.filter((link) -> link != null)\n+\t\t\t.collect(Collectors.toList());\n+\t\t\trcontext.put(\"footerLinks\", footerLinksList);\n \t\t\tString[] poweredByUrl = ServerConfigurationService.getStrings(\"powered.url\");\n-\t\t\tString[] poweredByImage = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.img\");\n-\t\t\tString[] poweredByAltText = ServerConfigurationService\n-\t\t\t.getStrings(\"powered.alt\");\n+\t\t\tString[] poweredByImage = ServerConfigurationService.getStrings(\"powered.img\");\n+\t\t\tString[] poweredByAltText = ServerConfigurationService.getStrings(\"powered.alt\");\n+\n+\t\t\tString neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n+\t\t\tboolean neoChatAvailable = false;\n+\n+\t\t\tif (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = Boolean.valueOf(neoChatProperty);\n+\t\t\t\tif (site != null) {\n+\t\t\t\t\tString siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n+\t\t\t\t\tif (siteNeoChatStr != null) {\n+\t\t\t\t\t\tneoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\t{\n-\t\t\t\tList<Object> l = new ArrayList<Object>();\n-\t\t\t\tif ((bottomNav != null) && (bottomNav.length > 0))\n-\t\t\t\t{\n-\t\t\t\t\tfor (int i = 0; i < bottomNav.length; i++)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tl.add(bottomNav[i]);\n+\t\t\tif (\"always\".equals(neoChatProperty)) {\n+\t\t\t\tneoChatAvailable = true;\n+\t\t\t}\n+\n+\t\t\tif (!chatHelper.checkChatPermitted(thisUser)) {\n+\t\t\t\tneoChatAvailable = false;\n+\t\t\t}\n+\n+\t\t\trcontext.put(\"neoChat\", neoChatAvailable);\n+\t\t\trcontext.put(\"portalChatPollInterval\", ServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n+\t\t\trcontext.put(\"neoAvatar\", ServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n+\t\t\trcontext.put(\"neoChatVideo\", ServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n+\t\t\trcontext.put(\"portalVideoChatTimeout\", ServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n+\n+\t\t\tif (sakaiTutorialEnabled && thisUser != null) {\n+\t\t\t\tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n+\t\t\t\t\trcontext.put(\"tutorial\", true);\n+\t\t\t\t\t//now save this in the user's preferences so we don't show it again\n+\t\t\t\t\tPreferencesEdit preferences = null;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tpreferences = preferencesService.edit(thisUser);\n+\t\t\t\t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n+\t\t\t\t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n+\t\t\t\t\t\tpreferencesService.commit(preferences);   \n+\t\t\t\t\t} catch (SakaiException e1) {\n+\t\t\t\t\t\tlog.error(e1.getMessage(), e1);\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\trcontext.put(\"bottomNav\", l);\n \t\t\t}\n \n-                        String neoChatProperty = ServerConfigurationService.getString(Site.PROP_SITE_PORTAL_NEOCHAT, \"never\");\n-                        boolean neoChatAvailable = false;\n- \n-                        if (\"true\".equals(neoChatProperty) || \"false\".equals(neoChatProperty)) {\n-                            neoChatAvailable = Boolean.valueOf(neoChatProperty);\n-                            if (site != null) {\n-                                String siteNeoChatStr = site.getProperties().getProperty(Site.PROP_SITE_PORTAL_NEOCHAT);\n-                                if (siteNeoChatStr != null) {\n-                                    neoChatAvailable = Boolean.valueOf(siteNeoChatStr);\n-                                }\n-                            }\n-                        }\n-\n-                        if (\"always\".equals(neoChatProperty)) {\n-                            neoChatAvailable = true;\n-                        }\n-\n-                        if (!chatHelper.checkChatPermitted(thisUser)) {\n-                            neoChatAvailable = false;\n-                        }\n-\n-                        rcontext.put(\"neoChat\", neoChatAvailable);\n-                        rcontext.put(\"portalChatPollInterval\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.pollInterval\", 5000));\n-                        rcontext.put(\"neoAvatar\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.neoavatar\", true));\n-                        rcontext.put(\"neoChatVideo\", \n-\t\t\t\tServerConfigurationService.getBoolean(\"portal.chat.video\", true));\n-                        rcontext.put(\"portalVideoChatTimeout\", \n-\t\t\t\tServerConfigurationService.getInt(\"portal.chat.video.timeout\", 25));\n-\n-                        if(sakaiTutorialEnabled && thisUser != null) {\n-                        \tif (!(\"1\".equals(prefs.getProperties().getProperty(\"sakaiTutorialFlag\")))) {\n-                        \t\trcontext.put(\"tutorial\", true);\n-                        \t\t//now save this in the user's preferences so we don't show it again\n-                        \t\tPreferencesEdit preferences = null;\n-                        \t\ttry {\n-                        \t\t\tpreferences = preferencesService.edit(thisUser);\n-                        \t\t\tResourcePropertiesEdit props = preferences.getPropertiesEdit();\n-                        \t\t\tprops.addProperty(\"sakaiTutorialFlag\", \"1\");\n-                        \t\t\tpreferencesService.commit(preferences);   \n-                        \t\t} catch (SakaiException e1) {\n-                        \t\t\tlog.error(e1.getMessage(), e1);\n-                        \t\t}\n-                        \t}\n-                        }\n-\n-\t\t\tif(sakaiThemesEnabled) {\n+\t\t\tif (sakaiThemesEnabled) {\n \t\t\t\trcontext.put(\"sakaiThemesEnabled\", true);\n \n-\t\t\t\tif(sakaiThemeSwitcherEnabled) {\n+\t\t\t\tif (sakaiThemeSwitcherEnabled) {\n \t\t\t\t\trcontext.put(\"themeSwitcher\", true);\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tif(sakaiThemesAutoDetectDarkEnabled) {\n+\t\t\t\tif (sakaiThemesAutoDetectDarkEnabled) {\n \t\t\t\t\trcontext.put(\"themesAutoDetectDark\", true);\n \t\t\t\t}\n-\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS).getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n+\t\t\t\tString userTheme = StringUtils.defaultIfEmpty(prefs.getProperties(org.sakaiproject.user.api.PreferencesService.USER_SELECTED_UI_THEME_PREFS)\n+\t\t\t\t\t.getProperty(\"theme\"), \"sakaiUserTheme-notSet\");\n \t\t\t\trcontext.put(\"userTheme\", userTheme);\n \t\t\t}\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0f0398dc1a596a892a5582b98ebe245dbea073a3", "message": "Merge commit", "committedDate": null}, {"oid": "8739791dd10b189c4e62852d834eda5f3e4301fa", "committedDate": "2021-03-02 11:38:26 -0500", "message": "SAK-45006 Control dark theme with a property separate of the theme toggle (#9012)"}, {"oid": "53f53ee631ce7f3e55b1f844e56546a4c207f5e6", "committedDate": "2021-06-01 14:00:55 -0400", "message": "SAK-45006 Dark mode update props to be consistent"}, {"oid": "7b7cd99c69a7083d2a7dee00f5b8502d640bc6aa", "committedDate": "2022-06-17 14:49:13 +0200", "message": "SAK-47442 MathJax: Global configuration using properties"}, {"oid": "10963b7eb16b62ccb83b2a873628cc70d2a3841d", "committedDate": "2022-06-23 10:42:53 -0400", "message": "SAK-47489 Bullhorns this disables SSE and modifies the fetch to the /direct/ endpoint (#10680)"}, {"oid": "951cf5c3da8cf1a571f1b302b3ba8506a149d9b9", "committedDate": "2022-09-14 13:50:40 +0200", "message": "SAK-47829 MathJax: Apply portalCDNQuery on mathjax-config.js imports"}, {"oid": "25dab7336707926c685207e20af02b343b1b0ba7", "committedDate": "2022-10-11 11:22:05 -0400", "message": "SAK-47852 Plus (LTI Advantage Provider) initial addition to Sakai (#10877)"}, {"oid": "6c09deeb995c2e82389eb984ee99fce83878964e", "committedDate": "2022-10-27 14:12:50 -0400", "message": "SAK-46392 Trinity portal implementation (#10960)"}, {"oid": "0ee74f6661863a5a17d621bb4f39fce50febcb77", "committedDate": "2022-12-12 10:31:34 +0100", "message": "SAK-48153 - Support Analytics GA4 since Universal is being deprecated"}, {"oid": "07297b46d848674486a1d2abdc36707197b9a21a", "committedDate": "2022-12-14 16:41:23 +0000", "message": "SAK-48188 Merge MessagingService into UserMessagingService (#11092)"}, {"oid": "e74337c40386f59374b018513edef47b5993d06e", "committedDate": "2022-12-27 11:24:34 +0000", "message": "SAK-48245 notifications: add missing types (#11147)"}, {"oid": "e145f85dad88f43eb00a9cb19e4a8a9d0e90d358", "committedDate": "2023-02-17 12:03:47 +0000", "message": "SAK-48444 portal: update pinned when user removed (#11253)"}, {"oid": "b3aefc24ff52b13c006570264c2942ebb23817ef", "committedDate": "2023-02-22 18:11:53 +0000", "message": "SAK-48083 portal: Add push capability to Sakai (#11038)"}, {"oid": "5cc7a4c7e4fe5705a1be2eab64f568318d4adb51", "committedDate": "2023-02-23 17:03:03 +0000", "message": "SAK-48504 Portal:  Uncaught SyntaxError: redeclaration of const roleSwitchButton (#11280)"}, {"oid": "1ac2c9599756da021ef0eeb90e0a41eee8f1dd20", "committedDate": "2023-02-25 11:40:41 +0000", "message": "SAK-48524 portal: added home tool title to sitenav properties (#11294)"}, {"oid": "301ceb85bca0d29fea497f1a440dd3ba3aa5ac0a", "committedDate": "2023-02-26 22:24:58 +0000", "message": "SAK-48528 portal: move connection-manager and profile popup i18n (#11299)"}, {"oid": "a507302ef10c706feaac7d7c7b9518b37cf0679e", "committedDate": "2023-03-21 14:49:20 +0000", "message": "SAK-48638 Portal: xlogin button not launching login prompt (#11348)"}, {"oid": "aa689cf812d1f11efb70d95a58e187b1d5b4aac9", "committedDate": "2023-04-20 09:50:55 +0100", "message": "SAK-48337 Trinity: Improve display of pinned sites by collapsing Home after login (#11467)"}, {"oid": "3a51c7bb12918a7c3801c1ba36c5f7ea5f3d4bae", "committedDate": "2023-05-01 12:30:02 +0100", "message": "SAK-48631 Portal: Theme switch should only display if enabled by properties (#11345)"}]}, {"oid": "d05e1c7b05bd56973b874017ea29696a3c747055", "url": "https://github.com/sakaiproject/sakai/commit/d05e1c7b05bd56973b874017ea29696a3c747055", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:06:23Z", "type": "forcePushed"}, {"oid": "64766e5649fe8a59a4a06161a64063044c020f9a", "url": "https://github.com/sakaiproject/sakai/commit/64766e5649fe8a59a4a06161a64063044c020f9a", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:33:03Z", "type": "commit"}, {"oid": "64766e5649fe8a59a4a06161a64063044c020f9a", "url": "https://github.com/sakaiproject/sakai/commit/64766e5649fe8a59a4a06161a64063044c020f9a", "message": "SAK-44447 Save dark theme to server with user pref plus detect OS theme", "committedDate": "2020-12-23T21:33:03Z", "type": "forcePushed"}]}