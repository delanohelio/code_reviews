{"pr_number": 5445, "pr_title": "Add more Oracle tests", "pr_author": "hashhar", "pr_createdAt": "2020-10-07T12:39:02Z", "pr_url": "https://github.com/trinodb/trino/pull/5445", "timeline": [{"oid": "1bae86424489cefdd4cd2554e14818e29f25c462", "url": "https://github.com/trinodb/trino/commit/1bae86424489cefdd4cd2554e14818e29f25c462", "message": "Make TestOracleDistributedQueries extensible", "committedDate": "2020-10-08T06:31:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NzEzMQ==", "url": "https://github.com/trinodb/trino/pull/5445#discussion_r501587131", "body": "```suggestion\r\n                .collect(toDataProvider());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(columnName -> new Object[] {columnName})\n          \n          \n            \n                            .toArray(Object[][]::new);\n          \n          \n            \n                            .collect(toDataProvider());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .map(columnName <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Object</span>[] {columnName})</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .toArray(<span class=\"pl-k\">Object</span>[][]<span class=\"pl-k\">::</span><span class=\"pl-k\">new</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .collect(toDataProvider());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "losipiuk", "createdAt": "2020-10-08T09:44:26Z", "path": "presto-testing/src/main/java/io/prestosql/testing/AbstractTestDistributedQueries.java", "diffHunk": "@@ -1362,28 +1362,43 @@ private static boolean requiresDelimiting(String identifierName)\n     @DataProvider\n     public Object[][] testColumnNameDataProvider()\n     {\n-        return new Object[][] {\n-                {\"lowercase\"},\n-                {\"UPPERCASE\"},\n-                {\"MixedCase\"},\n-                {\"an_underscore\"},\n-                {\"a-hyphen-minus\"}, // ASCII '-' is HYPHEN-MINUS in Unicode\n-                {\"a space\"},\n-                {\"atrailingspace \"},\n-                {\" aleadingspace\"},\n-                {\"a.dot\"},\n-                {\"a,comma\"},\n-                {\"a:colon\"},\n-                {\"a;semicolon\"},\n-                {\"an@at\"},\n-                {\"a\\\"quote\"},\n-                {\"an'apostrophe\"},\n-                {\"a`backtick`\"},\n-                {\"a/slash`\"},\n-                {\"a\\\\backslash`\"},\n-                {\"adigit0\"},\n-                {\"0startwithdigit\"},\n-        };\n+        return testColumnNameTestData().stream()\n+                .map(this::filterColumnNameTestData)\n+                .filter(Optional::isPresent)\n+                .map(Optional::get)\n+                .map(columnName -> new Object[] {columnName})\n+                .toArray(Object[][]::new);", "originalCommit": "1bae86424489cefdd4cd2554e14818e29f25c462", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5MDI3Nw==", "url": "https://github.com/trinodb/trino/pull/5445#discussion_r501590277", "body": "why not \r\n```\r\n    protected SqlExecutor createJdbcSqlExecutor()\r\n    {\r\n        return oracleServer::execute;\r\n    }\r\n```", "bodyText": "why not\n    protected SqlExecutor createJdbcSqlExecutor()\n    {\n        return oracleServer::execute;\n    }", "bodyHTML": "<p dir=\"auto\">why not</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    protected SqlExecutor createJdbcSqlExecutor()\n    {\n        return oracleServer::execute;\n    }\"><pre><code>    protected SqlExecutor createJdbcSqlExecutor()\n    {\n        return oracleServer::execute;\n    }\n</code></pre></div>", "author": "losipiuk", "createdAt": "2020-10-08T09:49:27Z", "path": "presto-oracle/src/test/java/io/prestosql/plugin/oracle/TestOracleDistributedQueries.java", "diffHunk": "@@ -391,8 +395,17 @@ public void testInsertWithCoercion()\n     }\n \n     @Override\n-    public void testColumnName(String columnName)\n+    protected Optional<String> filterColumnNameTestData(String columnName)\n     {\n         // table names generated has more than 30chars, max size naming on oracle.\n+        return Optional.empty();\n+    }\n+\n+    protected JdbcSqlExecutor createJdbcSqlExecutor()\n+    {\n+        Properties properties = new Properties();\n+        properties.setProperty(\"user\", TEST_USER);\n+        properties.setProperty(\"password\", TEST_PASS);\n+        return new JdbcSqlExecutor(oracleServer.getJdbcUrl(), properties);", "originalCommit": "1bae86424489cefdd4cd2554e14818e29f25c462", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwMzk1Ng==", "url": "https://github.com/trinodb/trino/pull/5445#discussion_r501603956", "bodyText": "Changed as suggested.\nI can follow this up in a cleanup for all JDBC tests since all JDBC TestingServers do implement SqlExecutor's execute(sql) but don't explicitly implement that interface.\nWould be nice to be consistent and encapsulate the behavior where possible.", "author": "hashhar", "createdAt": "2020-10-08T10:11:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU5MDI3Nw=="}], "type": "inlineReview"}, {"oid": "0a82e3c9fe2f7930f89961d2a060dd47343a9fcd", "url": "https://github.com/trinodb/trino/commit/0a82e3c9fe2f7930f89961d2a060dd47343a9fcd", "message": "fixup! Make TestOracleDistributedQueries extensible", "committedDate": "2020-10-08T10:15:22Z", "type": "commit"}]}