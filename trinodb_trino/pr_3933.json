{"pr_number": 3933, "pr_title": "Reuse dynamic filters", "pr_author": "sopel39", "pr_createdAt": "2020-06-05T13:10:55Z", "pr_url": "https://github.com/trinodb/trino/pull/3933", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEwNDMxNw==", "url": "https://github.com/trinodb/trino/pull/3933#discussion_r436104317", "body": "```suggestion\r\n                    id = buildSymbolToDynamicFilter.computeIfAbsent(buildSymbol, key -> \"df_\" + idAllocator.getNextId().toString());\r\n```\r\n\r\nHowever, it's not a good idea to modify the map returned by `.collect(toMap(...))`. There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:\r\n\r\n> There are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n          \n          \n            \n                                    id = buildSymbolToDynamicFilter.get(buildSymbol);\n          \n          \n            \n                                }\n          \n          \n            \n                                else {\n          \n          \n            \n                                    id = \"df_\" + idAllocator.getNextId().toString();\n          \n          \n            \n                                    buildSymbolToDynamicFilter.put(buildSymbol, id);\n          \n          \n            \n                                }\n          \n          \n            \n                                id = buildSymbolToDynamicFilter.computeIfAbsent(buildSymbol, key -> \"df_\" + idAllocator.getNextId().toString());\n          \n      \n    \n    \n  \n\nHowever, it's not a good idea to modify the map returned by .collect(toMap(...)). There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:\n\nThere are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (buildSymbolToDynamicFilter<span class=\"pl-k\">.</span>containsKey(buildSymbol)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        id <span class=\"pl-k\">=</span> buildSymbolToDynamicFilter<span class=\"pl-k\">.</span>get(buildSymbol);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        id <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>df_<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> idAllocator<span class=\"pl-k\">.</span>getNextId()<span class=\"pl-k\">.</span>toString();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        buildSymbolToDynamicFilter<span class=\"pl-k\">.</span>put(buildSymbol, id);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    id <span class=\"pl-k\">=</span> buildSymbolToDynamicFilter<span class=\"pl-k\">.</span>computeIfAbsent(buildSymbol, key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>df_<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> idAllocator<span class=\"pl-k\">.</span>getNextId()<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">However, it's not a good idea to modify the map returned by <code>.collect(toMap(...))</code>. There's no guarantee that the map is mutable or that it's safe to change. From the javadocs:</p>\n<blockquote>\n<p dir=\"auto\">There are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.</p>\n</blockquote>", "author": "martint", "createdAt": "2020-06-05T18:49:23Z", "path": "presto-main/src/main/java/io/prestosql/sql/planner/optimizations/PredicatePushDown.java", "diffHunk": "@@ -578,10 +578,19 @@ private DynamicFiltersResult createDynamicFilters(JoinNode node, List<JoinNode.E\n                 // Even if equiJoinClauses.equals(node.getCriteria), current dynamic filters may not match equiJoinClauses\n                 ImmutableMap.Builder<String, Symbol> dynamicFiltersBuilder = ImmutableMap.builder();\n                 ImmutableList.Builder<Expression> predicatesBuilder = ImmutableList.builder();\n+                Map<Symbol, String> buildSymbolToDynamicFilter = node.getDynamicFilters().entrySet().stream()\n+                        .collect(toMap(Map.Entry::getValue, Map.Entry::getKey));\n                 for (JoinNode.EquiJoinClause clause : equiJoinClauses) {\n                     Symbol probeSymbol = clause.getLeft();\n                     Symbol buildSymbol = clause.getRight();\n-                    String id = \"df_\" + idAllocator.getNextId().toString();\n+                    String id;\n+                    if (buildSymbolToDynamicFilter.containsKey(buildSymbol)) {\n+                        id = buildSymbolToDynamicFilter.get(buildSymbol);\n+                    }\n+                    else {\n+                        id = \"df_\" + idAllocator.getNextId().toString();\n+                        buildSymbolToDynamicFilter.put(buildSymbol, id);\n+                    }", "originalCommit": "cd972f6802ecda2e2c14c6baa7cd68b84c5a1286", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c66103bf18e5be95e0696fd135762d873db6dab4", "url": "https://github.com/trinodb/trino/commit/c66103bf18e5be95e0696fd135762d873db6dab4", "message": "Use ImmutableMap collector in Predicte Push Down", "committedDate": "2020-06-08T12:08:02Z", "type": "commit"}, {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "message": "Reuse dynamic filters", "committedDate": "2020-06-08T12:09:24Z", "type": "commit"}, {"oid": "be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "url": "https://github.com/trinodb/trino/commit/be3f62a60c4127fe8d709a2d8431dbcdc8d75448", "message": "Reuse dynamic filters", "committedDate": "2020-06-08T12:09:24Z", "type": "forcePushed"}]}