{"pr_number": 8692, "pr_title": "Issue #8683: LambdaParameterName throws NPE parsing switch expressions", "pr_author": "nmancus1", "pr_createdAt": "2020-08-13T19:20:30Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8692", "timeline": [{"oid": "7a626a74b5e1ff9c9868a910a86dc1135364f68c", "url": "https://github.com/checkstyle/checkstyle/commit/7a626a74b5e1ff9c9868a910a86dc1135364f68c", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-13T19:35:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MzMxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8692#discussion_r471073315", "body": "Please split this `if` into two and revert `else if`. The condition will be easy to read. Or, the whole condition can be inverted:\r\n```java\r\n        final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\r\n        if (parametersNode != null) {\r\n            TokenUtil.forEachChild(parametersNode, TokenTypes.PARAMETER_DEF, super::visitToken);\r\n        }\r\n        else if (ast.getParent().getType() != TokenTypes.SWITCH_RULE) {\r\n            super.visitToken(ast);\r\n        }\r\n```", "bodyText": "Please split this if into two and revert else if. The condition will be easy to read. Or, the whole condition can be inverted:\n        final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n        if (parametersNode != null) {\n            TokenUtil.forEachChild(parametersNode, TokenTypes.PARAMETER_DEF, super::visitToken);\n        }\n        else if (ast.getParent().getType() != TokenTypes.SWITCH_RULE) {\n            super.visitToken(ast);\n        }", "bodyHTML": "<p dir=\"auto\">Please split this <code>if</code> into two and revert <code>else if</code>. The condition will be easy to read. Or, the whole condition can be inverted:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n        if (parametersNode != null) {\n            TokenUtil.forEachChild(parametersNode, TokenTypes.PARAMETER_DEF, super::visitToken);\n        }\n        else if (ast.getParent().getType() != TokenTypes.SWITCH_RULE) {\n            super.visitToken(ast);\n        }\"><pre>        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">DetailAST</span> parametersNode <span class=\"pl-k\">=</span> ast<span class=\"pl-k\">.</span>findFirstToken(<span class=\"pl-smi\">TokenTypes</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PARAMETERS</span>);\n        <span class=\"pl-k\">if</span> (parametersNode <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {\n            <span class=\"pl-smi\">TokenUtil</span><span class=\"pl-k\">.</span>forEachChild(parametersNode, <span class=\"pl-smi\">TokenTypes</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PARAMETER_DEF</span>, <span class=\"pl-c1\">super</span><span class=\"pl-k\">::</span>visitToken);\n        }\n        <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (ast<span class=\"pl-k\">.</span>getParent()<span class=\"pl-k\">.</span>getType() <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">TokenTypes</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SWITCH_RULE</span>) {\n            <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>visitToken(ast);\n        }</pre></div>", "author": "pbludov", "createdAt": "2020-08-16T06:38:54Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -113,10 +113,11 @@ public LambdaParameterNameCheck() {\n     @Override\n     public void visitToken(DetailAST ast) {\n         final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if (parametersNode == null) {\n+        if (parametersNode == null\n+                && ast.getParent().getType() != TokenTypes.SWITCH_RULE) {", "originalCommit": "7a626a74b5e1ff9c9868a910a86dc1135364f68c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwODYxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8692#discussion_r471108613", "bodyText": "Causes PMD violation:  PMD Failure: com.puppycrawl.tools.checkstyle.checks.naming.LambdaParameterNameCheck:117 Rule:ConfusingTernary Priority:3 Avoid if (x != y) ..; else ..;.\nI've worked around it with a method call, Objects.nonNull(ast.findFirstToken(TokenTypes.PARAMETERS))", "author": "nmancus1", "createdAt": "2020-08-16T12:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MzMxNQ=="}], "type": "inlineReview"}, {"oid": "712d2e3bd3f6bc7f7a47cdfb3bb3ca4865803bec", "url": "https://github.com/checkstyle/checkstyle/commit/712d2e3bd3f6bc7f7a47cdfb3bb3ca4865803bec", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:42:12Z", "type": "forcePushed"}, {"oid": "1f16f61343a3fed8e90667fb6337ad39292d54e1", "url": "https://github.com/checkstyle/checkstyle/commit/1f16f61343a3fed8e90667fb6337ad39292d54e1", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:43:55Z", "type": "commit"}, {"oid": "1f16f61343a3fed8e90667fb6337ad39292d54e1", "url": "https://github.com/checkstyle/checkstyle/commit/1f16f61343a3fed8e90667fb6337ad39292d54e1", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:43:55Z", "type": "forcePushed"}]}