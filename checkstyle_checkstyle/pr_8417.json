{"pr_number": 8417, "pr_title": "Issue #8407: new Check: PatternVariableName", "pr_author": "nmancus1", "pr_createdAt": "2020-07-07T23:33:14Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8417", "timeline": [{"oid": "9abd5c4a54cf5d1f46845b0506317c9d23197aba", "url": "https://github.com/checkstyle/checkstyle/commit/9abd5c4a54cf5d1f46845b0506317c9d23197aba", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-07T23:51:26Z", "type": "forcePushed"}, {"oid": "8e263e714ec0cfd3b6a382b0d66b82cf5addec9a", "url": "https://github.com/checkstyle/checkstyle/commit/8e263e714ec0cfd3b6a382b0d66b82cf5addec9a", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-08T01:23:50Z", "type": "forcePushed"}, {"oid": "95a6d60f3d83041d9fe84e89d6e8021af825693a", "url": "https://github.com/checkstyle/checkstyle/commit/95a6d60f3d83041d9fe84e89d6e8021af825693a", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-08T01:25:25Z", "type": "forcePushed"}, {"oid": "5117caf158dc65ce0e5e0aca61af581d046db275", "url": "https://github.com/checkstyle/checkstyle/commit/5117caf158dc65ce0e5e0aca61af581d046db275", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-08T01:34:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTQ0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241443", "body": "```suggestion\r\n    /** Creates a new {@code PatternVariableNameCheck} instance. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** Creates a new {@code PatternVariableName} instance. */\n          \n          \n            \n                /** Creates a new {@code PatternVariableNameCheck} instance. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Creates a new {@code <span class=\"x x-first x-last\">PatternVariableName</span>} instance. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Creates a new {@code <span class=\"x x-first x-last\">PatternVariableNameCheck</span>} instance. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "esilkensen", "createdAt": "2020-07-11T22:29:38Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,129 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Default value is\n+ * {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z](_?[a-zA-Z0-9]+)*$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STR) { // violation, name 'STR' must\n+ *                                         // match pattern '^[a-z](_?[a-zA-Z0-9]+)*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *         if (o1 instanceof Integer num_1) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check to that all variables have 3 or more chars in name:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"&gt;\n+ *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]{2,}$\"/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String s) { // violation, name 's' must\n+ *                                       // match pattern '^[a-z][_a-zA-Z0-9]{2,}$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * @since 8.35\n+ */\n+public class PatternVariableNameCheck extends AbstractNameCheck {\n+\n+    /** Creates a new {@code PatternVariableName} instance. */", "originalCommit": "5117caf158dc65ce0e5e0aca61af581d046db275", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDI0MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434241", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-13T04:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241558", "body": "```suggestion\r\n        // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\r\n```\r\n\r\nMeta comment: do we typically list \"violation\" and \"ok\" comments in test inputs that are used in multiple test configurations? I was just thinking it's potentially a little confusing reading this file to see references to different patterns.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n          \n            \n                    // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n      \n    \n    \n  \n\nMeta comment: do we typically list \"violation\" and \"ok\" comments in test inputs that are used in multiple test configurations? I was just thinking it's potentially a little confusing reading this file to see references to different patterns.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span>Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Meta comment: do we typically list \"violation\" and \"ok\" comments in test inputs that are used in multiple test configurations? I was just thinking it's potentially a little confusing reading this file to see references to different patterns.</p>", "author": "esilkensen", "createdAt": "2020-07-11T22:30:41Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "originalCommit": "5117caf158dc65ce0e5e0aca61af581d046db275", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2MTMyNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453261327", "bodyText": "Input should be used in single test methods, so single config.\nUnfortunately not all inputs follow this model.", "author": "romani", "createdAt": "2020-07-12T03:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDk3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453350974", "bodyText": "I am going to amend this PR to have one input for each test method, and will do this going forward for all checks.", "author": "nmancus1", "createdAt": "2020-07-12T18:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDAwMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434001", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-13T04:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTYyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241625", "body": "```suggestion\r\n        // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n          \n          \n            \n                    // Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span>Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "esilkensen", "createdAt": "2020-07-11T22:31:40Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$", "originalCommit": "5117caf158dc65ce0e5e0aca61af581d046db275", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDA4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434080", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-13T04:55:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTYyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTY4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453241685", "body": "```suggestion\r\n        // Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)\n          \n          \n            \n                    // Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span>Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "esilkensen", "createdAt": "2020-07-11T22:32:42Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/naming/patternvariablename/InputPatternVariableNameEnhancedInstanceof.java", "diffHunk": "@@ -0,0 +1,88 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.naming.patternvariablename;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+public class InputPatternVariableNameEnhancedInstanceof {\n+    private Object obj;\n+\n+    static boolean doStuff(Object obj) {\n+        // Violation, OTHER doesn't match ^[a-z][a-zA-Z0-9]*$\n+        return obj instanceof Integer OTHER && OTHER > 0;\n+    }\n+\n+    static {\n+        Object o = \"\";\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        if (o instanceof String s) {\n+            System.out.println(s.toLowerCase(Locale.forLanguageTag(s)));\n+            boolean stringCheck = \"test\".equals(s);\n+        }\n+\n+        // Violation, Count doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (o instanceof Integer Count) {\n+            int value = Count.byteValue();\n+            if (Count.equals(value)) {\n+                value = 25;\n+            }\n+        }\n+    }\n+\n+    interface VoidPredicate {\n+        public boolean get();\n+    }\n+\n+    public void t(Object o1, Object o2) {\n+        Object b;\n+        Object c;\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        if (!(o1 instanceof String S) && (o2 instanceof String STRING)) {\n+        }\n+        // Violation, STRING doesn't match ^[a-z][a-zA-Z0-9]*$\n+        // Check two on the same line\n+        if (o1 instanceof String STRING || !(o2 instanceof String STRING)) {\n+        }\n+        //Violation, s doesn't match ^[a-z][a-zA-Z0-9]+$\n+        b = ((VoidPredicate) () -> o1 instanceof String s).get();\n+\n+        ArrayList<Integer> arrayList = new ArrayList<Integer>();\n+        if (arrayList instanceof ArrayList<Integer> ai) {\n+            System.out.println(\"Blah\");\n+        }\n+\n+        //Violation, a doesn't match ^[a-z][a-zA-Z0-9]+$ (x3)", "originalCommit": "5117caf158dc65ce0e5e0aca61af581d046db275", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzNDExMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r453434111", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-13T04:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MTY4NQ=="}], "type": "inlineReview"}, {"oid": "74d3dbc0b7a286c732fb877d925ac18e427dae7c", "url": "https://github.com/checkstyle/checkstyle/commit/74d3dbc0b7a286c732fb877d925ac18e427dae7c", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-13T04:52:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454135848", "body": "Actually, this is a pattern for \"a lower case letter, followed by letters and digits, optionally separated by underscore\".\r\nThese variable names: `foo_`, `foo___bar` do not match the pattern, although they are \"begin with a lower\r\n case letter, followed by letters, digits, and underscores\". Please update either the pattern or the description.", "bodyText": "Actually, this is a pattern for \"a lower case letter, followed by letters and digits, optionally separated by underscore\".\nThese variable names: foo_, foo___bar do not match the pattern, although they are \"begin with a lower\ncase letter, followed by letters, digits, and underscores\". Please update either the pattern or the description.", "bodyHTML": "<p dir=\"auto\">Actually, this is a pattern for \"a lower case letter, followed by letters and digits, optionally separated by underscore\".<br>\nThese variable names: <code>foo_</code>, <code>foo___bar</code> do not match the pattern, although they are \"begin with a lower<br>\ncase letter, followed by letters, digits, and underscores\". Please update either the pattern or the description.</p>", "author": "pbludov", "createdAt": "2020-07-14T06:40:17Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/PatternVariableNameCheck.java", "diffHunk": "@@ -0,0 +1,140 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks.naming;\n+\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n+\n+/**\n+ * <p>\n+ * Checks that pattern variable names conform to a specified pattern.\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * Property {@code format} - Specifies valid identifiers. Type is {@code java.util.regex.Pattern}.\n+ * Default value is {@code \"^[a-z][a-zA-Z0-9]*$\"}.\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * An example of how to configure the check is:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"PatternVariableName\"/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *     {\n+ *         Object o1 = null;\n+ *         if (o1 instanceof String STRING) { // violation, name 'STRING' must\n+ *                                            // match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *         }\n+ *         if (o1 instanceof Integer num) { // OK\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ * <p>\n+ * An example of how to configure the check for names that begin with a lower\n+ * case letter, followed by letters, digits, and underscores is:", "originalCommit": "74d3dbc0b7a286c732fb877d925ac18e427dae7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MDAzMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454670030", "bodyText": "Thanks for pointing this out, regex is definitely something I need to study more.", "author": "nmancus1", "createdAt": "2020-07-14T21:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzE1Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r454723156", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-15T00:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNTg0OA=="}], "type": "inlineReview"}, {"oid": "bb9f315cb0afbd18bd549e8cd60b74735a9b8112", "url": "https://github.com/checkstyle/checkstyle/commit/bb9f315cb0afbd18bd549e8cd60b74735a9b8112", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-15T00:34:33Z", "type": "forcePushed"}, {"oid": "302954a7da5819fc7314c33e43f0aed32421706b", "url": "https://github.com/checkstyle/checkstyle/commit/302954a7da5819fc7314c33e43f0aed32421706b", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-26T12:10:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyODY4Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460528686", "body": "remove config from google inputs, it is not required as config is single.\r\n\r\nWe have rule for embedded config only for UTs, where we have numerous configs.\r\nGoogle is single config, so copy of config will not do very good job, as google style is also changing periodically.", "bodyText": "remove config from google inputs, it is not required as config is single.\nWe have rule for embedded config only for UTs, where we have numerous configs.\nGoogle is single config, so copy of config will not do very good job, as google style is also changing periodically.", "bodyHTML": "<p dir=\"auto\">remove config from google inputs, it is not required as config is single.</p>\n<p dir=\"auto\">We have rule for embedded config only for UTs, where we have numerous configs.<br>\nGoogle is single config, so copy of config will not do very good job, as google style is also changing periodically.</p>", "author": "romani", "createdAt": "2020-07-26T13:34:56Z", "path": "src/it/resources-noncompilable/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/InputPatternVariableNameEnhancedInstanceofTestDefault.java", "diffHunk": "@@ -0,0 +1,83 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.google.checkstyle.test.chapter5naming.rule527localvariablenames;\n+\n+import java.util.ArrayList;\n+import java.util.Locale;\n+/*\n+ * Config:\n+ * tokens = PATTERN_VARIABLE_DEF\n+ * format = \"^[a-z][a-zA-Z0-9]*$\"", "originalCommit": "302954a7da5819fc7314c33e43f0aed32421706b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzMTEwMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8417#discussion_r460531102", "bodyText": "Fixed.", "author": "nmancus1", "createdAt": "2020-07-26T13:58:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUyODY4Ng=="}], "type": "inlineReview"}, {"oid": "e167e84b9a3a955a07e9dbb49dc17e9978d5cd70", "url": "https://github.com/checkstyle/checkstyle/commit/e167e84b9a3a955a07e9dbb49dc17e9978d5cd70", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-26T13:48:52Z", "type": "forcePushed"}, {"oid": "c374bce02506428cad75d6c2de89c0d0e5d04745", "url": "https://github.com/checkstyle/checkstyle/commit/c374bce02506428cad75d6c2de89c0d0e5d04745", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-26T16:02:49Z", "type": "commit"}, {"oid": "c374bce02506428cad75d6c2de89c0d0e5d04745", "url": "https://github.com/checkstyle/checkstyle/commit/c374bce02506428cad75d6c2de89c0d0e5d04745", "message": "Issue #8407: new Check: PatternVariableName", "committedDate": "2020-07-26T16:02:49Z", "type": "forcePushed"}]}