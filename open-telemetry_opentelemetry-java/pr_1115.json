{"pr_number": 1115, "pr_title": "Provides a way to enable/disable the docker integration tests via a gradle property", "pr_author": "jkwatson", "pr_createdAt": "2020-04-15T18:32:01Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115", "timeline": [{"oid": "34c185c5065690747d09cc82e726ad8e4309d05c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/34c185c5065690747d09cc82e726ad8e4309d05c", "message": "Provides a way to disable the docker integration tests via a gradle property.", "committedDate": "2020-04-15T18:31:14Z", "type": "commit"}, {"oid": "ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "message": "switch the property to be the opposite", "committedDate": "2020-04-15T20:15:17Z", "type": "commit"}, {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "message": "add a new make target and let CI use it.", "committedDate": "2020-04-15T20:30:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604973", "body": "s/jaeger/jaegerBackend? (or jaegerContainer?)", "bodyText": "s/jaeger/jaegerBackend? (or jaegerContainer?)", "bodyHTML": "<p dir=\"auto\">s/jaeger/jaegerBackend? (or jaegerContainer?)</p>", "author": "bogdandrutu", "createdAt": "2020-04-16T14:32:35Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MTcyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409661726", "bodyText": "I like jaegerContainer", "author": "jkwatson", "createdAt": "2020-04-16T15:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMDgyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409720823", "bodyText": "done", "author": "jkwatson", "createdAt": "2020-04-16T17:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409606950", "body": "It is confusing to have this in Before, and probably before is not needed since only one test. I would remove `Before` from this method and explicitly call it in the only test we have. Then the `Assume` is only in the test method.", "bodyText": "It is confusing to have this in Before, and probably before is not needed since only one test. I would remove Before from this method and explicitly call it in the only test we have. Then the Assume is only in the test method.", "bodyHTML": "<p dir=\"auto\">It is confusing to have this in Before, and probably before is not needed since only one test. I would remove <code>Before</code> from this method and explicitly call it in the only test we have. Then the <code>Assume</code> is only in the test method.</p>", "author": "bogdandrutu", "createdAt": "2020-04-16T14:35:06Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =\n+          new GenericContainer<>(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n+              .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n+              .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+    }\n+  }\n \n   @Before\n   public void setupJaegerExporter() {\n+    Assume.assumeNotNull(jaeger);", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMTAxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409721010", "bodyText": "implemented. please take a look", "author": "jkwatson", "createdAt": "2020-04-16T17:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDEyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670122", "body": "could be shortened to\r\n```suggestion\r\n    if (Boolean.getBoolean(\"enable.docker.tests\")) {\r\n```", "bodyText": "could be shortened to\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {", "bodyHTML": "<p dir=\"auto\">could be shortened to</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span><span class=\"x x-first\">parseBoolean(</span><span class=\"pl-smi x\">System</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getProperty(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enable.docker.tests<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getBoolean(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enable.docker.tests<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "arminru", "createdAt": "2020-04-16T15:58:57Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "message": "Update gradle.properties\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:09:49Z", "type": "commit"}, {"oid": "8c5935a3d2794d1409714d4048afdff20c548753", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8c5935a3d2794d1409714d4048afdff20c548753", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:11:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409683649", "body": "```suggestion\r\n    if (Boolean.getBoolean(\"enable.docker.tests\")) {\r\n```\r\nsorry, my bad :) ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {\n          \n      \n    \n    \n  \n\nsorry, my bad :)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span>getBoolean(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enable.docker.tests<span class=\"pl-pds\">\"</span></span>))<span class=\"x x-first x-last\">)</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Boolean</span><span class=\"pl-k\">.</span>getBoolean(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enable.docker.tests<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">sorry, my bad :)</p>", "author": "arminru", "createdAt": "2020-04-16T16:18:56Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -60,7 +60,7 @@\n \n   static {\n     // make sure that the user has enabled the docker-based tests\n-    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+    if (Boolean.getBoolean(\"enable.docker.tests\"))) {", "originalCommit": "8c5935a3d2794d1409714d4048afdff20c548753", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NzA2Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409687063", "bodyText": "heh. no worries", "author": "jkwatson", "createdAt": "2020-04-16T16:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ=="}], "type": "inlineReview"}, {"oid": "c9f8e8fe5b6537af1c87ee697078e75307974496", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9f8e8fe5b6537af1c87ee697078e75307974496", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:24:01Z", "type": "commit"}, {"oid": "1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "message": "simplify the test flow", "committedDate": "2020-04-16T17:14:45Z", "type": "commit"}]}