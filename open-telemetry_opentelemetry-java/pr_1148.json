{"pr_number": 1148, "pr_title": "First version of WithSpan annotation.", "pr_author": "iNikem", "pr_createdAt": "2020-04-27T09:14:41Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148", "timeline": [{"oid": "aacdc8913a51056a6793648ceb8af381752d0b93", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/aacdc8913a51056a6793648ceb8af381752d0b93", "message": "First version of WithSpan annotation.\n\nThis should be followed by the corresponding PR in auto-instrumentation to actually create spans around annotated methods.", "committedDate": "2020-04-27T09:12:47Z", "type": "commit"}, {"oid": "bde449b7497d285afe30e6d6b7a9a7f68eccb748", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bde449b7497d285afe30e6d6b7a9a7f68eccb748", "message": "Add license", "committedDate": "2020-04-27T09:30:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415810665", "body": "Wondering if we could add an example here, so users know what kind of names could be created.", "bodyText": "Wondering if we could add an example here, so users know what kind of names could be created.", "bodyHTML": "<p dir=\"auto\">Wondering if we could add an example here, so users know what kind of names could be created.</p>", "author": "carlosalberto", "createdAt": "2020-04-27T13:26:16Z", "path": "contrib/annotations/src/main/java/io/opentelemetry/contrib/annotations/WithSpan.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.contrib.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * This annotation marks that an execution of this method or constructor should result in a new\n+ * {@link io.opentelemetry.trace.Span}.\n+ *\n+ * <p>Application developers can use this annotation to signal OpenTelemetry auto-instrumentation\n+ * that a new span should be created whenever marked method is executed.\n+ *\n+ * @see <a href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java\">OpenTelemetry\n+ *     Auto-Instrumentation</a>\n+ */\n+@Target({ElementType.METHOD, ElementType.CONSTRUCTOR})\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface WithSpan {\n+  /**\n+   * Optional name of the created span.\n+   *\n+   * <p>If not specified, an appropriate default name will be created by auto-instrumentation.", "originalCommit": "bde449b7497d285afe30e6d6b7a9a7f68eccb748", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0Mjg0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415842848", "bodyText": "I decided not to do this on purpose. Not sure if it is a good idea to document here inner implementation details of auto-instr which may change in the future.", "author": "iNikem", "createdAt": "2020-04-27T14:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Njk0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415856945", "bodyText": "Overall I'd like to see a super basic example of what names might be used. Otherwise, as a new user, I have zero idea of what name will appear.", "author": "carlosalberto", "createdAt": "2020-04-27T14:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1OTUyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415859526", "bodyText": "Fair enough. Will do.", "author": "iNikem", "createdAt": "2020-04-27T14:27:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk0MzEyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415943129", "bodyText": "I think things like this is why I was hesitant to put this into the API in the first place. We could provide examples all day long in the javadoc on this annotation, but who knows what will actually be done by the auto-instrumentation agent, or some other annotation processor? I feel like putting examples in here could just confuse people even more when the actual span names end up looking different.", "author": "jkwatson", "createdAt": "2020-04-27T16:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk3NzQ0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415977449", "bodyText": "@jkwatson Agreed but mentioning that X or Y name might be chosen would be a fine thing to mention (without giving away too many details). In that regard, a basic, single example of what it could look like would be more than enough.\nSo to not wait forever to have this PR merged, lets go ahead with what we have now @iNikem and maybe update the docs later on with a single, simple example.", "author": "carlosalberto", "createdAt": "2020-04-27T16:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxMDY2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyODg2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415828864", "body": "consider to use \"io.opentelemetry.contrib.auto.annotations\" to specify that they work with auto instrumentation.", "bodyText": "consider to use \"io.opentelemetry.contrib.auto.annotations\" to specify that they work with auto instrumentation.", "bodyHTML": "<p dir=\"auto\">consider to use \"io.opentelemetry.contrib.auto.annotations\" to specify that they work with auto instrumentation.</p>", "author": "bogdandrutu", "createdAt": "2020-04-27T13:49:47Z", "path": "contrib/annotations/src/main/java/io/opentelemetry/contrib/annotations/WithSpan.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.contrib.annotations;", "originalCommit": "bde449b7497d285afe30e6d6b7a9a7f68eccb748", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDE5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415834192", "bodyText": "An interesting question is whether we would have another package for common, non-auto-related annotations potentially (in the future, that is).", "author": "carlosalberto", "createdAt": "2020-04-27T13:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1MDcwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415850707", "bodyText": "Based on my understanding this annotation will not be able to work without some kind of bytecode manipulation. So it is important to call that for the users and let them know that this should not be used if they are not sure if the final application will use byte-code manipulation.\nIn the same notes probably third-party integrations should not use this.", "author": "bogdandrutu", "createdAt": "2020-04-27T14:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1NDM0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415854346", "bodyText": "I have added this notice in javadoc. Please review.", "author": "iNikem", "createdAt": "2020-04-27T14:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg2NjU4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415866589", "bodyText": "@bogdandrutu Fair enough, lets take this route.", "author": "carlosalberto", "createdAt": "2020-04-27T14:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgyODg2NA=="}], "type": "inlineReview"}, {"oid": "b08f8f16176a7f1ddb3c15d620e2529a6bff08af", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b08f8f16176a7f1ddb3c15d620e2529a6bff08af", "message": "Code style fix", "committedDate": "2020-04-27T14:25:14Z", "type": "commit"}, {"oid": "b08f8f16176a7f1ddb3c15d620e2529a6bff08af", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b08f8f16176a7f1ddb3c15d620e2529a6bff08af", "message": "Code style fix", "committedDate": "2020-04-27T14:25:14Z", "type": "forcePushed"}, {"oid": "6608ad91a21a1617205101c1c497ea5d80c41b81", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6608ad91a21a1617205101c1c497ea5d80c41b81", "message": "Rename module, add documentation.", "committedDate": "2020-04-27T14:46:46Z", "type": "commit"}, {"oid": "c217ea64314e061264a1dbdab9d6350766e85139", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c217ea64314e061264a1dbdab9d6350766e85139", "message": "License added.", "committedDate": "2020-04-27T15:00:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyODU3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415928571", "body": "```suggestion\r\n * <p>If you are a library developer, then probably you should NOT use this annotation, because it\r\n * is non-functional without the OpenTelemetry auto-instrumentation agent, or some other annotation\r\n * processor.  \r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <p>If you are a library developer, then probably you should NOT use this annotation. Because it\n          \n          \n            \n             * is useless without OpenTelemetry auto-instrumentation agent. And you cannot guarantee that users\n          \n          \n            \n             * of your library will use it in their production system.\n          \n          \n            \n             * <p>If you are a library developer, then probably you should NOT use this annotation, because it\n          \n          \n            \n             * is non-functional without the OpenTelemetry auto-instrumentation agent, or some other annotation\n          \n          \n            \n             * processor.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">If</span> you are a library developer, then probably you should <span class=\"pl-c1\">NOT</span> use <span class=\"pl-c1\">this</span> annotation<span class=\"x x-first\">. </span><span class=\"pl-smi x x-last\">Because</span> it</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> is <span class=\"x x-first x-last\">useless</span> without <span class=\"pl-smi\">OpenTelemetry</span> auto<span class=\"pl-k\">-</span>instrumentation agent<span class=\"x x-first\">. </span><span class=\"pl-smi x\">And</span><span class=\"x x-last\"> you cannot guarantee that users</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">of your library will use it in their production system.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">If</span> you are a library developer, then probably you should <span class=\"pl-c1\">NOT</span> use <span class=\"pl-c1\">this</span> annotation<span class=\"x x-first x-last\">, because</span> it</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> is <span class=\"x x-first\">non</span><span class=\"pl-k x\">-</span><span class=\"x x-last\">functional</span> without <span class=\"x x-first x-last\">the </span><span class=\"pl-smi\">OpenTelemetry</span> auto<span class=\"pl-k\">-</span>instrumentation agent<span class=\"x x-first x-last\">, or some other annotation</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">processor.  </span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jkwatson", "createdAt": "2020-04-27T15:47:02Z", "path": "contrib/auto_annotations/src/main/java/io/opentelemetry/contrib/auto/annotations/WithSpan.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.contrib.auto.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * This annotation marks that an execution of this method or constructor should result in a new\n+ * {@link io.opentelemetry.trace.Span}.\n+ *\n+ * <p>Application developers can use this annotation to signal OpenTelemetry auto-instrumentation\n+ * that a new span should be created whenever marked method is executed.\n+ *\n+ * <p>If you are a library developer, then probably you should NOT use this annotation. Because it\n+ * is useless without OpenTelemetry auto-instrumentation agent. And you cannot guarantee that users\n+ * of your library will use it in their production system.", "originalCommit": "c217ea64314e061264a1dbdab9d6350766e85139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyOTE4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415929189", "body": "```suggestion\r\n   * <p>If not specified, an appropriate default name should be created by auto-instrumentation. E.g.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p>If not specified, an appropriate default name will be created by auto-instrumentation. E.g.\n          \n          \n            \n               * <p>If not specified, an appropriate default name should be created by auto-instrumentation. E.g.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">If</span> not specified, an appropriate <span class=\"pl-k\">default</span> name <span class=\"x x-first x-last\">will</span> be created by auto<span class=\"pl-k\">-</span>instrumentation. <span class=\"pl-smi\">E</span><span class=\"pl-k\">.</span>g.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">If</span> not specified, an appropriate <span class=\"pl-k\">default</span> name <span class=\"x x-first x-last\">should</span> be created by auto<span class=\"pl-k\">-</span>instrumentation. <span class=\"pl-smi\">E</span><span class=\"pl-k\">.</span>g.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jkwatson", "createdAt": "2020-04-27T15:47:32Z", "path": "contrib/auto_annotations/src/main/java/io/opentelemetry/contrib/auto/annotations/WithSpan.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.contrib.auto.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * This annotation marks that an execution of this method or constructor should result in a new\n+ * {@link io.opentelemetry.trace.Span}.\n+ *\n+ * <p>Application developers can use this annotation to signal OpenTelemetry auto-instrumentation\n+ * that a new span should be created whenever marked method is executed.\n+ *\n+ * <p>If you are a library developer, then probably you should NOT use this annotation. Because it\n+ * is useless without OpenTelemetry auto-instrumentation agent. And you cannot guarantee that users\n+ * of your library will use it in their production system.\n+ *\n+ * @see <a href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java\">OpenTelemetry\n+ *     Auto-Instrumentation</a>\n+ */\n+@Target({ElementType.METHOD, ElementType.CONSTRUCTOR})\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface WithSpan {\n+  /**\n+   * Optional name of the created span.\n+   *\n+   * <p>If not specified, an appropriate default name will be created by auto-instrumentation. E.g.", "originalCommit": "c217ea64314e061264a1dbdab9d6350766e85139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7192973899113662e7c5386ecd76188ca2932e1e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7192973899113662e7c5386ecd76188ca2932e1e", "message": "Update contrib/auto_annotations/src/main/java/io/opentelemetry/contrib/auto/annotations/WithSpan.java\n\nCo-Authored-By: John Watson <jkwatson@gmail.com>", "committedDate": "2020-04-27T15:48:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyOTgzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415929839", "body": "```suggestion\r\n * Auto-Instrumentation</a> can use them to enhance their functionality.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Auto-Instrumentation</a> can use them to enhance their work.\n          \n          \n            \n             * Auto-Instrumentation</a> can use them to enhance their functionality.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Auto</span><span class=\"pl-k\">-</span><span class=\"pl-k\">Instrumentation&lt;/</span>a<span class=\"pl-k\">&gt;</span> can use them to enhance their <span class=\"x x-first x-last\">work</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Auto</span><span class=\"pl-k\">-</span><span class=\"pl-k\">Instrumentation&lt;/</span>a<span class=\"pl-k\">&gt;</span> can use them to enhance their <span class=\"x x-first x-last\">functionality</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jkwatson", "createdAt": "2020-04-27T15:48:07Z", "path": "contrib/auto_annotations/src/main/java/io/opentelemetry/contrib/auto/annotations/package-info.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * This module contains various annotations that can be used by clients of OpenTelemetry API. They\n+ * don't provide any functionality by themselves, but other modules, e.g. <a\n+ * href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java\">OpenTelemetry\n+ * Auto-Instrumentation</a> can use them to enhance their work.", "originalCommit": "c217ea64314e061264a1dbdab9d6350766e85139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkzMzU2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1148#discussion_r415933565", "body": "```suggestion\r\n * <p>Note: If you are a library developer, then you should NOT use this module, because it\r\n * is useless without some kind of annotation processing, such as bytecode manipulation \r\n * during runtime. You cannot guarantee that users of your library will use that in their \r\n * production system.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <p>NB! If you are a library developer, then probably you should NOT use this module. Because it\n          \n          \n            \n             * is useless without some kind of byte code manipulation during runtime. And you cannot guarantee\n          \n          \n            \n             * that users of your library will use that in their production system.\n          \n          \n            \n             * <p>Note: If you are a library developer, then you should NOT use this module, because it\n          \n          \n            \n             * is useless without some kind of annotation processing, such as bytecode manipulation \n          \n          \n            \n             * during runtime. You cannot guarantee that users of your library will use that in their \n          \n          \n            \n             * production system.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">NB</span><span class=\"pl-k\">!</span> <span class=\"pl-smi\">If</span> you are a library developer, then probably you should <span class=\"pl-c1\">NOT</span> use <span class=\"pl-c1\">this</span> module. <span class=\"pl-smi\">Because</span> it</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> is useless without some kind of <span class=\"pl-k\">byte</span> code manipulation during runtime. <span class=\"pl-smi\">And</span> you cannot guarantee</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> that users of your library will use that in their production system.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Note</span><span class=\"pl-k\">:</span> <span class=\"pl-smi\">If</span> you are a library developer, then you should <span class=\"pl-c1\">NOT</span> use <span class=\"pl-c1\">this</span> module, because it</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> is useless without some kind of annotation processing, such as bytecode manipulation </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> during runtime. <span class=\"pl-smi\">You</span> cannot guarantee that users of your library will use that in their </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> production system.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jkwatson", "createdAt": "2020-04-27T15:51:37Z", "path": "contrib/auto_annotations/src/main/java/io/opentelemetry/contrib/auto/annotations/package-info.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * This module contains various annotations that can be used by clients of OpenTelemetry API. They\n+ * don't provide any functionality by themselves, but other modules, e.g. <a\n+ * href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java\">OpenTelemetry\n+ * Auto-Instrumentation</a> can use them to enhance their work.\n+ *\n+ * <p>NB! If you are a library developer, then probably you should NOT use this module. Because it\n+ * is useless without some kind of byte code manipulation during runtime. And you cannot guarantee\n+ * that users of your library will use that in their production system.", "originalCommit": "c217ea64314e061264a1dbdab9d6350766e85139", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b5d6ad8702a7395207b377d07c1a2ec377789a54", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b5d6ad8702a7395207b377d07c1a2ec377789a54", "message": "Apply suggestions from code review\n\nCo-Authored-By: John Watson <jkwatson@gmail.com>", "committedDate": "2020-04-27T15:55:37Z", "type": "commit"}, {"oid": "9f7ca0e81833426e1db4b2fbec0abea9efc5e7af", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f7ca0e81833426e1db4b2fbec0abea9efc5e7af", "message": "Code style fix", "committedDate": "2020-04-27T16:53:31Z", "type": "commit"}]}