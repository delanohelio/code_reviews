{"pr_number": 842, "pr_title": "AbstractBoundInstrument refcounts and keeps the state of mapped.", "pr_author": "bogdandrutu", "pr_createdAt": "2020-02-10T18:57:23Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/842", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3NzYxOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r377877619", "body": "```suggestion\r\n * Abstract class that implements the basic functionality of the BoundInstrument.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Abstract class that extends the functionality of the BoundInstrument.\n          \n          \n            \n             * Abstract class that implements the basic functionality of the BoundInstrument.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> Abstract <span class=\"pl-k\">class</span> <span class=\"pl-en\">that</span> <span class=\"pl-k x x-first x-last\">extends</span> the functionality of the <span class=\"pl-e\">BoundInstrument</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> Abstract <span class=\"pl-k\">class</span> <span class=\"pl-en\">that</span> <span class=\"pl-k x x-first x-last\">implements</span> the<span class=\"x x-first x-last\"> basic</span> functionality of the <span class=\"pl-e\">BoundInstrument</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jkwatson", "createdAt": "2020-02-11T20:24:01Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/AbstractBoundInstrument.java", "diffHunk": "@@ -17,35 +17,64 @@\n package io.opentelemetry.sdk.metrics;\n \n import io.opentelemetry.metrics.InstrumentWithBinding.BoundInstrument;\n-import io.opentelemetry.metrics.LabelSet;\n+import java.util.concurrent.atomic.AtomicLong;\n \n+/**\n+ * Abstract class that extends the functionality of the BoundInstrument.", "originalCommit": "c2bb46c586dd8767f5cb329f9777c730a591a24f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQyMDgzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r378420837", "bodyText": "done.", "author": "bogdandrutu", "createdAt": "2020-02-12T18:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3NzYxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4MzMzMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r377883330", "body": "why did you stop passing in the labelset?", "bodyText": "why did you stop passing in the labelset?", "bodyHTML": "<p dir=\"auto\">why did you stop passing in the labelset?</p>", "author": "jkwatson", "createdAt": "2020-02-11T20:35:55Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -38,14 +38,14 @@ private DoubleCounterSdk(\n \n   @Override\n   public void add(double delta, LabelSet labelSet) {\n-    BoundDoubleCounter boundDoubleCounter = bind(labelSet);\n-    boundDoubleCounter.add(delta);\n-    boundDoubleCounter.unbind();\n+    BoundInstrument boundInstrument = bind(labelSet);\n+    boundInstrument.add(delta);\n+    boundInstrument.unbind();\n   }\n \n   @Override\n-  public BoundDoubleCounter bind(LabelSet labelSet) {\n-    return new BoundInstrument(labelSet, monotonic);\n+  public BoundInstrument bind(LabelSet labelSet) {\n+    return new BoundInstrument(monotonic);", "originalCommit": "c2bb46c586dd8767f5cb329f9777c730a591a24f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1MDg1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r378450852", "bodyText": "The mapping between LabelSet and bound will be in the AbstractInstrumentWithBinding (from #831 ) so unnecessary memory usage in the Bound to also keep a reference to the LabelSet.", "author": "bogdandrutu", "createdAt": "2020-02-12T19:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4MzMzMA=="}], "type": "inlineReview"}, {"oid": "12af5520ad04ee1ef2dd67825c130516401c251e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/12af5520ad04ee1ef2dd67825c130516401c251e", "message": "AbstractBoundInstrument refcounts and keeps the state of mapped.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-12T18:03:30Z", "type": "forcePushed"}, {"oid": "219d1febce2c7310ee1db5a4eae7e1a748e1444c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/219d1febce2c7310ee1db5a4eae7e1a748e1444c", "message": "AbstractBoundInstrument refcounts and keeps the state of mapped.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-12T18:04:49Z", "type": "commit"}, {"oid": "219d1febce2c7310ee1db5a4eae7e1a748e1444c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/219d1febce2c7310ee1db5a4eae7e1a748e1444c", "message": "AbstractBoundInstrument refcounts and keeps the state of mapped.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-12T18:04:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1OTcyOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r378459728", "body": "don't we need to be passing the labelset in to the ABI here?", "bodyText": "don't we need to be passing the labelset in to the ABI here?", "bodyHTML": "<p dir=\"auto\">don't we need to be passing the labelset in to the ABI here?</p>", "author": "jkwatson", "createdAt": "2020-02-12T19:18:36Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -73,13 +73,12 @@ public int hashCode() {\n     return result;\n   }\n \n-  private static final class BoundInstrument extends AbstractBoundInstrument\n-      implements BoundDoubleCounter {\n+  static final class BoundInstrument extends AbstractBoundInstrument implements BoundDoubleCounter {\n \n     private final boolean monotonic;\n \n-    BoundInstrument(LabelSet labelSet, boolean monotonic) {\n-      super(labelSet);\n+    BoundInstrument(boolean monotonic) {\n+      super(null);", "originalCommit": "219d1febce2c7310ee1db5a4eae7e1a748e1444c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2Mzc0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/842#discussion_r378463743", "bodyText": "This is now the aggregation, will pass in a later PR :)", "author": "bogdandrutu", "createdAt": "2020-02-12T19:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1OTcyOA=="}], "type": "inlineReview"}]}