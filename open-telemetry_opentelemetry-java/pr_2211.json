{"pr_number": 2211, "pr_title": "Add caching for sanitized labels in the Prometheus MetricAdapter.", "pr_author": "breedx-splk", "pr_createdAt": "2020-12-07T20:02:53Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211", "timeline": [{"oid": "ea84a87477e002728fc2be76650c6cca0bdc8428", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ea84a87477e002728fc2be76650c6cca0bdc8428", "message": "cache sanitized labels", "committedDate": "2020-12-07T19:59:19Z", "type": "commit"}, {"oid": "8800dc07c2ada61727d685284bc9ef90da7781da", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8800dc07c2ada61727d685284bc9ef90da7781da", "message": "rollback", "committedDate": "2020-12-07T20:02:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDM4NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537950384", "body": "```suggestion\r\nclass LabelNameSanitizer implements Function<String, String> {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LabelNameSanitizer implements Function<String, String> {\n          \n          \n            \n            class LabelNameSanitizer implements Function<String, String> {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">public</span><span class=\"x x-last\"> </span><span class=\"pl-k\">class</span> <span class=\"pl-en\">LabelNameSanitizer</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">Function&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">LabelNameSanitizer</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">Function&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anuraaga", "createdAt": "2020-12-08T00:58:24Z", "path": "exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import io.prometheus.client.Collector;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/** Used to convert a label keys to a label names. Sanitizes the label keys. Not thread safe. */\n+public class LabelNameSanitizer implements Function<String, String> {", "originalCommit": "8800dc07c2ada61727d685284bc9ef90da7781da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDc0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537950745", "body": "Is prometheus exporter always guaranteed to be scraped by the same thread? I think I'd just stick with `ConcurrentHashMap` to let this be safe.", "bodyText": "Is prometheus exporter always guaranteed to be scraped by the same thread? I think I'd just stick with ConcurrentHashMap to let this be safe.", "bodyHTML": "<p dir=\"auto\">Is prometheus exporter always guaranteed to be scraped by the same thread? I think I'd just stick with <code>ConcurrentHashMap</code> to let this be safe.</p>", "author": "anuraaga", "createdAt": "2020-12-08T00:59:24Z", "path": "exporters/prometheus/src/main/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import io.prometheus.client.Collector;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/** Used to convert a label keys to a label names. Sanitizes the label keys. Not thread safe. */", "originalCommit": "8800dc07c2ada61727d685284bc9ef90da7781da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYwOTQ0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r538609443", "bodyText": "I don't know the answer, but I'm cool with using ConcurrentHashMap here as a safety precaution.  Thanks for the suggestion.", "author": "breedx-splk", "createdAt": "2020-12-08T17:05:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MDc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MTAyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r537951029", "body": "```suggestion\r\n    LabelNameSanitizer sanitizer = new LabelNameSanitizer(delegate);\r\n```\r\n\r\nmakes the test easier to read", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LabelNameSanitizer testClass = new LabelNameSanitizer(delegate);\n          \n          \n            \n                LabelNameSanitizer sanitizer = new LabelNameSanitizer(delegate);\n          \n      \n    \n    \n  \n\nmakes the test easier to read", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">LabelNameSanitizer</span> <span class=\"x x-first x-last\">testClass</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LabelNameSanitizer</span>(delegate);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">LabelNameSanitizer</span> <span class=\"x x-first x-last\">sanitizer</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LabelNameSanitizer</span>(delegate);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">makes the test easier to read</p>", "author": "anuraaga", "createdAt": "2020-12-08T01:00:04Z", "path": "exporters/prometheus/src/test/java/io/opentelemetry/exporter/prometheus/LabelNameSanitizerTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.exporter.prometheus;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Function;\n+import org.junit.jupiter.api.Test;\n+\n+class LabelNameSanitizerTest {\n+\n+  @Test\n+  void testSanitizerCaching() {\n+    AtomicInteger count = new AtomicInteger();\n+    Function<String, String> delegate = labelName -> labelName + count.incrementAndGet();\n+    LabelNameSanitizer testClass = new LabelNameSanitizer(delegate);", "originalCommit": "8800dc07c2ada61727d685284bc9ef90da7781da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxMDQ3Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2211#discussion_r538610476", "bodyText": "Sure thing.  We can talk about the pros/cons of each approach sometime, but I'm happy to change it here.", "author": "breedx-splk", "createdAt": "2020-12-08T17:06:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk1MTAyOQ=="}], "type": "inlineReview"}, {"oid": "b30345eb14167032f7df5aab87c3b6ab87530202", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b30345eb14167032f7df5aab87c3b6ab87530202", "message": "address PR feedback", "committedDate": "2020-12-08T17:11:58Z", "type": "commit"}]}