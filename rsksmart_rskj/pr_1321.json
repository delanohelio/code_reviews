{"pr_number": 1321, "pr_title": "Create PeginInformation class", "pr_author": "marcos-iov", "pr_createdAt": "2020-09-29T19:32:35Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1321", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5Njk0MA==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496996940", "body": "```suggestion\r\n        logger.trace(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n          \n          \n            \n                    logger.trace(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parse] Trying to parse peg-in information from btc tx {}<span class=\"pl-pds\">\"</span></span>, btcTx<span class=\"pl-k\">.</span>getHash());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parse] Trying to parse peg-in information from btc tx {}<span class=\"pl-pds\">\"</span></span>, btcTx<span class=\"pl-k\">.</span>getHash());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:37:22Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5NzEwNA==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496997104", "body": "```suggestion\r\n        if (btcLockSenderOptional.isPresent()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(btcLockSenderOptional.isPresent()) {\n          \n          \n            \n                    if (btcLockSenderOptional.isPresent()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span>(btcLockSenderOptional<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(btcLockSenderOptional<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:37:40Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5Nzc5Mg==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496997792", "body": "```suggestion\r\n            logger.warn(\"[parse] {}\", message);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.error(\"[parse] {}\", message);\n          \n          \n            \n                        logger.warn(\"[parse] {}\", message);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">error</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parse] {}<span class=\"pl-pds\">\"</span></span>, message);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">warn</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parse] {}<span class=\"pl-pds\">\"</span></span>, message);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:39:03Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5Nzk3Ng==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496997976", "body": "```suggestion\r\n        logger.trace(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\r\n        logger.trace(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress());\r\n```\r\nBesides the logging level, you don't need to call `toBase58`. Internally this method calls `toString` which is automatically called by the log, if the logging level is enabled.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.info(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n          \n          \n            \n                    logger.info(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress().toBase58());\n          \n          \n            \n                    logger.trace(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n          \n          \n            \n                    logger.trace(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress());\n          \n      \n    \n    \n  \n\nBesides the logging level, you don't need to call toBase58. Internally this method calls toString which is automatically called by the log, if the logging level is enabled.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromBtcLockSender] RSK destination address: {}<span class=\"pl-pds\">\"</span></span>, btcLockSender<span class=\"pl-k\">.</span>getRskAddress());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromBtcLockSender] BTC refund address: {}<span class=\"pl-pds\">\"</span></span>, btcLockSender<span class=\"pl-k\">.</span>getBTCAddress<span class=\"x x-first\">()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toBase58</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromBtcLockSender] RSK destination address: {}<span class=\"pl-pds\">\"</span></span>, btcLockSender<span class=\"pl-k\">.</span>getRskAddress());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromBtcLockSender] BTC refund address: {}<span class=\"pl-pds\">\"</span></span>, btcLockSender<span class=\"pl-k\">.</span>getBTCAddress());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Besides the logging level, you don't need to call <code>toBase58</code>. Internally this method calls <code>toString</code> which is automatically called by the log, if the logging level is enabled.</p>", "author": "josedahlquist", "createdAt": "2020-09-29T19:39:22Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);\n+            throw new PeginInstructionsException(message);\n+        }\n+    }\n+\n+    private void parseFromBtcLockSender(BtcLockSender btcLockSender) {\n+        this.protocolVersion = 0;\n+        this.rskDestinationAddress = btcLockSender.getRskAddress();\n+        this.btcRefundAddress = btcLockSender.getBTCAddress();\n+\n+        logger.info(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n+        logger.info(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress().toBase58());", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5ODgwMw==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496998803", "body": "```suggestion\r\n        logger.trace(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\r\n        logger.trace(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.info(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\n          \n          \n            \n                    logger.info(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());\n          \n          \n            \n                    logger.trace(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\n          \n          \n            \n                    logger.trace(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] Protocol version: {}<span class=\"pl-pds\">\"</span></span>, peginInstructions<span class=\"pl-k\">.</span>getProtocolVersion());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] RSK destination address: {}<span class=\"pl-pds\">\"</span></span>, peginInstructions<span class=\"pl-k\">.</span>getRskDestinationAddress());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] Protocol version: {}<span class=\"pl-pds\">\"</span></span>, peginInstructions<span class=\"pl-k\">.</span>getProtocolVersion());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] RSK destination address: {}<span class=\"pl-pds\">\"</span></span>, peginInstructions<span class=\"pl-k\">.</span>getRskDestinationAddress());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:40:48Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);\n+            throw new PeginInstructionsException(message);\n+        }\n+    }\n+\n+    private void parseFromBtcLockSender(BtcLockSender btcLockSender) {\n+        this.protocolVersion = 0;\n+        this.rskDestinationAddress = btcLockSender.getRskAddress();\n+        this.btcRefundAddress = btcLockSender.getBTCAddress();\n+\n+        logger.info(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n+        logger.info(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress().toBase58());\n+    }\n+\n+    private void parseFromPeginInstructions(PeginInstructions peginInstructions)  throws PeginInstructionsException {\n+        this.protocolVersion = peginInstructions.getProtocolVersion();\n+        this.rskDestinationAddress = peginInstructions.getRskDestinationAddress();\n+        logger.info(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\n+        logger.info(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5OTEzMQ==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496999131", "body": "it would be nice to also log the protocol version in this case", "bodyText": "it would be nice to also log the protocol version in this case", "bodyHTML": "<p dir=\"auto\">it would be nice to also log the protocol version in this case</p>", "author": "josedahlquist", "createdAt": "2020-09-29T19:41:29Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);\n+            throw new PeginInstructionsException(message);\n+        }\n+    }\n+\n+    private void parseFromBtcLockSender(BtcLockSender btcLockSender) {\n+        this.protocolVersion = 0;", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5OTcyNg==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r496999726", "body": "```suggestion\r\n                    logger.trace(\"[parseFromPeginInstructions] BTC refund address: {}\", btcRefundAddressOptional.get());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                logger.info(\"[parseFromPeginInstructions] BTC refund address: {}\", btcRefundAddressOptional.get().toBase58());\n          \n          \n            \n                                logger.trace(\"[parseFromPeginInstructions] BTC refund address: {}\", btcRefundAddressOptional.get());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] BTC refund address: {}<span class=\"pl-pds\">\"</span></span>, btcRefundAddressOptional<span class=\"pl-k\">.</span>get<span class=\"x x-first\">()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toBase58</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] BTC refund address: {}<span class=\"pl-pds\">\"</span></span>, btcRefundAddressOptional<span class=\"pl-k\">.</span>get());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:42:38Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);\n+            throw new PeginInstructionsException(message);\n+        }\n+    }\n+\n+    private void parseFromBtcLockSender(BtcLockSender btcLockSender) {\n+        this.protocolVersion = 0;\n+        this.rskDestinationAddress = btcLockSender.getRskAddress();\n+        this.btcRefundAddress = btcLockSender.getBTCAddress();\n+\n+        logger.info(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n+        logger.info(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress().toBase58());\n+    }\n+\n+    private void parseFromPeginInstructions(PeginInstructions peginInstructions)  throws PeginInstructionsException {\n+        this.protocolVersion = peginInstructions.getProtocolVersion();\n+        this.rskDestinationAddress = peginInstructions.getRskDestinationAddress();\n+        logger.info(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\n+        logger.info(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());\n+\n+        switch (protocolVersion) {\n+            case 1:\n+                PeginInstructionsVersion1 peginInstructionsV1 = (PeginInstructionsVersion1) peginInstructions;\n+                Optional<Address> btcRefundAddressOptional = peginInstructionsV1\n+                    .getBtcRefundAddress();\n+                if (btcRefundAddressOptional.isPresent()) {\n+                    this.btcRefundAddress = btcRefundAddressOptional.get();\n+                    logger.info(\"[parseFromPeginInstructions] BTC refund address: {}\", btcRefundAddressOptional.get().toBase58());", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMDEzNg==", "url": "https://github.com/rsksmart/rskj/pull/1321#discussion_r497000136", "body": "```suggestion\r\n                logger.warn(\"[parseFromPeginInstructions] {}\", message);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.error(\"[parseFromPeginInstructions] {}\", message);\n          \n          \n            \n                            logger.warn(\"[parseFromPeginInstructions] {}\", message);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">error</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] {}<span class=\"pl-pds\">\"</span></span>, message);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                logger<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">warn</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[parseFromPeginInstructions] {}<span class=\"pl-pds\">\"</span></span>, message);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "josedahlquist", "createdAt": "2020-09-29T19:43:30Z", "path": "rskj-core/src/main/java/co/rsk/peg/PeginInformation.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package co.rsk.peg;\n+\n+import co.rsk.bitcoinj.core.Address;\n+import co.rsk.bitcoinj.core.BtcTransaction;\n+import co.rsk.core.RskAddress;\n+import co.rsk.peg.btcLockSender.BtcLockSender;\n+import co.rsk.peg.btcLockSender.BtcLockSenderProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructions;\n+import co.rsk.peg.pegininstructions.PeginInstructionsException;\n+import co.rsk.peg.pegininstructions.PeginInstructionsProvider;\n+import co.rsk.peg.pegininstructions.PeginInstructionsVersion1;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PeginInformation {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(PeginInformation.class);\n+\n+    private final BtcLockSenderProvider btcLockSenderProvider;\n+    private final PeginInstructionsProvider peginInstructionsProvider;\n+\n+    private int protocolVersion;\n+    private RskAddress rskDestinationAddress;\n+    private Address btcRefundAddress;\n+\n+    public PeginInformation(\n+        BtcLockSenderProvider btcLockSenderProvider,\n+        PeginInstructionsProvider peginInstructionsProvider) {\n+        this.btcLockSenderProvider = btcLockSenderProvider;\n+        this.peginInstructionsProvider = peginInstructionsProvider;\n+    }\n+\n+    public int getProtocolVersion() {\n+        return protocolVersion;\n+    }\n+\n+    public RskAddress getRskDestinationAddress() {\n+        return this.rskDestinationAddress;\n+    }\n+\n+    public Address getBtcRefundAddress() {\n+        return this.btcRefundAddress;\n+    }\n+\n+    public void parse(BtcTransaction btcTx) throws PeginInstructionsException {\n+        logger.debug(\"[parse] Trying to parse peg-in information from btc tx {}\", btcTx.getHash());\n+\n+        // Get information from tx sender first\n+        Optional<BtcLockSender> btcLockSenderOptional = btcLockSenderProvider.tryGetBtcLockSender(btcTx);\n+        if(btcLockSenderOptional.isPresent()) {\n+            BtcLockSender btcLockSender = btcLockSenderOptional.get();\n+            parseFromBtcLockSender(btcLockSender);\n+        }\n+\n+        // If peg-in instructions were provided then override the info obtained from BtcLockSender\n+        Optional<PeginInstructions> peginInstructionsOptional = peginInstructionsProvider.buildPeginInstructions(btcTx);\n+        if (peginInstructionsOptional.isPresent()) {\n+            PeginInstructions peginInstructions = peginInstructionsOptional.get();\n+            parseFromPeginInstructions(peginInstructions);\n+        }\n+\n+        // If BtcLockSender could not be parsed and peg-in instructions were not provided, then this tx can't be processed\n+        if(!btcLockSenderOptional.isPresent() && !peginInstructionsOptional.isPresent()) {\n+            String message = String.format(\"Could not get peg-in information for tx %s\", btcTx.getHash());\n+            logger.error(\"[parse] {}\", message);\n+            throw new PeginInstructionsException(message);\n+        }\n+    }\n+\n+    private void parseFromBtcLockSender(BtcLockSender btcLockSender) {\n+        this.protocolVersion = 0;\n+        this.rskDestinationAddress = btcLockSender.getRskAddress();\n+        this.btcRefundAddress = btcLockSender.getBTCAddress();\n+\n+        logger.info(\"[parseFromBtcLockSender] RSK destination address: {}\", btcLockSender.getRskAddress());\n+        logger.info(\"[parseFromBtcLockSender] BTC refund address: {}\", btcLockSender.getBTCAddress().toBase58());\n+    }\n+\n+    private void parseFromPeginInstructions(PeginInstructions peginInstructions)  throws PeginInstructionsException {\n+        this.protocolVersion = peginInstructions.getProtocolVersion();\n+        this.rskDestinationAddress = peginInstructions.getRskDestinationAddress();\n+        logger.info(\"[parseFromPeginInstructions] Protocol version: {}\", peginInstructions.getProtocolVersion());\n+        logger.info(\"[parseFromPeginInstructions] RSK destination address: {}\", peginInstructions.getRskDestinationAddress());\n+\n+        switch (protocolVersion) {\n+            case 1:\n+                PeginInstructionsVersion1 peginInstructionsV1 = (PeginInstructionsVersion1) peginInstructions;\n+                Optional<Address> btcRefundAddressOptional = peginInstructionsV1\n+                    .getBtcRefundAddress();\n+                if (btcRefundAddressOptional.isPresent()) {\n+                    this.btcRefundAddress = btcRefundAddressOptional.get();\n+                    logger.info(\"[parseFromPeginInstructions] BTC refund address: {}\", btcRefundAddressOptional.get().toBase58());\n+                }\n+                break;\n+            default:\n+                String message = String.format(\"Invalid protocol version: %d\", protocolVersion);\n+                logger.error(\"[parseFromPeginInstructions] {}\", message);", "originalCommit": "9b07ce07a850ffb4fc558ac7d527108f75029fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5248667b3968da142b342958e1fb24fb8bf5a05e", "url": "https://github.com/rsksmart/rskj/commit/5248667b3968da142b342958e1fb24fb8bf5a05e", "message": "Create PeginInformation class\n\nThis class is responsible for parsing a btc lock tx and obtaining the rsk address to where the funds should be transferred, and a BTC refund address in case the lock can not be completed. This information is obtained from peg-in instructions included in an output with OP_RETURN in the tx, or from the tx sender using BtcLockSender class.", "committedDate": "2020-09-29T21:41:48Z", "type": "forcePushed"}, {"oid": "7a229a19e0c1020c47393766cd1eb219d6e44ad3", "url": "https://github.com/rsksmart/rskj/commit/7a229a19e0c1020c47393766cd1eb219d6e44ad3", "message": "Create PeginInformation class\n\nThis class is responsible for parsing a btc lock tx and obtaining the rsk address to where the funds should be transferred, and a BTC refund address in case the lock can not be completed. This information is obtained from peg-in instructions included in an output with OP_RETURN in the tx, or from the tx sender using BtcLockSender class.", "committedDate": "2020-09-30T13:15:14Z", "type": "commit"}, {"oid": "7a229a19e0c1020c47393766cd1eb219d6e44ad3", "url": "https://github.com/rsksmart/rskj/commit/7a229a19e0c1020c47393766cd1eb219d6e44ad3", "message": "Create PeginInformation class\n\nThis class is responsible for parsing a btc lock tx and obtaining the rsk address to where the funds should be transferred, and a BTC refund address in case the lock can not be completed. This information is obtained from peg-in instructions included in an output with OP_RETURN in the tx, or from the tx sender using BtcLockSender class.", "committedDate": "2020-09-30T13:15:14Z", "type": "forcePushed"}]}