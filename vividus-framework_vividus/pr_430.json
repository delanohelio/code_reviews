{"pr_number": 430, "pr_title": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsExcept\u2026", "pr_author": "Ulyana-Yeryksonava", "pr_createdAt": "2020-03-24T21:14:05Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/430", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397622866", "body": "shouldn't we adjust resource checking logic depending on an element being checked? for examples 'a' element is allowed to be without href attr whereas 'img' isn't\r\nhttps://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element\r\nhttps://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element", "bodyText": "shouldn't we adjust resource checking logic depending on an element being checked? for examples 'a' element is allowed to be without href attr whereas 'img' isn't\nhttps://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element\nhttps://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element", "bodyHTML": "<p dir=\"auto\">shouldn't we adjust resource checking logic depending on an element being checked? for examples 'a' element is allowed to be without href attr whereas 'img' isn't<br>\n<a href=\"https://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element\" rel=\"nofollow\">https://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element</a><br>\n<a href=\"https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element\" rel=\"nofollow\">https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element</a></p>", "author": "uarlouski", "createdAt": "2020-03-25T05:53:50Z", "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();\n+        if (isSourceAttributeEmpty)\n+        {\n+            softAssert.recordFailedAssertion(", "originalCommit": "7a50c3b65291960924c91c346cb8715e760417a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzcxNw==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397637717", "bodyText": "I suppose it doesn't matter, the only one restriction is: an element must have src or href", "author": "Ulyana-Yeryksonava", "createdAt": "2020-03-25T06:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NDUyMA==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397654520", "bodyText": "I meant why should we fail during resource checking of links if it's not prohibited by spec to have a tag without href?", "author": "uarlouski", "createdAt": "2020-03-25T07:35:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NjUyMQ==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397656521", "bodyText": "it causes StringIndexOutOfBoundsException otherwise", "author": "Ulyana-Yeryksonava", "createdAt": "2020-03-25T07:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgwNzQzNQ==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397807435", "bodyText": "thanks for updating the docs :)", "author": "uarlouski", "createdAt": "2020-03-25T12:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjkzNA==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397622934", "body": "isSourceAttributeEmpty -> sourceAttributeEmpty", "bodyText": "isSourceAttributeEmpty -> sourceAttributeEmpty", "bodyHTML": "<p dir=\"auto\">isSourceAttributeEmpty -&gt; sourceAttributeEmpty</p>", "author": "uarlouski", "createdAt": "2020-03-25T05:54:01Z", "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();", "originalCommit": "7a50c3b65291960924c91c346cb8715e760417a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzODQ3Nw==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397638477", "bodyText": "why do you think so? https://rules.sonarsource.com/java/tag/convention/RSPEC-2047", "author": "Ulyana-Yeryksonava", "createdAt": "2020-03-25T06:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1MzQ1Mw==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397653453", "bodyText": "My comment is related to local var, not to method name", "author": "uarlouski", "createdAt": "2020-03-25T07:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNDM5NA==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397714394", "body": "```java\r\nprivate Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\r\n        Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\r\n{\r\n    return elements.map(e ->\r\n        Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\r\n                   .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\r\n                    \"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\"))\r\n                   .map(p -> Pair.of(createUri(p.getKey()), p.getValue()))\r\n                   .map(resourceValidationFactory)\r\n                   .peek(rv ->\r\n                   {\r\n                       if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\r\n                               || excludeHrefsPattern.matcher(rv.toString()).matches())\r\n                       {\r\n                           rv.setCheckStatus(CheckStatus.FILTERED);\r\n                       }\r\n                   });\r\n}", "bodyText": "private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n        Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n{\n    return elements.map(e ->\n        Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n                   .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\n                    \"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\"))\n                   .map(p -> Pair.of(createUri(p.getKey()), p.getValue()))\n                   .map(resourceValidationFactory)\n                   .peek(rv ->\n                   {\n                       if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\n                               || excludeHrefsPattern.matcher(rv.toString()).matches())\n                       {\n                           rv.setCheckStatus(CheckStatus.FILTERED);\n                       }\n                   });\n}", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private Stream&lt;ResourceValidation&gt; createResourceValidations(Stream&lt;Element&gt; elements,\n        Function&lt;Pair&lt;URI, String&gt;, ResourceValidation&gt; resourceValidationFactory)\n{\n    return elements.map(e -&gt;\n        Pair.of(getElementAttribute(e, &quot;href&quot;).orElseGet(() -&gt; e.attr(&quot;src&quot;)).trim(), getSelector(e)))\n                   .filter(p -&gt; !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\n                    &quot;Element by selector &quot; + p.getValue() + &quot; doesn't contain href/src attributes&quot;))\n                   .map(p -&gt; Pair.of(createUri(p.getKey()), p.getValue()))\n                   .map(resourceValidationFactory)\n                   .peek(rv -&gt;\n                   {\n                       if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\n                               || excludeHrefsPattern.matcher(rv.toString()).matches())\n                       {\n                           rv.setCheckStatus(CheckStatus.FILTERED);\n                       }\n                   });\n}\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">ResourceValidation</span>&gt;</span> createResourceValidations(<span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">Element</span>&gt;</span> elements,\n        <span class=\"pl-k\">Function&lt;<span class=\"pl-k\">Pair&lt;<span class=\"pl-smi\">URI</span>, <span class=\"pl-smi\">String</span>&gt;</span>, <span class=\"pl-smi\">ResourceValidation</span>&gt;</span> resourceValidationFactory)\n{\n    <span class=\"pl-k\">return</span> elements<span class=\"pl-k\">.</span>map(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span>\n        <span class=\"pl-smi\">Pair</span><span class=\"pl-k\">.</span>of(getElementAttribute(e, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>href<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>orElseGet(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> e<span class=\"pl-k\">.</span>attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"pl-pds\">\"</span></span>))<span class=\"pl-k\">.</span>trim(), getSelector(e)))\n                   .filter(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">!</span>p<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k\">.</span>isEmpty() <span class=\"pl-k\">||</span> softAssert<span class=\"pl-k\">.</span>recordFailedAssertion(\n                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Element by selector <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> p<span class=\"pl-k\">.</span>getValue() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> doesn't contain href/src attributes<span class=\"pl-pds\">\"</span></span>))\n                   .map(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Pair</span><span class=\"pl-k\">.</span>of(createUri(p<span class=\"pl-k\">.</span>getKey()), p<span class=\"pl-k\">.</span>getValue()))\n                   .map(resourceValidationFactory)\n                   .peek(rv <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span>\n                   {\n                       <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable(rv<span class=\"pl-k\">.</span>getUri()<span class=\"pl-k\">.</span>getScheme())<span class=\"pl-k\">.</span>map(<span class=\"pl-c1\">ALLOWED_SCHEMES</span><span class=\"pl-k\">::</span>contains)<span class=\"pl-k\">.</span>orElse(<span class=\"pl-c1\">false</span>)\n                               <span class=\"pl-k\">||</span> excludeHrefsPattern<span class=\"pl-k\">.</span>matcher(rv<span class=\"pl-k\">.</span>toString())<span class=\"pl-k\">.</span>matches())\n                       {\n                           rv<span class=\"pl-k\">.</span>setCheckStatus(<span class=\"pl-smi\">CheckStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>FILTERED</span>);\n                       }\n                   });\n}</pre></div>", "author": "valfirst", "createdAt": "2020-03-25T09:30:59Z", "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();\n+        if (isSourceAttributeEmpty)\n+        {\n+            softAssert.recordFailedAssertion(\n+                    \"Element by selector \" + getSelector(element) + \" doesn't contain href/src attributes\");\n+        }\n+        return isSourceAttributeEmpty;\n+    }\n+\n+    private String getElementSourceAttribute(Element element)\n+    {\n+        return getElementAttribute(element, \"href\").orElseGet(() -> element.attr(\"src\")).trim();\n+    }\n+\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements.filter(e -> !isSourceAttributeEmpty(e))\n+                .map(e -> Pair.of(createUri(getElementSourceAttribute(e)), getSelector(e)))\n+                .map(resourceValidationFactory).map(rv ->\n+                {\n+                    URI toCheck = rv.getUri();\n+                    boolean validatable = Optional.ofNullable(toCheck.getScheme()).map(s -> ALLOWED_SCHEMES.contains(s))\n+                            .orElse(false) && !excludeHrefsPattern.matcher(rv.toString()).matches();\n+                    if (!validatable)\n+                    {\n+                        rv.setCheckStatus(CheckStatus.FILTERED);\n+                    }\n+                    return rv;\n+                });", "originalCommit": "7a50c3b65291960924c91c346cb8715e760417a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0bce43e423c3376e70737daa58abbdef6013a2d", "url": "https://github.com/vividus-framework/vividus/commit/b0bce43e423c3376e70737daa58abbdef6013a2d", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'", "committedDate": "2020-03-25T11:55:45Z", "type": "forcePushed"}, {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97", "url": "https://github.com/vividus-framework/vividus/commit/688136f61dd1e82170d6c843f7c85c2572d00f97", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'", "committedDate": "2020-03-25T12:00:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgyMDEyNw==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397820127", "body": "please format it properly (you can use my comment unchanged), for example, take a look at `peek` operation it's really hard to find it first of all, and it's hard to track the sequence of actions", "bodyText": "please format it properly (you can use my comment unchanged), for example, take a look at peek operation it's really hard to find it first of all, and it's hard to track the sequence of actions", "bodyHTML": "<p dir=\"auto\">please format it properly (you can use my comment unchanged), for example, take a look at <code>peek</code> operation it's really hard to find it first of all, and it's hard to track the sequence of actions</p>", "author": "valfirst", "createdAt": "2020-03-25T12:36:49Z", "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -122,21 +123,18 @@ private ResourceValidation validate(ResourceValidation r)\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements\n+                .map(e -> Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n+                .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\n+                        \"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\"))\n+                .map(p -> Pair.of(createUri(p.getKey()), p.getValue())).map(resourceValidationFactory).peek(rv ->\n+                {\n+                    if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\n+                            || excludeHrefsPattern.matcher(rv.toString()).matches())\n+                    {\n+                        rv.setCheckStatus(CheckStatus.FILTERED);\n+                    }\n+                });", "originalCommit": "688136f61dd1e82170d6c843f7c85c2572d00f97", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgyNjY3MQ==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397826671", "body": "Move into separte method\r\n```java\r\nprivate boolean notEmpty(Pair<String, String>)\r\n{\r\n    return  !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\");\r\n}\r\n// and use it like:\r\n.filter(this::notEmpty)\r\n```\r\n\r\n", "bodyText": "Move into separte method\nprivate boolean notEmpty(Pair<String, String>)\n{\n    return  !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\");\n}\n// and use it like:\n.filter(this::notEmpty)", "bodyHTML": "<p dir=\"auto\">Move into separte method</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private boolean notEmpty(Pair&lt;String, String&gt;)\n{\n    return  !p.getKey().isEmpty() || softAssert.recordFailedAssertion(&quot;Element by selector &quot; + p.getValue() + &quot; doesn't contain href/src attributes&quot;);\n}\n// and use it like:\n.filter(this::notEmpty)\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> notEmpty(<span class=\"pl-k\">Pair&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span>)\n{\n    <span class=\"pl-k\">return</span>  <span class=\"pl-k\">!</span>p<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k\">.</span>isEmpty() <span class=\"pl-k\">||</span> softAssert<span class=\"pl-k\">.</span>recordFailedAssertion(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Element by selector <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> p<span class=\"pl-k\">.</span>getValue() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> doesn't contain href/src attributes<span class=\"pl-pds\">\"</span></span>);\n}\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> and use it like:</span>\n.filter(<span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span>notEmpty)</pre></div>", "author": "ikalinin1", "createdAt": "2020-03-25T12:48:29Z", "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -122,21 +123,18 @@ private ResourceValidation validate(ResourceValidation r)\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements\n+                .map(e -> Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n+                .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(", "originalCommit": "688136f61dd1e82170d6c843f7c85c2572d00f97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg1MTk4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397851981", "bodyText": "I would not move it, because logic is tightly coupled ('src', 'href' references)", "author": "valfirst", "createdAt": "2020-03-25T13:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgyNjY3MQ=="}], "type": "inlineReview"}, {"oid": "d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "url": "https://github.com/vividus-framework/vividus/commit/d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'", "committedDate": "2020-03-25T20:57:07Z", "type": "commit"}, {"oid": "d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "url": "https://github.com/vividus-framework/vividus/commit/d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'", "committedDate": "2020-03-25T20:57:07Z", "type": "forcePushed"}, {"oid": "cdcfff03ab8556dd304a3c2bb5c6b0fdf812d1c0", "url": "https://github.com/vividus-framework/vividus/commit/cdcfff03ab8556dd304a3c2bb5c6b0fdf812d1c0", "message": "Merge branch 'master' into task-408", "committedDate": "2020-03-25T22:14:05Z", "type": "commit"}]}