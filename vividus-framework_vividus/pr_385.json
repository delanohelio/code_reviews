{"pr_number": 385, "pr_title": "Add ability to use filtering transformer for tables from external files", "pr_author": "abudevich", "pr_createdAt": "2020-03-11T15:22:39Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/385", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2NDMwMA==", "url": "https://github.com/vividus-framework/vividus/pull/385#discussion_r391064300", "body": "to avoid circular bean references please use this approach to inject `ExamplesTableFactory`: https://github.com/vividus-framework/vividus/blob/8c58ece42b7816e1e4632cedf9f8c9463acc9eff/vividus-plugin-applitools/src/main/resources/spring.xml#L32", "bodyText": "to avoid circular bean references please use this approach to inject ExamplesTableFactory: \n  \n    \n      vividus/vividus-plugin-applitools/src/main/resources/spring.xml\n    \n    \n         Line 32\n      in\n      8c58ece\n    \n    \n    \n    \n\n        \n          \n           <property name=\"examplesTableFactory\" value=\"#{@'configuration'.getExamplesTableFactory()}\" />", "bodyHTML": "<p dir=\"auto\">to avoid circular bean references please use this approach to inject <code>ExamplesTableFactory</code>: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/vividus-framework/vividus/blob/8c58ece42b7816e1e4632cedf9f8c9463acc9eff/vividus-plugin-applitools/src/main/resources/spring.xml#L32\">vividus/vividus-plugin-applitools/src/main/resources/spring.xml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 32\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/vividus-framework/vividus/commit/8c58ece42b7816e1e4632cedf9f8c9463acc9eff\">8c58ece</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L32\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"32\"></td>\n          <td id=\"LC32\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> &lt;<span class=\"pl-ent\">property</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>examplesTableFactory<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">value</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#{@'configuration'.getExamplesTableFactory()}<span class=\"pl-pds\">\"</span></span> /&gt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "valfirst", "createdAt": "2020-03-11T15:39:03Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -37,6 +43,8 @@\n     private static final String BY_MAX_ROWS_PROPERTY = \"byMaxRows\";\n     private static final String BY_COLUMNS_NAMES_PROPERTY = \"byColumnNames\";\n \n+    @Inject private ExtendedConfiguration configuration;", "originalCommit": "a3c3631f0c00d9bac6e4a104afad57641cf61096", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63fa15bc14d1664856b90fa166ca6c8bae1cb438", "url": "https://github.com/vividus-framework/vividus/commit/63fa15bc14d1664856b90fa166ca6c8bae1cb438", "message": "Add ability to use filtering transformer for tables from external files", "committedDate": "2020-03-11T17:55:09Z", "type": "forcePushed"}, {"oid": "b029722a3e1b5707c598501fd2d9eff5c0e4028d", "url": "https://github.com/vividus-framework/vividus/commit/b029722a3e1b5707c598501fd2d9eff5c0e4028d", "message": "to revert", "committedDate": "2020-03-12T12:14:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzIwMQ==", "url": "https://github.com/vividus-framework/vividus/pull/385#discussion_r391103201", "body": "```java\r\n        Optional.ofNullable(byMaxRows)\r\n                .map(Integer::parseInt)\r\n                .filter(m -> m > examplesTable.getRowCount())\r\n                .map(m -> examplesTable.getRows().subList(0, resultDataRows))\r\n                .orElseGet(examplesTable::getRows)", "bodyText": "Optional.ofNullable(byMaxRows)\n                .map(Integer::parseInt)\n                .filter(m -> m > examplesTable.getRowCount())\n                .map(m -> examplesTable.getRows().subList(0, resultDataRows))\n                .orElseGet(examplesTable::getRows)", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        Optional.ofNullable(byMaxRows)\n                .map(Integer::parseInt)\n                .filter(m -&gt; m &gt; examplesTable.getRowCount())\n                .map(m -&gt; examplesTable.getRows().subList(0, resultDataRows))\n                .orElseGet(examplesTable::getRows)\"><pre>        <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable(byMaxRows)\n                .map(<span class=\"pl-smi\">Integer</span><span class=\"pl-k\">::</span>parseInt)\n                .filter(m <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> m <span class=\"pl-k\">&gt;</span> examplesTable<span class=\"pl-k\">.</span>getRowCount())\n                .map(m <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> examplesTable<span class=\"pl-k\">.</span>getRows()<span class=\"pl-k\">.</span>subList(<span class=\"pl-c1\">0</span>, resultDataRows))\n                .orElseGet(examplesTable<span class=\"pl-k\">::</span>getRows)</pre></div>", "author": "ikalinin1", "createdAt": "2020-03-11T16:32:37Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -49,41 +57,41 @@ public String transform(String tableAsString, ExamplesTableProperties properties\n         checkArgument(!(byMaxColumns != null && byColumnNames != null),\n                 \"Conflicting properties declaration found: '%s' and '%s'\",\n                 BY_MAX_COLUMNS_PROPERTY, BY_COLUMNS_NAMES_PROPERTY);\n+        ExamplesTable examplesTable = configuration.examplesTableFactory().createExamplesTable(tableAsString);\n \n-        List<String> tableRows = ExamplesTableProcessor.parseRows(tableAsString);\n-        List<String> headerValues = TableUtils.parseRow(tableRows.get(0), true, properties);\n-        List<Integer> filteredColumnIndexes = byColumnNames == null\n-                ? getLimitedColumns(headerValues, byMaxColumns) : getFilteredColumns(headerValues, byColumnNames);\n+        List<String> headerValues = examplesTable.getHeaders();\n+        int columnsLimit = byMaxColumns == null\n+                ? headerValues.size() : Math.min(headerValues.size(), Integer.parseInt(byMaxColumns));\n+        List<String> filteredColumnsNames = byColumnNames == null ? headerValues.subList(0, columnsLimit)\n+                : Arrays.stream(StringUtils.split(byColumnNames, ';')).map(String::trim).collect(Collectors.toList());\n+        Set<String> filteredHeaders = new HashSet<>(filteredColumnsNames);\n \n-        int resultDataRows = byMaxRows == null ? tableRows.size() - 1 : Integer.parseInt(byMaxRows);\n-        List<List<String>> updatedDataRows = ExamplesTableProcessor.parseDataRows(tableRows, properties)\n-                .stream()\n-                .limit(resultDataRows)\n-                .map(r -> filterRowByIndexes(filteredColumnIndexes, r))\n-                .collect(Collectors.toList());\n+        List<Map<String, String>> result = filterByHeaders(filteredHeaders, headerValues,\n+                getFilteredRows(byMaxRows, examplesTable));\n \n-        return ExamplesTableProcessor.buildExamplesTable(filterRowByIndexes(filteredColumnIndexes, headerValues),\n-                updatedDataRows, properties, true);\n-    }\n+        List<List<String>> resultRows = result.stream()\n+                .map(TreeMap::new)\n+                .map(Map::values)\n+                .map(ArrayList::new)\n+                .collect(Collectors.toList());\n \n-    private List<Integer> getLimitedColumns(List<String> headerValues, String byMaxColumns)\n-    {\n-        int columnsLimit = byMaxColumns == null\n-                ? headerValues.size() : Math.min(headerValues.size(), Integer.parseInt(byMaxColumns));\n-        return IntStream.rangeClosed(0, columnsLimit - 1).boxed().collect(Collectors.toList());\n+        return ExamplesTableProcessor.buildExamplesTable(filteredHeaders, resultRows, properties, true, true);\n     }\n \n-    private List<Integer> getFilteredColumns(List<String> headerValues, String byColumnNames)\n+    private List<Map<String, String>> filterByHeaders(Set<String> filteredHeaders, List<String> headerValues,\n+            List<Map<String, String>> result)\n     {\n-        return Arrays.stream(StringUtils.split(byColumnNames, ';'))\n-                .map(String::trim)\n-                .map(headerValues::indexOf)\n-                .filter(i -> i > -1)\n-                .collect(Collectors.toList());\n+        Set<String> headersForDeleting = new HashSet<>(headerValues);\n+        headersForDeleting.removeAll(filteredHeaders);\n+        result.stream().map(m -> m.keySet().removeAll(headersForDeleting))\n+            .collect(Collectors.toList());\n+        return result;\n     }\n \n-    private List<String> filterRowByIndexes(List<Integer> columnsToUse, List<String> row)\n+    private List<Map<String, String>> getFilteredRows(String byMaxRows, ExamplesTable examplesTable)\n     {\n-        return row.stream().filter(e -> columnsToUse.contains(row.indexOf(e))).collect(Collectors.toList());\n+        int resultDataRows = byMaxRows == null ? examplesTable.getRowCount()", "originalCommit": "a3c3631f0c00d9bac6e4a104afad57641cf61096", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "url": "https://github.com/vividus-framework/vividus/commit/7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "message": "to revert", "committedDate": "2020-03-12T12:44:06Z", "type": "forcePushed"}, {"oid": "9a8c77d9c374a31c6215166e367ebab1d33bb05d", "url": "https://github.com/vividus-framework/vividus/commit/9a8c77d9c374a31c6215166e367ebab1d33bb05d", "message": "Add ability to use filtering transformer for tables from external files", "committedDate": "2020-03-12T13:16:11Z", "type": "forcePushed"}, {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "url": "https://github.com/vividus-framework/vividus/commit/6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "message": "Add ability to use filtering transformer for tables from external files", "committedDate": "2020-03-12T13:32:23Z", "type": "commit"}, {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "url": "https://github.com/vividus-framework/vividus/commit/6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "message": "Add ability to use filtering transformer for tables from external files", "committedDate": "2020-03-12T13:32:23Z", "type": "forcePushed"}]}