{"pr_number": 766, "pr_title": "[PARQUET-1808]: Replacing multiple String Object creations with StringBuilder", "pr_author": "koiralo", "pr_createdAt": "2020-03-04T17:07:18Z", "pr_url": "https://github.com/apache/parquet-mr/pull/766", "timeline": [{"oid": "0b3a95c1cea10d3550c34965603fc75ec5bc9989", "url": "https://github.com/apache/parquet-mr/commit/0b3a95c1cea10d3550c34965603fc75ec5bc9989", "message": "[PARQUET-1808]: Replacing multiple String Object creations with StringBuilder", "committedDate": "2020-03-04T17:05:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2NDk5Ng==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388164996", "body": "nit: Appending a char instead of a string with one char would perform a little bit better\r\n```suggestion\r\n              result.append('\\n');\r\n```", "bodyText": "nit: Appending a char instead of a string with one char would perform a little bit better\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          result.append(\"\\n\");\n          \n          \n            \n                          result.append('\\n');", "bodyHTML": "<p dir=\"auto\">nit: Appending a char instead of a string with one char would perform a little bit better</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              result<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              result<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">'</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">'</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gszadovszky", "createdAt": "2020-03-05T09:18:13Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -48,28 +48,30 @@ public String toString() {\n   }\n \n   public String toString(String indent) {\n-    String result = \"\";\n+    StringBuilder result = new StringBuilder();\n     int i = 0;\n     for (Type field : schema.getFields()) {\n       String name = field.getName();\n       List<Object> values = data[i];\n       ++i;\n-      if (values != null) {\n-        if (values.size() > 0) {\n+      if (values != null && !values.isEmpty()) {\n           for (Object value : values) {\n-            result += indent + name;\n+            result.append(indent);\n+            result.append(name);\n             if (value == null) {\n-              result += \": NULL\\n\";\n+              result.append(\": NULL\\n\");\n             } else if (value instanceof Group) {\n-              result += \"\\n\" + ((SimpleGroup)value).toString(indent+\"  \");\n+              result.append(\"\\n\");", "originalCommit": "0b3a95c1cea10d3550c34965603fc75ec5bc9989", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2NjI0Ng==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388166246", "body": "As we are doing this change because of performance reasons I would create a private method in `SimpleGroup` that gets the `StringBuilder` object is it can append all the stuff into the same builder.", "bodyText": "As we are doing this change because of performance reasons I would create a private method in SimpleGroup that gets the StringBuilder object is it can append all the stuff into the same builder.", "bodyHTML": "<p dir=\"auto\">As we are doing this change because of performance reasons I would create a private method in <code>SimpleGroup</code> that gets the <code>StringBuilder</code> object is it can append all the stuff into the same builder.</p>", "author": "gszadovszky", "createdAt": "2020-03-05T09:20:34Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -48,28 +48,30 @@ public String toString() {\n   }\n \n   public String toString(String indent) {\n-    String result = \"\";\n+    StringBuilder result = new StringBuilder();\n     int i = 0;\n     for (Type field : schema.getFields()) {\n       String name = field.getName();\n       List<Object> values = data[i];\n       ++i;\n-      if (values != null) {\n-        if (values.size() > 0) {\n+      if (values != null && !values.isEmpty()) {\n           for (Object value : values) {\n-            result += indent + name;\n+            result.append(indent);\n+            result.append(name);\n             if (value == null) {\n-              result += \": NULL\\n\";\n+              result.append(\": NULL\\n\");\n             } else if (value instanceof Group) {\n-              result += \"\\n\" + ((SimpleGroup)value).toString(indent+\"  \");\n+              result.append(\"\\n\");\n+              result.append(((SimpleGroup)value).toString(indent+\"  \"));", "originalCommit": "0b3a95c1cea10d3550c34965603fc75ec5bc9989", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc3MDkxMg==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388770912", "bodyText": "Isn't it already using same StringBuilder?", "author": "koiralo", "createdAt": "2020-03-06T08:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2NjI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjAzOA==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388782038", "bodyText": "This method is recursive in case of the child is a Group. This method appends the string generated by this recursive invocation. So, if you have a deeply nested structure it would create a bunch of StringBuilder objects, generate String objects from them and appends them to the StringBuilder object created at the higher level.\nInstead, I would suggest passing the StringBuilder object created at the top level to the children's methods so you'll have only one builder and everything will be appended to it directly.", "author": "gszadovszky", "createdAt": "2020-03-06T08:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2NjI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgyMTY4Nw==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388821687", "bodyText": "Thanks for detail explanation, I didn't take a detail look in recursive. I think changing a method signature and using StringBuilder should be enough.", "author": "koiralo", "createdAt": "2020-03-06T10:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2NjI0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2ODY5OA==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388168698", "body": "You may create the builder with an exact capacity so it does not need to grow during appending values.\r\nAlso, you may count in the message itself and appending it instead of concatenating the indent to the message separately.", "bodyText": "You may create the builder with an exact capacity so it does not need to grow during appending values.\nAlso, you may count in the message itself and appending it instead of concatenating the indent to the message separately.", "bodyHTML": "<p dir=\"auto\">You may create the builder with an exact capacity so it does not need to grow during appending values.<br>\nAlso, you may count in the message itself and appending it instead of concatenating the indent to the message separately.</p>", "author": "gszadovszky", "createdAt": "2020-03-05T09:24:56Z", "path": "parquet-column/src/main/java/org/apache/parquet/io/MessageColumnIO.java", "diffHunk": "@@ -276,11 +276,11 @@ private void printState() {\n \n     private void log(Object message, Object...parameters) {\n       if (DEBUG) {\n-        String indent = \"\";\n+        StringBuilder indent = new StringBuilder();", "originalCommit": "0b3a95c1cea10d3550c34965603fc75ec5bc9989", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE2OTg1Ng==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388169856", "body": "nit: you may keep the chain pattern as `append` returns the builder object.\r\nDo not have a strong opinion on the current or the chained version.", "bodyText": "nit: you may keep the chain pattern as append returns the builder object.\nDo not have a strong opinion on the current or the chained version.", "bodyHTML": "<p dir=\"auto\">nit: you may keep the chain pattern as <code>append</code> returns the builder object.<br>\nDo not have a strong opinion on the current or the chained version.</p>", "author": "gszadovszky", "createdAt": "2020-03-05T09:26:53Z", "path": "parquet-column/src/test/java/org/apache/parquet/io/ExpectationValidatingConverter.java", "diffHunk": "@@ -151,14 +151,16 @@ public Void getCurrentRecord() {\n   }\n \n   private String path(List<GroupType> path, Type type) {\n-    String pathString = \"\";\n+    StringBuilder pathString = new StringBuilder();\n     if (path.size() > 0) {\n       for (int i = 1; i < path.size(); i++) {\n-        pathString += path.get(i).getName() + \".\";\n+        pathString.append(path.get(i).getName());", "originalCommit": "0b3a95c1cea10d3550c34965603fc75ec5bc9989", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "593e82321b9522d344ebbe42201d1d9fe7007990", "url": "https://github.com/apache/parquet-mr/commit/593e82321b9522d344ebbe42201d1d9fe7007990", "message": "[PARQUET-1808]: changes for the review.", "committedDate": "2020-03-06T08:53:28Z", "type": "commit"}, {"oid": "e3dce3e8e60d73067d2e9bf66bd45111229e185a", "url": "https://github.com/apache/parquet-mr/commit/e3dce3e8e60d73067d2e9bf66bd45111229e185a", "message": "[PARQUET-1808]: Updating toString method signature", "committedDate": "2020-03-06T10:17:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0OTgyNg==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r388849826", "body": "We shall not modify existing public methods as they are breaking changes. That's why I've mentioned creating a new private method that would be invoked by the existing ones.\r\nLet me put an example about the idea I wanted to describe:\r\n```java\r\npublic String toString(String indent) {\r\n  StringBuilder builder = new StringBuilder();\r\n  appendToString(builder, indent);\r\n  return builder.toString();\r\n}\r\n\r\nprivate void appendToString(StringBuilder builder, String indent) {\r\n  // ...\r\n        builder.append(indent).append(name);\r\n        if (value == null) {\r\n          builder.append(\": NULL\\N\");\r\n        } else if (value instanceof Group) {\r\n          builder.append('\\n');\r\n          ((SimpleGroup) value).appendToString(builder, indent + \"  \");\r\n        } else {\r\n          builder.append(\": \").append(value).append('\\n');\r\n  // ...\r\n}\r\n```", "bodyText": "We shall not modify existing public methods as they are breaking changes. That's why I've mentioned creating a new private method that would be invoked by the existing ones.\nLet me put an example about the idea I wanted to describe:\npublic String toString(String indent) {\n  StringBuilder builder = new StringBuilder();\n  appendToString(builder, indent);\n  return builder.toString();\n}\n\nprivate void appendToString(StringBuilder builder, String indent) {\n  // ...\n        builder.append(indent).append(name);\n        if (value == null) {\n          builder.append(\": NULL\\N\");\n        } else if (value instanceof Group) {\n          builder.append('\\n');\n          ((SimpleGroup) value).appendToString(builder, indent + \"  \");\n        } else {\n          builder.append(\": \").append(value).append('\\n');\n  // ...\n}", "bodyHTML": "<p dir=\"auto\">We shall not modify existing public methods as they are breaking changes. That's why I've mentioned creating a new private method that would be invoked by the existing ones.<br>\nLet me put an example about the idea I wanted to describe:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public String toString(String indent) {\n  StringBuilder builder = new StringBuilder();\n  appendToString(builder, indent);\n  return builder.toString();\n}\n\nprivate void appendToString(StringBuilder builder, String indent) {\n  // ...\n        builder.append(indent).append(name);\n        if (value == null) {\n          builder.append(&quot;: NULL\\N&quot;);\n        } else if (value instanceof Group) {\n          builder.append('\\n');\n          ((SimpleGroup) value).appendToString(builder, indent + &quot;  &quot;);\n        } else {\n          builder.append(&quot;: &quot;).append(value).append('\\n');\n  // ...\n}\n\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> toString(<span class=\"pl-smi\">String</span> indent) {\n  <span class=\"pl-smi\">StringBuilder</span> builder <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringBuilder</span>();\n  appendToString(builder, indent);\n  <span class=\"pl-k\">return</span> builder<span class=\"pl-k\">.</span>toString();\n}\n\n<span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> appendToString(<span class=\"pl-smi\">StringBuilder</span> builder, <span class=\"pl-smi\">String</span> indent) {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n        builder<span class=\"pl-k\">.</span>append(indent)<span class=\"pl-k\">.</span>append(name);\n        <span class=\"pl-k\">if</span> (value <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {\n          builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: NULL<span class=\"pl-cce\">\\N</span><span class=\"pl-pds\">\"</span></span>);\n        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (value <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Group</span>) {\n          builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>);\n          ((<span class=\"pl-smi\">SimpleGroup</span>) value)<span class=\"pl-k\">.</span>appendToString(builder, indent <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>  <span class=\"pl-pds\">\"</span></span>);\n        } <span class=\"pl-k\">else</span> {\n          builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: <span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>append(value)<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n}</pre></div>", "author": "gszadovszky", "createdAt": "2020-03-06T11:22:00Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -44,10 +44,10 @@ public SimpleGroup(GroupType schema) {\n \n   @Override\n   public String toString() {\n-    return toString(\"\");\n+    return toString(new StringBuilder()).toString();\n   }\n \n-  public String toString(String indent) {\n+  public StringBuilder toString(StringBuilder indent) {", "originalCommit": "e3dce3e8e60d73067d2e9bf66bd45111229e185a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4OTY4Ng==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r389489686", "bodyText": "Ok make sense. have done the required changes.", "author": "koiralo", "createdAt": "2020-03-09T07:05:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0OTgyNg=="}], "type": "inlineReview"}, {"oid": "64a47b46c0cd5cc7e4dd37ee1bbe6f93d3e9f40d", "url": "https://github.com/apache/parquet-mr/commit/64a47b46c0cd5cc7e4dd37ee1bbe6f93d3e9f40d", "message": "[PARQUET-1808]: Updating toString method", "committedDate": "2020-03-06T13:57:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU1MDc2Mg==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r389550762", "body": "nit:\r\n```suggestion\r\n\r\n  private StringBuilder appendToString(StringBuilder builder, String indent) {\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private StringBuilder appendToString(StringBuilder builder, String indent){\n          \n          \n            \n            \n          \n          \n            \n              private StringBuilder appendToString(StringBuilder builder, String indent) {", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">  </span><span class=\"pl-k x\">private</span><span class=\"x\"> </span><span class=\"pl-smi x\">StringBuilder</span><span class=\"x\"> appendToString(</span><span class=\"pl-smi x\">StringBuilder</span><span class=\"x\"> builder, </span><span class=\"pl-smi x\">String</span><span class=\"x x-last\"> indent){</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">StringBuilder</span> appendToString(<span class=\"pl-smi\">StringBuilder</span> builder, <span class=\"pl-smi\">String</span> indent) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gszadovszky", "createdAt": "2020-03-09T09:42:10Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -44,30 +44,34 @@ public SimpleGroup(GroupType schema) {\n \n   @Override\n   public String toString() {\n-    return toString(new StringBuilder()).toString();\n+    return toString(\"\");\n   }\n-\n-  public StringBuilder toString(StringBuilder indent) {\n-    StringBuilder result = new StringBuilder();\n+  private StringBuilder appendToString(StringBuilder builder, String indent){", "originalCommit": "64a47b46c0cd5cc7e4dd37ee1bbe6f93d3e9f40d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU1Mjg5MA==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r389552890", "body": "This is not correct this way. You are appending the builder to itself which would result mixed up output.\r\n```suggestion\r\n            builder.append('\\n');\r\n            ((SimpleGroup) value).appendToString(builder, indent + \"  \");\r\n```", "bodyText": "This is not correct this way. You are appending the builder to itself which would result mixed up output.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        builder.append(\"\\n\").append(((SimpleGroup)value).appendToString(builder,indent+\"  \"));\n          \n          \n            \n                        builder.append('\\n');\n          \n          \n            \n                        ((SimpleGroup) value).appendToString(builder, indent + \"  \");", "bodyHTML": "<p dir=\"auto\">This is not correct this way. You are appending the builder to itself which would result mixed up output.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">)</span><span class=\"pl-k x\">.</span><span class=\"x\">append(((</span><span class=\"pl-smi x\">SimpleGroup</span><span class=\"x\">)value)</span><span class=\"pl-k x\">.</span><span class=\"x\">appendToString(builder,indent</span><span class=\"pl-k x\">+</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">  </span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">'</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">'</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            ((<span class=\"pl-smi\">SimpleGroup</span>) value)<span class=\"pl-k\">.</span>appendToString(builder, indent <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>  <span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gszadovszky", "createdAt": "2020-03-09T09:46:22Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -44,30 +44,34 @@ public SimpleGroup(GroupType schema) {\n \n   @Override\n   public String toString() {\n-    return toString(new StringBuilder()).toString();\n+    return toString(\"\");\n   }\n-\n-  public StringBuilder toString(StringBuilder indent) {\n-    StringBuilder result = new StringBuilder();\n+  private StringBuilder appendToString(StringBuilder builder, String indent){\n     int i = 0;\n     for (Type field : schema.getFields()) {\n       String name = field.getName();\n       List<Object> values = data[i];\n       ++i;\n       if (values != null && !values.isEmpty()) {\n-          for (Object value : values) {\n-            result.append(indent).append(name);\n-            if (value == null) {\n-              result.append(\": NULL\\n\");\n-            } else if (value instanceof Group) {\n-              result.append(\"\\n\").append(((SimpleGroup)value).toString(indent.append(\"  \")));\n-            } else {\n-              result.append(\": \" ).append(value.toString()).append(\"\\n\");\n-            }\n+        for (Object value : values) {\n+          builder.append(indent).append(name);\n+          if (value == null) {\n+            builder.append(\": NULL\\n\");\n+          } else if (value instanceof Group) {\n+            builder.append(\"\\n\").append(((SimpleGroup)value).appendToString(builder,indent+\"  \"));", "originalCommit": "64a47b46c0cd5cc7e4dd37ee1bbe6f93d3e9f40d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU1MzE3NA==", "url": "https://github.com/apache/parquet-mr/pull/766#discussion_r389553174", "body": "nit:\r\n```suggestion\r\n            builder.append(\": \").append(value.toString()).append('\\n');\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        builder.append(\": \" ).append(value.toString()).append(\"\\n\");\n          \n          \n            \n                        builder.append(\": \").append(value.toString()).append('\\n');", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: <span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\"> </span>)<span class=\"pl-k\">.</span>append(value<span class=\"pl-k\">.</span>toString())<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: <span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>append(value<span class=\"pl-k\">.</span>toString())<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">'</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">'</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gszadovszky", "createdAt": "2020-03-09T09:46:52Z", "path": "parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java", "diffHunk": "@@ -44,30 +44,34 @@ public SimpleGroup(GroupType schema) {\n \n   @Override\n   public String toString() {\n-    return toString(new StringBuilder()).toString();\n+    return toString(\"\");\n   }\n-\n-  public StringBuilder toString(StringBuilder indent) {\n-    StringBuilder result = new StringBuilder();\n+  private StringBuilder appendToString(StringBuilder builder, String indent){\n     int i = 0;\n     for (Type field : schema.getFields()) {\n       String name = field.getName();\n       List<Object> values = data[i];\n       ++i;\n       if (values != null && !values.isEmpty()) {\n-          for (Object value : values) {\n-            result.append(indent).append(name);\n-            if (value == null) {\n-              result.append(\": NULL\\n\");\n-            } else if (value instanceof Group) {\n-              result.append(\"\\n\").append(((SimpleGroup)value).toString(indent.append(\"  \")));\n-            } else {\n-              result.append(\": \" ).append(value.toString()).append(\"\\n\");\n-            }\n+        for (Object value : values) {\n+          builder.append(indent).append(name);\n+          if (value == null) {\n+            builder.append(\": NULL\\n\");\n+          } else if (value instanceof Group) {\n+            builder.append(\"\\n\").append(((SimpleGroup)value).appendToString(builder,indent+\"  \"));\n+          } else {\n+            builder.append(\": \" ).append(value.toString()).append(\"\\n\");", "originalCommit": "64a47b46c0cd5cc7e4dd37ee1bbe6f93d3e9f40d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "73324c79333a0a1454d75c18c628eeeec84e542a", "url": "https://github.com/apache/parquet-mr/commit/73324c79333a0a1454d75c18c628eeeec84e542a", "message": "Update parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java\r\n\r\nFixed space.\n\nCo-Authored-By: Gabor Szadovszky <gabor@apache.org>", "committedDate": "2020-03-09T10:17:56Z", "type": "commit"}, {"oid": "5b93a1de4085e285e854b8724f921786707b407e", "url": "https://github.com/apache/parquet-mr/commit/5b93a1de4085e285e854b8724f921786707b407e", "message": "Update parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java\r\n\r\nFixed space.\n\nCo-Authored-By: Gabor Szadovszky <gabor@apache.org>", "committedDate": "2020-03-09T10:19:28Z", "type": "commit"}, {"oid": "bf1db626b9f9377f649854cfae043a3b254c87fd", "url": "https://github.com/apache/parquet-mr/commit/bf1db626b9f9377f649854cfae043a3b254c87fd", "message": "Update parquet-column/src/main/java/org/apache/parquet/example/data/simple/SimpleGroup.java\r\n\r\nFixed bulider.\n\nCo-Authored-By: Gabor Szadovszky <gabor@apache.org>", "committedDate": "2020-03-09T10:20:09Z", "type": "commit"}]}