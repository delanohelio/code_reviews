{"pr_number": 6799, "pr_title": "optional auth method name header in http authentication", "pr_author": "KannarFr", "pr_createdAt": "2020-04-22T21:17:30Z", "pr_url": "https://github.com/apache/pulsar/pull/6799", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTI4Mw==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r413589283", "body": "If none of the providers is able to authenticate the provided `authData`, shouldn't we throw any exception here?", "bodyText": "If none of the providers is able to authenticate the provided authData, shouldn't we throw any exception here?", "bodyHTML": "<p dir=\"auto\">If none of the providers is able to authenticate the provided <code>authData</code>, shouldn't we throw any exception here?</p>", "author": "sijie", "createdAt": "2020-04-23T07:47:32Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -83,13 +83,29 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header Auth-Method-Name [%s].\", authMethodName)));\n+\n             try {\n-                return provider.authenticate(authData);\n+                return providerToUse.authenticate(authData);\n             } catch (AuthenticationException e) {\n-                // Ignore the exception because we don't know which authentication method is expected here.\n+                throw e;\n+            }\n+        } else {\n+            for (AuthenticationProvider provider : providers.values()) {\n+                try {\n+                    return provider.authenticate(authData);\n+                } catch (AuthenticationException e) {\n+                    // Ignore the exception because we don't know which authentication method is expected here.\n+                }\n             }", "originalCommit": "562231c7faf88fd1fed1ce4ac2dc7b5084a93896", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIzOTYxMw==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r414239613", "bodyText": "Already done here: \n  \n    \n      pulsar/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java\n    \n    \n         Line 118\n      in\n      562231c\n    \n    \n    \n    \n\n        \n          \n           throw new AuthenticationException(\"Authentication required\"); \n        \n    \n  \n\n, right?", "author": "KannarFr", "createdAt": "2020-04-24T02:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTI4Mw=="}], "type": "inlineReview"}, {"oid": "3af3e41d8177d6f5b31fdb440589665e543e23a6", "url": "https://github.com/apache/pulsar/commit/3af3e41d8177d6f5b31fdb440589665e543e23a6", "message": "optional auth method name header in http authentication", "committedDate": "2020-04-27T02:58:58Z", "type": "forcePushed"}, {"oid": "7da41df6184a75e62d08671351969b4ee3ff1e0c", "url": "https://github.com/apache/pulsar/commit/7da41df6184a75e62d08671351969b4ee3ff1e0c", "message": "optional auth method name header in http authentication", "committedDate": "2020-05-04T20:35:44Z", "type": "forcePushed"}, {"oid": "f4a601dfb8476f1133120529becb8b1c985d0cd3", "url": "https://github.com/apache/pulsar/commit/f4a601dfb8476f1133120529becb8b1c985d0cd3", "message": "optional auth method name header in http authentication", "committedDate": "2020-06-06T12:54:58Z", "type": "forcePushed"}, {"oid": "ffe527af5178a09f8a89aeaafca339c2b1ac3588", "url": "https://github.com/apache/pulsar/commit/ffe527af5178a09f8a89aeaafca339c2b1ac3588", "message": "optional auth method name header in http authentication", "committedDate": "2020-08-12T18:10:08Z", "type": "forcePushed"}, {"oid": "3dfb3e285bf2c49ed63e3d47c5870abe782317ef", "url": "https://github.com/apache/pulsar/commit/3dfb3e285bf2c49ed63e3d47c5870abe782317ef", "message": "optional auth method name header in http authentication", "committedDate": "2020-08-13T15:10:58Z", "type": "forcePushed"}, {"oid": "5715c1e548f79643d107b694ef32bae2aa0c74a6", "url": "https://github.com/apache/pulsar/commit/5715c1e548f79643d107b694ef32bae2aa0c74a6", "message": "optional auth method name header in http authentication", "committedDate": "2020-08-25T04:41:27Z", "type": "forcePushed"}, {"oid": "719716b5077365b79c5764b7146fb53e686c3b1a", "url": "https://github.com/apache/pulsar/commit/719716b5077365b79c5764b7146fb53e686c3b1a", "message": "optional auth method name header in http authentication", "committedDate": "2020-09-14T15:01:00Z", "type": "forcePushed"}, {"oid": "696906255849754b8f6018c936f96ff4a282f230", "url": "https://github.com/apache/pulsar/commit/696906255849754b8f6018c936f96ff4a282f230", "message": "typo", "committedDate": "2021-01-13T17:03:07Z", "type": "forcePushed"}, {"oid": "f8d4a575299069f1531b06f0c5df07dc00b078fa", "url": "https://github.com/apache/pulsar/commit/f8d4a575299069f1531b06f0c5df07dc00b078fa", "message": "typo", "committedDate": "2021-02-02T17:17:19Z", "type": "forcePushed"}, {"oid": "40bce876b399c64ab664f412dba732c40e54b838", "url": "https://github.com/apache/pulsar/commit/40bce876b399c64ab664f412dba732c40e54b838", "message": "fix test", "committedDate": "2021-04-23T19:39:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzA5OQ==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626097099", "body": "Since this is a non-standard header, we should use a prefixed name, like `X-Pulsar-Auth-Method-Name` or `X-Pulsar-Auth-Method`", "bodyText": "Since this is a non-standard header, we should use a prefixed name, like X-Pulsar-Auth-Method-Name or X-Pulsar-Auth-Method", "bodyHTML": "<p dir=\"auto\">Since this is a non-standard header, we should use a prefixed name, like <code>X-Pulsar-Auth-Method-Name</code> or <code>X-Pulsar-Auth-Method</code></p>", "author": "merlimat", "createdAt": "2021-05-04T20:47:28Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");", "originalCommit": "40bce876b399c64ab664f412dba732c40e54b838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDg4OA==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154888", "bodyText": "Done in e0c4876.", "author": "KannarFr", "createdAt": "2021-05-04T22:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzA5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626097618", "body": "`AuthenticationService` should build a map in the constructor with all the available provider indexed by name", "bodyText": "AuthenticationService should build a map in the constructor with all the available provider indexed by name", "bodyHTML": "<p dir=\"auto\"><code>AuthenticationService</code> should build a map in the constructor with all the available provider indexed by name</p>", "author": "merlimat", "createdAt": "2021-05-04T20:48:18Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "originalCommit": "40bce876b399c64ab664f412dba732c40e54b838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDc1Mg==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154752", "bodyText": "providers is already a Map built in the constructor. Not sure to understand your statement?", "author": "KannarFr", "createdAt": "2021-05-04T22:39:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NjIyNA==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626156224", "bodyText": "Ok, so we should be able to just do providers.get(authMethodName) instead of iterating over the items of the map.", "author": "merlimat", "createdAt": "2021-05-04T22:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NjYwOQ==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626156609", "bodyText": "Oh ok, so try catch.", "author": "KannarFr", "createdAt": "2021-05-04T22:44:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE3NDEzOA==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626174138", "bodyText": "Thanks for the suggestion I thought get from Map could throws Exception is not find :D.", "author": "KannarFr", "createdAt": "2021-05-04T23:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5ODM2NA==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626098364", "body": "These test changes look unrelated to the auth change.", "bodyText": "These test changes look unrelated to the auth change.", "bodyHTML": "<p dir=\"auto\">These test changes look unrelated to the auth change.</p>", "author": "merlimat", "createdAt": "2021-05-04T20:49:25Z", "path": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/schema/AvroSchemaTest.java", "diffHunk": "@@ -20,39 +20,36 @@\n \n import static java.nio.charset.StandardCharsets.UTF_8;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.FOO_FIELDS;\n-import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_ALLOW_NULL;\n+import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;", "originalCommit": "40bce876b399c64ab664f412dba732c40e54b838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDIzMg==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154232", "bodyText": "fixed", "author": "KannarFr", "createdAt": "2021-05-04T22:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5ODM2NA=="}], "type": "inlineReview"}, {"oid": "abf8d562c59a7ee664bf7887e3d8e588705bda49", "url": "https://github.com/apache/pulsar/commit/abf8d562c59a7ee664bf7887e3d8e588705bda49", "message": "optional auth method name header in http authentication", "committedDate": "2021-05-04T22:37:03Z", "type": "commit"}, {"oid": "f97ccc37bbe02814434a3a1fd54e9f964fadd13c", "url": "https://github.com/apache/pulsar/commit/f97ccc37bbe02814434a3a1fd54e9f964fadd13c", "message": "prefix with X-Pulsar", "committedDate": "2021-05-04T22:37:03Z", "type": "forcePushed"}, {"oid": "e0c4876550e68905879e8440fa13a3e5226cb782", "url": "https://github.com/apache/pulsar/commit/e0c4876550e68905879e8440fa13a3e5226cb782", "message": "prefix with X-Pulsar", "committedDate": "2021-05-04T22:43:35Z", "type": "commit"}, {"oid": "e0c4876550e68905879e8440fa13a3e5226cb782", "url": "https://github.com/apache/pulsar/commit/e0c4876550e68905879e8440fa13a3e5226cb782", "message": "prefix with X-Pulsar", "committedDate": "2021-05-04T22:43:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE2OTE2OQ==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626169169", "body": "```suggestion\r\n            AuthenticationProvider providerToUse = providers.get(authMethodName);\r\n            if (providerToUse == null) {\r\n                throw new AuthenticationException(\r\n                    String.format(\"Unsupported authentication method: [%s].\", authMethodName);\r\n            }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AuthenticationProvider providerToUse = providers\n          \n          \n            \n                                .values()\n          \n          \n            \n                                .parallelStream()\n          \n          \n            \n                                .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n          \n          \n            \n                                .findAny()\n          \n          \n            \n                                .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header X-Pulsar-Auth-Method-Name [%s].\", authMethodName)));\n          \n          \n            \n                        AuthenticationProvider providerToUse = providers.get(authMethodName);\n          \n          \n            \n                        if (providerToUse == null) {\n          \n          \n            \n                            throw new AuthenticationException(\n          \n          \n            \n                                String.format(\"Unsupported authentication method: [%s].\", authMethodName);\n          \n          \n            \n                        }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">AuthenticationProvider</span> providerToUse <span class=\"pl-k\">=</span> providers</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .values()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .parallelStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .filter(provider <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> provider<span class=\"pl-k\">.</span>getAuthMethodName()<span class=\"pl-k\">.</span>equals(authMethodName))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .findAny()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .orElseThrow(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AuthenticationException</span>(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unsupported header X-Pulsar-Auth-Method-Name [%s].<span class=\"pl-pds\">\"</span></span>, authMethodName)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">AuthenticationProvider</span> providerToUse <span class=\"pl-k\">=</span> providers<span class=\"pl-k\">.</span>get(authMethodName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (providerToUse <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AuthenticationException</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unsupported authentication method: [%s].<span class=\"pl-pds\">\"</span></span>, authMethodName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "merlimat", "createdAt": "2021-05-04T23:18:32Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"X-Pulsar-Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header X-Pulsar-Auth-Method-Name [%s].\", authMethodName)));", "originalCommit": "2aa617a7211354651dd992bd553a142e7e3b36c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE3Mzg1MQ==", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626173851", "bodyText": "applied in 4265e40.", "author": "KannarFr", "createdAt": "2021-05-04T23:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE2OTE2OQ=="}], "type": "inlineReview"}, {"oid": "63a0521e5c7b78c4b4fa3e1b2981018e8e410acf", "url": "https://github.com/apache/pulsar/commit/63a0521e5c7b78c4b4fa3e1b2981018e8e410acf", "message": "add test", "committedDate": "2021-05-04T23:28:35Z", "type": "forcePushed"}, {"oid": "8694c4b4da510c9f8a094d37e0f2459a365d2356", "url": "https://github.com/apache/pulsar/commit/8694c4b4da510c9f8a094d37e0f2459a365d2356", "message": "add test", "committedDate": "2021-05-04T23:29:56Z", "type": "commit"}, {"oid": "4265e40231558ce839bc429f811a4e59f2a6e8d1", "url": "https://github.com/apache/pulsar/commit/4265e40231558ce839bc429f811a4e59f2a6e8d1", "message": "get from map directly", "committedDate": "2021-05-04T23:30:38Z", "type": "commit"}, {"oid": "4265e40231558ce839bc429f811a4e59f2a6e8d1", "url": "https://github.com/apache/pulsar/commit/4265e40231558ce839bc429f811a4e59f2a6e8d1", "message": "get from map directly", "committedDate": "2021-05-04T23:30:38Z", "type": "forcePushed"}]}