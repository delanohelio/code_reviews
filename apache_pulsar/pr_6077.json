{"pr_number": 6077, "pr_title": "Support delete inactive topic when subscriptions caught up", "pr_author": "codelipenghui", "pr_createdAt": "2020-01-17T09:29:44Z", "pr_url": "https://github.com/apache/pulsar/pull/6077", "timeline": [{"oid": "8344d8f463668b044ec8101102b91b4247263c0a", "url": "https://github.com/apache/pulsar/commit/8344d8f463668b044ec8101102b91b4247263c0a", "message": "Support delete inactive topic when subscriptions caught up", "committedDate": "2020-01-17T09:22:24Z", "type": "commit"}, {"oid": "6e06beb9143de16106eb01ba1e2c8ef20fd40347", "url": "https://github.com/apache/pulsar/commit/6e06beb9143de16106eb01ba1e2c8ef20fd40347", "message": "Fix checkstyle", "committedDate": "2020-01-17T09:33:51Z", "type": "commit"}, {"oid": "72743ed3516700319777508359a41df5001495c4", "url": "https://github.com/apache/pulsar/commit/72743ed3516700319777508359a41df5001495c4", "message": "Add maxInactiveDuration for broker delete inactive topics.", "committedDate": "2020-01-17T12:08:24Z", "type": "commit"}, {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "url": "https://github.com/apache/pulsar/commit/2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "message": "Fix unit tests", "committedDate": "2020-01-17T14:10:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTQ1MA==", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367985450", "body": "I like the idea of introducing `brokerDeleteInactiveTopicsMaxInactiveDurationSeconds`. However, I think we need to keep backward compatibility here since it was using `brokerDeleteInactiveTopicsFrequencySeconds`. So what you can do here are the followings:\r\n\r\n1. use boxed type not primitive type. so it is `null` when this setting is not specified.\r\n\r\n```\r\nprivate Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\r\n```\r\n\r\n2. implementing the getter for this field.\r\n\r\n```\r\nint getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\r\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\r\n         return brokerDeleteInactiveTopicsFrequencySeconds;\r\n     } else {\r\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\r\n     }\r\n}\r\n```", "bodyText": "I like the idea of introducing brokerDeleteInactiveTopicsMaxInactiveDurationSeconds. However, I think we need to keep backward compatibility here since it was using brokerDeleteInactiveTopicsFrequencySeconds. So what you can do here are the followings:\n\nuse boxed type not primitive type. so it is null when this setting is not specified.\n\nprivate Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\n\n\nimplementing the getter for this field.\n\nint getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\n         return brokerDeleteInactiveTopicsFrequencySeconds;\n     } else {\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\n     }\n}", "bodyHTML": "<p dir=\"auto\">I like the idea of introducing <code>brokerDeleteInactiveTopicsMaxInactiveDurationSeconds</code>. However, I think we need to keep backward compatibility here since it was using <code>brokerDeleteInactiveTopicsFrequencySeconds</code>. So what you can do here are the followings:</p>\n<ol dir=\"auto\">\n<li>use boxed type not primitive type. so it is <code>null</code> when this setting is not specified.</li>\n</ol>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\n\"><pre><code>private Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>implementing the getter for this field.</li>\n</ol>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"int getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\n         return brokerDeleteInactiveTopicsFrequencySeconds;\n     } else {\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\n     }\n}\n\"><pre><code>int getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\n         return brokerDeleteInactiveTopicsFrequencySeconds;\n     } else {\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\n     }\n}\n</code></pre></div>", "author": "sijie", "createdAt": "2020-01-17T15:13:22Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -254,6 +255,23 @@\n         doc = \"How often to check for inactive topics\"\n     )\n     private int brokerDeleteInactiveTopicsFrequencySeconds = 60;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Set the inactive topic delete mode. Default is delete_when_no_subscriptions\\n\"\n+        + \"'delete_when_no_subscriptions' mode only delete the topic which has no subscriptions and no active producers\\n\"\n+        + \"'delete_when_subscriptions_caught_up' mode only delete the topic that all subscriptions has no backlogs(caught up)\"\n+        + \"and no active producers/consumers\"\n+    )\n+    private InactiveTopicDeleteMode brokerDeleteInactiveTopicsMode = InactiveTopicDeleteMode.delete_when_no_subscriptions;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Max duration of topic inactivity in seconds, default is 60s\\n\"\n+        + \"Topics that are inactive for longer than this value will be deleted\"\n+    )\n+    private int brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = 60;", "originalCommit": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Nzk4Mw==", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367987983", "body": "break here?", "bodyText": "break here?", "bodyHTML": "<p dir=\"auto\">break here?</p>", "author": "sijie", "createdAt": "2020-01-17T15:18:06Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }", "originalCommit": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4ODY3Mw==", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367988673", "body": "I think in `delete_when_subscriptions_caught_up` mode, we just need to check if the backlog is empty or not. we don't need to check if there are consumers connected. ", "bodyText": "I think in delete_when_subscriptions_caught_up mode, we just need to check if the backlog is empty or not. we don't need to check if there are consumers connected.", "bodyHTML": "<p dir=\"auto\">I think in <code>delete_when_subscriptions_caught_up</code> mode, we just need to check if the backlog is empty or not. we don't need to check if there are consumers connected.</p>", "author": "sijie", "createdAt": "2020-01-17T15:19:22Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }\n+            case delete_when_subscriptions_caught_up:\n+                if (hasLocalConsumers() || hasBacklogs()) {", "originalCommit": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d51368156d040b51693236f20e5a62674967cb16", "url": "https://github.com/apache/pulsar/commit/d51368156d040b51693236f20e5a62674967cb16", "message": "Apply comments", "committedDate": "2020-01-18T00:47:48Z", "type": "commit"}]}