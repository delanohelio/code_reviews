{"pr_number": 599, "pr_title": "remove fastjson", "pr_author": "ywy2090", "pr_createdAt": "2020-06-09T08:56:00Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/599", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246591", "body": "__[PMD Java]__ The class 'Account' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=6) ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3949223))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `DataClass` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#dataclass>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3949223) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The class 'Account' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=6) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nDataClass\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#dataclass\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The class 'Account' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=6) (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949223\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DataClass</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#dataclass\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#dataclass</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949223\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T08:56:41Z", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -23,6 +23,36 @@\n \n     KeyInfo() {}\n \n+    private static class Account {", "originalCommit": "5bd2b490598900566b25b5e2b797416bf61608ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246596", "body": "__[PMD Java]__ It is somewhat confusing to have a field name matching the declaring class name ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3949224))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidFieldNameMatchingTypeName` | Error Prone | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3949224) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] It is somewhat confusing to have a field name matching the declaring class name (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidFieldNameMatchingTypeName\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> It is somewhat confusing to have a field name matching the declaring class name (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949224\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidFieldNameMatchingTypeName</code></td>\n<td>Error Prone</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949224\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T08:56:41Z", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -23,6 +23,36 @@\n \n     KeyInfo() {}\n \n+    private static class Account {\n+        private String privateKey;\n+        private String publicKey;\n+        private String account;", "originalCommit": "5bd2b490598900566b25b5e2b797416bf61608ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjU5OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246599", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3949225))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3949225) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949225\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949225\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T08:56:41Z", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -104,18 +134,13 @@ public int loadKeyInfo(String keyFile) {\n         System.out.println(\"\");\n         System.out.println(\"===key info:\" + keyInfoJsonStr);\n         try {\n-            JSONObject keyInfoJsonObj = JSONObject.parseObject(keyInfoJsonStr);\n-            if (keyInfoJsonObj == null) {\n-                System.out.println(\"load json str from key info failed\");\n-                logger.error(\"load json str from key info failed\");\n-                return RetCode.parseJsonFailed;\n-            }\n-            if (keyInfoJsonObj.containsKey(privJsonKey))\n-                privateKey = keyInfoJsonObj.getString(privJsonKey);\n-            if (keyInfoJsonObj.containsKey(pubJsonKey))\n-                publicKey = keyInfoJsonObj.getString(pubJsonKey);\n-            if (keyInfoJsonObj.containsKey(accountJsonKey))\n-                account = keyInfoJsonObj.getString(accountJsonKey);\n+            Account key =\n+                    ObjectMapperFactory.getObjectMapper().readValue(keyInfoJsonStr, Account.class);", "originalCommit": "5bd2b490598900566b25b5e2b797416bf61608ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjYwMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246602", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3949226))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3949226) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949226\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949226\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T08:56:41Z", "path": "src/main/java/org/fisco/bcos/web3j/crypto/gm/KeyInfo.java", "diffHunk": "@@ -159,13 +184,12 @@ private static int writeFile(String keyFile, String content) {\n     @Override\n     public int storeKeyInfo(String keyFile) {\n         try {\n-            // Map<String, String> keyMap = new HashMap<String, String>();\n-            JSONObject keyMapJson = new JSONObject();\n-            keyMapJson.put(privJsonKey, privateKey);\n-            keyMapJson.put(pubJsonKey, publicKey);\n-            keyMapJson.put(accountJsonKey, account);\n+            Account key = new Account();\n+            key.setPrivateKey(getPrivateKey());\n+            key.setPublicKey(getPublicKey());\n+            key.setAccount(getAccount());\n \n-            String keyJsonInfo = keyMapJson.toString();\n+            String keyJsonInfo = ObjectMapperFactory.getObjectMapper().writeValueAsString(key);", "originalCommit": "5bd2b490598900566b25b5e2b797416bf61608ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0NjYwNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437246606", "body": "__[PMD Java]__ The String literal \" invalid json, abi: {}, e: {} \" appears 4 times in this file; the first occurrence is on line 83 ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3949227))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidDuplicateLiterals` | Error Prone | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3949227) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The String literal \" invalid json, abi: {}, e: {} \" appears 4 times in this file; the first occurrence is on line 83 (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidDuplicateLiterals\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The String literal \" invalid json, abi: {}, e: {} \" appears 4 times in this file; the first occurrence is on line 83 (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949227\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidDuplicateLiterals</code></td>\n<td>Error Prone</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#avoidduplicateliterals</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3949227\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T08:56:42Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,31 +44,45 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\" invalid  json, abi: {}, e: {} \", contractAbi, e);\n+        } catch (IOException e) {\n+            logger.warn(\" invalid  json, abi: {}, e: {} \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\" invalid json, abi: {}, e: {} \", contractAbi, e);", "originalCommit": "5bd2b490598900566b25b5e2b797416bf61608ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d3274f88ced2513bea70c4432db45f6451d0c5ab", "message": "remove fastjson", "committedDate": "2020-06-09T16:21:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558680", "body": "__[PMD Java]__ Avoid unused imports such as 'com.fasterxml.jackson.core.JsonProcessingException' ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3951389))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `UnusedImports` | Best Practices | 4 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3951389) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid unused imports such as 'com.fasterxml.jackson.core.JsonProcessingException' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedImports\nBest Practices\n4\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid unused imports such as 'com.fasterxml.jackson.core.JsonProcessingException' (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951389\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>UnusedImports</code></td>\n<td>Best Practices</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951389\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T16:21:57Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -14,21 +14,27 @@\n \n package org.fisco.bcos.web3j.tx.txdecode;\n \n-import com.alibaba.fastjson.JSON;\n-import com.alibaba.fastjson.JSONArray;\n+import com.fasterxml.jackson.core.JsonProcessingException;", "originalCommit": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558682", "body": "__[PMD Java]__ Avoid unused imports such as 'java.io.IOException' ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3951390))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `UnusedImports` | Best Practices | 4 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3951390) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid unused imports such as 'java.io.IOException' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nUnusedImports\nBest Practices\n4\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid unused imports such as 'java.io.IOException' (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951390\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>UnusedImports</code></td>\n<td>Best Practices</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#unusedimports</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951390\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T16:21:57Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -14,21 +14,27 @@\n \n package org.fisco.bcos.web3j.tx.txdecode;\n \n-import com.alibaba.fastjson.JSON;\n-import com.alibaba.fastjson.JSONArray;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;", "originalCommit": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558685", "body": "__[PMD Java]__ Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3951391))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidCatchingGenericException` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3951391) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951391\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidCatchingGenericException</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951391\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T16:21:57Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {", "originalCommit": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY4Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558687", "body": "__[PMD Java]__ Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3951392))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidCatchingGenericException` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3951392) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951392\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidCatchingGenericException</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951392\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T16:21:57Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {\n+            logger.warn(\" invalid  json, abi: {}, e: \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+\n+            return result;\n+        } catch (Exception e) {", "originalCommit": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY5MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/599#discussion_r437558690", "body": "__[PMD Java]__ Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block ([view](https://sider.review/gh/repos/113938008/pulls/599#issue-3951393))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidCatchingGenericException` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/599#issue-3951393) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (<a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951393\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidCatchingGenericException</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception\" rel=\"nofollow\">https://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#avoidcatchinggenericexception</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/599#issue-3951393\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-06-09T16:21:58Z", "path": "src/main/java/org/fisco/bcos/web3j/tx/txdecode/ContractAbiUtil.java", "diffHunk": "@@ -38,49 +44,68 @@\n      * @return\n      */\n     public static AbiDefinition getConstructorAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n-        AbiDefinition result = null;\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result = abiDefinition;\n-                break;\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    return abiDefinition;\n+                }\n             }\n+        } catch (Exception e) {\n+            logger.warn(\" invalid  json, abi: {}, e: \", contractAbi, e);\n         }\n-        return result;\n+        return null;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getFuncAbiDefinition(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_FUNCTION.equals(abiDefinition.getType())\n-                    || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_FUNCTION.equals(abiDefinition.getType())\n+                        || TYPE_CONSTRUCTOR.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+\n+            return result;\n+        } catch (Exception e) {\n+            logger.warn(\" invalid json, abi: {}, e: \", contractAbi, e);\n+            return new ArrayList<>();\n         }\n-        return result;\n     }\n \n     /**\n      * @param contractAbi\n      * @return\n      */\n     public static List<AbiDefinition> getEventAbiDefinitions(String contractAbi) {\n-        JSONArray abiArr = JSONArray.parseArray(contractAbi);\n         List<AbiDefinition> result = new ArrayList<>();\n-        for (Object object : abiArr) {\n-            AbiDefinition abiDefinition = JSON.parseObject(object.toString(), AbiDefinition.class);\n-            if (TYPE_EVENT.equals(abiDefinition.getType())) {\n-                result.add(abiDefinition);\n+        try {\n+            ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+            AbiDefinition[] abiDefinitions =\n+                    objectMapper.readValue(contractAbi, AbiDefinition[].class);\n+\n+            for (AbiDefinition abiDefinition : abiDefinitions) {\n+                if (TYPE_EVENT.equals(abiDefinition.getType())) {\n+                    result.add(abiDefinition);\n+                }\n             }\n+            return result;\n+        } catch (Exception e) {", "originalCommit": "d3274f88ced2513bea70c4432db45f6451d0c5ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "16e49f05c845d52a0df66077fcb8e7979e7ffde8", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/16e49f05c845d52a0df66077fcb8e7979e7ffde8", "message": "remove fastjson", "committedDate": "2020-06-09T16:34:37Z", "type": "commit"}, {"oid": "16e49f05c845d52a0df66077fcb8e7979e7ffde8", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/16e49f05c845d52a0df66077fcb8e7979e7ffde8", "message": "remove fastjson", "committedDate": "2020-06-09T16:34:37Z", "type": "forcePushed"}]}