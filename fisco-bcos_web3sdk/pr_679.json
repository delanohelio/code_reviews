{"pr_number": 679, "pr_title": "add abi codec module", "pr_author": "ywy2090", "pr_createdAt": "2020-07-20T01:51:32Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/679", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODkzNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988934", "body": "__[PMD Java]__ The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191628))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `CyclomaticComplexity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191628) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191628\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CyclomaticComplexity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191628\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:26Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODkzNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988936", "body": "__[PMD Java]__ Found non-transient, non-static member. Please mark as transient or provide accessors. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191629))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `BeanMembersShouldSerialize` | Error Prone | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191629) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Found non-transient, non-static member. Please mark as transient or provide accessors. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191629\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>BeanMembersShouldSerialize</code></td>\n<td>Error Prone</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191629\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:27Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODkzNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988937", "body": "__[PMD Java]__ Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191630))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `ImmutableField` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191630) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191630\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ImmutableField</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191630\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:27Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODkzOA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988938", "body": "__[PMD Java]__ A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191631))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidUncheckedExceptionsInSignatures` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191631) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidUncheckedExceptionsInSignatures\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191631\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidUncheckedExceptionsInSignatures</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191631\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:27Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODkzOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988939", "body": "__[PMD Java]__ The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191632))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `CyclomaticComplexity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191632) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191632\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CyclomaticComplexity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191632\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:27Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988942", "body": "__[PMD Java]__ Avoid really long methods. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191633))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `ExcessiveMethodLength` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191633) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid really long methods. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nExcessiveMethodLength\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid really long methods. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191633\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ExcessiveMethodLength</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191633\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:27Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988943", "body": "__[PMD Java]__ The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191634))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `NcssCount` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191634) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nNcssCount\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191634\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>NcssCount</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191634\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988944", "body": "__[PMD Java]__ A high ratio of statements to labels in a switch statement.  Consider refactoring. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191635))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchDensity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191635) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] A high ratio of statements to labels in a switch statement.  Consider refactoring. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchDensity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> A high ratio of statements to labels in a switch statement.  Consider refactoring. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191635\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchDensity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191635\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988947", "body": "__[PMD Java]__ Switch statements should have a default label ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191636))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchStmtsShouldHaveDefault` | Best Practices | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191636) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Switch statements should have a default label (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191636\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchStmtsShouldHaveDefault</code></td>\n<td>Best Practices</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191636\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988948", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191637))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191637) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191637\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191637\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk0OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988949", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191638))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191638) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191638\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191638\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk1MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988951", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191639))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191639) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191639\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191639\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:28Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk1Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988953", "body": "__[PMD Java]__ Switch statements should have a default label ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191640))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchStmtsShouldHaveDefault` | Best Practices | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191640) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Switch statements should have a default label (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191640\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchStmtsShouldHaveDefault</code></td>\n<td>Best Practices</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191640\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk1NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988955", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191641))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191641) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191641\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191641\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk1Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988956", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191642))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191642) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191642\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191642\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk1OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988959", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191643))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191643) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191643\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191643\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988960", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191644))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191644) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191644\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191644\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988962", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191645))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191645) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191645\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191645\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:29Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988964", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191646))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191646) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191646\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191646\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988965", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191647))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191647) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191647\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191647\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988966", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191648))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191648) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191648\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191648\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988967", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191649))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191649) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191649\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191649\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk2OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988968", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191650))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191650) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191650\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191650\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988970", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191651))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191651) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191651\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191651\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:30Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988971", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191652))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191652) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191652\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191652\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:31Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988972", "body": "__[PMD Java]__ Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191653))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidCatchingGenericException` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191653) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191653\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidCatchingGenericException</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191653\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:31Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988974", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191654))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191654) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191654\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191654\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:31Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988976", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191655))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191655) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191655\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191655\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:31Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988977", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191656))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191656) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191656\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191656\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:31Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),\n+                                            node.asText());\n+                                }\n+                                break;\n+                            }\n+                        case BYTES:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODk3OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456988979", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4191657))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4191657) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191657\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4191657\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T01:52:32Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,498 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),\n+                                            node.asText());\n+                                }\n+                                break;\n+                            }\n+                        case BYTES:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "197b2181ec58dfb73cc3878531808ab1a38d9606", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6684faea0c59a6504afa5d92ddec32bcb00e646", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a6684faea0c59a6504afa5d92ddec32bcb00e646", "message": "add abi codec module", "committedDate": "2020-07-20T01:52:43Z", "type": "forcePushed"}, {"oid": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6c0c0bc7d04bedac383b4082a00050831ddda07b", "message": "add abi codec module", "committedDate": "2020-07-20T02:35:50Z", "type": "commit"}, {"oid": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6c0c0bc7d04bedac383b4082a00050831ddda07b", "message": "add abi codec module", "committedDate": "2020-07-20T02:35:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998213", "body": "__[PMD Java]__ The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192150))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `CyclomaticComplexity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192150) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The class 'ABICodecJsonWrapper' has a total cyclomatic complexity of 80 (highest 35). (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192150\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CyclomaticComplexity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192150\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:48Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998214", "body": "__[PMD Java]__ Found non-transient, non-static member. Please mark as transient or provide accessors. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192151))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `BeanMembersShouldSerialize` | Error Prone | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192151) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Found non-transient, non-static member. Please mark as transient or provide accessors. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192151\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>BeanMembersShouldSerialize</code></td>\n<td>Error Prone</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192151\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:48Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998215", "body": "__[PMD Java]__ Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192152))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `ImmutableField` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192152) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Private field 'objectMapper' could be made final; it is only initialized in the declaration or constructor. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192152\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ImmutableField</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#immutablefield</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192152\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:48Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998216", "body": "__[PMD Java]__ A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192153))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidUncheckedExceptionsInSignatures` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192153) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidUncheckedExceptionsInSignatures\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192153\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidUncheckedExceptionsInSignatures</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoiduncheckedexceptionsinsignatures</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192153\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:48Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998217", "body": "__[PMD Java]__ The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192154))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `CyclomaticComplexity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192154) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nCyclomaticComplexity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The method 'encodeNode(String, ABIObject, JsonNode)' has a cyclomatic complexity of 35. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192154\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>CyclomaticComplexity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#cyclomaticcomplexity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192154\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:48Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIxOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998219", "body": "__[PMD Java]__ Avoid really long methods. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192155))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `ExcessiveMethodLength` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192155) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid really long methods. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nExcessiveMethodLength\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid really long methods. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192155\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ExcessiveMethodLength</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#excessivemethodlength</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192155\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:49Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyMQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998221", "body": "__[PMD Java]__ The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192156))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `NcssCount` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192156) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nNcssCount\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> The method 'encodeNode(String, ABIObject, JsonNode)' has a NCSS line count of 81. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192156\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>NcssCount</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#ncsscount</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192156\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:49Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998222", "body": "__[PMD Java]__ A high ratio of statements to labels in a switch statement.  Consider refactoring. ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192157))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchDensity` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192157) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] A high ratio of statements to labels in a switch statement.  Consider refactoring. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchDensity\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> A high ratio of statements to labels in a switch statement.  Consider refactoring. (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192157\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchDensity</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#switchdensity</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192157\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:49Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998223", "body": "__[PMD Java]__ Switch statements should have a default label ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192158))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchStmtsShouldHaveDefault` | Best Practices | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192158) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Switch statements should have a default label (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192158\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchStmtsShouldHaveDefault</code></td>\n<td>Best Practices</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192158\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:49Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998224", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192159))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192159) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192159\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192159\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:49Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998225", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192160))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192160) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192160\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192160\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:50Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998226", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192161))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192161) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192161\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192161\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:50Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998227", "body": "__[PMD Java]__ Switch statements should have a default label ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192162))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `SwitchStmtsShouldHaveDefault` | Best Practices | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192162) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Switch statements should have a default label (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSwitchStmtsShouldHaveDefault\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Switch statements should have a default label (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192162\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SwitchStmtsShouldHaveDefault</code></td>\n<td>Best Practices</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192162\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:50Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIyOA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998228", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192163))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192163) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192163\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192163\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:50Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998230", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192164))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192164) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192164\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192164\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:50Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998232", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192165))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192165) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192165\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192165\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998233", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192166))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192166) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192166\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192166\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998236", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192167))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192167) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192167\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192167\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998237", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192168))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192168) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192168\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192168\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODIzOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998239", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192169))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192169) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192169\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192169\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998240", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192170))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192170) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192170\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192170\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:51Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998241", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192171))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192171) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192171\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192171\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:52Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998243", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192172))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192172) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192172\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192172\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:52Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998246", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192173))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192173) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192173\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192173\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:52Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI0Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998247", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192174))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192174) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192174\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192174\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:52Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI1MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998250", "body": "__[PMD Java]__ Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192175))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `AvoidCatchingGenericException` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192175) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192175\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AvoidCatchingGenericException</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#avoidcatchinggenericexception</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192175\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:52Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI1Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998253", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192176))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192176) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192176\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192176\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:53Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI1NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998254", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192177))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192177) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192177\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192177\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:53Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI1NQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998255", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192178))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192178) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192178\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192178\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:53Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),\n+                                            node.asText());\n+                                }\n+                                break;\n+                            }\n+                        case BYTES:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5ODI1Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/679#discussion_r456998256", "body": "__[PMD Java]__ Potential violation of Law of Demeter (method chain calls) ([view](https://sider.review/gh/repos/113938008/pulls/679#issue-4192179))\n\n<details>\n\n| Rule | Ruleset | Priority |\n| ---- | ------- | -------- |\n| `LawOfDemeter` | Design | 3 |\n\nReferences:\n- <https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter>\n\nYou can [close this issue](https://sider.review/gh/repos/113938008/pulls/679#issue-4192179) if no need to fix it. [Learn more](https://help.sider.review/getting-started/working-with-issues).\n\n</details>", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "bodyHTML": "<p dir=\"auto\"><strong>[PMD Java]</strong> Potential violation of Law of Demeter (method chain calls) (<a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192179\" rel=\"nofollow\">view</a>)</p>\n<details>\n<table role=\"table\">\n<thead>\n<tr>\n<th>Rule</th>\n<th>Ruleset</th>\n<th>Priority</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LawOfDemeter</code></td>\n<td>Design</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">References:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter\" rel=\"nofollow\">https://pmd.github.io/pmd-6.25.0/pmd_rules_java_design.html#lawofdemeter</a></li>\n</ul>\n<p dir=\"auto\">You can <a href=\"https://sider.review/gh/repos/113938008/pulls/679#issue-4192179\" rel=\"nofollow\">close this issue</a> if no need to fix it. <a href=\"https://help.sider.review/getting-started/working-with-issues\" rel=\"nofollow\">Learn more</a>.</p>\n</details>", "author": "sider", "createdAt": "2020-07-20T02:36:53Z", "path": "src/main/java/org/fisco/bcos/web3j/abi/wrapper/ABICodecJsonWrapper.java", "diffHunk": "@@ -0,0 +1,497 @@\n+package org.fisco.bcos.web3j.abi.wrapper;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import java.io.IOException;\n+import java.security.InvalidParameterException;\n+import java.util.ArrayList;\n+import java.util.Base64;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.fisco.bcos.web3j.abi.datatypes.Address;\n+import org.fisco.bcos.web3j.abi.datatypes.Bool;\n+import org.fisco.bcos.web3j.abi.datatypes.Bytes;\n+import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;\n+import org.fisco.bcos.web3j.abi.datatypes.Utf8String;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;\n+import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n+import org.fisco.bcos.web3j.abi.wrapper.ABIObject.ListType;\n+import org.fisco.bcos.web3j.protocol.ObjectMapperFactory;\n+import org.fisco.bcos.web3j.utils.Numeric;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ABICodecJsonWrapper {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ABICodecJsonWrapper.class);\n+\n+    private ObjectMapper objectMapper = ObjectMapperFactory.getObjectMapper();\n+\n+    private void errorReport(String path, String expected, String actual)\n+            throws InvalidParameterException {\n+        String errorMessage =\n+                \"Arguments mismatch: \" + path + \", expected: \" + expected + \", actual: \" + actual;\n+        logger.error(errorMessage);\n+        throw new InvalidParameterException(errorMessage);\n+    }\n+\n+    private ABIObject encodeNode(String path, ABIObject template, JsonNode node) {\n+        ABIObject abiObject = template.newObject();\n+\n+        switch (abiObject.getType()) {\n+            case VALUE:\n+                {\n+                    if (!node.isValueNode()) {\n+                        errorReport(\n+                                path,\n+                                abiObject.getType().toString(),\n+                                node.getNodeType().toString());\n+                    }\n+\n+                    switch (template.getValueType()) {\n+                        case BOOL:\n+                            {\n+                                if (!node.isBoolean()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                abiObject.setBoolValue(new Bool(node.asBoolean()));\n+                                break;\n+                            }\n+                        case INT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Int256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Int256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case UINT:\n+                            {\n+                                if (!node.isNumber() && !node.isBigInteger()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                if (node.isNumber()) {\n+                                    abiObject.setNumericValue(new Uint256(node.asLong()));\n+                                } else {\n+                                    abiObject.setNumericValue(new Uint256(node.bigIntegerValue()));\n+                                }\n+\n+                                break;\n+                            }\n+                        case ADDRESS:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),\n+                                            node.getNodeType().toString());\n+                                }\n+\n+                                try {\n+                                    abiObject.setAddressValue(new Address(node.asText()));\n+                                } catch (Exception e) {\n+                                    errorReport(\n+                                            \"Invalid address value\",\n+                                            template.getValueType().toString(),\n+                                            node.asText());\n+                                }\n+                                break;\n+                            }\n+                        case BYTES:\n+                            {\n+                                if (!node.isTextual()) {\n+                                    errorReport(\n+                                            path,\n+                                            template.getValueType().toString(),", "originalCommit": "6c0c0bc7d04bedac383b4082a00050831ddda07b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}