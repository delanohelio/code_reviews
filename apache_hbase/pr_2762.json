{"pr_number": 2762, "pr_title": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "pr_author": "caroliney14", "pr_createdAt": "2020-12-10T08:37:17Z", "pr_url": "https://github.com/apache/hbase/pull/2762", "timeline": [{"oid": "be44c67db45e82e518f5b75c2f11ec2f77af1f0d", "url": "https://github.com/apache/hbase/commit/be44c67db45e82e518f5b75c2f11ec2f77af1f0d", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2020-12-10T18:22:42Z", "type": "forcePushed"}, {"oid": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "url": "https://github.com/apache/hbase/commit/61c12786bcd7b5abcf538149c6282c384fbc79e9", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2020-12-10T18:26:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ0NTQ4OA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541445488", "body": "500 seems high to me. Would 20 be enough? Should this be a constant in the file, even if not configurable?", "bodyText": "500 seems high to me. Would 20 be enough? Should this be a constant in the file, even if not configurable?", "bodyHTML": "<p dir=\"auto\">500 seems high to me. Would 20 be enough? Should this be a constant in the file, even if not configurable?</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:12:12Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1MDE4NQ==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541450185", "body": "Why do we update the metrics hashes only if it's been more than `ritThreshold / 2` time since last update? If we do the work to find the oldest, it seems like we should update the metrics always. Then any query to get metrics will always have the most recent results (~3 seconds old at max, with default `hbase.regionserver.msginterval`)\r\n\r\nThough I do think it's a good idea for limiting the logging. Should the `LOG.debug` statement be in here?\r\n\r\nThen this statement may deserve a comment.\r\n```suggestion\r\n      // Only log if it has been long enough since the last update (default 30 seconds)\r\n      if ((time - ritThreshold / 2) >= this.lastRITHashMetricUpdate) {\r\n```", "bodyText": "Why do we update the metrics hashes only if it's been more than ritThreshold / 2 time since last update? If we do the work to find the oldest, it seems like we should update the metrics always. Then any query to get metrics will always have the most recent results (~3 seconds old at max, with default hbase.regionserver.msginterval)\nThough I do think it's a good idea for limiting the logging. Should the LOG.debug statement be in here?\nThen this statement may deserve a comment.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if ((time - ritThreshold / 2) >= this.lastRITHashMetricUpdate) {\n          \n          \n            \n                  // Only log if it has been long enough since the last update (default 30 seconds)\n          \n          \n            \n                  if ((time - ritThreshold / 2) >= this.lastRITHashMetricUpdate) {", "bodyHTML": "<p dir=\"auto\">Why do we update the metrics hashes only if it's been more than <code>ritThreshold / 2</code> time since last update? If we do the work to find the oldest, it seems like we should update the metrics always. Then any query to get metrics will always have the most recent results (~3 seconds old at max, with default <code>hbase.regionserver.msginterval</code>)</p>\n<p dir=\"auto\">Though I do think it's a good idea for limiting the logging. Should the <code>LOG.debug</code> statement be in here?</p>\n<p dir=\"auto\">Then this statement may deserve a comment.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> <span class=\"x x-first\">((time </span><span class=\"pl-k x\">-</span><span class=\"x\"> ritThreshold </span><span class=\"pl-k x\">/</span><span class=\"x\"> </span><span class=\"pl-c1 x\">2</span><span class=\"x\">) </span><span class=\"pl-k x\">&gt;=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">this</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">lastRITHashMetricUpdate) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> Only log </span>if <span class=\"x x-first x-last\">it has been long enough since the last update (default 30 seconds)</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> ((time <span class=\"pl-k\">-</span> ritThreshold <span class=\"pl-k\">/</span> <span class=\"pl-c1\">2</span>) <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>lastRITHashMetricUpdate) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "d-c-manning", "createdAt": "2020-12-12T00:19:38Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs\n+        oldestRITHashesAndStates.add(\n+          state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()\n+        );\n+      }\n+      counter += 1;\n     }\n     if (this.metricsAssignmentManager != null) {\n       this.metricsAssignmentManager.updateRITOldestAge(oldestRITTime);\n       this.metricsAssignmentManager.updateRITCount(totalRITs);\n       this.metricsAssignmentManager.updateRITCountOverThreshold(totalRITsOverThreshold);\n+\n+      LOG.debug(\"Oldest RIT hashes and states: \" + oldestRITHashesAndStates.toString());\n+      long time = EnvironmentEdgeManager.currentTime();\n+      if ((time - ritThreshold / 2) >= this.lastRITHashMetricUpdate) {", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0ODgwOQ==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r543848809", "bodyText": "Though I do think it's a good idea for limiting the logging. Should the LOG.debug statement be in here?\n\nyes it is for the reason you stated. will add the comment and move LOG.debug under this condition. maybe the other stuff can be moved outside.", "author": "caroliney14", "createdAt": "2020-12-16T02:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1MDE4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1MDI0OQ==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541450249", "body": "can we just reuse `currentTime` here from the beginning of the method?", "bodyText": "can we just reuse currentTime here from the beginning of the method?", "bodyHTML": "<p dir=\"auto\">can we just reuse <code>currentTime</code> here from the beginning of the method?</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:19:56Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs\n+        oldestRITHashesAndStates.add(\n+          state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()\n+        );\n+      }\n+      counter += 1;\n     }\n     if (this.metricsAssignmentManager != null) {\n       this.metricsAssignmentManager.updateRITOldestAge(oldestRITTime);\n       this.metricsAssignmentManager.updateRITCount(totalRITs);\n       this.metricsAssignmentManager.updateRITCountOverThreshold(totalRITsOverThreshold);\n+\n+      LOG.debug(\"Oldest RIT hashes and states: \" + oldestRITHashesAndStates.toString());\n+      long time = EnvironmentEdgeManager.currentTime();", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1MzY1NA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541453654", "body": "since this method uses the `state.getStamp()` to determine whether the RIT is over the threshold or the oldest time... should we just use `getRegionsInTransitionOrderedByTimestamp` instead?\r\n\r\nThis new method `getRegionsInTransitionOrderedByDuration` is tracking total duration instead of duration since last state transition, so the longest RITs may not necessarily be those that are reported over threshold. I think it's probably good to be consistent... I'm not sure which way is better to be consistent, but since these metrics in this method are reporting time since last change instead of total duration, I'd favor that approach.", "bodyText": "since this method uses the state.getStamp() to determine whether the RIT is over the threshold or the oldest time... should we just use getRegionsInTransitionOrderedByTimestamp instead?\nThis new method getRegionsInTransitionOrderedByDuration is tracking total duration instead of duration since last state transition, so the longest RITs may not necessarily be those that are reported over threshold. I think it's probably good to be consistent... I'm not sure which way is better to be consistent, but since these metrics in this method are reporting time since last change instead of total duration, I'd favor that approach.", "bodyHTML": "<p dir=\"auto\">since this method uses the <code>state.getStamp()</code> to determine whether the RIT is over the threshold or the oldest time... should we just use <code>getRegionsInTransitionOrderedByTimestamp</code> instead?</p>\n<p dir=\"auto\">This new method <code>getRegionsInTransitionOrderedByDuration</code> is tracking total duration instead of duration since last state transition, so the longest RITs may not necessarily be those that are reported over threshold. I think it's probably good to be consistent... I'm not sure which way is better to be consistent, but since these metrics in this method are reporting time since last change instead of total duration, I'd favor that approach.</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:32:32Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,9 +3541,11 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    Set<String> oldestRITHashesAndStates = Sets.newHashSet(); // set of <rit hash>:<rit state>\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n-    for (RegionState state: regionStates.getRegionsInTransition()) {\n+    int counter = 0;\n+    for (RegionState state: regionStates.getRegionsInTransitionOrderedByDuration()) {", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1Mzk0MA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541453940", "body": "should we also filter these to only those RITs that are over the threshold? Or do we want to display every RIT, even if it's only been transitioning for 100ms, if it's the longest/only RIT in the cluster?", "bodyText": "should we also filter these to only those RITs that are over the threshold? Or do we want to display every RIT, even if it's only been transitioning for 100ms, if it's the longest/only RIT in the cluster?", "bodyHTML": "<p dir=\"auto\">should we also filter these to only those RITs that are over the threshold? Or do we want to display every RIT, even if it's only been transitioning for 100ms, if it's the longest/only RIT in the cluster?</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:33:43Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs\n+        oldestRITHashesAndStates.add(", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0MjQxMw==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r543842413", "bodyText": "I think it makes sense to only record RITs over threshold, since those would be the problematic ones", "author": "caroliney14", "createdAt": "2020-12-16T02:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1Mzk0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1NzM3Nw==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541457377", "body": "Do we have to use `name()` as I see other references use `state.getState()` directly.\r\n\r\nregion names could be quite long - when you refer to hash, did you want the md5 encoded name?\r\n```suggestion\r\n          state.getRegion().getEncodedName() + \":\" + state.getState()\r\n```\r\nOr should the entire region name be available?", "bodyText": "Do we have to use name() as I see other references use state.getState() directly.\nregion names could be quite long - when you refer to hash, did you want the md5 encoded name?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()\n          \n          \n            \n                      state.getRegion().getEncodedName() + \":\" + state.getState()\n          \n      \n    \n    \n  \n\nOr should the entire region name be available?", "bodyHTML": "<p dir=\"auto\">Do we have to use <code>name()</code> as I see other references use <code>state.getState()</code> directly.</p>\n<p dir=\"auto\">region names could be quite long - when you refer to hash, did you want the md5 encoded name?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          state<span class=\"pl-k\">.</span>getRegion()<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getRegionNameAsString</span>() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> state<span class=\"pl-k\">.</span>getState<span class=\"x x-first\">()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">name</span>()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          state<span class=\"pl-k\">.</span>getRegion()<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getEncodedName</span>() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> state<span class=\"pl-k\">.</span>getState()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Or should the entire region name be available?</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:40:42Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs\n+        oldestRITHashesAndStates.add(\n+          state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0NDE2Ng==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r543844166", "bodyText": "if the md5 encoded name is enough info for debugging (which I think yes), then it should suffice to use that \ud83d\udc4d", "author": "caroliney14", "createdAt": "2020-12-16T02:33:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1NzM3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0NjAwMA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r543846000", "bodyText": "as for state, that is an enum, and we want the state name, which is why I added .name(). see this SO", "author": "caroliney14", "createdAt": "2020-12-16T02:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ1NzM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ2MTM5Nw==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r541461397", "body": "we should only log if `oldestRITHashesAndStates` is non-empty.", "bodyText": "we should only log if oldestRITHashesAndStates is non-empty.", "bodyHTML": "<p dir=\"auto\">we should only log if <code>oldestRITHashesAndStates</code> is non-empty.</p>", "author": "d-c-manning", "createdAt": "2020-12-12T00:57:11Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3549,11 +3554,24 @@ public void updateRegionsInTransitionMetrics() {\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n+      if (counter < 500) { // Record 500 oldest RITs\n+        oldestRITHashesAndStates.add(\n+          state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()\n+        );\n+      }\n+      counter += 1;\n     }\n     if (this.metricsAssignmentManager != null) {\n       this.metricsAssignmentManager.updateRITOldestAge(oldestRITTime);\n       this.metricsAssignmentManager.updateRITCount(totalRITs);\n       this.metricsAssignmentManager.updateRITCountOverThreshold(totalRITsOverThreshold);\n+\n+      LOG.debug(\"Oldest RIT hashes and states: \" + oldestRITHashesAndStates.toString());", "originalCommit": "61c12786bcd7b5abcf538149c6282c384fbc79e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjM2NjQ2Mg==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r556366462", "body": "nit: `new HashMap<>()`", "bodyText": "nit: new HashMap<>()", "bodyHTML": "<p dir=\"auto\">nit: <code>new HashMap&lt;&gt;()</code></p>", "author": "virajjasani", "createdAt": "2021-01-13T09:10:09Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,31 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    HashMap<String, RegionState> ritsOverThreshold = null;\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n     for (RegionState state: regionStates.getRegionsInTransition()) {\n       totalRITs++;\n       long ritTime = currentTime - state.getStamp();\n       if (ritTime > ritThreshold) { // more than the threshold\n         totalRITsOverThreshold++;\n+        if (ritsOverThreshold == null) {\n+          ritsOverThreshold = new HashMap<String, RegionState>();", "originalCommit": "064250c4071d261aa10d2a6138990f7f357c64ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjM2ODU1Mg==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r556368552", "body": "nit: use chain of append() to cover String concatenation?\r\n```\r\n        sb.append(regionName).append(\":\")\r\n          .append(ritsOverThreshold.get(regionName).getState().name()).append(\"\\n\");\r\n```", "bodyText": "nit: use chain of append() to cover String concatenation?\n        sb.append(regionName).append(\":\")\n          .append(ritsOverThreshold.get(regionName).getState().name()).append(\"\\n\");", "bodyHTML": "<p dir=\"auto\">nit: use chain of append() to cover String concatenation?</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        sb.append(regionName).append(&quot;:&quot;)\n          .append(ritsOverThreshold.get(regionName).getState().name()).append(&quot;\\n&quot;);\n\"><pre><code>        sb.append(regionName).append(\":\")\n          .append(ritsOverThreshold.get(regionName).getState().name()).append(\"\\n\");\n</code></pre></div>", "author": "virajjasani", "createdAt": "2021-01-13T09:13:30Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,31 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    HashMap<String, RegionState> ritsOverThreshold = null;\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n     for (RegionState state: regionStates.getRegionsInTransition()) {\n       totalRITs++;\n       long ritTime = currentTime - state.getStamp();\n       if (ritTime > ritThreshold) { // more than the threshold\n         totalRITsOverThreshold++;\n+        if (ritsOverThreshold == null) {\n+          ritsOverThreshold = new HashMap<String, RegionState>();\n+        }\n+        ritsOverThreshold.put(state.getRegion().getEncodedName(), state);\n       }\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n     }\n+    if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+      StringBuilder sb = new StringBuilder();\n+      for (String regionName: ritsOverThreshold.keySet()) {\n+        sb.append(regionName + \":\" + ritsOverThreshold.get(regionName).getState().name() + \"\\n\");", "originalCommit": "064250c4071d261aa10d2a6138990f7f357c64ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjM2OTAzNw==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r556369037", "body": "Do we want to remove last appended new line char? If so, start index should be `sb.length()-1` right?", "bodyText": "Do we want to remove last appended new line char? If so, start index should be sb.length()-1 right?", "bodyHTML": "<p dir=\"auto\">Do we want to remove last appended new line char? If so, start index should be <code>sb.length()-1</code> right?</p>", "author": "virajjasani", "createdAt": "2021-01-13T09:14:13Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,31 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    HashMap<String, RegionState> ritsOverThreshold = null;\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n     for (RegionState state: regionStates.getRegionsInTransition()) {\n       totalRITs++;\n       long ritTime = currentTime - state.getStamp();\n       if (ritTime > ritThreshold) { // more than the threshold\n         totalRITsOverThreshold++;\n+        if (ritsOverThreshold == null) {\n+          ritsOverThreshold = new HashMap<String, RegionState>();\n+        }\n+        ritsOverThreshold.put(state.getRegion().getEncodedName(), state);\n       }\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n     }\n+    if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+      StringBuilder sb = new StringBuilder();\n+      for (String regionName: ritsOverThreshold.keySet()) {\n+        sb.append(regionName + \":\" + ritsOverThreshold.get(regionName).getState().name() + \"\\n\");\n+      }\n+      sb.delete(sb.length()-2, sb.length());", "originalCommit": "064250c4071d261aa10d2a6138990f7f357c64ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjM3MDE2MQ==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r556370161", "body": "nit: `Map<String, RegionState> ritsOverThreshold = null`", "bodyText": "nit: Map<String, RegionState> ritsOverThreshold = null", "bodyHTML": "<p dir=\"auto\">nit: <code>Map&lt;String, RegionState&gt; ritsOverThreshold = null</code></p>", "author": "virajjasani", "createdAt": "2021-01-13T09:15:58Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,31 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    HashMap<String, RegionState> ritsOverThreshold = null;", "originalCommit": "064250c4071d261aa10d2a6138990f7f357c64ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM1ODUwMA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r558358500", "body": "If you could convert this to entrySet(), that would be great (as per findbugs)", "bodyText": "If you could convert this to entrySet(), that would be great (as per findbugs)", "bodyHTML": "<p dir=\"auto\">If you could convert this to entrySet(), that would be great (as per findbugs)</p>", "author": "virajjasani", "createdAt": "2021-01-15T14:53:26Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,32 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    Map<String, RegionState> ritsOverThreshold = null;\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n     for (RegionState state: regionStates.getRegionsInTransition()) {\n       totalRITs++;\n       long ritTime = currentTime - state.getStamp();\n       if (ritTime > ritThreshold) { // more than the threshold\n         totalRITsOverThreshold++;\n+        if (ritsOverThreshold == null) {\n+          ritsOverThreshold = new HashMap<>();\n+        }\n+        ritsOverThreshold.put(state.getRegion().getEncodedName(), state);\n       }\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n     }\n+    if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+      StringBuilder sb = new StringBuilder();\n+      for (String regionName: ritsOverThreshold.keySet()) {", "originalCommit": "ab52ab083cb8b780ae845d5059cee1f0db39932b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "36e0655984977ac21814640e715dbf202301146b", "url": "https://github.com/apache/hbase/commit/36e0655984977ac21814640e715dbf202301146b", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-19T18:31:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDcwMjExOA==", "url": "https://github.com/apache/hbase/pull/2762#discussion_r560702118", "body": "This should be:\r\n```\r\n       sb.append(regionName.getKey()).append(\":\")\r\n          .append(regionName.getValue().getState().name()).append(\"\\n\");\r\n```", "bodyText": "This should be:\n       sb.append(regionName.getKey()).append(\":\")\n          .append(regionName.getValue().getState().name()).append(\"\\n\");", "bodyHTML": "<p dir=\"auto\">This should be:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"       sb.append(regionName.getKey()).append(&quot;:&quot;)\n          .append(regionName.getValue().getState().name()).append(&quot;\\n&quot;);\n\"><pre><code>       sb.append(regionName.getKey()).append(\":\")\n          .append(regionName.getValue().getState().name()).append(\"\\n\");\n</code></pre></div>", "author": "virajjasani", "createdAt": "2021-01-20T06:12:55Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java", "diffHunk": "@@ -3538,18 +3538,32 @@ public void updateRegionsInTransitionMetrics() {\n     int totalRITs = 0;\n     int totalRITsOverThreshold = 0;\n     long oldestRITTime = 0;\n+    Map<String, RegionState> ritsOverThreshold = null;\n     int ritThreshold = this.server.getConfiguration().\n       getInt(HConstants.METRICS_RIT_STUCK_WARNING_THRESHOLD, 60000);\n     for (RegionState state: regionStates.getRegionsInTransition()) {\n       totalRITs++;\n       long ritTime = currentTime - state.getStamp();\n       if (ritTime > ritThreshold) { // more than the threshold\n         totalRITsOverThreshold++;\n+        if (ritsOverThreshold == null) {\n+          ritsOverThreshold = new HashMap<>();\n+        }\n+        ritsOverThreshold.put(state.getRegion().getEncodedName(), state);\n       }\n       if (oldestRITTime < ritTime) {\n         oldestRITTime = ritTime;\n       }\n     }\n+    if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+      StringBuilder sb = new StringBuilder();\n+      for (Map.Entry<String, RegionState> regionName: ritsOverThreshold.entrySet()) {\n+        sb.append(regionName).append(\":\")\n+          .append(ritsOverThreshold.get(regionName).getState().name()).append(\"\\n\");", "originalCommit": "36e0655984977ac21814640e715dbf202301146b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "295f8516d348d6c3ca6bbbee8b1c8df71bc5b7a5", "url": "https://github.com/apache/hbase/commit/295f8516d348d6c3ca6bbbee8b1c8df71bc5b7a5", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-20T06:34:16Z", "type": "commit"}, {"oid": "295f8516d348d6c3ca6bbbee8b1c8df71bc5b7a5", "url": "https://github.com/apache/hbase/commit/295f8516d348d6c3ca6bbbee8b1c8df71bc5b7a5", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-20T06:34:16Z", "type": "forcePushed"}]}