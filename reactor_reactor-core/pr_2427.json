{"pr_number": 2427, "pr_title": "fix #2426 Rename Emission to EmitResult", "pr_author": "simonbasle", "pr_createdAt": "2020-10-08T11:07:27Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2427", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NDE3OQ==", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501644179", "body": "```suggestion\r\n\t * This is a particularly important distinction with regard to {@link #FAIL_CANCELLED} which means the sink is -now-\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * This is a particularly important distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now-\n          \n          \n            \n            \t * This is a particularly important distinction with regard to {@link #FAIL_CANCELLED} which means the sink is -now-", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">This</span> is a particularly important distinction with <span class=\"x x-first x-last\">regards</span> to {<span class=\"pl-k\">@link</span> #<span class=\"pl-c1\">FAIL_CANCELLED</span>} which means the sink is <span class=\"pl-k\">-</span>now<span class=\"pl-k\">-</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">This</span> is a particularly important distinction with <span class=\"x x-first x-last\">regard</span> to {<span class=\"pl-k\">@link</span> #<span class=\"pl-c1\">FAIL_CANCELLED</span>} which means the sink is <span class=\"pl-k\">-</span>now<span class=\"pl-k\">-</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ericbottard", "createdAt": "2020-10-08T11:23:57Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -86,13 +86,14 @@ public static ManySpec many() {\n \t}\n \n \t/**\n-\t * Represents the immediate status of a signal emission. This does not guarantee that a signal is consumed,\n-\t * it simply refers to the sink state when an emit method is invoked. This is a particularly important\n-\t * distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now- interrupted and emission can't\n-\t * proceed. Consequently, it is possible to emit a signal and obtain an \"OK\" status even if an in-flight cancellation\n-\t * is happening. This is due to the async nature of these actions: producer emits while consumer can interrupt independently.\n+\t * Represents the immediate result of an emit attempt (eg. in {@link Sinks.Many#tryEmitNext(Object)}.\n+\t * This does not guarantee that a signal is consumed, it simply refers to the sink state when an emit method is invoked.\n+\t * This is a particularly important distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now-", "originalCommit": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTg5NA==", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501645894", "body": "These do not provide any added value, users can already discover the return type.", "bodyText": "These do not provide any added value, users can already discover the return type.", "bodyHTML": "<p dir=\"auto\">These do not provide any added value, users can already discover the return type.</p>", "author": "ericbottard", "createdAt": "2020-10-08T11:27:12Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -594,56 +595,56 @@ public Emission getReason() {\n \n \t\t/**\n \t\t * Try emitting a non-null element, generating an {@link Subscriber#onNext(Object) onNext} signal.\n-\t\t * The result of the attempt is represented as an {@link Emission}, which possibly indicates error cases.\n+\t\t * The result of the attempt is represented as an {@link EmitResult}, which possibly indicates error cases.\n \t\t * <p>\n \t\t * Might throw an unchecked exception in case of a fatal error downstream which cannot\n \t\t * be propagated to any asynchronous handler (aka a bubbling exception).\n \t\t *\n \t\t * @param t the value to emit, not null\n-\t\t * @return {@link Emission}\n+\t\t * @return {@link EmitResult}", "originalCommit": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwNjA5Mw==", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501706093", "bodyText": "improved the comments", "author": "simonbasle", "createdAt": "2020-10-08T13:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NjQ2Mw==", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501646463", "body": "Same as before, this can be removed if there is nothing to add.", "bodyText": "Same as before, this can be removed if there is nothing to add.", "bodyHTML": "<p dir=\"auto\">Same as before, this can be removed if there is nothing to add.</p>", "author": "ericbottard", "createdAt": "2020-10-08T11:28:18Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -721,24 +722,24 @@ public Emission getReason() {\n \n \t\t/**\n \t\t * Try to complete the {@link Mono} without a value, generating only an {@link Subscriber#onComplete() onComplete} signal.\n-\t\t * The result of the attempt is represented as an {@link Emission}, which possibly indicates error cases.\n+\t\t * The result of the attempt is represented as an {@link EmitResult}, which possibly indicates error cases.\n \t\t *\n-\t\t * @return {@link Emission}\n+\t\t * @return {@link EmitResult}", "originalCommit": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e5fa420bf7eb26d5e8906d245d120dd279f2af37", "url": "https://github.com/reactor/reactor-core/commit/e5fa420bf7eb26d5e8906d245d120dd279f2af37", "message": "fix #2426 Rename Emission to EmitResult", "committedDate": "2020-10-08T13:26:10Z", "type": "commit"}, {"oid": "55157e7bd99f84919242b6a1dedabfb27d40d7c5", "url": "https://github.com/reactor/reactor-core/commit/55157e7bd99f84919242b6a1dedabfb27d40d7c5", "message": "fix review comments around javadoc", "committedDate": "2020-10-08T13:26:15Z", "type": "commit"}, {"oid": "9a5a4720c567f448ad32d78f70c2c0b55106508e", "url": "https://github.com/reactor/reactor-core/commit/9a5a4720c567f448ad32d78f70c2c0b55106508e", "message": "also rename hasSucceeded/hasFailed methods for consistency", "committedDate": "2020-10-08T13:26:15Z", "type": "commit"}, {"oid": "9a5a4720c567f448ad32d78f70c2c0b55106508e", "url": "https://github.com/reactor/reactor-core/commit/9a5a4720c567f448ad32d78f70c2c0b55106508e", "message": "also rename hasSucceeded/hasFailed methods for consistency", "committedDate": "2020-10-08T13:26:15Z", "type": "forcePushed"}, {"oid": "031d283856c56e21d1938fab8bf47b8b3137cab2", "url": "https://github.com/reactor/reactor-core/commit/031d283856c56e21d1938fab8bf47b8b3137cab2", "message": "fix remaining Emission in refguide + jcstress test", "committedDate": "2020-10-08T14:22:52Z", "type": "commit"}]}