{"pr_number": 2357, "pr_title": "fix #2338 Add new Emission FAIL_ZERO_SUBSCRIBER error code", "pr_author": "simonbasle", "pr_createdAt": "2020-09-03T16:35:10Z", "pr_url": "https://github.com/reactor/reactor-core/pull/2357", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MzY2NA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484453664", "body": "shouldn't we check `subscribers == EMPTY` even before attempting to lazily create a queue? Otherwise, it still returns `OK` if the queue has the capacity but there are no subscribers", "bodyText": "shouldn't we check subscribers == EMPTY even before attempting to lazily create a queue? Otherwise, it still returns OK if the queue has the capacity but there are no subscribers", "bodyHTML": "<p dir=\"auto\">shouldn't we check <code>subscribers == EMPTY</code> even before attempting to lazily create a queue? Otherwise, it still returns <code>OK</code> if the queue has the capacity but there are no subscribers</p>", "author": "bsideup", "createdAt": "2020-09-07T14:06:30Z", "path": "reactor-core/src/main/java/reactor/core/publisher/EmitterProcessor.java", "diffHunk": "@@ -310,7 +310,7 @@ public Emission tryEmitNext(T t) {\n \t\t}\n \n \t\tif (!q.offer(t)) {\n-\t\t\treturn Emission.FAIL_OVERFLOW;\n+\t\t\treturn subscribers == EMPTY ? Emission.FAIL_ZERO_SUBSCRIBER : Emission.FAIL_OVERFLOW;", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NjE1NQ==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484456155", "bodyText": "One of the advertised features of the EmitterProcessor is the capacity to buffer a (few?) elements into that queue before failing with overflow, including when trying to emit before anybody's listening. If the queue has the capacity but there are no listeners, the first listener will get the early emission from the queue, so this is intended.", "author": "simonbasle", "createdAt": "2020-09-07T14:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1MzY2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDI5Ng==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484454296", "body": "Have you considered naming it `hasSubscribers`?", "bodyText": "Have you considered naming it hasSubscribers?", "bodyHTML": "<p dir=\"auto\">Have you considered naming it <code>hasSubscribers</code>?</p>", "author": "bsideup", "createdAt": "2020-09-07T14:07:50Z", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -497,6 +502,8 @@ public Emission getReason() {\n \t */\n \tpublic interface Many<T> {\n \n+\t\tboolean hasSubscriber();", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTIwNA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484455204", "bodyText": "actually, since there's no direct need for it in this PR it should probably be debated in a separate issue \ud83e\udd14", "author": "simonbasle", "createdAt": "2020-09-07T14:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MzkwOQ==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484463909", "bodyText": "Sounds good! Less is better :)", "author": "bsideup", "createdAt": "2020-09-07T14:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDI5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDk5Mg==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484454992", "body": "to avoid double CASing, we can/should replace it with `do { read + switch + cas } while (casFails)`", "bodyText": "to avoid double CASing, we can/should replace it with do { read + switch + cas } while (casFails)", "bodyHTML": "<p dir=\"auto\">to avoid double CASing, we can/should replace it with <code>do { read + switch + cas } while (casFails)</code></p>", "author": "bsideup", "createdAt": "2020-09-07T14:09:24Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -67,6 +70,18 @@\n \tpublic void subscribe(CoreSubscriber<? super T> actual) {\n \t\tObjects.requireNonNull(actual, \"subscribe\");\n \n+\t\t//detect pre-subscribe termination\n+\t\tif (STATE.compareAndSet(this, State.TERMINATED_BEFORE_SUBSCRIPTION, State.TERMINATED)) {", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUyODc3Nw==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484528777", "bodyText": "done, let me know if that's what you had in mind", "author": "simonbasle", "createdAt": "2020-09-07T17:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDk5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTU2OA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484455568", "body": "```suggestion\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn tryEmitError(t);\r\n\t\t\t\t}\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\telse return tryEmitError(t);\n          \n          \n            \n            \t\t\t\telse {\n          \n          \n            \n            \t\t\t\t\treturn tryEmitError(t);\n          \n          \n            \n            \t\t\t\t}", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k x x-first\">return</span><span class=\"x x-last\"> tryEmitError(t);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-k\">else</span> <span class=\"x x-first x-last\">{</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t<span class=\"pl-k\">return</span> tryEmitError(t);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bsideup", "createdAt": "2020-09-07T14:10:31Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -153,16 +169,24 @@ public void emitError(Throwable error) {\n \t@Override\n \tpublic Emission tryEmitError(Throwable t) {\n \t\tObjects.requireNonNull(t, \"t\");\n-\n-\t\tswitch (state) {\n+\t\tswitch (this.state) {\n \t\t\tcase INITIAL:\n-\t\t\t\t// TODO different Emission?\n-\t\t\t\treturn Emission.OK;\n+\t\t\t\tif (STATE.compareAndSet(this, State.INITIAL, State.TERMINATED_BEFORE_SUBSCRIPTION)) {\n+\t\t\t\t\tthis.error = t;\n+\t\t\t\t\treturn Emission.OK;\n+\t\t\t\t}\n+\t\t\t\telse return tryEmitError(t);", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTM3Ng==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484839376", "bodyText": "Not resolved.", "author": "bsideup", "createdAt": "2020-09-08T11:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTU2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwNTk5OQ==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r485005999", "bodyText": "done in eca5e18", "author": "simonbasle", "createdAt": "2020-09-08T15:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NTcxMw==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484455713", "body": "```suggestion\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn tryEmitComplete(); // recurse\r\n\t\t\t\t}\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\telse return tryEmitComplete(); // recurse\n          \n          \n            \n            \t\t\t\telse {\n          \n          \n            \n            \t\t\t\t\treturn tryEmitComplete(); // recurse\n          \n          \n            \n            \t\t\t\t}", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k x x-first\">return</span><span class=\"x\"> tryEmitComplete(); </span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> recurse</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-k\">else</span> <span class=\"x x-first x-last\">{</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t<span class=\"pl-k\">return</span> tryEmitComplete(); <span class=\"pl-c\"><span class=\"pl-c\">//</span> recurse</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bsideup", "createdAt": "2020-09-07T14:10:48Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -182,18 +206,29 @@ public void emitComplete() {\n \tpublic Emission tryEmitComplete() {\n \t\tswitch (state) {\n \t\t\tcase INITIAL:\n-\t\t\t\t// TODO different Emission?\n-\t\t\t\treturn Emission.OK;\n+\t\t\t\tif (STATE.compareAndSet(this, State.INITIAL, State.TERMINATED_BEFORE_SUBSCRIPTION)) {\n+\t\t\t\t\treturn Emission.OK;\n+\t\t\t\t}\n+\t\t\t\telse return tryEmitComplete(); //recurse\n \t\t\tcase SUBSCRIBED:\n-\t\t\t\tactual.onComplete();\n-\t\t\t\tactual = null;\n-\t\t\t\treturn Emission.OK;\n+\t\t\t\tif (STATE.compareAndSet(this, State.SUBSCRIBED, State.TERMINATED)) {\n+\t\t\t\t\tactual.onComplete();\n+\t\t\t\t\tactual = null;\n+\t\t\t\t\treturn Emission.OK;\n+\t\t\t\t}\n+\t\t\t\telse return tryEmitComplete(); // recurse", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzYyNg==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484457626", "body": "IMO this is wrong and should return `FAIL_ZERO_SUBSCRIBER`", "bodyText": "IMO this is wrong and should return FAIL_ZERO_SUBSCRIBER", "bodyHTML": "<p dir=\"auto\">IMO this is wrong and should return <code>FAIL_ZERO_SUBSCRIBER</code></p>", "author": "bsideup", "createdAt": "2020-09-07T14:14:30Z", "path": "reactor-core/src/test/java/reactor/core/publisher/UnicastProcessorTest.java", "diffHunk": "@@ -279,4 +279,50 @@ public void shouldSignalErrorOnOverflow() {\n \t\t            .then(() -> processor.emitNext(\"boom\"))\n \t\t            .verifyErrorMatches(Exceptions::isOverflow);\n \t}\n+\n+\t@Test\n+\tpublic void tryEmitNextWithNoSubscriberAndBoundedQueueFailsZeroSubscriber() {\n+\t\tUnicastProcessor<Integer> unicastProcessor = UnicastProcessor.create(Queues.<Integer>one().get());\n+\n+\t\tassertThat(unicastProcessor.tryEmitNext(1)).isEqualTo(Sinks.Emission.OK);", "originalCommit": "42fbc64dc912c3a5027e25ada55b1952127789d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MDQyNw==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484460427", "bodyText": "the fact that UnicastProcessor allows to pre-emit (a few) elements before the actual subscription occurs is IMHO a cornerstone of it working so well as the plumbing for widowing operators. I fear doing what you suggest would open the door to all sorts of issues in windowing operators, at least.", "author": "simonbasle", "createdAt": "2020-09-07T14:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2NDU0MA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484464540", "bodyText": "if so, the second emission should fail with OVERFLOW and not \"zero subscribers\" because the sink/processor isn't subscriber-dependent", "author": "bsideup", "createdAt": "2020-09-07T14:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUyNjQ3Mg==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484526472", "bodyText": "why? the whole point of adding this failed state is to indicate undeliverable emission (as opposed to deliverable-in-case-of-later-subscription). there are still 0 subscribers when the second tryEmitNext occurs, but that one cannot be buffered for the benefit of a deferred subscriptions, so we return FAIL_ZERO_SUBSCRIBER (to distinguish from \"there's a subscriber but it hasn't requested enough\").\n\t\t/**\n\t\t * Has failed to emit the signal because the sink has never been subscribed to [AND]\n         * has no capacity to buffer the signal.\n\t\t */\n\t\tFAIL_ZERO_SUBSCRIBER;\n(I should change the above wording to say has currently no subscriber maybe rather than `has never been subscribed)", "author": "simonbasle", "createdAt": "2020-09-07T17:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg4NDQzMw==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484884433", "bodyText": "IMO the failure's cause is the overflow. The fact that it overflows when there are no subscribers is an implementation detail. Getting FAIL_ZERO_SUBSCRIBER after OK is super weird and IMO counterintuitive \ud83d\ude05", "author": "bsideup", "createdAt": "2020-09-08T12:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NzYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTE2NQ==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r484839165", "body": "why not put it into switch's cases?\r\nSimilar to https://github.com/reactor/reactor-core/blob/56e5c0ddf8e9485b9117c75795db0afcd64eef6e/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java#L275-L286\r\n\r\n1. try CAS\r\n2. continue if fails\r\n3. do the action otherwise", "bodyText": "why not put it into switch's cases?\nSimilar to \n  \n    \n      reactor-core/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java\n    \n    \n        Lines 275 to 286\n      in\n      56e5c0d\n    \n    \n    \n    \n\n        \n          \n           case LAST_ACTIVE: \n        \n\n        \n          \n           \tif (!STATE.compareAndSet(this, previousState, State.TERMINATED)) { \n        \n\n        \n          \n           \t\tcontinue; \n        \n\n        \n          \n           \t} \n        \n\n        \n          \n            \n        \n\n        \n          \n           \tThrowable ex = error; \n        \n\n        \n          \n           \tif (ex != null) { \n        \n\n        \n          \n           \t\tactual.onError(ex); \n        \n\n        \n          \n           \t\treturn; \n        \n\n        \n          \n           \t} \n        \n\n        \n          \n           \tactual.onComplete(); \n        \n\n        \n          \n           \treturn; \n        \n    \n  \n\n\n\ntry CAS\ncontinue if fails\ndo the action otherwise", "bodyHTML": "<p dir=\"auto\">why not put it into switch's cases?<br>\nSimilar to <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/reactor/reactor-core/blob/56e5c0ddf8e9485b9117c75795db0afcd64eef6e/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java#L275-L286\">reactor-core/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 275 to 286\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/reactor/reactor-core/commit/56e5c0ddf8e9485b9117c75795db0afcd64eef6e\">56e5c0d</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L275\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"275\"></td>\n          <td id=\"LC275\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">case</span> <span class=\"pl-c1\">LAST_ACTIVE</span><span class=\"pl-k\">:</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L276\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"276\"></td>\n          <td id=\"LC276\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-c1\">STATE</span><span class=\"pl-k\">.</span>compareAndSet(<span class=\"pl-c1\">this</span>, previousState, <span class=\"pl-smi\">State</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>TERMINATED</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L277\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"277\"></td>\n          <td id=\"LC277\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-k\">continue</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L278\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"278\"></td>\n          <td id=\"LC278\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L279\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"279\"></td>\n          <td id=\"LC279\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L280\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"280\"></td>\n          <td id=\"LC280\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">Throwable</span> ex <span class=\"pl-k\">=</span> error; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L281\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"281\"></td>\n          <td id=\"LC281\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (ex <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L282\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"282\"></td>\n          <td id=\"LC282\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\tactual<span class=\"pl-k\">.</span>onError(ex); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L283\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"283\"></td>\n          <td id=\"LC283\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-k\">return</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L284\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"284\"></td>\n          <td id=\"LC284\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L285\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"285\"></td>\n          <td id=\"LC285\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \tactual<span class=\"pl-k\">.</span>onComplete(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L286\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"286\"></td>\n          <td id=\"LC286\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">return</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<ol dir=\"auto\">\n<li>try CAS</li>\n<li>continue if fails</li>\n<li>do the action otherwise</li>\n</ol>", "author": "bsideup", "createdAt": "2020-09-08T11:16:07Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -67,13 +70,38 @@\n \tpublic void subscribe(CoreSubscriber<? super T> actual) {\n \t\tObjects.requireNonNull(actual, \"subscribe\");\n \n-\t\tif (!STATE.compareAndSet(this, State.INITIAL, State.SUBSCRIBED)) {\n+\t\tboolean casFails;\n+\t\tState s;\n+\t\tdo {\n+\t\t\ts = state;\n+\t\t\tswitch(s) {\n+\t\t\t\tcase TERMINATED_BEFORE_SUBSCRIPTION:\n+\t\t\t\t\tcasFails = !STATE.compareAndSet(this, s, State.TERMINATED);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase INITIAL:\n+\t\t\t\t\tcasFails = !STATE.compareAndSet(this, s, State.SUBSCRIBED);\n+\t\t\t\t\tbreak;\n+\t\t\t\tdefault:\n+\t\t\t\t\tcasFails = false;\n+\t\t\t}\n+\t\t} while (casFails);\n+\n+\t\tif (s == State.TERMINATED_BEFORE_SUBSCRIPTION) {\n+\t\t\t//detected pre-subscribe termination\n+\t\t\tif (this.error != null) {\n+\t\t\t\tOperators.error(actual, this.error);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tOperators.complete(actual);\n+\t\t\t}", "originalCommit": "0fd9c1c71a9ab06ca5c1ba828aeba334cc27ed92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwNTc2OA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r485005768", "bodyText": "see 80278ec", "author": "simonbasle", "createdAt": "2020-09-08T15:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTE2NQ=="}], "type": "inlineReview"}, {"oid": "eca5e189f5e9d0cc914af9fb193b06096b64038d", "url": "https://github.com/reactor/reactor-core/commit/eca5e189f5e9d0cc914af9fb193b06096b64038d", "message": "formatting", "committedDate": "2020-09-08T15:20:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAxMzQ0NA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r485013444", "body": "nit: Could use a similar style as in https://github.com/reactor/reactor-core/blob/56e5c0ddf8e9485b9117c75795db0afcd64eef6e/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java#L226", "bodyText": "nit: Could use a similar style as in \n  \n    \n      reactor-core/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java\n    \n    \n         Line 226\n      in\n      56e5c0d\n    \n    \n    \n    \n\n        \n          \n           for (State previousState = this.state; ; previousState = this.state) {", "bodyHTML": "<p dir=\"auto\">nit: Could use a similar style as in <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/reactor/reactor-core/blob/56e5c0ddf8e9485b9117c75795db0afcd64eef6e/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java#L226\">reactor-core/reactor-core/src/main/java/reactor/core/publisher/FluxConcatMapNoPrefetch.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 226\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/reactor/reactor-core/commit/56e5c0ddf8e9485b9117c75795db0afcd64eef6e\">56e5c0d</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L226\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"226\"></td>\n          <td id=\"LC226\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">State</span> previousState <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>state; ; previousState <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>state) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "bsideup", "createdAt": "2020-09-08T15:33:26Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -67,13 +70,34 @@\n \tpublic void subscribe(CoreSubscriber<? super T> actual) {\n \t\tObjects.requireNonNull(actual, \"subscribe\");\n \n-\t\tif (!STATE.compareAndSet(this, State.INITIAL, State.SUBSCRIBED)) {\n-\t\t\tOperators.reportThrowInSubscribe(actual, new IllegalStateException(\"Unicast Sinks.Many allows only a single Subscriber\"));\n-\t\t\treturn;\n+\t\tState s;", "originalCommit": "eca5e189f5e9d0cc914af9fb193b06096b64038d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAxNDE1NA==", "url": "https://github.com/reactor/reactor-core/pull/2357#discussion_r485014154", "body": "consider extracting `this.state` into a variable and using it here in place of `State.INITIAL` to avoid future copy/paste errors", "bodyText": "consider extracting this.state into a variable and using it here in place of State.INITIAL to avoid future copy/paste errors", "bodyHTML": "<p dir=\"auto\">consider extracting <code>this.state</code> into a variable and using it here in place of <code>State.INITIAL</code> to avoid future copy/paste errors</p>", "author": "bsideup", "createdAt": "2020-09-08T15:34:27Z", "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastManySinkNoBackpressure.java", "diffHunk": "@@ -153,16 +178,26 @@ public void emitError(Throwable error) {\n \t@Override\n \tpublic Emission tryEmitError(Throwable t) {\n \t\tObjects.requireNonNull(t, \"t\");\n-\n-\t\tswitch (state) {\n+\t\tswitch (this.state) {\n \t\t\tcase INITIAL:\n-\t\t\t\t// TODO different Emission?\n-\t\t\t\treturn Emission.OK;\n+\t\t\t\tif (STATE.compareAndSet(this, State.INITIAL, State.TERMINATED_BEFORE_SUBSCRIPTION)) {", "originalCommit": "eca5e189f5e9d0cc914af9fb193b06096b64038d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c13b602b42536412214d289da30f655c1a4b96a7", "url": "https://github.com/reactor/reactor-core/commit/c13b602b42536412214d289da30f655c1a4b96a7", "message": "emitNext avoids terminating sinks when FAIL_0_SUB", "committedDate": "2020-09-09T15:45:52Z", "type": "forcePushed"}, {"oid": "8bb2497470790943365cc50f2acd19d259e0b5c4", "url": "https://github.com/reactor/reactor-core/commit/8bb2497470790943365cc50f2acd19d259e0b5c4", "message": "fix #2338 Sinks.Many distinguish FAIL_ZERO_SUBSCRIBER\n\nFor now, emitNext avoids terminating sinks when FAIL_0_SUB.\n\nUnicastManySinkNoBackpressure behaves a bit differently. It uses\n0_SUB in tryEmitComplete and tryEmitError as well.", "committedDate": "2020-09-11T16:47:58Z", "type": "commit"}, {"oid": "8bb2497470790943365cc50f2acd19d259e0b5c4", "url": "https://github.com/reactor/reactor-core/commit/8bb2497470790943365cc50f2acd19d259e0b5c4", "message": "fix #2338 Sinks.Many distinguish FAIL_ZERO_SUBSCRIBER\n\nFor now, emitNext avoids terminating sinks when FAIL_0_SUB.\n\nUnicastManySinkNoBackpressure behaves a bit differently. It uses\n0_SUB in tryEmitComplete and tryEmitError as well.", "committedDate": "2020-09-11T16:47:58Z", "type": "forcePushed"}, {"oid": "f52086213c06958b7c4cae9c25f80993cc8f28d2", "url": "https://github.com/reactor/reactor-core/commit/f52086213c06958b7c4cae9c25f80993cc8f28d2", "message": "add tests for 0-sub on terminal attempts in UnicastManySinkNoBackpressure", "committedDate": "2020-09-11T16:57:55Z", "type": "commit"}]}