{"pr_number": 478, "pr_title": "Allow encoded characters through spring", "pr_author": "cZikos", "pr_createdAt": "2020-01-21T12:08:14Z", "pr_url": "https://github.com/zowe/api-layer/pull/478", "timeline": [{"oid": "69836f5413914e3a6961eb574cb4cab1861a6886", "url": "https://github.com/zowe/api-layer/commit/69836f5413914e3a6961eb574cb4cab1861a6886", "message": "Add integration test\nMinor change on controller\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-21T16:40:22Z", "type": "forcePushed"}, {"oid": "bcf7d625b6817745412589ef30df3aa1b1c0ad07", "url": "https://github.com/zowe/api-layer/commit/bcf7d625b6817745412589ef30df3aa1b1c0ad07", "message": "first commit\nChange Discoverable Client endpoint to cover encoded characters on URL\nConfigure discoverable client and gateway to allow encoded characters(unconditionally)\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "fc4a7d36fdfb6d8db8e4432afa813a7376a48adc", "url": "https://github.com/zowe/api-layer/commit/fc4a7d36fdfb6d8db8e4432afa813a7376a48adc", "message": "Filter prototype\n\nSigned-off-by: jandadav <janda.david@gmail.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "b354057edfb8d14d44af47bc784655406e4da9b5", "url": "https://github.com/zowe/api-layer/commit/b354057edfb8d14d44af47bc784655406e4da9b5", "message": "Filter prototype tests\n\nSigned-off-by: jandadav <janda.david@gmail.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "64988ea7fc89c370bcff535533b22bbc78c3776d", "url": "https://github.com/zowe/api-layer/commit/64988ea7fc89c370bcff535533b22bbc78c3776d", "message": "add filter functionality and minor changes\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "b53de7e9b71512129ed2d5fd678c35ea824d1731", "url": "https://github.com/zowe/api-layer/commit/b53de7e9b71512129ed2d5fd678c35ea824d1731", "message": "add unit tests, document error message\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "d2eb5be9c69ec8db14e30139688f49354f16e09a", "url": "https://github.com/zowe/api-layer/commit/d2eb5be9c69ec8db14e30139688f49354f16e09a", "message": "Add integration test\nMinor change on controller\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "2057a94fbad683a356caee00d495bc3ffc5443ca", "url": "https://github.com/zowe/api-layer/commit/2057a94fbad683a356caee00d495bc3ffc5443ca", "message": "more unit tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "commit"}, {"oid": "2057a94fbad683a356caee00d495bc3ffc5443ca", "url": "https://github.com/zowe/api-layer/commit/2057a94fbad683a356caee00d495bc3ffc5443ca", "message": "more unit tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T14:24:33Z", "type": "forcePushed"}, {"oid": "cace763585ad84803a271ed20785e6218770f98d", "url": "https://github.com/zowe/api-layer/commit/cace763585ad84803a271ed20785e6218770f98d", "message": "Add another integration test\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-22T17:59:28Z", "type": "commit"}, {"oid": "51be86d19d20032b55c6e18af0564b10f82250a6", "url": "https://github.com/zowe/api-layer/commit/51be86d19d20032b55c6e18af0564b10f82250a6", "message": "Add unit test\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-23T11:04:05Z", "type": "commit"}, {"oid": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "url": "https://github.com/zowe/api-layer/commit/209de4b72630c900a2fc0c3d0bd14be092e7b68b", "message": "Refactor GatewayRibbonLoadBalancingHttpClient\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-23T17:07:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NDkyMQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370584921", "body": "```suggestion\r\n    public void shouldReconstructURIWithServer_WhenUnsecurePortEnabled() throws URISyntaxException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shouldReconstructURIWithServerWhenUnsecurePortEnabled() throws URISyntaxException {\n          \n          \n            \n                public void shouldReconstructURIWithServer_WhenUnsecurePortEnabled() throws URISyntaxException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReconstructURIWithServerWhenUnsecurePortEnabled</span>() throws <span class=\"pl-smi\">URISyntaxException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReconstructURIWithServer_WhenUnsecurePortEnabled</span>() throws <span class=\"pl-smi\">URISyntaxException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "taban03", "createdAt": "2020-01-24T11:17:03Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/ribbon/GatewayRibbonLoadBalancingHttpClientTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.ribbon;\n+\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.client.config.DefaultClientConfigImpl;\n+import com.netflix.client.config.IClientConfig;\n+import com.netflix.loadbalancer.*;\n+import com.netflix.niws.loadbalancer.DiscoveryEnabledServer;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.cloud.netflix.ribbon.DefaultServerIntrospector;\n+import org.springframework.cloud.netflix.ribbon.ServerIntrospector;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.*;\n+\n+\n+@Import(GatewayRibbonLoadBalancingHttpClientTest.TestConfiguration.class)\n+public class GatewayRibbonLoadBalancingHttpClientTest {\n+\n+    private GatewayRibbonLoadBalancingHttpClient gatewayRibbonLoadBalancingHttpClient;\n+    private CloseableHttpClient closeableHttpClient;\n+    private IClientConfig iClientConfig;\n+\n+    @Autowired\n+    private ServerIntrospector serverIntrospector;\n+\n+    @Before\n+    public void setup() {\n+        closeableHttpClient = mock(CloseableHttpClient.class);\n+        iClientConfig = IClientConfig.Builder.newBuilder(DefaultClientConfigImpl.class, \"apicatalog\").withSecure(false).withFollowRedirects(false).withDeploymentContextBasedVipAddresses(\"apicatalog\").withLoadBalancerEnabled(false).build();\n+        gatewayRibbonLoadBalancingHttpClient = new GatewayRibbonLoadBalancingHttpClient(closeableHttpClient, iClientConfig, serverIntrospector);\n+    }\n+\n+    @Test\n+    public void shouldReconstructURIWithServerWhenUnsecurePortEnabled() throws URISyntaxException {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NTE5OQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370585199", "body": "```suggestion\r\n    public void givenMultipleInstances_WhenMixedSetup_ShouldBePesimistic() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenMultipleInstancesWhenMixedSetupShouldBePesimistic() {\n          \n          \n            \n                public void givenMultipleInstances_WhenMixedSetup_ShouldBePesimistic() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenMultipleInstancesWhenMixedSetupShouldBePesimistic</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenMultipleInstances_WhenMixedSetup_ShouldBePesimistic</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "taban03", "createdAt": "2020-01-24T11:17:49Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/filters/pre/EncodedCharactersFilterTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.filters.pre;\n+\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.cloud.client.DefaultServiceInstance;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+import static org.springframework.cloud.netflix.zuul.filters.support.FilterConstants.*;\n+\n+\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class EncodedCharactersFilterTest {\n+\n+    private EncodedCharactersFilter filter;\n+\n+    private final String METADATA_KEY = EncodedCharactersFilter.METADATA_KEY;\n+    private final String SERVICE_ID = \"serviceid\";\n+\n+    private final DefaultServiceInstance serviceInstanceWithConfiguration = new DefaultServiceInstance(\"INSTANCE1\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+    private final DefaultServiceInstance serviceInstanceWithoutConfiguration = new DefaultServiceInstance(\"INSTANCE2\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+\n+    @Mock\n+    DiscoveryClient discoveryClient;\n+\n+    @Before\n+    public void setup() {\n+        filter = new EncodedCharactersFilter(discoveryClient);\n+        serviceInstanceWithConfiguration.getMetadata().put(METADATA_KEY, \"true\");\n+        serviceInstanceWithoutConfiguration.getMetadata().put(METADATA_KEY, \"false\");\n+        RequestContext ctx = RequestContext.getCurrentContext();\n+        ctx.clear();\n+        ctx.set(PROXY_KEY, \"api/v1/\" + SERVICE_ID);\n+        ctx.set(SERVICE_ID_KEY, SERVICE_ID);\n+        ctx.setResponse(new MockHttpServletResponse());\n+    }\n+\n+    @Test\n+    public void givenSingleInstanceWhenNotConfiguredShouldFilter() {\n+        List<ServiceInstance> instanceList = new ArrayList<>();\n+        instanceList.add(serviceInstanceWithoutConfiguration);\n+        when(discoveryClient.getInstances(SERVICE_ID)).thenReturn(instanceList);\n+\n+        assertThat(filter.shouldFilter(), is(equalTo(true)));\n+    }\n+\n+    @Test\n+    public void givenSingleInstanceWhenConfiguredShouldNotFilter() {\n+        List<ServiceInstance> instanceList = new ArrayList<>();\n+        instanceList.add(serviceInstanceWithConfiguration);\n+        when(discoveryClient.getInstances(SERVICE_ID)).thenReturn(instanceList);\n+\n+        assertThat(filter.shouldFilter(), is(equalTo(false)));\n+    }\n+\n+    @Test\n+    public void shouldReturnFilterType() {\n+        String filterType = this.filter.filterType();\n+        assertEquals(\"pre\", filterType);\n+    }\n+\n+    @Test\n+    public void shouldReturnFilterOrder() {\n+        int filterOrder = this.filter.filterOrder();\n+        assertEquals(6, filterOrder);\n+    }\n+\n+    @Test\n+    public void givenMultipleInstancesWhenMixedSetupShouldBePesimistic() {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NTM1MA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370585350", "body": "```suggestion\r\n    public void givenSingleInstance_WhenConfigured_ShouldNotFilter() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenSingleInstanceWhenConfiguredShouldNotFilter() {\n          \n          \n            \n                public void givenSingleInstance_WhenConfigured_ShouldNotFilter() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenSingleInstanceWhenConfiguredShouldNotFilter</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenSingleInstance_WhenConfigured_ShouldNotFilter</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "taban03", "createdAt": "2020-01-24T11:18:14Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/filters/pre/EncodedCharactersFilterTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.filters.pre;\n+\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.cloud.client.DefaultServiceInstance;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+import static org.springframework.cloud.netflix.zuul.filters.support.FilterConstants.*;\n+\n+\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class EncodedCharactersFilterTest {\n+\n+    private EncodedCharactersFilter filter;\n+\n+    private final String METADATA_KEY = EncodedCharactersFilter.METADATA_KEY;\n+    private final String SERVICE_ID = \"serviceid\";\n+\n+    private final DefaultServiceInstance serviceInstanceWithConfiguration = new DefaultServiceInstance(\"INSTANCE1\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+    private final DefaultServiceInstance serviceInstanceWithoutConfiguration = new DefaultServiceInstance(\"INSTANCE2\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+\n+    @Mock\n+    DiscoveryClient discoveryClient;\n+\n+    @Before\n+    public void setup() {\n+        filter = new EncodedCharactersFilter(discoveryClient);\n+        serviceInstanceWithConfiguration.getMetadata().put(METADATA_KEY, \"true\");\n+        serviceInstanceWithoutConfiguration.getMetadata().put(METADATA_KEY, \"false\");\n+        RequestContext ctx = RequestContext.getCurrentContext();\n+        ctx.clear();\n+        ctx.set(PROXY_KEY, \"api/v1/\" + SERVICE_ID);\n+        ctx.set(SERVICE_ID_KEY, SERVICE_ID);\n+        ctx.setResponse(new MockHttpServletResponse());\n+    }\n+\n+    @Test\n+    public void givenSingleInstanceWhenNotConfiguredShouldFilter() {\n+        List<ServiceInstance> instanceList = new ArrayList<>();\n+        instanceList.add(serviceInstanceWithoutConfiguration);\n+        when(discoveryClient.getInstances(SERVICE_ID)).thenReturn(instanceList);\n+\n+        assertThat(filter.shouldFilter(), is(equalTo(true)));\n+    }\n+\n+    @Test\n+    public void givenSingleInstanceWhenConfiguredShouldNotFilter() {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NTQ3NQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370585475", "body": "```suggestion\r\n    public void givenSingleInstance_WhenNotConfigured_ShouldFilter() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void givenSingleInstanceWhenNotConfiguredShouldFilter() {\n          \n          \n            \n                public void givenSingleInstance_WhenNotConfigured_ShouldFilter() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenSingleInstanceWhenNotConfiguredShouldFilter</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">givenSingleInstance_WhenNotConfigured_ShouldFilter</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "taban03", "createdAt": "2020-01-24T11:18:37Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/filters/pre/EncodedCharactersFilterTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.filters.pre;\n+\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.cloud.client.DefaultServiceInstance;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+import static org.springframework.cloud.netflix.zuul.filters.support.FilterConstants.*;\n+\n+\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class EncodedCharactersFilterTest {\n+\n+    private EncodedCharactersFilter filter;\n+\n+    private final String METADATA_KEY = EncodedCharactersFilter.METADATA_KEY;\n+    private final String SERVICE_ID = \"serviceid\";\n+\n+    private final DefaultServiceInstance serviceInstanceWithConfiguration = new DefaultServiceInstance(\"INSTANCE1\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+    private final DefaultServiceInstance serviceInstanceWithoutConfiguration = new DefaultServiceInstance(\"INSTANCE2\", SERVICE_ID ,\"\",0,true, new HashMap<String, String>());\n+\n+    @Mock\n+    DiscoveryClient discoveryClient;\n+\n+    @Before\n+    public void setup() {\n+        filter = new EncodedCharactersFilter(discoveryClient);\n+        serviceInstanceWithConfiguration.getMetadata().put(METADATA_KEY, \"true\");\n+        serviceInstanceWithoutConfiguration.getMetadata().put(METADATA_KEY, \"false\");\n+        RequestContext ctx = RequestContext.getCurrentContext();\n+        ctx.clear();\n+        ctx.set(PROXY_KEY, \"api/v1/\" + SERVICE_ID);\n+        ctx.set(SERVICE_ID_KEY, SERVICE_ID);\n+        ctx.setResponse(new MockHttpServletResponse());\n+    }\n+\n+    @Test\n+    public void givenSingleInstanceWhenNotConfiguredShouldFilter() {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NTgzMA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370585830", "body": "```suggestion\r\n    public void shouldReconstructURIWithServer_WhenSecurePortEnabled() throws URISyntaxException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shouldReconstructURIWithServerWhenSecurePortEnabled() throws URISyntaxException {\n          \n          \n            \n                public void shouldReconstructURIWithServer_WhenSecurePortEnabled() throws URISyntaxException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReconstructURIWithServerWhenSecurePortEnabled</span>() throws <span class=\"pl-smi\">URISyntaxException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReconstructURIWithServer_WhenSecurePortEnabled</span>() throws <span class=\"pl-smi\">URISyntaxException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "taban03", "createdAt": "2020-01-24T11:19:40Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/ribbon/GatewayRibbonLoadBalancingHttpClientTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.ribbon;\n+\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.client.config.DefaultClientConfigImpl;\n+import com.netflix.client.config.IClientConfig;\n+import com.netflix.loadbalancer.*;\n+import com.netflix.niws.loadbalancer.DiscoveryEnabledServer;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.cloud.netflix.ribbon.DefaultServerIntrospector;\n+import org.springframework.cloud.netflix.ribbon.ServerIntrospector;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.*;\n+\n+\n+@Import(GatewayRibbonLoadBalancingHttpClientTest.TestConfiguration.class)\n+public class GatewayRibbonLoadBalancingHttpClientTest {\n+\n+    private GatewayRibbonLoadBalancingHttpClient gatewayRibbonLoadBalancingHttpClient;\n+    private CloseableHttpClient closeableHttpClient;\n+    private IClientConfig iClientConfig;\n+\n+    @Autowired\n+    private ServerIntrospector serverIntrospector;\n+\n+    @Before\n+    public void setup() {\n+        closeableHttpClient = mock(CloseableHttpClient.class);\n+        iClientConfig = IClientConfig.Builder.newBuilder(DefaultClientConfigImpl.class, \"apicatalog\").withSecure(false).withFollowRedirects(false).withDeploymentContextBasedVipAddresses(\"apicatalog\").withLoadBalancerEnabled(false).build();\n+        gatewayRibbonLoadBalancingHttpClient = new GatewayRibbonLoadBalancingHttpClient(closeableHttpClient, iClientConfig, serverIntrospector);\n+    }\n+\n+    @Test\n+    public void shouldReconstructURIWithServerWhenUnsecurePortEnabled() throws URISyntaxException {\n+        HttpGet httpGet = mock(HttpGet.class);\n+        CloseableHttpResponse closeableHttpResponse = mock(CloseableHttpResponse.class);\n+        try {\n+            when(closeableHttpClient.execute(httpGet)).thenReturn(closeableHttpResponse);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        URI request = new URI(\"/apicatalog/\");\n+\n+        Server server = createServer(\"localhost\", 10014, false, true, \"defaultZone\");\n+        URI reconstructedURI = gatewayRibbonLoadBalancingHttpClient.reconstructURIWithServer(server, request);\n+        assertEquals(\"http://localhost:10014/apicatalog/\", reconstructedURI.toString());\n+    }\n+\n+    @Test\n+    public void shouldReconstructURIWithServerWhenSecurePortEnabled() throws URISyntaxException {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5cae257af3b097b5a597bb80cc1ad2d734c07540", "url": "https://github.com/zowe/api-layer/commit/5cae257af3b097b5a597bb80cc1ad2d734c07540", "message": "Refactor GatewayRibbonLoadBalancingHttpClient\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-24T13:18:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMDE2OQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370630169", "body": "This class actually provides functionality for ```LatencyUtils``` . \r\nWe can change LatencyUtilsConfigInitializer class content and name.\r\n", "bodyText": "This class actually provides functionality for LatencyUtils .\nWe can change LatencyUtilsConfigInitializer class content and name.", "bodyHTML": "<p dir=\"auto\">This class actually provides functionality for <code>LatencyUtils</code> .<br>\nWe can change LatencyUtilsConfigInitializer class content and name.</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-24T13:22:57Z", "path": "apiml-common/src/main/java/com/ca/mfaas/product/monitoring/LatencyUtilsConfigInitializer.java", "diffHunk": "@@ -23,6 +23,7 @@\n     private static final String PROPERTY_KEY = \"LatencyUtils.useActualTime\";\n     @Override\n     public void initialize(@Nonnull ConfigurableApplicationContext applicationContext) {\n+        System.setProperty(\"org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH\", \"true\");", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTIzMQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370661231", "bodyText": "This is a temporary placement. There will be a new TomcatConfiguration file in the near future.", "author": "cZikos", "createdAt": "2020-01-24T14:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMDE2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMTE0NQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370631145", "body": "may i ask why it is removed?", "bodyText": "may i ask why it is removed?", "bodyHTML": "<p dir=\"auto\">may i ask why it is removed?</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-24T13:25:23Z", "path": "discoverable-client/src/main/java/com/ca/mfaas/client/api/GreetingController.java", "diffHunk": "@@ -8,21 +8,21 @@\n  * Copyright Contributors to the Zowe Project.\n  */\n package com.ca.mfaas.client.api;\n-\n import com.ca.mfaas.client.model.Greeting;\n import io.swagger.annotations.Api;\n import io.swagger.annotations.ApiOperation;\n import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.Date;\n \n+\n /**\n  * Version 1 of the controller that returns greetings.\n  */\n @RestController\n-@Api(tags = {\"Other Operations\"}, description = \"General Operations\")\n+@Api(tags = {\"Other Operations\"})", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTU2OQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370661569", "bodyText": "description tag was depricated. I will replace with latest relevant parameter.", "author": "cZikos", "createdAt": "2020-01-24T14:29:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMTE0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzODI1MA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370638250", "body": "please follow ```^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$:``` for variable name", "bodyText": "please follow ^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$: for variable name", "bodyHTML": "<p dir=\"auto\">please follow <code>^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$:</code> for variable name</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-24T13:41:32Z", "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/filters/pre/EncodedCharactersFilter.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.filters.pre;\n+\n+import com.ca.mfaas.message.log.ApimlLogger;\n+import com.ca.mfaas.product.logging.annotations.InjectApimlLogger;\n+import com.netflix.zuul.ZuulFilter;\n+import com.netflix.zuul.context.RequestContext;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.netflix.zuul.filters.support.FilterConstants;\n+import org.springframework.http.HttpStatus;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.cloud.netflix.zuul.filters.support.FilterConstants.*;\n+\n+/**\n+ *  This filter should run on all requests for services, which do not have enabled encoded characters in URL\n+ *\n+ *  Special characters encoding is enabled on Tomcat and Spring Firewall so this filter takes over responsibility\n+ *  for filtering them.\n+ *  Encoded characters in URL are allowed only for services that have it explicitly configured on the metadata.\n+ *\n+ */\n+\n+@RequiredArgsConstructor\n+public class EncodedCharactersFilter extends ZuulFilter {\n+\n+    private final DiscoveryClient discoveryClient;\n+    public static final String METADATA_KEY = \"apiml.enableUrlEncodedCharacters\";\n+    private static final List<String> prohibitedCharacters = Arrays.asList(\"%2e\", \"%2E\", \";\", \"%3b\", \"%3B\", \"%2f\", \"%2F\", \"\\\\\", \"%5c\", \"%5C\", \"%25\", \"%\");", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MTk2OA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370661968", "bodyText": "Done", "author": "cZikos", "createdAt": "2020-01-24T14:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzODI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0Njc3NQ==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370646775", "body": "```java\r\nprivate boolean checkRequestForEncodedCharacters(String request) {\r\n        return prohibitedCharacters.stream()\r\n            .anyMatch(forbidden -> pathContains(request, forbidden));\r\n    }\r\n```", "bodyText": "private boolean checkRequestForEncodedCharacters(String request) {\n        return prohibitedCharacters.stream()\n            .anyMatch(forbidden -> pathContains(request, forbidden));\n    }", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private boolean checkRequestForEncodedCharacters(String request) {\n        return prohibitedCharacters.stream()\n            .anyMatch(forbidden -&gt; pathContains(request, forbidden));\n    }\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> checkRequestForEncodedCharacters(<span class=\"pl-smi\">String</span> request) {\n        <span class=\"pl-k\">return</span> prohibitedCharacters<span class=\"pl-k\">.</span>stream()\n            .anyMatch(forbidden <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> pathContains(request, forbidden));\n    }</pre></div>", "author": "ilkinabdullayev", "createdAt": "2020-01-24T14:00:21Z", "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/filters/pre/EncodedCharactersFilter.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.filters.pre;\n+\n+import com.ca.mfaas.message.log.ApimlLogger;\n+import com.ca.mfaas.product.logging.annotations.InjectApimlLogger;\n+import com.netflix.zuul.ZuulFilter;\n+import com.netflix.zuul.context.RequestContext;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.netflix.zuul.filters.support.FilterConstants;\n+import org.springframework.http.HttpStatus;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.cloud.netflix.zuul.filters.support.FilterConstants.*;\n+\n+/**\n+ *  This filter should run on all requests for services, which do not have enabled encoded characters in URL\n+ *\n+ *  Special characters encoding is enabled on Tomcat and Spring Firewall so this filter takes over responsibility\n+ *  for filtering them.\n+ *  Encoded characters in URL are allowed only for services that have it explicitly configured on the metadata.\n+ *\n+ */\n+\n+@RequiredArgsConstructor\n+public class EncodedCharactersFilter extends ZuulFilter {\n+\n+    private final DiscoveryClient discoveryClient;\n+    public static final String METADATA_KEY = \"apiml.enableUrlEncodedCharacters\";\n+    private static final List<String> prohibitedCharacters = Arrays.asList(\"%2e\", \"%2E\", \";\", \"%3b\", \"%3B\", \"%2f\", \"%2F\", \"\\\\\", \"%5c\", \"%5C\", \"%25\", \"%\");\n+\n+    @InjectApimlLogger\n+    private final ApimlLogger apimlLog = ApimlLogger.empty();\n+\n+    @Override\n+    public String filterType() {\n+        return FilterConstants.PRE_TYPE;\n+    }\n+\n+    @Override\n+    public int filterOrder() {\n+        return PRE_DECORATION_FILTER_ORDER + 1;\n+    }\n+\n+    @Override\n+    public boolean shouldFilter() {\n+        boolean shouldFilter = true;\n+\n+        RequestContext context = RequestContext.getCurrentContext();\n+        final String serviceId = (String) context.get(SERVICE_ID_KEY);\n+\n+        List<ServiceInstance> instanceList = discoveryClient.getInstances(serviceId);\n+\n+        List<Map<String, String>> enabledList = instanceList.stream()\n+            .map(ServiceInstance::getMetadata)\n+            .filter( metadata -> String.valueOf(true).equalsIgnoreCase(metadata.get(METADATA_KEY)) )\n+            .collect(Collectors.toList());\n+\n+        if (enabledList.size() == instanceList.size()) {\n+            shouldFilter = false;\n+        }\n+\n+        return shouldFilter;\n+    }\n+\n+    @Override\n+    public Object run() {\n+        RequestContext context = RequestContext.getCurrentContext();\n+        final String requestPath = context.getRequest().getRequestURI();\n+        if (checkRequestForEncodedCharacters(requestPath)) {\n+            rejectRequest(context);\n+        }\n+        return null;\n+    }\n+\n+    private boolean checkRequestForEncodedCharacters(String request) {\n+        for (String forbidden : prohibitedCharacters) {\n+            if (pathContains(request, forbidden)) {\n+                return true;\n+            }\n+        }", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2NjQ3OA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370666478", "bodyText": "Nice one, thanks.", "author": "cZikos", "createdAt": "2020-01-24T14:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0Njc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0NzgyOA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370647828", "body": "Please, throw exception instead of wrapping in the tests.", "bodyText": "Please, throw exception instead of wrapping in the tests.", "bodyHTML": "<p dir=\"auto\">Please, throw exception instead of wrapping in the tests.</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-24T14:02:32Z", "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/ribbon/GatewayRibbonLoadBalancingHttpClientTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package com.ca.mfaas.gateway.ribbon;\n+\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.client.config.DefaultClientConfigImpl;\n+import com.netflix.client.config.IClientConfig;\n+import com.netflix.loadbalancer.*;\n+import com.netflix.niws.loadbalancer.DiscoveryEnabledServer;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.cloud.netflix.ribbon.DefaultServerIntrospector;\n+import org.springframework.cloud.netflix.ribbon.ServerIntrospector;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.*;\n+\n+\n+@Import(GatewayRibbonLoadBalancingHttpClientTest.TestConfiguration.class)\n+public class GatewayRibbonLoadBalancingHttpClientTest {", "originalCommit": "209de4b72630c900a2fc0c3d0bd14be092e7b68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0OTc5Nw==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r370649797", "bodyText": "For this class, there is no need to setup spring env. May I ask to redesign this class like this?\nhttps://github.com/zowe/api-layer/blob/48bfe42dac0117c7a3a237d17abad8cf219e5106/gateway-service/src/test/java/com/ca/mfaas/gateway/ribbon/GatewayRibbonLoadBalancingHttpClientTest.java", "author": "ilkinabdullayev", "createdAt": "2020-01-24T14:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0NzgyOA=="}], "type": "inlineReview"}, {"oid": "7f497da3d1a9a3e68234587303ad3023fa72ef98", "url": "https://github.com/zowe/api-layer/commit/7f497da3d1a9a3e68234587303ad3023fa72ef98", "message": "remove redundant tomcat configuration\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-24T14:23:10Z", "type": "commit"}, {"oid": "34a7117bcc408484ab9f92fb03ef23cf40cebb5e", "url": "https://github.com/zowe/api-layer/commit/34a7117bcc408484ab9f92fb03ef23cf40cebb5e", "message": "more changes from comments\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-24T15:11:34Z", "type": "commit"}, {"oid": "96d02fddbddf221301aa3299cbcd6f290b924010", "url": "https://github.com/zowe/api-layer/commit/96d02fddbddf221301aa3299cbcd6f290b924010", "message": "change from ERROR to WARNING\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-24T15:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NDMyMg==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r371074322", "body": "customGreeting doesn't have ```delayMs``` param", "bodyText": "customGreeting doesn't have delayMs param", "bodyHTML": "<p dir=\"auto\">customGreeting doesn't have <code>delayMs</code> param</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-27T06:10:45Z", "path": "discoverable-client/src/test/java/com/ca/mfaas/client/api/GreetingControllerTest.java", "diffHunk": "@@ -45,4 +45,29 @@ public void callGreetingEndpointWithDelay() throws Exception {\n             .andExpect(jsonPath(\"$.content\", is(\"Hello, \" + name + \"!\")));\n     }\n \n+    @Test\n+    public void callPlainGreeting() throws Exception {\n+\n+        this.mockMvc.perform(get(\"/api/v1/greeting\"))\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.content\", is(\"Hello, world!\")));\n+    }\n+\n+    @Test\n+    public void callGreetingWithoutQuery() throws Exception {\n+        String name = \"Petr\";\n+\n+        this.mockMvc.perform(get(\"/api/v1/\" + name + \"/greeting\"))\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.content\", is(\"Hello, \" + name + \"!\")));\n+    }\n+\n+    @Test\n+    public void callGreetingWithoutQueryWithDelay() throws Exception {", "originalCommit": "96d02fddbddf221301aa3299cbcd6f290b924010", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NDcxOA==", "url": "https://github.com/zowe/api-layer/pull/478#discussion_r371074718", "body": "customGreeting doesn't have any query param.", "bodyText": "customGreeting doesn't have any query param.", "bodyHTML": "<p dir=\"auto\">customGreeting doesn't have any query param.</p>", "author": "ilkinabdullayev", "createdAt": "2020-01-27T06:12:59Z", "path": "discoverable-client/src/test/java/com/ca/mfaas/client/api/GreetingControllerTest.java", "diffHunk": "@@ -45,4 +45,29 @@ public void callGreetingEndpointWithDelay() throws Exception {\n             .andExpect(jsonPath(\"$.content\", is(\"Hello, \" + name + \"!\")));\n     }\n \n+    @Test\n+    public void callPlainGreeting() throws Exception {\n+\n+        this.mockMvc.perform(get(\"/api/v1/greeting\"))\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.content\", is(\"Hello, world!\")));\n+    }\n+\n+    @Test\n+    public void callGreetingWithoutQuery() throws Exception {", "originalCommit": "96d02fddbddf221301aa3299cbcd6f290b924010", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f08bc14be84ceb601df203dc4c915917af0eeabe", "url": "https://github.com/zowe/api-layer/commit/f08bc14be84ceb601df203dc4c915917af0eeabe", "message": "Minor changes: greeting test + discoverable client ui\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>", "committedDate": "2020-01-27T12:08:26Z", "type": "commit"}]}