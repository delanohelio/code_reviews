{"pr_number": 393, "pr_title": "eliminate the ResourceTraversal class", "pr_author": "carlosmunoz", "pr_createdAt": "2020-08-30T22:06:12Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/393", "timeline": [{"oid": "034e53aad1b5a7af7cb7660fffb15698e4988176", "url": "https://github.com/redhataccess/pantheon/commit/034e53aad1b5a7af7cb7660fffb15698e4988176", "message": "rebase onto latest master", "committedDate": "2020-09-03T12:05:25Z", "type": "forcePushed"}, {"oid": "d21bf8aa56d73066c437f5852ba45f82c87891d1", "url": "https://github.com/redhataccess/pantheon/commit/d21bf8aa56d73066c437f5852ba45f82c87891d1", "message": "refactoring Child and ChildImpl classes\n\nall functionality remains the same", "committedDate": "2020-11-23T15:27:34Z", "type": "commit"}, {"oid": "51c943835e2b6da2537fc0b1f186929694708b4c", "url": "https://github.com/redhataccess/pantheon/commit/51c943835e2b6da2537fc0b1f186929694708b4c", "message": "Add traversal methods to the Child class\n\nalso add a series of null object classes to facilitate null-safe navigation", "committedDate": "2020-11-23T16:01:57Z", "type": "commit"}, {"oid": "8ad3fa0ec19921a3804833a6d4784d0c8b7da648", "url": "https://github.com/redhataccess/pantheon/commit/8ad3fa0ec19921a3804833a6d4784d0c8b7da648", "message": "add documentation to the NullObjects class", "committedDate": "2020-11-23T16:07:18Z", "type": "commit"}, {"oid": "5968a2c6f725413e998048f3858ab81ba7daf656", "url": "https://github.com/redhataccess/pantheon/commit/5968a2c6f725413e998048f3858ab81ba7daf656", "message": "remove the Child.traverse() method.\n\nReplace all uses of this method with the new Child apis.", "committedDate": "2020-11-23T16:11:28Z", "type": "commit"}, {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480", "url": "https://github.com/redhataccess/pantheon/commit/1ead9c636484d33d92ff39c1530a4c7820250480", "message": "remote the ResourceTraversal class and replace uses with the new Child methods", "committedDate": "2020-11-23T16:32:47Z", "type": "commit"}, {"oid": "1ead9c636484d33d92ff39c1530a4c7820250480", "url": "https://github.com/redhataccess/pantheon/commit/1ead9c636484d33d92ff39c1530a4c7820250480", "message": "remote the ResourceTraversal class and replace uses with the new Child methods", "committedDate": "2020-11-23T16:32:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3NzMwNw==", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r533677307", "body": "I think this warrants some further explanation. It's easy to think that the `isPresent()` call applies to the child, when I think this must apply to the parent.\r\n\r\nI realized this when I was trying to get to the bottom of why your changes help to make things null-safe. For example, if you have this chain:\r\n```\r\nChild.from(A)\r\n.toChild(B)\r\n.toChild(C)\r\n.toChild(D)\r\n.toChild(E)\r\n.getAsOptional()\r\n````\r\n...and let's say that you get a null on C, then what the heck stops us from getting an NPE on the call to D?\r\n\r\nI guess the answer must be that there's some code that makes sure that once C becomes a NullChild, then the call to get D must also return a NullChild, and the same for the call down into E. The code that I have attached this comment to must be what does that. But like I said, it's easy to misread at first glance, so if I'm right then I'd like to request *something* that makes this look less innocuous and more critically important (which I believe it is). Maybe some enhanced javadoc, or some `// INLINE COMMENTS IN ALL CAPS` or something - whatever you think would be most fitting.", "bodyText": "I think this warrants some further explanation. It's easy to think that the isPresent() call applies to the child, when I think this must apply to the parent.\nI realized this when I was trying to get to the bottom of why your changes help to make things null-safe. For example, if you have this chain:\nChild.from(A)\n.toChild(B)\n.toChild(C)\n.toChild(D)\n.toChild(E)\n.getAsOptional()\n\n...and let's say that you get a null on C, then what the heck stops us from getting an NPE on the call to D?\nI guess the answer must be that there's some code that makes sure that once C becomes a NullChild, then the call to get D must also return a NullChild, and the same for the call down into E. The code that I have attached this comment to must be what does that. But like I said, it's easy to misread at first glance, so if I'm right then I'd like to request something that makes this look less innocuous and more critically important (which I believe it is). Maybe some enhanced javadoc, or some // INLINE COMMENTS IN ALL CAPS or something - whatever you think would be most fitting.", "bodyHTML": "<p dir=\"auto\">I think this warrants some further explanation. It's easy to think that the <code>isPresent()</code> call applies to the child, when I think this must apply to the parent.</p>\n<p dir=\"auto\">I realized this when I was trying to get to the bottom of why your changes help to make things null-safe. For example, if you have this chain:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Child.from(A)\n.toChild(B)\n.toChild(C)\n.toChild(D)\n.toChild(E)\n.getAsOptional()\"><pre><code>Child.from(A)\n.toChild(B)\n.toChild(C)\n.toChild(D)\n.toChild(E)\n.getAsOptional()\n</code></pre></div>\n<p dir=\"auto\">...and let's say that you get a null on C, then what the heck stops us from getting an NPE on the call to D?</p>\n<p dir=\"auto\">I guess the answer must be that there's some code that makes sure that once C becomes a NullChild, then the call to get D must also return a NullChild, and the same for the call down into E. The code that I have attached this comment to must be what does that. But like I said, it's easy to misread at first glance, so if I'm right then I'd like to request <em>something</em> that makes this look less innocuous and more critically important (which I believe it is). Maybe some enhanced javadoc, or some <code>// INLINE COMMENTS IN ALL CAPS</code> or something - whatever you think would be most fitting.</p>", "author": "benradey", "createdAt": "2020-12-01T19:46:51Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.\n+     * @param childAccessor A function which given a {@link SlingModel} type, will\n+     *                      yield a child\n      * @param <R>\n-     * @return An optional indicating the result of the operation. If the operation\n-     * returns null, or if the value of this child was not present in the first place,\n-     * this returns an empty Optional\n-     * @deprecated Use {@link ResourceTraversal#traverseFrom(SlingModel)}\n-     * for safe resource traversals\n+     * @return A {@link Child} (may be non-existent) as indicated by the accessor.\n      */\n-    @Deprecated\n-    <R> Optional<R> map(Function<? super T, ? extends R> func);\n+    default <R extends SlingModel> Child<R> toChild(Function<? super T, Child<R>> childAccessor) {\n+        if(isPresent()) {\n+            return childAccessor.apply(get());\n+        }\n+        return (Child<R>) NullObjects.nullChild();\n+    }", "originalCommit": "1ead9c636484d33d92ff39c1530a4c7820250480", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNzIwMQ==", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r533707201", "bodyText": "You are correct in your interpretation. This code is applying the Null Object pattern (https://en.wikipedia.org/wiki/Null_object_pattern) to ensure the null-safety. So let me make a few points which may clarify your questions:\n\nIn line 64 above, the call to isPresent() is done on the parent (aka the current node in the navigation). Perhaps it would be more self-explanatory to replace that with this.isPresent().\nLine 67 above is where the \"magic\" begins. If the current node is not present, then any child will inevitably not exist either, and so a NullChild is returned every time.\nThe code never throws an NPE because it never returns a null, instead it returns a NullChild which has some specific behaviours to represent the fact that it is an empty node.\n\nHappy to add more context and javadocs, just let me know where so I can do it in the right places where things were not clear. It's hard to identify those when you're the author.", "author": "carlosmunoz", "createdAt": "2020-12-01T20:40:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3NzMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MjI4Nw==", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r536172287", "body": "```suggestion\r\n     * Navigates to the {@link Child} provided by an accessor function.\r\n     * Uses the Null Object pattern to avoid throwing an NPE in a long chain of navigation.\r\n     * For example:\r\n     * Child.from(A)\r\n     * .toChild(B)\r\n     * .toChild(C)\r\n     * .toChild(D)\r\n     * .toChild(E)\r\n     * .getAsOptional()\r\n     * If C does not exist, the chain will not throw an exception because the nullChild will be returned for the remainder of the calls.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Navigates to the {@link Child} provided by an accessor function.\n          \n          \n            \n                 * Navigates to the {@link Child} provided by an accessor function.\n          \n          \n            \n                 * Uses the Null Object pattern to avoid throwing an NPE in a long chain of navigation.\n          \n          \n            \n                 * For example:\n          \n          \n            \n                 * Child.from(A)\n          \n          \n            \n                 * .toChild(B)\n          \n          \n            \n                 * .toChild(C)\n          \n          \n            \n                 * .toChild(D)\n          \n          \n            \n                 * .toChild(E)\n          \n          \n            \n                 * .getAsOptional()\n          \n          \n            \n                 * If C does not exist, the chain will not throw an exception because the nullChild will be returned for the remainder of the calls.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Navigates</span> to the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Child</span>} provided by an accessor function.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Navigates</span> to the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Child</span>} provided by an accessor function.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Uses</span> the <span class=\"pl-smi\">Null</span> <span class=\"pl-smi\">Object</span> pattern to avoid throwing an <span class=\"pl-c1\">NPE</span> in a <span class=\"pl-k\">long</span> chain of navigation.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">For</span> example<span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Child</span><span class=\"pl-k\">.</span>from(<span class=\"pl-smi\">A</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> .toChild(<span class=\"pl-smi\">B</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> .toChild(<span class=\"pl-smi\">C</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"63\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> .toChild(<span class=\"pl-smi\">D</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"64\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> .toChild(<span class=\"pl-smi\">E</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"65\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> .getAsOptional()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"66\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">If</span> <span class=\"pl-smi\">C</span> does not exist, the chain will not <span class=\"pl-k\">throw</span> an exception because the nullChild will be returned <span class=\"pl-k\">for</span> the remainder of the calls.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benradey", "createdAt": "2020-12-04T15:17:03Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.", "originalCommit": "1ead9c636484d33d92ff39c1530a4c7820250480", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MzIyOQ==", "url": "https://github.com/redhataccess/pantheon/pull/393#discussion_r536173229", "body": "```suggestion\r\n        if(isPresent()) {  // <-- Applies to the parent (aka the current node in navigation)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(isPresent()) {\n          \n          \n            \n                    if(isPresent()) {  // <-- Applies to the parent (aka the current node in navigation)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span>(isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span>(isPresent()) {<span class=\"x x-first\">  </span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> &lt;-- Applies to the parent (aka the current node in navigation)</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benradey", "createdAt": "2020-12-04T15:18:16Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java", "diffHunk": "@@ -37,28 +41,92 @@\n      * Indicates if the child exists.\n      * @return True, if the child exists. False otherwise.\n      */\n-    boolean isPresent();\n+    default boolean isPresent() {\n+        return get() != null;\n+    }\n \n     /**\n-     * Provides a null-safe way to operate on the value of the child, and return an\n-     * {@link Optional} with the result of the operation. This allowes the caller to\n-     * continue to operate in a null-safe fashion.\n-     * @param func The function to apply to the value\n+     * Convert this Child to an {@link Optional}\n+     * @return An {@link Optional} with the contained value.\n+     */\n+    default Optional<T> asOptional() {\n+        return Optional.ofNullable(get());\n+    }\n+\n+    /**\n+     * Navigates to the {@link Child} provided by an accessor function.\n+     * @param childAccessor A function which given a {@link SlingModel} type, will\n+     *                      yield a child\n      * @param <R>\n-     * @return An optional indicating the result of the operation. If the operation\n-     * returns null, or if the value of this child was not present in the first place,\n-     * this returns an empty Optional\n-     * @deprecated Use {@link ResourceTraversal#traverseFrom(SlingModel)}\n-     * for safe resource traversals\n+     * @return A {@link Child} (may be non-existent) as indicated by the accessor.\n      */\n-    @Deprecated\n-    <R> Optional<R> map(Function<? super T, ? extends R> func);\n+    default <R extends SlingModel> Child<R> toChild(Function<? super T, Child<R>> childAccessor) {\n+        if(isPresent()) {", "originalCommit": "1ead9c636484d33d92ff39c1530a4c7820250480", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "426268444daf02cf0b751fbf22d5ee76e0fa1036", "url": "https://github.com/redhataccess/pantheon/commit/426268444daf02cf0b751fbf22d5ee76e0fa1036", "message": "Update pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java\n\nCo-authored-by: Ben Radey <benr@redhat.com>", "committedDate": "2020-12-04T15:19:07Z", "type": "commit"}, {"oid": "ae7c27e7228002eeafae1a68d63a96393f422410", "url": "https://github.com/redhataccess/pantheon/commit/ae7c27e7228002eeafae1a68d63a96393f422410", "message": "Update pantheon-bundle/src/main/java/com/redhat/pantheon/model/api/Child.java\n\nCo-authored-by: Ben Radey <benr@redhat.com>", "committedDate": "2020-12-04T15:19:13Z", "type": "commit"}]}