{"pr_number": 2429, "pr_title": "Fallback to `getDefaultGateway()` if \"bridge\" is unavailable.", "pr_author": "bsideup", "pr_createdAt": "2020-03-13T09:42:36Z", "pr_url": "https://github.com/testcontainers/testcontainers-java/pull/2429", "timeline": [{"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b", "url": "https://github.com/testcontainers/testcontainers-java/commit/0c4606d2e476cf18393d1f147ed63bd9b002c02b", "message": "Fallback to `getDefaultGateway()` if \"bridge\" is unavailable.\n\nFixes #2239", "committedDate": "2020-03-13T09:40:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392173178", "body": "```suggestion\r\n                        .orElseGet(() -> DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .orElseGet(() -> {\n          \n          \n            \n                                        return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n          \n          \n            \n                                    });\n          \n          \n            \n                                    .orElseGet(() -> DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"221\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        .orElseGet(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"222\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">DockerClientConfigUtils</span><span class=\"pl-k\">.</span>getDefaultGateway()<span class=\"pl-k\">.</span>orElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"223\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"221\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        .orElseGet(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">DockerClientConfigUtils</span><span class=\"pl-k\">.</span>getDefaultGateway()<span class=\"pl-k\">.</span>orElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "NersesAM", "createdAt": "2020-03-13T11:29:12Z", "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "originalCommit": "0c4606d2e476cf18393d1f147ed63bd9b002c02b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4MzM3NA==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392183374", "bodyText": "No, thank you, it is done for readability :)", "author": "bsideup", "createdAt": "2020-03-13T11:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzOTMzMw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392239333", "bodyText": "ok, thought you had multiline lambda to begin with, but ended up in oneliner later on forgetting to remove the braces :)", "author": "NersesAM", "createdAt": "2020-03-13T13:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0NTc1Mw==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392245753", "bodyText": "ah, no, just I don't like \"long short lambdas\" (lol). Thanks for suggesting anyways! \ud83d\udc4d", "author": "bsideup", "createdAt": "2020-03-13T14:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2MDk3NQ==", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392260975", "bodyText": "long short lambdas\n\ud83e\udd23", "author": "NersesAM", "createdAt": "2020-03-13T14:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}], "type": "inlineReview"}]}