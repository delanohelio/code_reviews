{"pr_number": 15369, "pr_title": "Introduce node IP address pool", "pr_author": "hakonhall", "pr_createdAt": "2020-11-17T14:05:59Z", "pr_url": "https://github.com/vespa-engine/vespa/pull/15369", "timeline": [{"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "url": "https://github.com/vespa-engine/vespa/commit/766e13e4b820f53acd4886d763e7fbb9cbc11601", "message": "Introduce node IP address pool\n\nA host that is supposed to run containers has a non-empty IP pool: A set of\nIPv4 and/or IPv6 addresses that can be assigned to containers.\n\nThis PR adds a list of hostnames to this pool.  The intent is that the\nhostnames and IPs match through resolving, but resolution may not yet be\navailable (until DNS changes propagate).\n\nFor now, only a list of hostnames are specified.  We may want to specify\n(hostname, IP address) pairs or (hostname, IPv4, IPv6) triplets later, and the\nserialization format allows for that by storing the hsotnames in an array of\nobjects, the object having a \"hostname\" field.\n\nHowever the REST API is kept simpler for now: it exposes and allows patching of\nan array of strings of a \"additionalHostnames\" field.", "committedDate": "2020-11-17T13:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525192950", "body": "Consider\r\n```suggestion\r\n    private List<Address> addressesFromSlime(Inspector object) {\r\n        return SlimeUtils.entriesStream(object.field(containersKey))\r\n                .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\r\n                .collect(Collectors.toList());\r\n    }\r\n```", "bodyText": "Consider\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    Inspector addressesField = object.field(containersKey);\n          \n          \n            \n                    if (addressesField.children() == 0)\n          \n          \n            \n                        return List.of();\n          \n          \n            \n                    List<Address> addresses = new ArrayList<>(addressesField.children());\n          \n          \n            \n                    addressesField.traverse((ArrayTraverser) (i, elem) ->\n          \n          \n            \n                            addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n          \n          \n            \n                    return addresses;\n          \n          \n            \n                }\n          \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    return SlimeUtils.entriesStream(object.field(containersKey))\n          \n          \n            \n                            .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\n          \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\">Consider</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"379\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Address</span>&gt;</span> addressesFromSlime(<span class=\"pl-smi\">Inspector</span> object) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"380\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Inspector</span> addressesField <span class=\"pl-k\">=</span> object<span class=\"pl-k\">.</span>field(containersKey);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"381\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (addressesField<span class=\"pl-k\">.</span>children() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"382\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">List</span><span class=\"pl-k\">.</span>of();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"383\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Address</span>&gt;</span> addresses <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>(addressesField<span class=\"pl-k\">.</span>children());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"384\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        addressesField<span class=\"pl-k\">.</span>traverse((<span class=\"pl-smi\">ArrayTraverser</span>) (i, elem) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"385\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                addresses<span class=\"pl-k\">.</span>add(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Address</span>(elem<span class=\"pl-k\">.</span>field(containerHostnameKey)<span class=\"pl-k\">.</span>asString())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"386\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> addresses;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"387\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"379\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Address</span>&gt;</span> addressesFromSlime(<span class=\"pl-smi\">Inspector</span> object) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"380\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">SlimeUtils</span><span class=\"pl-k\">.</span>entriesStream(object<span class=\"pl-k\">.</span>field(containersKey))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"381\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .map(elem <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Address</span>(elem<span class=\"pl-k\">.</span>field(containerHostnameKey)<span class=\"pl-k\">.</span>asString()))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"382\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toList());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"383\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "freva", "createdAt": "2020-11-17T14:24:06Z", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "diffHunk": "@@ -358,6 +371,16 @@ private ClusterMembership clusterMembershipFromSlime(Inspector object) {\n         return ipAddresses.build();\n     }\n \n+    private List<Address> addressesFromSlime(Inspector object) {\n+        Inspector addressesField = object.field(containersKey);\n+        if (addressesField.children() == 0)\n+            return List.of();\n+        List<Address> addresses = new ArrayList<>(addressesField.children());\n+        addressesField.traverse((ArrayTraverser) (i, elem) ->\n+                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n+        return addresses;\n+    }", "originalCommit": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxMzE2MQ==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525213161", "bodyText": "Sure", "author": "hakonhall", "createdAt": "2020-11-17T14:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525195876", "body": "Disable wildcard imports for `javax.swing.*`", "bodyText": "Disable wildcard imports for javax.swing.*", "bodyHTML": "<p dir=\"auto\">Disable wildcard imports for <code>javax.swing.*</code></p>", "author": "freva", "createdAt": "2020-11-17T14:27:47Z", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "diffHunk": "@@ -11,8 +11,9 @@\n import com.yahoo.vespa.hosted.provision.NodeList;\n import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n+import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.JFrame;\n+import javax.swing.*;", "originalCommit": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNjM5OQ==", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525206399", "bodyText": "huh, that was a weird exception in IntelliJ - removed and fixed.", "author": "hakonhall", "createdAt": "2020-11-17T14:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng=="}], "type": "inlineReview"}, {"oid": "34384b2927e88a6affa6e1d754fb7b8b5284dc06", "url": "https://github.com/vespa-engine/vespa/commit/34384b2927e88a6affa6e1d754fb7b8b5284dc06", "message": "Replace on-demand import", "committedDate": "2020-11-17T14:41:12Z", "type": "commit"}, {"oid": "dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "url": "https://github.com/vespa-engine/vespa/commit/dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "message": "Update node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\n\nCo-authored-by: Valerij Fredriksen <freva@users.noreply.github.com>", "committedDate": "2020-11-17T14:50:12Z", "type": "commit"}, {"oid": "892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "url": "https://github.com/vespa-engine/vespa/commit/892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "message": "Add import", "committedDate": "2020-11-17T16:56:04Z", "type": "commit"}]}