{"pr_number": 809, "pr_title": "XRDDEV-1402 add subject alternative names field to certificate handling", "pr_author": "iluwatar", "pr_createdAt": "2020-12-15T07:13:12Z", "pr_url": "https://github.com/nordic-institute/X-Road/pull/809", "timeline": [{"oid": "8ff66d581f13fc71c6bc9efd22e363bf91cf25be", "url": "https://github.com/nordic-institute/X-Road/commit/8ff66d581f13fc71c6bc9efd22e363bf91cf25be", "message": "XRDDEV-1402 add subject alternative names field to certificate handling", "committedDate": "2020-12-15T07:10:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNDAwMg==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r543204002", "body": "These could be constants", "bodyText": "These could be constants", "bodyHTML": "<p dir=\"auto\">These could be constants</p>", "author": "jhyoty", "createdAt": "2020-12-15T09:58:57Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,37 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    @SuppressWarnings(\"checkstyle:magicnumber\")\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(0, 3, 5));", "originalCommit": "8ff66d581f13fc71c6bc9efd22e363bf91cf25be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNTI0Mw==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r543205243", "body": "Consider using StringBuilder", "bodyText": "Consider using StringBuilder", "bodyHTML": "<p dir=\"auto\">Consider using StringBuilder</p>", "author": "jhyoty", "createdAt": "2020-12-15T10:00:45Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,37 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    @SuppressWarnings(\"checkstyle:magicnumber\")\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(0, 3, 5));\n+        String result = \"\";", "originalCommit": "8ff66d581f13fc71c6bc9efd22e363bf91cf25be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMzg3OQ==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r543223879", "body": "It is a good practice to use IANA reserved example domain names in documentation and tests (see e.g. https://tools.ietf.org/html/rfc2606#section-3).", "bodyText": "It is a good practice to use IANA reserved example domain names in documentation and tests (see e.g. https://tools.ietf.org/html/rfc2606#section-3).", "bodyHTML": "<p dir=\"auto\">It is a good practice to use IANA reserved example domain names in documentation and tests (see e.g. <a href=\"https://tools.ietf.org/html/rfc2606#section-3\" rel=\"nofollow\">https://tools.ietf.org/html/rfc2606#section-3</a>).</p>", "author": "jhyoty", "createdAt": "2020-12-15T10:26:44Z", "path": "src/common-util/src/test/java/ee/ria/xroad/common/util/CertUtilsTest.java", "diffHunk": "@@ -118,4 +120,50 @@ public void testCreatePkcs12() throws Exception {\n         Path path = Paths.get(pkcsPath);\n         assertTrue(Files.exists(path));\n     }\n+\n+    @Test\n+    public void testGetSubjectAlternativeNamesEmpty() throws CertificateException, IOException {\n+        final String certPath = \"src/test/resources/cert_empty.pem\";\n+        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+        try (FileInputStream in = new FileInputStream(certPath)) {\n+            X509Certificate cert = (X509Certificate) cf.generateCertificate(in);\n+            assertEquals(null, CertUtils.getSubjectAlternativeNames(cert));\n+        }\n+    }\n+\n+    @Test\n+    public void testGetSubjectAlternativeNamesSimple() throws CertificateException, IOException {\n+        final String certPath = \"src/test/resources/cert_simple.pem\";\n+        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+        try (FileInputStream in = new FileInputStream(certPath)) {\n+            X509Certificate cert = (X509Certificate) cf.generateCertificate(in);\n+            assertEquals(\"DNS:*.dev.acme.org\", CertUtils.getSubjectAlternativeNames(cert));", "originalCommit": "8ff66d581f13fc71c6bc9efd22e363bf91cf25be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "507ce6fb23e61cdb1fefa761d85cd6fb1e869d55", "url": "https://github.com/nordic-institute/X-Road/commit/507ce6fb23e61cdb1fefa761d85cd6fb1e869d55", "message": "XRDDEV-1402 address review comments", "committedDate": "2020-12-15T13:12:19Z", "type": "commit"}, {"oid": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "url": "https://github.com/nordic-institute/X-Road/commit/b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "message": "Merge branch 'develop' into XRDDEV-1402", "committedDate": "2020-12-15T13:17:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDI2Nw==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544234267", "body": "This variable could be private static final constant field in the CertUtils class, no need to recreate it every time this function is executed.", "bodyText": "This variable could be private static final constant field in the CertUtils class, no need to recreate it every time this function is executed.", "bodyHTML": "<p dir=\"auto\">This variable could be private static final constant field in the CertUtils class, no need to recreate it every time this function is executed.</p>", "author": "jhyoty", "createdAt": "2020-12-16T11:47:39Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDM1Ng==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544234356", "body": "This variable could be private static final constant in the CertUtils class.", "bodyText": "This variable could be private static final constant in the CertUtils class.", "bodyHTML": "<p dir=\"auto\">This variable could be private static final constant in the CertUtils class.</p>", "author": "jhyoty", "createdAt": "2020-12-16T11:47:48Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        final int minIdx = 0;\n+        final int maxIdx = 8;\n+        final int othernameIdx = 0;\n+        final int x400Idx = 3;\n+        final int ediPartyNameIdx = 5;\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(othernameIdx, x400Idx,", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDU1NA==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544234554", "body": "Seem unnecessary", "bodyText": "Seem unnecessary", "bodyHTML": "<p dir=\"auto\">Seem unnecessary</p>", "author": "jhyoty", "createdAt": "2020-12-16T11:48:08Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        final int minIdx = 0;\n+        final int maxIdx = 8;\n+        final int othernameIdx = 0;\n+        final int x400Idx = 3;\n+        final int ediPartyNameIdx = 5;", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNTU0MQ==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544235541", "body": "Inefficient, turns the builder to a new string on every iteration.\r\n```suggestion\r\n                    if (builder.length() > 0) builder.append(\", \");\r\n```", "bodyText": "Inefficient, turns the builder to a new string on every iteration.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                String prefix = builder.toString().isEmpty() ? \"\" : \", \";\n          \n          \n            \n                                if (builder.length() > 0) builder.append(\", \");", "bodyHTML": "<p dir=\"auto\">Inefficient, turns the builder to a new string on every iteration.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi x x-first\">String</span><span class=\"x\"> prefix </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span>builder<span class=\"pl-k\">.</span><span class=\"x x-first\">toString()</span><span class=\"pl-k x\">.</span><span class=\"x\">isEmpty() </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k x x-first\">if</span><span class=\"x x-last\"> (</span>builder<span class=\"pl-k\">.</span><span class=\"x x-first\">length() </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">0</span><span class=\"x\">) builder</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">append(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jhyoty", "createdAt": "2020-12-16T11:49:49Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        final int minIdx = 0;\n+        final int maxIdx = 8;\n+        final int othernameIdx = 0;\n+        final int x400Idx = 3;\n+        final int ediPartyNameIdx = 5;\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(othernameIdx, x400Idx,\n+                ediPartyNameIdx));\n+        StringBuilder builder = new StringBuilder();\n+        Collection<List<?>> subjectAlternativeNames;\n+        try {\n+            subjectAlternativeNames = cert.getSubjectAlternativeNames();\n+        } catch (CertificateParsingException e) {\n+            throw new CodedException(ErrorCodes.X_INCORRECT_CERTIFICATE,\n+                    \"Failed parsing the certificate information\");\n+        }\n+        if (subjectAlternativeNames != null) {\n+            for (final List<?> sanItem : subjectAlternativeNames) {\n+                final Integer itemType = (Integer) sanItem.get(0);\n+                if (itemType >= minIdx && itemType <= maxIdx) {\n+                    String prefix = builder.toString().isEmpty() ? \"\" : \", \";", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNzIyMA==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544237220", "body": "```suggestion\r\n                    builder.append(fieldNames.get(itemType));\r\n                    builder.append(':');\r\n                    builder.append(unsupportedFields.contains(itemType) ? \"<unsupported>\" : (String) sanItem.get(1));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                String value = unsupportedFields.contains(itemType) ? \"<unsupported>\" : (String) sanItem.get(1);\n          \n          \n            \n                                builder.append(String.format(\"%s%s:%s\", prefix, fieldNames.get(itemType), value));\n          \n          \n            \n                                builder.append(fieldNames.get(itemType));\n          \n          \n            \n                                builder.append(':');\n          \n          \n            \n                                builder.append(unsupportedFields.contains(itemType) ? \"<unsupported>\" : (String) sanItem.get(1));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">String</span> value <span class=\"pl-k\">=</span> unsupportedFields<span class=\"pl-k\">.</span>contains(itemType) <span class=\"pl-k\">?</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;unsupported&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">:</span> (<span class=\"pl-smi\">String</span>) sanItem<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    builder<span class=\"pl-k\">.</span>append(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s%s:%s<span class=\"pl-pds\">\"</span></span>, prefix, fieldNames<span class=\"pl-k\">.</span>get(itemType), value));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    builder<span class=\"pl-k\">.</span>append(fieldNames<span class=\"pl-k\">.</span>get(itemType));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    builder<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>:<span class=\"pl-pds\">'</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    builder<span class=\"pl-k\">.</span>append(unsupportedFields<span class=\"pl-k\">.</span>contains(itemType) <span class=\"pl-k\">?</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;unsupported&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">:</span> (<span class=\"pl-smi\">String</span>) sanItem<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jhyoty", "createdAt": "2020-12-16T11:52:28Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        final int minIdx = 0;\n+        final int maxIdx = 8;\n+        final int othernameIdx = 0;\n+        final int x400Idx = 3;\n+        final int ediPartyNameIdx = 5;\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(othernameIdx, x400Idx,\n+                ediPartyNameIdx));\n+        StringBuilder builder = new StringBuilder();\n+        Collection<List<?>> subjectAlternativeNames;\n+        try {\n+            subjectAlternativeNames = cert.getSubjectAlternativeNames();\n+        } catch (CertificateParsingException e) {\n+            throw new CodedException(ErrorCodes.X_INCORRECT_CERTIFICATE,\n+                    \"Failed parsing the certificate information\");\n+        }\n+        if (subjectAlternativeNames != null) {\n+            for (final List<?> sanItem : subjectAlternativeNames) {\n+                final Integer itemType = (Integer) sanItem.get(0);\n+                if (itemType >= minIdx && itemType <= maxIdx) {\n+                    String prefix = builder.toString().isEmpty() ? \"\" : \", \";\n+                    String value = unsupportedFields.contains(itemType) ? \"<unsupported>\" : (String) sanItem.get(1);\n+                    builder.append(String.format(\"%s%s:%s\", prefix, fieldNames.get(itemType), value));", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzODUyNw==", "url": "https://github.com/nordic-institute/X-Road/pull/809#discussion_r544238527", "body": "```suggestion\r\n        return builder.length() == 0 ? null : builder.toString();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return builder.toString().isEmpty() ? null : builder.toString();\n          \n          \n            \n                    return builder.length() == 0 ? null : builder.toString();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> builder<span class=\"pl-k\">.</span><span class=\"x x-first\">toString()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isEmpty()</span> <span class=\"pl-k\">?</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">:</span> builder<span class=\"pl-k\">.</span>toString();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> builder<span class=\"pl-k\">.</span><span class=\"x x-first\">length() </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span> <span class=\"pl-k\">?</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">:</span> builder<span class=\"pl-k\">.</span>toString();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jhyoty", "createdAt": "2020-12-16T11:54:44Z", "path": "src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java", "diffHunk": "@@ -136,6 +139,42 @@ private static String getPrincipalCommonName(X500Principal principal) {\n         return cn;\n     }\n \n+    /**\n+     * Reads subject alternative names from certificate and returns its string representation\n+     * @param cert certificate for which to get the subject alternative names\n+     * @return string representation of the subject alternative names\n+     */\n+    public static String getSubjectAlternativeNames(X509Certificate cert) {\n+        List<String> fieldNames = Collections.unmodifiableList(\n+                Arrays.asList(\"othername\", \"email\", \"DNS\", \"x400\", \"DirName\", \"ediPartyName\",\n+                        \"URI\", \"IP Address\", \"Registered ID\"));\n+        final int minIdx = 0;\n+        final int maxIdx = 8;\n+        final int othernameIdx = 0;\n+        final int x400Idx = 3;\n+        final int ediPartyNameIdx = 5;\n+        List<Integer> unsupportedFields = Collections.unmodifiableList(Arrays.asList(othernameIdx, x400Idx,\n+                ediPartyNameIdx));\n+        StringBuilder builder = new StringBuilder();\n+        Collection<List<?>> subjectAlternativeNames;\n+        try {\n+            subjectAlternativeNames = cert.getSubjectAlternativeNames();\n+        } catch (CertificateParsingException e) {\n+            throw new CodedException(ErrorCodes.X_INCORRECT_CERTIFICATE,\n+                    \"Failed parsing the certificate information\");\n+        }\n+        if (subjectAlternativeNames != null) {\n+            for (final List<?> sanItem : subjectAlternativeNames) {\n+                final Integer itemType = (Integer) sanItem.get(0);\n+                if (itemType >= minIdx && itemType <= maxIdx) {\n+                    String prefix = builder.toString().isEmpty() ? \"\" : \", \";\n+                    String value = unsupportedFields.contains(itemType) ? \"<unsupported>\" : (String) sanItem.get(1);\n+                    builder.append(String.format(\"%s%s:%s\", prefix, fieldNames.get(itemType), value));\n+                }\n+            }\n+        }\n+        return builder.toString().isEmpty() ? null : builder.toString();", "originalCommit": "b01dfa0ea1e877f50dbd7bc7ba487c50ade741be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e0d505deb708020f0e055ef0d8220bdc9847c5b", "url": "https://github.com/nordic-institute/X-Road/commit/8e0d505deb708020f0e055ef0d8220bdc9847c5b", "message": "XRDDEV-1402 refactoring", "committedDate": "2020-12-16T12:43:11Z", "type": "commit"}, {"oid": "6cd3fb7ed4849cb81e8814b796b5598270ef2779", "url": "https://github.com/nordic-institute/X-Road/commit/6cd3fb7ed4849cb81e8814b796b5598270ef2779", "message": "Update src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java\n\nCo-authored-by: Jarkko Hy\u00f6ty <jhyoty@users.noreply.github.com>", "committedDate": "2020-12-16T12:44:47Z", "type": "commit"}, {"oid": "c03c7fb45e41be7f502e6bc90df94ba67c029828", "url": "https://github.com/nordic-institute/X-Road/commit/c03c7fb45e41be7f502e6bc90df94ba67c029828", "message": "Update src/common-util/src/main/java/ee/ria/xroad/common/util/CertUtils.java\n\nCo-authored-by: Jarkko Hy\u00f6ty <jhyoty@users.noreply.github.com>", "committedDate": "2020-12-16T12:45:33Z", "type": "commit"}, {"oid": "6449fc41961ca703ffed5892d1381d460c45dca8", "url": "https://github.com/nordic-institute/X-Road/commit/6449fc41961ca703ffed5892d1381d460c45dca8", "message": "XRDDEV-1402 refactor", "committedDate": "2020-12-16T12:50:20Z", "type": "commit"}]}