{"pr_number": 1387, "pr_title": "Fixing PKCE to work when multiple callback URLs", "pr_author": "tharakawijekoon", "pr_createdAt": "2020-05-28T13:54:06Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387", "timeline": [{"oid": "ea587edabbf724088b46f665890eb68e64f7774b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea587edabbf724088b46f665890eb68e64f7774b", "message": "fix PKCE does not work when multiple callback URLs", "committedDate": "2020-05-28T13:49:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431867798", "body": "Shall we define a private method like validateCallbackURI(String callbackURI, OAuthAppDO oauth) and move the callback validation logic there?\r\n\r\nIt would be much easy to refactor in the future when we support multiple callbacks in the future", "bodyText": "Shall we define a private method like validateCallbackURI(String callbackURI, OAuthAppDO oauth) and move the callback validation logic there?\nIt would be much easy to refactor in the future when we support multiple callbacks in the future", "bodyHTML": "<p dir=\"auto\">Shall we define a private method like validateCallbackURI(String callbackURI, OAuthAppDO oauth) and move the callback validation logic there?</p>\n<p dir=\"auto\">It would be much easy to refactor in the future when we support multiple callbacks in the future</p>", "author": "mefarazath", "createdAt": "2020-05-28T14:14:43Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (regexp != null && callbackURI.matches(regexp) || appDO.getCallbackUrl().equals(callbackURI)) {", "originalCommit": "ea587edabbf724088b46f665890eb68e64f7774b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyNDQ3Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431924476", "bodyText": "ok added a private method", "author": "tharakawijekoon", "createdAt": "2020-05-28T15:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA=="}], "type": "inlineReview"}, {"oid": "68f73123c860a8639752a1a814bd78cbe1978b68", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/68f73123c860a8639752a1a814bd78cbe1978b68", "message": "moving callback validation logic to seperate method", "committedDate": "2020-05-28T15:21:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990204", "body": "Since regex is derived from app config, shall we that logic also into the private method please?", "bodyText": "Since regex is derived from app config, shall we that logic also into the private method please?", "bodyHTML": "<p dir=\"auto\">Since regex is derived from app config, shall we that logic also into the private method please?</p>", "author": "mefarazath", "createdAt": "2020-05-28T17:04:24Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {", "originalCommit": "68f73123c860a8639752a1a814bd78cbe1978b68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDQ2Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990462", "bodyText": "So basically validateCallbackURI logic only takes the callbackURI from the request and appDO object", "author": "mefarazath", "createdAt": "2020-05-28T17:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269407", "bodyText": "done", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}], "type": "inlineReview"}, {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/00c5e24ddb6a8c63cde2368f385c36a3041b3347", "message": "refactoring code", "committedDate": "2020-05-28T20:44:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253806", "body": "```suggestion\r\n    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n          \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> validateCallbackURI(<span class=\"pl-smi\">String</span> callbackURI, <span class=\"pl-smi\">OAuthAppDO</span> <span class=\"x x-first x-last\">oauth</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> validateCallbackURI(<span class=\"pl-smi\">String</span> callbackURI, <span class=\"pl-smi\">OAuthAppDO</span> <span class=\"x x-first x-last\">oauthApp</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-05-29T04:49:33Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTM3NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269374", "bodyText": "changed", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253859", "body": "```suggestion\r\n        String registeredCallbackUrl = oauthApp.getCallbackUrl();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String registeredCallbackUrl = oauth.getCallbackUrl();\n          \n          \n            \n                    String registeredCallbackUrl = oauthApp.getCallbackUrl();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> registeredCallbackUrl <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">oauth</span><span class=\"pl-k\">.</span>getCallbackUrl();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> registeredCallbackUrl <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">oauthApp</span><span class=\"pl-k\">.</span>getCallbackUrl();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-05-29T04:49:47Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauth.getCallbackUrl();", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTMyOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269328", "bodyText": "changed", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253995", "body": "Let's add a block comment", "bodyText": "Let's add a block comment", "bodyHTML": "<p dir=\"auto\">Let's add a block comment</p>", "author": "mefarazath", "createdAt": "2020-05-29T04:50:26Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTI3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269270", "bodyText": "added", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ=="}], "type": "inlineReview"}, {"oid": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0feecee3999a6fe5f9b0f385036087cd2d015a57", "message": "minor changes suggested", "committedDate": "2020-05-29T05:50:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432308341", "body": "```suggestion\r\n        return (regexp != null && callbackURI.matches(regexp)) || registeredCallbackUrl.equals(callbackURI);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);\n          \n          \n            \n                    return (regexp != null && callbackURI.matches(regexp)) || registeredCallbackUrl.equals(callbackURI);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> regexp <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> callbackURI<span class=\"pl-k\">.</span>matches(regexp) <span class=\"pl-k\">||</span> registeredCallbackUrl<span class=\"pl-k\">.</span>equals(callbackURI);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\">(</span>regexp <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> callbackURI<span class=\"pl-k\">.</span>matches(regexp<span class=\"x x-first x-last\">)</span>) <span class=\"pl-k\">||</span> registeredCallbackUrl<span class=\"pl-k\">.</span>equals(callbackURI);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-05-29T07:38:29Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,20 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n+        if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n+            regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n+        }\n+        return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);", "originalCommit": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNzMzMw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432317333", "bodyText": "ok done", "author": "tharakawijekoon", "createdAt": "2020-05-29T07:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ=="}], "type": "inlineReview"}, {"oid": "9a2e83ead683b18c7135992654e165062dc438f1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/9a2e83ead683b18c7135992654e165062dc438f1", "message": "few more minor changes", "committedDate": "2020-05-29T07:55:22Z", "type": "commit"}]}