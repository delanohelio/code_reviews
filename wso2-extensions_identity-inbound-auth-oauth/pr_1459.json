{"pr_number": 1459, "pr_title": "Add new claim \"aut\" for authorized user type in JWT Access Tokn", "pr_author": "dushaniw", "pr_createdAt": "2020-09-25T09:41:13Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459", "timeline": [{"oid": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9", "message": "fix https://github.com/wso2/product-is/issues/9366 : add new claim \"aut\" for authorized user type", "committedDate": "2020-09-25T09:26:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1MDUzMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520350531", "body": "We have \r\n        AccessTokenDO accessTokenDO = (AccessTokenDO) messageContext.getProperty(\"AccessTokenDO\");\r\n\r\nat the beginning of the method. Can't we use that variable here?", "bodyText": "We have\nAccessTokenDO accessTokenDO = (AccessTokenDO) messageContext.getProperty(\"AccessTokenDO\");\nat the beginning of the method. Can't we use that variable here?", "bodyHTML": "<p dir=\"auto\">We have<br>\nAccessTokenDO accessTokenDO = (AccessTokenDO) messageContext.getProperty(\"AccessTokenDO\");</p>\n<p dir=\"auto\">at the beginning of the method. Can't we use that variable here?</p>", "author": "mefarazath", "createdAt": "2020-11-10T07:43:25Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,12 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (messageContext.getProperty(OAuthConstants.ACCESS_TOKEN_DO) != null &&", "originalCommit": "5c8c61d73f8064fdc72f7cbb97a7b4126c5af0e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwNzk0NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520607945", "bodyText": "fixed with 0d90782", "author": "dushaniw", "createdAt": "2020-11-10T14:33:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1MDUzMQ=="}], "type": "inlineReview"}, {"oid": "310db8039b9159fd17d81742176091921f0a8497", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/310db8039b9159fd17d81742176091921f0a8497", "message": "Merge branch 'master' of github.com:wso2-extensions/identity-inbound-auth-oauth", "committedDate": "2020-11-10T07:45:55Z", "type": "commit"}, {"oid": "0d9078223b61023395b613d0e075f1ef2f3845f7", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0d9078223b61023395b613d0e075f1ef2f3845f7", "message": "reuse AccessTokenDAO object", "committedDate": "2020-11-10T14:32:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzg0OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r520637848", "body": "Rather than adding it in this JWT, wouldn't it be better if we put this value in the introspection response?\r\n\r\nIs this JWT generator used in APIM context?", "bodyText": "Rather than adding it in this JWT, wouldn't it be better if we put this value in the introspection response?\nIs this JWT generator used in APIM context?", "bodyHTML": "<p dir=\"auto\">Rather than adding it in this JWT, wouldn't it be better if we put this value in the introspection response?</p>\n<p dir=\"auto\">Is this JWT generator used in APIM context?</p>", "author": "mefarazath", "createdAt": "2020-11-10T15:11:35Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/authcontext/JWTTokenGenerator.java", "diffHunk": "@@ -226,6 +227,10 @@ public void generateToken(OAuth2TokenValidationMessageContext messageContext) th\n         claimsSetBuilder.claim(API_GATEWAY_ID + \"/enduser\", authzUser);\n         //TODO: check setting audience\n \n+        if (accessTokenDO.getTokenType() != null) {", "originalCommit": "0d9078223b61023395b613d0e075f1ef2f3845f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0Njk3NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146975", "bodyText": "JWT generator is not used in the APIM context. We don't use this claim from the introspection response. However +1 to add it as a standard claim to introspection response. fixed with 66a2333", "author": "dushaniw", "createdAt": "2020-11-11T06:47:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzNzg0OA=="}], "type": "inlineReview"}, {"oid": "690092a91503d3141e87813057ea5bc052db0022", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/690092a91503d3141e87813057ea5bc052db0022", "message": "add 'aut' to IntrospectionResponse", "committedDate": "2020-11-11T06:29:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzMxNQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143315", "body": "```suggestion\r\n    public IntrospectionResponseBuilder setAuthorizedUserType(String authorizedUserType) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n          \n          \n            \n                public IntrospectionResponseBuilder setAuthorizedUserType(String authorizedUserType) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">IntrospectionResponseBuilder</span> setAuthorizedUserType(<span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">aut</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">IntrospectionResponseBuilder</span> setAuthorizedUserType(<span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">authorizedUserType</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-11-11T06:41:39Z", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {", "originalCommit": "690092a91503d3141e87813057ea5bc052db0022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjU2OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146568", "bodyText": "fixed with 66a2333", "author": "dushaniw", "createdAt": "2020-11-11T06:47:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzMxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzM4Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143383", "body": "```suggestion\r\n        if (StringUtils.isNotBlank(authorizedUserType)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (StringUtils.isNotBlank(aut)) {\n          \n          \n            \n                    if (StringUtils.isNotBlank(authorizedUserType)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>isNotBlank(<span class=\"x x-first x-last\">aut</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>isNotBlank(<span class=\"x x-first x-last\">authorizedUserType</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-11-11T06:41:52Z", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {", "originalCommit": "690092a91503d3141e87813057ea5bc052db0022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjQ2OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146468", "bodyText": "fixed with 66a2333", "author": "dushaniw", "createdAt": "2020-11-11T06:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzM4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzQ0Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521143447", "body": "```suggestion\r\n            parameters.put(IntrospectionResponse.AUT, authorizedUserType);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, aut);\n          \n          \n            \n                        parameters.put(IntrospectionResponse.AUT, authorizedUserType);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            parameters<span class=\"pl-k\">.</span>put(<span class=\"pl-smi\">IntrospectionResponse</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>AUT</span>, <span class=\"x x-first x-last\">aut</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            parameters<span class=\"pl-k\">.</span>put(<span class=\"pl-smi\">IntrospectionResponse</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>AUT</span>, <span class=\"x x-first x-last\">authorizedUserType</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-11-11T06:42:03Z", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilder.java", "diffHunk": "@@ -261,4 +261,18 @@ public IntrospectionResponseBuilder setAdditionalData(Map<String, Object> additi\n         additionalData.entrySet().forEach(dataEntry -> parameters.put(dataEntry.getKey(), dataEntry.getValue()));\n         return this;\n     }\n+\n+    /**\n+     * Set authorized user type to the introspection response.\n+     *\n+     * @param aut Authorized user type\n+     * @return IntrospectionResponseBuilder\n+     */\n+    public IntrospectionResponseBuilder setAuthorizedUserType(String aut) {\n+\n+        if (StringUtils.isNotBlank(aut)) {\n+            parameters.put(IntrospectionResponse.AUT, aut);", "originalCommit": "690092a91503d3141e87813057ea5bc052db0022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjM3NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146374", "bodyText": "fixed with 66a2333", "author": "dushaniw", "createdAt": "2020-11-11T06:46:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MzQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NDMyMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521144322", "body": "Shall we use already available constants for this?", "bodyText": "Shall we use already available constants for this?", "bodyHTML": "<p dir=\"auto\">Shall we use already available constants for this?</p>", "author": "mefarazath", "createdAt": "2020-11-11T06:43:39Z", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/test/java/org/wso2/carbon/identity/oauth/endpoint/introspection/IntrospectionResponseBuilderTest.java", "diffHunk": "@@ -88,6 +88,7 @@ public void testResposeBuilderWithVal(boolean isActive, int notBefore, int expir\n         introspectionResponseBuilder1.setClientId(\"rgfKVdnMQnJSSr_pKFTxj3apiwYa\");\n         introspectionResponseBuilder1.setErrorCode(\"Invalid input\");\n         introspectionResponseBuilder1.setErrorDescription(\"error_discription\");\n+        introspectionResponseBuilder1.setAuthorizedUserType(\"APPLICATION_USER\");", "originalCommit": "690092a91503d3141e87813057ea5bc052db0022", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NjI0Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1459#discussion_r521146247", "bodyText": "+1 fixed with 66a2333", "author": "dushaniw", "createdAt": "2020-11-11T06:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0NDMyMg=="}], "type": "inlineReview"}, {"oid": "66a23338204aacc1be2b5a3969fa2bd518322e55", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/66a23338204aacc1be2b5a3969fa2bd518322e55", "message": "fix review comments", "committedDate": "2020-11-11T06:45:52Z", "type": "commit"}]}