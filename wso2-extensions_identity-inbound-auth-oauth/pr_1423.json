{"pr_number": 1423, "pr_title": "Adding extension to support Custom Key IDs", "pr_author": "dimuthnc", "pr_createdAt": "2020-08-11T10:29:48Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1423", "timeline": [{"oid": "91a0bbeedbcf1de743704921dae0c26b688789c4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/91a0bbeedbcf1de743704921dae0c26b688789c4", "message": "Add KeyIDProvider interface and DefaultKeyIDProviderImpl implementation", "committedDate": "2020-08-11T10:03:13Z", "type": "commit"}, {"oid": "05440dfaef80c68103af65d990e85d3403a4ba95", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/05440dfaef80c68103af65d990e85d3403a4ba95", "message": "Add methods to register custom KeyIDProvider implementations to Data holder during OSGi activation", "committedDate": "2020-08-11T10:03:58Z", "type": "commit"}, {"oid": "23994040fb2ed234e38e334883a58f644c04fed1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/23994040fb2ed234e38e334883a58f644c04fed1", "message": "Change the KeyID Calculation logic to the new KeyIDProvider based method", "committedDate": "2020-08-11T10:04:21Z", "type": "commit"}, {"oid": "1e254c2dcaded52acba4c278e1b3a1a6ebd82ad4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/1e254c2dcaded52acba4c278e1b3a1a6ebd82ad4", "message": "Fixed the failing test cases", "committedDate": "2020-08-11T10:04:35Z", "type": "commit"}, {"oid": "ce082e8765ba27ca9a5b64d51e70168f20c088f0", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ce082e8765ba27ca9a5b64d51e70168f20c088f0", "message": "Fixed the log printing logic", "committedDate": "2020-08-12T11:36:59Z", "type": "commit"}, {"oid": "3598c67dfb769cbe96a676ad7ce245408761203c", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/3598c67dfb769cbe96a676ad7ce245408761203c", "message": "Fixed styling issues pointed in review", "committedDate": "2020-08-19T07:22:41Z", "type": "commit"}, {"oid": "2e1b30f41c3249879aec764d612de272f743335f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/2e1b30f41c3249879aec764d612de272f743335f", "message": "Merge branch 'master' of https://github.com/wso2-extensions/identity-inbound-auth-oauth", "committedDate": "2020-08-19T07:23:14Z", "type": "commit"}, {"oid": "95115b883375a71a2d90436ff5ad9381af537f75", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/95115b883375a71a2d90436ff5ad9381af537f75", "message": "Add debug logs for KeyIDProvider implementation", "committedDate": "2020-08-19T09:12:44Z", "type": "commit"}, {"oid": "f3759c7482fc2bf21a7b614f5a63dbd05c68c3dd", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/f3759c7482fc2bf21a7b614f5a63dbd05c68c3dd", "message": "Fixed styling issues", "committedDate": "2020-08-19T09:44:22Z", "type": "commit"}, {"oid": "04edb66ca6253384d82585f9139772267c194117", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/04edb66ca6253384d82585f9139772267c194117", "message": "Fixed styling issues", "committedDate": "2020-08-19T09:48:35Z", "type": "commit"}, {"oid": "3c35ec3dbc722e031615e03ad1402d022cda97b1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/3c35ec3dbc722e031615e03ad1402d022cda97b1", "message": "Fixed styling issues", "committedDate": "2020-08-19T10:05:38Z", "type": "commit"}, {"oid": "c6a3abcb8c224352eccee7212ed814954c88b740", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/c6a3abcb8c224352eccee7212ed814954c88b740", "message": "Debug log in OAuth2Util reformatted", "committedDate": "2020-08-19T12:22:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2NjMxMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1423#discussion_r473566311", "body": "```suggestion\r\n     * Method to obtain 'kid' value for the signing key to be included the JWT header.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Method to obtain KeyID value for the JWT header.\n          \n          \n            \n                 * Method to obtain 'kid' value for the signing key to be included the JWT header.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Method</span> to obtain <span class=\"pl-smi x x-first x-last\">KeyID</span> value <span class=\"pl-k\">for</span> the <span class=\"pl-c1\">JWT</span> header.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Method</span> to obtain <span class=\"pl-s\"><span class=\"pl-pds x x-first\">'</span><span class=\"x\">kid</span><span class=\"pl-pds x x-last\">'</span></span> value <span class=\"pl-k\">for</span><span class=\"x x-first x-last\"> the signing key to be included</span> the <span class=\"pl-c1\">JWT</span> header.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-08-20T03:29:42Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -2456,6 +2453,19 @@ public static String getKID(String certThumbprint, JWSAlgorithm signatureAlgorit\n         return certThumbprint + \"_\" + signatureAlgorithm.toString();\n     }\n \n+    /**\n+     * Method to obtain KeyID value for the JWT header.", "originalCommit": "c6a3abcb8c224352eccee7212ed814954c88b740", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Njg0MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1423#discussion_r473566840", "body": "Is passing the Keystore reference useful here in the exception message?\r\n", "bodyText": "Is passing the Keystore reference useful here in the exception message?", "bodyHTML": "<p dir=\"auto\">Is passing the Keystore reference useful here in the exception message?</p>", "author": "mefarazath", "createdAt": "2020-08-20T03:31:39Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -2540,10 +2571,28 @@ private static Certificate getCertificate(String tenantDomain, int tenantId) thr\n                 // derive key store name\n                 String ksName = tenantDomain.trim().replace(\".\", \"-\");\n                 String jksName = ksName + \".jks\";\n-                keyStore = tenantKSM.getKeyStore(jksName);\n-                publicCert = keyStore.getCertificate(tenantDomain);\n+                if (log.isDebugEnabled()) {\n+                    log.debug(String.format(\"Loading default tenant certificate for tenant : %s from the KeyStore\" +\n+                            \" %s\", tenantDomain, ksName));\n+                }\n+                try {\n+                    keyStore = tenantKSM.getKeyStore(jksName);\n+                    publicCert = keyStore.getCertificate(tenantDomain);\n+                } catch (KeyStoreException e) {\n+                    throw new IdentityOAuth2Exception(\"Error occurred while loading public certificate for tenant: \" +\n+                            tenantDomain, e);\n+                } catch (Exception e) {\n+                    throw new IdentityOAuth2Exception(\"Error occurred while loading Keystore: \" + keyStore + \" for \" +", "originalCommit": "c6a3abcb8c224352eccee7212ed814954c88b740", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3NjI3Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1423#discussion_r473576272", "bodyText": "Since the method is about getting the certificate from the tenant domain, the Keystore reference calculated using that value does not seems useful. Therefore I will remove it.", "author": "dimuthnc", "createdAt": "2020-08-20T04:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Njg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3ODEyMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1423#discussion_r473578122", "bodyText": "fixed", "author": "dimuthnc", "createdAt": "2020-08-20T04:15:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Njg0MA=="}], "type": "inlineReview"}, {"oid": "30cbeb360acf87c9c903bd9c82d8c0652b17cb57", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/30cbeb360acf87c9c903bd9c82d8c0652b17cb57", "message": "Update components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n\nCo-authored-by: Farasath Ahamed <mefarazath@gmail.com>", "committedDate": "2020-08-20T04:05:05Z", "type": "commit"}, {"oid": "edc2012997898be551b94ffd5637f94b26f7720c", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/edc2012997898be551b94ffd5637f94b26f7720c", "message": "Refactored Exception message in getCertificate method", "committedDate": "2020-08-20T04:11:05Z", "type": "commit"}, {"oid": "c0d257bf4bca184534a887234bf80dfb20f71891", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/c0d257bf4bca184534a887234bf80dfb20f71891", "message": "Merge branch 'master' of https://github.com/dimuthnc/identity-inbound-auth-oauth", "committedDate": "2020-08-20T04:11:32Z", "type": "commit"}]}