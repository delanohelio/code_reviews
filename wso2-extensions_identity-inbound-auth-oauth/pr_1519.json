{"pr_number": 1519, "pr_title": "Clear the opBrowserState Cookie when sending the logout request to framework.", "pr_author": "chamathns", "pr_createdAt": "2020-12-18T04:16:22Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519", "timeline": [{"oid": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "message": "Clear the opBrowserState Cookie when sending the logout request to framework.", "committedDate": "2020-12-18T07:54:01Z", "type": "commit"}, {"oid": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "message": "Clear the opBrowserState Cookie when sending the logout request to framework.", "committedDate": "2020-12-18T07:54:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzODYzNQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545638635", "body": "Can Use StringUtils? WDYT?", "bodyText": "Can Use StringUtils? WDYT?", "bodyHTML": "<p dir=\"auto\">Can Use StringUtils? WDYT?</p>", "author": "Thumimku", "createdAt": "2020-12-18T08:13:55Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -129,9 +130,9 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n          */\n \n         String redirectURL;\n-        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        String opBrowserStateCookieValue = getOPBSCookieValue(request);\n \n-        if (opBrowserStateCookie == null) {\n+        if (opBrowserStateCookieValue == null) {", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjMyMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726321", "bodyText": "Yes. We can. It's fixed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzODYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTAzMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639032", "body": "Can we add a param description\r\n", "bodyText": "Can we add a param description", "bodyHTML": "<p dir=\"auto\">Can we add a param description</p>", "author": "Thumimku", "createdAt": "2020-12-18T08:14:49Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,39 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBSCookieValue(HttpServletRequest request) {\n+\n+        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        if (opBrowserStateCookie != null) {\n+            return opBrowserStateCookie.getValue();\n+        } else {\n+            String sessionDataKey = request.getParameter(OIDCSessionConstants.OIDC_SESSION_DATA_KEY_PARAM);\n+            if (StringUtils.isNotBlank(sessionDataKey)) {\n+                OIDCSessionDataCacheEntry cacheEntry = getSessionDataFromCache(sessionDataKey);\n+                if (cacheEntry != null) {\n+                    return cacheEntry.getParamMap().get(OIDCSessionConstants.OPBS_COOKIE_ID);\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n     /**\n      * If postLogoutRedirectUri is send in Logout request parameter then set it as redirect URL.\n      *\n      * @param redirectURL\n-     * @param opBrowserStateCookie\n+     * @param opBrowserStateCookieValue", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjA2MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726061", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTY0Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639643", "body": "Can't we put this along with previous line?", "bodyText": "Can't we put this along with previous line?", "bodyHTML": "<p dir=\"auto\">Can't we put this along with previous line?</p>", "author": "Thumimku", "createdAt": "2020-12-18T08:16:08Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -717,7 +741,8 @@ private void addAuthenticationRequestToRequest(HttpServletRequest request,\n     }\n \n     private void sendRequestToFramework(HttpServletRequest request, HttpServletResponse response, String sessionDataKey,\n-                                        String type) throws ServletException, IOException {\n+                                        String type)\n+            throws ServletException, IOException {", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjAzMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726030", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTc3Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639772", "body": "Param description", "bodyText": "Param description", "bodyHTML": "<p dir=\"auto\">Param description</p>", "author": "Thumimku", "createdAt": "2020-12-18T08:16:23Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -814,11 +839,11 @@ private boolean getOpenIDConnectSkipUserConsent(HttpServletRequest request) thro\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param request\n+     * @param opbsCookieValue", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjAwMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726000", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545640314", "body": "We are passing String instead of HttpServletRequest object, Can't this cause an issue in callee?", "bodyText": "We are passing String instead of HttpServletRequest object, Can't this cause an issue in callee?", "bodyHTML": "<p dir=\"auto\">We are passing String instead of HttpServletRequest object, Can't this cause an issue in callee?</p>", "author": "Thumimku", "createdAt": "2020-12-18T08:17:28Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -814,11 +839,11 @@ private boolean getOpenIDConnectSkipUserConsent(HttpServletRequest request) thro\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param request\n+     * @param opbsCookieValue\n      */\n-    private void doBackChannelLogout(HttpServletRequest request) {\n+    private void doBackChannelLogout(String opbsCookieValue) {\n \n-        LogoutRequestSender.getInstance().sendLogoutRequests(request);\n+        LogoutRequestSender.getInstance().sendLogoutRequests(opbsCookieValue);", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNTQ3MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545725471", "bodyText": "LogoutRequestSender.getInstance().sendLogoutRequests() has multiple implementations where it can accept a String value as well.", "author": "chamathns", "createdAt": "2020-12-18T09:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc1NjMyNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545756326", "bodyText": "ACK", "author": "Thumimku", "createdAt": "2020-12-18T10:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA=="}], "type": "inlineReview"}, {"oid": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b6b16b4e9375169a8e8109dead588f7651e3a54b", "message": "Resolve minor issues.", "committedDate": "2020-12-18T09:59:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTIyMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546559221", "body": "shall we rename this to 'addOPBSCookieValueToCacheEntry'", "bodyText": "shall we rename this to 'addOPBSCookieValueToCacheEntry'", "bodyHTML": "<p dir=\"auto\">shall we rename this to 'addOPBSCookieValueToCacheEntry'</p>", "author": "emswbandara", "createdAt": "2020-12-21T07:59:31Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -629,24 +648,31 @@ private void sendToFrameworkForLogout(HttpServletRequest request, HttpServletRes\n         AuthenticationRequestCacheEntry authenticationRequestCacheEntry =\n                 new AuthenticationRequestCacheEntry(authenticationRequest);\n         addAuthenticationRequestToRequest(request, authenticationRequestCacheEntry);\n+        OIDCSessionManagementUtil.removeOPBrowserStateCookie(request, response);\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n+    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDU5Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620592", "bodyText": "+1. Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546559407", "body": "can paramMap become null here? if so, handle null check", "bodyText": "can paramMap become null here? if so, handle null check", "bodyHTML": "<p dir=\"auto\">can paramMap become null here? if so, handle null check</p>", "author": "emswbandara", "createdAt": "2020-12-21T08:00:03Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -629,24 +648,31 @@ private void sendToFrameworkForLogout(HttpServletRequest request, HttpServletRes\n         AuthenticationRequestCacheEntry authenticationRequestCacheEntry =\n                 new AuthenticationRequestCacheEntry(authenticationRequest);\n         addAuthenticationRequestToRequest(request, authenticationRequestCacheEntry);\n+        OIDCSessionManagementUtil.removeOPBrowserStateCookie(request, response);\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n+    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {\n+\n+        ConcurrentMap<String, String> paramMap = cacheEntry.getParamMap();\n+        paramMap.put(OIDCSessionConstants.OPBS_COOKIE_ID, opBrowserStateCookieValue);", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQ4NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620484", "bodyText": "Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2Mjk5OQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546562999", "body": "Need debug logs to indicate how the obps value was resolved.", "bodyText": "Need debug logs to indicate how the obps value was resolved.", "bodyHTML": "<p dir=\"auto\">Need debug logs to indicate how the obps value was resolved.</p>", "author": "mefarazath", "createdAt": "2020-12-21T08:09:03Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,39 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBSCookieValue(HttpServletRequest request) {", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQ1NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620454", "bodyText": "Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2Mjk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MzYxOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546563618", "body": "I prefer to rename this something like opBrowserState?\r\nobps cookie was one way to track the opBrowserState. And in the subsequent requests where the cookie is not present we are actually retrieving the same opBrowserState using some other means.", "bodyText": "I prefer to rename this something like opBrowserState?\nobps cookie was one way to track the opBrowserState. And in the subsequent requests where the cookie is not present we are actually retrieving the same opBrowserState using some other means.", "bodyHTML": "<p dir=\"auto\">I prefer to rename this something like opBrowserState?<br>\nobps cookie was one way to track the opBrowserState. And in the subsequent requests where the cookie is not present we are actually retrieving the same opBrowserState using some other means.</p>", "author": "mefarazath", "createdAt": "2020-12-21T08:10:38Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -129,9 +130,9 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n          */\n \n         String redirectURL;\n-        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        String opBrowserStateCookieValue = getOPBSCookieValue(request);", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620407", "bodyText": "+1. Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MzYxOA=="}], "type": "inlineReview"}, {"oid": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "message": "Refactor code.", "committedDate": "2020-12-21T10:13:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMTI2Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546621267", "body": "```suggestion\r\n                log.debug(\"Resolving opBrowserState from the 'obps' Cookie in the inbound request.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");\n          \n          \n            \n                            log.debug(\"Resolving opBrowserState from the 'obps' Cookie in the inbound request.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Resolving opBrowserState from the <span class=\"x x-first x-last\">opBrowserState</span> Cookie in the inbound request.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Resolving opBrowserState from the <span class=\"x x-first x-last\">'obps'</span> Cookie in the inbound request.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mefarazath", "createdAt": "2020-12-21T10:15:53Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,52 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBrowserState(HttpServletRequest request) {\n+\n+        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        if (opBrowserStateCookie != null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");", "originalCommit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7a6c60a5d35f6aa8cab097eb52e7e6c04fdc45ab", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/7a6c60a5d35f6aa8cab097eb52e7e6c04fdc45ab", "message": "Update components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\nCo-authored-by: Farasath Ahamed <mefarazath@gmail.com>", "committedDate": "2020-12-21T10:22:41Z", "type": "commit"}]}