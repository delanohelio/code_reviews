{"pr_number": 918, "pr_title": "[AF-2058] Improve resiliency for K8SFileChannel", "pr_author": "rhtevan", "pr_createdAt": "2020-03-09T21:31:29Z", "pr_url": "https://github.com/kiegroup/appformer/pull/918", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1NDI2Nw==", "url": "https://github.com/kiegroup/appformer/pull/918#discussion_r390154267", "body": "```suggestion\r\n            k8sfc.close();\r\n            fail(\"Channel close should throw an exception.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        k8sfc.close();\n          \n          \n            \n                        k8sfc.close();\n          \n          \n            \n                        fail(\"Channel close should throw an exception.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            k8sfc<span class=\"pl-k\">.</span>close();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            k8sfc<span class=\"pl-k\">.</span>close();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            fail(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Channel close should throw an exception.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sutaakar", "createdAt": "2020-03-10T08:27:14Z", "path": "uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-k8s/src/test/java/org/uberfire/java/nio/fs/k8s/K8SFileChannelTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.java.nio.fs.k8s;\n+\n+import java.net.URI;\n+\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.fabric8.kubernetes.client.server.mock.KubernetesServer;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.uberfire.java.nio.IOException;\n+import org.uberfire.java.nio.file.Path;\n+import org.uberfire.java.nio.file.spi.FileSystemProvider;\n+import org.uberfire.java.nio.fs.cloud.CloudClientFactory;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class K8SFileChannelTest {\n+\n+    @ClassRule\n+    public static KubernetesServer SERVER = new KubernetesServer(false, true);\n+    // The default namespace for MockKubernetes Server is 'test'\n+    protected static String TEST_NAMESPACE = \"test\";\n+    protected static ThreadLocal<KubernetesClient> CLIENT_FACTORY =\n+            ThreadLocal.withInitial(() -> SERVER.getClient());\n+\n+    protected static final FileSystemProvider fsProvider = new K8SFileSystemProvider() {\n+\n+        @Override\n+        public KubernetesClient createKubernetesClient() {\n+            return CLIENT_FACTORY.get();\n+        }\n+    };\n+\n+    @BeforeClass\n+    public static void setup() {}\n+\n+    @AfterClass\n+    public static void tearDown() {\n+        CLIENT_FACTORY.get().configMaps().inNamespace(TEST_NAMESPACE).delete();\n+        CLIENT_FACTORY.get().close();\n+    }\n+\n+    @SuppressWarnings(\"resource\")\n+    @Test(expected = IOException.class)\n+    public void testOpenChannelWithInitializationErrors() {\n+        final K8SFileSystem kfs = (K8SFileSystem) fsProvider.getFileSystem(URI.create(\"k8s:///\"));\n+        final Path invalid = kfs.getPath(\"/#weirdFileName$@#^&*\");\n+        new K8SFileChannel(invalid, (CloudClientFactory) fsProvider);\n+    }\n+\n+    @Test\n+    public void testOpenAndCloseChannel() {\n+        final K8SFileSystem kfs = (K8SFileSystem) fsProvider.getFileSystem(URI.create(\"k8s:///\"));\n+        final Path valid = kfs.getPath(\"/test\");\n+        K8SFileChannel k8sfc = new K8SFileChannel(valid, (CloudClientFactory) fsProvider);\n+        assertTrue(k8sfc.isOpen());\n+        k8sfc.close();\n+        assertFalse(k8sfc.isOpen());\n+    }\n+\n+    @Test\n+    public void testChannelMustBeClosedRegardlessError() {\n+        FileSystemProvider fsProvider = new K8SFileSystemProvider() {\n+\n+            @Override\n+            public KubernetesClient createKubernetesClient() {\n+                return CLIENT_FACTORY.get();\n+            }\n+        };\n+\n+        final K8SFileSystem kfs = (K8SFileSystem) fsProvider.getFileSystem(URI.create(\"k8s:///\"));\n+        final Path valid = kfs.getPath(\"/test\");\n+        K8SFileChannel k8sfc = new K8SFileChannel(valid, (CloudClientFactory) fsProvider);\n+        assertTrue(k8sfc.isOpen());\n+\n+        k8sfc.ccf = null; // trigger an error\n+        try {\n+            k8sfc.close();", "originalCommit": "5a7a1829ad4de3fd228c8022521c2d1c14067461", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI4MzIwMw==", "url": "https://github.com/kiegroup/appformer/pull/918#discussion_r390283203", "bodyText": "Updated commit with suggested changes.", "author": "rhtevan", "createdAt": "2020-03-10T12:38:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1NDI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1NDQzMw==", "url": "https://github.com/kiegroup/appformer/pull/918#discussion_r390154433", "body": "```suggestion\r\nimport static org.junit.Assert.assertTrue;\r\nimport static org.junit.Assert.fail;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.junit.Assert.assertTrue;\n          \n          \n            \n            import static org.junit.Assert.assertTrue;\n          \n          \n            \n            import static org.junit.Assert.fail;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"33\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.junit.Assert.assertTrue</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"33\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.junit.Assert.assertTrue</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"34\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.junit.Assert.fail</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sutaakar", "createdAt": "2020-03-10T08:27:40Z", "path": "uberfire-nio2-backport/uberfire-nio2-impls/uberfire-nio2-k8s/src/test/java/org/uberfire/java/nio/fs/k8s/K8SFileChannelTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.uberfire.java.nio.fs.k8s;\n+\n+import java.net.URI;\n+\n+import io.fabric8.kubernetes.client.KubernetesClient;\n+import io.fabric8.kubernetes.client.server.mock.KubernetesServer;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.uberfire.java.nio.IOException;\n+import org.uberfire.java.nio.file.Path;\n+import org.uberfire.java.nio.file.spi.FileSystemProvider;\n+import org.uberfire.java.nio.fs.cloud.CloudClientFactory;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;", "originalCommit": "5a7a1829ad4de3fd228c8022521c2d1c14067461", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI4MzAwNA==", "url": "https://github.com/kiegroup/appformer/pull/918#discussion_r390283004", "bodyText": "Updated commit with suggested changes.", "author": "rhtevan", "createdAt": "2020-03-10T12:38:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1NDQzMw=="}], "type": "inlineReview"}, {"oid": "3a6ca8ccee2f6d71a3c2cdbaa72d0bb9512858c0", "url": "https://github.com/kiegroup/appformer/commit/3a6ca8ccee2f6d71a3c2cdbaa72d0bb9512858c0", "message": "[AF-2058] Improve resiliency for K8SFileChannel when opening or closing the channel.\n\nSigned-off-by: Evan Zhang <evan.zhang@redhat.com>", "committedDate": "2020-03-10T12:32:58Z", "type": "commit"}, {"oid": "3a6ca8ccee2f6d71a3c2cdbaa72d0bb9512858c0", "url": "https://github.com/kiegroup/appformer/commit/3a6ca8ccee2f6d71a3c2cdbaa72d0bb9512858c0", "message": "[AF-2058] Improve resiliency for K8SFileChannel when opening or closing the channel.\n\nSigned-off-by: Evan Zhang <evan.zhang@redhat.com>", "committedDate": "2020-03-10T12:32:58Z", "type": "forcePushed"}]}