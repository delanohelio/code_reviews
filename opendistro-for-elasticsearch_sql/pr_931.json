{"pr_number": 931, "pr_title": "Enable Date type input in function Count()", "pr_author": "harold-wang", "pr_createdAt": "2020-12-14T20:48:59Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/931", "timeline": [{"oid": "ecd5bea2cfd1b05ca5264240ca41a3ba94375702", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ecd5bea2cfd1b05ca5264240ca41a3ba94375702", "message": "Enable count(Date)\nAdd IT\nAdd Comparsion Test", "committedDate": "2020-12-14T20:14:48Z", "type": "commit"}, {"oid": "58a9eea983eca08a55013e4f82f03cde79f4383d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/58a9eea983eca08a55013e4f82f03cde79f4383d", "message": "Enable count(Date)\nAdd IT", "committedDate": "2020-12-14T20:15:15Z", "type": "commit"}, {"oid": "c826138ef833996125ddc9f2455993f7f1c7bcff", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c826138ef833996125ddc9f2455993f7f1c7bcff", "message": "Add comparsion test file 916.txt", "committedDate": "2020-12-14T21:15:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk0MzU2Ng==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/931#discussion_r542943566", "body": "I assume SQL `COUNT()` should work with all types. If so, is it more maintainable to generate function signatures from all core types like this way: https://github.com/opendistro-for-elasticsearch/sql/blob/2aeb80b937788d5a7cb4ccdff21f082064898454/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/predicate/BinaryPredicateOperator.java#L172", "bodyText": "I assume SQL COUNT() should work with all types. If so, is it more maintainable to generate function signatures from all core types like this way: \n  \n    \n      sql/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/predicate/BinaryPredicateOperator.java\n    \n    \n         Line 172\n      in\n      2aeb80b\n    \n    \n    \n    \n\n        \n          \n           ExprCoreType.coreTypes().stream()", "bodyHTML": "<p dir=\"auto\">I assume SQL <code>COUNT()</code> should work with all types. If so, is it more maintainable to generate function signatures from all core types like this way: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/opendistro-for-elasticsearch/sql/blob/2aeb80b937788d5a7cb4ccdff21f082064898454/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/predicate/BinaryPredicateOperator.java#L172\">sql/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/operator/predicate/BinaryPredicateOperator.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 172\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/opendistro-for-elasticsearch/sql/commit/2aeb80b937788d5a7cb4ccdff21f082064898454\">2aeb80b</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L172\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"172\"></td>\n          <td id=\"LC172\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">ExprCoreType</span><span class=\"pl-k\">.</span>coreTypes()<span class=\"pl-k\">.</span>stream() </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "dai-chen", "createdAt": "2020-12-15T00:08:18Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/aggregation/AggregatorFunction.java", "diffHunk": "@@ -92,6 +94,12 @@ private static FunctionResolver count() {\n                 arguments -> new CountAggregator(arguments, INTEGER))\n             .put(new FunctionSignature(functionName, Collections.singletonList(BOOLEAN)),\n                 arguments -> new CountAggregator(arguments, INTEGER))\n+            .put(new FunctionSignature(functionName, Collections.singletonList(DATE)),\n+                arguments -> new CountAggregator(arguments, INTEGER))\n+            .put(new FunctionSignature(functionName, Collections.singletonList(DATETIME)),\n+                arguments -> new CountAggregator(arguments, INTEGER))\n+            .put(new FunctionSignature(functionName, Collections.singletonList(TIMESTAMP)),\n+                arguments -> new CountAggregator(arguments, INTEGER))", "originalCommit": "c826138ef833996125ddc9f2455993f7f1c7bcff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f7c3f5190c092117488a9be1c2b7a3f708cf9163", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f7c3f5190c092117488a9be1c2b7a3f708cf9163", "message": "Consolidate count function to accept all field type", "committedDate": "2020-12-15T07:15:46Z", "type": "commit"}]}