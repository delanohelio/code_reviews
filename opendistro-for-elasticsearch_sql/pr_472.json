{"pr_number": 472, "pr_title": "[PPL] Add support for fields command", "pr_createdAt": "2020-05-19T16:23:20Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472", "merge_commit": "8e4453f70ef15789ae61d71eac1e21c30fe12a23", "timeline": [{"oid": "06c761c4a3e6b506fe7653e4e918e7e8818ada4e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/06c761c4a3e6b506fe7653e4e918e7e8818ada4e", "message": "add LogicalProject and LogicalRemove", "committedDate": "2020-05-19T04:25:03Z", "type": "commit"}, {"oid": "49da37f2e3f5de486ca8b83118e3283bacf99bfb", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/49da37f2e3f5de486ca8b83118e3283bacf99bfb", "message": "add todo comments", "committedDate": "2020-05-19T04:32:07Z", "type": "commit"}, {"oid": "dc02bb923318eb04f6d8661050b52ab4455bfd5e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/dc02bb923318eb04f6d8661050b52ab4455bfd5e", "message": "add physical project and remove operator", "committedDate": "2020-05-19T16:16:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472#discussion_r428220137", "body": "The indent is changed to 2 spaces in this file and some other files?", "bodyText": "The indent is changed to 2 spaces in this file and some other files?", "bodyHTML": "<p dir=\"auto\">The indent is changed to 2 spaces in this file and some other files?</p>", "author": "dai-chen", "createdAt": "2020-05-20T18:27:44Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java", "diffHunk": "@@ -18,30 +18,39 @@\n import com.amazon.opendistroforelasticsearch.sql.expression.Expression;\n import com.amazon.opendistroforelasticsearch.sql.expression.ReferenceExpression;\n import com.amazon.opendistroforelasticsearch.sql.expression.aggregation.Aggregator;\n+import com.google.common.collect.ImmutableSet;\n+import java.util.Arrays;\n import lombok.experimental.UtilityClass;\n \n import java.util.List;\n import java.util.Map;\n \n-/**\n- * Logical Plan DSL.\n- */\n+/** Logical Plan DSL. */\n @UtilityClass\n public class LogicalPlanDSL {\n-    public static LogicalPlan aggregation(LogicalPlan input, List<Aggregator> aggregatorList,\n-                                          List<Expression> groupByList) {\n-        return new LogicalAggregation(input, aggregatorList, groupByList);\n-    }\n-\n-    public static LogicalPlan filter(LogicalPlan input, Expression expression) {\n-        return new LogicalFilter(input, expression);\n-    }\n-\n-    public static LogicalPlan relation(String tableName) {\n-        return new LogicalRelation(tableName);\n-    }\n-\n-    public static LogicalPlan rename(LogicalPlan input, Map<ReferenceExpression, ReferenceExpression> renameMap) {\n-        return new LogicalRename(input, renameMap);\n-    }\n+  public static LogicalPlan aggregation(", "originalCommit": "dc02bb923318eb04f6d8661050b52ab4455bfd5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MDcyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472#discussion_r428280725", "bodyText": "yes, enable https://plugins.jetbrains.com/plugin/8527-google-java-format.\nlet's talk whether we should enable for the project.", "author": "penghuo", "createdAt": "2020-05-20T20:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4ODcwMw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472#discussion_r428288703", "bodyText": "Sure.", "author": "dai-chen", "createdAt": "2020-05-20T20:29:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "8274edd1187a3f158301fa1ca2ba3e09233adc79", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\nindex a8facc14..f675151c 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n", "chunk": "@@ -24,6 +24,7 @@ import lombok.experimental.UtilityClass;\n \n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n \n /** Logical Plan DSL. */\n @UtilityClass\n", "next_change": {"commit": "d5f0e9616e111acae645d7a3db60d41d49fc3163", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\nindex f675151c..98df7dac 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n", "chunk": "@@ -15,18 +15,20 @@\n \n package com.amazon.opendistroforelasticsearch.sql.planner.logical;\n \n+import com.amazon.opendistroforelasticsearch.sql.ast.tree.Sort.SortOption;\n import com.amazon.opendistroforelasticsearch.sql.expression.Expression;\n import com.amazon.opendistroforelasticsearch.sql.expression.ReferenceExpression;\n import com.amazon.opendistroforelasticsearch.sql.expression.aggregation.Aggregator;\n import com.google.common.collect.ImmutableSet;\n import java.util.Arrays;\n-import lombok.experimental.UtilityClass;\n-\n import java.util.List;\n import java.util.Map;\n+import lombok.experimental.UtilityClass;\n import org.apache.commons.lang3.tuple.Pair;\n \n-/** Logical Plan DSL. */\n+/**\n+ * Logical Plan DSL.\n+ */\n @UtilityClass\n public class LogicalPlanDSL {\n   public static LogicalPlan aggregation(\n", "next_change": {"commit": "94f2d3252e4ed2db78cb9d76a0747f25d28f1723", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\nindex 98df7dac..99cd7075 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n", "chunk": "@@ -31,6 +34,7 @@ import org.apache.commons.lang3.tuple.Pair;\n  */\n @UtilityClass\n public class LogicalPlanDSL {\n+\n   public static LogicalPlan aggregation(\n       LogicalPlan input, List<Aggregator> aggregatorList, List<Expression> groupByList) {\n     return new LogicalAggregation(input, aggregatorList, groupByList);\n", "next_change": {"commit": "e56d7ff96db6b66e4c11a7ac1cd721702a8cb428", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\nindex 99cd7075..af6ce726 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/logical/LogicalPlanDSL.java\n", "chunk": "@@ -36,7 +37,7 @@ import org.apache.commons.lang3.tuple.Pair;\n public class LogicalPlanDSL {\n \n   public static LogicalPlan aggregation(\n-      LogicalPlan input, List<Aggregator> aggregatorList, List<Expression> groupByList) {\n+      LogicalPlan input, List<NamedAggregator> aggregatorList, List<NamedExpression> groupByList) {\n     return new LogicalAggregation(input, aggregatorList, groupByList);\n   }\n \n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "8e4453f70ef15789ae61d71eac1e21c30fe12a23", "message": "Merge commit", "committedDate": null}, {"oid": "8274edd1187a3f158301fa1ca2ba3e09233adc79", "committedDate": "2020-05-22 00:02:44 -0700", "message": "[PPL] Support eval command (#477)"}, {"oid": "3aa0fec0ae4149ca4107b978d13b0c5b05c24932", "committedDate": "2020-05-22 14:45:01 -0700", "message": "[PPL] Support sort command (#483)"}, {"oid": "83e9b75e949057347c373dfe733e6889666672d5", "committedDate": "2020-05-26 10:10:43 -0700", "message": "[PPL] Support dedup command (#485)"}, {"oid": "d5f0e9616e111acae645d7a3db60d41d49fc3163", "committedDate": "2020-06-03 10:42:26 -0700", "message": "Enfore google java style (#502)"}, {"oid": "087da8871ff9e8f6e00228fc45b5576b17f6bab7", "committedDate": "2020-06-26 15:40:12 -0700", "message": "Add new sql module (#527)"}, {"oid": "dee4aec709a6b73817685b91b7d9619d3cf581bf", "committedDate": "2020-07-31 12:38:11 -0700", "message": "Support select fields and alias in new query engine (#636)"}, {"oid": "94f2d3252e4ed2db78cb9d76a0747f25d28f1723", "committedDate": "2020-09-08 10:06:52 -0700", "message": "Support Top/Rare Command In PPL (#720)"}, {"oid": "e56d7ff96db6b66e4c11a7ac1cd721702a8cb428", "committedDate": "2020-09-11 09:49:17 -0700", "message": "Aggregation expression pushdown (#730)"}, {"oid": "e7171de846baf299225cf3c3825532821e98dac5", "committedDate": "2020-09-16 08:54:11 -0700", "message": "Support Head Command In PPL (#731)"}, {"oid": "f7cd73d8be5b49a6da13c24b71a5c912e0d47012", "committedDate": "2020-10-02 14:59:48 -0700", "message": "Add LogicalPlan optimization (#763)"}, {"oid": "7e5f5820f9b668e5f6c6caeb38d6558e5ff7eb24", "committedDate": "2020-10-09 14:41:41 -0700", "message": "Support ranking window functions (#753)"}, {"oid": "2bb05fc98aa464e6dece1430ba7c60e31aa04306", "committedDate": "2020-11-19 20:09:45 -0800", "message": "Seperate the logical plan optimization rule from core to storage engine (#836)"}, {"oid": "42d79c2411ee59a85290f87bfec323a189721ad7", "committedDate": "2020-11-24 08:18:41 -0800", "message": "Sort field push down (#848)"}, {"oid": "3468bcf1a5ce9393823a6549960d0e7c462d1714", "committedDate": "2020-12-11 18:09:05 -0800", "message": "Support LIMIT, OFFSET in new engine (#851)"}, {"oid": "9a08770195b11b3404972062fd335043cb1499fb", "committedDate": "2021-01-07 11:13:57 -0800", "message": "Support aggregate window functions (#946)"}, {"oid": "2347a2a7fcef5348a1ee4ee2d9d62802206b9a47", "committedDate": "2021-02-04 14:12:52 -0800", "message": "Refine PPL head command syntax (#1022)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNjU4NA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472#discussion_r428236584", "body": "Use `exprValue` directly?", "bodyText": "Use exprValue directly?", "bodyHTML": "<p dir=\"auto\">Use <code>exprValue</code> directly?</p>", "author": "dai-chen", "createdAt": "2020-05-20T18:50:51Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/ProjectOperator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.planner.physical;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprTupleValue;\n+import com.amazon.opendistroforelasticsearch.sql.data.model.ExprValue;\n+import com.amazon.opendistroforelasticsearch.sql.expression.ReferenceExpression;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.ImmutableMap.Builder;\n+import java.util.Collections;\n+import java.util.List;\n+import lombok.EqualsAndHashCode;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+\n+/** Project the fields specified in {@link ProjectOperator#projectList} from input. */\n+@ToString\n+@EqualsAndHashCode\n+@RequiredArgsConstructor\n+public class ProjectOperator extends PhysicalPlan {\n+  private final PhysicalPlan input;\n+  private final List<ReferenceExpression> projectList;\n+\n+  @Override\n+  public <R, C> R accept(PhysicalPlanNodeVisitor<R, C> visitor, C context) {\n+    return visitor.visitProject(this, context);\n+  }\n+\n+  @Override\n+  public List<PhysicalPlan> getChild() {\n+    return Collections.singletonList(input);\n+  }\n+\n+  @Override\n+  public boolean hasNext() {\n+    return input.hasNext();\n+  }\n+\n+  @Override\n+  public ExprValue next() {\n+    ExprValue inputValue = input.next();\n+    ImmutableMap.Builder<String, ExprValue> mapBuilder = new Builder<>();\n+    for (ReferenceExpression ref : projectList) {\n+      ExprValue exprValue = ref.valueOf(inputValue.bindingTuples());\n+      // missing value is ignored.\n+      if (!exprValue.isMissing()) {\n+        mapBuilder.put(ref.toString(), ref.valueOf(inputValue.bindingTuples()));", "originalCommit": "dc02bb923318eb04f6d8661050b52ab4455bfd5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MzU2OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/472#discussion_r428283569", "bodyText": "done.", "author": "penghuo", "createdAt": "2020-05-20T20:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNjU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "7acf764d82eac3941b985766e272e0a50cd6b82f", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/ProjectOperator.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/ProjectOperator.java\nindex cfd16ea5..30928bd1 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/ProjectOperator.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/planner/physical/ProjectOperator.java\n", "chunk": "@@ -57,7 +57,7 @@ public class ProjectOperator extends PhysicalPlan {\n       ExprValue exprValue = ref.valueOf(inputValue.bindingTuples());\n       // missing value is ignored.\n       if (!exprValue.isMissing()) {\n-        mapBuilder.put(ref.toString(), ref.valueOf(inputValue.bindingTuples()));\n+        mapBuilder.put(ref.toString(), exprValue);\n       }\n     }\n     return ExprTupleValue.fromExprValueMap(mapBuilder.build());\n", "next_change": null}]}}, {"oid": "7acf764d82eac3941b985766e272e0a50cd6b82f", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7acf764d82eac3941b985766e272e0a50cd6b82f", "message": "update", "committedDate": "2020-05-20T20:18:38Z", "type": "commit"}]}