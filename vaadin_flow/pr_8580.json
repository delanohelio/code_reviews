{"pr_number": 8580, "pr_title": "Enable generating self-referencing arrays in TypeScript models", "pr_author": "platosha", "pr_createdAt": "2020-06-17T15:14:36Z", "pr_url": "https://github.com/vaadin/flow/pull/8580", "timeline": [{"oid": "d1df42094fac93aa1f8ab5c4afc04ef0cb3fdb1c", "url": "https://github.com/vaadin/flow/commit/d1df42094fac93aa1f8ab5c4afc04ef0cb3fdb1c", "message": "Enable generating self-referencing arrays in TypeScript models\n\nFixes #8515", "committedDate": "2020-06-17T15:14:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgxMTgxNA==", "url": "https://github.com/vaadin/flow/pull/8580#discussion_r441811814", "body": "```suggestion\r\n/*\r\n * Copyright 2000-2020 Vaadin Ltd.\r\n *\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /* Copyright 2000-2020 Vaadin Ltd.\n          \n          \n            \n            /*\n          \n          \n            \n             * Copyright 2000-2020 Vaadin Ltd.\n          \n          \n            \n             *", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span><span class=\"x x-first x-last\"> Copyright 2000-2020 Vaadin Ltd.</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2000</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">2020</span> <span class=\"pl-smi\">Vaadin</span> <span class=\"pl-smi\">Ltd</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vlukashov", "createdAt": "2020-06-17T20:24:41Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/generator/VaadinConnectTsGenerator.java", "diffHunk": "@@ -1,6 +1,4 @@\n-/*\n- * Copyright 2000-2020 Vaadin Ltd.\n- *\n+/* Copyright 2000-2020 Vaadin Ltd.", "originalCommit": "d1df42094fac93aa1f8ab5c4afc04ef0cb3fdb1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f8ab6cb45c2b939cf1f79b68160a6fd392826102", "url": "https://github.com/vaadin/flow/commit/f8ab6cb45c2b939cf1f79b68160a6fd392826102", "message": "revert changes to the copyright header", "committedDate": "2020-06-17T20:25:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgzOTI3NQ==", "url": "https://github.com/vaadin/flow/pull/8580#discussion_r441839275", "body": "This fails for multidimensional arrays like `int[][]`. The failure is also present in the `master` branch (i.e. it's not introduced by this PR), so I would not mark it as a blocking review comment here. Instead, I've created a separate issue to fix it: https://github.com/vaadin/flow/issues/8582\r\n\r\nAs a side note, regex is usually **not** an appropriate tool to parse source code. In the best case it creates difficult to detect but fixable bugs (like this one). And in the worst case it is theoretically proven to be insufficient for the task (e.g. see https://stackoverflow.com/a/1732454).\r\n\r\nI have not checked whether type declarations in TypeScript follow a regular grammar (i.e. that they in principle _can_ be parsed with a regex). Maybe.", "bodyText": "This fails for multidimensional arrays like int[][]. The failure is also present in the master branch (i.e. it's not introduced by this PR), so I would not mark it as a blocking review comment here. Instead, I've created a separate issue to fix it: #8582\nAs a side note, regex is usually not an appropriate tool to parse source code. In the best case it creates difficult to detect but fixable bugs (like this one). And in the worst case it is theoretically proven to be insufficient for the task (e.g. see https://stackoverflow.com/a/1732454).\nI have not checked whether type declarations in TypeScript follow a regular grammar (i.e. that they in principle can be parsed with a regex). Maybe.", "bodyHTML": "<p dir=\"auto\">This fails for multidimensional arrays like <code>int[][]</code>. The failure is also present in the <code>master</code> branch (i.e. it's not introduced by this PR), so I would not mark it as a blocking review comment here. Instead, I've created a separate issue to fix it: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"640737098\" data-permission-text=\"Title is private\" data-url=\"https://github.com/vaadin/flow/issues/8582\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vaadin/flow/issues/8582/hovercard\" href=\"https://github.com/vaadin/flow/issues/8582\">#8582</a></p>\n<p dir=\"auto\">As a side note, regex is usually <strong>not</strong> an appropriate tool to parse source code. In the best case it creates difficult to detect but fixable bugs (like this one). And in the worst case it is theoretically proven to be insufficient for the task (e.g. see <a href=\"https://stackoverflow.com/a/1732454\" rel=\"nofollow\">https://stackoverflow.com/a/1732454</a>).</p>\n<p dir=\"auto\">I have not checked whether type declarations in TypeScript follow a regular grammar (i.e. that they in principle <em>can</em> be parsed with a regex). Maybe.</p>", "author": "vlukashov", "createdAt": "2020-06-17T21:16:38Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/generator/VaadinConnectTsGenerator.java", "diffHunk": "@@ -518,7 +518,22 @@ private String getSimpleNameFromImports(String dataType,\n         return getSimpleNameFromQualifiedName(dataType);\n     }\n \n-    private String getModeleConstructor(CodegenProperty property,\n+    private String getModelType(CodegenProperty property,\n+            List<Map<String, String>> imports) {\n+        String simpleName = getSimpleNameFromImports(property.datatype,\n+                imports);\n+\n+        Matcher matcher = Pattern.compile(\"Array<(.+)>\").matcher(simpleName);", "originalCommit": "f8ab6cb45c2b939cf1f79b68160a6fd392826102", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}