{"pr_number": 8765, "pr_title": "fixing error message when fails to load content of index.html (#8593)", "pr_author": "hfazai", "pr_createdAt": "2020-07-23T10:38:06Z", "pr_url": "https://github.com/vaadin/flow/pull/8765", "timeline": [{"oid": "3f7455247b8b015c722497e1e2836abe90c85b13", "url": "https://github.com/vaadin/flow/commit/3f7455247b8b015c722497e1e2836abe90c85b13", "message": "fixing error message when fails to load content of index.html", "committedDate": "2020-07-23T10:32:32Z", "type": "commit"}, {"oid": "90e838d3a8fd82a9d050a589cc5c54362b395c12", "url": "https://github.com/vaadin/flow/commit/90e838d3a8fd82a9d050a589cc5c54362b395c12", "message": "adding import", "committedDate": "2020-07-23T10:47:32Z", "type": "commit"}, {"oid": "0e56491aa5e66addacb46f1938a726a4ca900c66", "url": "https://github.com/vaadin/flow/commit/0e56491aa5e66addacb46f1938a726a4ca900c66", "message": "code enhancement", "committedDate": "2020-07-23T11:17:03Z", "type": "commit"}, {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce", "url": "https://github.com/vaadin/flow/commit/626975b60518dbab6cd14e64ad948d65d117d5ce", "message": "code enhancement and adding test", "committedDate": "2020-08-13T10:57:18Z", "type": "commit"}, {"oid": "9336ca16f9557763dde9292817399dbf5ca48e60", "url": "https://github.com/vaadin/flow/commit/9336ca16f9557763dde9292817399dbf5ca48e60", "message": "enhancement", "committedDate": "2020-08-13T11:11:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469880318", "body": "I believe you can use `@Rule ExpectedException exceptionRule` and then `expect()` and `exceptionRule.expectMessage()` here. Flow project has many examples of such a usage.", "bodyText": "I believe you can use @Rule ExpectedException exceptionRule and then expect() and exceptionRule.expectMessage() here. Flow project has many examples of such a usage.", "bodyHTML": "<p dir=\"auto\">I believe you can use <code>@Rule ExpectedException exceptionRule</code> and then <code>expect()</code> and <code>exceptionRule.expectMessage()</code> here. Flow project has many examples of such a usage.</p>", "author": "mshabarov", "createdAt": "2020-08-13T11:22:05Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}\n+\n+        try {\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODI0OA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928248", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469882106", "body": "Better use `Assert.assertNotNull()`, because it's a test, not a production code.", "bodyText": "Better use Assert.assertNotNull(), because it's a test, not a production code.", "bodyHTML": "<p dir=\"auto\">Better use <code>Assert.assertNotNull()</code>, because it's a test, not a production code.</p>", "author": "mshabarov", "createdAt": "2020-08-13T11:25:55Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODMwOQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928309", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469884412", "body": "Why are you ignore the exceptions? `Try-catch` should be excluded and those exceptions should be added to method signature, and if being thrown, fails the test. ", "bodyText": "Why are you ignore the exceptions? Try-catch should be excluded and those exceptions should be added to method signature, and if being thrown, fails the test.", "bodyHTML": "<p dir=\"auto\">Why are you ignore the exceptions? <code>Try-catch</code> should be excluded and those exceptions should be added to method signature, and if being thrown, fails the test.</p>", "author": "mshabarov", "createdAt": "2020-08-13T11:30:50Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODQzMQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928431", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469886301", "body": "Maybe I missed something, but this file deletion looks like a side effect that may have an impact on other tests, because the require this file to be presented. I think we have to re-create this file in the end of test.", "bodyText": "Maybe I missed something, but this file deletion looks like a side effect that may have an impact on other tests, because the require this file to be presented. I think we have to re-create this file in the end of test.", "bodyHTML": "<p dir=\"auto\">Maybe I missed something, but this file deletion looks like a side effect that may have an impact on other tests, because the require this file to be presented. I think we have to re-create this file in the end of test.</p>", "author": "mshabarov", "createdAt": "2020-08-13T11:34:42Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NzI0Ng==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469887246", "bodyText": "UPDATE: Yes. The tests are failing because of that. So, please re-create a file or choose another way to simulate the index.html absence.", "author": "mshabarov", "createdAt": "2020-08-13T11:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODA1Mw==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928053", "bodyText": "Yes indead, So I simulated the absence by renaming the file and finally restore it", "author": "hfazai", "createdAt": "2020-08-13T12:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}], "type": "inlineReview"}, {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "url": "https://github.com/vaadin/flow/commit/0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "message": "simulate index-html absence by rename", "committedDate": "2020-08-13T12:50:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944364", "body": "```suggestion\r\n                .format(\"Failed to load content of '%1$s'. \"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .format(\"Failed to load content of '%1$s'.\"\n          \n          \n            \n                            .format(\"Failed to load content of '%1$s'. \"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to load content of '%1$s'.<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to load content of '%1$s'.<span class=\"x x-first x-last\"> </span><span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mshabarov", "createdAt": "2020-08-13T13:18:57Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "diffHunk": "@@ -172,10 +174,16 @@ private static Document getIndexHtmlDocument(VaadinRequest request)\n         }\n         String frontendDir = FrontendUtils.getProjectFrontendDir(\n                 request.getService().getDeploymentConfiguration());\n+        String indexHtmlFilePath;\n+        if(frontendDir.endsWith(File.separator)) {\n+            indexHtmlFilePath = frontendDir + \"index.html\";\n+        } else {\n+            indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n+        }\n         String message = String\n-                .format(\"Failed to load content of '%1$sindex.html'.\"\n-                        + \"It is required to have '%1$sindex.html' file when \"\n-                        + \"using client side bootstrapping.\", frontendDir);\n+                .format(\"Failed to load content of '%1$s'.\"", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzEwNQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947105", "bodyText": "Suggestion to add a space between sentences for pretty format", "author": "mshabarov", "createdAt": "2020-08-13T13:23:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODA2MA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968060", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944661", "body": "```suggestion\r\n            String expectedError = \"Failed to load content of './frontend/index.html'. \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n          \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'. \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> expectedError <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to load content of './frontend/index.html'.<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> expectedError <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to load content of './frontend/index.html'.<span class=\"x x-first x-last\"> </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mshabarov", "createdAt": "2020-08-13T13:19:28Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n+\n+            String expectedError = \"Failed to load content of './frontend/index.html'.\" +", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzE1OQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947159", "bodyText": "Suggestion to add a space between sentences for pretty format", "author": "mshabarov", "createdAt": "2020-08-13T13:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODEwNQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968105", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469951914", "body": "Please also add an assertion of returned value, so as to be sure the file has been renamed.", "bodyText": "Please also add an assertion of returned value, so as to be sure the file has been renamed.", "bodyHTML": "<p dir=\"auto\">Please also add an assertion of returned value, so as to be sure the file has been renamed.</p>", "author": "mshabarov", "createdAt": "2020-08-13T13:30:22Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODE1Mg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968152", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA=="}], "type": "inlineReview"}, {"oid": "997cceacfd3f5db8f51ce05b8b639f45857a195f", "url": "https://github.com/vaadin/flow/commit/997cceacfd3f5db8f51ce05b8b639f45857a195f", "message": "adding space and assert rename file", "committedDate": "2020-08-13T13:51:44Z", "type": "commit"}]}