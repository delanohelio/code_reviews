{"pr_number": 9646, "pr_title": "test: add document.css level styles tests", "pr_author": "mshabarov", "pr_createdAt": "2020-12-14T12:56:31Z", "pr_url": "https://github.com/vaadin/flow/pull/9646", "timeline": [{"oid": "827f06cbbd0b4b6f74045021f69e3152f03750bb", "url": "https://github.com/vaadin/flow/commit/827f06cbbd0b4b6f74045021f69e3152f03750bb", "message": "test: add document.css level styles tests", "committedDate": "2020-12-14T12:55:54Z", "type": "commit"}, {"oid": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "url": "https://github.com/vaadin/flow/commit/7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "message": "The font defined in global.css should be applied to embedded component", "committedDate": "2020-12-15T09:30:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzMzg5NA==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543233894", "body": "I feel this doesn't check that the `@font-face` declaration has been inserted only that some arbitrary rule in position 0 contains ostrich as a string part.\r\nExpecting it to always be in index 0 is also easily broken by some minor change.\r\nI would propose to make it more robust by using for instance\r\n```\r\nlet found = false;\r\nfor (let as=0; as<document.adoptedStyleSheets.length;++as) {\r\n    let styleSheetRules = document.adoptedStyleSheets[as].rules;\r\n    for (var ss = 0; ss < styleSheetRules.length; ++ss) {\r\n        let cssRule = styleSheetRules[ss];\r\n            if (cssRule instanceof CSSFontFaceRule && cssRule.cssText.startsWith(\"@font-face { font-family: Ostrich;\")) {\r\n                found = true;\r\n            } \r\n    }\r\n}\r\nreturn found;\r\n```\r\n\r\nThis would guarantee that it is the `@font-face` declaration.", "bodyText": "I feel this doesn't check that the @font-face declaration has been inserted only that some arbitrary rule in position 0 contains ostrich as a string part.\nExpecting it to always be in index 0 is also easily broken by some minor change.\nI would propose to make it more robust by using for instance\nlet found = false;\nfor (let as=0; as<document.adoptedStyleSheets.length;++as) {\n    let styleSheetRules = document.adoptedStyleSheets[as].rules;\n    for (var ss = 0; ss < styleSheetRules.length; ++ss) {\n        let cssRule = styleSheetRules[ss];\n            if (cssRule instanceof CSSFontFaceRule && cssRule.cssText.startsWith(\"@font-face { font-family: Ostrich;\")) {\n                found = true;\n            } \n    }\n}\nreturn found;\n\nThis would guarantee that it is the @font-face declaration.", "bodyHTML": "<p dir=\"auto\">I feel this doesn't check that the <code>@font-face</code> declaration has been inserted only that some arbitrary rule in position 0 contains ostrich as a string part.<br>\nExpecting it to always be in index 0 is also easily broken by some minor change.<br>\nI would propose to make it more robust by using for instance</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"let found = false;\nfor (let as=0; as&lt;document.adoptedStyleSheets.length;++as) {\n    let styleSheetRules = document.adoptedStyleSheets[as].rules;\n    for (var ss = 0; ss &lt; styleSheetRules.length; ++ss) {\n        let cssRule = styleSheetRules[ss];\n            if (cssRule instanceof CSSFontFaceRule &amp;&amp; cssRule.cssText.startsWith(&quot;@font-face { font-family: Ostrich;&quot;)) {\n                found = true;\n            } \n    }\n}\nreturn found;\"><pre><code>let found = false;\nfor (let as=0; as&lt;document.adoptedStyleSheets.length;++as) {\n    let styleSheetRules = document.adoptedStyleSheets[as].rules;\n    for (var ss = 0; ss &lt; styleSheetRules.length; ++ss) {\n        let cssRule = styleSheetRules[ss];\n            if (cssRule instanceof CSSFontFaceRule &amp;&amp; cssRule.cssText.startsWith(\"@font-face { font-family: Ostrich;\")) {\n                found = true;\n            } \n    }\n}\nreturn found;\n</code></pre></div>\n<p dir=\"auto\">This would guarantee that it is the <code>@font-face</code> declaration.</p>", "author": "caalador", "createdAt": "2020-12-15T10:41:28Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -88,4 +88,42 @@ public void componentThemeIsApplied_forPolymerAndLit() {\n         Assert.assertEquals(\"Lit radiobutton should have red background\",\n             \"rgba(255, 0, 0, 1)\", radio.getCssValue(\"background-color\"));\n     }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToDocumentRoot() {\n+        open();\n+\n+        Long adoptedStyles = (Long) getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets !== undefined ? document\"\n+                        + \".adoptedStyleSheets.length : 0\");\n+\n+        Assert.assertTrue(\n+                \"Expected the document root to have the adopted styles\",\n+                adoptedStyles > 0);\n+\n+        Object ostrichFontStylesFound = getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets.map(styleSheet => styleSheet\"", "originalCommit": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1OTQ4OA==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543259488", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-12-15T11:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzMzg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNDU0Nw==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543234547", "body": "Same script as above, but the result should be false as the `@font-face` declaration should not be added to the embedded component.", "bodyText": "Same script as above, but the result should be false as the @font-face declaration should not be added to the embedded component.", "bodyHTML": "<p dir=\"auto\">Same script as above, but the result should be false as the <code>@font-face</code> declaration should not be added to the embedded component.</p>", "author": "caalador", "createdAt": "2020-12-15T10:42:18Z", "path": "flow-tests/test-embedding/test-embedding-application-theme/src/test/java/com/vaadin/flow/webcomponent/ApplicationThemeComponentIT.java", "diffHunk": "@@ -88,4 +88,42 @@ public void componentThemeIsApplied_forPolymerAndLit() {\n         Assert.assertEquals(\"Lit radiobutton should have red background\",\n             \"rgba(255, 0, 0, 1)\", radio.getCssValue(\"background-color\"));\n     }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToDocumentRoot() {\n+        open();\n+\n+        Long adoptedStyles = (Long) getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets !== undefined ? document\"\n+                        + \".adoptedStyleSheets.length : 0\");\n+\n+        Assert.assertTrue(\n+                \"Expected the document root to have the adopted styles\",\n+                adoptedStyles > 0);\n+\n+        Object ostrichFontStylesFound = getCommandExecutor().executeScript(\n+                \"return document.adoptedStyleSheets.map(styleSheet => styleSheet\"\n+                        + \".cssRules[0].cssText).filter(cssText => cssText\"\n+                        + \".indexOf('Ostrich') > 0).length > 0;\");\n+\n+        Assert.assertEquals(\n+                \"Expected Ostrich font to be applied to document root element\",\n+                Boolean.TRUE, ostrichFontStylesFound);\n+    }\n+\n+    @Test\n+    public void documentCssFonts_fromLocalCssFile_fontAppliedToEmbeddedComponent() {\n+        open();\n+\n+        Object ostrichFontStylesFoundForEmbedded = getCommandExecutor()\n+                .executeScript(\n+                        \"return document.getElementsByTagName('themed-component')[0]\"\n+                                + \".shadowRoot.adoptedStyleSheets.map(styleSheet => \"\n+                                + \"styleSheet.cssRules[0].cssText).filter(cssText => \"\n+                                + \"cssText.indexOf('Ostrich') > 0).length > 0;\");", "originalCommit": "7eadfbfae4e2e16aca97494da46e9b4bd7a6b23b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1OTc5Ng==", "url": "https://github.com/vaadin/flow/pull/9646#discussion_r543259796", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-12-15T11:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNDU0Nw=="}], "type": "inlineReview"}, {"oid": "2a3da01d5e67e4e62a1f4937bcecc6010078773c", "url": "https://github.com/vaadin/flow/commit/2a3da01d5e67e4e62a1f4937bcecc6010078773c", "message": "Make the script more robust", "committedDate": "2020-12-15T11:19:59Z", "type": "commit"}]}