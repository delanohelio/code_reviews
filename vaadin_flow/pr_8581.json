{"pr_number": 8581, "pr_title": "Configure identity provider for a components through the Data View", "pr_author": "mshabarov", "pr_createdAt": "2020-06-17T19:39:10Z", "pr_url": "https://github.com/vaadin/flow/pull/8581", "timeline": [{"oid": "134ee8a45b12939d87915b497a96dd58aa53c8cb", "url": "https://github.com/vaadin/flow/commit/134ee8a45b12939d87915b497a96dd58aa53c8cb", "message": "Configure identity provider for a components through the Data View", "committedDate": "2020-06-18T11:20:51Z", "type": "commit"}, {"oid": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "url": "https://github.com/vaadin/flow/commit/7bfd9e47e6efd3b473253247700d8d0dad69490a", "message": "Remove unused import", "committedDate": "2020-06-18T11:20:52Z", "type": "commit"}, {"oid": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "url": "https://github.com/vaadin/flow/commit/7bfd9e47e6efd3b473253247700d8d0dad69490a", "message": "Remove unused import", "committedDate": "2020-06-18T11:20:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1ODUzMg==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442158532", "body": "You cannot presume this, as it is IMO fine that the user adds the size change listener via the data view before setting the data provider https://github.com/vaadin/flow/issues/8583", "bodyText": "You cannot presume this, as it is IMO fine that the user adds the size change listener via the data view before setting the data provider #8583", "bodyHTML": "<p dir=\"auto\">You cannot presume this, as it is IMO fine that the user adds the size change listener via the data view before setting the data provider <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"640979197\" data-permission-text=\"Title is private\" data-url=\"https://github.com/vaadin/flow/issues/8583\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vaadin/flow/issues/8583/hovercard\" href=\"https://github.com/vaadin/flow/issues/8583\">#8583</a></p>", "author": "pleku", "createdAt": "2020-06-18T11:30:40Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "diffHunk": "@@ -49,9 +51,15 @@\n     public AbstractDataView(\n             SerializableSupplier<? extends DataProvider<T, ?>> dataProviderSupplier,\n             Component component) {\n+        Objects.requireNonNull(dataProviderSupplier,\n+                \"DataProvider supplier cannot be null\");\n         this.dataProviderSupplier = dataProviderSupplier;\n         this.component = component;\n-        verifyDataProviderType(dataProviderSupplier.get().getClass());\n+        final DataProvider<T, ?> dataProvider = dataProviderSupplier.get();\n+        Objects.requireNonNull(dataProvider,\n+                \"Supplied DataProvider cannot be null\");", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0NjA5OA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443346098", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-06-22T06:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1ODUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1ODY1OA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442158658", "body": "There is a chance that\r\n1) the user stores the data view and reuses\r\n2) the user changes the data provider manually and still uses the correct type of data for the data view\r\n3) the identity method points to the old data provider `getId` method.\r\nWouldn't it be fine to only store a customized one ?", "bodyText": "There is a chance that\n\nthe user stores the data view and reuses\nthe user changes the data provider manually and still uses the correct type of data for the data view\nthe identity method points to the old data provider getId method.\nWouldn't it be fine to only store a customized one ?", "bodyHTML": "<p dir=\"auto\">There is a chance that</p>\n<ol dir=\"auto\">\n<li>the user stores the data view and reuses</li>\n<li>the user changes the data provider manually and still uses the correct type of data for the data view</li>\n<li>the identity method points to the old data provider <code>getId</code> method.<br>\nWouldn't it be fine to only store a customized one ?</li>\n</ol>", "author": "pleku", "createdAt": "2020-06-18T11:30:53Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "diffHunk": "@@ -49,9 +51,15 @@\n     public AbstractDataView(\n             SerializableSupplier<? extends DataProvider<T, ?>> dataProviderSupplier,\n             Component component) {\n+        Objects.requireNonNull(dataProviderSupplier,\n+                \"DataProvider supplier cannot be null\");\n         this.dataProviderSupplier = dataProviderSupplier;\n         this.component = component;\n-        verifyDataProviderType(dataProviderSupplier.get().getClass());\n+        final DataProvider<T, ?> dataProvider = dataProviderSupplier.get();\n+        Objects.requireNonNull(dataProvider,\n+                \"Supplied DataProvider cannot be null\");\n+        this.identityProvider = dataProvider::getId;", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0NjI4Nw==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443346287", "bodyText": "Done. I've added the tests to cover this case.", "author": "mshabarov", "createdAt": "2020-06-22T06:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1ODY1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2MTQ1Mg==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442161452", "body": "We can't store things in the data view as those are disposable ... you should store this into the component instance using `ComponentUtil:setData`", "bodyText": "We can't store things in the data view as those are disposable ... you should store this into the component instance using ComponentUtil:setData", "bodyHTML": "<p dir=\"auto\">We can't store things in the data view as those are disposable ... you should store this into the component instance using <code>ComponentUtil:setData</code></p>", "author": "pleku", "createdAt": "2020-06-18T11:36:52Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/AbstractDataView.java", "diffHunk": "@@ -99,4 +107,11 @@ protected final void verifyDataProviderType(Class<?> dataProviderType) {\n     public int getSize() {\n         return dataProviderSupplier.get().size(new Query<>());\n     }\n+\n+    @Override\n+    public void setIdentityProvider(ValueProvider<T, ?> identityProvider) {\n+        Objects.requireNonNull(identityProvider,\n+                \"Item identity provider cannot be null\");\n+        this.identityProvider = identityProvider;", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2MTIyMQ==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443361221", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-06-22T07:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2MTQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2MzQ1MA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442163450", "body": "\"provided by {@link DataProvider#getId(Object)}.\"\r\nWhat does this mean when the users should not care about data providers anymore ?\r\nSince the default implementation for getId requires equals, you should say it, so please change to say something like \"by default `equals` method is used for identity check but if a custom data provider is used, then the `getId` method is used instead.\"", "bodyText": "\"provided by {@link DataProvider#getId(Object)}.\"\nWhat does this mean when the users should not care about data providers anymore ?\nSince the default implementation for getId requires equals, you should say it, so please change to say something like \"by default equals method is used for identity check but if a custom data provider is used, then the getId method is used instead.\"", "bodyHTML": "<p dir=\"auto\">\"provided by {<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/link/hovercard\" href=\"https://github.com/link\">@link</a> DataProvider#getId(Object)}.\"<br>\nWhat does this mean when the users should not care about data providers anymore ?<br>\nSince the default implementation for getId requires equals, you should say it, so please change to say something like \"by default <code>equals</code> method is used for identity check but if a custom data provider is used, then the <code>getId</code> method is used instead.\"</p>", "author": "pleku", "createdAt": "2020-06-18T11:40:59Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataView.java", "diffHunk": "@@ -51,10 +52,16 @@\n      * Check if item is in the current data.\n      * Item may be filtered out or for lazy data not in the currently loaded\n      * making it un-available.\n+     * <p>\n+     * By default, equality between the items is determined by the identifiers\n+     * provided by {@link DataProvider#getId(Object)}. Identity provider can", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2MTI4NQ==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443361285", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-06-22T07:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2MzQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NDA2OA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442164068", "body": "Same thing here, should just say that default is equals or a custom data provider getId-method if used", "bodyText": "Same thing here, should just say that default is equals or a custom data provider getId-method if used", "bodyHTML": "<p dir=\"auto\">Same thing here, should just say that default is equals or a custom data provider getId-method if used</p>", "author": "pleku", "createdAt": "2020-06-18T11:42:23Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/ListDataView.java", "diffHunk": "@@ -124,8 +123,9 @@\n      * Finds an item equal to {@code item} in the non-filtered data set\n      * and replaces it with {@code item}.\n      * <p>\n-     * Equality between the items is determined by the identifiers\n-     * provided by {@link DataProvider#getId(Object)}.\n+     * By default, equality between the items is determined by the identifiers\n+     * provided by {@link DataProvider#getId(Object)}. Identity provider can\n+     * be changed with a {@link DataView#setIdentityProvider(ValueProvider)}.", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2MTM0NA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443361344", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-06-22T07:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NDA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NDc3NQ==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r442164775", "body": "Please add a test that retains the custom identity provider when data source has changed, probably to `AbstractDataView`\r\n\r\nAnd tests that check that the custom identity provider is actually used as expected", "bodyText": "Please add a test that retains the custom identity provider when data source has changed, probably to AbstractDataView\nAnd tests that check that the custom identity provider is actually used as expected", "bodyHTML": "<p dir=\"auto\">Please add a test that retains the custom identity provider when data source has changed, probably to <code>AbstractDataView</code></p>\n<p dir=\"auto\">And tests that check that the custom identity provider is actually used as expected</p>", "author": "pleku", "createdAt": "2020-06-18T11:43:52Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/AbstractListDataViewTest.java", "diffHunk": "@@ -764,9 +764,9 @@ public void updateItem_identityProvider_updatesExistingItem() {\n         ItemListDataView dataView = new ItemListDataView(\n                 () -> dataProvider, null);\n \n+        dataView.setIdentityProvider(Item::getId);\n         dataView.updateItem(\n-                new Item(1L, \"updatedValue\", \"updatedDescr\"),\n-                Item::getId);\n+                new Item(1L, \"updatedValue\", \"updatedDescr\"));", "originalCommit": "7bfd9e47e6efd3b473253247700d8d0dad69490a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2MTQ2OA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443361468", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-06-22T07:20:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2NDc3NQ=="}], "type": "inlineReview"}, {"oid": "f31c4d8d50162fe24d3e79e20131f090c4e0f683", "url": "https://github.com/vaadin/flow/commit/f31c4d8d50162fe24d3e79e20131f090c4e0f683", "message": "Store identity provider in a component", "committedDate": "2020-06-22T06:39:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3Njc2NQ==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443376765", "body": "1) just use \"items\" not \"data items\"\r\n2) not stored in data provider, but fetched by it\r\n3) should not refer to data provider\r\nSo maybe something like\r\n\"A callback interface that is used to provide the identifier of an item.\"\r\nAnd thus I would consider renaming this to `IdentifierProvider` instead since it seems to be more accurate term instead of \"identity\" which is kind of OK", "bodyText": "just use \"items\" not \"data items\"\nnot stored in data provider, but fetched by it\nshould not refer to data provider\nSo maybe something like\n\"A callback interface that is used to provide the identifier of an item.\"\nAnd thus I would consider renaming this to IdentifierProvider instead since it seems to be more accurate term instead of \"identity\" which is kind of OK", "bodyHTML": "<ol dir=\"auto\">\n<li>just use \"items\" not \"data items\"</li>\n<li>not stored in data provider, but fetched by it</li>\n<li>should not refer to data provider<br>\nSo maybe something like<br>\n\"A callback interface that is used to provide the identifier of an item.\"<br>\nAnd thus I would consider renaming this to <code>IdentifierProvider</code> instead since it seems to be more accurate term instead of \"identity\" which is kind of OK</li>\n</ol>", "author": "pleku", "createdAt": "2020-06-22T07:51:43Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import com.vaadin.flow.function.ValueProvider;\n+\n+/**\n+ * A callback interface that provides the identifier for a data items stored\n+ * in {@link DataProvider}.", "originalCommit": "f31c4d8d50162fe24d3e79e20131f090c4e0f683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5Nzg0MA==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443397840", "bodyText": "done", "author": "mshabarov", "createdAt": "2020-06-22T08:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3Njc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3NzMzMw==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443377333", "body": "Just \"item\", not \"data item\"", "bodyText": "Just \"item\", not \"data item\"", "bodyHTML": "<p dir=\"auto\">Just \"item\", not \"data item\"</p>", "author": "pleku", "createdAt": "2020-06-22T07:52:43Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import com.vaadin.flow.function.ValueProvider;\n+\n+/**\n+ * A callback interface that provides the identifier for a data items stored\n+ * in {@link DataProvider}.\n+ *\n+ * @param <T>\n+ *            the type of the data item", "originalCommit": "f31c4d8d50162fe24d3e79e20131f090c4e0f683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5Nzg4OQ==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443397889", "bodyText": "done", "author": "mshabarov", "createdAt": "2020-06-22T08:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3NzMzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3NzM0Ng==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443377346", "body": "C/P javadocs need changing, not a value provider", "bodyText": "C/P javadocs need changing, not a value provider", "bodyHTML": "<p dir=\"auto\">C/P javadocs need changing, not a value provider</p>", "author": "pleku", "createdAt": "2020-06-22T07:52:45Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.data.provider;\n+\n+import com.vaadin.flow.function.ValueProvider;\n+\n+/**\n+ * A callback interface that provides the identifier for a data items stored\n+ * in {@link DataProvider}.\n+ *\n+ * @param <T>\n+ *            the type of the data item\n+ * @since\n+ */\n+@FunctionalInterface\n+public interface IdentityProvider<T> extends ValueProvider<T, Object> {\n+    /**\n+     * Returns a value provider that always returns its input argument.", "originalCommit": "f31c4d8d50162fe24d3e79e20131f090c4e0f683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5Nzk1Ng==", "url": "https://github.com/vaadin/flow/pull/8581#discussion_r443397956", "bodyText": "done", "author": "mshabarov", "createdAt": "2020-06-22T08:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM3NzM0Ng=="}], "type": "inlineReview"}, {"oid": "fa5fcf052c1d9282e750536071dd87646fe8535c", "url": "https://github.com/vaadin/flow/commit/fa5fcf052c1d9282e750536071dd87646fe8535c", "message": "Rename identity to identifier provider, javadoc fix", "committedDate": "2020-06-22T08:22:52Z", "type": "commit"}]}