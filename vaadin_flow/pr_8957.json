{"pr_number": 8957, "pr_title": "Read attribute value from template", "pr_author": "denis-anisimov", "pr_createdAt": "2020-09-07T11:01:57Z", "pr_url": "https://github.com/vaadin/flow/pull/8957", "timeline": [{"oid": "5eb269ba750f5c584ff04c6245c7d421313fa606", "url": "https://github.com/vaadin/flow/commit/5eb269ba750f5c584ff04c6245c7d421313fa606", "message": "Read static attributes values for @Id mapped elements", "committedDate": "2020-09-07T08:13:07Z", "type": "commit"}, {"oid": "8b1ce09295a58c0a139bd502f21f2de936d01191", "url": "https://github.com/vaadin/flow/commit/8b1ce09295a58c0a139bd502f21f2de936d01191", "message": "Add test for attribute values in template", "committedDate": "2020-09-07T08:21:06Z", "type": "commit"}, {"oid": "70eaf651764c5ec35e3996258258ebf4725b4e08", "url": "https://github.com/vaadin/flow/commit/70eaf651764c5ec35e3996258258ebf4725b4e08", "message": "Fix for CTOR call in lit template", "committedDate": "2020-09-07T08:26:35Z", "type": "commit"}, {"oid": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "url": "https://github.com/vaadin/flow/commit/8e2d8f59f356a708957260a8e7eff0991c2155b1", "message": "Add IT test for template attribute reading", "committedDate": "2020-09-07T09:51:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM5Nzg1NA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484397854", "body": "![MAJOR](https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR') Call \"tagName.isPresent()\" before accessing the value. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS3655)\n", "bodyText": "Call \"tagName.isPresent()\" before accessing the value.", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/89049b9c46c662e8fa6d1566cd43762c4f8bd19db7eab2c95254508f0f6f31eb/68747470733a2f2f736f6e6172736f757263652e6769746875622e696f2f736f6e61722d6769746875622f73657665726974792d6d616a6f722e706e67\"><img src=\"https://camo.githubusercontent.com/89049b9c46c662e8fa6d1566cd43762c4f8bd19db7eab2c95254508f0f6f31eb/68747470733a2f2f736f6e6172736f757263652e6769746875622e696f2f736f6e61722d6769746875622f73657665726974792d6d616a6f722e706e67\" alt=\"MAJOR\" title=\"Severity: MAJOR\" data-canonical-src=\"https://sonarsource.github.io/sonar-github/severity-major.png\" style=\"max-width: 100%;\"></a> Call \"tagName.isPresent()\" before accessing the value. <a href=\"https://sonar.projects.vaadin.com/coding_rules#rule_key=squid%3AS3655\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/90a66c56e56d5e4647676830313fa0693466067889c4c7dc2d7519da5a924230/68747470733a2f2f736f6e6172736f757263652e6769746875622e696f2f736f6e61722d6769746875622f72756c652e706e67\" alt=\"rule\" data-canonical-src=\"https://sonarsource.github.io/sonar-github/rule.png\" style=\"max-width: 100%;\"></a></p>", "author": "vaadin-bot", "createdAt": "2020-09-07T12:20:38Z", "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/IdCollector.java", "diffHunk": "@@ -121,16 +124,18 @@ private void collectedInjectedId(Field field,\n      * @return <code>false</code> if the mapping did not pass validation,\n      *         <code>true</code> otherwise\n      */\n-    private boolean addTagName(String id, Field field) {\n+    private boolean collectElementData(String id, Field field) {\n         idByField.put(field, id);\n         if (templateRoot != null) {\n             // The template is available for parsing so check up front if the id\n             // exists\n-            Optional<String> tagName = Optional\n-                    .ofNullable(templateRoot.getElementById(id))\n+            Optional<Element> element = Optional\n+                    .ofNullable(templateRoot.getElementById(id));\n+            Optional<String> tagName = element\n                     .map(org.jsoup.nodes.Element::tagName);\n-            if (tagName.isPresent()) {\n+            if (element.isPresent()) {\n                 tagById.put(id, tagName.get());", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzODc1NQ==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484638755", "body": "This should stay as `tagName.isPresent()` and the fetchAttributes be put in it's own `if(element.isPresent())` as now we may store a null tagName", "bodyText": "This should stay as tagName.isPresent() and the fetchAttributes be put in it's own if(element.isPresent()) as now we may store a null tagName", "bodyHTML": "<p dir=\"auto\">This should stay as <code>tagName.isPresent()</code> and the fetchAttributes be put in it's own <code>if(element.isPresent())</code> as now we may store a null tagName</p>", "author": "caalador", "createdAt": "2020-09-08T04:07:46Z", "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/IdCollector.java", "diffHunk": "@@ -121,16 +124,18 @@ private void collectedInjectedId(Field field,\n      * @return <code>false</code> if the mapping did not pass validation,\n      *         <code>true</code> otherwise\n      */\n-    private boolean addTagName(String id, Field field) {\n+    private boolean collectElementData(String id, Field field) {\n         idByField.put(field, id);\n         if (templateRoot != null) {\n             // The template is available for parsing so check up front if the id\n             // exists\n-            Optional<String> tagName = Optional\n-                    .ofNullable(templateRoot.getElementById(id))\n+            Optional<Element> element = Optional\n+                    .ofNullable(templateRoot.getElementById(id));\n+            Optional<String> tagName = element\n                     .map(org.jsoup.nodes.Element::tagName);\n-            if (tagName.isPresent()) {\n+            if (element.isPresent()) {", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NjM5NA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484666394", "bodyText": "tagName is mapped from Element. Element must have tag name\nSo the absence of tag name is the same as absence of Element.\nOr do I miss something ?", "author": "denis-anisimov", "createdAt": "2020-09-08T05:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzODc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3Nzg1OA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484677858", "bodyText": "Going by the normal creation methods tag is always needed. But should the end return be changed to element.isPresent instead of tagName.isPresent and handle the tagName inside the if clause", "author": "caalador", "createdAt": "2020-09-08T06:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzODc1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3OTg5OA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484679898", "bodyText": "Right.\nTechnically it doesn't matter but logically it's better to use the same unified code.", "author": "denis-anisimov", "createdAt": "2020-09-08T06:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYzODc1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NDA5NA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484654094", "body": "Could we add debug log for skipped attributes so that if there comes confusion on the issue it could be seen in the devug level logs.", "bodyText": "Could we add debug log for skipped attributes so that if there comes confusion on the issue it could be seen in the devug level logs.", "bodyHTML": "<p dir=\"auto\">Could we add debug log for skipped attributes so that if there comes confusion on the issue it could be seen in the devug level logs.</p>", "author": "caalador", "createdAt": "2020-09-08T05:14:31Z", "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/TemplateInitializer.java", "diffHunk": "@@ -153,9 +153,32 @@ private void attachComponentIfUses(Element element) {\n     /* Map declared fields marked @Id */\n \n     private void mapComponents() {\n-        parserData.forEachInjectedField(\n-                (field, id, tag) -> idMapper.mapComponentOrElement(field, id,\n-                        tag, this::attachComponentIfUses));\n+        parserData.forEachInjectedField((field, id, tag) -> idMapper\n+                .mapComponentOrElement(field, id, tag, element -> {\n+                    Map<String, String> attributes = parserData\n+                            .getAttributes(id);\n+                    attributes.forEach((name, value) -> setAttribute(element,\n+                            name, value));\n+                    attachComponentIfUses(element);\n+                }));\n+    }\n+\n+    private void setAttribute(Element element, String name, String value) {\n+        if (name.endsWith(\"$\")) {", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NTAwOQ==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484655009", "body": "Parameter is missing documentation should be filled even for privates if javadoc added.\r\n```suggestion\r\n     * @param beforeInject\r\n     *            a callback invoked before assigning the element/component to\r\n     *            the field\r\n```", "bodyText": "Parameter is missing documentation should be filled even for privates if javadoc added.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param beforeInject\n          \n          \n            \n                 * @param beforeInject\n          \n          \n            \n                 *            a callback invoked before assigning the element/component to\n          \n          \n            \n                 *            the field", "bodyHTML": "<p dir=\"auto\">Parameter is missing documentation should be filled even for privates if javadoc added.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"134\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> beforeInject</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"134\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> beforeInject</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"135\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span>            a callback invoked before assigning the element<span class=\"pl-k\">/</span>component to</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"136\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span>            the field</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "caalador", "createdAt": "2020-09-08T05:17:47Z", "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/IdMapper.java", "diffHunk": "@@ -129,10 +131,10 @@ private Element getElement() {\n      *            id of element to attach to\n      * @param field\n      *            field to attach {@code Element} or {@code Component} to\n-     * @param beforeComponentInject\n+     * @param beforeInject", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NjY4Mg==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484666682", "bodyText": "This is technically out of scope of this PR since no changes except parameter name has been done.\nBut ok.", "author": "denis-anisimov", "createdAt": "2020-09-08T05:56:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NTAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NjY3Ng==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484656676", "body": "```suggestion\r\n                    + \"' someattribute></dom-module>\");\r\n```\r\nTypo", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                + \"' someattrtibute></dom-module>\");\n          \n          \n            \n                                + \"' someattribute></dom-module>\");\n          \n      \n    \n    \n  \n\nTypo", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' <span class=\"x x-first x-last\">someattrtibute</span>&gt;&lt;/dom-module&gt;<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' <span class=\"x x-first x-last\">someattribute</span>&gt;&lt;/dom-module&gt;<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Typo</p>", "author": "caalador", "createdAt": "2020-09-08T05:24:04Z", "path": "flow-server/src/test/java/com/vaadin/flow/component/polymertemplate/PolymerTemplateTest.java", "diffHunk": "@@ -100,7 +100,8 @@ public TemplateData getTemplateContent(\n     private static class SimpleTemplateParser extends TestTemplateParser {\n \n         SimpleTemplateParser() {\n-            super(tag -> \"<dom-module id='\" + tag + \"' someattrtibute></dom-module>\");\n+            super(tag -> \"<dom-module id='\" + tag\n+                    + \"' someattrtibute></dom-module>\");", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NjkxOQ==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484666919", "bodyText": "This typo is all over the class.\nI'm not sure that it's worth to correct it only in this place.", "author": "denis-anisimov", "createdAt": "2020-09-08T05:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NjY3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1Njc0Mw==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484656743", "body": "```suggestion\r\n                            + \"'><label id='labelId' someattribute property-binding='[[foo]]' \"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        + \"'><label id='labelId' someattrtibute property-binding='[[foo]]' \"\n          \n          \n            \n                                        + \"'><label id='labelId' someattribute property-binding='[[foo]]' \"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'&gt;&lt;label id='labelId' <span class=\"x x-first x-last\">someattrtibute</span> property-binding='[[foo]]' <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'&gt;&lt;label id='labelId' <span class=\"x x-first x-last\">someattribute</span> property-binding='[[foo]]' <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "caalador", "createdAt": "2020-09-08T05:24:17Z", "path": "flow-server/src/test/java/com/vaadin/flow/component/polymertemplate/PolymerTemplateTest.java", "diffHunk": "@@ -312,7 +313,9 @@ public TextNodesInHtmlTemplate(TestTemplateParser parser) {\n         public IdElementTemplate() {\n             this((clazz, tag, service) -> new TemplateData(\"\",\n                     Jsoup.parse(\"<dom-module id='\" + tag\n-                            + \"'><label id='labelId' someattrtibute></dom-module>\")));\n+                            + \"'><label id='labelId' someattrtibute property-binding='[[foo]]' \"", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1NjkzOA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484656938", "body": "```suggestion\r\n        Assert.assertTrue(template.label.hasAttribute(\"someattribute\"));\r\n        Assert.assertNotNull(template.label.getAttribute(\"someattribute\"));\r\n        Assert.assertTrue(\r\n                template.label.getAttribute(\"someattribute\").isEmpty());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertTrue(template.label.hasAttribute(\"someattrtibute\"));\n          \n          \n            \n                    Assert.assertNotNull(template.label.getAttribute(\"someattrtibute\"));\n          \n          \n            \n                    Assert.assertTrue(\n          \n          \n            \n                            template.label.getAttribute(\"someattrtibute\").isEmpty());\n          \n          \n            \n                    Assert.assertTrue(template.label.hasAttribute(\"someattribute\"));\n          \n          \n            \n                    Assert.assertNotNull(template.label.getAttribute(\"someattribute\"));\n          \n          \n            \n                    Assert.assertTrue(\n          \n          \n            \n                            template.label.getAttribute(\"someattribute\").isEmpty());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertTrue(template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>hasAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattrtibute</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertNotNull(template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>getAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattrtibute</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertTrue(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>getAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattrtibute</span><span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>isEmpty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertTrue(template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>hasAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattribute</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertNotNull(template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>getAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattribute</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertTrue(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                template<span class=\"pl-k\">.</span>label<span class=\"pl-k\">.</span>getAttribute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">someattribute</span><span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>isEmpty());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "caalador", "createdAt": "2020-09-08T05:24:50Z", "path": "flow-server/src/test/java/com/vaadin/flow/component/polymertemplate/PolymerTemplateTest.java", "diffHunk": "@@ -765,6 +766,31 @@ public void attachExistingElement_elementIsCreatedAndSetAsVirtualChild() {\n         assertElementData(child, NodeProperties.INJECT_BY_ID, \"labelId\");\n     }\n \n+    @Test\n+    public void attachExistingElementWithAttributeValue_elementHasAttribute() {\n+        IdElementTemplate template = new IdElementTemplate();\n+\n+        Assert.assertTrue(template.label.hasAttribute(\"someattrtibute\"));\n+        Assert.assertNotNull(template.label.getAttribute(\"someattrtibute\"));\n+        Assert.assertTrue(\n+                template.label.getAttribute(\"someattrtibute\").isEmpty());", "originalCommit": "8e2d8f59f356a708957260a8e7eff0991c2155b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d7a86bc75be4037cbf4e73fdd433ad4277555cae", "url": "https://github.com/vaadin/flow/commit/d7a86bc75be4037cbf4e73fdd433ad4277555cae", "message": "Corrections based on review", "committedDate": "2020-09-08T05:53:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NjQyMA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484676420", "body": "info might bring too much logs, but this will become apparent quite early on I expect.", "bodyText": "info might bring too much logs, but this will become apparent quite early on I expect.", "bodyHTML": "<p dir=\"auto\">info might bring too much logs, but this will become apparent quite early on I expect.</p>", "author": "caalador", "createdAt": "2020-09-08T06:22:04Z", "path": "flow-server/src/main/java/com/vaadin/flow/component/polymertemplate/TemplateInitializer.java", "diffHunk": "@@ -153,9 +156,44 @@ private void attachComponentIfUses(Element element) {\n     /* Map declared fields marked @Id */\n \n     private void mapComponents() {\n-        parserData.forEachInjectedField(\n-                (field, id, tag) -> idMapper.mapComponentOrElement(field, id,\n-                        tag, this::attachComponentIfUses));\n+        parserData.forEachInjectedField((field, id, tag) -> idMapper\n+                .mapComponentOrElement(field, id, tag, element -> {\n+                    Map<String, String> attributes = parserData\n+                            .getAttributes(id);\n+                    attributes.forEach((name, value) -> setAttribute(element,\n+                            name, value));\n+                    attachComponentIfUses(element);\n+                }));\n+    }\n+\n+    private void setAttribute(Element element, String name, String value) {\n+        if (name.endsWith(\"$\")) {\n+            // this is an attribute binding, ignore it since we don't support\n+            // bindings: the value is not an expression\n+            getLogger().info(", "originalCommit": "d7a86bc75be4037cbf4e73fdd433ad4277555cae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3ODY0OA==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484678648", "bodyText": "Right, should be debug or trace.\nLet's make it debug ( or trace ) ?", "author": "denis-anisimov", "createdAt": "2020-09-08T06:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NjQyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3OTE5Mg==", "url": "https://github.com/vaadin/flow/pull/8957#discussion_r484679192", "bodyText": "I would propose debug.", "author": "caalador", "createdAt": "2020-09-08T06:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3NjQyMA=="}], "type": "inlineReview"}, {"oid": "533e9e98a3bcc8c130a2e1c2f5d1a9d02cc1a733", "url": "https://github.com/vaadin/flow/commit/533e9e98a3bcc8c130a2e1c2f5d1a9d02cc1a733", "message": "Use debug for logging ignored attributes", "committedDate": "2020-09-08T06:28:21Z", "type": "commit"}, {"oid": "04104b6a7e539aef5f59191866860ac76f043015", "url": "https://github.com/vaadin/flow/commit/04104b6a7e539aef5f59191866860ac76f043015", "message": "Improve the code a bit", "committedDate": "2020-09-08T06:31:13Z", "type": "commit"}, {"oid": "68f8fd982262eb120680927a57b83a79b70486b5", "url": "https://github.com/vaadin/flow/commit/68f8fd982262eb120680927a57b83a79b70486b5", "message": "Increase threshold", "committedDate": "2020-09-08T07:15:39Z", "type": "commit"}]}