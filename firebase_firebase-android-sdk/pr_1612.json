{"pr_number": 1612, "pr_title": "implemented hashcode, equals, toString methods for TypeToken in decoders", "pr_author": "James201311", "pr_createdAt": "2020-06-02T14:19:48Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1612", "timeline": [{"oid": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "url": "https://github.com/firebase/firebase-android-sdk/commit/06a4d40b9494c30eb76da7f8408305928eb8f2de", "message": "implemented hashcode equals toString for typeToken in decoders", "committedDate": "2020-06-02T14:17:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzNzQyNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434037425", "body": "I think this whole method could be just one line:\r\n```java\r\nreturn Arrays.hashCode(typeTokens);\r\n```\r\nwdyt?", "bodyText": "I think this whole method could be just one line:\nreturn Arrays.hashCode(typeTokens);\nwdyt?", "bodyHTML": "<p dir=\"auto\">I think this whole method could be just one line:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"return Arrays.hashCode(typeTokens);\"><pre><span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>hashCode(typeTokens);</pre></div>\n<p dir=\"auto\">wdyt?</p>", "author": "vkryachko", "createdAt": "2020-06-02T17:08:37Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -41,4 +42,48 @@ public TypeTokenContainer(@NonNull TypeToken[] typeTokens) {\n     TypeToken<T> typeToken = (TypeToken<T>) typeTokens[index];\n     return typeToken;\n   }\n+\n+  @Override\n+  public int hashCode() {", "originalCommit": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA0NTkyNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434045927", "bodyText": "Good call!!", "author": "James201311", "createdAt": "2020-06-02T17:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzNzQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzODAzNA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434038034", "body": "```suggestion\r\n    return Arrays.equals(typeTokens, that.typeTokens);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                TypeTokenContainer that = (TypeTokenContainer) o;\n          \n          \n            \n                if (this.typeTokens.length != that.typeTokens.length) {\n          \n          \n            \n                  return false;\n          \n          \n            \n                } else {\n          \n          \n            \n                  for (int i = 0; i < typeTokens.length; i++) {\n          \n          \n            \n                    if (!this.typeTokens[i].equals(that.typeTokens[i])) return false;\n          \n          \n            \n                  }\n          \n          \n            \n                  return true;\n          \n          \n            \n                return Arrays.equals(typeTokens, that.typeTokens);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">TypeTokenContainer</span> that <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">TypeTokenContainer</span>) o;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>typeTokens<span class=\"pl-k\">.</span>length <span class=\"pl-k\">!=</span> that<span class=\"pl-k\">.</span>typeTokens<span class=\"pl-k\">.</span>length) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; i <span class=\"pl-k\">&lt;</span> typeTokens<span class=\"pl-k\">.</span>length; i<span class=\"pl-k\">++</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>typeTokens[i]<span class=\"pl-k\">.</span>equals(that<span class=\"pl-k\">.</span>typeTokens[i])) <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>equals(typeTokens, that<span class=\"pl-k\">.</span>typeTokens);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vkryachko", "createdAt": "2020-06-02T17:09:41Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -41,4 +42,48 @@ public TypeTokenContainer(@NonNull TypeToken[] typeTokens) {\n     TypeToken<T> typeToken = (TypeToken<T>) typeTokens[index];\n     return typeToken;\n   }\n+\n+  @Override\n+  public int hashCode() {\n+    int result = 11;\n+    for (int i = 0; i < typeTokens.length; i++) {\n+      result += (i * i + i + 41) * typeTokens[i].hashCode();\n+    }\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean equals(@Nullable Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof TypeTokenContainer)) {\n+      return false;\n+    }\n+    TypeTokenContainer that = (TypeTokenContainer) o;\n+    if (this.typeTokens.length != that.typeTokens.length) {\n+      return false;\n+    } else {\n+      for (int i = 0; i < typeTokens.length; i++) {\n+        if (!this.typeTokens[i].equals(that.typeTokens[i])) return false;\n+      }\n+      return true;", "originalCommit": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NzIxMw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434147213", "bodyText": "I think this one still applies", "author": "vkryachko", "createdAt": "2020-06-02T20:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzODAzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzODczNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434038737", "body": "I don't think this one needs a `toString()`", "bodyText": "I don't think this one needs a toString()", "bodyHTML": "<p dir=\"auto\">I don't think this one needs a <code>toString()</code></p>", "author": "vkryachko", "createdAt": "2020-06-02T17:10:56Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeTokenContainer.java", "diffHunk": "@@ -41,4 +42,48 @@ public TypeTokenContainer(@NonNull TypeToken[] typeTokens) {\n     TypeToken<T> typeToken = (TypeToken<T>) typeTokens[index];\n     return typeToken;\n   }\n+\n+  @Override\n+  public int hashCode() {\n+    int result = 11;\n+    for (int i = 0; i < typeTokens.length; i++) {\n+      result += (i * i + i + 41) * typeTokens[i].hashCode();\n+    }\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean equals(@Nullable Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof TypeTokenContainer)) {\n+      return false;\n+    }\n+    TypeTokenContainer that = (TypeTokenContainer) o;\n+    if (this.typeTokens.length != that.typeTokens.length) {\n+      return false;\n+    } else {\n+      for (int i = 0; i < typeTokens.length; i++) {\n+        if (!this.typeTokens[i].equals(that.typeTokens[i])) return false;\n+      }\n+      return true;\n+    }\n+  }\n+\n+  @NonNull\n+  @Override\n+  public String toString() {", "originalCommit": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434039901", "body": "I wonder if we could just have a `toString()` that outputs something like `${rawType}<$typeArgs>` e.g. `Map<String, Foo>`?\r\nthat way it would be consistent with `Class` and easy on the eye.", "bodyText": "I wonder if we could just have a toString() that outputs something like ${rawType}<$typeArgs> e.g. Map<String, Foo>?\nthat way it would be consistent with Class and easy on the eye.", "bodyHTML": "<p dir=\"auto\">I wonder if we could just have a <code>toString()</code> that outputs something like <code>${rawType}&lt;$typeArgs&gt;</code> e.g. <code>Map&lt;String, Foo&gt;</code>?<br>\nthat way it would be consistent with <code>Class</code> and easy on the eye.</p>", "author": "vkryachko", "createdAt": "2020-06-02T17:13:02Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -140,6 +141,34 @@ private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (!(o instanceof ClassToken)) {\n+        return false;\n+      }\n+      ClassToken<?> that = (ClassToken<?>) o;\n+      return this.rawType.equals(that.rawType) && this.typeArguments.equals(that.typeArguments);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+      StringBuilder sb = new StringBuilder();\n+      sb.append(\"ClassToken{ \");\n+      sb.append(\"RawType: \").append(rawType).append(\", \");\n+      sb.append(\"TypeArguments: \").append(typeArguments).append(\"\");\n+      sb.append(\" }\");\n+      return sb.toString();", "originalCommit": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA0MTM2Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434041362", "bodyText": "Or to disambiguate, could it be something like TypeToken{Optional<String>[]}?", "author": "vkryachko", "createdAt": "2020-06-02T17:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA0Njk2Ng==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434046966", "bodyText": "Great! I'll do that.", "author": "James201311", "createdAt": "2020-06-02T17:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2NDc2Nw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434064767", "bodyText": "It turns out that i can do TypeToken{TypeToken{Optional<TypeToken{String}>}[]} or Optional<String>[] without any efforts. However, If we want TypeToken{Optional<String>[]}, it would involve more code since TypeTokens are nested. wdyt? @vkryachko", "author": "James201311", "createdAt": "2020-06-02T17:54:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MTgwMw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434071803", "bodyText": "yeah, that's expected. But it seems that it's pretty straightforward to achieve, i.e. by adding an abstract method like toStringRaw() to the type token and have all subclasses implement it, while toString() itself is only needed in TypeToken, wdyt?", "author": "vkryachko", "createdAt": "2020-06-02T18:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA4NTMyNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434085325", "bodyText": "Niceeeeee! I am impressed.", "author": "James201311", "createdAt": "2020-06-02T18:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzOTkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA0MDM5NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434040395", "body": "Then this one could be `${componentType}[]`, wdyt?", "bodyText": "Then this one could be ${componentType}[], wdyt?", "bodyHTML": "<p dir=\"auto\">Then this one could be <code>${componentType}[]</code>, wdyt?</p>", "author": "vkryachko", "createdAt": "2020-06-02T17:13:58Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -157,5 +186,34 @@ private ArrayToken(TypeToken<?> componentType) {\n     public TypeToken<?> getComponentType() {\n       return componentType;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+      int result = 41;\n+      result += componentType.hashCode();\n+      return result;\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (!(o instanceof ArrayToken)) {\n+        return false;\n+      }\n+      ArrayToken<?> that = (ArrayToken<?>) o;\n+      return this.componentType.equals(that.componentType);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+      StringBuilder sb = new StringBuilder();\n+      sb.append(\"ArrayToken{ \");\n+      sb.append(\"ComponentType: \").append(componentType);\n+      sb.append(\" }\");\n+      return sb.toString();\n+    }", "originalCommit": "06a4d40b9494c30eb76da7f8408305928eb8f2de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d3f053c7431c897433617b3c3d0773b5df82917", "url": "https://github.com/firebase/firebase-android-sdk/commit/9d3f053c7431c897433617b3c3d0773b5df82917", "message": "addressed comments", "committedDate": "2020-06-02T18:40:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0Njg1Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1612#discussion_r434146852", "body": "nit \r\n```suggestion\r\n    return \"TypeToken{\" + getTypeTokenLiteral() + \"}\";\r\n```", "bodyText": "nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return \"TypeToken:{\" + getTypeTokenLiteral() + \"}\";\n          \n          \n            \n                return \"TypeToken{\" + getTypeTokenLiteral() + \"}\";", "bodyHTML": "<p dir=\"auto\">nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TypeToken<span class=\"x x-first x-last\">:</span>{<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> getTypeTokenLiteral() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>}<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TypeToken{<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> getTypeTokenLiteral() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>}<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vkryachko", "createdAt": "2020-06-02T20:09:20Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -113,6 +112,15 @@\n \n   private TypeToken() {}\n \n+  @NonNull\n+  abstract String getTypeTokenLiteral();\n+\n+  @NonNull\n+  @Override\n+  public String toString() {\n+    return \"TypeToken:{\" + getTypeTokenLiteral() + \"}\";", "originalCommit": "9d3f053c7431c897433617b3c3d0773b5df82917", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b31c9617df485067263ae92a89f006dfbdc1f17f", "url": "https://github.com/firebase/firebase-android-sdk/commit/b31c9617df485067263ae92a89f006dfbdc1f17f", "message": "addressed comments", "committedDate": "2020-06-02T20:17:30Z", "type": "commit"}, {"oid": "b31c9617df485067263ae92a89f006dfbdc1f17f", "url": "https://github.com/firebase/firebase-android-sdk/commit/b31c9617df485067263ae92a89f006dfbdc1f17f", "message": "addressed comments", "committedDate": "2020-06-02T20:17:30Z", "type": "forcePushed"}]}