{"pr_number": 1685, "pr_title": "Move `rawType` to `TypeToken`", "pr_author": "James201311", "pr_createdAt": "2020-06-18T19:52:59Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1685", "timeline": [{"oid": "b9f15f47106856788b6e6f4957d0a5e497822ebc", "url": "https://github.com/firebase/firebase-android-sdk/commit/b9f15f47106856788b6e6f4957d0a5e497822ebc", "message": "move rawType to TypeToken", "committedDate": "2020-06-18T19:49:38Z", "type": "commit"}, {"oid": "161733dc6503e59e71bd7882b3da88b68aedd2c7", "url": "https://github.com/firebase/firebase-android-sdk/commit/161733dc6503e59e71bd7882b3da88b68aedd2c7", "message": "update api file", "committedDate": "2020-06-18T20:02:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODMzMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442488330", "body": "pls make it final and set through the private constructor.", "bodyText": "pls make it final and set through the private constructor.", "bodyHTML": "<p dir=\"auto\">pls make it final and set through the private constructor.</p>", "author": "vkryachko", "createdAt": "2020-06-18T20:37:09Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -36,6 +36,12 @@\n  * </ol>\n  */\n public abstract class TypeToken<T> {\n+  private Class<T> rawType;", "originalCommit": "161733dc6503e59e71bd7882b3da88b68aedd2c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442488864", "body": "I don't think you need `super` here or anywhere above and below.", "bodyText": "I don't think you need super here or anywhere above and below.", "bodyHTML": "<p dir=\"auto\">I don't think you need <code>super</code> here or anywhere above and below.</p>", "author": "vkryachko", "createdAt": "2020-06-18T20:38:11Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -126,32 +132,26 @@ public String toString() {\n    * Plain class types, Generic types, and Wildcard types.\n    */\n   public static class ClassToken<T> extends TypeToken<T> {\n-    private final Class<T> rawType;\n     private final TypeTokenContainer typeArguments;\n \n     private ClassToken(Class<T> rawType) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = TypeTokenContainer.EMPTY;\n     }\n \n     private ClassToken(Class<T> rawType, TypeTokenContainer typeArguments) {\n-      this.rawType = rawType;\n+      super.rawType = rawType;\n       this.typeArguments = typeArguments;\n     }\n \n-    @NonNull\n-    public Class<T> getRawType() {\n-      return rawType;\n-    }\n-\n     @NonNull\n     public TypeTokenContainer getTypeArguments() {\n       return typeArguments;\n     }\n \n     @Override\n     public int hashCode() {\n-      return 11 * rawType.hashCode() + typeArguments.hashCode();\n+      return 11 * super.rawType.hashCode() + typeArguments.hashCode();", "originalCommit": "161733dc6503e59e71bd7882b3da88b68aedd2c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0NTU0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442845540", "bodyText": "since ArrayToken is inner class and rawType is private, we need super to access the rawType or use getRawType()", "author": "James201311", "createdAt": "2020-06-19T13:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0OTc3MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442849770", "bodyText": "how about making it protected instead?", "author": "vkryachko", "createdAt": "2020-06-19T13:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MjY0Ng==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442852646", "bodyText": "Yes, I am thinking if we make it protected, anyone will be able to access it when they extent the TypeToken, maybe we loose the advantage of putting ArrayToken and ClassToken inside TypeToken? wdyt?", "author": "James201311", "createdAt": "2020-06-19T13:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1NDQxMw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442854413", "bodyText": "No one will be able to extend it as it has a private constructor", "author": "vkryachko", "createdAt": "2020-06-19T13:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4ODg2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5MDYxNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442490617", "body": "I've read a bit more on generic arrays and it looks like they are even more weird than I'd thought, i.e. there is not even a \"sane\" way to create one - it just won't compile - even though the type `Optional<String>[]` itself is legal in java.\r\n\r\nSo I would suggest you remove the todo and just leave it as explicitly not supported.\r\n\r\nAlso consider using the error message rtdb uses https://github.com/firebase/firebase-android-sdk/blob/a7096ac2a65842f9528243b2451e5b172de4c789/firebase-database/src/main/java/com/google/firebase/database/core/utilities/encoding/CustomClassMapper.java#L200", "bodyText": "I've read a bit more on generic arrays and it looks like they are even more weird than I'd thought, i.e. there is not even a \"sane\" way to create one - it just won't compile - even though the type Optional<String>[] itself is legal in java.\nSo I would suggest you remove the todo and just leave it as explicitly not supported.\nAlso consider using the error message rtdb uses \n  \n    \n      firebase-android-sdk/firebase-database/src/main/java/com/google/firebase/database/core/utilities/encoding/CustomClassMapper.java\n    \n    \n         Line 200\n      in\n      a7096ac\n    \n    \n    \n    \n\n        \n          \n           \"Generic Arrays are not supported, please use Lists \" + \"instead\");", "bodyHTML": "<p dir=\"auto\">I've read a bit more on generic arrays and it looks like they are even more weird than I'd thought, i.e. there is not even a \"sane\" way to create one - it just won't compile - even though the type <code>Optional&lt;String&gt;[]</code> itself is legal in java.</p>\n<p dir=\"auto\">So I would suggest you remove the todo and just leave it as explicitly not supported.</p>\n<p dir=\"auto\">Also consider using the error message rtdb uses <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/firebase/firebase-android-sdk/blob/a7096ac2a65842f9528243b2451e5b172de4c789/firebase-database/src/main/java/com/google/firebase/database/core/utilities/encoding/CustomClassMapper.java#L200\">firebase-android-sdk/firebase-database/src/main/java/com/google/firebase/database/core/utilities/encoding/CustomClassMapper.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 200\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/firebase/firebase-android-sdk/commit/a7096ac2a65842f9528243b2451e5b172de4c789\">a7096ac</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L200\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"200\"></td>\n          <td id=\"LC200\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Generic Arrays are not supported, please use Lists <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>instead<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "vkryachko", "createdAt": "2020-06-18T20:41:49Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -80,8 +86,8 @@\n       }\n       throw new IllegalArgumentException(\"<? super T> is not supported\");\n     } else if (type instanceof GenericArrayType) {\n-      Type componentType = ((GenericArrayType) type).getGenericComponentType();\n-      return new ArrayToken<T>(TypeToken.of(componentType));\n+      // TODO: Support GenericArrayType\n+      throw new IllegalArgumentException(\"GenericArrayType is not supported.\");", "originalCommit": "161733dc6503e59e71bd7882b3da88b68aedd2c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ5Mjg1OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442492859", "body": "Consider removing the second argument and instead doing something like:\r\n\r\n```suggestion\r\n    private ArrayToken(Class<T> rawType) {\r\n      if(!rawType.isArray()) {\r\n        throw new IllegalArgumentException(\"blah-blah\");\r\n      }\r\n      super(rawType);\r\n      this.componentType = TypeToken.of(rawType.getComponentType());\r\n    }\r\n```", "bodyText": "Consider removing the second argument and instead doing something like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n          \n          \n            \n                  super.rawType = rawType;\n          \n          \n            \n                  this.componentType = componentType;\n          \n          \n            \n                }\n          \n          \n            \n                private ArrayToken(Class<T> rawType) {\n          \n          \n            \n                  if(!rawType.isArray()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"blah-blah\");\n          \n          \n            \n                  }\n          \n          \n            \n                  super(rawType);\n          \n          \n            \n                  this.componentType = TypeToken.of(rawType.getComponentType());\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\">Consider removing the second argument and instead doing something like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"187\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> ArrayToken(<span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">T</span>&gt;</span> rawType, <span class=\"pl-k\">TypeToken&lt;?&gt;</span> componentType) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"188\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>rawType <span class=\"pl-k\">=</span> rawType;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"189\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>componentType <span class=\"pl-k\">=</span> componentType;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"190\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"187\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> ArrayToken(<span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">T</span>&gt;</span> rawType) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"188\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span>rawType<span class=\"pl-k\">.</span>isArray()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"189\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>blah-blah<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"190\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"191\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">super</span>(rawType);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"192\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>componentType <span class=\"pl-k\">=</span> <span class=\"pl-smi\">TypeToken</span><span class=\"pl-k\">.</span>of(rawType<span class=\"pl-k\">.</span>getComponentType());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"193\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vkryachko", "createdAt": "2020-06-18T20:46:28Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -180,7 +181,8 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {\n     private final TypeToken<?> componentType;\n \n-    private ArrayToken(TypeToken<?> componentType) {\n+    private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n+      super.rawType = rawType;\n       this.componentType = componentType;\n     }", "originalCommit": "161733dc6503e59e71bd7882b3da88b68aedd2c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8ac7c354b9a7b4009951322b509bbfc7bed1f628", "url": "https://github.com/firebase/firebase-android-sdk/commit/8ac7c354b9a7b4009951322b509bbfc7bed1f628", "message": "address comments", "committedDate": "2020-06-19T13:44:12Z", "type": "commit"}, {"oid": "8ac7c354b9a7b4009951322b509bbfc7bed1f628", "url": "https://github.com/firebase/firebase-android-sdk/commit/8ac7c354b9a7b4009951322b509bbfc7bed1f628", "message": "address comments", "committedDate": "2020-06-19T13:44:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MDQ4Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442850482", "body": "I think you also need to update equals and hashCode now that it has a rawType.", "bodyText": "I think you also need to update equals and hashCode now that it has a rawType.", "bodyHTML": "<p dir=\"auto\">I think you also need to update equals and hashCode now that it has a rawType.</p>", "author": "vkryachko", "createdAt": "2020-06-19T13:47:08Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -180,8 +179,12 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {", "originalCommit": "8ac7c354b9a7b4009951322b509bbfc7bed1f628", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MDgwNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442850807", "body": "super() have to be the first statement in a constructor", "bodyText": "super() have to be the first statement in a constructor", "bodyHTML": "<p dir=\"auto\">super() have to be the first statement in a constructor</p>", "author": "James201311", "createdAt": "2020-06-19T13:47:45Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -181,9 +179,12 @@ String getTypeTokenLiteral() {\n   public static class ArrayToken<T> extends TypeToken<T> {\n     private final TypeToken<?> componentType;\n \n-    private ArrayToken(Class<T> rawType, TypeToken<?> componentType) {\n-      super.rawType = rawType;\n-      this.componentType = componentType;\n+    private ArrayToken(Class<T> rawType) {\n+      super(rawType);", "originalCommit": "8ac7c354b9a7b4009951322b509bbfc7bed1f628", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d5787840750db9e95abc3b87d66d47f00286e2b3", "url": "https://github.com/firebase/firebase-android-sdk/commit/d5787840750db9e95abc3b87d66d47f00286e2b3", "message": "address comments", "committedDate": "2020-06-19T14:06:55Z", "type": "commit"}, {"oid": "245cb7b19e4e050cb1f120b60d9aea0f1de02360", "url": "https://github.com/firebase/firebase-android-sdk/commit/245cb7b19e4e050cb1f120b60d9aea0f1de02360", "message": "update api file", "committedDate": "2020-06-19T14:09:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NDYxOQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1685#discussion_r442864619", "body": "```suggestion\r\n          \"Generic Arrays are not supported, please use Lists instead.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Generic Arrays are not supported, \" + \"please use Lists instead.\");\n          \n          \n            \n                      \"Generic Arrays are not supported, please use Lists instead.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Generic Arrays are not supported, <span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>please use Lists instead.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Generic Arrays are not supported, please use Lists instead.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vkryachko", "createdAt": "2020-06-19T14:13:21Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/TypeToken.java", "diffHunk": "@@ -80,8 +91,8 @@\n       }\n       throw new IllegalArgumentException(\"<? super T> is not supported\");\n     } else if (type instanceof GenericArrayType) {\n-      Type componentType = ((GenericArrayType) type).getGenericComponentType();\n-      return new ArrayToken<T>(TypeToken.of(componentType));\n+      throw new IllegalArgumentException(\n+          \"Generic Arrays are not supported, \" + \"please use Lists instead.\");", "originalCommit": "245cb7b19e4e050cb1f120b60d9aea0f1de02360", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4d289c3e4eaef5894551fe6c3bea3ad853a76f90", "url": "https://github.com/firebase/firebase-android-sdk/commit/4d289c3e4eaef5894551fe6c3bea3ad853a76f90", "message": "address comment", "committedDate": "2020-06-19T14:21:00Z", "type": "commit"}]}