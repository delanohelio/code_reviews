{"pr_number": 1815, "pr_title": "initial implementation of decoder builder", "pr_author": "James201311", "pr_createdAt": "2020-07-23T17:31:07Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1815", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MjA4OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459692088", "body": "Would it make sense to allow the following?\r\n```suggestion\r\n  <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<? extends U> objectDecoder);\r\n```\r\n\r\nI can't see how it would cause problems in principle. i.e. when a class `T` is needed, it is ok to return a subclass of that at the type level. Not sure if it would be useful in practice, but seems pretty cheap to change.", "bodyText": "Would it make sense to allow the following?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<U> objectDecoder);\n          \n          \n            \n              <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<? extends U> objectDecoder);\n          \n      \n    \n    \n  \n\nI can't see how it would cause problems in principle. i.e. when a class T is needed, it is ok to return a subclass of that at the type level. Not sure if it would be useful in practice, but seems pretty cheap to change.", "bodyHTML": "<p dir=\"auto\">Would it make sense to allow the following?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">U</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">T</span> register(<span class=\"pl-k\">@NonNull</span> <span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">U</span>&gt;</span> clazz, <span class=\"pl-k\">@NonNull</span> <span class=\"pl-k\">ObjectDecoder&lt;<span class=\"pl-smi\">U</span>&gt;</span> objectDecoder);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">U</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">T</span> register(<span class=\"pl-k\">@NonNull</span> <span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">U</span>&gt;</span> clazz, <span class=\"pl-k\">@NonNull</span> <span class=\"pl-k\">ObjectDecoder&lt;<span class=\"x x-first x-last\">? extends </span><span class=\"pl-smi\">U</span>&gt;</span> objectDecoder);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I can't see how it would cause problems in principle. i.e. when a class <code>T</code> is needed, it is ok to return a subclass of that at the type level. Not sure if it would be useful in practice, but seems pretty cheap to change.</p>", "author": "vkryachko", "createdAt": "2020-07-23T19:55:25Z", "path": "encoders/firebase-decoders-json/src/main/java/com/google/firebase/decoders/DecoderConfig.java", "diffHunk": "@@ -0,0 +1,27 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Implemented by concrete {@link DataDecoder} builders.\n+ *\n+ * <p>Used by clients to configure decoders without coupling to a particular decoder format.\n+ */\n+public interface DecoderConfig<T extends DecoderConfig<T>> {\n+  @NonNull\n+  <U> T register(@NonNull Class<U> clazz, @NonNull ObjectDecoder<U> objectDecoder);", "originalCommit": "8115cb908ff4406b5493bb76c00605435bec03f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MzExMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459693110", "body": "nit:\r\n```suggestion\r\n    return new JsonDataDecoderContext(objectDecoders);\r\n```\r\n\r\nLet's rename this class as it's not a builder.", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return new JsonDataDecoderBuilderContext(objectDecoders);\n          \n          \n            \n                return new JsonDataDecoderContext(objectDecoders);\n          \n      \n    \n    \n  \n\nLet's rename this class as it's not a builder.", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">JsonDataDecoderBuilderContext</span>(objectDecoders);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">JsonDataDecoderContext</span>(objectDecoders);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Let's rename this class as it's not a builder.</p>", "author": "vkryachko", "createdAt": "2020-07-23T19:57:24Z", "path": "encoders/firebase-decoders-json/src/json/java/com/google/firebase/decoders/json/JsonDataDecoderBuilder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders.json;\n+\n+import androidx.annotation.NonNull;\n+import com.google.firebase.decoders.DataDecoder;\n+import com.google.firebase.decoders.DecoderConfig;\n+import com.google.firebase.decoders.ObjectDecoder;\n+import java.util.HashMap;\n+\n+public final class JsonDataDecoderBuilder implements DecoderConfig<JsonDataDecoderBuilder> {\n+  private final HashMap<Class<?>, ObjectDecoder<?>> objectDecoders = new HashMap<>();\n+\n+  public JsonDataDecoderBuilder() {}\n+\n+  @NonNull\n+  @Override\n+  public <T> JsonDataDecoderBuilder register(\n+      @NonNull Class<T> clazz, @NonNull ObjectDecoder<T> objectDecoder) {\n+    objectDecoders.put(clazz, objectDecoder);\n+    return this;\n+  }\n+\n+  @NonNull\n+  public DataDecoder build() {\n+    return new JsonDataDecoderBuilderContext(objectDecoders);", "originalCommit": "8115cb908ff4406b5493bb76c00605435bec03f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MzU1NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459693554", "body": "is my understanding correct that you will add ability to register annotation processors later?", "bodyText": "is my understanding correct that you will add ability to register annotation processors later?", "bodyHTML": "<p dir=\"auto\">is my understanding correct that you will add ability to register annotation processors later?</p>", "author": "vkryachko", "createdAt": "2020-07-23T19:58:13Z", "path": "encoders/firebase-decoders-json/src/json/java/com/google/firebase/decoders/json/JsonDataDecoderBuilder.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.decoders.json;\n+\n+import androidx.annotation.NonNull;\n+import com.google.firebase.decoders.DataDecoder;\n+import com.google.firebase.decoders.DecoderConfig;\n+import com.google.firebase.decoders.ObjectDecoder;\n+import java.util.HashMap;\n+\n+public final class JsonDataDecoderBuilder implements DecoderConfig<JsonDataDecoderBuilder> {", "originalCommit": "8115cb908ff4406b5493bb76c00605435bec03f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1MDU1MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1815#discussion_r459750550", "bodyText": "yes, it will be able to register AnnotationFieldHandler, and fallbackObjectDecoder later.", "author": "James201311", "createdAt": "2020-07-23T21:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5MzU1NA=="}], "type": "inlineReview"}, {"oid": "f64aa4e12ad37fac45f2ddbddc85b01d9c265110", "url": "https://github.com/firebase/firebase-android-sdk/commit/f64aa4e12ad37fac45f2ddbddc85b01d9c265110", "message": "initial implementation of decoder builder", "committedDate": "2020-07-23T22:02:31Z", "type": "commit"}, {"oid": "31efd4f9cc92110b1d6c5fba6ce78f58733fdeec", "url": "https://github.com/firebase/firebase-android-sdk/commit/31efd4f9cc92110b1d6c5fba6ce78f58733fdeec", "message": "rename jsonDataDecoderBuilderContext to jsonDataDecoderContext", "committedDate": "2020-07-23T22:03:38Z", "type": "commit"}, {"oid": "034a12fa0fd2d5ffcbe752da590218535aa91021", "url": "https://github.com/firebase/firebase-android-sdk/commit/034a12fa0fd2d5ffcbe752da590218535aa91021", "message": "address comment", "committedDate": "2020-07-23T22:03:38Z", "type": "commit"}, {"oid": "167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "url": "https://github.com/firebase/firebase-android-sdk/commit/167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "message": "update format & api file", "committedDate": "2020-07-23T22:03:38Z", "type": "commit"}, {"oid": "167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "url": "https://github.com/firebase/firebase-android-sdk/commit/167abc430ce8010e4e8ab3c6eaa897b0537e0e67", "message": "update format & api file", "committedDate": "2020-07-23T22:03:38Z", "type": "forcePushed"}, {"oid": "f90bcd99ec192ad1d8556deab92f2026e894763b", "url": "https://github.com/firebase/firebase-android-sdk/commit/f90bcd99ec192ad1d8556deab92f2026e894763b", "message": "fixed renaming issues", "committedDate": "2020-07-23T22:19:28Z", "type": "commit"}, {"oid": "7ab6785a1ccb47d27ecd7574ae2e70ff1078f132", "url": "https://github.com/firebase/firebase-android-sdk/commit/7ab6785a1ccb47d27ecd7574ae2e70ff1078f132", "message": "fix renaming issues", "committedDate": "2020-07-23T22:31:35Z", "type": "commit"}]}