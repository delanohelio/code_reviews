{"pr_number": 2073, "pr_title": "Add CustomModel class framework.", "pr_author": "annzimmer", "pr_createdAt": "2020-10-16T20:29:33Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/2073", "merge_commit": "460ea3ed9ef5870844c3c683111790bed25cda69", "timeline": [{"oid": "614e48f5298b70ea6e2f743e5aaaaa45ef5dcc09", "url": "https://github.com/firebase/firebase-android-sdk/commit/614e48f5298b70ea6e2f743e5aaaaa45ef5dcc09", "message": "Add CustomModel class framework.", "committedDate": "2020-10-16T20:28:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNTUzNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507905537", "body": "nit\r\n```suggestion\r\n  @NonNull public String getName() {\r\n```\r\nhere and throughout", "bodyText": "nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public @NonNull String getName() {\n          \n          \n            \n              @NonNull public String getName() {\n          \n      \n    \n    \n  \n\nhere and throughout", "bodyHTML": "<p dir=\"auto\">nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k x x-first\">public</span><span class=\"x x-last\"> </span><span class=\"pl-k\">@NonNull</span> <span class=\"pl-smi\">String</span> getName() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@NonNull</span><span class=\"x x-first\"> </span><span class=\"pl-k x x-last\">public</span> <span class=\"pl-smi\">String</span> getName() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">here and throughout</p>", "author": "vkryachko", "createdAt": "2020-10-19T16:54:10Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.ml.modeldownloader;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.io.File;\n+\n+/**\n+ * Used to store information about custom models that are being downloaded or are already downloaded\n+ * on a device.\n+ */\n+public class CustomModel {\n+  private String name;\n+  private long downloadId;\n+  private long fileSize;\n+  private String modelHash;\n+  private String localFilePath = \"\";\n+\n+  public @NonNull String getName() {", "originalCommit": "614e48f5298b70ea6e2f743e5aaaaa45ef5dcc09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNTQ5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507925498", "bodyText": "done.", "author": "annzimmer", "createdAt": "2020-10-19T17:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNTUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "3342833574076948537094bf6eab478f1cec5f72", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..e60c8fee3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,36 +20,58 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n public class CustomModel {\n-  private String name;\n+  private final String name;\n   private long downloadId;\n   private long fileSize;\n   private String modelHash;\n   private String localFilePath = \"\";\n \n-  public @NonNull String getName() {\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n", "next_change": {"commit": "1cfe949ebbcdcace0585c7ed54d4732d50826937", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex e60c8fee3..4a3d7b7b3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,6 +76,14 @@ public class CustomModel {\n     return downloadId;\n   }\n \n+  /**\n+   * Use to create in custom model while initial download is in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "460ea3ed9ef5870844c3c683111790bed25cda69", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..76e2dc993 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,40 +20,70 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n-public class CustomModel {\n-  private String name;\n-  private long downloadId;\n-  private long fileSize;\n-  private String modelHash;\n-  private String localFilePath = \"\";\n-\n-  public @NonNull String getName() {\n+public final class CustomModel {\n+  private final String name;\n+  private final long downloadId;\n+  private final long fileSize;\n+  private final String modelHash;\n+  private final String localFilePath = \"\";\n+\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n \n+  /**\n+   * Use when creating a custom model while the initial download is still in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": {"commit": "428565969e625e6c199a2106cd800b619db5f520", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 76e2dc993..ba5702d20 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,18 +114,36 @@ public final class CustomModel {\n     return downloadId;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (o == this) {\n+      return true;\n+    }\n+\n+    if (!(o instanceof CustomModel)) {\n+      return false;\n+    }\n+\n+    CustomModel other = (CustomModel) o;\n+\n+    return Objects.equal(name, other.name)\n+        && Objects.equal(modelHash, other.modelHash)\n+        && Objects.equal(fileSize, other.fileSize)\n+        && Objects.equal(localFilePath, other.localFilePath)\n+        && Objects.equal(downloadId, other.downloadId);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+  }\n+\n   /**\n-   * Use when creating a custom model while the initial download is still in progress.\n-   *\n-   * @param name - model name\n-   * @param downloadId - Android Download Manger - download id\n-   * @param fileSize - model file size\n-   * @param modelHash - model hash size\n+   * @return the model file path\n+   * @hide\n    */\n-  CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n-    this.modelHash = modelHash;\n-    this.name = name;\n-    this.fileSize = fileSize;\n-    this.downloadId = downloadId;\n+  @NonNull\n+  public String getLocalFilePath() {\n+    return localFilePath;\n   }\n }\n", "next_change": {"commit": "58cec3713f7522cd55ff52ce88c329cc7150d208", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex ba5702d20..5b30f01ef 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -130,19 +177,43 @@ public class CustomModel {\n         && Objects.equal(modelHash, other.modelHash)\n         && Objects.equal(fileSize, other.fileSize)\n         && Objects.equal(localFilePath, other.localFilePath)\n-        && Objects.equal(downloadId, other.downloadId);\n+        && Objects.equal(downloadId, other.downloadId)\n+        && Objects.equal(downloadUrl, other.downloadUrl)\n+        && Objects.equal(downloadUrlExpiry, other.downloadUrlExpiry);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+    return Objects.hashCode(\n+        name, modelHash, fileSize, localFilePath, downloadId, downloadUrl, downloadUrlExpiry);\n+  }\n+\n+  /**\n+   * The expiry time for the current download url.\n+   *\n+   * <p>Internal use only.\n+   *\n+   * @hide\n+   */\n+  public long getDownloadUrlExpiry() {\n+    return downloadUrlExpiry;\n+  }\n+\n+  /**\n+   * @return the model download url\n+   *     <p>Internal use only\n+   * @hide\n+   */\n+  @Nullable\n+  public String getDownloadUrl() {\n+    return downloadUrl;\n   }\n \n   /**\n    * @return the model file path\n    * @hide\n    */\n-  @NonNull\n+  @Nullable\n   public String getLocalFilePath() {\n     return localFilePath;\n   }\n", "next_change": {"commit": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 5b30f01ef..4062237ba 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -210,7 +281,7 @@ public class CustomModel {\n   }\n \n   /**\n-   * @return the model file path\n+   * @return The model file path.\n    * @hide\n    */\n   @Nullable\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "460ea3ed9ef5870844c3c683111790bed25cda69", "message": "Merge commit", "committedDate": null}, {"oid": "076c26db27dd54d809fb2ccff8593b64fb3db043", "committedDate": "2020-10-22 14:22:50 -0400", "message": "Add CustomModelDownloadConditions class. (#2093)"}, {"oid": "428565969e625e6c199a2106cd800b619db5f520", "committedDate": "2020-10-29 09:33:51 -0400", "message": "Add Ml shared preferences for custom model storage (#2104)"}, {"oid": "58cec3713f7522cd55ff52ce88c329cc7150d208", "committedDate": "2020-11-16 15:02:46 -0500", "message": "Add CustomModelDownloadService to retrieve download details about\u2026 (#2134)"}, {"oid": "1deb532fc0f3589bb2055e78d4444f7260b1cbe1", "committedDate": "2020-12-03 16:18:55 -0500", "message": "Adding get Model for local downloads (#2212)"}, {"oid": "c75caee190f99e9e2d5e60d6ba93eb4e7b750d79", "committedDate": "2020-12-14 12:56:33 -0500", "message": "Delete custom models from device (#2236)"}, {"oid": "cdf06e2cca9d2a7c8ca022f7b901b0ab207cb2d4", "committedDate": "2021-01-06 14:07:02 -0500", "message": "Added FirebaseMlException and Logging round 1. (#2259)"}, {"oid": "8fcd37cbcac8b6d863ff997e0bd9834d1723c87b", "committedDate": "2021-01-12 13:06:03 -0500", "message": "Clear cache (#2313)"}, {"oid": "6d1fdcd738e13f70c438702fc086834875da15e9", "committedDate": "2021-01-21 13:35:32 -0500", "message": "Ml logging (#2344)"}, {"oid": "b6d8cd4e49c7a3e6d6a77eda941a39d468b4228c", "committedDate": "2021-01-28 14:12:57 -0500", "message": "Ml logging (#2355)"}, {"oid": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "committedDate": "2021-02-08 10:10:38 -0500", "message": "Adjust returned information from url errorStream (#2413)"}, {"oid": "9f6ade474530d68afe59a9a24a05ceffd243fb41", "committedDate": "2021-02-26 14:01:03 -0500", "message": "Requested doc updated. (#2469)"}, {"oid": "54ab04e75170cf99aa27ad09cc8b6cc302118be9", "committedDate": "2022-11-28 15:36:10 -0500", "message": "Migrate ml to dagger DI. (#4370)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjM5Ng==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507906396", "body": "Is the class intended to be mutated? Why not make all fields `final`?", "bodyText": "Is the class intended to be mutated? Why not make all fields final?", "bodyHTML": "<p dir=\"auto\">Is the class intended to be mutated? Why not make all fields <code>final</code>?</p>", "author": "vkryachko", "createdAt": "2020-10-19T16:55:24Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.ml.modeldownloader;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.io.File;\n+\n+/**\n+ * Used to store information about custom models that are being downloaded or are already downloaded\n+ * on a device.\n+ */\n+public class CustomModel {\n+  private String name;\n+  private long downloadId;\n+  private long fileSize;\n+  private String modelHash;\n+  private String localFilePath = \"\";", "originalCommit": "614e48f5298b70ea6e2f743e5aaaaa45ef5dcc09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNTQ4MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507925480", "bodyText": "Added a comment to the class. At this point I'm just adding the public parts - enough to get the API headers written in the next PR. The file associated with the model can be updated but will only be supported as a protected method call via the downloader. So no public way to modify the class. The name however should be final. There will be a few other update calls and private fields in the next few PRs.", "author": "annzimmer", "createdAt": "2020-10-19T17:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU0OTYzMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r508549632", "bodyText": "Making this class mutable and updating it as model state changes has many consequences:\n\nIt must be made thread-safe as updates to it may happen on a thread different from where the developer is using it.\nYou would also have to keep track of all instances of CustomModel that are being used and update them all.\n\nSo my question is, is it worth it? Can the class be made immutable and for any state updates a new CustomModel instance can be created and handed out to progress listeners?", "author": "vkryachko", "createdAt": "2020-10-20T14:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3MjQ5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r508572498", "bodyText": "Thanks for clarifying - I agree generating a new immutable CustomModel from the stored information each time we need a version would be simpler. Updated to immutable.", "author": "annzimmer", "createdAt": "2020-10-20T14:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3342833574076948537094bf6eab478f1cec5f72", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..e60c8fee3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,36 +20,58 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n public class CustomModel {\n-  private String name;\n+  private final String name;\n   private long downloadId;\n   private long fileSize;\n   private String modelHash;\n   private String localFilePath = \"\";\n \n-  public @NonNull String getName() {\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n", "next_change": {"commit": "1cfe949ebbcdcace0585c7ed54d4732d50826937", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex e60c8fee3..4a3d7b7b3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,6 +76,14 @@ public class CustomModel {\n     return downloadId;\n   }\n \n+  /**\n+   * Use to create in custom model while initial download is in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "460ea3ed9ef5870844c3c683111790bed25cda69", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..76e2dc993 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,40 +20,70 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n-public class CustomModel {\n-  private String name;\n-  private long downloadId;\n-  private long fileSize;\n-  private String modelHash;\n-  private String localFilePath = \"\";\n-\n-  public @NonNull String getName() {\n+public final class CustomModel {\n+  private final String name;\n+  private final long downloadId;\n+  private final long fileSize;\n+  private final String modelHash;\n+  private final String localFilePath = \"\";\n+\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n \n+  /**\n+   * Use when creating a custom model while the initial download is still in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": {"commit": "428565969e625e6c199a2106cd800b619db5f520", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 76e2dc993..ba5702d20 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,18 +114,36 @@ public final class CustomModel {\n     return downloadId;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (o == this) {\n+      return true;\n+    }\n+\n+    if (!(o instanceof CustomModel)) {\n+      return false;\n+    }\n+\n+    CustomModel other = (CustomModel) o;\n+\n+    return Objects.equal(name, other.name)\n+        && Objects.equal(modelHash, other.modelHash)\n+        && Objects.equal(fileSize, other.fileSize)\n+        && Objects.equal(localFilePath, other.localFilePath)\n+        && Objects.equal(downloadId, other.downloadId);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+  }\n+\n   /**\n-   * Use when creating a custom model while the initial download is still in progress.\n-   *\n-   * @param name - model name\n-   * @param downloadId - Android Download Manger - download id\n-   * @param fileSize - model file size\n-   * @param modelHash - model hash size\n+   * @return the model file path\n+   * @hide\n    */\n-  CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n-    this.modelHash = modelHash;\n-    this.name = name;\n-    this.fileSize = fileSize;\n-    this.downloadId = downloadId;\n+  @NonNull\n+  public String getLocalFilePath() {\n+    return localFilePath;\n   }\n }\n", "next_change": {"commit": "58cec3713f7522cd55ff52ce88c329cc7150d208", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex ba5702d20..5b30f01ef 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -130,19 +177,43 @@ public class CustomModel {\n         && Objects.equal(modelHash, other.modelHash)\n         && Objects.equal(fileSize, other.fileSize)\n         && Objects.equal(localFilePath, other.localFilePath)\n-        && Objects.equal(downloadId, other.downloadId);\n+        && Objects.equal(downloadId, other.downloadId)\n+        && Objects.equal(downloadUrl, other.downloadUrl)\n+        && Objects.equal(downloadUrlExpiry, other.downloadUrlExpiry);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+    return Objects.hashCode(\n+        name, modelHash, fileSize, localFilePath, downloadId, downloadUrl, downloadUrlExpiry);\n+  }\n+\n+  /**\n+   * The expiry time for the current download url.\n+   *\n+   * <p>Internal use only.\n+   *\n+   * @hide\n+   */\n+  public long getDownloadUrlExpiry() {\n+    return downloadUrlExpiry;\n+  }\n+\n+  /**\n+   * @return the model download url\n+   *     <p>Internal use only\n+   * @hide\n+   */\n+  @Nullable\n+  public String getDownloadUrl() {\n+    return downloadUrl;\n   }\n \n   /**\n    * @return the model file path\n    * @hide\n    */\n-  @NonNull\n+  @Nullable\n   public String getLocalFilePath() {\n     return localFilePath;\n   }\n", "next_change": {"commit": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 5b30f01ef..4062237ba 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -210,7 +281,7 @@ public class CustomModel {\n   }\n \n   /**\n-   * @return the model file path\n+   * @return The model file path.\n    * @hide\n    */\n   @Nullable\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "460ea3ed9ef5870844c3c683111790bed25cda69", "message": "Merge commit", "committedDate": null}, {"oid": "076c26db27dd54d809fb2ccff8593b64fb3db043", "committedDate": "2020-10-22 14:22:50 -0400", "message": "Add CustomModelDownloadConditions class. (#2093)"}, {"oid": "428565969e625e6c199a2106cd800b619db5f520", "committedDate": "2020-10-29 09:33:51 -0400", "message": "Add Ml shared preferences for custom model storage (#2104)"}, {"oid": "58cec3713f7522cd55ff52ce88c329cc7150d208", "committedDate": "2020-11-16 15:02:46 -0500", "message": "Add CustomModelDownloadService to retrieve download details about\u2026 (#2134)"}, {"oid": "1deb532fc0f3589bb2055e78d4444f7260b1cbe1", "committedDate": "2020-12-03 16:18:55 -0500", "message": "Adding get Model for local downloads (#2212)"}, {"oid": "c75caee190f99e9e2d5e60d6ba93eb4e7b750d79", "committedDate": "2020-12-14 12:56:33 -0500", "message": "Delete custom models from device (#2236)"}, {"oid": "cdf06e2cca9d2a7c8ca022f7b901b0ab207cb2d4", "committedDate": "2021-01-06 14:07:02 -0500", "message": "Added FirebaseMlException and Logging round 1. (#2259)"}, {"oid": "8fcd37cbcac8b6d863ff997e0bd9834d1723c87b", "committedDate": "2021-01-12 13:06:03 -0500", "message": "Clear cache (#2313)"}, {"oid": "6d1fdcd738e13f70c438702fc086834875da15e9", "committedDate": "2021-01-21 13:35:32 -0500", "message": "Ml logging (#2344)"}, {"oid": "b6d8cd4e49c7a3e6d6a77eda941a39d468b4228c", "committedDate": "2021-01-28 14:12:57 -0500", "message": "Ml logging (#2355)"}, {"oid": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "committedDate": "2021-02-08 10:10:38 -0500", "message": "Adjust returned information from url errorStream (#2413)"}, {"oid": "9f6ade474530d68afe59a9a24a05ceffd243fb41", "committedDate": "2021-02-26 14:01:03 -0500", "message": "Requested doc updated. (#2469)"}, {"oid": "54ab04e75170cf99aa27ad09cc8b6cc302118be9", "committedDate": "2022-11-28 15:36:10 -0500", "message": "Migrate ml to dagger DI. (#4370)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507906800", "body": "What can a model without a file be use for?", "bodyText": "What can a model without a file be use for?", "bodyHTML": "<p dir=\"auto\">What can a model without a file be use for?</p>", "author": "vkryachko", "createdAt": "2020-10-19T16:56:02Z", "path": "firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.ml.modeldownloader;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import java.io.File;\n+\n+/**\n+ * Used to store information about custom models that are being downloaded or are already downloaded\n+ * on a device.\n+ */\n+public class CustomModel {\n+  private String name;\n+  private long downloadId;\n+  private long fileSize;\n+  private String modelHash;\n+  private String localFilePath = \"\";\n+\n+  public @NonNull String getName() {\n+    return name;\n+  }\n+\n+  public @Nullable File getFile() {", "originalCommit": "614e48f5298b70ea6e2f743e5aaaaa45ef5dcc09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyNTQ2NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507925464", "bodyText": "It can be used to get the downloadId, which can be used to get the progress of the file's download status.", "author": "annzimmer", "createdAt": "2020-10-19T17:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk1NDI5NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507954294", "bodyText": "Not sure I understand. How can I get a hold of an instance of CustomModel before the download has completed?\nIt looks like the only ways to get a CustomModel is to call download and wait for its task to complete, or list all \"downloaded\" models", "author": "vkryachko", "createdAt": "2020-10-19T17:58:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3MjA5OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507972098", "bodyText": "Good point, I forgot to add the addOnProgressListener to the getModel in the API design - it was discussed and planned (hence the download id). So, I added example. In the addOnProgressListener, the CustomModel is returned with the download id and can then be used to updated the progress bar, etc. Does this clarify?", "author": "annzimmer", "createdAt": "2020-10-19T18:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzkxOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r507983918", "bodyText": "Thanks, it does. But it also reveals a potential design issue, namely, most of the getters have the following javadoc: \"When models is not downloaded returns X, otherwise Y\".\nimo, the fact that the model has 2 modes of operation, indicates that type has low cohesion, and really represents 2 separate things:\n\nModelDownload - contains info about the download that is in progress. Contains (modelName, downloadId), passed to onProgressListeners\nCustomModel - describes a fully downloaded model. Contains (name, file, size, hash), available only upon download completion.\n\nThis could reduce developer confusion, as they won't have to guess which state they are in(downloading vs downloaded). wdyt?", "author": "vkryachko", "createdAt": "2020-10-19T18:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNDAzNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2073#discussion_r508024037", "bodyText": "We will actually have everything except the file during the progress listener. We have the model size and hash in advanced. So the difference is during \"in progress\" you'd use the download id to get download status information (which could be used to see if the download had started and % complete) and during \"on success\" you'd get the actual model file. We added the in progress functionality with download id so that a progress bar could be created and populated as desired.", "author": "annzimmer", "createdAt": "2020-10-19T19:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "3342833574076948537094bf6eab478f1cec5f72", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..e60c8fee3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,36 +20,58 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n public class CustomModel {\n-  private String name;\n+  private final String name;\n   private long downloadId;\n   private long fileSize;\n   private String modelHash;\n   private String localFilePath = \"\";\n \n-  public @NonNull String getName() {\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n", "next_change": {"commit": "1cfe949ebbcdcace0585c7ed54d4732d50826937", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex e60c8fee3..4a3d7b7b3 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,6 +76,14 @@ public class CustomModel {\n     return downloadId;\n   }\n \n+  /**\n+   * Use to create in custom model while initial download is in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "460ea3ed9ef5870844c3c683111790bed25cda69", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 7b4e24d9b..76e2dc993 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -20,40 +20,70 @@ import java.io.File;\n \n /**\n  * Used to store information about custom models that are being downloaded or are already downloaded\n- * on a device.\n+ * on a device. The model file associated with this model can be updated, once the new model file is\n+ * fully uploaded, the original model file will be removed as soon as it is safe to do so.\n  */\n-public class CustomModel {\n-  private String name;\n-  private long downloadId;\n-  private long fileSize;\n-  private String modelHash;\n-  private String localFilePath = \"\";\n-\n-  public @NonNull String getName() {\n+public final class CustomModel {\n+  private final String name;\n+  private final long downloadId;\n+  private final long fileSize;\n+  private final String modelHash;\n+  private final String localFilePath = \"\";\n+\n+  @NonNull\n+  public String getName() {\n     return name;\n   }\n \n-  public @Nullable File getFile() {\n+  /**\n+   * The local model file. If null is returned, use the download Id to check the download status.\n+   *\n+   * @return the local file associated with the model, if the original file download is still in\n+   *     progress, returns null, if file update is in progress returns last fully uploaded model.\n+   */\n+  @Nullable\n+  public File getFile() {\n     if (localFilePath.isEmpty()) {\n       return null;\n     }\n     throw new UnsupportedOperationException(\"Not implemented, file retrieval coming soon.\");\n   }\n \n+  /**\n+   * The size of the file currently associated with this model. If a download is in progress, this\n+   * will be the size of the current model, not the new model currently being uploaded.\n+   *\n+   * @return the local model size\n+   */\n   public long getSize() {\n     return fileSize;\n   }\n \n-  public @NonNull String getModelHash() {\n+  /** @return the model hash */\n+  @NonNull\n+  public String getModelHash() {\n     return modelHash;\n   }\n \n-  // If download in progress, return the download id, otherwise return 0\n-  // Can be used with AndroidDownloadManager to query progress information\n+  /**\n+   * The download id (returns 0 if no download in progress), which can be used with the\n+   * AndroidDownloadManager to query download progress. The retrieved progress information can be\n+   * used to populate a progress bar, monitor when an updated model is available, etc.\n+   *\n+   * @return the download id (if download in progress), otherwise returns 0\n+   */\n   public long getDownloadId() {\n     return downloadId;\n   }\n \n+  /**\n+   * Use when creating a custom model while the initial download is still in progress.\n+   *\n+   * @param name - model name\n+   * @param downloadId - Android Download Manger - download id\n+   * @param fileSize - model file size\n+   * @param modelHash - model hash size\n+   */\n   CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n     this.modelHash = modelHash;\n     this.name = name;\n", "next_change": {"commit": "428565969e625e6c199a2106cd800b619db5f520", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 76e2dc993..ba5702d20 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -76,18 +114,36 @@ public final class CustomModel {\n     return downloadId;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (o == this) {\n+      return true;\n+    }\n+\n+    if (!(o instanceof CustomModel)) {\n+      return false;\n+    }\n+\n+    CustomModel other = (CustomModel) o;\n+\n+    return Objects.equal(name, other.name)\n+        && Objects.equal(modelHash, other.modelHash)\n+        && Objects.equal(fileSize, other.fileSize)\n+        && Objects.equal(localFilePath, other.localFilePath)\n+        && Objects.equal(downloadId, other.downloadId);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+  }\n+\n   /**\n-   * Use when creating a custom model while the initial download is still in progress.\n-   *\n-   * @param name - model name\n-   * @param downloadId - Android Download Manger - download id\n-   * @param fileSize - model file size\n-   * @param modelHash - model hash size\n+   * @return the model file path\n+   * @hide\n    */\n-  CustomModel(String name, long downloadId, long fileSize, String modelHash) {\n-    this.modelHash = modelHash;\n-    this.name = name;\n-    this.fileSize = fileSize;\n-    this.downloadId = downloadId;\n+  @NonNull\n+  public String getLocalFilePath() {\n+    return localFilePath;\n   }\n }\n", "next_change": {"commit": "58cec3713f7522cd55ff52ce88c329cc7150d208", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex ba5702d20..5b30f01ef 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -130,19 +177,43 @@ public class CustomModel {\n         && Objects.equal(modelHash, other.modelHash)\n         && Objects.equal(fileSize, other.fileSize)\n         && Objects.equal(localFilePath, other.localFilePath)\n-        && Objects.equal(downloadId, other.downloadId);\n+        && Objects.equal(downloadId, other.downloadId)\n+        && Objects.equal(downloadUrl, other.downloadUrl)\n+        && Objects.equal(downloadUrlExpiry, other.downloadUrlExpiry);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hashCode(name, modelHash, fileSize, localFilePath, downloadId);\n+    return Objects.hashCode(\n+        name, modelHash, fileSize, localFilePath, downloadId, downloadUrl, downloadUrlExpiry);\n+  }\n+\n+  /**\n+   * The expiry time for the current download url.\n+   *\n+   * <p>Internal use only.\n+   *\n+   * @hide\n+   */\n+  public long getDownloadUrlExpiry() {\n+    return downloadUrlExpiry;\n+  }\n+\n+  /**\n+   * @return the model download url\n+   *     <p>Internal use only\n+   * @hide\n+   */\n+  @Nullable\n+  public String getDownloadUrl() {\n+    return downloadUrl;\n   }\n \n   /**\n    * @return the model file path\n    * @hide\n    */\n-  @NonNull\n+  @Nullable\n   public String getLocalFilePath() {\n     return localFilePath;\n   }\n", "next_change": {"commit": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "changed_code": [{"header": "diff --git a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\nindex 5b30f01ef..4062237ba 100644\n--- a/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n+++ b/firebase-ml-modeldownloader/src/main/java/com/google/firebase/ml/modeldownloader/CustomModel.java\n", "chunk": "@@ -210,7 +281,7 @@ public class CustomModel {\n   }\n \n   /**\n-   * @return the model file path\n+   * @return The model file path.\n    * @hide\n    */\n   @Nullable\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "460ea3ed9ef5870844c3c683111790bed25cda69", "message": "Merge commit", "committedDate": null}, {"oid": "076c26db27dd54d809fb2ccff8593b64fb3db043", "committedDate": "2020-10-22 14:22:50 -0400", "message": "Add CustomModelDownloadConditions class. (#2093)"}, {"oid": "428565969e625e6c199a2106cd800b619db5f520", "committedDate": "2020-10-29 09:33:51 -0400", "message": "Add Ml shared preferences for custom model storage (#2104)"}, {"oid": "58cec3713f7522cd55ff52ce88c329cc7150d208", "committedDate": "2020-11-16 15:02:46 -0500", "message": "Add CustomModelDownloadService to retrieve download details about\u2026 (#2134)"}, {"oid": "1deb532fc0f3589bb2055e78d4444f7260b1cbe1", "committedDate": "2020-12-03 16:18:55 -0500", "message": "Adding get Model for local downloads (#2212)"}, {"oid": "c75caee190f99e9e2d5e60d6ba93eb4e7b750d79", "committedDate": "2020-12-14 12:56:33 -0500", "message": "Delete custom models from device (#2236)"}, {"oid": "cdf06e2cca9d2a7c8ca022f7b901b0ab207cb2d4", "committedDate": "2021-01-06 14:07:02 -0500", "message": "Added FirebaseMlException and Logging round 1. (#2259)"}, {"oid": "8fcd37cbcac8b6d863ff997e0bd9834d1723c87b", "committedDate": "2021-01-12 13:06:03 -0500", "message": "Clear cache (#2313)"}, {"oid": "6d1fdcd738e13f70c438702fc086834875da15e9", "committedDate": "2021-01-21 13:35:32 -0500", "message": "Ml logging (#2344)"}, {"oid": "b6d8cd4e49c7a3e6d6a77eda941a39d468b4228c", "committedDate": "2021-01-28 14:12:57 -0500", "message": "Ml logging (#2355)"}, {"oid": "81b94b18d26dd708c5ef80c58fb9f0ebc656a417", "committedDate": "2021-02-08 10:10:38 -0500", "message": "Adjust returned information from url errorStream (#2413)"}, {"oid": "9f6ade474530d68afe59a9a24a05ceffd243fb41", "committedDate": "2021-02-26 14:01:03 -0500", "message": "Requested doc updated. (#2469)"}, {"oid": "54ab04e75170cf99aa27ad09cc8b6cc302118be9", "committedDate": "2022-11-28 15:36:10 -0500", "message": "Migrate ml to dagger DI. (#4370)"}]}, {"oid": "3342833574076948537094bf6eab478f1cec5f72", "url": "https://github.com/firebase/firebase-android-sdk/commit/3342833574076948537094bf6eab478f1cec5f72", "message": "Add CustomModelDownloadConditions class.", "committedDate": "2020-10-19T17:25:59Z", "type": "commit"}, {"oid": "1cfe949ebbcdcace0585c7ed54d4732d50826937", "url": "https://github.com/firebase/firebase-android-sdk/commit/1cfe949ebbcdcace0585c7ed54d4732d50826937", "message": "Update to immutable CustomModel class.", "committedDate": "2020-10-20T14:45:10Z", "type": "commit"}, {"oid": "89df78a9a29925c595ad9be352ddd37798c5b4c2", "url": "https://github.com/firebase/firebase-android-sdk/commit/89df78a9a29925c595ad9be352ddd37798c5b4c2", "message": "Update to immutable CustomModel class.", "committedDate": "2020-10-20T14:54:54Z", "type": "commit"}]}