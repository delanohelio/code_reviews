{"pr_number": 2143, "pr_title": "Adding the OpenJDK support with ability to disable use of ant langtoo\u2026", "pr_author": "jlahoda", "pr_createdAt": "2020-05-17T08:15:22Z", "pr_url": "https://github.com/apache/netbeans/pull/2143", "timeline": [{"oid": "899080a2868991842215524fe1f6f11c0d4e1df6", "url": "https://github.com/apache/netbeans/commit/899080a2868991842215524fe1f6f11c0d4e1df6", "message": "Adding the OpenJDK support with ability to disable use of ant langtools build; and specifying a different location for the build.", "committedDate": "2020-05-17T08:14:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NTI3Nw==", "url": "https://github.com/apache/netbeans/pull/2143#discussion_r427765277", "body": "Nitpick: maybe a small helper `shouldUseLangtoolsBuild(String repoName, FileObject testFile)` could help to unify this settings lookup + condition: 2 occurrences. Consider when chaning the conditions next time :)", "bodyText": "Nitpick: maybe a small helper shouldUseLangtoolsBuild(String repoName, FileObject testFile) could help to unify this settings lookup + condition: 2 occurrences. Consider when chaning the conditions next time :)", "bodyHTML": "<p dir=\"auto\">Nitpick: maybe a small helper <code>shouldUseLangtoolsBuild(String repoName, FileObject testFile)</code> could help to unify this settings lookup + condition: 2 occurrences. Consider when chaning the conditions next time :)</p>", "author": "sdedic", "createdAt": "2020-05-20T06:18:15Z", "path": "java/java.openjdk.project/src/org/netbeans/modules/java/openjdk/jtreg/ActionProviderImpl.java", "diffHunk": "@@ -409,12 +409,15 @@ private static boolean newStyleXPatch(FileObject testFile) {\n     static String builtClassesDirsForBootClassPath(FileObject testFile) {\n         File buildDir = BuildUtils.getBuildTargetDir(testFile);\n         Project prj = FileOwnerQuery.getOwner(testFile);\n+        Settings settings = prj.getLookup().lookup(Settings.class);\n+        boolean useLangtoolsBuild = settings == null || settings.isUseAntBuild();\n         List<FileObject> roots = new ArrayList<>();\n \n         if (buildDir != null) {\n             FileObject repo = prj.getProjectDirectory().getParent().getParent();\n             if (repo.getNameExt().equals(\"langtools\") &&\n-                ShortcutUtils.getDefault().shouldUseCustomTest(repo.getNameExt(), FileUtil.getRelativePath(repo, testFile))) {\n+                ShortcutUtils.getDefault().shouldUseCustomTest(repo.getNameExt(), FileUtil.getRelativePath(repo, testFile)) &&", "originalCommit": "899080a2868991842215524fe1f6f11c0d4e1df6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTI2Mg==", "url": "https://github.com/apache/netbeans/pull/2143#discussion_r427769262", "body": "The other `ActionProviderImpl` checks `settings != null` before dereferencing. But a direct dereference was already there in `COMMAND_BUILD_GENERIC_FAST` branch.", "bodyText": "The other ActionProviderImpl checks settings != null before dereferencing. But a direct dereference was already there in COMMAND_BUILD_GENERIC_FAST branch.", "bodyHTML": "<p dir=\"auto\">The other <code>ActionProviderImpl</code> checks <code>settings != null</code> before dereferencing. But a direct dereference was already there in <code>COMMAND_BUILD_GENERIC_FAST</code> branch.</p>", "author": "sdedic", "createdAt": "2020-05-20T06:28:27Z", "path": "java/java.openjdk.project/src/org/netbeans/modules/java/openjdk/project/ActionProviderImpl.java", "diffHunk": "@@ -171,8 +171,14 @@ public void invokeAction(String command, Lookup context) throws IllegalArgumentE\n             }\n         }\n         FileObject scriptFO = script;\n+        Settings settings = project.getLookup().lookup(Settings.class);\n+        Properties props = new Properties();\n+        if (settings.isUseAntBuild()) {", "originalCommit": "899080a2868991842215524fe1f6f11c0d4e1df6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bfec4b6c18dc7de9831c9963c20028ee65e885f2", "url": "https://github.com/apache/netbeans/commit/bfec4b6c18dc7de9831c9963c20028ee65e885f2", "message": "Properly handling commands other than build when not using the langtools ant build.", "committedDate": "2020-05-20T06:44:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE0Mzg2NA==", "url": "https://github.com/apache/netbeans/pull/2143#discussion_r428143864", "body": "Should use setAntBuildLocation.\r\n```suggestion\r\n                    settings.setAntBuildLocation(panel.antBuildLocation.getText());\r\n```", "bodyText": "Should use setAntBuildLocation.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                settings.setJTregLocation(panel.antBuildLocation.getText());\n          \n          \n            \n                                settings.setAntBuildLocation(panel.antBuildLocation.getText());", "bodyHTML": "<p dir=\"auto\">Should use setAntBuildLocation.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    settings<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">setJTregLocation</span>(panel<span class=\"pl-k\">.</span>antBuildLocation<span class=\"pl-k\">.</span>getText());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    settings<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">setAntBuildLocation</span>(panel<span class=\"pl-k\">.</span>antBuildLocation<span class=\"pl-k\">.</span>getText());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jlahoda", "createdAt": "2020-05-20T16:23:54Z", "path": "java/java.openjdk.project/src/org/netbeans/modules/java/openjdk/project/customizer/BuildCategory.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.modules.java.openjdk.project.customizer;\n+\n+import javax.swing.JComponent;\n+import org.netbeans.modules.java.openjdk.project.JDKProject;\n+import org.netbeans.modules.java.openjdk.project.Settings;\n+import org.netbeans.spi.project.ui.support.ProjectCustomizer;\n+import org.openide.util.Lookup;\n+\n+/**\n+ *\n+ * @author lahvac\n+ */\n+public class BuildCategory extends javax.swing.JPanel {\n+\n+    /**\n+     * Creates new form BuildCategory\n+     */\n+    public BuildCategory(boolean useAntBuild, String antBuildLocation) {\n+        initComponents();\n+        this.useAntBuild.setSelected(useAntBuild);\n+        this.antBuildLocation.setText(antBuildLocation);\n+        updateEnableDisable();\n+    }\n+\n+    private void updateEnableDisable() {\n+        antBuildLocationLabel.setEnabled(useAntBuild.isSelected());\n+        antBuildLocation.setEnabled(useAntBuild.isSelected());\n+    }\n+    /**\n+     * This method is called from within the constructor to initialize the form.\n+     * WARNING: Do NOT modify this code. The content of this method is always\n+     * regenerated by the Form Editor.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n+    private void initComponents() {\n+\n+        useAntBuild = new javax.swing.JCheckBox();\n+        antBuildLocationLabel = new javax.swing.JLabel();\n+        antBuildLocation = new javax.swing.JTextField();\n+\n+        org.openide.awt.Mnemonics.setLocalizedText(useAntBuild, org.openide.util.NbBundle.getMessage(BuildCategory.class, \"BuildCategory.useAntBuild.text\")); // NOI18N\n+        useAntBuild.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                useAntBuildActionPerformed(evt);\n+            }\n+        });\n+\n+        org.openide.awt.Mnemonics.setLocalizedText(antBuildLocationLabel, org.openide.util.NbBundle.getMessage(BuildCategory.class, \"BuildCategory.antBuildLocationLabel.text\")); // NOI18N\n+\n+        antBuildLocation.setText(org.openide.util.NbBundle.getMessage(BuildCategory.class, \"BuildCategory.antBuildLocation.text\")); // NOI18N\n+\n+        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n+        this.setLayout(layout);\n+        layout.setHorizontalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGroup(layout.createSequentialGroup()\n+                .addContainerGap()\n+                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+                    .addGroup(layout.createSequentialGroup()\n+                        .addGap(21, 21, 21)\n+                        .addComponent(antBuildLocationLabel)\n+                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n+                        .addComponent(antBuildLocation))\n+                    .addComponent(useAntBuild, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))\n+                .addContainerGap())\n+        );\n+        layout.setVerticalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGroup(layout.createSequentialGroup()\n+                .addContainerGap()\n+                .addComponent(useAntBuild)\n+                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n+                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n+                    .addComponent(antBuildLocationLabel)\n+                    .addComponent(antBuildLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n+                .addContainerGap(244, Short.MAX_VALUE))\n+        );\n+    }// </editor-fold>//GEN-END:initComponents\n+\n+    private void useAntBuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useAntBuildActionPerformed\n+        updateEnableDisable();\n+    }//GEN-LAST:event_useAntBuildActionPerformed\n+\n+\n+    // Variables declaration - do not modify//GEN-BEGIN:variables\n+    private javax.swing.JTextField antBuildLocation;\n+    private javax.swing.JLabel antBuildLocationLabel;\n+    private javax.swing.JCheckBox useAntBuild;\n+    // End of variables declaration//GEN-END:variables\n+\n+    @ProjectCustomizer.CompositeCategoryProvider.Registration(projectType=JDKProject.PROJECT_KEY, position=100)\n+    public static ProjectCustomizer.CompositeCategoryProvider createCategoryProvider() {\n+        return new ProjectCustomizer.CompositeCategoryProvider() {\n+            @Override\n+            public ProjectCustomizer.Category createCategory(Lookup context) {\n+                if (context.lookup(Settings.class) != null)\n+                    return ProjectCustomizer.Category.create(\"build\", \"Build\", null);\n+                return null;\n+            }\n+            @Override\n+            public JComponent createComponent(ProjectCustomizer.Category category, Lookup context) {\n+                Settings settings = context.lookup(Settings.class);\n+                BuildCategory panel = new BuildCategory(settings.isUseAntBuild(), settings.getAntBuildLocation());\n+                category.setOkButtonListener(evt -> {\n+                    settings.setUseAntBuild(panel.useAntBuild.isSelected());\n+                    settings.setJTregLocation(panel.antBuildLocation.getText());", "originalCommit": "bfec4b6c18dc7de9831c9963c20028ee65e885f2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "377c05d0ff2572020ea8390cb86c7f5342da63d4", "url": "https://github.com/apache/netbeans/commit/377c05d0ff2572020ea8390cb86c7f5342da63d4", "message": "Update java/java.openjdk.project/src/org/netbeans/modules/java/openjdk/project/customizer/BuildCategory.java", "committedDate": "2020-05-20T16:24:09Z", "type": "commit"}]}