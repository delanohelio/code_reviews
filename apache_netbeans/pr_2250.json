{"pr_number": 2250, "pr_title": "Minor improvements for php.api.phpmodule", "pr_author": "junichi11", "pr_createdAt": "2020-07-12T04:15:40Z", "pr_url": "https://github.com/apache/netbeans/pull/2250", "timeline": [{"oid": "f64377124be9eb4de8ec7a7947235ea7126b4089", "url": "https://github.com/apache/netbeans/commit/f64377124be9eb4de8ec7a7947235ea7126b4089", "message": "Add the `isSupportedVersion()` method to the PhpVersion\n\n- Check whether the version is supported yet by PHP official\n- Improve the `getLegacy()` method", "committedDate": "2020-07-12T04:09:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTQ0Mg==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r453265442", "body": "I also thought other implementations:\r\n\r\n#### Create `Message.EMPTY` and return it instead of `null`\r\n```java\r\n    public Message getFirstError() {\r\n        if (hasErrors()) {\r\n            return errors.get(0);\r\n        }\r\n        return Message.EMPTY;\r\n    }\r\n\r\n    public static final class Message {\r\n        public static final Message EMPTY = new Message(\"\", \"\"); \r\n\r\n```\r\n#### Use Optional\r\n```java\r\n    public Optional<Message> getFirstError() {\r\n        if (hasErrors()) {\r\n            return Optional.of(errors.get(0));\r\n        }\r\n        return Optional.empty();\r\n    }\r\n```\r\nWhich is better?", "bodyText": "I also thought other implementations:\nCreate Message.EMPTY and return it instead of null\n    public Message getFirstError() {\n        if (hasErrors()) {\n            return errors.get(0);\n        }\n        return Message.EMPTY;\n    }\n\n    public static final class Message {\n        public static final Message EMPTY = new Message(\"\", \"\"); \n\nUse Optional\n    public Optional<Message> getFirstError() {\n        if (hasErrors()) {\n            return Optional.of(errors.get(0));\n        }\n        return Optional.empty();\n    }\nWhich is better?", "bodyHTML": "<p dir=\"auto\">I also thought other implementations:</p>\n<h4 dir=\"auto\">Create <code>Message.EMPTY</code> and return it instead of <code>null</code></h4>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public Message getFirstError() {\n        if (hasErrors()) {\n            return errors.get(0);\n        }\n        return Message.EMPTY;\n    }\n\n    public static final class Message {\n        public static final Message EMPTY = new Message(&quot;&quot;, &quot;&quot;); \n\n\"><pre>    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Message</span> getFirstError() {\n        <span class=\"pl-k\">if</span> (hasErrors()) {\n            <span class=\"pl-k\">return</span> errors<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>);\n        }\n        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Message</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>EMPTY</span>;\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Message</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Message</span> <span class=\"pl-c1\">EMPTY</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Message</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>); \n</pre></div>\n<h4 dir=\"auto\">Use Optional</h4>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public Optional&lt;Message&gt; getFirstError() {\n        if (hasErrors()) {\n            return Optional.of(errors.get(0));\n        }\n        return Optional.empty();\n    }\n\"><pre>    <span class=\"pl-k\">public</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Message</span>&gt;</span> getFirstError() {\n        <span class=\"pl-k\">if</span> (hasErrors()) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(errors<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>));\n        }\n        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty();\n    }</pre></div>\n<p dir=\"auto\">Which is better?</p>", "author": "junichi11", "createdAt": "2020-07-12T04:25:52Z", "path": "php/php.api.phpmodule/src/org/netbeans/modules/php/api/validation/ValidationResult.java", "diffHunk": "@@ -80,6 +81,20 @@ public boolean hasErrors() {\n         return new ArrayList<>(errors);\n     }\n \n+    /**\n+     * Get the first error.\n+     *\n+     * @return the first error.\n+     * @since 2.72\n+     */\n+    @CheckForNull\n+    public Message getFirstError() {\n+        if (hasErrors()) {\n+            return errors.get(0);\n+        }\n+        return null;\n+    }", "originalCommit": "5685f82c7815b1441ffe2188fa7c327dc79c8685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMTE3MQ==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454831171", "bodyText": "I think that Message.EMPTY would complicate things because the caller would need to (a) check whether it is an empty message (which is similar for the current check for null) or (b) adjust UI not to show the empty error as an error.\nUsing Optional would be better but I would perhaps keep the current implementation, it is more consistent with the rest of the NetBeans codebase (and we have @CheckForNull). But up to you, feel free to use it if you want to, I definitely have no objections.\nThanks.", "author": "tmysik", "createdAt": "2020-07-15T06:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MzUzMQ==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454983531", "bodyText": "Makes sense. I agree with you. I'll keep this. Thanks a lot!", "author": "junichi11", "createdAt": "2020-07-15T11:32:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTQ0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMjQ2OQ==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454832469", "body": "Maybe to be added `or {@code null} if there are no errors`?\r\n", "bodyText": "Maybe to be added or {@code null} if there are no errors?", "bodyHTML": "<p dir=\"auto\">Maybe to be added <code>or {@code null} if there are no errors</code>?</p>", "author": "tmysik", "createdAt": "2020-07-15T06:56:07Z", "path": "php/php.api.phpmodule/src/org/netbeans/modules/php/api/validation/ValidationResult.java", "diffHunk": "@@ -80,6 +81,20 @@ public boolean hasErrors() {\n         return new ArrayList<>(errors);\n     }\n \n+    /**\n+     * Get the first error.\n+     *\n+     * @return the first error.", "originalCommit": "5685f82c7815b1441ffe2188fa7c327dc79c8685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4NDAwOA==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454984008", "bodyText": "Will fix. Thanks!", "author": "junichi11", "createdAt": "2020-07-15T11:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMjQ2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5MDI5Ng==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454990296", "bodyText": "Fixed.\nhttps://github.com/apache/netbeans/compare/5685f82c7815b1441ffe2188fa7c327dc79c8685..6c2e311da592782e23c67563514a380699ed4314", "author": "junichi11", "createdAt": "2020-07-15T11:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMjQ2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMjY2NQ==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454832665", "body": "The same note as above.\r\n", "bodyText": "The same note as above.", "bodyHTML": "<p dir=\"auto\">The same note as above.</p>", "author": "tmysik", "createdAt": "2020-07-15T06:56:32Z", "path": "php/php.api.phpmodule/src/org/netbeans/modules/php/api/validation/ValidationResult.java", "diffHunk": "@@ -98,6 +113,20 @@ public boolean hasWarnings() {\n \n     }\n \n+    /**\n+     * Get the first warning.\n+     *\n+     * @return the first warning.", "originalCommit": "5685f82c7815b1441ffe2188fa7c327dc79c8685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4NDA3Mw==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r454984073", "bodyText": "Will fix. Thanks!", "author": "junichi11", "createdAt": "2020-07-15T11:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMjY2NQ=="}], "type": "inlineReview"}, {"oid": "6c2e311da592782e23c67563514a380699ed4314", "url": "https://github.com/apache/netbeans/commit/6c2e311da592782e23c67563514a380699ed4314", "message": "Add the `getFirstError()` and the `getFirstWarning()` methods to the `ValidationResult` class", "committedDate": "2020-07-15T11:44:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjYxMw==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r455026613", "body": "Should be `[...] no [warnings]` ;)\r\n", "bodyText": "Should be [...] no [warnings] ;)", "bodyHTML": "<p dir=\"auto\">Should be <code>[...] no [warnings]</code> ;)</p>", "author": "tmysik", "createdAt": "2020-07-15T12:51:39Z", "path": "php/php.api.phpmodule/src/org/netbeans/modules/php/api/validation/ValidationResult.java", "diffHunk": "@@ -98,6 +113,20 @@ public boolean hasWarnings() {\n \n     }\n \n+    /**\n+     * Get the first warning.\n+     *\n+     * @return the first warning or {@code null} if there are no errors", "originalCommit": "6c2e311da592782e23c67563514a380699ed4314", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNzA3Nw==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r455027077", "bodyText": "Please, let me know if you are going to change it. If not, I will merge this PR. Thanks.", "author": "tmysik", "createdAt": "2020-07-15T12:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEwOTUxNg==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r455109516", "bodyText": "Will fix it, sorry...", "author": "junichi11", "createdAt": "2020-07-15T14:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyMDkyMQ==", "url": "https://github.com/apache/netbeans/pull/2250#discussion_r455120921", "bodyText": "Fixed.", "author": "junichi11", "createdAt": "2020-07-15T14:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjYxMw=="}], "type": "inlineReview"}, {"oid": "b2b97d400f166fff3faa000b292dac278be085cb", "url": "https://github.com/apache/netbeans/commit/b2b97d400f166fff3faa000b292dac278be085cb", "message": "Add the `getFirstError()` and the `getFirstWarning()` methods to the `ValidationResult` class", "committedDate": "2020-07-15T14:48:48Z", "type": "commit"}, {"oid": "b2b97d400f166fff3faa000b292dac278be085cb", "url": "https://github.com/apache/netbeans/commit/b2b97d400f166fff3faa000b292dac278be085cb", "message": "Add the `getFirstError()` and the `getFirstWarning()` methods to the `ValidationResult` class", "committedDate": "2020-07-15T14:48:48Z", "type": "forcePushed"}]}