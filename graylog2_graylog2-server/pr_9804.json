{"pr_number": 9804, "pr_title": "Unblock JobSchedulerService on shutdown", "pr_author": "thll", "pr_createdAt": "2020-12-15T13:34:17Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/9804", "timeline": [{"oid": "272ff9d9cc0baa35fe6eef4cde740334369216ac", "url": "https://github.com/Graylog2/graylog2-server/commit/272ff9d9cc0baa35fe6eef4cde740334369216ac", "message": "Unblock JobSchedulerService on shutdown\n\nThe JobSchedulerService blocks in its run method until the server\nreaches the running state. It cannot be unblocked even when interrupting\nthe execution thread. So if one of the other services fails during\nstartup, the service manager is unable to shutdown the\nJobSchedulerService.\n\nThis change adds an interruptible implementation to wait for the server\nreaching the RUNNING state. The new method is then used in the\nJobSchedulerService. Upon shutdown, the execution thread of the\nJobSchedulerService is interrupted so that the service can\nproperly terminate.", "committedDate": "2020-12-15T13:25:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzM2MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9804#discussion_r544113360", "body": "Hmm,  why do we need this?\r\nThe thread is already interrupted. Or am I missing something?", "bodyText": "Hmm,  why do we need this?\nThe thread is already interrupted. Or am I missing something?", "bodyHTML": "<p dir=\"auto\">Hmm,  why do we need this?<br>\nThe thread is already interrupted. Or am I missing something?</p>", "author": "mpfz0r", "createdAt": "2020-12-16T08:44:46Z", "path": "graylog2-server/src/main/java/org/graylog/scheduler/JobSchedulerService.java", "diffHunk": "@@ -69,14 +70,21 @@ public JobSchedulerService(JobExecutionEngine.Factory engineFactory,\n     @Override\n     protected void startUp() throws Exception {\n         schedulerEventBus.register(this);\n+        this.executionThread = Thread.currentThread();\n     }\n \n     @Override\n     protected void run() throws Exception {\n         // Safety measure to make sure everything is started before we start job scheduling.\n         LOG.debug(\"Waiting for server to enter RUNNING status before starting the scheduler loop\");\n-        serverStatus.awaitRunning(() -> LOG.debug(\"Server entered RUNNING state, starting scheduler loop\"));\n-\n+        try {\n+            serverStatus.awaitRunning();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();", "originalCommit": "272ff9d9cc0baa35fe6eef4cde740334369216ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyMTc4NA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9804#discussion_r544121784", "bodyText": "Nevermind, found the answer myself. Weird semantics :/", "author": "mpfz0r", "createdAt": "2020-12-16T08:57:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyMjQzNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9804#discussion_r544122434", "bodyText": "Are you referring to setting the interrupt flag with Thread.currentThread().interrupt();? In this particular case we don't strictly need it but afaik it's good practice to set the flag when the thread was interrupted to let the caller know about it.", "author": "thll", "createdAt": "2020-12-16T08:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzM2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDEyOQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9804#discussion_r544114129", "body": "We could still mark this one `@Deprecated`\r\n```suggestion\r\n    @Deprecated\r\n    public void awaitRunning(final Runnable runnable) {\r\n```", "bodyText": "We could still mark this one @Deprecated\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void awaitRunning(final Runnable runnable) {\n          \n          \n            \n                @Deprecated\n          \n          \n            \n                public void awaitRunning(final Runnable runnable) {", "bodyHTML": "<p dir=\"auto\">We could still mark this one <code>@Deprecated</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">void</span><span class=\"x\"> awaitRunning(</span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">Runnable</span><span class=\"x x-last\"> runnable) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">@Deprecated</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> awaitRunning(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Runnable</span> runnable) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mpfz0r", "createdAt": "2020-12-16T08:46:00Z", "path": "graylog2-server/src/main/java/org/graylog2/plugin/ServerStatus.java", "diffHunk": "@@ -149,6 +149,11 @@ public void overrideLoadBalancerThrottled() {\n         publishLifecycle(Lifecycle.OVERRIDE_LB_THROTTLED);\n     }\n \n+    /**\n+     * Blocks until the server enters the RUNNING state and then executes the given Runnable.\n+     * <p>\n+     * <b>This method is not interruptible while waiting for the server to enter the RUNNING state.</b>\n+     */\n     public void awaitRunning(final Runnable runnable) {", "originalCommit": "272ff9d9cc0baa35fe6eef4cde740334369216ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODEzMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/9804#discussion_r544128132", "bodyText": "yep, why not", "author": "thll", "createdAt": "2020-12-16T09:06:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDEyOQ=="}], "type": "inlineReview"}, {"oid": "2a6045c4280454403cfb2c266e606d10c8f553eb", "url": "https://github.com/Graylog2/graylog2-server/commit/2a6045c4280454403cfb2c266e606d10c8f553eb", "message": "Deprecate #awaitRunning(Runnable runnable)", "committedDate": "2020-12-16T09:04:54Z", "type": "commit"}]}