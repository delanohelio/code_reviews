{"pr_number": 8136, "pr_title": "Add support for more verbose authentication failure", "pr_author": "thll", "pr_createdAt": "2020-05-15T11:57:24Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8136", "timeline": [{"oid": "d80a344a2c32560bfeaa271f172a0e5d8e37d6bf", "url": "https://github.com/Graylog2/graylog2-server/commit/d80a344a2c32560bfeaa271f172a0e5d8e37d6bf", "message": "Throw exception when creating session but auth service is not available\n\nWhen an authenticating realm is using an external service, there was no\nway to indicate that authentication failed in case the external service\nwas unavailable at the moment of checking the credentials. It could only\nindicate that authentication was unsuccessful in general.\nTherefore, in the unavailability case, the user would probably assume\nthat the credentials were wrong.\n\nWith this change, an authenticating realm may throw an\n`AuthenticationServiceUnavailableException` which will be retained if\nnone of the realms can successfully authenticate the user. This will\nthen be indicated to the API client with a non-successful status code\nand response message.", "committedDate": "2020-05-15T08:40:02Z", "type": "commit"}, {"oid": "61480356652313ca8933a8e7e4e6b65e7114dfc1", "url": "https://github.com/Graylog2/graylog2-server/commit/61480356652313ca8933a8e7e4e6b65e7114dfc1", "message": "Add license headers", "committedDate": "2020-05-15T11:54:29Z", "type": "commit"}, {"oid": "fef2eaa368c12a15e8f2014bd148a15756e88934", "url": "https://github.com/Graylog2/graylog2-server/commit/fef2eaa368c12a15e8f2014bd148a15756e88934", "message": "Merge remote-tracking branch 'origin/master' into support-auth-service-not-available", "committedDate": "2020-05-19T12:26:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NTM0NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8136#discussion_r429155345", "body": "I think we shouldn't expose too many details to unauthenticated users.\r\nThey shouldn't be able to discover which auth backends we are using.\r\nHow about\r\n```suggestion\r\n            throw new ServiceUnavailableException(\"Authentication service unavailable\");\r\n```", "bodyText": "I think we shouldn't expose too many details to unauthenticated users.\nThey shouldn't be able to discover which auth backends we are using.\nHow about\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ServiceUnavailableException(e.getMessage());\n          \n          \n            \n                        throw new ServiceUnavailableException(\"Authentication service unavailable\");", "bodyHTML": "<p dir=\"auto\">I think we shouldn't expose too many details to unauthenticated users.<br>\nThey shouldn't be able to discover which auth backends we are using.<br>\nHow about</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceUnavailableException</span>(<span class=\"x x-first\">e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServiceUnavailableException</span>(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">Authentication service unavailable</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mpfz0r", "createdAt": "2020-05-22T09:57:31Z", "path": "graylog2-server/src/main/java/org/graylog2/rest/resources/system/SessionsResource.java", "diffHunk": "@@ -124,11 +126,15 @@ public JsonNode newSession(@Context ContainerRequestContext requestContext,\n         final String sessionId = shiroSecurityContext.getUsername();\n         final String host = RestTools.getRemoteAddrFromRequest(grizzlyRequest, trustedSubnets);\n \n-        Optional<Session> session = sessionCreator.create(sessionId, host, authToken);\n-        if (session.isPresent()) {\n-            return sessionResponseFactory.forSession(session.get());\n-        } else {\n-            throw new NotAuthorizedException(\"Invalid credentials.\", \"Basic realm=\\\"Graylog Server session\\\"\");\n+        try {\n+            Optional<Session> session = sessionCreator.create(sessionId, host, authToken);\n+            if (session.isPresent()) {\n+                return sessionResponseFactory.forSession(session.get());\n+            } else {\n+                throw new NotAuthorizedException(\"Invalid credentials.\", \"Basic realm=\\\"Graylog Server session\\\"\");\n+            }\n+        } catch (AuthenticationServiceUnavailableException e) {\n+            throw new ServiceUnavailableException(e.getMessage());", "originalCommit": "fef2eaa368c12a15e8f2014bd148a15756e88934", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f9364e7150d0ae4b65e9892c43810d2f633a06d", "url": "https://github.com/Graylog2/graylog2-server/commit/1f9364e7150d0ae4b65e9892c43810d2f633a06d", "message": "Don't expose exception message to user\n\nCo-authored-by: Marco Pfatschbacher <marco@graylog.com>", "committedDate": "2020-05-25T05:55:21Z", "type": "commit"}]}