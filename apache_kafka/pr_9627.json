{"pr_number": 9627, "pr_title": "KAFKA-10746: Change to Warn logs when necessary to notify users", "pr_author": "showuon", "pr_createdAt": "2020-11-20T06:22:01Z", "pr_url": "https://github.com/apache/kafka/pull/9627", "timeline": [{"oid": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "url": "https://github.com/apache/kafka/commit/d4247e13798b3e56f0e2838ce1f9870de74c44cc", "message": "KAFKA-10746: change to Warn logs when necessary to notice users", "committedDate": "2020-11-25T06:30:52Z", "type": "commit"}, {"oid": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "url": "https://github.com/apache/kafka/commit/d4247e13798b3e56f0e2838ce1f9870de74c44cc", "message": "KAFKA-10746: change to Warn logs when necessary to notice users", "committedDate": "2020-11-25T06:30:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODExNjg1MA==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618116850", "body": "It seems the `shouldWarn` is always `true` in production. Maybe we can remove the input argument from this method?", "bodyText": "It seems the shouldWarn is always true in production. Maybe we can remove the input argument from this method?", "bodyHTML": "<p dir=\"auto\">It seems the <code>shouldWarn</code> is always <code>true</code> in production. Maybe we can remove the input argument from this method?</p>", "author": "chia7712", "createdAt": "2021-04-22T06:33:39Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMember.java", "diffHunk": "@@ -203,8 +203,8 @@ public void requestRejoin() {\n         coordinator.requestRejoin();\n     }\n \n-    public void maybeLeaveGroup(String leaveReason) {\n-        coordinator.maybeLeaveGroup(leaveReason);\n+    public void maybeLeaveGroup(String leaveReason, boolean shouldWarn) {", "originalCommit": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODE1ODkyMQ==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618158921", "bodyText": "Nice suggestion!", "author": "showuon", "createdAt": "2021-04-22T07:42:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODExNjg1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODEyMTg0Nw==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618121847", "body": "'final' is unnecessary here :)", "bodyText": "'final' is unnecessary here :)", "bodyHTML": "<p dir=\"auto\">'final' is unnecessary here :)</p>", "author": "chia7712", "createdAt": "2021-04-22T06:43:38Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1013,8 +1018,13 @@ protected void close(Timer timer) {\n             state != MemberState.UNJOINED && generation.hasMemberId()) {\n             // this is a minimal effort attempt to leave the group. we do not\n             // attempt any resending if the request fails or times out.\n-            log.info(\"Member {} sending LeaveGroup request to coordinator {} due to {}\",\n+            final String logMessage = String.format(\"Member %s sending LeaveGroup request to coordinator %s due to %s\",", "originalCommit": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODEyMzA2Mw==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618123063", "body": "Did you revise the content? Or it is just about decoration?", "bodyText": "Did you revise the content? Or it is just about decoration?", "bodyHTML": "<p dir=\"auto\">Did you revise the content? Or it is just about decoration?</p>", "author": "chia7712", "createdAt": "2021-04-22T06:45:54Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1353,12 +1363,13 @@ public void run() {\n                         } else if (heartbeat.pollTimeoutExpired(now)) {\n                             // the poll timeout has expired, which means that the foreground thread has stalled\n                             // in between calls to poll().\n-                            String leaveReason = \"consumer poll timeout has expired. This means the time between subsequent calls to poll() \" +\n-                                                    \"was longer than the configured max.poll.interval.ms, which typically implies that \" +\n+                            final String leaveReason = \"consumer poll timeout has expired. This means the time between \" +", "originalCommit": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODEyNTQ1NA==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618125454", "body": "Most cases pass `false` so an override method  `maybeLeaveGroup(String)` can reduce the code changes. Also, `maybeLeaveGroup(String, boolean)` can be declared as a protected method. WDYT?", "bodyText": "Most cases pass false so an override method  maybeLeaveGroup(String) can reduce the code changes. Also, maybeLeaveGroup(String, boolean) can be declared as a protected method. WDYT?", "bodyHTML": "<p dir=\"auto\">Most cases pass <code>false</code> so an override method  <code>maybeLeaveGroup(String)</code> can reduce the code changes. Also, <code>maybeLeaveGroup(String, boolean)</code> can be declared as a protected method. WDYT?</p>", "author": "chia7712", "createdAt": "2021-04-22T06:50:20Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1001,9 +1001,14 @@ protected void close(Timer timer) {\n     }\n \n     /**\n+     * Leave the group. This method also sends LeaveGroupRequest and log {@code leaveReason} if this is dynamic members\n+     * or unknown coordinator or state is not UNJOINED or this generation has a valid member id.\n+     *\n+     * @param leaveReason the reason to leave the group for logging\n+     * @param shouldWarn should log as WARN level or INFO\n      * @throws KafkaException if the rebalance callback throws exception\n      */\n-    public synchronized RequestFuture<Void> maybeLeaveGroup(String leaveReason) {\n+    public synchronized RequestFuture<Void> maybeLeaveGroup(String leaveReason, boolean shouldWarn) throws KafkaException {", "originalCommit": "d4247e13798b3e56f0e2838ce1f9870de74c44cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODE1OTgyNw==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618159827", "bodyText": "Cool! And, it cannot change to protected method since we used this method in KafkaConsumer, which is in different package.", "author": "showuon", "createdAt": "2021-04-22T07:44:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODEyNTQ1NA=="}], "type": "inlineReview"}, {"oid": "87e12238b1476d195ae14d011f85326d3587196d", "url": "https://github.com/apache/kafka/commit/87e12238b1476d195ae14d011f85326d3587196d", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-10746", "committedDate": "2021-04-22T07:17:46Z", "type": "commit"}, {"oid": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "url": "https://github.com/apache/kafka/commit/d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "message": "KAFKA-10746: refactor codes", "committedDate": "2021-04-22T07:40:23Z", "type": "commit"}, {"oid": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "url": "https://github.com/apache/kafka/commit/d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "message": "KAFKA-10746: refactor codes", "committedDate": "2021-04-22T07:40:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODUyMTgyNQ==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618521825", "body": "`KafkaException` is a runtime exception and therefore should only be included in the javadoc. In the method signature we include checked exceptions. ", "bodyText": "KafkaException is a runtime exception and therefore should only be included in the javadoc. In the method signature we include checked exceptions.", "bodyHTML": "<p dir=\"auto\"><code>KafkaException</code> is a runtime exception and therefore should only be included in the javadoc. In the method signature we include checked exceptions.</p>", "author": "kkonstantine", "createdAt": "2021-04-22T15:46:59Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1023,9 +1023,14 @@ protected void close(Timer timer) {\n     }\n \n     /**\n+     * Leaving the group. This method also sends LeaveGroupRequest and log {@code leaveReason} if this is dynamic members\n+     * or unknown coordinator or state is not UNJOINED or this generation has a valid member id.\n+     *\n+     * @param leaveReason the reason to leave the group for logging\n+     * @param shouldWarn should log as WARN level or INFO\n      * @throws KafkaException if the rebalance callback throws exception\n      */\n-    public synchronized RequestFuture<Void> maybeLeaveGroup(String leaveReason) {\n+    public synchronized RequestFuture<Void> maybeLeaveGroup(String leaveReason, boolean shouldWarn) throws KafkaException {", "originalCommit": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODg5Mzk4Ng==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618893986", "bodyText": "Thanks, updated.", "author": "showuon", "createdAt": "2021-04-23T02:19:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODUyMTgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODUyMzcyMA==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618523720", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "kkonstantine", "createdAt": "2021-04-22T15:49:09Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1051,6 +1061,10 @@ protected void close(Timer timer) {\n         return future;\n     }\n \n+    public synchronized RequestFuture<Void> maybeLeaveGroup(String leaveReason) throws KafkaException {", "originalCommit": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODgxODA1OQ==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618818059", "body": "I think it may be more useful to describe the cases where it will _not_ send a LeaveGroup and describe what this actually means (also it should have been 'and' not 'or' in the original):\r\n```suggestion\r\n     * Sends LeaveGroupRequest and logs the {@code leaveReason}, unless this member is using \r\n     * static  membership or is already not part of the group (ie does not have a valid member id, \r\n     * is in the UNJOINED state, or the coordinator is unknown).\r\n```", "bodyText": "I think it may be more useful to describe the cases where it will not send a LeaveGroup and describe what this actually means (also it should have been 'and' not 'or' in the original):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Leaving the group. This method also sends LeaveGroupRequest and log {@code leaveReason} if this is dynamic members\n          \n          \n            \n                 * or unknown coordinator or state is not UNJOINED or this generation has a valid member id.\n          \n          \n            \n                 * Sends LeaveGroupRequest and logs the {@code leaveReason}, unless this member is using \n          \n          \n            \n                 * static  membership or is already not part of the group (ie does not have a valid member id, \n          \n          \n            \n                 * is in the UNJOINED state, or the coordinator is unknown).", "bodyHTML": "<p dir=\"auto\">I think it may be more useful to describe the cases where it will <em>not</em> send a LeaveGroup and describe what this actually means (also it should have been 'and' not 'or' in the original):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Leaving</span> the group. <span class=\"pl-smi\">This</span> method also sends <span class=\"pl-smi\">LeaveGroupRequest</span> and log {<span class=\"pl-k\">@code</span> leaveReason} <span class=\"pl-k\">if</span> <span class=\"pl-c1\">this</span> is dynamic members</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> or unknown coordinator or state is not <span class=\"pl-c1\">UNJOINED</span> or <span class=\"pl-c1\">this</span> generation has a valid member id.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sends</span> <span class=\"pl-smi\">LeaveGroupRequest</span> and logs the {<span class=\"pl-k\">@code</span> leaveReason}, unless <span class=\"pl-c1\">this</span> member is using </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">static</span>  membership or is already not part of the group (ie does not have a valid member id, </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> is in the <span class=\"pl-c1\">UNJOINED</span> state, or the coordinator is unknown)<span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ableegoldman", "createdAt": "2021-04-22T23:35:01Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1023,9 +1023,14 @@ protected void close(Timer timer) {\n     }\n \n     /**\n+     * Leaving the group. This method also sends LeaveGroupRequest and log {@code leaveReason} if this is dynamic members\n+     * or unknown coordinator or state is not UNJOINED or this generation has a valid member id.", "originalCommit": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODgyMDQyNA==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618820424", "body": "I think it would be simpler to just log the current `leaveReason` right here at the warn level, and then pass in a more brief description to `maybeLeaveGroup` rather than add a flag to that method just for this one case", "bodyText": "I think it would be simpler to just log the current leaveReason right here at the warn level, and then pass in a more brief description to maybeLeaveGroup rather than add a flag to that method just for this one case", "bodyHTML": "<p dir=\"auto\">I think it would be simpler to just log the current <code>leaveReason</code> right here at the warn level, and then pass in a more brief description to <code>maybeLeaveGroup</code> rather than add a flag to that method just for this one case</p>", "author": "ableegoldman", "createdAt": "2021-04-22T23:42:06Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -1386,7 +1400,7 @@ public void run() {\n                                                     \"the poll loop is spending too much time processing messages. \" +\n                                                     \"You can address this either by increasing max.poll.interval.ms or by reducing \" +\n                                                     \"the maximum size of batches returned in poll() with max.poll.records.\";\n-                            maybeLeaveGroup(leaveReason);\n+                            maybeLeaveGroup(leaveReason, true);", "originalCommit": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODg5NDMwMg==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618894302", "bodyText": "Good suggestion!", "author": "showuon", "createdAt": "2021-04-23T02:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODgyMDQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODgyMTA3OQ==", "url": "https://github.com/apache/kafka/pull/9627#discussion_r618821079", "body": "The only invocation of `WorkerGroupMember#maybeLeaveGroup` in fact already does log a warning as to why instead of relying on `maybeLeaveGroup` to do so. Imo we should do something similar for the \"consumer poll timeout has expired\" case", "bodyText": "The only invocation of WorkerGroupMember#maybeLeaveGroup in fact already does log a warning as to why instead of relying on maybeLeaveGroup to do so. Imo we should do something similar for the \"consumer poll timeout has expired\" case", "bodyHTML": "<p dir=\"auto\">The only invocation of <code>WorkerGroupMember#maybeLeaveGroup</code> in fact already does log a warning as to why instead of relying on <code>maybeLeaveGroup</code> to do so. Imo we should do something similar for the \"consumer poll timeout has expired\" case</p>", "author": "ableegoldman", "createdAt": "2021-04-22T23:44:08Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMember.java", "diffHunk": "@@ -202,7 +202,7 @@ public void requestRejoin() {\n     }\n \n     public void maybeLeaveGroup(String leaveReason) {\n-        coordinator.maybeLeaveGroup(leaveReason);\n+        coordinator.maybeLeaveGroup(leaveReason, true);", "originalCommit": "d69cb98ff76f94f851e6a1ecd56bc927c27b4bda", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ff588293d1ec3af78912332205001432323e9819", "url": "https://github.com/apache/kafka/commit/ff588293d1ec3af78912332205001432323e9819", "message": "KAFKA-10746: address reviewer's comment to log warn before leaving group", "committedDate": "2021-04-23T02:16:36Z", "type": "commit"}]}