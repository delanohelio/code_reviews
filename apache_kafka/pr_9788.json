{"pr_number": 9788, "pr_title": "KAFKA-10671: improve the partition.assignment.strategy docs", "pr_author": "showuon", "pr_createdAt": "2020-12-25T03:27:07Z", "pr_url": "https://github.com/apache/kafka/pull/9788", "timeline": [{"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690", "url": "https://github.com/apache/kafka/commit/7ac69ef9ec035b207f389db2b9157f18d92cd690", "message": "KAFKA-10671: improve the partition.assignment.strategy docs", "committedDate": "2020-12-25T03:26:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjM2Mg==", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512362", "body": "```suggestion\r\n        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: Guarantees an assignment that is \" +\r\n\"maximally balanced while preserving as many existing partition assignments as possible.</li>\" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n          \n          \n            \n                    \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: Guarantees an assignment that is \" +\n          \n          \n            \n            \"maximally balanced while preserving as many existing partition assignments as possible.</li>\" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.StickyAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">It guarantees</span> an assignment that is <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">as</span> balanced <span class=\"x x-first x-last\">as possible and preserved </span>as many existing <span class=\"x x-first x-last\">assignment </span>as possible<span class=\"x x-first x-last\"> when a reassignment occurs</span>.&lt;/li&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.StickyAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">Guarantees</span> an assignment that is <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x x-last\">maximally</span> balanced <span class=\"x x-first x-last\">while preserving </span>as many existing <span class=\"x x-first x-last\">partition assignments </span>as possible.&lt;/li&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ableegoldman", "createdAt": "2021-01-04T19:13:11Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +", "originalCommit": "7ac69ef9ec035b207f389db2b9157f18d92cd690", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjc3MQ==", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512771", "body": "```suggestion\r\n        \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: Follows the same StickyAssignor \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: Follows the same StickyAssignor \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.CooperativeStickyAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">It follows</span> the same StickyAssignor <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.CooperativeStickyAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">Follows</span> the same StickyAssignor <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ableegoldman", "createdAt": "2021-01-04T19:14:01Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +", "originalCommit": "7ac69ef9ec035b207f389db2b9157f18d92cd690", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxNDQ1NA==", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551514454", "body": "```suggestion\r\n        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: Assigns partitions to consumers in a round-robin fashion.</li>\" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: Assigns partitions to consumers in a round-robin fashion.</li>\" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.RoundRobinAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">It works for round robin assignments of partitions</span>.&lt;/li&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;li&gt;&lt;code&gt;org.apache.kafka.clients.consumer.RoundRobinAssignor&lt;/code&gt;: <span class=\"x x-first x-last\">Assigns partitions to consumers in a round-robin fashion</span>.&lt;/li&gt;<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ableegoldman", "createdAt": "2021-01-04T19:17:12Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +", "originalCommit": "7ac69ef9ec035b207f389db2b9157f18d92cd690", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f44a41900eb526b850283372e1a25d002ba2994", "url": "https://github.com/apache/kafka/commit/7f44a41900eb526b850283372e1a25d002ba2994", "message": "KAFKA-10671: address reviewer's comment to refactor the doc", "committedDate": "2021-01-05T01:51:51Z", "type": "commit"}]}