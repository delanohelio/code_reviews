{"pr_number": 8554, "pr_title": "KAFKA-9919: Add logging to KafkaBasedLog::readToLogEnd", "pr_author": "C0urante", "pr_createdAt": "2020-04-25T22:24:30Z", "pr_url": "https://github.com/apache/kafka/pull/8554", "timeline": [{"oid": "f5c01409225987bd05d105bfa3a34d16adbce576", "url": "https://github.com/apache/kafka/commit/f5c01409225987bd05d105bfa3a34d16adbce576", "message": "KAFKA-9919: Add logging to KafkaBasedLog::readToLogEnd", "committedDate": "2020-04-25T22:17:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NDI0MQ==", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417054241", "body": "unboxing will happen in the comparison in the `if` branch anyways, so probably better to do it early declaring the type `long` here. \r\n\r\n", "bodyText": "unboxing will happen in the comparison in the if branch anyways, so probably better to do it early declaring the type long here.", "bodyHTML": "<p dir=\"auto\">unboxing will happen in the comparison in the <code>if</code> branch anyways, so probably better to do it early declaring the type <code>long</code> here.</p>", "author": "kkonstantine", "createdAt": "2020-04-29T04:00:28Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();", "originalCommit": "f5c01409225987bd05d105bfa3a34d16adbce576", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MDgwNg==", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417070806", "bodyText": "Fair enough; added.", "author": "C0urante", "createdAt": "2020-04-29T05:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NDI0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ==", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055199", "body": "```suggestion\r\n                    log.trace(\"Behind end offset {} for {}; last-consumed offset is {}\",\r\n                            endOffset, topicPartition, lastConsumedOffset);\r\n```\r\nnit: multiline calls don't need to be on their own line in AK and tab is equal to 4 spaces (here we need 2 tabs)", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\n          \n          \n            \n                                    \"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                    endOffset,\n          \n          \n            \n                                    topicPartition,\n          \n          \n            \n                                    lastConsumedOffset);\n          \n          \n            \n                                log.trace(\"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                        endOffset, topicPartition, lastConsumedOffset);\n          \n      \n    \n    \n  \n\nnit: multiline calls don't need to be on their own line in AK and tab is equal to 4 spaces (here we need 2 tabs)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>trace(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Behind end offset {} for {}; last-consumed offset is {}<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        endOffset,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        topicPartition,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        lastConsumedOffset);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Behind end offset {} for {}; last-consumed offset is {}<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            endOffset, topicPartition, lastConsumedOffset);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">nit: multiline calls don't need to be on their own line in AK and tab is equal to 4 spaces (here we need 2 tabs)</p>", "author": "kkonstantine", "createdAt": "2020-04-29T04:04:42Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n                     it.remove();\n-                else {\n+                } else {\n+                    log.trace(\n+                        \"Behind end offset {} for {}; last-consumed offset is {}\",\n+                        endOffset,\n+                        topicPartition,\n+                        lastConsumedOffset);", "originalCommit": "f5c01409225987bd05d105bfa3a34d16adbce576", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NzEyNg==", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417057126", "bodyText": "Similar to the above, seeing a message that says read might be easier to read in context than consumed.\nHow about:\nBehind end offset {} for {}; last-read offset is {}", "author": "kkonstantine", "createdAt": "2020-04-29T04:13:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTg4NQ==", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055885", "body": "given that the previous messages say \"Reading to ...\" maybe it would make sense to say:\r\n```suggestion\r\n                    log.trace(\"Read to end offset {} for {}\", endOffset, topicPartition);\r\n```", "bodyText": "given that the previous messages say \"Reading to ...\" maybe it would make sense to say:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n          \n          \n            \n                                log.trace(\"Read to end offset {} for {}\", endOffset, topicPartition);", "bodyHTML": "<p dir=\"auto\">given that the previous messages say \"Reading to ...\" maybe it would make sense to say:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Reached</span> end offset {} for {}<span class=\"pl-pds\">\"</span></span>, endOffset, topicPartition);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Read to</span> end offset {} for {}<span class=\"pl-pds\">\"</span></span>, endOffset, topicPartition);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kkonstantine", "createdAt": "2020-04-29T04:07:37Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);", "originalCommit": "f5c01409225987bd05d105bfa3a34d16adbce576", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8a66f1fc87a66add15c77a52fa0a7b02b8ff6df3", "url": "https://github.com/apache/kafka/commit/8a66f1fc87a66add15c77a52fa0a7b02b8ff6df3", "message": "KAFKA-9919: Apply suggestions from code review\n\nCo-Authored-By: Konstantine Karantasis <konstantine@confluent.io>", "committedDate": "2020-04-29T05:12:29Z", "type": "commit"}, {"oid": "36c8e2c976828d7ef5d64bfac81de386b5a9a275", "url": "https://github.com/apache/kafka/commit/36c8e2c976828d7ef5d64bfac81de386b5a9a275", "message": "KAFKA-9919: Address code review", "committedDate": "2020-04-29T05:13:24Z", "type": "commit"}]}