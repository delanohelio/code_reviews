{"pr_number": 9614, "pr_title": "KAFKA-10500: Add failed-stream-threads metric for adding + removing stream threads", "pr_author": "lct45", "pr_createdAt": "2020-11-18T18:12:29Z", "pr_url": "https://github.com/apache/kafka/pull/9614", "timeline": [{"oid": "17843bfd0d471356e91cce82cb466806c63b853c", "url": "https://github.com/apache/kafka/commit/17843bfd0d471356e91cce82cb466806c63b853c", "message": "adding failed stream metric", "committedDate": "2020-11-17T21:17:03Z", "type": "commit"}, {"oid": "b32c64d8892438dc305ad4c51f455ee4e6347e46", "url": "https://github.com/apache/kafka/commit/b32c64d8892438dc305ad4c51f455ee4e6347e46", "message": "adding testing", "committedDate": "2020-11-18T17:22:23Z", "type": "commit"}, {"oid": "845b1750959d4cf69d8ce905d79b6a6c89c6c2db", "url": "https://github.com/apache/kafka/commit/845b1750959d4cf69d8ce905d79b6a6c89c6c2db", "message": "Merge branch 'trunk' into thread_metrics", "committedDate": "2020-11-18T18:14:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMTAyNQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526331025", "body": "We also need to verify that the metric works when there is a failed stream thread. Options are (1) to create a custom processor now and (IIRC) run the test suite twice, once with failing stream threads and once without to confirm that the metric works. I'm not sure if the custom processor will let us just fail one stream thread right before closing the app. Or (2) wait until add/remove stream threads is implemented and remove threads and test the metric after removing some threads before closing the app. WDYT?", "bodyText": "We also need to verify that the metric works when there is a failed stream thread. Options are (1) to create a custom processor now and (IIRC) run the test suite twice, once with failing stream threads and once without to confirm that the metric works. I'm not sure if the custom processor will let us just fail one stream thread right before closing the app. Or (2) wait until add/remove stream threads is implemented and remove threads and test the metric after removing some threads before closing the app. WDYT?", "bodyHTML": "<p dir=\"auto\">We also need to verify that the metric works when there is a failed stream thread. Options are (1) to create a custom processor now and (IIRC) run the test suite twice, once with failing stream threads and once without to confirm that the metric works. I'm not sure if the custom processor will let us just fail one stream thread right before closing the app. Or (2) wait until add/remove stream threads is implemented and remove threads and test the metric after removing some threads before closing the app. WDYT?</p>", "author": "lct45", "createdAt": "2020-11-18T18:37:29Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/MetricsIntegrationTest.java", "diffHunk": "@@ -377,7 +378,7 @@ private void shouldAddMetricsOnAllLevels(final String builtInMetricsVersion) thr\n             builtInMetricsVersion\n         );\n         checkCacheMetrics(builtInMetricsVersion);\n-\n+        verifyFailedStreamThreadsSensor(0.0);", "originalCommit": "845b1750959d4cf69d8ce905d79b6a6c89c6c2db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1Mjc5Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526352796", "bodyText": "I think you should try using the custom processor. You can find an example in StreamsUncaughtExceptionHandlerIntegrationTest.java", "author": "wcarlson5", "createdAt": "2020-11-18T19:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMTAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkzNTU4Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526935586", "bodyText": "I would put the test whether the metric is recorded correctly in StreamThreadTest. An example for such a test is shouldLogAndRecordSkippedRecordsForInvalidTimestamps(). I do not think an integration test is needed. The test regarding the existence of the metric, i.e., checkMetricByName(listMetricThread, FAILED_STREAM_THREADS, 1); should stay here.", "author": "cadonna", "createdAt": "2020-11-19T14:37:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMTAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcyNDMzOA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r527724338", "bodyText": "After looking at both test classes, I think it actually might make the most sense to put the test for this metric in StreamsUncaughtExceptionHandlerIntegrationTest, since the metric is so closely aligned with the exception handler anyways and the setup works nicely with what we're trying to test with the metric. From the size + complexity of the other test classes, I think creating an overloaded processor for one test out of 20+ tests seems tricky.", "author": "lct45", "createdAt": "2020-11-20T14:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMzMTAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0NzM1OQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526347359", "body": "This seems wrong. There are a few duplicate calls here", "bodyText": "This seems wrong. There are a few duplicate calls here", "bodyHTML": "<p dir=\"auto\">This seems wrong. There are a few duplicate calls here</p>", "author": "wcarlson5", "createdAt": "2020-11-18T19:03:38Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -1070,6 +1070,10 @@ private Thread shutdownHelper(final boolean error) {\n             adminClient.close();\n \n             streamsMetrics.removeAllClientLevelMetrics();", "originalCommit": "845b1750959d4cf69d8ce905d79b6a6c89c6c2db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1NTgzOA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526355838", "bodyText": "Ahh, got mixed up when I rebased trunk", "author": "lct45", "createdAt": "2020-11-18T19:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0NzM1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0ODU3OA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526348578", "body": "We probably don't want to skip this log. Can you move the sensor in here?", "bodyText": "We probably don't want to skip this log. Can you move the sensor in here?", "bodyHTML": "<p dir=\"auto\">We probably don't want to skip this log. Can you move the sensor in here?</p>", "author": "wcarlson5", "createdAt": "2020-11-18T19:05:45Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -219,6 +220,8 @@ State setState(final State newState) {\n             } else if (!state.isValidTransition(newState)) {\n                 log.error(\"Unexpected state transition from {} to {}\", oldState, newState);\n                 throw new StreamsException(logPrefix + \"Unexpected state transition from \" + oldState + \" to \" + newState);\n+            } else if (newState == State.DEAD) {\n+                failedStreamThreadSensor.record();\n             } else {\n                 log.info(\"State transition from {} to {}\", oldState, newState);", "originalCommit": "845b1750959d4cf69d8ce905d79b6a6c89c6c2db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "44db7af16b663dba85e2d126947e239f475f63fe", "url": "https://github.com/apache/kafka/commit/44db7af16b663dba85e2d126947e239f475f63fe", "message": "Walker's updates", "committedDate": "2020-11-18T22:38:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg4MDQxMg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526880412", "body": "Could you please add a public method to `StreamsMetricsImpl` named `removeAllClientLevelSensorsAndMetrics()` that calls `removeAllClientLevelMetrics()` and `removeAllClientLevelSensors()` and make the latter two methods `private`?", "bodyText": "Could you please add a public method to StreamsMetricsImpl named removeAllClientLevelSensorsAndMetrics() that calls removeAllClientLevelMetrics() and removeAllClientLevelSensors() and make the latter two methods private?", "bodyHTML": "<p dir=\"auto\">Could you please add a public method to <code>StreamsMetricsImpl</code> named <code>removeAllClientLevelSensorsAndMetrics()</code> that calls <code>removeAllClientLevelMetrics()</code> and <code>removeAllClientLevelSensors()</code> and make the latter two methods <code>private</code>?</p>", "author": "cadonna", "createdAt": "2020-11-19T13:29:31Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -1070,7 +1070,9 @@ private Thread shutdownHelper(final boolean error) {\n             adminClient.close();\n \n             streamsMetrics.removeAllClientLevelMetrics();\n+            streamsMetrics.removeAllClientLevelSensors();", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg4NjM2OQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526886369", "body": "```suggestion\r\n    private static final String FAILED_STREAM_THREADS_DESCRIPTION = \"The number of failed stream threads since the start of the Kafka Streams client\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String FAILED_STREAM_THREADS_DESCRIPTION = \"The number of failed stream threads so far for a given Kafka Streams client\";\n          \n          \n            \n                private static final String FAILED_STREAM_THREADS_DESCRIPTION = \"The number of failed stream threads since the start of the Kafka Streams client\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">FAILED_STREAM_THREADS_DESCRIPTION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The number of failed stream threads <span class=\"x x-first x-last\">so far for a given</span> Kafka Streams client<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">FAILED_STREAM_THREADS_DESCRIPTION</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The number of failed stream threads <span class=\"x x-first x-last\">since the start of the</span> Kafka Streams client<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-19T13:33:43Z", "path": "streams/src/main/java/org/apache/kafka/streams/internals/metrics/ClientMetrics.java", "diffHunk": "@@ -60,6 +65,7 @@ private ClientMetrics() {}\n         \"The description of the topology executed in the Kafka Streams client\";\n     private static final String STATE_DESCRIPTION = \"The state of the Kafka Streams client\";\n     private static final String ALIVE_STREAM_THREADS_DESCRIPTION = \"The current number of alive stream threads that are running or participating in rebalance\";\n+    private static final String FAILED_STREAM_THREADS_DESCRIPTION = \"The number of failed stream threads so far for a given Kafka Streams client\";", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NTQ0Nw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526895447", "body": "nit: I like to insert a blank line after the call to test to visually separate setup, call, and verification.", "bodyText": "nit: I like to insert a blank line after the call to test to visually separate setup, call, and verification.", "bodyHTML": "<p dir=\"auto\">nit: I like to insert a blank line after the call to test to visually separate setup, call, and verification.</p>", "author": "cadonna", "createdAt": "2020-11-19T13:42:11Z", "path": "streams/src/test/java/org/apache/kafka/streams/internals/metrics/ClientMetricsTest.java", "diffHunk": "@@ -99,6 +121,27 @@ public void shouldAddAliveStreamThreadsMetric() {\n         );\n     }\n \n+    @Test\n+    public void shouldGetFailedStreamThreadsSensor() {\n+        final String name = \"failed-stream-threads\";\n+        final String description = \"The number of failed stream threads so far for a given Kafka Streams client\";\n+        expect(streamsMetrics.clientLevelSensor(name, RecordingLevel.INFO)).andReturn(expectedSensor);\n+        expect(streamsMetrics.clientLevelTagMap()).andReturn(tagMap);\n+        StreamsMetricsImpl.addSumMetricToSensor(\n+            expectedSensor,\n+            CLIENT_LEVEL_GROUP,\n+            tagMap,\n+            name,\n+            false,\n+            description\n+        );\n+        replay(StreamsMetricsImpl.class, streamsMetrics);\n+\n+        final Sensor sensor = ClientMetrics.failedStreamThreadSensor(streamsMetrics);", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NzEzNQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526897135", "body": "Unit tests for this method are missing.", "bodyText": "Unit tests for this method are missing.", "bodyHTML": "<p dir=\"auto\">Unit tests for this method are missing.</p>", "author": "cadonna", "createdAt": "2020-11-19T13:44:38Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -214,6 +215,20 @@ public RocksDBMetricsRecordingTrigger rocksDBMetricsRecordingTrigger() {\n         }\n     }\n \n+    public final Sensor clientLevelSensor(final String sensorName,", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5NzIzNA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526897234", "body": "Unit tests for this method are missing. Please also consider my comment in class `KafkaStreams` for these unit tests. ", "bodyText": "Unit tests for this method are missing. Please also consider my comment in class KafkaStreams for these unit tests.", "bodyHTML": "<p dir=\"auto\">Unit tests for this method are missing. Please also consider my comment in class <code>KafkaStreams</code> for these unit tests.</p>", "author": "cadonna", "createdAt": "2020-11-19T13:44:46Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -253,6 +268,16 @@ public final void removeAllClientLevelMetrics() {\n         }\n     }\n \n+    public final void removeAllClientLevelSensors() {", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkwOTkyNw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526909927", "body": "Here you should just need a queue as for `clientLevelMetrics`. We need a map for the other levels because there can be multiple objects for each level, e.g., there might be multiple stream thread and each one manages its sensors under a key in the map. However, there is only one client on client level.", "bodyText": "Here you should just need a queue as for clientLevelMetrics. We need a map for the other levels because there can be multiple objects for each level, e.g., there might be multiple stream thread and each one manages its sensors under a key in the map. However, there is only one client on client level.", "bodyHTML": "<p dir=\"auto\">Here you should just need a queue as for <code>clientLevelMetrics</code>. We need a map for the other levels because there can be multiple objects for each level, e.g., there might be multiple stream thread and each one manages its sensors under a key in the map. However, there is only one client on client level.</p>", "author": "cadonna", "createdAt": "2020-11-19T14:02:40Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -93,6 +93,7 @@ public int hashCode() {\n \n     private final Version version;\n     private final Deque<MetricName> clientLevelMetrics = new LinkedList<>();\n+    private final Map<String, Deque<String>> clientLevelSensors = new HashMap<>();", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNDY2OA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r526914668", "body": "Not every dead stream thread is a failed stream thread. You should record this metric where the uncaught exception handler is called because there we now that a stream thread died unexpectedly.", "bodyText": "Not every dead stream thread is a failed stream thread. You should record this metric where the uncaught exception handler is called because there we now that a stream thread died unexpectedly.", "bodyHTML": "<p dir=\"auto\">Not every dead stream thread is a failed stream thread. You should record this metric where the uncaught exception handler is called because there we now that a stream thread died unexpectedly.</p>", "author": "cadonna", "createdAt": "2020-11-19T14:09:34Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -221,6 +221,9 @@ State setState(final State newState) {\n                 throw new StreamsException(logPrefix + \"Unexpected state transition from \" + oldState + \" to \" + newState);\n             } else {\n                 log.info(\"State transition from {} to {}\", oldState, newState);\n+                if (newState == State.DEAD) {\n+                    failedStreamThreadSensor.record();\n+                }", "originalCommit": "44db7af16b663dba85e2d126947e239f475f63fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzExNzY4NQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r527117685", "bodyText": "Would that just be in run() of the GlobalStreamThread then?", "author": "lct45", "createdAt": "2020-11-19T18:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNDY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyMjc3Mg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r527122772", "bodyText": "No, that would be in StreamThread#runLoop().", "author": "cadonna", "createdAt": "2020-11-19T18:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNDY2OA=="}], "type": "inlineReview"}, {"oid": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "url": "https://github.com/apache/kafka/commit/f6db8cdd4e9f880bf34baf471212b980f8da7092", "message": "Updated testing and fixes", "committedDate": "2020-11-23T16:20:23Z", "type": "commit"}, {"oid": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "url": "https://github.com/apache/kafka/commit/f6db8cdd4e9f880bf34baf471212b980f8da7092", "message": "Updated testing and fixes", "committedDate": "2020-11-23T16:20:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMwODk0Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529308946", "body": "You can inline the value of variable `key` here and remove `key`.\r\n\r\n```suggestion\r\n            final String fullSensorName = CLIENT_LEVEL_GROUP + SENSOR_NAME_DELIMITER + sensorName;\r\n```", "bodyText": "You can inline the value of variable key here and remove key.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final String fullSensorName = key + SENSOR_NAME_DELIMITER + sensorName;\n          \n          \n            \n                        final String fullSensorName = CLIENT_LEVEL_GROUP + SENSOR_NAME_DELIMITER + sensorName;", "bodyHTML": "<p dir=\"auto\">You can inline the value of variable <code>key</code> here and remove <code>key</code>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> fullSensorName <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">key</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">SENSOR_NAME_DELIMITER</span> <span class=\"pl-k\">+</span> sensorName;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> fullSensorName <span class=\"pl-k\">=</span> <span class=\"pl-c1 x x-first x-last\">CLIENT_LEVEL_GROUP</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">SENSOR_NAME_DELIMITER</span> <span class=\"pl-k\">+</span> sensorName;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:00:03Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -214,6 +215,20 @@ public RocksDBMetricsRecordingTrigger rocksDBMetricsRecordingTrigger() {\n         }\n     }\n \n+    public final Sensor clientLevelSensor(final String sensorName,\n+                                          final RecordingLevel recordingLevel,\n+                                          final Sensor... parents) {\n+        final String key = CLIENT_LEVEL_GROUP;\n+        synchronized (clientLevelSensors) {\n+            final String fullSensorName = key + SENSOR_NAME_DELIMITER + sensorName;", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxMzAyMg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529313022", "body": "Although, we use this in other methods, I think the following is a bit simpler to read:\r\n```suggestion\r\n        final Sensor sensor = metrics.getSensor(fullSensorName);\r\n        if (sensor == null) {\r\n            clientLevelSensors.push(fullSensorName);\r\n            return metrics.sensor(fullSensorName, recordingLevel, parents);\r\n        }\r\n        return sensor;\r\n```", "bodyText": "Although, we use this in other methods, I think the following is a bit simpler to read:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return Optional.ofNullable(metrics.getSensor(fullSensorName))\n          \n          \n            \n                            .orElseGet(() -> {\n          \n          \n            \n                                clientLevelSensors.push(fullSensorName);\n          \n          \n            \n                                return metrics.sensor(fullSensorName, recordingLevel, parents);\n          \n          \n            \n                            });\n          \n          \n            \n                    final Sensor sensor = metrics.getSensor(fullSensorName);\n          \n          \n            \n                    if (sensor == null) {\n          \n          \n            \n                        clientLevelSensors.push(fullSensorName);\n          \n          \n            \n                        return metrics.sensor(fullSensorName, recordingLevel, parents);\n          \n          \n            \n                    }\n          \n          \n            \n                    return sensor;", "bodyHTML": "<p dir=\"auto\">Although, we use this in other methods, I think the following is a bit simpler to read:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"223\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable(metrics<span class=\"pl-k\">.</span>getSensor(fullSensorName))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"224\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .orElseGet(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"225\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    clientLevelSensors<span class=\"pl-k\">.</span>push(fullSensorName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"226\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">return</span> metrics<span class=\"pl-k\">.</span>sensor(fullSensorName, recordingLevel, parents);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"227\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"223\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> sensor <span class=\"pl-k\">=</span> metrics<span class=\"pl-k\">.</span>getSensor(fullSensorName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"224\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (sensor <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"225\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            clientLevelSensors<span class=\"pl-k\">.</span>push(fullSensorName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"226\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> metrics<span class=\"pl-k\">.</span>sensor(fullSensorName, recordingLevel, parents);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"227\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"228\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> sensor;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:03:22Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -214,6 +215,20 @@ public RocksDBMetricsRecordingTrigger rocksDBMetricsRecordingTrigger() {\n         }\n     }\n \n+    public final Sensor clientLevelSensor(final String sensorName,\n+                                          final RecordingLevel recordingLevel,\n+                                          final Sensor... parents) {\n+        final String key = CLIENT_LEVEL_GROUP;\n+        synchronized (clientLevelSensors) {\n+            final String fullSensorName = key + SENSOR_NAME_DELIMITER + sensorName;\n+            return Optional.ofNullable(metrics.getSensor(fullSensorName))\n+                .orElseGet(() -> {\n+                    clientLevelSensors.push(fullSensorName);\n+                    return metrics.sensor(fullSensorName, recordingLevel, parents);\n+                });", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxNzM5OA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529317398", "body": "```suggestion\r\n        final Sensor actualSensor = streamsMetrics.clientLevelSensor(SENSOR_NAME_1, recordingLevel);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Sensor actualSensor = streamsMetrics.clientLevelSensor(\n          \n          \n            \n                        SENSOR_NAME_1,\n          \n          \n            \n                        recordingLevel\n          \n          \n            \n                    );\n          \n          \n            \n                    final Sensor actualSensor = streamsMetrics.clientLevelSensor(SENSOR_NAME_1, recordingLevel);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> actualSensor <span class=\"pl-k\">=</span> streamsMetrics<span class=\"pl-k\">.</span>clientLevelSensor(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">SENSOR_NAME_1</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            recordingLevel</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        );</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> actualSensor <span class=\"pl-k\">=</span> streamsMetrics<span class=\"pl-k\">.</span>clientLevelSensor(<span class=\"pl-c1\">SENSOR_NAME_1</span>, recordingLevel);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:07:08Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -577,6 +579,38 @@ public void shouldGetExistingCacheLevelSensor() {\n         assertThat(actualSensor, is(equalToObject(sensor)));\n     }\n \n+    @Test\n+    public void shouldGetNewClientLevelSensor() {\n+        final Metrics metrics = mock(Metrics.class);\n+        final RecordingLevel recordingLevel = RecordingLevel.INFO;\n+        setupGetNewSensorTest(metrics, recordingLevel);\n+        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n+\n+        final Sensor actualSensor = streamsMetrics.clientLevelSensor(\n+            SENSOR_NAME_1,\n+            recordingLevel\n+        );\n+\n+        verify(metrics);\n+        assertThat(actualSensor, is(equalToObject(sensor)));\n+    }\n+\n+    @Test\n+    public void shouldGetExistingClientLevelSensor() {\n+        final Metrics metrics = mock(Metrics.class);\n+        final RecordingLevel recordingLevel = RecordingLevel.INFO;\n+        setupGetExistingSensorTest(metrics);\n+        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n+\n+        final Sensor actualSensor = streamsMetrics.clientLevelSensor(\n+            SENSOR_NAME_1,\n+            recordingLevel\n+        );", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMyMjk2Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529322966", "body": "```suggestion\r\n        final Sensor actualSensor = streamsMetrics.clientLevelSensor(SENSOR_NAME_1, recordingLevel);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Sensor actualSensor = streamsMetrics.clientLevelSensor(\n          \n          \n            \n                        SENSOR_NAME_1,\n          \n          \n            \n                        recordingLevel\n          \n          \n            \n                    );\n          \n          \n            \n                    final Sensor actualSensor = streamsMetrics.clientLevelSensor(SENSOR_NAME_1, recordingLevel);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> actualSensor <span class=\"pl-k\">=</span> streamsMetrics<span class=\"pl-k\">.</span>clientLevelSensor(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">SENSOR_NAME_1</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            recordingLevel</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        );</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> actualSensor <span class=\"pl-k\">=</span> streamsMetrics<span class=\"pl-k\">.</span>clientLevelSensor(<span class=\"pl-c1\">SENSOR_NAME_1</span>, recordingLevel);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:11:37Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -577,6 +579,38 @@ public void shouldGetExistingCacheLevelSensor() {\n         assertThat(actualSensor, is(equalToObject(sensor)));\n     }\n \n+    @Test\n+    public void shouldGetNewClientLevelSensor() {\n+        final Metrics metrics = mock(Metrics.class);\n+        final RecordingLevel recordingLevel = RecordingLevel.INFO;\n+        setupGetNewSensorTest(metrics, recordingLevel);\n+        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n+\n+        final Sensor actualSensor = streamsMetrics.clientLevelSensor(\n+            SENSOR_NAME_1,\n+            recordingLevel\n+        );", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzOTI3Mg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529339272", "body": "```suggestion\r\n        metrics.removeSensor(sensorKeys.getValues().get(0));\r\n        metrics.removeSensor(sensorKeys.getValues().get(1));\r\n        expect(metrics.removeMetric(metricName1)).andReturn(mock(KafkaMetric.class));\r\n        expect(metrics.removeMetric(metricName2)).andReturn(mock(KafkaMetric.class));\r\n        replay(metrics);\r\n\r\n        streamsMetrics.removeAllClientLevelSensorsAndMetrics();\r\n\r\n        verify(metrics);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    metrics.removeSensor(sensorKeys.getValues().get(0));\n          \n          \n            \n                    metrics.removeSensor(sensorKeys.getValues().get(1));\n          \n          \n            \n            \n          \n          \n            \n                    expect(metrics.removeMetric(metricName1)).andReturn(mock(KafkaMetric.class));\n          \n          \n            \n                    expect(metrics.removeMetric(metricName2)).andReturn(mock(KafkaMetric.class));\n          \n          \n            \n                    replay(metrics);\n          \n          \n            \n            \n          \n          \n            \n                    streamsMetrics.removeAllClientLevelSensorsAndMetrics();\n          \n          \n            \n                    verify(metrics);\n          \n          \n            \n                    metrics.removeSensor(sensorKeys.getValues().get(0));\n          \n          \n            \n                    metrics.removeSensor(sensorKeys.getValues().get(1));\n          \n          \n            \n                    expect(metrics.removeMetric(metricName1)).andReturn(mock(KafkaMetric.class));\n          \n          \n            \n                    expect(metrics.removeMetric(metricName2)).andReturn(mock(KafkaMetric.class));\n          \n          \n            \n                    replay(metrics);\n          \n          \n            \n            \n          \n          \n            \n                    streamsMetrics.removeAllClientLevelSensorsAndMetrics();\n          \n          \n            \n            \n          \n          \n            \n                    verify(metrics);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"672\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        metrics<span class=\"pl-k\">.</span>removeSensor(sensorKeys<span class=\"pl-k\">.</span>getValues()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"673\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        metrics<span class=\"pl-k\">.</span>removeSensor(sensorKeys<span class=\"pl-k\">.</span>getValues()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"674\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"675\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        expect(metrics<span class=\"pl-k\">.</span>removeMetric(<span class=\"x x-first x-last\">metricName1</span>))<span class=\"pl-k\">.</span>andReturn(mock(<span class=\"pl-smi\">KafkaMetric</span><span class=\"pl-k\">.</span>class));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"676\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">expect</span>(metrics<span class=\"pl-k x x-first\">.</span><span class=\"x\">removeMetric(metricName2))</span><span class=\"pl-k x\">.</span><span class=\"x\">andReturn(mock(</span><span class=\"pl-smi x\">KafkaMetric</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"677\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">        replay(metrics);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"678\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"679\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        streamsMetrics</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">removeAllClientLevelSensorsAndMetrics();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"680\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        verify(metrics);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"672\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        metrics<span class=\"pl-k\">.</span>removeSensor(sensorKeys<span class=\"pl-k\">.</span>getValues()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"673\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        metrics<span class=\"pl-k\">.</span>removeSensor(sensorKeys<span class=\"pl-k\">.</span>getValues()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"674\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">        expect(metrics</span><span class=\"pl-k x\">.</span><span class=\"x\">removeMetric(metricName1))</span><span class=\"pl-k x\">.</span><span class=\"x\">andReturn(mock(</span><span class=\"pl-smi x\">KafkaMetric</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"675\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        expect(metrics<span class=\"pl-k\">.</span>removeMetric(<span class=\"x x-first x-last\">metricName2</span>))<span class=\"pl-k\">.</span>andReturn(mock(<span class=\"pl-smi\">KafkaMetric</span><span class=\"pl-k\">.</span>class));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"676\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">replay</span>(metrics);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"677\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"678\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">        streamsMetrics</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">removeAllClientLevelSensorsAndMetrics();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"679\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"680\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        verify(metrics);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:24:34Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -629,17 +663,20 @@ private void setupRemoveSensorsTest(final Metrics metrics,\n     }\n \n     @Test\n-    public void shouldRemoveClientLevelMetrics() {\n+    public void shouldRemoveClientLevelMetricsAndSensors() {\n         final Metrics metrics = niceMock(Metrics.class);\n         final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n-        addSensorsOnAllLevels(metrics, streamsMetrics);\n+        final Capture<String> sensorKeys = addSensorsOnAllLevels(metrics, streamsMetrics);\n         resetToDefault(metrics);\n-        expect(metrics.removeMetric(metricName1)).andStubReturn(null);\n-        expect(metrics.removeMetric(metricName2)).andStubReturn(null);\n-        replay(metrics);\n \n-        streamsMetrics.removeAllClientLevelMetrics();\n+        metrics.removeSensor(sensorKeys.getValues().get(0));\n+        metrics.removeSensor(sensorKeys.getValues().get(1));\n+\n+        expect(metrics.removeMetric(metricName1)).andReturn(mock(KafkaMetric.class));\n+        expect(metrics.removeMetric(metricName2)).andReturn(mock(KafkaMetric.class));\n+        replay(metrics);\n \n+        streamsMetrics.removeAllClientLevelSensorsAndMetrics();\n         verify(metrics);", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzOTU4Mg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529339582", "body": "Please remove this empty line.", "bodyText": "Please remove this empty line.", "bodyHTML": "<p dir=\"auto\">Please remove this empty line.</p>", "author": "cadonna", "createdAt": "2020-11-24T09:24:48Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -629,17 +663,20 @@ private void setupRemoveSensorsTest(final Metrics metrics,\n     }\n \n     @Test\n-    public void shouldRemoveClientLevelMetrics() {\n+    public void shouldRemoveClientLevelMetricsAndSensors() {\n         final Metrics metrics = niceMock(Metrics.class);\n         final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n-        addSensorsOnAllLevels(metrics, streamsMetrics);\n+        final Capture<String> sensorKeys = addSensorsOnAllLevels(metrics, streamsMetrics);\n         resetToDefault(metrics);\n-        expect(metrics.removeMetric(metricName1)).andStubReturn(null);\n-        expect(metrics.removeMetric(metricName2)).andStubReturn(null);\n-        replay(metrics);\n ", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM0MDk3Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529340976", "body": "Please remove empty line.", "bodyText": "Please remove empty line.", "bodyHTML": "<p dir=\"auto\">Please remove empty line.</p>", "author": "cadonna", "createdAt": "2020-11-24T09:25:52Z", "path": "streams/src/test/java/org/apache/kafka/streams/internals/metrics/ClientMetricsTest.java", "diffHunk": "@@ -99,6 +121,29 @@ public void shouldAddAliveStreamThreadsMetric() {\n         );\n     }\n \n+    @Test\n+    public void shouldGetFailedStreamThreadsSensor() {\n+        final String name = \"failed-stream-threads\";\n+        final String description = \"The number of failed stream threads since the start of the Kafka Streams client\";\n+        expect(streamsMetrics.clientLevelSensor(name, RecordingLevel.INFO)).andReturn(expectedSensor);\n+        expect(streamsMetrics.clientLevelTagMap()).andReturn(tagMap);\n+        StreamsMetricsImpl.addSumMetricToSensor(\n+            expectedSensor,\n+            CLIENT_LEVEL_GROUP,\n+            tagMap,\n+            name,\n+            false,\n+            description\n+        );\n+", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM2Mzc5Ng==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529363796", "body": "You can remove these lines. They are dead code.", "bodyText": "You can remove these lines. They are dead code.", "bodyHTML": "<p dir=\"auto\">You can remove these lines. They are dead code.</p>", "author": "cadonna", "createdAt": "2020-11-24T09:44:03Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -2438,6 +2440,60 @@ public void shouldConstructAdminMetrics() {\n         assertEquals(testMetricName, adminClientMetrics.get(testMetricName).metricName());\n     }\n \n+    @Test\n+    public void shouldCountFailedStreamThread() {\n+        verifyFailedStreamThread(false);\n+        verifyFailedStreamThread(true);\n+    }\n+\n+    public void verifyFailedStreamThread(final boolean shouldFail) {\n+        final Consumer<byte[], byte[]> consumer = EasyMock.createNiceMock(Consumer.class);\n+        final TaskManager taskManager = EasyMock.createNiceMock(TaskManager.class);\n+        final StreamsMetricsImpl streamsMetrics =\n+            new StreamsMetricsImpl(metrics, CLIENT_ID, StreamsConfig.METRICS_LATEST, mockTime);\n+        final StreamThread thread = new StreamThread(\n+            mockTime,\n+            config,\n+            null,\n+            consumer,\n+            consumer,\n+            null,\n+            null,\n+            taskManager,\n+            streamsMetrics,\n+            internalTopologyBuilder,\n+            CLIENT_ID,\n+            new LogContext(\"\"),\n+            new AtomicInteger(),\n+            new AtomicLong(Long.MAX_VALUE),\n+            null,\n+            e -> { }\n+        ) {\n+            @Override\n+            void runOnce() {\n+                setState(StreamThread.State.PENDING_SHUTDOWN);\n+                if (shouldFail) {\n+                    throw new StreamsException(Thread.currentThread().getName());\n+                }\n+            }\n+        };\n+        expect(taskManager.activeTaskMap()).andReturn(Collections.emptyMap());\n+        expect(taskManager.standbyTaskMap()).andReturn(Collections.emptyMap());\n+\n+        taskManager.process(anyInt(), anyObject());\n+        EasyMock.expectLastCall().andThrow(new StreamsException(Thread.currentThread().getName()));\n+", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM2OTMxMw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529369313", "body": "```suggestion\r\n        EasyMock.replay(taskManager);\r\n        thread.updateThreadMetadata(\"metadata\");\r\n        thread.setState(StreamThread.State.STARTING);\r\n        \r\n        thread.runLoop();\r\n\r\n        final Metric failedThreads = StreamsTestUtils.getMetricByName(metrics.metrics(), \"failed-stream-threads\", \"stream-metrics\");\r\n        assertThat(failedThreads.metricValue(), is(shouldFail ? 1.0 : 0.0));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                    EasyMock.replay(taskManager);\n          \n          \n            \n            \n          \n          \n            \n                    thread.updateThreadMetadata(\"metadata\");\n          \n          \n            \n                    thread.setState(StreamThread.State.STARTING);\n          \n          \n            \n                    thread.runLoop();\n          \n          \n            \n            \n          \n          \n            \n                    final Metric failedThreads = StreamsTestUtils.getMetricByName(metrics.metrics(), \"failed-stream-threads\", \"stream-metrics\");\n          \n          \n            \n            \n          \n          \n            \n                    assertEquals(shouldFail ? 1.0 : 0.0, failedThreads.metricValue());\n          \n          \n            \n                    EasyMock.replay(taskManager);\n          \n          \n            \n                    thread.updateThreadMetadata(\"metadata\");\n          \n          \n            \n                    thread.setState(StreamThread.State.STARTING);\n          \n          \n            \n                    \n          \n          \n            \n                    thread.runLoop();\n          \n          \n            \n            \n          \n          \n            \n                    final Metric failedThreads = StreamsTestUtils.getMetricByName(metrics.metrics(), \"failed-stream-threads\", \"stream-metrics\");\n          \n          \n            \n                    assertThat(failedThreads.metricValue(), is(shouldFail ? 1.0 : 0.0));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">EasyMock</span><span class=\"pl-k\">.</span>replay(taskManager);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        thread<span class=\"pl-k\">.</span>updateThreadMetadata(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>metadata<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        thread<span class=\"pl-k\">.</span>setState(<span class=\"pl-smi\">StreamThread</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">State</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>STARTING</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        thread<span class=\"pl-k\">.</span>runLoop();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Metric</span> failedThreads <span class=\"pl-k\">=</span> <span class=\"pl-smi\">StreamsTestUtils</span><span class=\"pl-k\">.</span>getMetricByName(metrics<span class=\"pl-k\">.</span>metrics(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>failed-stream-threads<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stream-metrics<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertEquals(shouldFail <span class=\"pl-k\">?</span> <span class=\"pl-c1\">1.0</span> <span class=\"pl-k\">:</span> <span class=\"pl-c1\">0.0</span>, failedThreads<span class=\"pl-k\">.</span>metricValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">EasyMock</span><span class=\"pl-k\">.</span>replay(taskManager);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        thread<span class=\"pl-k\">.</span>updateThreadMetadata(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>metadata<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        thread<span class=\"pl-k\">.</span>setState(<span class=\"pl-smi\">StreamThread</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">State</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>STARTING</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        thread<span class=\"pl-k\">.</span>runLoop();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Metric</span> failedThreads <span class=\"pl-k\">=</span> <span class=\"pl-smi\">StreamsTestUtils</span><span class=\"pl-k\">.</span>getMetricByName(metrics<span class=\"pl-k\">.</span>metrics(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>failed-stream-threads<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stream-metrics<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(failedThreads<span class=\"pl-k\">.</span>metricValue(), is(shouldFail <span class=\"pl-k\">?</span> <span class=\"pl-c1\">1.0</span> <span class=\"pl-k\">:</span> <span class=\"pl-c1\">0.0</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2020-11-24T09:48:30Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -2438,6 +2440,60 @@ public void shouldConstructAdminMetrics() {\n         assertEquals(testMetricName, adminClientMetrics.get(testMetricName).metricName());\n     }\n \n+    @Test\n+    public void shouldCountFailedStreamThread() {\n+        verifyFailedStreamThread(false);\n+        verifyFailedStreamThread(true);\n+    }\n+\n+    public void verifyFailedStreamThread(final boolean shouldFail) {\n+        final Consumer<byte[], byte[]> consumer = EasyMock.createNiceMock(Consumer.class);\n+        final TaskManager taskManager = EasyMock.createNiceMock(TaskManager.class);\n+        final StreamsMetricsImpl streamsMetrics =\n+            new StreamsMetricsImpl(metrics, CLIENT_ID, StreamsConfig.METRICS_LATEST, mockTime);\n+        final StreamThread thread = new StreamThread(\n+            mockTime,\n+            config,\n+            null,\n+            consumer,\n+            consumer,\n+            null,\n+            null,\n+            taskManager,\n+            streamsMetrics,\n+            internalTopologyBuilder,\n+            CLIENT_ID,\n+            new LogContext(\"\"),\n+            new AtomicInteger(),\n+            new AtomicLong(Long.MAX_VALUE),\n+            null,\n+            e -> { }\n+        ) {\n+            @Override\n+            void runOnce() {\n+                setState(StreamThread.State.PENDING_SHUTDOWN);\n+                if (shouldFail) {\n+                    throw new StreamsException(Thread.currentThread().getName());\n+                }\n+            }\n+        };\n+        expect(taskManager.activeTaskMap()).andReturn(Collections.emptyMap());\n+        expect(taskManager.standbyTaskMap()).andReturn(Collections.emptyMap());\n+\n+        taskManager.process(anyInt(), anyObject());\n+        EasyMock.expectLastCall().andThrow(new StreamsException(Thread.currentThread().getName()));\n+\n+        EasyMock.replay(taskManager);\n+\n+        thread.updateThreadMetadata(\"metadata\");\n+        thread.setState(StreamThread.State.STARTING);\n+        thread.runLoop();\n+\n+        final Metric failedThreads = StreamsTestUtils.getMetricByName(metrics.metrics(), \"failed-stream-threads\", \"stream-metrics\");\n+\n+        assertEquals(shouldFail ? 1.0 : 0.0, failedThreads.metricValue());", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4NDM2Mg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529384362", "body": "I would rename this method to `runAndVerifyFailedStreamThreadRecording()`.", "bodyText": "I would rename this method to runAndVerifyFailedStreamThreadRecording().", "bodyHTML": "<p dir=\"auto\">I would rename this method to <code>runAndVerifyFailedStreamThreadRecording()</code>.</p>", "author": "cadonna", "createdAt": "2020-11-24T09:59:55Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -2438,6 +2440,60 @@ public void shouldConstructAdminMetrics() {\n         assertEquals(testMetricName, adminClientMetrics.get(testMetricName).metricName());\n     }\n \n+    @Test\n+    public void shouldCountFailedStreamThread() {\n+        verifyFailedStreamThread(false);\n+        verifyFailedStreamThread(true);\n+    }\n+\n+    public void verifyFailedStreamThread(final boolean shouldFail) {", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4NDY5Nw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r529384697", "body": "Could you please specify two separate unit tests? One could be named `shouldRecordFailedStreamThread()` and the other `shouldNotRecordFailedStreamThread()`.", "bodyText": "Could you please specify two separate unit tests? One could be named shouldRecordFailedStreamThread() and the other shouldNotRecordFailedStreamThread().", "bodyHTML": "<p dir=\"auto\">Could you please specify two separate unit tests? One could be named <code>shouldRecordFailedStreamThread()</code> and the other <code>shouldNotRecordFailedStreamThread()</code>.</p>", "author": "cadonna", "createdAt": "2020-11-24T10:00:15Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -2438,6 +2440,60 @@ public void shouldConstructAdminMetrics() {\n         assertEquals(testMetricName, adminClientMetrics.get(testMetricName).metricName());\n     }\n \n+    @Test\n+    public void shouldCountFailedStreamThread() {\n+        verifyFailedStreamThread(false);\n+        verifyFailedStreamThread(true);\n+    }", "originalCommit": "f6db8cdd4e9f880bf34baf471212b980f8da7092", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e395ba706e59f13af996c83177e5846878adb3e8", "url": "https://github.com/apache/kafka/commit/e395ba706e59f13af996c83177e5846878adb3e8", "message": "Review clean up", "committedDate": "2020-11-24T15:51:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxODA5Mw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533018093", "body": "nit: missing empty line", "bodyText": "nit: missing empty line", "bodyHTML": "<p dir=\"auto\">nit: missing empty line</p>", "author": "mjsax", "createdAt": "2020-12-01T01:44:44Z", "path": "streams/src/main/java/org/apache/kafka/streams/internals/metrics/ClientMetrics.java", "diffHunk": "@@ -125,4 +131,16 @@ public static void addNumAliveStreamThreadMetric(final StreamsMetricsImpl stream\n             stateProvider\n         );\n     }\n+    public static Sensor failedStreamThreadSensor(final StreamsMetricsImpl streamsMetrics) {", "originalCommit": "e395ba706e59f13af996c83177e5846878adb3e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533020449", "body": "Should we rewrite this the same way `threadLevelSensor` is written (ie, using `orElseGet`) for consistency?", "bodyText": "Should we rewrite this the same way threadLevelSensor is written (ie, using orElseGet) for consistency?", "bodyHTML": "<p dir=\"auto\">Should we rewrite this the same way <code>threadLevelSensor</code> is written (ie, using <code>orElseGet</code>) for consistency?</p>", "author": "mjsax", "createdAt": "2020-12-01T01:51:48Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -214,6 +215,20 @@ public RocksDBMetricsRecordingTrigger rocksDBMetricsRecordingTrigger() {\n         }\n     }\n \n+    public final Sensor clientLevelSensor(final String sensorName,\n+                                          final RecordingLevel recordingLevel,\n+                                          final Sensor... parents) {\n+        synchronized (clientLevelSensors) {\n+            final String fullSensorName = CLIENT_LEVEL_GROUP + SENSOR_NAME_DELIMITER + sensorName;\n+            final Sensor sensor = metrics.getSensor(fullSensorName);", "originalCommit": "e395ba706e59f13af996c83177e5846878adb3e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE0ODMzNQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533148335", "bodyText": "I requested this. See my comment #9614 (comment)", "author": "cadonna", "createdAt": "2020-12-01T08:22:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MDUzNQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533570535", "bodyText": "I'm good either way (:", "author": "lct45", "createdAt": "2020-12-01T16:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzOTkyMg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533639922", "bodyText": "I am fine either way, too, but I prefer consistency... So should we rewrite the other method as a side cleanup?", "author": "mjsax", "createdAt": "2020-12-01T18:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0MTU0MA==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533641540", "bodyText": "I am fine with consistency and clean-up, but I would like to have the clean-up in a separate PR.", "author": "cadonna", "createdAt": "2020-12-01T18:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NjYwNQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r534256605", "bodyText": "I changed it back for consistency and will open up a fix PR to update both of them to the new syntax", "author": "lct45", "createdAt": "2020-12-02T15:28:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMzM1Nw==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533023357", "body": "Why did we change this from `andStubReturn(null)` to `andReturn(mock(KafkaMetric.class))`?", "bodyText": "Why did we change this from andStubReturn(null) to andReturn(mock(KafkaMetric.class))?", "bodyHTML": "<p dir=\"auto\">Why did we change this from <code>andStubReturn(null)</code> to <code>andReturn(mock(KafkaMetric.class))</code>?</p>", "author": "mjsax", "createdAt": "2020-12-01T02:00:40Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -629,16 +657,18 @@ private void setupRemoveSensorsTest(final Metrics metrics,\n     }\n \n     @Test\n-    public void shouldRemoveClientLevelMetrics() {\n+    public void shouldRemoveClientLevelMetricsAndSensors() {\n         final Metrics metrics = niceMock(Metrics.class);\n         final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, CLIENT_ID, VERSION, time);\n-        addSensorsOnAllLevels(metrics, streamsMetrics);\n+        final Capture<String> sensorKeys = addSensorsOnAllLevels(metrics, streamsMetrics);\n         resetToDefault(metrics);\n-        expect(metrics.removeMetric(metricName1)).andStubReturn(null);\n-        expect(metrics.removeMetric(metricName2)).andStubReturn(null);\n-        replay(metrics);\n \n-        streamsMetrics.removeAllClientLevelMetrics();\n+        metrics.removeSensor(sensorKeys.getValues().get(0));\n+        metrics.removeSensor(sensorKeys.getValues().get(1));\n+        expect(metrics.removeMetric(metricName1)).andReturn(mock(KafkaMetric.class));\n+        expect(metrics.removeMetric(metricName2)).andReturn(mock(KafkaMetric.class));", "originalCommit": "e395ba706e59f13af996c83177e5846878adb3e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NTYzOQ==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533585639", "bodyText": "Must've been an accidental change when trying to get the test to work. shouldRemoveStateStoreLevelSensors uses andReturn(mock(KafkaMetric.class)) so that's where it came from, but this test works with andStubReturn(null) so I changed it back to that", "author": "lct45", "createdAt": "2020-12-01T17:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMzM1Nw=="}], "type": "inlineReview"}, {"oid": "fc6cf529d9e4becb5871913a34711a37dd6916dc", "url": "https://github.com/apache/kafka/commit/fc6cf529d9e4becb5871913a34711a37dd6916dc", "message": "Fixes from Matthias's comments", "committedDate": "2020-12-01T17:17:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NjU4Mg==", "url": "https://github.com/apache/kafka/pull/9614#discussion_r533586582", "body": "This wasn't being used so I went ahead and took it out ", "bodyText": "This wasn't being used so I went ahead and took it out", "bodyHTML": "<p dir=\"auto\">This wasn't being used so I went ahead and took it out</p>", "author": "lct45", "createdAt": "2020-12-01T17:20:30Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java", "diffHunk": "@@ -619,8 +647,7 @@ public void shouldProvideCorrectStrings() {\n     }\n \n     private void setupRemoveSensorsTest(final Metrics metrics,\n-                                        final String level,\n-                                        final RecordingLevel recordingLevel) {", "originalCommit": "fc6cf529d9e4becb5871913a34711a37dd6916dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5df6eb31efe029519f633de1cded887306edb29", "url": "https://github.com/apache/kafka/commit/c5df6eb31efe029519f633de1cded887306edb29", "message": "updated consistency", "committedDate": "2020-12-02T15:27:37Z", "type": "commit"}]}