{"pr_number": 9368, "pr_title": "KAFKA-9274: Add timeout handling for state restore and StandbyTasks", "pr_author": "mjsax", "pr_createdAt": "2020-10-03T01:55:21Z", "pr_url": "https://github.com/apache/kafka/pull/9368", "timeline": [{"oid": "e9246df2bf829e8bee4180bdd7498c674c50c832", "url": "https://github.com/apache/kafka/commit/e9246df2bf829e8bee4180bdd7498c674c50c832", "message": "KAFKA-9274: Add timeout handling for state restore and StandbyTasks\n - part of KIP-572", "committedDate": "2020-10-14T01:37:44Z", "type": "commit"}, {"oid": "e9246df2bf829e8bee4180bdd7498c674c50c832", "url": "https://github.com/apache/kafka/commit/e9246df2bf829e8bee4180bdd7498c674c50c832", "message": "KAFKA-9274: Add timeout handling for state restore and StandbyTasks\n - part of KIP-572", "committedDate": "2020-10-14T01:37:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MTY5OQ==", "url": "https://github.com/apache/kafka/pull/9368#discussion_r504781699", "body": "It seems like we ought to just define `log` at the AbstractTask level and avoid having two almost identical `maybeInitTaskTimeoutOrThrow` method definitions.", "bodyText": "It seems like we ought to just define log at the AbstractTask level and avoid having two almost identical maybeInitTaskTimeoutOrThrow method definitions.", "bodyHTML": "<p dir=\"auto\">It seems like we ought to just define <code>log</code> at the AbstractTask level and avoid having two almost identical <code>maybeInitTaskTimeoutOrThrow</code> method definitions.</p>", "author": "vvcephei", "createdAt": "2020-10-14T15:42:11Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -147,9 +147,12 @@ public void update(final Set<TopicPartition> topicPartitions, final Map<String,\n         topology.updateSourceTopics(nodeToSourceTopics);\n     }\n \n+    /**\n+     * @throws TimeoutException if {@code currentWallClockMs > task-timeout-deadline}\n+     */\n     void maybeInitTaskTimeoutOrThrow(final long currentWallClockMs,\n-                                     final TimeoutException timeoutException,\n-                                     final Logger log) throws StreamsException {\n+                                     final Exception cause,\n+                                     final Logger log) {", "originalCommit": "e9246df2bf829e8bee4180bdd7498c674c50c832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MjM2NA==", "url": "https://github.com/apache/kafka/pull/9368#discussion_r504792364", "body": "```suggestion\r\n                        log.debug(String.format(\"Could not complete restoration for %s; will retry\", task.id()), timeoutException);\r\n```\r\n\r\nIt might be a good idea to add tests for the log messages so we can tell if they're actually properly formatted or not. Hopefully, the log4j upgrade makes it easier to detect these logging bugs.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    log.debug(\"Could not complete restoration for {} due to {}; will retry\", task.id(), timeoutException);\n          \n          \n            \n                                    log.debug(String.format(\"Could not complete restoration for %s; will retry\", task.id()), timeoutException);\n          \n      \n    \n    \n  \n\nIt might be a good idea to add tests for the log messages so we can tell if they're actually properly formatted or not. Hopefully, the log4j upgrade makes it easier to detect these logging bugs.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not complete restoration for <span class=\"x x-first x-last\">{} due to {}</span>; will retry<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(), timeoutException);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        log<span class=\"pl-k\">.</span>debug(<span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">format(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not complete restoration for <span class=\"x x-first x-last\">%s</span>; will retry<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(<span class=\"x x-first x-last\">)</span>), timeoutException);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">It might be a good idea to add tests for the log messages so we can tell if they're actually properly formatted or not. Hopefully, the log4j upgrade makes it easier to detect these logging bugs.</p>", "author": "vvcephei", "createdAt": "2020-10-14T15:56:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -482,8 +486,10 @@ boolean tryToCompleteRestoration() {\n                 if (restored.containsAll(task.changelogPartitions())) {\n                     try {\n                         task.completeRestoration();\n-                    } catch (final TimeoutException e) {\n-                        log.debug(\"Could not complete restoration for {} due to {}; will retry\", task.id(), e);\n+                        task.clearTaskTimeout();\n+                    } catch (final TimeoutException timeoutException) {\n+                        task.maybeInitTaskTimeoutOrThrow(now, timeoutException);\n+                        log.debug(\"Could not complete restoration for {} due to {}; will retry\", task.id(), timeoutException);", "originalCommit": "e9246df2bf829e8bee4180bdd7498c674c50c832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MjY1MQ==", "url": "https://github.com/apache/kafka/pull/9368#discussion_r504792651", "body": "```suggestion\r\n                log.debug(String.format(\"Could not initialize %s due to the following exception; will retry\", task.id()), retriableException);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.debug(\"Could not initialize {} due to the following exception; will retry\", task.id(), retriableException);\n          \n          \n            \n                            log.debug(String.format(\"Could not initialize %s due to the following exception; will retry\", task.id()), retriableException);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not initialize <span class=\"x x-first x-last\">{}</span> due to the following exception; will retry<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(), retriableException);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>debug(<span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">format(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not initialize <span class=\"x x-first x-last\">%s</span> due to the following exception; will retry<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(<span class=\"x x-first x-last\">)</span>), retriableException);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vvcephei", "createdAt": "2020-10-14T15:57:13Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -454,18 +454,22 @@ private void addNewTask(final Task task) {\n      * @throws StreamsException if the store's change log does not contain the partition\n      * @return {@code true} if all tasks are fully restored\n      */\n-    boolean tryToCompleteRestoration() {\n+    boolean tryToCompleteRestoration(final long now) {\n         boolean allRunning = true;\n \n         final List<Task> activeTasks = new LinkedList<>();\n         for (final Task task : tasks.values()) {\n             try {\n                 task.initializeIfNeeded();\n-            } catch (final LockException | TimeoutException e) {\n+                task.clearTaskTimeout();\n+            } catch (final LockException retriableException) {\n                 // it is possible that if there are multiple threads within the instance that one thread\n                 // trying to grab the task from the other, while the other has not released the lock since\n                 // it did not participate in the rebalance. In this case we can just retry in the next iteration\n-                log.debug(\"Could not initialize {} due to the following exception; will retry\", task.id(), e);\n+                log.debug(\"Could not initialize {} due to the following exception; will retry\", task.id(), retriableException);", "originalCommit": "e9246df2bf829e8bee4180bdd7498c674c50c832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6a30537a3e13f3885a8310ec7d250176ee5138bf", "url": "https://github.com/apache/kafka/commit/6a30537a3e13f3885a8310ec7d250176ee5138bf", "message": "Github comments", "committedDate": "2020-10-15T23:18:45Z", "type": "commit"}, {"oid": "4cf09b100409650258fa5db6c62d5d7cead397fb", "url": "https://github.com/apache/kafka/commit/4cf09b100409650258fa5db6c62d5d7cead397fb", "message": "Add `final` modifiers", "committedDate": "2020-10-15T23:24:30Z", "type": "commit"}, {"oid": "8af6ae506768e6563ba5504b5dc4bc8634b2eddf", "url": "https://github.com/apache/kafka/commit/8af6ae506768e6563ba5504b5dc4bc8634b2eddf", "message": "Fix compile errors", "committedDate": "2020-10-16T17:07:14Z", "type": "commit"}, {"oid": "6ff9abd682674971e8e04d8e867caa4e19d1d319", "url": "https://github.com/apache/kafka/commit/6ff9abd682674971e8e04d8e867caa4e19d1d319", "message": "Change logger setup", "committedDate": "2020-10-16T21:52:53Z", "type": "commit"}]}