{"pr_number": 8140, "pr_title": "HOTFIX: don't try to remove uninitialized changelogs from assignment & don't prematurely mark task closed", "pr_author": "ableegoldman", "pr_createdAt": "2020-02-20T02:57:14Z", "pr_url": "https://github.com/apache/kafka/pull/8140", "timeline": [{"oid": "24327a5a0656c24cc14a09de3309f6ac57bc72d4", "url": "https://github.com/apache/kafka/commit/24327a5a0656c24cc14a09de3309f6ac57bc72d4", "message": "try removing partitions first, log exception", "committedDate": "2020-02-19T23:15:25Z", "type": "commit"}, {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "url": "https://github.com/apache/kafka/commit/e110d7cd8aecceeaa950b78d33384d7f4f850b82", "message": "keep restore consumer's assignment in sync with StoreChangelogReader#changelogs for initialized tasks", "committedDate": "2020-02-20T02:31:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5NTcxNQ==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381695715", "body": "Technically it may be running or restoring here", "bodyText": "Technically it may be running or restoring here", "bodyHTML": "<p dir=\"auto\">Technically it may be running or restoring here</p>", "author": "ableegoldman", "createdAt": "2020-02-20T02:58:03Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -254,7 +254,7 @@ public void suspend() {\n                 partitionGroup.clear();\n \n                 transitionTo(State.SUSPENDED);\n-                log.info(\"Suspended running\");\n+                log.info(\"Suspended active\");", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5Njg0NQ==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381696845", "body": "This isn't a necessary part of the fix, but I feel it makes more sense to move this here: the restore consumer's can only make progress on tasks that have been initialized, which only happens in `taskManager.tryToCompleteRestoration`", "bodyText": "This isn't a necessary part of the fix, but I feel it makes more sense to move this here: the restore consumer's can only make progress on tasks that have been initialized, which only happens in taskManager.tryToCompleteRestoration", "bodyHTML": "<p dir=\"auto\">This isn't a necessary part of the fix, but I feel it makes more sense to move this here: the restore consumer's can only make progress on tasks that have been initialized, which only happens in <code>taskManager.tryToCompleteRestoration</code></p>", "author": "ableegoldman", "createdAt": "2020-02-20T03:00:17Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -837,6 +833,10 @@ void runOnce() {\n             }\n         }\n \n+        // we can always let changelog reader try restoring in order to initialize the changelogs;\n+        // if there's no active restoring or standby updating it would not try to fetch any data\n+        changelogReader.restore();", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4ODU3OA==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382188578", "bodyText": "I agree. Originally I put it in front intentionally since initializeIfNeeded is called at task creation not here, and we would only try to initialize the changelogs in restore and hence only check if the restoration can be completed.\nNow that we've delayed the initializeIfNeeded in tryToComplete we should reorder the restore call as well.", "author": "guozhangwang", "createdAt": "2020-02-20T18:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5Njg0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5NzM1OQ==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381697359", "body": "Also not necessary, but I feel it better suggests/reminds that it is taking some action here and not just checking a condition", "bodyText": "Also not necessary, but I feel it better suggests/reminds that it is taking some action here and not just checking a condition", "bodyHTML": "<p dir=\"auto\">Also not necessary, but I feel it better suggests/reminds that it is taking some action here and not just checking a condition</p>", "author": "ableegoldman", "createdAt": "2020-02-20T03:01:17Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -203,13 +203,14 @@ private void addNewTask(final Task task) {\n     }\n \n     /**\n+     * Tries to initialize any new or still-uninitialized tasks, then checks if they can/have completed restoration.\n+     *\n      * @throws IllegalStateException If store gets registered after initialized is already finished\n      * @throws StreamsException if the store's change log does not contain the partition\n      */\n-    boolean checkForCompletedRestoration() {\n+    boolean tryToCompleteRestoration() {", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgyNg==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382067826", "body": "This is one of Java's best-laid traps. You can't mix \"format args\" mode and \"record exception\" mode. The line as written will actually just not print the exception at all.\r\n```suggestion\r\n                    log.error(String.format(\"Failed to close task %s cleanly. Attempting to close remaining tasks before re-throwing:\", task.id()), e);\r\n```", "bodyText": "This is one of Java's best-laid traps. You can't mix \"format args\" mode and \"record exception\" mode. The line as written will actually just not print the exception at all.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing:\", task.id(), e);\n          \n          \n            \n                                log.error(String.format(\"Failed to close task %s cleanly. Attempting to close remaining tasks before re-throwing:\", task.id()), e);", "bodyHTML": "<p dir=\"auto\">This is one of Java's best-laid traps. You can't mix \"format args\" mode and \"record exception\" mode. The line as written will actually just not print the exception at all.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to close task <span class=\"x x-first x-last\">{}</span> cleanly. Attempting to close remaining tasks before re-throwing:<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(), e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>error(<span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">format(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to close task <span class=\"x x-first x-last\">%s</span> cleanly. Attempting to close remaining tasks before re-throwing:<span class=\"pl-pds\">\"</span></span>, task<span class=\"pl-k\">.</span>id(<span class=\"x x-first x-last\">)</span>), e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vvcephei", "createdAt": "2020-02-20T15:20:53Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -150,10 +150,10 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n             } else /* we previously owned this task, and we don't have it anymore, or it has changed active/standby state */ {\n                 final Set<TopicPartition> inputPartitions = task.inputPartitions();\n                 try {\n-                    task.closeClean();\n                     changelogReader.remove(task.changelogPartitions());\n+                    task.closeClean();\n                 } catch (final RuntimeException e) {\n-                    log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing.\", task.id());\n+                    log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing:\", task.id(), e);", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzMjY4MQ==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382232681", "bodyText": "Fooled me I guess", "author": "ableegoldman", "createdAt": "2020-02-20T20:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NTkzMw==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382185933", "body": "The reason I did not do this is that in `consumer`, even if a partition is paused, we would still try to fetch is fetching position in the `poll` call if it was not available. And that's why I have to defer this after we've found the starting position and initialize them with `seek` calls.\r\n\r\nSo I'm thinking maybe we would just remove the illegal-state check from the `remoreFromRestoreConsumer` call and just log it as a debug?", "bodyText": "The reason I did not do this is that in consumer, even if a partition is paused, we would still try to fetch is fetching position in the poll call if it was not available. And that's why I have to defer this after we've found the starting position and initialize them with seek calls.\nSo I'm thinking maybe we would just remove the illegal-state check from the remoreFromRestoreConsumer call and just log it as a debug?", "bodyHTML": "<p dir=\"auto\">The reason I did not do this is that in <code>consumer</code>, even if a partition is paused, we would still try to fetch is fetching position in the <code>poll</code> call if it was not available. And that's why I have to defer this after we've found the starting position and initialize them with <code>seek</code> calls.</p>\n<p dir=\"auto\">So I'm thinking maybe we would just remove the illegal-state check from the <code>remoreFromRestoreConsumer</code> call and just log it as a debug?</p>", "author": "guozhangwang", "createdAt": "2020-02-20T18:41:57Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -327,6 +331,9 @@ public void register(final TopicPartition partition, final ProcessorStateManager\n             throw new IllegalStateException(\"There is already a changelog registered for \" + partition +\n                 \", this should not happen: \" + changelogs);\n         }\n+\n+        addChangelogsToRestoreConsumer(Collections.singleton(partition));", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIzNDQzNQ==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382234435", "bodyText": "Ah, I didn't realize the consumer would do anything with paused partitions. I'm not sure we want to remove the verification entirely, but we can check any \"missing\" partitions against the changelogs map instead.", "author": "ableegoldman", "createdAt": "2020-02-20T20:16:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NTkzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4ODgzNg==", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382188836", "body": "Yup! I also found this bug and fixed in another PR, but great to see it confirmed in yours as well :)", "bodyText": "Yup! I also found this bug and fixed in another PR, but great to see it confirmed in yours as well :)", "bodyHTML": "<p dir=\"auto\">Yup! I also found this bug and fixed in another PR, but great to see it confirmed in yours as well :)</p>", "author": "guozhangwang", "createdAt": "2020-02-20T18:47:43Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -150,10 +150,10 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n             } else /* we previously owned this task, and we don't have it anymore, or it has changed active/standby state */ {\n                 final Set<TopicPartition> inputPartitions = task.inputPartitions();\n                 try {\n-                    task.closeClean();\n                     changelogReader.remove(task.changelogPartitions());\n+                    task.closeClean();", "originalCommit": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "566dcc15fae31f4521c7b556585de7b962464dec", "url": "https://github.com/apache/kafka/commit/566dcc15fae31f4521c7b556585de7b962464dec", "message": "Github suggestion: logging\n\nCo-Authored-By: John Roesler <vvcephei@users.noreply.github.com>", "committedDate": "2020-02-20T20:13:15Z", "type": "commit"}, {"oid": "3164fce49de499e640dad11ed3d56ba47ad14bb7", "url": "https://github.com/apache/kafka/commit/3164fce49de499e640dad11ed3d56ba47ad14bb7", "message": "dont assign uninitialized changelogs, dont try to remove them", "committedDate": "2020-02-20T20:31:40Z", "type": "commit"}]}