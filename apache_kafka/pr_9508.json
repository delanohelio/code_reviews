{"pr_number": 9508, "pr_title": "KAFKA-10648: Add Prefix Scan support to State Stores", "pr_author": "vamossagar12", "pr_createdAt": "2020-10-27T05:18:06Z", "pr_url": "https://github.com/apache/kafka/pull/9508", "timeline": [{"oid": "17be91a37214bf77430c65d9300a5120e4348df9", "url": "https://github.com/apache/kafka/commit/17be91a37214bf77430c65d9300a5120e4348df9", "message": "KAFKA-10648: Add Prefix Scan support to State Stores", "committedDate": "2021-01-20T12:27:29Z", "type": "commit"}, {"oid": "17be91a37214bf77430c65d9300a5120e4348df9", "url": "https://github.com/apache/kafka/commit/17be91a37214bf77430c65d9300a5120e4348df9", "message": "KAFKA-10648: Add Prefix Scan support to State Stores", "committedDate": "2021-01-20T12:27:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM5NDQ3Ng==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564394476", "body": "This method needs unit testing. Try to use a mock for the cache in the test.", "bodyText": "This method needs unit testing. Try to use a mock for the cache in the test.", "bodyHTML": "<p dir=\"auto\">This method needs unit testing. Try to use a mock for the cache in the test.</p>", "author": "cadonna", "createdAt": "2021-01-26T10:11:07Z", "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/CachingKeyValueStore.java", "diffHunk": "@@ -291,6 +292,16 @@ public void putAll(final List<KeyValue<Bytes, byte[]>> entries) {\n         return new MergedSortedCacheKeyValueBytesStoreIterator(cacheIterator, storeIterator, true);\n     }\n \n+    @Override\n+    public <PS extends Serializer<P>, P> KeyValueIterator<Bytes, byte[]> prefixScan(final P prefix, final PS prefixKeySerializer) {", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjIzNDAzNA==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r566234034", "bodyText": "Similar comment as below. Unit tests are in CachingInMemoryKeyValueStoreTest which already extends AbstractKeyValueStoreTest and creates an in memory cache store.", "author": "vamossagar12", "createdAt": "2021-01-28T16:31:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM5NDQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzQ3ODg3MQ==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r567478871", "bodyText": "Oh, I see. I missed those. Sorry! That is fine then, although I think unit tests with mocks would be better.", "author": "cadonna", "createdAt": "2021-01-31T20:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM5NDQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDE1NzcyNw==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r570157727", "bodyText": "Actually, I had created another ticket to streamline tests for CachingKVStore: https://issues.apache.org/jira/browse/KAFKA-10788. @rohitrmd  had volunteered to take this up.", "author": "vamossagar12", "createdAt": "2021-02-04T11:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM5NDQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwNTMwOA==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564405308", "body": "```suggestion\r\n        final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(hi.toString(), new StringSerializer());\r\n```\r\nIn such a way, you can reuse variable `hi` and `there`. Similar is true for my suggestions below.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(\"hi\", new StringSerializer());\n          \n          \n            \n                    final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(hi.toString(), new StringSerializer());\n          \n      \n    \n    \n  \n\nIn such a way, you can reuse variable hi and there. Similar is true for my suggestions below.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">KeyValueIterator&lt;<span class=\"pl-smi\">Bytes</span>, byte[]&gt;</span> keysWithPrefix <span class=\"pl-k\">=</span> store<span class=\"pl-k\">.</span>prefixScan(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">hi</span><span class=\"pl-pds x x-last\">\"</span></span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringSerializer</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">KeyValueIterator&lt;<span class=\"pl-smi\">Bytes</span>, byte[]&gt;</span> keysWithPrefix <span class=\"pl-k\">=</span> store<span class=\"pl-k\">.</span>prefixScan(<span class=\"x x-first\">hi</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toString()</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringSerializer</span>());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">In such a way, you can reuse variable <code>hi</code> and <code>there</code>. Similar is true for my suggestions below.</p>", "author": "cadonna", "createdAt": "2021-01-26T10:27:55Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java", "diffHunk": "@@ -196,6 +201,26 @@ public void shouldReturnValueOnGetWhenExists() {\n         assertThat(store.get(hello), equalTo(world));\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        store.put(hi, there);\n+        store.put(Bytes.increment(hi), world);\n+        final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(\"hi\", new StringSerializer());", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwNjI2OA==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564406268", "body": "```suggestion\r\n        final List<Bytes> keys = new ArrayList<>();\r\n        final List<Bytes> values = new ArrayList<>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final List<String> keys = new ArrayList<>();\n          \n          \n            \n                    final List<String> values = new ArrayList<>();\n          \n          \n            \n                    final List<Bytes> keys = new ArrayList<>();\n          \n          \n            \n                    final List<Bytes> values = new ArrayList<>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi x x-first x-last\">String</span>&gt;</span> keys <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi x x-first x-last\">String</span>&gt;</span> values <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi x x-first x-last\">Bytes</span>&gt;</span> keys <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi x x-first x-last\">Bytes</span>&gt;</span> values <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2021-01-26T10:29:29Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java", "diffHunk": "@@ -196,6 +201,26 @@ public void shouldReturnValueOnGetWhenExists() {\n         assertThat(store.get(hello), equalTo(world));\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        store.put(hi, there);\n+        store.put(Bytes.increment(hi), world);\n+        final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(\"hi\", new StringSerializer());\n+        final List<String> keys = new ArrayList<>();\n+        final List<String> values = new ArrayList<>();", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwNjUxMg==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564406512", "body": "```suggestion\r\n            keys.add(next.key);\r\n            values.add(Bytes.wrap(next.value));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        keys.add(next.key.toString());\n          \n          \n            \n                        values.add(new String(next.value));\n          \n          \n            \n                        keys.add(next.key);\n          \n          \n            \n                        values.add(Bytes.wrap(next.value));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            keys<span class=\"pl-k\">.</span>add(next<span class=\"pl-k\">.</span>key<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">toString()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            values<span class=\"pl-k\">.</span>add(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x x-last\">String</span>(next<span class=\"pl-k\">.</span>value));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            keys<span class=\"pl-k\">.</span>add(next<span class=\"pl-k\">.</span>key);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            values<span class=\"pl-k\">.</span>add(<span class=\"pl-smi x x-first\">Bytes</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">wrap</span>(next<span class=\"pl-k\">.</span>value));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2021-01-26T10:29:53Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java", "diffHunk": "@@ -196,6 +201,26 @@ public void shouldReturnValueOnGetWhenExists() {\n         assertThat(store.get(hello), equalTo(world));\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        store.put(hi, there);\n+        store.put(Bytes.increment(hi), world);\n+        final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(\"hi\", new StringSerializer());\n+        final List<String> keys = new ArrayList<>();\n+        final List<String> values = new ArrayList<>();\n+        int numberOfKeysReturned = 0;\n+\n+        while (keysWithPrefix.hasNext()) {\n+            final KeyValue<Bytes, byte[]> next = keysWithPrefix.next();\n+            keys.add(next.key.toString());\n+            values.add(new String(next.value));", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwNjg4Mw==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564406883", "body": "```suggestion\r\n        assertThat(keys, is(Collections.singletonList(hi)));\r\n        assertThat(values, is(Collections.singletonList(Bytes.wrap(there))));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(keys, is(Collections.singletonList(\"hi\")));\n          \n          \n            \n                    assertThat(values, is(Collections.singletonList(\"there\")));\n          \n          \n            \n                    assertThat(keys, is(Collections.singletonList(hi)));\n          \n          \n            \n                    assertThat(values, is(Collections.singletonList(Bytes.wrap(there))));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(keys, is(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>singletonList(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">hi</span><span class=\"pl-pds x x-last\">\"</span></span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(values, is(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>singletonList(<span class=\"pl-s\"><span class=\"pl-pds x x-first x-last\">\"</span>there<span class=\"pl-pds x x-first x-last\">\"</span></span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(keys, is(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>singletonList(<span class=\"x x-first x-last\">hi</span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(values, is(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>singletonList(<span class=\"pl-smi x x-first\">Bytes</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">wrap(</span>there<span class=\"x x-first x-last\">)</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2021-01-26T10:30:22Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java", "diffHunk": "@@ -196,6 +201,26 @@ public void shouldReturnValueOnGetWhenExists() {\n         assertThat(store.get(hello), equalTo(world));\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        store.put(hi, there);\n+        store.put(Bytes.increment(hi), world);\n+        final KeyValueIterator<Bytes, byte[]> keysWithPrefix = store.prefixScan(\"hi\", new StringSerializer());\n+        final List<String> keys = new ArrayList<>();\n+        final List<String> values = new ArrayList<>();\n+        int numberOfKeysReturned = 0;\n+\n+        while (keysWithPrefix.hasNext()) {\n+            final KeyValue<Bytes, byte[]> next = keysWithPrefix.next();\n+            keys.add(next.key.toString());\n+            values.add(new String(next.value));\n+            numberOfKeysReturned++;\n+        }\n+        assertThat(numberOfKeysReturned, is(1));\n+        assertThat(keys, is(Collections.singletonList(\"hi\")));\n+        assertThat(values, is(Collections.singletonList(\"there\")));", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwOTkzNw==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564409937", "body": "@vamossagar12 I can still not find the unit test for this method.", "bodyText": "@vamossagar12 I can still not find the unit test for this method.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vamossagar12/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vamossagar12\">@vamossagar12</a> I can still not find the unit test for this method.</p>", "author": "cadonna", "createdAt": "2021-01-26T10:35:35Z", "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/InMemoryKeyValueStore.java", "diffHunk": "@@ -103,6 +105,20 @@ public void putAll(final List<KeyValue<Bytes, byte[]>> entries) {\n         }\n     }\n \n+    @Override\n+    public <PS extends Serializer<P>, P> KeyValueIterator<Bytes, byte[]> prefixScan(final P prefix, final PS prefixKeySerializer) {", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjIzMzAzOQ==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r566233039", "bodyText": "For this, do you want me to add the test cases here?https://github.com/apache/kafka/blob/17be91a37214bf77430c65d9300a5120e4348df9/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryKeyValueStoreTest.java\nThere are tests in CachingInMemoryKeyValueStoreTest, which is where the tests for other methods like range etc have been added.", "author": "vamossagar12", "createdAt": "2021-01-28T16:30:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwOTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzQ3OTU0Mw==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r567479543", "bodyText": "I think those tests never call the prefixScan() on the underlying in-memory state store because all entries fit into the cache. You would need to add another test that flushes the cache before you call prefixScan(). I would prefer a test that directly tests the in-memory store without any cache in between.", "author": "cadonna", "createdAt": "2021-01-31T20:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwOTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDE1MzEyMg==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r570153122", "bodyText": "Here is the new ticket: https://issues.apache.org/jira/browse/KAFKA-12289 and the PR for the ticket:\n#10052", "author": "vamossagar12", "createdAt": "2021-02-04T11:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwOTkzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQxNTY4Mw==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564415683", "body": "nit:\r\n```suggestion\r\n        final KafkaMetric metric = metric(\"prefix-scan-rate\");\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final KafkaMetric metric = metrics.metric(new MetricName(\"prefix-scan-rate\", STORE_LEVEL_GROUP, \"\", tags));\n          \n          \n            \n                    final KafkaMetric metric = metric(\"prefix-scan-rate\");", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"449\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">KafkaMetric</span> metric <span class=\"pl-k\">=</span> <span class=\"x x-first\">metrics</span><span class=\"pl-k x x-last\">.</span>metric(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">MetricName</span><span class=\"x x-last\">(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>prefix-scan-rate<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\">, </span><span class=\"pl-c1 x\">STORE_LEVEL_GROUP</span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, tags)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"449\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">KafkaMetric</span> metric <span class=\"pl-k\">=</span> metric(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>prefix-scan-rate<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2021-01-26T10:44:39Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java", "diffHunk": "@@ -434,6 +435,22 @@ public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n         verify(inner);\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        final StringSerializer stringSerializer = new StringSerializer();\n+        expect(inner.prefixScan(KEY, stringSerializer))\n+            .andReturn(new KeyValueIteratorStub<>(Collections.singletonList(BYTE_KEY_VALUE_PAIR).iterator()));\n+        init();\n+\n+        final KeyValueIterator<String, String> iterator = metered.prefixScan(KEY, stringSerializer);\n+        assertThat(iterator.next().value, equalTo(VALUE));\n+        iterator.close();\n+\n+        final KafkaMetric metric = metrics.metric(new MetricName(\"prefix-scan-rate\", STORE_LEVEL_GROUP, \"\", tags));", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQyMTkzNg==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r564421936", "body": "nit:\r\n```suggestion\r\n        final Sensor sensor = StateStoreMetrics.prefixScanSensor(TASK_ID, STORE_TYPE, STORE_NAME, streamsMetrics);\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Sensor sensor =\n          \n          \n            \n                            StateStoreMetrics.prefixScanSensor(TASK_ID, STORE_TYPE, STORE_NAME, streamsMetrics);\n          \n          \n            \n                    final Sensor sensor = StateStoreMetrics.prefixScanSensor(TASK_ID, STORE_TYPE, STORE_NAME, streamsMetrics);", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> sensor <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">StateStoreMetrics</span><span class=\"pl-k\">.</span>prefixScanSensor(<span class=\"pl-c1\">TASK_ID</span>, <span class=\"pl-c1\">STORE_TYPE</span>, <span class=\"pl-c1\">STORE_NAME</span>, streamsMetrics);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Sensor</span> sensor <span class=\"pl-k\">=</span> <span class=\"pl-smi\">StateStoreMetrics</span><span class=\"pl-k\">.</span>prefixScanSensor(<span class=\"pl-c1\">TASK_ID</span>, <span class=\"pl-c1\">STORE_TYPE</span>, <span class=\"pl-c1\">STORE_NAME</span>, streamsMetrics);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cadonna", "createdAt": "2021-01-26T10:55:02Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/StateStoreMetricsTest.java", "diffHunk": "@@ -204,6 +204,39 @@ public void shouldGetRangeSensor() {\n         );\n     }\n \n+    @Test\n+    public void shouldGetPrefixScanSensor() {\n+        final String metricName = \"prefix-scan\";\n+        final String descriptionOfRate = \"The average number of calls to prefix-scan per second\";\n+        final String descriptionOfAvg = \"The average latency of calls to prefix-scan\";\n+        final String descriptionOfMax = \"The maximum latency of calls to prefix-scan\";\n+        expect(streamsMetrics.storeLevelSensor(TASK_ID, STORE_NAME, metricName, RecordingLevel.DEBUG))\n+            .andReturn(expectedSensor);\n+        expect(streamsMetrics.storeLevelTagMap(TASK_ID, STORE_TYPE, STORE_NAME)).andReturn(storeTagMap);\n+        StreamsMetricsImpl.addInvocationRateToSensor(\n+            expectedSensor,\n+            STORE_LEVEL_GROUP,\n+            storeTagMap,\n+            metricName,\n+            descriptionOfRate\n+        );\n+        StreamsMetricsImpl.addAvgAndMaxToSensor(\n+            expectedSensor,\n+            STORE_LEVEL_GROUP,\n+            storeTagMap,\n+            latencyMetricName(metricName),\n+            descriptionOfAvg,\n+            descriptionOfMax\n+        );\n+        replay(StreamsMetricsImpl.class, streamsMetrics);\n+\n+        final Sensor sensor =\n+                StateStoreMetrics.prefixScanSensor(TASK_ID, STORE_TYPE, STORE_NAME, streamsMetrics);", "originalCommit": "17be91a37214bf77430c65d9300a5120e4348df9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a41206daa0ffbc7516059d29a7ddda109f64b5e", "url": "https://github.com/apache/kafka/commit/4a41206daa0ffbc7516059d29a7ddda109f64b5e", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:16:52Z", "type": "commit"}, {"oid": "33be9113c6225063a1af489c5eca62f7645250ab", "url": "https://github.com/apache/kafka/commit/33be9113c6225063a1af489c5eca62f7645250ab", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:17:12Z", "type": "commit"}, {"oid": "25980a0b3e6fdedf2fe707f78591dd5c9ba840c9", "url": "https://github.com/apache/kafka/commit/25980a0b3e6fdedf2fe707f78591dd5c9ba840c9", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:17:21Z", "type": "commit"}, {"oid": "a2ea51336e4ea2010f1d93dd87d4b1526281cadb", "url": "https://github.com/apache/kafka/commit/a2ea51336e4ea2010f1d93dd87d4b1526281cadb", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:17:32Z", "type": "commit"}, {"oid": "dddad17ad5102e937150bd7115c215b92807e734", "url": "https://github.com/apache/kafka/commit/dddad17ad5102e937150bd7115c215b92807e734", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:17:49Z", "type": "commit"}, {"oid": "d2479a41c4d90e44c7dacb8028368cfa4a846cbb", "url": "https://github.com/apache/kafka/commit/d2479a41c4d90e44c7dacb8028368cfa4a846cbb", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/StateStoreMetricsTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-01-28T16:18:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUwODA3OQ==", "url": "https://github.com/apache/kafka/pull/9508#discussion_r568508079", "body": "To get rid of the test failure, you need to change this:\r\n\r\n```suggestion\r\n        final KafkaMetric metric = metrics.metric(new MetricName(\"prefix-scan-rate\", STORE_LEVEL_GROUP, \"\", tags));\r\n```\r\n\r\nSorry, the failure of the test is my bad. I missed the issue with the different metrics versions when I requested to change this in a previous review.", "bodyText": "To get rid of the test failure, you need to change this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final KafkaMetric metric = metric(\"prefix-scan-rate\");\n          \n          \n            \n                    final KafkaMetric metric = metrics.metric(new MetricName(\"prefix-scan-rate\", STORE_LEVEL_GROUP, \"\", tags));\n          \n      \n    \n    \n  \n\nSorry, the failure of the test is my bad. I missed the issue with the different metrics versions when I requested to change this in a previous review.", "bodyHTML": "<p dir=\"auto\">To get rid of the test failure, you need to change this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">KafkaMetric</span> metric <span class=\"pl-k\">=</span> metric(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>prefix-scan-rate<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">KafkaMetric</span> metric <span class=\"pl-k\">=</span> <span class=\"x x-first\">metrics</span><span class=\"pl-k x x-last\">.</span>metric(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">MetricName</span><span class=\"x x-last\">(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>prefix-scan-rate<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\">, </span><span class=\"pl-c1 x\">STORE_LEVEL_GROUP</span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, tags)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Sorry, the failure of the test is my bad. I missed the issue with the different metrics versions when I requested to change this in a previous review.</p>", "author": "cadonna", "createdAt": "2021-02-02T10:55:13Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java", "diffHunk": "@@ -434,6 +435,22 @@ public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n         verify(inner);\n     }\n \n+    @Test\n+    public void shouldGetRecordsWithPrefixKey() {\n+        final StringSerializer stringSerializer = new StringSerializer();\n+        expect(inner.prefixScan(KEY, stringSerializer))\n+            .andReturn(new KeyValueIteratorStub<>(Collections.singletonList(BYTE_KEY_VALUE_PAIR).iterator()));\n+        init();\n+\n+        final KeyValueIterator<String, String> iterator = metered.prefixScan(KEY, stringSerializer);\n+        assertThat(iterator.next().value, equalTo(VALUE));\n+        iterator.close();\n+\n+        final KafkaMetric metric = metric(\"prefix-scan-rate\");", "originalCommit": "d2479a41c4d90e44c7dacb8028368cfa4a846cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8eca3c9c2852172896001178f8e7a115fd392aeb", "url": "https://github.com/apache/kafka/commit/8eca3c9c2852172896001178f8e7a115fd392aeb", "message": "Update streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2021-02-03T10:49:01Z", "type": "commit"}]}