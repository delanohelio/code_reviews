{"pr_number": 8626, "pr_title": "KAFKA-9921: explicit handling of null values with retainDuplicates", "pr_author": "ableegoldman", "pr_createdAt": "2020-05-06T19:52:03Z", "pr_url": "https://github.com/apache/kafka/pull/8626", "timeline": [{"oid": "c98525450cb40cd062391d1f12077f5d5ce7a3be", "url": "https://github.com/apache/kafka/commit/c98525450cb40cd062391d1f12077f5d5ce7a3be", "message": "add missing test, clarify nulls in jvadocs", "committedDate": "2020-05-06T19:37:34Z", "type": "commit"}, {"oid": "0c223e0faaeaefdc1f361311b41e6dd4b5a3b8f0", "url": "https://github.com/apache/kafka/commit/0c223e0faaeaefdc1f361311b41e6dd4b5a3b8f0", "message": "skip delete with duplicates", "committedDate": "2020-05-06T19:48:24Z", "type": "commit"}, {"oid": "bf73d40632d232592b972653803a679386748307", "url": "https://github.com/apache/kafka/commit/bf73d40632d232592b972653803a679386748307", "message": "add to WindowStore#put docs", "committedDate": "2020-05-08T20:05:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2MzA1OA==", "url": "https://github.com/apache/kafka/pull/8626#discussion_r422363058", "body": "I would use the 'interpreted' instead of 'treated' to be more consistent with the rest of the javadoc (at least in this file). The behavior is not really due to an optimization and that's not really the point IMO. Also, 'retain duplicates' in the more common term instead of 'allow duplicates'. I would rephrase it to something like this:\r\n```suggestion\r\n     * If serialized value bytes are null it is treated as delete. Note that deletes will be\r\n     * ignored in the case of an underlying store that retains duplicates.\r\n```", "bodyText": "I would use the 'interpreted' instead of 'treated' to be more consistent with the rest of the javadoc (at least in this file). The behavior is not really due to an optimization and that's not really the point IMO. Also, 'retain duplicates' in the more common term instead of 'allow duplicates'. I would rephrase it to something like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * If serialized value bytes are null it is treated as delete. Note that as an optimization, deletes will be\n          \n          \n            \n                 * skipped in the case of an underlying store that allows duplicates.\n          \n          \n            \n                 * If serialized value bytes are null it is treated as delete. Note that deletes will be\n          \n          \n            \n                 * ignored in the case of an underlying store that retains duplicates.", "bodyHTML": "<p dir=\"auto\">I would use the 'interpreted' instead of 'treated' to be more consistent with the rest of the javadoc (at least in this file). The behavior is not really due to an optimization and that's not really the point IMO. Also, 'retain duplicates' in the more common term instead of 'allow duplicates'. I would rephrase it to something like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">If</span> serialized value bytes are <span class=\"pl-c1\">null</span> it is treated as delete. <span class=\"pl-smi\">Note</span> that <span class=\"x x-first x-last\">as an optimization, </span>deletes will be</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">skipped</span> in the <span class=\"pl-k\">case</span> of an underlying store that <span class=\"x x-first x-last\">allows</span> duplicates.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">If</span> serialized value bytes are <span class=\"pl-c1\">null</span> it is treated as delete. <span class=\"pl-smi\">Note</span> that deletes will be</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">ignored</span> in the <span class=\"pl-k\">case</span> of an underlying store that <span class=\"x x-first x-last\">retains</span> duplicates.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "GeorgiPetkov", "createdAt": "2020-05-08T20:40:59Z", "path": "streams/src/main/java/org/apache/kafka/streams/state/WindowStore.java", "diffHunk": "@@ -57,6 +57,10 @@\n \n     /**\n      * Put a key-value pair into the window with given window start timestamp\n+     * <p>\n+     * If serialized value bytes are null it is treated as delete. Note that as an optimization, deletes will be\n+     * skipped in the case of an underlying store that allows duplicates.", "originalCommit": "bf73d40632d232592b972653803a679386748307", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2OTMyNg==", "url": "https://github.com/apache/kafka/pull/8626#discussion_r422369326", "bodyText": "lol, I forgot to apply my own suggestion to use 'interpreted', good catch.", "author": "GeorgiPetkov", "createdAt": "2020-05-08T20:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2MzA1OA=="}], "type": "inlineReview"}, {"oid": "d565d18e3f06f1f4665c273ad7938e9aed4d93dd", "url": "https://github.com/apache/kafka/commit/d565d18e3f06f1f4665c273ad7938e9aed4d93dd", "message": "CR suggestion\n\nCo-authored-by: GeorgiPetkov <gp000077@gmail.com>", "committedDate": "2020-05-08T20:46:46Z", "type": "commit"}, {"oid": "5fbe78afd19250fc5dc1d476967ced6ec3c687d7", "url": "https://github.com/apache/kafka/commit/5fbe78afd19250fc5dc1d476967ced6ec3c687d7", "message": "use ineterpreted", "committedDate": "2020-05-08T20:51:41Z", "type": "commit"}]}