{"pr_number": 9075, "pr_title": "KAFKA-10306: GlobalThread should fail on InvalidOffsetException", "pr_author": "mjsax", "pr_createdAt": "2020-07-24T21:37:01Z", "pr_url": "https://github.com/apache/kafka/pull/9075", "timeline": [{"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "url": "https://github.com/apache/kafka/commit/edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "message": "KAFKA-10306: GlobalThread should fail on InvalidOffsetException", "committedDate": "2020-07-24T21:34:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDY2NA==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460300664", "body": "This is the actual bug: we swallow the exception. However, because we don't do any \"seek\", we just hit the same exception in `poll()` over and over and never recover but loop forever.", "bodyText": "This is the actual bug: we swallow the exception. However, because we don't do any \"seek\", we just hit the same exception in poll() over and over and never recover but loop forever.", "bodyHTML": "<p dir=\"auto\">This is the actual bug: we swallow the exception. However, because we don't do any \"seek\", we just hit the same exception in <code>poll()</code> over and over and never recover but loop forever.</p>", "author": "mjsax", "createdAt": "2020-07-24T21:42:11Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "diffHunk": "@@ -291,27 +290,17 @@ private void restoreState(final StateRestoreCallback stateRestoreCallback,\n             long restoreCount = 0L;\n \n             while (offset < highWatermark) {\n-                try {\n-                    final ConsumerRecords<byte[], byte[]> records = globalConsumer.poll(pollTime);\n-                    final List<ConsumerRecord<byte[], byte[]>> restoreRecords = new ArrayList<>();\n-                    for (final ConsumerRecord<byte[], byte[]> record : records.records(topicPartition)) {\n-                        if (record.key() != null) {\n-                            restoreRecords.add(recordConverter.convert(record));\n-                        }\n+                final ConsumerRecords<byte[], byte[]> records = globalConsumer.poll(pollTime);\n+                final List<ConsumerRecord<byte[], byte[]>> restoreRecords = new ArrayList<>();\n+                for (final ConsumerRecord<byte[], byte[]> record : records.records(topicPartition)) {\n+                    if (record.key() != null) {\n+                        restoreRecords.add(recordConverter.convert(record));\n                     }\n-                    offset = globalConsumer.position(topicPartition);\n-                    stateRestoreAdapter.restoreBatch(restoreRecords);\n-                    stateRestoreListener.onBatchRestored(topicPartition, storeName, offset, restoreRecords.size());\n-                    restoreCount += restoreRecords.size();\n-                } catch (final InvalidOffsetException recoverableException) {", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjIyOA==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460302228", "body": "We could also not wipe out the store and let the user do it manually. A manual cleanup is actually required nowadays, thus, it's actually a small side \"improvement\".\r\n\r\nNote that we wipe out the whole global task dir here -- in contrast, users could do a manual per-store wipe out... But as we do the same coarse grained wipe out for all tasks and we have already a ticket for \"per store cleanup\" I though it would be ok for now.\r\n\r\nLet me know what you think.", "bodyText": "We could also not wipe out the store and let the user do it manually. A manual cleanup is actually required nowadays, thus, it's actually a small side \"improvement\".\nNote that we wipe out the whole global task dir here -- in contrast, users could do a manual per-store wipe out... But as we do the same coarse grained wipe out for all tasks and we have already a ticket for \"per store cleanup\" I though it would be ok for now.\nLet me know what you think.", "bodyHTML": "<p dir=\"auto\">We could also not wipe out the store and let the user do it manually. A manual cleanup is actually required nowadays, thus, it's actually a small side \"improvement\".</p>\n<p dir=\"auto\">Note that we wipe out the whole global task dir here -- in contrast, users could do a manual per-store wipe out... But as we do the same coarse grained wipe out for all tasks and we have already a ticket for \"per store cleanup\" I though it would be ok for now.</p>\n<p dir=\"auto\">Let me know what you think.</p>", "author": "mjsax", "createdAt": "2020-07-24T21:47:06Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateMaintainer.java", "diffHunk": "@@ -31,7 +31,7 @@\n \n     void flushState();\n \n-    void close() throws IOException;\n+    void close(final boolean wipeStateStore) throws IOException;", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNjU4Ng==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460306586", "bodyText": "Thanks @mjsax , this sounds perfect to me.", "author": "vvcephei", "createdAt": "2020-07-24T22:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjIyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjU3Ng==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460302576", "body": "We just let the original exception bubble up, to be able to wipe out the store. -- This is also just a side \"improvement\"; we could also just die and let users cleanup the state directory manually. However, it seems better to wipe it out directly.", "bodyText": "We just let the original exception bubble up, to be able to wipe out the store. -- This is also just a side \"improvement\"; we could also just die and let users cleanup the state directory manually. However, it seems better to wipe it out directly.", "bodyHTML": "<p dir=\"auto\">We just let the original exception bubble up, to be able to wipe out the store. -- This is also just a side \"improvement\"; we could also just die and let users cleanup the state directory manually. However, it seems better to wipe it out directly.</p>", "author": "mjsax", "createdAt": "2020-07-24T21:48:18Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -234,24 +234,18 @@ void initialize() {\n         }\n \n         void pollAndUpdate() {\n-            try {\n-                final ConsumerRecords<byte[], byte[]> received = globalConsumer.poll(pollTime);\n-                for (final ConsumerRecord<byte[], byte[]> record : received) {\n-                    stateMaintainer.update(record);\n-                }\n-                final long now = time.milliseconds();\n-                if (now >= lastFlush + flushInterval) {\n-                    stateMaintainer.flushState();\n-                    lastFlush = now;\n-                }\n-            } catch (final InvalidOffsetException recoverableException) {", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMzM0Mg==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460303342", "body": "This test was broken: it throw the `InvalidOffsetException` only once and thus the second `poll()` succeeds -- however, this is not how a real consumer behalves. ", "bodyText": "This test was broken: it throw the InvalidOffsetException only once and thus the second poll() succeeds -- however, this is not how a real consumer behalves.", "bodyHTML": "<p dir=\"auto\">This test was broken: it throw the <code>InvalidOffsetException</code> only once and thus the second <code>poll()</code> succeeds -- however, this is not how a real consumer behalves.</p>", "author": "mjsax", "createdAt": "2020-07-24T21:50:43Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java", "diffHunk": "@@ -323,21 +322,6 @@ public void shouldRestoreRecordsUpToHighwatermark() {\n         assertEquals(2, stateRestoreCallback.restored.size());\n     }\n \n-    @Test\n-    public void shouldRecoverFromInvalidOffsetExceptionAndRestoreRecords() {", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMzQ5MQ==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460303491", "body": "Just a little side cleanup :) ", "bodyText": "Just a little side cleanup :)", "bodyHTML": "<p dir=\"auto\">Just a little side cleanup :)</p>", "author": "mjsax", "createdAt": "2020-07-24T21:51:11Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStreamThreadTest.java", "diffHunk": "@@ -128,10 +130,9 @@ public void shouldThrowStreamsExceptionOnStartupIfThereIsAStreamsException() {\n         assertFalse(globalStreamThread.stillRunning());\n     }\n \n-    @SuppressWarnings(\"unchecked\")", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNzQ3OQ==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460307479", "body": "```suggestion\r\n                log.error(\"Failed to delete global task directory after detecting corruption.\", e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.error(\"Failed to wiping state stores for global task.\", e);\n          \n          \n            \n                            log.error(\"Failed to delete global task directory after detecting corruption.\", e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to <span class=\"x x-first x-last\">wiping state stores for global task</span>.<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to <span class=\"x x-first x-last\">delete global task directory after detecting corruption</span>.<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vvcephei", "createdAt": "2020-07-24T22:04:26Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java", "diffHunk": "@@ -114,8 +118,16 @@ public void flushState() {\n         stateMgr.checkpoint(offsets);\n     }\n \n-    public void close() throws IOException {\n+    public void close(final boolean wipeStateStore) throws IOException {\n         stateMgr.close();\n+        if (wipeStateStore) {\n+            try {\n+                log.error(\"Wiping state stores for global task.\");\n+                Utils.delete(stateMgr.baseDir());\n+            } catch (final IOException e) {\n+                log.error(\"Failed to wiping state stores for global task.\", e);", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNzg5Nw==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460307897", "body": "This doesn't seem to be an error. Maybe info would be better? Also, I think \"wipe state stores\" might be confusing for a user looking at the log messages with no context. \"Deleting the task directory\" seems to be a more context-free statement of what we're doing.\r\n\r\n```suggestion\r\n                log.info(\"Deleting global task directory after detecting corruption.\");\r\n```", "bodyText": "This doesn't seem to be an error. Maybe info would be better? Also, I think \"wipe state stores\" might be confusing for a user looking at the log messages with no context. \"Deleting the task directory\" seems to be a more context-free statement of what we're doing.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.error(\"Wiping state stores for global task.\");\n          \n          \n            \n                            log.info(\"Deleting global task directory after detecting corruption.\");", "bodyHTML": "<p dir=\"auto\">This doesn't seem to be an error. Maybe info would be better? Also, I think \"wipe state stores\" might be confusing for a user looking at the log messages with no context. \"Deleting the task directory\" seems to be a more context-free statement of what we're doing.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span><span class=\"x x-first\">error(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">Wiping state stores for global task</span>.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span><span class=\"x x-first\">info(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">Deleting global task directory after detecting corruption</span>.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vvcephei", "createdAt": "2020-07-24T22:05:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java", "diffHunk": "@@ -114,8 +118,16 @@ public void flushState() {\n         stateMgr.checkpoint(offsets);\n     }\n \n-    public void close() throws IOException {\n+    public void close(final boolean wipeStateStore) throws IOException {\n         stateMgr.close();\n+        if (wipeStateStore) {\n+            try {\n+                log.error(\"Wiping state stores for global task.\");", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwODg2Mw==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460308863", "body": "```suggestion\r\n                \"Updating global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",\r\n```\r\n\r\nJust a thought to indicate why just restarting would recover anything.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Updating global state failed. You can restart KafkaStreams to recover from this error.\",\n          \n          \n            \n                            \"Updating global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",\n          \n      \n    \n    \n  \n\nJust a thought to indicate why just restarting would recover anything.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Updating global state failed. You can restart KafkaStreams to recover from this error.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Updating global state failed<span class=\"x x-first x-last\"> due to inconsistent local state. Will attempt to clean up the local state</span>. You can restart KafkaStreams to recover from this error.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Just a thought to indicate why just restarting would recover anything.</p>", "author": "vvcephei", "createdAt": "2020-07-24T22:09:27Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -284,10 +278,21 @@ public void run() {\n         }\n         setState(State.RUNNING);\n \n+        boolean wipeStateStore = false;\n         try {\n             while (stillRunning()) {\n                 stateConsumer.pollAndUpdate();\n             }\n+        } catch (final InvalidOffsetException recoverableException) {\n+            wipeStateStore = true;\n+            log.error(\n+                \"Updating global state failed. You can restart KafkaStreams to recover from this error.\",", "originalCommit": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "267b08168823116450e74f350d14ed1c1c4ec941", "url": "https://github.com/apache/kafka/commit/267b08168823116450e74f350d14ed1c1c4ec941", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>", "committedDate": "2020-07-24T22:33:42Z", "type": "commit"}, {"oid": "7a3eda44881452b019dfa2b4331a4f97deac8e03", "url": "https://github.com/apache/kafka/commit/7a3eda44881452b019dfa2b4331a4f97deac8e03", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>", "committedDate": "2020-07-24T22:33:56Z", "type": "commit"}, {"oid": "671958997493fe96fa07515ed023fabba3f4ce9c", "url": "https://github.com/apache/kafka/commit/671958997493fe96fa07515ed023fabba3f4ce9c", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>", "committedDate": "2020-07-24T22:34:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxNA==", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460315914", "body": "```suggestion\r\n                    \"Bootstrapping global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Bootstrapping global state failed. You can restart KafkaStreams to recover from this error.\",\n          \n          \n            \n                                \"Bootstrapping global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bootstrapping global state failed. You can restart KafkaStreams to recover from this error.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bootstrapping global state failed<span class=\"x x-first x-last\"> due to inconsistent local state. Will attempt to clean up the local state</span>. You can restart KafkaStreams to recover from this error.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mjsax", "createdAt": "2020-07-24T22:34:38Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -331,17 +336,36 @@ private StateConsumer initialize() {\n                 logContext,\n                 globalConsumer,\n                 new GlobalStateUpdateTask(\n+                    logContext,\n                     topology,\n                     globalProcessorContext,\n                     stateMgr,\n-                    config.defaultDeserializationExceptionHandler(),\n-                    logContext\n+                    config.defaultDeserializationExceptionHandler()\n                 ),\n                 time,\n                 Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),\n                 config.getLong(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG)\n             );\n-            stateConsumer.initialize();\n+\n+            try {\n+                stateConsumer.initialize();\n+            } catch (final InvalidOffsetException recoverableException) {\n+                log.error(\n+                    \"Bootstrapping global state failed. You can restart KafkaStreams to recover from this error.\",", "originalCommit": "671958997493fe96fa07515ed023fabba3f4ce9c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a2492620431421f5fdb702dea0046e23e575a30", "url": "https://github.com/apache/kafka/commit/3a2492620431421f5fdb702dea0046e23e575a30", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "committedDate": "2020-07-24T22:34:52Z", "type": "commit"}]}