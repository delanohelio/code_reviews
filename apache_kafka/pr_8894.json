{"pr_number": 8894, "pr_title": "KAFKA-9509: Increase timeout when consuming records to fix flaky test in MM2", "pr_author": "showuon", "pr_createdAt": "2020-06-18T08:54:51Z", "pr_url": "https://github.com/apache/kafka/pull/8894", "timeline": [{"oid": "8a14b989dd32a9602e0b6703e348f9c413fb0b67", "url": "https://github.com/apache/kafka/commit/8a14b989dd32a9602e0b6703e348f9c413fb0b67", "message": "KAFKA-9509: add retries for mirrorClient consume records to fix flaky test", "committedDate": "2020-06-18T09:02:01Z", "type": "commit"}, {"oid": "8a14b989dd32a9602e0b6703e348f9c413fb0b67", "url": "https://github.com/apache/kafka/commit/8a14b989dd32a9602e0b6703e348f9c413fb0b67", "message": "KAFKA-9509: add retries for mirrorClient consume records to fix flaky test", "committedDate": "2020-06-18T09:02:01Z", "type": "forcePushed"}, {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b", "url": "https://github.com/apache/kafka/commit/1559549e83adae1c4f1f5d362b0c176a694fea4b", "message": "KAFKA-9509: refactor", "committedDate": "2020-06-18T09:36:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMzYxNA==", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442313614", "body": "fwiw this doesn't adhere to kafka style guide (looks like Kafka Streams to me)", "bodyText": "fwiw this doesn't adhere to kafka style guide (looks like Kafka Streams to me)", "bodyHTML": "<p dir=\"auto\">fwiw this doesn't adhere to kafka style guide (looks like Kafka Streams to me)</p>", "author": "ryannedolan", "createdAt": "2020-06-18T15:28:53Z", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,", "originalCommit": "1559549e83adae1c4f1f5d362b0c176a694fea4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNDY5MQ==", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442314691", "body": "these are really strange side-effects to have in an assert statement. I see what you are trying to do, but this is probably not the way to do it.", "bodyText": "these are really strange side-effects to have in an assert statement. I see what you are trying to do, but this is probably not the way to do it.", "bodyHTML": "<p dir=\"auto\">these are really strange side-effects to have in an assert statement. I see what you are trying to do, but this is probably not the way to do it.</p>", "author": "ryannedolan", "createdAt": "2020-06-18T15:30:30Z", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,\n+                                                final int numRecordsProduces,\n+                                                final int timeout,\n+                                                final ClusterType clusterType,\n+                                                final String... topics) throws InterruptedException {\n+        int retries = 3;\n+        while (retries-- > 0) {\n+            try {\n+                int actualNum = clusterType == ClusterType.PRIMARY ?\n+                        primary.kafka().consume(numRecordsProduces, timeout, topics).count() :", "originalCommit": "1559549e83adae1c4f1f5d362b0c176a694fea4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NTcyOA==", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442445728", "body": "I'd agree with @ryannedolan here. We could use the `waitForCondition` in `TestUtils.java` instead to wait for the condition necessary instead. More details on that is here: https://github.com/apache/kafka/blob/d8cc6fe8e36329c647736773d9d66de89c447409/clients/src/test/java/org/apache/kafka/test/TestUtils.java#L370-L371", "bodyText": "I'd agree with @ryannedolan here. We could use the waitForCondition in TestUtils.java instead to wait for the condition necessary instead. More details on that is here: \n  \n    \n      kafka/clients/src/test/java/org/apache/kafka/test/TestUtils.java\n    \n    \n        Lines 370 to 371\n      in\n      d8cc6fe\n    \n    \n    \n    \n\n        \n          \n           public static void waitForCondition(final TestCondition testCondition, final String conditionDetails) throws InterruptedException { \n        \n\n        \n          \n               waitForCondition(testCondition, DEFAULT_MAX_WAIT_MS, () -> conditionDetails);", "bodyHTML": "<p dir=\"auto\">I'd agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ryannedolan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ryannedolan\">@ryannedolan</a> here. We could use the <code>waitForCondition</code> in <code>TestUtils.java</code> instead to wait for the condition necessary instead. More details on that is here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/apache/kafka/blob/d8cc6fe8e36329c647736773d9d66de89c447409/clients/src/test/java/org/apache/kafka/test/TestUtils.java#L370-L371\">kafka/clients/src/test/java/org/apache/kafka/test/TestUtils.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 370 to 371\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/apache/kafka/commit/d8cc6fe8e36329c647736773d9d66de89c447409\">d8cc6fe</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L370\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"370\"></td>\n          <td id=\"LC370\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> waitForCondition(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">TestCondition</span> testCondition, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> conditionDetails) throws <span class=\"pl-smi\">InterruptedException</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L371\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"371\"></td>\n          <td id=\"LC371\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     waitForCondition(testCondition, <span class=\"pl-c1\">DEFAULT_MAX_WAIT_MS</span>, () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> conditionDetails); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "skaundinya15", "createdAt": "2020-06-18T19:14:00Z", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,\n+                                                final int numRecordsProduces,\n+                                                final int timeout,\n+                                                final ClusterType clusterType,\n+                                                final String... topics) throws InterruptedException {\n+        int retries = 3;\n+        while (retries-- > 0) {\n+            try {\n+                int actualNum = clusterType == ClusterType.PRIMARY ?\n+                        primary.kafka().consume(numRecordsProduces, timeout, topics).count() :\n+                        backup.kafka().consume(numRecordsProduces, timeout, topics).count();\n+                if (numRecordsProduces == actualNum)\n+                    return;\n+            } catch (Throwable e) {\n+                log.error(\"Could not find enough records with {} retries left\", retries, e);\n+            }\n+        }\n+        throw new InterruptedException(errorMsg);\n+    }\n+\n     @Test\n     public void testReplication() throws InterruptedException {\n         MirrorClient primaryClient = new MirrorClient(mm2Config.clientConfig(\"primary\"));\n         MirrorClient backupClient = new MirrorClient(mm2Config.clientConfig(\"backup\"));\n \n-        assertEquals(\"Records were not produced to primary cluster.\", NUM_RECORDS_PRODUCED,", "originalCommit": "1559549e83adae1c4f1f5d362b0c176a694fea4b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "url": "https://github.com/apache/kafka/commit/56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "message": "KAFKA-9509: address reviewer's comments to increase the timeout value directly", "committedDate": "2020-06-19T02:27:46Z", "type": "commit"}, {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "url": "https://github.com/apache/kafka/commit/56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "message": "KAFKA-9509: address reviewer's comments to increase the timeout value directly", "committedDate": "2020-06-19T02:27:46Z", "type": "forcePushed"}]}