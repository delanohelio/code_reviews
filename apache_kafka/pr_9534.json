{"pr_number": 9534, "pr_title": "KAFKA-10664: Delete existing checkpoint when writing empty offsets", "pr_author": "ableegoldman", "pr_createdAt": "2020-10-30T02:20:55Z", "pr_url": "https://github.com/apache/kafka/pull/9534", "timeline": [{"oid": "52819687c3bb59d9193fa1c67ec310c04e5d01f9", "url": "https://github.com/apache/kafka/commit/52819687c3bb59d9193fa1c67ec310c04e5d01f9", "message": "delete checkpoint file", "committedDate": "2020-10-30T02:38:17Z", "type": "commit"}, {"oid": "52819687c3bb59d9193fa1c67ec310c04e5d01f9", "url": "https://github.com/apache/kafka/commit/52819687c3bb59d9193fa1c67ec310c04e5d01f9", "message": "delete checkpoint file", "committedDate": "2020-10-30T02:38:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0ODc4MA==", "url": "https://github.com/apache/kafka/pull/9534#discussion_r515148780", "body": "Suggestion for better readability:\r\n\r\n```suggestion\r\n        assertThat(file.exists(), is(true));\r\n        assertThat(offsets, is(checkpoint.read()));\r\n\r\n        checkpoint.write(Collections.emptyMap());\r\n\r\n        assertThat(file.exists(), is(false));\r\n        assertThat(Collections.<TopicPartition, Long>emptyMap(), is(checkpoint.read()));\r\n```\r\n\r\nI verified that the suggested code does not break the test. So, you can directly add the suggesion in the GitHub UI.", "bodyText": "Suggestion for better readability:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(file.exists());\n          \n          \n            \n                    assertEquals(offsets, checkpoint.read());\n          \n          \n            \n            \n          \n          \n            \n                    checkpoint.write(Collections.emptyMap());\n          \n          \n            \n            \n          \n          \n            \n                    assertFalse(file.exists());\n          \n          \n            \n            \n          \n          \n            \n                    assertEquals(Collections.<TopicPartition, Long>emptyMap(), checkpoint.read());\n          \n          \n            \n                    assertThat(file.exists(), is(true));\n          \n          \n            \n                    assertThat(offsets, is(checkpoint.read()));\n          \n          \n            \n            \n          \n          \n            \n                    checkpoint.write(Collections.emptyMap());\n          \n          \n            \n            \n          \n          \n            \n                    assertThat(file.exists(), is(false));\n          \n          \n            \n                    assertThat(Collections.<TopicPartition, Long>emptyMap(), is(checkpoint.read()));\n          \n      \n    \n    \n  \n\nI verified that the suggested code does not break the test. So, you can directly add the suggesion in the GitHub UI.", "bodyHTML": "<p dir=\"auto\">Suggestion for better readability:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertTrue(file<span class=\"pl-k\">.</span>exists());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertEquals(offsets, checkpoint<span class=\"pl-k\">.</span>read());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        checkpoint<span class=\"pl-k\">.</span>write(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>emptyMap());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertFalse(file<span class=\"pl-k\">.</span>exists());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertEquals(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span><span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">TopicPartition</span>, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">&gt;</span>emptyMap(), checkpoint<span class=\"pl-k\">.</span>read());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(file<span class=\"pl-k\">.</span>exists(), is(<span class=\"pl-c1\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(offsets, is(checkpoint<span class=\"pl-k\">.</span>read()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        checkpoint<span class=\"pl-k\">.</span>write(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>emptyMap());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(file<span class=\"pl-k\">.</span>exists(), is(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(<span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span><span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">TopicPartition</span>, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">&gt;</span>emptyMap(), is(checkpoint<span class=\"pl-k\">.</span>read()));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I verified that the suggested code does not break the test. So, you can directly add the suggesion in the GitHub UI.</p>", "author": "cadonna", "createdAt": "2020-10-30T14:44:26Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/OffsetCheckpointTest.java", "diffHunk": "@@ -85,6 +85,25 @@ public void shouldNotWriteCheckpointWhenNoOffsets() throws IOException {\n         checkpoint.delete();\n     }\n \n+    @Test\n+    public void shouldDeleteExistingCheckpointWhenNoOffsets() throws IOException {\n+        final File file = TestUtils.tempFile();\n+        final OffsetCheckpoint checkpoint = new OffsetCheckpoint(file);\n+\n+        final Map<TopicPartition, Long> offsets = Collections.singletonMap(new TopicPartition(topic, 0), 1L);\n+\n+        checkpoint.write(offsets);\n+\n+        assertTrue(file.exists());\n+        assertEquals(offsets, checkpoint.read());\n+\n+        checkpoint.write(Collections.emptyMap());\n+\n+        assertFalse(file.exists());\n+\n+        assertEquals(Collections.<TopicPartition, Long>emptyMap(), checkpoint.read());", "originalCommit": "52819687c3bb59d9193fa1c67ec310c04e5d01f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NzEyMQ==", "url": "https://github.com/apache/kafka/pull/9534#discussion_r515257121", "bodyText": "Thanks for the suggestion. I had to add imports but otherwise looks good \ud83d\udc4d", "author": "ableegoldman", "createdAt": "2020-10-30T17:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0ODc4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1OTM1Nw==", "url": "https://github.com/apache/kafka/pull/9534#discussion_r515259357", "bodyText": "Ouch! Sorry about that!", "author": "cadonna", "createdAt": "2020-10-30T17:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0ODc4MA=="}], "type": "inlineReview"}, {"oid": "3c15c79ca5f49d006ebf0fbf658c63e1dfe21a3d", "url": "https://github.com/apache/kafka/commit/3c15c79ca5f49d006ebf0fbf658c63e1dfe21a3d", "message": "Readability suggestion from Bruno\n\nCo-authored-by: Bruno Cadonna <bruno@confluent.io>", "committedDate": "2020-10-30T16:55:39Z", "type": "commit"}, {"oid": "764693fc86cdd8fc23937ea4999a5f945ed4ce8c", "url": "https://github.com/apache/kafka/commit/764693fc86cdd8fc23937ea4999a5f945ed4ce8c", "message": "add import", "committedDate": "2020-10-30T17:22:20Z", "type": "commit"}]}