{"pr_number": 3627, "pr_title": "test: Add testcases for Text Blocks introduced in Java 15", "pr_createdAt": "2020-10-02T13:28:40Z", "pr_url": "https://github.com/INRIA/spoon/pull/3627", "merge_commit": "e4c7cb93eec4d31aca95f1d1aba02aac4cd68c37", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNjU5Mg==", "url": "https://github.com/INRIA/spoon/pull/3627#discussion_r498826592", "body": "split it in 3 testcases?\r\n", "bodyText": "split it in 3 testcases?", "bodyHTML": "<p dir=\"auto\">split it in 3 testcases?</p>", "author": "MartinWitt", "createdAt": "2020-10-02T13:37:56Z", "path": "src/test/java/spoon/test/textBlocks/TextBlockTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package spoon.test.textBlocks;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+\n+import spoon.Launcher;\n+import spoon.reflect.code.CtInvocation;\n+import spoon.reflect.code.CtLiteral;\n+import spoon.reflect.code.CtStatement;\n+import spoon.reflect.code.CtTry;\n+import spoon.reflect.declaration.CtClass;\n+import spoon.reflect.declaration.CtMethod;\n+\n+public class TextBlockTest{\n+\tprivate Launcher setUpTest() {\n+\t\tLauncher launcher = new Launcher();\n+\t\tlauncher.addInputResource(\"./src/test/resources/textBlock/TextBlockTestClass.java\");\n+\t\tlauncher.run();\n+\t\treturn launcher;\n+\t}\n+\t\n+\t@Test\n+\tpublic void testTextBlock(){", "originalCommit": "27a6cb946171c0424e21890f2c4a9f87f156bd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3b8e229f4a30264a8a397e963134185b2f60b46", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 42baa63b5..6abf68b81 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -21,21 +22,39 @@ public class TextBlockTest{\n \t}\n \t\n \t@Test\n-\tpublic void testTextBlock(){\n+\tpublic void testTextBlock1(){\n+\t\t//contract: Test Text Block usage introduced in Java 15\n \t\tLauncher launcher = setUpTest();\n \t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n \t\tCtMethod<?> m1 =  allstmt.getMethod(\"m1\");\n+\t\t\n \t\tCtStatement stmt1 = m1.getBody().getStatement(0);\n-\t\tCtLiteral l1 = (CtLiteral) stmt1.getDirectChildren().get(1);\n+\t\tCtLiteral l1 = (CtLiteral) stmt1.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l1.getValue(), \"<html>\\n    <body>\\n        <p>Hello, world</p>\\n    </body>\\n</html>\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockqoute(){\n+\t\t//contract: Test Text Block containing \"\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m2 =  allstmt.getMethod(\"m2\");\n \t\t\n-\t\tCtStatement stmt2 = m1.getBody().getStatement(1);\n-\t\tCtLiteral l2 = (CtLiteral) stmt2.getDirectChildren().get(1);\n+\t\tCtStatement stmt2 = m2.getBody().getStatement(0);\n+\t\tCtLiteral l2 = (CtLiteral) stmt2.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l2.getValue(), \"SELECT \\\"EMP_ID\\\", \\\"LAST_NAME\\\" FROM \\\"EMPLOYEE_TB\\\"\\n\"\n \t\t\t\t+ \"WHERE \\\"CITY\\\" = 'INDIANAPOLIS'\\n\"\n \t\t\t\t+ \"ORDER BY \\\"EMP_ID\\\", \\\"LAST_NAME\\\";\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockQouteWithinQoute(){\n+\t\t//contract: Test Text Block usage containing nested \" within '\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m3 =  allstmt.getMethod(\"m3\");\n \t\t\n-\t\tCtTry stmt4 = (CtTry) m1.getBody().getStatement(3);\n+\t\tCtTry stmt4 = (CtTry) m3.getBody().getStatement(1);\n \t\tCtStatement stmt5 = stmt4.getBody().getStatement(0);\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n \t\tCtLiteral l3 = (CtLiteral) inv.getArguments().get(0);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "e4c7cb93eec4d31aca95f1d1aba02aac4cd68c37", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 42baa63b..85c4cf6b 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -21,21 +23,39 @@ public class TextBlockTest{\n \t}\n \t\n \t@Test\n-\tpublic void testTextBlock(){\n+\tpublic void testTextBlock1(){\n+\t\t//contract: Test Text Block usage introduced in Java 15\n \t\tLauncher launcher = setUpTest();\n \t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n \t\tCtMethod<?> m1 =  allstmt.getMethod(\"m1\");\n+\t\t\n \t\tCtStatement stmt1 = m1.getBody().getStatement(0);\n-\t\tCtLiteral l1 = (CtLiteral) stmt1.getDirectChildren().get(1);\n-\t\tassertEquals(l1.getValue(), \"<html>\\n    <body>\\n        <p>Hello, world</p>\\n    </body>\\n</html>\\n\");\n+\t\tCtLiteral l1 = (CtLiteral) stmt1.getValueByRole(CtRole.ASSIGNMENT);\n+\t\tassertEquals(l1.getValue(), \"<html>\\n    <body>\\n        <p>Hello, \u0915\u0938\u094c\u091f\u0940 \ud83e\udd72</p>\\n    </body>\\n</html>\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockqoute(){\n+\t\t//contract: Test Text Block containing \"\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m2 =  allstmt.getMethod(\"m2\");\n \t\t\n-\t\tCtStatement stmt2 = m1.getBody().getStatement(1);\n-\t\tCtLiteral l2 = (CtLiteral) stmt2.getDirectChildren().get(1);\n+\t\tCtStatement stmt2 = m2.getBody().getStatement(0);\n+\t\tCtLiteral l2 = (CtLiteral) stmt2.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l2.getValue(), \"SELECT \\\"EMP_ID\\\", \\\"LAST_NAME\\\" FROM \\\"EMPLOYEE_TB\\\"\\n\"\n \t\t\t\t+ \"WHERE \\\"CITY\\\" = 'INDIANAPOLIS'\\n\"\n \t\t\t\t+ \"ORDER BY \\\"EMP_ID\\\", \\\"LAST_NAME\\\";\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockQouteWithinQoute(){\n+\t\t//contract: Test Text Block usage containing nested \" within '\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m3 =  allstmt.getMethod(\"m3\");\n \t\t\n-\t\tCtTry stmt4 = (CtTry) m1.getBody().getStatement(3);\n+\t\tCtTry stmt4 = (CtTry) m3.getBody().getStatement(1);\n \t\tCtStatement stmt5 = stmt4.getBody().getStatement(0);\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n \t\tCtLiteral l3 = (CtLiteral) inv.getArguments().get(0);\n", "next_change": {"commit": "06ad7f00d3984e20de610066d7767ac6f8c7b81b", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 85c4cf6b..801dbb98 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -58,7 +71,8 @@ public class TextBlockTest{\n \t\tCtTry stmt4 = (CtTry) m3.getBody().getStatement(1);\n \t\tCtStatement stmt5 = stmt4.getBody().getStatement(0);\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n-\t\tCtLiteral l3 = (CtLiteral) inv.getArguments().get(0);\n+\t\tassertTrue(inv.getArguments().get(0) instanceof CtTextBlock);\n+\t\tCtTextBlock l3 = (CtTextBlock) inv.getArguments().get(0);\n \t\tassertEquals(l3.getValue(), \"function hello() {\\n\"\n \t\t\t\t+ \"    print('\\\"Hello, world\\\"');\\n\"\n \t\t\t\t+ \"}\\n\"\n", "next_change": {"commit": "8af9cceb0053ce109ebd0142f82daec5f928b970", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 801dbb98..1f6d0155 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -73,12 +74,13 @@ public class TextBlockTest{\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n \t\tassertTrue(inv.getArguments().get(0) instanceof CtTextBlock);\n \t\tCtTextBlock l3 = (CtTextBlock) inv.getArguments().get(0);\n-\t\tassertEquals(l3.getValue(), \"function hello() {\\n\"\n+\t\tassertEquals(\"function hello() {\\n\"\n \t\t\t\t+ \"    print('\\\"Hello, world\\\"');\\n\"\n \t\t\t\t+ \"}\\n\"\n \t\t\t\t+ \"\\n\"\n \t\t\t\t+ \"hello();\\n\"\n-\t\t\t\t+ \"\");\n+\t\t\t\t+ \"\",\n+\t\t\t\tl3.getValue());\n \t}\n \n \t@Test\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "e4c7cb93eec4d31aca95f1d1aba02aac4cd68c37", "message": "Merge commit", "committedDate": null}, {"oid": "06ad7f00d3984e20de610066d7767ac6f8c7b81b", "committedDate": "2020-11-04 05:57:03 +0000", "message": "feature: add support for pretty-printing Java 15 text blocks (#3664)"}, {"oid": "e815c80644e90d2e3b52e1a1160f3b7ca45e615e", "committedDate": "2021-01-13 08:58:36 +0000", "message": "chore: Add a windows build for Java 1.8 (#3746)"}, {"oid": "59990fe39101fdb7fcb13d4ad6bbaf0085cb8509", "committedDate": "2021-12-25 13:54:51 +0100", "message": "fix: add junit extension for line endings (#4349)"}, {"oid": "8af9cceb0053ce109ebd0142f82daec5f928b970", "committedDate": "2022-01-11 07:31:22 +0000", "message": "fix: escape sequences in text-blocks are kept (#4409)"}, {"oid": "7d494ac8733c558f70ae0205469a418305c37ba1", "committedDate": "2023-02-22 12:49:39 +0100", "message": "test: Clean up LineSeperatorExtension (#5120)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNzE2Ng==", "url": "https://github.com/INRIA/spoon/pull/3627#discussion_r498827166", "body": "maybe use TypeFilter for more stable. Get(Number) is pretty unstable for a testcase. If we change order in any future case", "bodyText": "maybe use TypeFilter for more stable. Get(Number) is pretty unstable for a testcase. If we change order in any future case", "bodyHTML": "<p dir=\"auto\">maybe use TypeFilter for more stable. Get(Number) is pretty unstable for a testcase. If we change order in any future case</p>", "author": "MartinWitt", "createdAt": "2020-10-02T13:38:59Z", "path": "src/test/java/spoon/test/textBlocks/TextBlockTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package spoon.test.textBlocks;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+\n+import spoon.Launcher;\n+import spoon.reflect.code.CtInvocation;\n+import spoon.reflect.code.CtLiteral;\n+import spoon.reflect.code.CtStatement;\n+import spoon.reflect.code.CtTry;\n+import spoon.reflect.declaration.CtClass;\n+import spoon.reflect.declaration.CtMethod;\n+\n+public class TextBlockTest{\n+\tprivate Launcher setUpTest() {\n+\t\tLauncher launcher = new Launcher();\n+\t\tlauncher.addInputResource(\"./src/test/resources/textBlock/TextBlockTestClass.java\");\n+\t\tlauncher.run();\n+\t\treturn launcher;\n+\t}\n+\t\n+\t@Test\n+\tpublic void testTextBlock(){\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m1 =  allstmt.getMethod(\"m1\");\n+\t\tCtStatement stmt1 = m1.getBody().getStatement(0);\n+\t\tCtLiteral l1 = (CtLiteral) stmt1.getDirectChildren().get(1);", "originalCommit": "27a6cb946171c0424e21890f2c4a9f87f156bd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3b8e229f4a30264a8a397e963134185b2f60b46", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 42baa63b5..6abf68b81 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -21,21 +22,39 @@ public class TextBlockTest{\n \t}\n \t\n \t@Test\n-\tpublic void testTextBlock(){\n+\tpublic void testTextBlock1(){\n+\t\t//contract: Test Text Block usage introduced in Java 15\n \t\tLauncher launcher = setUpTest();\n \t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n \t\tCtMethod<?> m1 =  allstmt.getMethod(\"m1\");\n+\t\t\n \t\tCtStatement stmt1 = m1.getBody().getStatement(0);\n-\t\tCtLiteral l1 = (CtLiteral) stmt1.getDirectChildren().get(1);\n+\t\tCtLiteral l1 = (CtLiteral) stmt1.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l1.getValue(), \"<html>\\n    <body>\\n        <p>Hello, world</p>\\n    </body>\\n</html>\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockqoute(){\n+\t\t//contract: Test Text Block containing \"\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m2 =  allstmt.getMethod(\"m2\");\n \t\t\n-\t\tCtStatement stmt2 = m1.getBody().getStatement(1);\n-\t\tCtLiteral l2 = (CtLiteral) stmt2.getDirectChildren().get(1);\n+\t\tCtStatement stmt2 = m2.getBody().getStatement(0);\n+\t\tCtLiteral l2 = (CtLiteral) stmt2.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l2.getValue(), \"SELECT \\\"EMP_ID\\\", \\\"LAST_NAME\\\" FROM \\\"EMPLOYEE_TB\\\"\\n\"\n \t\t\t\t+ \"WHERE \\\"CITY\\\" = 'INDIANAPOLIS'\\n\"\n \t\t\t\t+ \"ORDER BY \\\"EMP_ID\\\", \\\"LAST_NAME\\\";\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockQouteWithinQoute(){\n+\t\t//contract: Test Text Block usage containing nested \" within '\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m3 =  allstmt.getMethod(\"m3\");\n \t\t\n-\t\tCtTry stmt4 = (CtTry) m1.getBody().getStatement(3);\n+\t\tCtTry stmt4 = (CtTry) m3.getBody().getStatement(1);\n \t\tCtStatement stmt5 = stmt4.getBody().getStatement(0);\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n \t\tCtLiteral l3 = (CtLiteral) inv.getArguments().get(0);\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNzc5Mg==", "url": "https://github.com/INRIA/spoon/pull/3627#discussion_r498827792", "body": "In Spoon every testcase has a comment `//contract: ...` describing the testcase in natural language", "bodyText": "In Spoon every testcase has a comment //contract: ... describing the testcase in natural language", "bodyHTML": "<p dir=\"auto\">In Spoon every testcase has a comment <code>//contract: ...</code> describing the testcase in natural language</p>", "author": "MartinWitt", "createdAt": "2020-10-02T13:40:03Z", "path": "src/test/java/spoon/test/textBlocks/TextBlockTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package spoon.test.textBlocks;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+\n+import spoon.Launcher;\n+import spoon.reflect.code.CtInvocation;\n+import spoon.reflect.code.CtLiteral;\n+import spoon.reflect.code.CtStatement;\n+import spoon.reflect.code.CtTry;\n+import spoon.reflect.declaration.CtClass;\n+import spoon.reflect.declaration.CtMethod;\n+\n+public class TextBlockTest{\n+\tprivate Launcher setUpTest() {\n+\t\tLauncher launcher = new Launcher();\n+\t\tlauncher.addInputResource(\"./src/test/resources/textBlock/TextBlockTestClass.java\");\n+\t\tlauncher.run();\n+\t\treturn launcher;\n+\t}\n+\t\n+\t@Test\n+\tpublic void testTextBlock(){", "originalCommit": "27a6cb946171c0424e21890f2c4a9f87f156bd9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3b8e229f4a30264a8a397e963134185b2f60b46", "changed_code": [{"header": "diff --git a/src/test/java/spoon/test/textBlocks/TextBlockTest.java b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\nindex 42baa63b5..6abf68b81 100644\n--- a/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n+++ b/src/test/java/spoon/test/textBlocks/TextBlockTest.java\n", "chunk": "@@ -21,21 +22,39 @@ public class TextBlockTest{\n \t}\n \t\n \t@Test\n-\tpublic void testTextBlock(){\n+\tpublic void testTextBlock1(){\n+\t\t//contract: Test Text Block usage introduced in Java 15\n \t\tLauncher launcher = setUpTest();\n \t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n \t\tCtMethod<?> m1 =  allstmt.getMethod(\"m1\");\n+\t\t\n \t\tCtStatement stmt1 = m1.getBody().getStatement(0);\n-\t\tCtLiteral l1 = (CtLiteral) stmt1.getDirectChildren().get(1);\n+\t\tCtLiteral l1 = (CtLiteral) stmt1.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l1.getValue(), \"<html>\\n    <body>\\n        <p>Hello, world</p>\\n    </body>\\n</html>\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockqoute(){\n+\t\t//contract: Test Text Block containing \"\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m2 =  allstmt.getMethod(\"m2\");\n \t\t\n-\t\tCtStatement stmt2 = m1.getBody().getStatement(1);\n-\t\tCtLiteral l2 = (CtLiteral) stmt2.getDirectChildren().get(1);\n+\t\tCtStatement stmt2 = m2.getBody().getStatement(0);\n+\t\tCtLiteral l2 = (CtLiteral) stmt2.getValueByRole(CtRole.ASSIGNMENT);\n \t\tassertEquals(l2.getValue(), \"SELECT \\\"EMP_ID\\\", \\\"LAST_NAME\\\" FROM \\\"EMPLOYEE_TB\\\"\\n\"\n \t\t\t\t+ \"WHERE \\\"CITY\\\" = 'INDIANAPOLIS'\\n\"\n \t\t\t\t+ \"ORDER BY \\\"EMP_ID\\\", \\\"LAST_NAME\\\";\\n\");\n+\t}\n+\n+\t@Test\n+\tpublic void testTextBlockQouteWithinQoute(){\n+\t\t//contract: Test Text Block usage containing nested \" within '\n+\t\tLauncher launcher = setUpTest();\n+\t\tCtClass<?> allstmt = (CtClass<?>) launcher.getFactory().Type().get(\"textBlock.TextBlockTestClass\");\n+\t\tCtMethod<?> m3 =  allstmt.getMethod(\"m3\");\n \t\t\n-\t\tCtTry stmt4 = (CtTry) m1.getBody().getStatement(3);\n+\t\tCtTry stmt4 = (CtTry) m3.getBody().getStatement(1);\n \t\tCtStatement stmt5 = stmt4.getBody().getStatement(0);\n \t\tCtInvocation inv = (CtInvocation) stmt5.getDirectChildren().get(1);\n \t\tCtLiteral l3 = (CtLiteral) inv.getArguments().get(0);\n", "next_change": null}]}}, {"oid": "3c268c248b7e3640628263f667106e6b92053693", "url": "https://github.com/INRIA/spoon/commit/3c268c248b7e3640628263f667106e6b92053693", "message": "Add testcases for Text Block introduced in Java 15", "committedDate": "2020-10-03T04:59:08Z", "type": "commit"}, {"oid": "a3b8e229f4a30264a8a397e963134185b2f60b46", "url": "https://github.com/INRIA/spoon/commit/a3b8e229f4a30264a8a397e963134185b2f60b46", "message": "Add contract comment for testcases and split testcases among multiple tests", "committedDate": "2020-10-03T04:59:08Z", "type": "commit"}, {"oid": "1dff2425e4e84d41e647c7a51597fe6895023baa", "url": "https://github.com/INRIA/spoon/commit/1dff2425e4e84d41e647c7a51597fe6895023baa", "message": "Add Unicode and empty text test", "committedDate": "2020-10-03T04:59:08Z", "type": "commit"}, {"oid": "1dff2425e4e84d41e647c7a51597fe6895023baa", "url": "https://github.com/INRIA/spoon/commit/1dff2425e4e84d41e647c7a51597fe6895023baa", "message": "Add Unicode and empty text test", "committedDate": "2020-10-03T04:59:08Z", "type": "forcePushed"}, {"oid": "973819bf56030cfd8e58482eea9244107ad7d012", "url": "https://github.com/INRIA/spoon/commit/973819bf56030cfd8e58482eea9244107ad7d012", "message": "Add Unicode 13 emoji", "committedDate": "2020-10-03T09:57:04Z", "type": "commit"}, {"oid": "b35f381523835fdc7bc9c6d1304a08a709f41c27", "url": "https://github.com/INRIA/spoon/commit/b35f381523835fdc7bc9c6d1304a08a709f41c27", "message": "Update TextBlockTest.java", "committedDate": "2020-10-04T04:32:29Z", "type": "commit"}, {"oid": "1a75a877f31e919c8d93a82aa5b12abe90ce64a4", "url": "https://github.com/INRIA/spoon/commit/1a75a877f31e919c8d93a82aa5b12abe90ce64a4", "message": "Update TextBlockTest.java", "committedDate": "2020-10-04T04:37:13Z", "type": "commit"}, {"oid": "d23a20de0d82062fcc7008ec1e9b2b5955c61cc9", "url": "https://github.com/INRIA/spoon/commit/d23a20de0d82062fcc7008ec1e9b2b5955c61cc9", "message": "Update TextBlockTest.java", "committedDate": "2020-10-04T04:41:33Z", "type": "commit"}]}