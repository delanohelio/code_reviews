{"pr_number": 2309, "pr_title": "add a limit for max_request_blocks", "pr_author": "rolfyone", "pr_createdAt": "2020-07-02T23:44:36Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2309", "timeline": [{"oid": "222e60c0b03718065c8406bc155dbc25342a196f", "url": "https://github.com/ConsenSys/teku/commit/222e60c0b03718065c8406bc155dbc25342a196f", "message": "rpc exceptions now output a limited 256 bytes of message\n\n - renamed SimpleOffsetSszEncoder to DefaultRpcPayloadEncoder\n\n - added a round trip encoder to demonstrate the same message that is encoded comes out of the decoder.\n\n - Added log message for decode failure.\n\npartially addresses #2078\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-02T05:28:34Z", "type": "commit"}, {"oid": "d9d08d969513de41f214577cd840e070182fceee", "url": "https://github.com/ConsenSys/teku/commit/d9d08d969513de41f214577cd840e070182fceee", "message": "Merge remote-tracking branch 'upstream/master' into 2078-exception-bytes", "committedDate": "2020-07-02T05:29:35Z", "type": "commit"}, {"oid": "0de0af0db187b25a1d75e8e546775247615aa52f", "url": "https://github.com/ConsenSys/teku/commit/0de0af0db187b25a1d75e8e546775247615aa52f", "message": "Merge remote-tracking branch 'upstream/master' into 2078-exception-bytes", "committedDate": "2020-07-02T21:07:45Z", "type": "commit"}, {"oid": "7ac2d672e2f0c2db52ce19f51a9a1f0b63cacef0", "url": "https://github.com/ConsenSys/teku/commit/7ac2d672e2f0c2db52ce19f51a9a1f0b63cacef0", "message": "Merge remote-tracking branch 'upstream/master' into 2078-exception-bytes\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>\n\n# Conflicts:\n#\tnetworking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/RpcResponseDecoder.java\n#\tnetworking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/DefaultRpcPayloadEncoderTest.java", "committedDate": "2020-07-02T21:36:09Z", "type": "commit"}, {"oid": "5a87c0b798424f89a3acb2590f3ee3b88bd7c9e7", "url": "https://github.com/ConsenSys/teku/commit/5a87c0b798424f89a3acb2590f3ee3b88bd7c9e7", "message": "Merge remote-tracking branch 'upstream/master' into 2078-exception-bytes", "committedDate": "2020-07-02T21:54:58Z", "type": "commit"}, {"oid": "e42b314dc2c8e7f970709c5ba316d7455a1dc97b", "url": "https://github.com/ConsenSys/teku/commit/e42b314dc2c8e7f970709c5ba316d7455a1dc97b", "message": "added a limit for request block size\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-02T23:36:20Z", "type": "commit"}, {"oid": "ed8c858d15ba9655fb75fe598cc9f31f1b70cca3", "url": "https://github.com/ConsenSys/teku/commit/ed8c858d15ba9655fb75fe598cc9f31f1b70cca3", "message": "Merge remote-tracking branch 'upstream/master' into 2078", "committedDate": "2020-07-02T23:39:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDA2OA==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449320068", "body": "We don't want to increase this limit.  We should accept requests for up to 1024 blocks, but we only send 200 because we want to restrict how much work we have to do (the spec specifically allows us to not send all blocks back).", "bodyText": "We don't want to increase this limit.  We should accept requests for up to 1024 blocks, but we only send 200 because we want to restrict how much work we have to do (the spec specifically allows us to not send all blocks back).", "bodyHTML": "<p dir=\"auto\">We don't want to increase this limit.  We should accept requests for up to 1024 blocks, but we only send 200 because we want to restrict how much work we have to do (the spec specifically allows us to not send all blocks back).</p>", "author": "ajsutton", "createdAt": "2020-07-03T00:21:06Z", "path": "util/src/main/java/tech/pegasys/teku/util/config/Constants.java", "diffHunk": "@@ -115,7 +116,7 @@\n   public static int EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION = 256;\n \n   // Sync\n-  public static final UnsignedLong MAX_BLOCK_BY_RANGE_REQUEST_SIZE = UnsignedLong.valueOf(200);\n+  public static final UnsignedLong MAX_BLOCK_BY_RANGE_REQUEST_SIZE = UnsignedLong.valueOf(1024);", "originalCommit": "ed8c858d15ba9655fb75fe598cc9f31f1b70cca3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDk5Mw==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449320993", "bodyText": "ok I just figured when you said we could ask for more that you meant to increase the limit. i'll revert", "author": "rolfyone", "createdAt": "2020-07-03T00:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDA2OA=="}], "type": "inlineReview"}, {"oid": "91a6b9b739a4bb56e79de1daf2c21a28f899b7e1", "url": "https://github.com/ConsenSys/teku/commit/91a6b9b739a4bb56e79de1daf2c21a28f899b7e1", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-03T00:26:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMDc2NA==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449330764", "body": "Can we change this to throw an `RpcException` rather than `IllegalArgumentException`.  Otherwise if we receive a request that fails this check we'll report an internal error back to the peer instead of a bad request.", "bodyText": "Can we change this to throw an RpcException rather than IllegalArgumentException.  Otherwise if we receive a request that fails this check we'll report an internal error back to the peer instead of a bad request.", "bodyHTML": "<p dir=\"auto\">Can we change this to throw an <code>RpcException</code> rather than <code>IllegalArgumentException</code>.  Otherwise if we receive a request that fails this check we'll report an internal error back to the peer instead of a bad request.</p>", "author": "ajsutton", "createdAt": "2020-07-03T01:14:40Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/networking/libp2p/rpc/BeaconBlocksByRangeRequestMessage.java", "diffHunk": "@@ -23,13 +26,13 @@\n \n public final class BeaconBlocksByRangeRequestMessage\n     implements RpcRequest, SimpleOffsetSerializable, SSZContainer {\n-\n   private final UnsignedLong startSlot;\n   private final UnsignedLong count;\n   private final UnsignedLong step;\n \n   public BeaconBlocksByRangeRequestMessage(\n       final UnsignedLong startSlot, final UnsignedLong count, final UnsignedLong step) {\n+    checkArgument(count.compareTo(UnsignedLong.valueOf(MAX_REQUEST_BLOCKS)) <= 0);", "originalCommit": "91a6b9b739a4bb56e79de1daf2c21a28f899b7e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMTIwMg==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449331202", "body": "Throw an RpcException here too.", "bodyText": "Throw an RpcException here too.", "bodyHTML": "<p dir=\"auto\">Throw an RpcException here too.</p>", "author": "ajsutton", "createdAt": "2020-07-03T01:16:39Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/networking/libp2p/rpc/BeaconBlocksByRootRequestMessage.java", "diffHunk": "@@ -24,9 +27,10 @@\n public class BeaconBlocksByRootRequestMessage implements RpcRequest, SSZContainer {\n \n   private final SSZMutableList<Bytes32> blockRoots =\n-      SSZList.createMutable(Bytes32.class, Integer.MAX_VALUE);\n+      SSZList.createMutable(Bytes32.class, MAX_REQUEST_BLOCKS);\n \n   public BeaconBlocksByRootRequestMessage(final List<Bytes32> blockRoots) {\n+    checkArgument(blockRoots.size() <= MAX_REQUEST_BLOCKS);", "originalCommit": "91a6b9b739a4bb56e79de1daf2c21a28f899b7e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMTY0Nw==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449331647", "body": "We wouldn't need this try/catch if the constructor just threw RpcException.  Ultimately we should catch this once the length prefix is read because the message length can't be more than Bytes32.SIZE * MAX_REQUEST_BLOCKS - there's a separate ticket for that though.", "bodyText": "We wouldn't need this try/catch if the constructor just threw RpcException.  Ultimately we should catch this once the length prefix is read because the message length can't be more than Bytes32.SIZE * MAX_REQUEST_BLOCKS - there's a separate ticket for that though.", "bodyHTML": "<p dir=\"auto\">We wouldn't need this try/catch if the constructor just threw RpcException.  Ultimately we should catch this once the length prefix is read because the message length can't be more than Bytes32.SIZE * MAX_REQUEST_BLOCKS - there's a separate ticket for that though.</p>", "author": "ajsutton", "createdAt": "2020-07-03T01:19:05Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/BeaconBlocksByRootRequestMessageEncoder.java", "diffHunk": "@@ -44,6 +46,10 @@ public BeaconBlocksByRootRequestMessage decode(final Bytes message) throws RpcEx\n     for (int i = 0; i < message.size(); i += Bytes32.SIZE) {\n       blockRoots.add(Bytes32.wrap(message.slice(i, Bytes32.SIZE)));\n     }\n-    return new BeaconBlocksByRootRequestMessage(blockRoots);\n+    try {\n+      return new BeaconBlocksByRootRequestMessage(blockRoots);\n+    } catch (IllegalArgumentException ex) {\n+      throw new RpcException(INVALID_REQUEST_CODE, ex.getMessage());\n+    }", "originalCommit": "91a6b9b739a4bb56e79de1daf2c21a28f899b7e1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a28286b37d15d2efed0abf233953bb2642012cb4", "url": "https://github.com/ConsenSys/teku/commit/a28286b37d15d2efed0abf233953bb2642012cb4", "message": "review comment addressed.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-03T05:29:16Z", "type": "commit"}, {"oid": "bb4fe53e68179ad9fabfbfadc28b06c18ba8e168", "url": "https://github.com/ConsenSys/teku/commit/bb4fe53e68179ad9fabfbfadc28b06c18ba8e168", "message": "Merge remote-tracking branch 'upstream/master' into 2078", "committedDate": "2020-07-03T05:29:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NDM3Mw==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449384373", "body": "```suggestion\r\n          INVALID_REQUEST_CODE, \"Only a maximum of \" + MAX_REQUEST_BLOCKS + \" blocks can be requested per request\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      INVALID_REQUEST_CODE, \"Only a maximum of \" + MAX_REQUEST_BLOCKS + \" can per request\");\n          \n          \n            \n                      INVALID_REQUEST_CODE, \"Only a maximum of \" + MAX_REQUEST_BLOCKS + \" blocks can be requested per request\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"155\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-c1\">INVALID_REQUEST_CODE</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Only a maximum of <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">MAX_REQUEST_BLOCKS</span> <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> can per request<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"155\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-c1\">INVALID_REQUEST_CODE</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Only a maximum of <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">MAX_REQUEST_BLOCKS</span> <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"x x-first x-last\">blocks </span>can<span class=\"x x-first x-last\"> be requested</span> per request<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-03T05:36:18Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2Peer.java", "diffHunk": "@@ -144,7 +148,12 @@ void markChainValidated() {\n   }\n \n   public SafeFuture<Void> requestBlocksByRoot(\n-      final List<Bytes32> blockRoots, final ResponseListener<SignedBeaconBlock> listener) {\n+      final List<Bytes32> blockRoots, final ResponseListener<SignedBeaconBlock> listener)\n+      throws RpcException {\n+    if (blockRoots.size() > MAX_REQUEST_BLOCKS) {\n+      throw new RpcException(\n+          INVALID_REQUEST_CODE, \"Only a maximum of \" + MAX_REQUEST_BLOCKS + \" can per request\");", "originalCommit": "bb4fe53e68179ad9fabfbfadc28b06c18ba8e168", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NDYyNA==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449384624", "body": "Anton moved us away from using static instances of `RpcException`.  Might need to pull in the latest master to get those changes.", "bodyText": "Anton moved us away from using static instances of RpcException.  Might need to pull in the latest master to get those changes.", "bodyHTML": "<p dir=\"auto\">Anton moved us away from using static instances of <code>RpcException</code>.  Might need to pull in the latest master to get those changes.</p>", "author": "ajsutton", "createdAt": "2020-07-03T05:37:18Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -45,6 +46,10 @@\n   static final RpcException INVALID_STEP =\n       new RpcException(INVALID_REQUEST_CODE, \"Step must be greater than zero\");\n \n+  private static final RpcException TOO_MANY_BLOCKS =\n+      new RpcException(\n+          INVALID_REQUEST_CODE, \"Only a maximum of \" + MAX_REQUEST_BLOCKS + \" can per request\");", "originalCommit": "bb4fe53e68179ad9fabfbfadc28b06c18ba8e168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NTI5Mg==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449385292", "bodyText": "oh misread, just inline this so we create the exception when we pass it to completeWithErrorResponse.", "author": "ajsutton", "createdAt": "2020-07-03T05:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NDYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NDc2Mg==", "url": "https://github.com/ConsenSys/teku/pull/2309#discussion_r449384762", "body": "```suggestion\r\n    }\r\n    if (message.getCount().compareTo(UnsignedLong.valueOf(MAX_REQUEST_BLOCKS)) > 0) {\r\n      callback.completeWithErrorResponse(TOO_MANY_BLOCKS);\r\n      return;\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } else if (message.getCount().compareTo(UnsignedLong.valueOf(MAX_REQUEST_BLOCKS)) > 0) {\n          \n          \n            \n                  callback.completeWithErrorResponse(TOO_MANY_BLOCKS);\n          \n          \n            \n                }\n          \n          \n            \n                }\n          \n          \n            \n                if (message.getCount().compareTo(UnsignedLong.valueOf(MAX_REQUEST_BLOCKS)) > 0) {\n          \n          \n            \n                  callback.completeWithErrorResponse(TOO_MANY_BLOCKS);\n          \n          \n            \n                  return;\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (message<span class=\"pl-k\">.</span>getCount()<span class=\"pl-k\">.</span>compareTo(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-c1\">MAX_REQUEST_BLOCKS</span>)) <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      callback<span class=\"pl-k\">.</span>completeWithErrorResponse(<span class=\"pl-c1\">TOO_MANY_BLOCKS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (message<span class=\"pl-k\">.</span>getCount()<span class=\"pl-k\">.</span>compareTo(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-c1\">MAX_REQUEST_BLOCKS</span>)) <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      callback<span class=\"pl-k\">.</span>completeWithErrorResponse(<span class=\"pl-c1\">TOO_MANY_BLOCKS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-03T05:37:56Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -62,12 +67,14 @@ public void onIncomingMessage(\n     LOG.trace(\n         \"Peer {} requested {} BeaconBlocks starting at slot {} with step {}\",\n         peer.getId(),\n-        message.getStartSlot(),\n         message.getCount(),\n+        message.getStartSlot(),\n         message.getStep());\n     if (message.getStep().compareTo(ONE) < 0) {\n       callback.completeWithErrorResponse(INVALID_STEP);\n       return;\n+    } else if (message.getCount().compareTo(UnsignedLong.valueOf(MAX_REQUEST_BLOCKS)) > 0) {\n+      callback.completeWithErrorResponse(TOO_MANY_BLOCKS);\n     }", "originalCommit": "bb4fe53e68179ad9fabfbfadc28b06c18ba8e168", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9662094defbdb1ef776c9f7f3919525a894504e2", "url": "https://github.com/ConsenSys/teku/commit/9662094defbdb1ef776c9f7f3919525a894504e2", "message": "Update networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-07-03T06:11:33Z", "type": "commit"}, {"oid": "d9b1a0e64a35b95df1f6f8b9dcc121ffe12795c1", "url": "https://github.com/ConsenSys/teku/commit/d9b1a0e64a35b95df1f6f8b9dcc121ffe12795c1", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-03T06:30:18Z", "type": "commit"}]}