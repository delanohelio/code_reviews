{"pr_number": 2463, "pr_title": "Disconnect from peer when beacon blocks by range blocks are out of order", "pr_author": "cemozerr", "pr_createdAt": "2020-07-28T15:26:50Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2463", "timeline": [{"oid": "0ad1ccbb66966cd1d47548fc3b0ba457a25d5b3b", "url": "https://github.com/ConsenSys/teku/commit/0ad1ccbb66966cd1d47548fc3b0ba457a25d5b3b", "message": "Disconnect from peer when beacon blocks by range blocks are out of order", "committedDate": "2020-07-28T15:22:56Z", "type": "commit"}, {"oid": "068bbaacebe56956dcaf89bd0498a314c189beb1", "url": "https://github.com/ConsenSys/teku/commit/068bbaacebe56956dcaf89bd0498a314c189beb1", "message": "Tiny refactor", "committedDate": "2020-07-28T15:28:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MzA5MQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461693091", "body": "Would be nice to include peer info here, if possible:\r\n```suggestion\r\n        String.format(\"Received invalid response from peer %s.  Peer returned blocks at slots %s, %s out of order. \"\r\n```", "bodyText": "Would be nice to include peer info here, if possible:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Unable to import block due to wrong block order. Last imported block number: \"\n          \n          \n            \n                    String.format(\"Received invalid response from peer %s.  Peer returned blocks at slots %s, %s out of order. \"", "bodyHTML": "<p dir=\"auto\">Would be nice to include peer info here, if possible:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x x-last\">Unable to import block due to wrong block order. Last imported block number:</span> <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">Received invalid response from peer %s.  Peer returned blocks at slots %s, %s out of order.</span> <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-07-28T15:57:38Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/OutOfOrderException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.sync;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import tech.pegasys.teku.networking.eth2.rpc.core.InvalidResponseException;\n+\n+public class OutOfOrderException extends InvalidResponseException {\n+\n+  public OutOfOrderException(UnsignedLong lastBlockNumber, UnsignedLong newBlockNumber) {\n+    super(\n+        \"Unable to import block due to wrong block order. Last imported block number: \"", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2MTA0OQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461961049", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-07-29T00:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MzA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDcwOQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461694709", "body": "Would be helpful to make it clear this error is specific to the BlocksByRange response:\r\n```suggestion\r\npublic class BlocksByRangeResponseOutOfOrderException extends InvalidResponseException {\r\n```", "bodyText": "Would be helpful to make it clear this error is specific to the BlocksByRange response:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class OutOfOrderException extends InvalidResponseException {\n          \n          \n            \n            public class BlocksByRangeResponseOutOfOrderException extends InvalidResponseException {", "bodyHTML": "<p dir=\"auto\">Would be helpful to make it clear this error is specific to the BlocksByRange response:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">OutOfOrderException</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">InvalidResponseException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">BlocksByRangeResponseOutOfOrderException</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">InvalidResponseException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-07-28T15:59:59Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/OutOfOrderException.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.sync;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import tech.pegasys.teku.networking.eth2.rpc.core.InvalidResponseException;\n+\n+public class OutOfOrderException extends InvalidResponseException {", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2MTMxOA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461961318", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-07-29T00:02:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NDcwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NjIyOQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461696229", "body": "```suggestion\r\n      return PeerSyncResult.INVALID_RESPONSE;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return PeerSyncResult.WRONG_ORDERING;\n          \n          \n            \n                  return PeerSyncResult.INVALID_RESPONSE;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">PeerSyncResult</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">WRONG_ORDERING</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">PeerSyncResult</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">INVALID_RESPONSE</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-07-28T16:02:03Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/PeerSync.java", "diffHunk": "@@ -171,9 +171,16 @@ private PeerSyncResult handleFailedRequestToPeer(Eth2Peer peer, Throwable err) {\n         return PeerSyncResult.IMPORT_FAILED;\n       }\n     }\n+\n     if (rootException instanceof CancellationException) {\n       return PeerSyncResult.CANCELLED;\n     }\n+\n+    if (rootException instanceof OutOfOrderException) {\n+      disconnectFromPeer(peer);\n+      return PeerSyncResult.WRONG_ORDERING;", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5NzQ1Nw==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461697457", "body": "Would also be a good idea to check that parent root matches up with the previous block root if the step == 1", "bodyText": "Would also be a good idea to check that parent root matches up with the previous block root if the step == 1", "bodyHTML": "<p dir=\"auto\">Would also be a good idea to check that parent root matches up with the previous block root if the step == 1</p>", "author": "mbaxter", "createdAt": "2020-07-28T16:03:58Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/PeerSyncBlockRequest.java", "diffHunk": "@@ -37,7 +37,15 @@ public PeerSyncBlockRequest(\n \n   @Override\n   public SafeFuture<?> onResponse(final SignedBeaconBlock response) {\n-    slotOfLastBlock = Optional.of(response.getSlot());\n+    UnsignedLong newBlockSlot = response.getSlot();\n+    if (maybeSlotOfLastBlock.isPresent()) {\n+      UnsignedLong slotOfLastBlock = maybeSlotOfLastBlock.get();\n+      if (newBlockSlot.compareTo(slotOfLastBlock) <= 0) {\n+        throw new OutOfOrderException(slotOfLastBlock, newBlockSlot);\n+      }", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwMTIwNQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461701205", "body": "There are some other validations we should probably do as well:\r\n* Check that the block slot is within the range we requested\r\n* Check that the block slot matches the step we requested.  Something like: `(blockSlot - startSlot) % step == 0`", "bodyText": "There are some other validations we should probably do as well:\n\nCheck that the block slot is within the range we requested\nCheck that the block slot matches the step we requested.  Something like: (blockSlot - startSlot) % step == 0", "bodyHTML": "<p dir=\"auto\">There are some other validations we should probably do as well:</p>\n<ul dir=\"auto\">\n<li>Check that the block slot is within the range we requested</li>\n<li>Check that the block slot matches the step we requested.  Something like: <code>(blockSlot - startSlot) % step == 0</code></li>\n</ul>", "author": "mbaxter", "createdAt": "2020-07-28T16:09:24Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/PeerSyncBlockRequest.java", "diffHunk": "@@ -37,7 +37,15 @@ public PeerSyncBlockRequest(\n \n   @Override\n   public SafeFuture<?> onResponse(final SignedBeaconBlock response) {\n-    slotOfLastBlock = Optional.of(response.getSlot());\n+    UnsignedLong newBlockSlot = response.getSlot();\n+    if (maybeSlotOfLastBlock.isPresent()) {\n+      UnsignedLong slotOfLastBlock = maybeSlotOfLastBlock.get();\n+      if (newBlockSlot.compareTo(slotOfLastBlock) <= 0) {\n+        throw new OutOfOrderException(slotOfLastBlock, newBlockSlot);\n+      }\n+    }", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk3ODk2Mw==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461978963", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-07-29T01:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwMTIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwMzAxNA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461703014", "body": "Would be nice to move these validations into `Eth2Peer` if possible so that the application logic doesn't need to worry about low-level validations that should apply for all blocksByRange requests.", "bodyText": "Would be nice to move these validations into Eth2Peer if possible so that the application logic doesn't need to worry about low-level validations that should apply for all blocksByRange requests.", "bodyHTML": "<p dir=\"auto\">Would be nice to move these validations into <code>Eth2Peer</code> if possible so that the application logic doesn't need to worry about low-level validations that should apply for all blocksByRange requests.</p>", "author": "mbaxter", "createdAt": "2020-07-28T16:12:05Z", "path": "sync/src/main/java/tech/pegasys/teku/sync/PeerSyncBlockRequest.java", "diffHunk": "@@ -37,7 +37,15 @@ public PeerSyncBlockRequest(\n \n   @Override\n   public SafeFuture<?> onResponse(final SignedBeaconBlock response) {\n-    slotOfLastBlock = Optional.of(response.getSlot());\n+    UnsignedLong newBlockSlot = response.getSlot();\n+    if (maybeSlotOfLastBlock.isPresent()) {\n+      UnsignedLong slotOfLastBlock = maybeSlotOfLastBlock.get();\n+      if (newBlockSlot.compareTo(slotOfLastBlock) <= 0) {", "originalCommit": "d709d6c6bcefb7b3dee6751120394fbd51974a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2NDE5NA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r461964194", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-07-29T00:11:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcwMzAxNA=="}], "type": "inlineReview"}, {"oid": "d352f1f0f8d0bf200e0a79eeef22b95c0a476c41", "url": "https://github.com/ConsenSys/teku/commit/d352f1f0f8d0bf200e0a79eeef22b95c0a476c41", "message": "Move validation to Eth2Peer", "committedDate": "2020-07-29T01:05:52Z", "type": "commit"}, {"oid": "d352f1f0f8d0bf200e0a79eeef22b95c0a476c41", "url": "https://github.com/ConsenSys/teku/commit/d352f1f0f8d0bf200e0a79eeef22b95c0a476c41", "message": "Move validation to Eth2Peer", "committedDate": "2020-07-29T01:05:52Z", "type": "forcePushed"}, {"oid": "dcdcaded0e9a31b18d82636c6a7df14e3bcc640c", "url": "https://github.com/ConsenSys/teku/commit/dcdcaded0e9a31b18d82636c6a7df14e3bcc640c", "message": "Add unchecked annotation", "committedDate": "2020-07-29T01:08:47Z", "type": "commit"}, {"oid": "40dd7b98170df116e190212dca627de98ba27d12", "url": "https://github.com/ConsenSys/teku/commit/40dd7b98170df116e190212dca627de98ba27d12", "message": "Run spotless", "committedDate": "2020-07-29T01:13:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MDUwOQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r462360509", "body": "This should probably now be:\r\n```suggestion\r\n      throw new BlocksByRangeResponseInvalidResponseException(peer, startSlot, endSlot);\r\n```\r\n\r\nOr else, we could add various specific exception types for each type of failure.", "bodyText": "This should probably now be:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\n          \n          \n            \n                  throw new BlocksByRangeResponseInvalidResponseException(peer, startSlot, endSlot);\n          \n      \n    \n    \n  \n\nOr else, we could add various specific exception types for each type of failure.", "bodyHTML": "<p dir=\"auto\">This should probably now be:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">BlocksByRangeResponseOutOfOrderException</span>(peer, startSlot, endSlot);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">BlocksByRangeResponseInvalidResponseException</span>(peer, startSlot, endSlot);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Or else, we could add various specific exception types for each type of failure.</p>", "author": "mbaxter", "createdAt": "2020-07-29T14:50:58Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeListenerWrapper.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.Optional;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.networking.eth2.rpc.core.ResponseStreamListener;\n+import tech.pegasys.teku.networking.p2p.peer.Peer;\n+\n+public class BlocksByRangeListenerWrapper implements ResponseStreamListener<SignedBeaconBlock> {\n+\n+  private final Peer peer;\n+  private final ResponseStreamListener<SignedBeaconBlock> blockResponseListener;\n+  private final UnsignedLong startSlot;\n+  private final UnsignedLong endSlot;\n+  private final UnsignedLong step;\n+\n+  private Optional<UnsignedLong> maybeSlotOfLastBlock = Optional.empty();\n+\n+  public BlocksByRangeListenerWrapper(\n+      Peer peer,\n+      ResponseStreamListener<SignedBeaconBlock> blockResponseListener,\n+      UnsignedLong startSlot,\n+      UnsignedLong count,\n+      UnsignedLong step) {\n+    this.peer = peer;\n+    this.blockResponseListener = blockResponseListener;\n+    this.startSlot = startSlot;\n+    this.step = step;\n+    this.endSlot = startSlot.plus(step.times(count));\n+  }\n+\n+  @Override\n+  public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n+    UnsignedLong blockSlot = response.getSlot();\n+\n+    if (!blockSlotIsInRange(blockSlot)\n+        || !blockSlotMatchesTheStep(blockSlot)\n+        || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n+      throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);", "originalCommit": "40dd7b98170df116e190212dca627de98ba27d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI4ODc2Ng==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r471288766", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-08-17T07:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2MDUwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mjg2MA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r462362860", "body": "We should probably pass in a specific error message - this is no longer true wrt some of the checks we're running.", "bodyText": "We should probably pass in a specific error message - this is no longer true wrt some of the checks we're running.", "bodyHTML": "<p dir=\"auto\">We should probably pass in a specific error message - this is no longer true wrt some of the checks we're running.</p>", "author": "mbaxter", "createdAt": "2020-07-29T14:54:07Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeResponseOutOfOrderException.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import tech.pegasys.teku.networking.eth2.rpc.core.InvalidResponseException;\n+import tech.pegasys.teku.networking.p2p.peer.Peer;\n+\n+public class BlocksByRangeResponseOutOfOrderException extends InvalidResponseException {\n+\n+  public BlocksByRangeResponseOutOfOrderException(\n+      Peer peer, UnsignedLong startSlot, UnsignedLong endSlot) {\n+    super(\n+        String.format(\n+            \"Received invalid response from peer %s.  Peer returned blocks at slots %s, %s out of order. \",", "originalCommit": "40dd7b98170df116e190212dca627de98ba27d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI4ODcyMw==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r471288723", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-08-17T07:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2Mjg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDI5MA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r462374290", "body": "I think this method would be a bit safer / better future-proofed if we return failed futures on error rather than throwing directly:\r\n```suggestion\r\n  public SafeFuture<?> onResponse(SignedBeaconBlock response) {\r\n       return SafeFuture.of(() -> {\r\n      UnsignedLong blockSlot = response.getSlot();\r\n      if (!blockSlotIsInRange(blockSlot)\r\n        || !blockSlotMatchesTheStep(blockSlot)\r\n        || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\r\n        throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\r\n      }\r\n\r\n      maybeSlotOfLastBlock = Optional.of(blockSlot);\r\n      return blockResponseListener.onResponse(response);\r\n    });\r\n  }\r\n```", "bodyText": "I think this method would be a bit safer / better future-proofed if we return failed futures on error rather than throwing directly:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n          \n          \n            \n                UnsignedLong blockSlot = response.getSlot();\n          \n          \n            \n            \n          \n          \n            \n                if (!blockSlotIsInRange(blockSlot)\n          \n          \n            \n                    || !blockSlotMatchesTheStep(blockSlot)\n          \n          \n            \n                    || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n          \n          \n            \n                  throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                maybeSlotOfLastBlock = Optional.of(blockSlot);\n          \n          \n            \n                return blockResponseListener.onResponse(response);\n          \n          \n            \n              }\n          \n          \n            \n              public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n          \n          \n            \n                   return SafeFuture.of(() -> {\n          \n          \n            \n                  UnsignedLong blockSlot = response.getSlot();\n          \n          \n            \n                  if (!blockSlotIsInRange(blockSlot)\n          \n          \n            \n                    || !blockSlotMatchesTheStep(blockSlot)\n          \n          \n            \n                    || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n          \n          \n            \n                    throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\n          \n          \n            \n                  }\n          \n          \n            \n            \n          \n          \n            \n                  maybeSlotOfLastBlock = Optional.of(blockSlot);\n          \n          \n            \n                  return blockResponseListener.onResponse(response);\n          \n          \n            \n                });\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">I think this method would be a bit safer / better future-proofed if we return failed futures on error rather than throwing directly:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">SafeFuture&lt;?&gt;</span> onResponse(<span class=\"pl-smi\">SignedBeaconBlock</span> response) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">UnsignedLong</span> blockSlot <span class=\"pl-k\">=</span> response<span class=\"pl-k\">.</span>getSlot();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>blockSlotIsInRange(blockSlot)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>blockSlotMatchesTheStep(blockSlot)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlocksByRangeResponseOutOfOrderException</span>(peer, startSlot, endSlot);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    maybeSlotOfLastBlock <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(blockSlot);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> blockResponseListener<span class=\"pl-k\">.</span>onResponse(response);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">SafeFuture&lt;?&gt;</span> onResponse(<span class=\"pl-smi\">SignedBeaconBlock</span> response) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">       <span class=\"pl-k\">return</span> <span class=\"pl-smi\">SafeFuture</span><span class=\"pl-k\">.</span>of(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">UnsignedLong</span> blockSlot <span class=\"pl-k\">=</span> response<span class=\"pl-k\">.</span>getSlot();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>blockSlotIsInRange(blockSlot)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>blockSlotMatchesTheStep(blockSlot)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlocksByRangeResponseOutOfOrderException</span>(peer, startSlot, endSlot);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      maybeSlotOfLastBlock <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(blockSlot);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> blockResponseListener<span class=\"pl-k\">.</span>onResponse(response);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-07-29T15:09:18Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeListenerWrapper.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.Optional;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.networking.eth2.rpc.core.ResponseStreamListener;\n+import tech.pegasys.teku.networking.p2p.peer.Peer;\n+\n+public class BlocksByRangeListenerWrapper implements ResponseStreamListener<SignedBeaconBlock> {\n+\n+  private final Peer peer;\n+  private final ResponseStreamListener<SignedBeaconBlock> blockResponseListener;\n+  private final UnsignedLong startSlot;\n+  private final UnsignedLong endSlot;\n+  private final UnsignedLong step;\n+\n+  private Optional<UnsignedLong> maybeSlotOfLastBlock = Optional.empty();\n+\n+  public BlocksByRangeListenerWrapper(\n+      Peer peer,\n+      ResponseStreamListener<SignedBeaconBlock> blockResponseListener,\n+      UnsignedLong startSlot,\n+      UnsignedLong count,\n+      UnsignedLong step) {\n+    this.peer = peer;\n+    this.blockResponseListener = blockResponseListener;\n+    this.startSlot = startSlot;\n+    this.step = step;\n+    this.endSlot = startSlot.plus(step.times(count));\n+  }\n+\n+  @Override\n+  public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n+    UnsignedLong blockSlot = response.getSlot();\n+\n+    if (!blockSlotIsInRange(blockSlot)\n+        || !blockSlotMatchesTheStep(blockSlot)\n+        || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n+      throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\n+    }\n+\n+    maybeSlotOfLastBlock = Optional.of(blockSlot);\n+    return blockResponseListener.onResponse(response);\n+  }", "originalCommit": "40dd7b98170df116e190212dca627de98ba27d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2MzEwMg==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r471263102", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-08-17T06:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NjQ1Nw==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r462376457", "body": "(nit). You should be able to do something like:\r\n```suggestion\r\n    SafeFuture<?> result = listenerWrapper.onResponse(block1);\r\n    assertThat(result).isCompletedExceptionally();\r\n    assertThatThrownBy(result::get).hasCauseIntanceOf(BlocksByRangeResponseOutOfOrderException.class);\r\n```", "bodyText": "(nit). You should be able to do something like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  listenerWrapper.onResponse(block1).join();\n          \n          \n            \n                } catch (final Exception e) {\n          \n          \n            \n                  assertThat(e).isInstanceOf(BlocksByRangeResponseOutOfOrderException.class);\n          \n          \n            \n                }\n          \n          \n            \n                SafeFuture<?> result = listenerWrapper.onResponse(block1);\n          \n          \n            \n                assertThat(result).isCompletedExceptionally();\n          \n          \n            \n                assertThatThrownBy(result::get).hasCauseIntanceOf(BlocksByRangeResponseOutOfOrderException.class);", "bodyHTML": "<p dir=\"auto\">(nit). You should be able to do something like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      listenerWrapper<span class=\"pl-k\">.</span>onResponse(block1)<span class=\"pl-k\">.</span>join();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">catch</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      assertThat(e)<span class=\"pl-k\">.</span>isInstanceOf(<span class=\"pl-smi\">BlocksByRangeResponseOutOfOrderException</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">SafeFuture&lt;?&gt;</span> result <span class=\"pl-k\">=</span> listenerWrapper<span class=\"pl-k\">.</span>onResponse(block1);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(result)<span class=\"pl-k\">.</span>isCompletedExceptionally();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThatThrownBy(result<span class=\"pl-k\">::</span>get)<span class=\"pl-k\">.</span>hasCauseIntanceOf(<span class=\"pl-smi\">BlocksByRangeResponseOutOfOrderException</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-07-29T15:12:12Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeListenerWrapperTest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.networking.eth2.peers.Eth2Peer;\n+import tech.pegasys.teku.networking.eth2.rpc.core.ResponseStreamListener;\n+\n+public class BlocksByRangeListenerWrapperTest {\n+  private DataStructureUtil dataStructureUtil = new DataStructureUtil();\n+  private BlocksByRangeListenerWrapper listenerWrapper;\n+  private Eth2Peer peer = mock(Eth2Peer.class);\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private ResponseStreamListener<SignedBeaconBlock> listener = mock(ResponseStreamListener.class);\n+\n+  @BeforeEach\n+  void setUp() {\n+    when(listener.onResponse(any())).thenReturn(SafeFuture.completedFuture(null));\n+  }\n+\n+  @Test\n+  void blockSlotSmallerThanFromSlot() {\n+    UnsignedLong START_SLOT = UnsignedLong.valueOf(1);\n+    UnsignedLong COUNT = UnsignedLong.valueOf(4);\n+    UnsignedLong STEP = UnsignedLong.valueOf(2);\n+    listenerWrapper = new BlocksByRangeListenerWrapper(peer, listener, START_SLOT, COUNT, STEP);\n+\n+    final SignedBeaconBlock block1 = dataStructureUtil.randomSignedBeaconBlock(0);\n+\n+    try {\n+      listenerWrapper.onResponse(block1).join();\n+    } catch (final Exception e) {\n+      assertThat(e).isInstanceOf(BlocksByRangeResponseOutOfOrderException.class);\n+    }", "originalCommit": "40dd7b98170df116e190212dca627de98ba27d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NzY1MQ==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r471267651", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-08-17T06:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NjQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NjQxOA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r462386418", "body": "Would still be good to add a parentRoot check, which I think would work similar to this check:\r\n- We remember the previous blockRoot by saving it to an `Optional` instance var: `maybeLastBlockRoot`\r\n- To validate, if `maybeLastBlockRoot.isPresent()` AND `step.equals(ONE)`, we check the current block's parentRoot against `maybeLastBlockRoot`.", "bodyText": "Would still be good to add a parentRoot check, which I think would work similar to this check:\n\nWe remember the previous blockRoot by saving it to an Optional instance var: maybeLastBlockRoot\nTo validate, if maybeLastBlockRoot.isPresent() AND step.equals(ONE), we check the current block's parentRoot against maybeLastBlockRoot.", "bodyHTML": "<p dir=\"auto\">Would still be good to add a parentRoot check, which I think would work similar to this check:</p>\n<ul dir=\"auto\">\n<li>We remember the previous blockRoot by saving it to an <code>Optional</code> instance var: <code>maybeLastBlockRoot</code></li>\n<li>To validate, if <code>maybeLastBlockRoot.isPresent()</code> AND <code>step.equals(ONE)</code>, we check the current block's parentRoot against <code>maybeLastBlockRoot</code>.</li>\n</ul>", "author": "mbaxter", "createdAt": "2020-07-29T15:25:33Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeListenerWrapper.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.Optional;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.networking.eth2.rpc.core.ResponseStreamListener;\n+import tech.pegasys.teku.networking.p2p.peer.Peer;\n+\n+public class BlocksByRangeListenerWrapper implements ResponseStreamListener<SignedBeaconBlock> {\n+\n+  private final Peer peer;\n+  private final ResponseStreamListener<SignedBeaconBlock> blockResponseListener;\n+  private final UnsignedLong startSlot;\n+  private final UnsignedLong endSlot;\n+  private final UnsignedLong step;\n+\n+  private Optional<UnsignedLong> maybeSlotOfLastBlock = Optional.empty();\n+\n+  public BlocksByRangeListenerWrapper(\n+      Peer peer,\n+      ResponseStreamListener<SignedBeaconBlock> blockResponseListener,\n+      UnsignedLong startSlot,\n+      UnsignedLong count,\n+      UnsignedLong step) {\n+    this.peer = peer;\n+    this.blockResponseListener = blockResponseListener;\n+    this.startSlot = startSlot;\n+    this.step = step;\n+    this.endSlot = startSlot.plus(step.times(count));\n+  }\n+\n+  @Override\n+  public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n+    UnsignedLong blockSlot = response.getSlot();\n+\n+    if (!blockSlotIsInRange(blockSlot)\n+        || !blockSlotMatchesTheStep(blockSlot)\n+        || !blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n+      throw new BlocksByRangeResponseOutOfOrderException(peer, startSlot, endSlot);\n+    }\n+\n+    maybeSlotOfLastBlock = Optional.of(blockSlot);\n+    return blockResponseListener.onResponse(response);\n+  }\n+\n+  private boolean blockSlotIsInRange(UnsignedLong blockSlot) {\n+    return blockSlot.compareTo(startSlot) >= 0 && blockSlot.compareTo(endSlot) <= 0;\n+  }\n+\n+  private boolean blockSlotMatchesTheStep(UnsignedLong blockSlot) {\n+    return blockSlot.minus(startSlot).mod(step).equals(UnsignedLong.ZERO);\n+  }\n+\n+  private boolean blockSlotGreaterThanPreviousBlockSlot(UnsignedLong blockSlot) {", "originalCommit": "40dd7b98170df116e190212dca627de98ba27d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI2NTQwMw==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r471265403", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-08-17T06:54:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NjQxOA=="}], "type": "inlineReview"}, {"oid": "6ad692ab6dd3170a0d5b18025bb9bf8179e07e15", "url": "https://github.com/ConsenSys/teku/commit/6ad692ab6dd3170a0d5b18025bb9bf8179e07e15", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into blocksOutOfOrder", "committedDate": "2020-08-10T01:40:57Z", "type": "commit"}, {"oid": "2e1525bb1be966b5c19cc3dc4d58be384307c07c", "url": "https://github.com/ConsenSys/teku/commit/2e1525bb1be966b5c19cc3dc4d58be384307c07c", "message": "Update to use UInt64.", "committedDate": "2020-08-10T01:47:17Z", "type": "commit"}, {"oid": "9c1a326c0b9ae97a28a82cdecefbddf43914d6d8", "url": "https://github.com/ConsenSys/teku/commit/9c1a326c0b9ae97a28a82cdecefbddf43914d6d8", "message": "Check parent root matches and return failed future instead of throwing", "committedDate": "2020-08-17T06:55:07Z", "type": "commit"}, {"oid": "e0b76c7a941850fdd40851a0a878ccb60da919cc", "url": "https://github.com/ConsenSys/teku/commit/e0b76c7a941850fdd40851a0a878ccb60da919cc", "message": "Change test failure check", "committedDate": "2020-08-17T06:59:46Z", "type": "commit"}, {"oid": "3ebde28c3b49b9741bd38fb74e1dd006eaa6db5a", "url": "https://github.com/ConsenSys/teku/commit/3ebde28c3b49b9741bd38fb74e1dd006eaa6db5a", "message": "Add specific exception enums for each failure", "committedDate": "2020-08-17T07:22:09Z", "type": "commit"}, {"oid": "a1c375ab13947fcd8b7ac46bc6d1e7269cb06f19", "url": "https://github.com/ConsenSys/teku/commit/a1c375ab13947fcd8b7ac46bc6d1e7269cb06f19", "message": "Merge branch 'master' into blocksOutOfOrder", "committedDate": "2020-08-17T07:22:58Z", "type": "commit"}, {"oid": "fc1d4658185645aa9a9178e8f5ef4eb3f10ad53b", "url": "https://github.com/ConsenSys/teku/commit/fc1d4658185645aa9a9178e8f5ef4eb3f10ad53b", "message": "Change old test to match exception", "committedDate": "2020-08-17T08:17:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5OTc0MA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r472299740", "body": "(nit / optional) We've got some nice comparison utilities now!:\r\n```suggestion\r\n    return blockSlot.isGreaterThan(lastBlockSlot);\r\n```", "bodyText": "(nit / optional) We've got some nice comparison utilities now!:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return blockSlot.compareTo(lastBlockSlot) > 0;\n          \n          \n            \n                return blockSlot.isGreaterThan(lastBlockSlot);", "bodyHTML": "<p dir=\"auto\">(nit / optional) We've got some nice comparison utilities now!:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> blockSlot<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">compareTo</span>(lastBlockSlot)<span class=\"x x-first\"> </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> blockSlot<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isGreaterThan</span>(lastBlockSlot);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-08-18T15:49:37Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BlocksByRangeListenerWrapper.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods;\n+\n+import static tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods.BlocksByRangeResponseInvalidResponseException.InvalidResponseType.BLOCK_PARENT_ROOT_DOES_NOT_MATCH;\n+import static tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods.BlocksByRangeResponseInvalidResponseException.InvalidResponseType.BLOCK_SLOT_DOES_NOT_MATCH_STEP;\n+import static tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods.BlocksByRangeResponseInvalidResponseException.InvalidResponseType.BLOCK_SLOT_NOT_GREATER_THAN_PREVIOUS_BLOCK_SLOT;\n+import static tech.pegasys.teku.networking.eth2.rpc.beaconchain.methods.BlocksByRangeResponseInvalidResponseException.InvalidResponseType.BLOCK_SLOT_NOT_IN_RANGE;\n+\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.networking.eth2.rpc.core.ResponseStreamListener;\n+import tech.pegasys.teku.networking.p2p.peer.Peer;\n+\n+public class BlocksByRangeListenerWrapper implements ResponseStreamListener<SignedBeaconBlock> {\n+\n+  private final Peer peer;\n+  private final ResponseStreamListener<SignedBeaconBlock> blockResponseListener;\n+  private final UInt64 startSlot;\n+  private final UInt64 endSlot;\n+  private final UInt64 step;\n+\n+  private Optional<Bytes32> maybeRootOfLastBlock = Optional.empty();\n+  private Optional<UInt64> maybeSlotOfLastBlock = Optional.empty();\n+\n+  public BlocksByRangeListenerWrapper(\n+      Peer peer,\n+      ResponseStreamListener<SignedBeaconBlock> blockResponseListener,\n+      UInt64 startSlot,\n+      UInt64 count,\n+      UInt64 step) {\n+    this.peer = peer;\n+    this.blockResponseListener = blockResponseListener;\n+    this.startSlot = startSlot;\n+    this.step = step;\n+    this.endSlot = startSlot.plus(step.times(count));\n+  }\n+\n+  @Override\n+  public SafeFuture<?> onResponse(SignedBeaconBlock response) {\n+    return SafeFuture.of(\n+        () -> {\n+          UInt64 blockSlot = response.getSlot();\n+          if (!blockSlotIsInRange(blockSlot)) {\n+            throw new BlocksByRangeResponseInvalidResponseException(peer, BLOCK_SLOT_NOT_IN_RANGE);\n+          }\n+\n+          if (!blockSlotMatchesTheStep(blockSlot)) {\n+            throw new BlocksByRangeResponseInvalidResponseException(\n+                peer, BLOCK_SLOT_DOES_NOT_MATCH_STEP);\n+          }\n+\n+          if (!blockSlotGreaterThanPreviousBlockSlot(blockSlot)) {\n+            throw new BlocksByRangeResponseInvalidResponseException(\n+                peer, BLOCK_SLOT_NOT_GREATER_THAN_PREVIOUS_BLOCK_SLOT);\n+          }\n+\n+          if (!blockParentRootMatches(response.getParent_root())) {\n+            throw new BlocksByRangeResponseInvalidResponseException(\n+                peer, BLOCK_PARENT_ROOT_DOES_NOT_MATCH);\n+          }\n+\n+          maybeSlotOfLastBlock = Optional.of(blockSlot);\n+          maybeRootOfLastBlock = Optional.of(response.getRoot());\n+          return blockResponseListener.onResponse(response);\n+        });\n+  }\n+\n+  private boolean blockSlotIsInRange(UInt64 blockSlot) {\n+    return blockSlot.compareTo(startSlot) >= 0 && blockSlot.compareTo(endSlot) <= 0;\n+  }\n+\n+  private boolean blockSlotMatchesTheStep(UInt64 blockSlot) {\n+    return blockSlot.minus(startSlot).mod(step).equals(UInt64.ZERO);\n+  }\n+\n+  private boolean blockSlotGreaterThanPreviousBlockSlot(UInt64 blockSlot) {\n+    if (maybeSlotOfLastBlock.isEmpty()) {\n+      return true;\n+    }\n+\n+    UInt64 lastBlockSlot = maybeSlotOfLastBlock.get();\n+    return blockSlot.compareTo(lastBlockSlot) > 0;", "originalCommit": "fc1d4658185645aa9a9178e8f5ef4eb3f10ad53b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1MTY2OA==", "url": "https://github.com/ConsenSys/teku/pull/2463#discussion_r472751668", "bodyText": "done.", "author": "cemozerr", "createdAt": "2020-08-19T06:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5OTc0MA=="}], "type": "inlineReview"}, {"oid": "1742918e24e14668e037a4af1631608500fd016f", "url": "https://github.com/ConsenSys/teku/commit/1742918e24e14668e037a4af1631608500fd016f", "message": "Use new comparison utility", "committedDate": "2020-08-19T06:21:03Z", "type": "commit"}, {"oid": "0ba4f808f41b37a7ed9101863f3eb13a7a250bf4", "url": "https://github.com/ConsenSys/teku/commit/0ba4f808f41b37a7ed9101863f3eb13a7a250bf4", "message": "Merge branch 'master' into blocksOutOfOrder", "committedDate": "2020-08-19T06:23:01Z", "type": "commit"}]}