{"pr_number": 2389, "pr_title": "add and maintain state by state root table in hot database.", "pr_author": "rolfyone", "pr_createdAt": "2020-07-20T04:34:56Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2389", "timeline": [{"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb", "url": "https://github.com/ConsenSys/teku/commit/6b352a5b91178edf930d1cb3cc08076dd21b53bb", "message": "add and maintain state by state root table in hot database.\n\n - added tests to show slots missing blocks get added\n\n - update getState to allow search by state root, currently will only work for hot states.\n\n - state by state root table is cleaned up periodically.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-20T04:34:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0NjkxOQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457046919", "body": "nit: Probably not the most accurate name.  Maybe just `putStateRoot`?", "bodyText": "nit: Probably not the most accurate name.  Maybe just putStateRoot?", "bodyHTML": "<p dir=\"auto\">nit: Probably not the most accurate name.  Maybe just <code>putStateRoot</code>?</p>", "author": "ajsutton", "createdAt": "2020-07-20T04:49:16Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/forkchoice/MutableStore.java", "diffHunk": "@@ -27,6 +29,8 @@ default void putBlockAndState(SignedBlockAndState blockAndState) {\n     putBlockAndState(blockAndState.getBlock(), blockAndState.getState());\n   }\n \n+  void putStateRootToBlockRoot(Bytes32 stateRoot, SlotAndBlockRoot slotAndBlockRoot);", "originalCommit": "6b352a5b91178edf930d1cb3cc08076dd21b53bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0NzgyOA==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457047828", "body": "nit: inline variable.", "bodyText": "nit: inline variable.", "bodyHTML": "<p dir=\"auto\">nit: inline variable.</p>", "author": "ajsutton", "createdAt": "2020-07-20T04:51:26Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -187,6 +202,45 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public SafeFuture<Optional<BeaconState>> getStateByStateRoot(final Bytes32 stateRoot) {\n+    final UpdatableStore store = getStore();\n+    if (store == null) {\n+      LOG.trace(\"No state at stateRoot {} because the store is not set\", stateRoot);\n+      return STATE_NOT_AVAILABLE;\n+    }\n+    return historicalChainData\n+        .getSlotAndBlockRootByStateRoot(stateRoot)\n+        .thenCompose(\n+            maybeSlotAndBlockRoot -> {\n+              if (maybeSlotAndBlockRoot.isEmpty()) {\n+                return STATE_NOT_AVAILABLE;\n+              }\n+              return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n+            });\n+  }\n+\n+  private SafeFuture<Optional<BeaconState>> getStateFromSlotAndBlock(\n+      final SlotAndBlockRoot slotAndBlockRoot) {\n+    return getStateByBlockRoot(slotAndBlockRoot.getBlockRoot())\n+        .thenApply(\n+            maybeState ->\n+                maybeState.map(\n+                    preState -> regenerateBeaconState(preState, slotAndBlockRoot.getSlot())));\n+  }\n+\n+  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {\n+    if (preState.getSlot().equals(slot)) {\n+      return preState;\n+    }\n+    try {\n+      final BeaconState desiredState = stateTransition.process_slots(preState, slot);\n+      return desiredState;", "originalCommit": "6b352a5b91178edf930d1cb3cc08076dd21b53bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1MDEyNQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457050125", "body": "We should probably either name this to be clear that it only contains state roots for empty slots or update `StateTransition` to also put the state root after each processed block. I kind of like the idea of `StateTransition` putting all states and then you can avoid iterating through the hot blocks in `RocksDbDatabase` to record their state roots.  Either way is fine though - not sure if there are potential issues with doing it in `StateTransition`.", "bodyText": "We should probably either name this to be clear that it only contains state roots for empty slots or update StateTransition to also put the state root after each processed block. I kind of like the idea of StateTransition putting all states and then you can avoid iterating through the hot blocks in RocksDbDatabase to record their state roots.  Either way is fine though - not sure if there are potential issues with doing it in StateTransition.", "bodyHTML": "<p dir=\"auto\">We should probably either name this to be clear that it only contains state roots for empty slots or update <code>StateTransition</code> to also put the state root after each processed block. I kind of like the idea of <code>StateTransition</code> putting all states and then you can avoid iterating through the hot blocks in <code>RocksDbDatabase</code> to record their state roots.  Either way is fine though - not sure if there are potential issues with doing it in <code>StateTransition</code>.</p>", "author": "ajsutton", "createdAt": "2020-07-20T04:56:27Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/events/StorageUpdate.java", "diffHunk": "@@ -106,4 +110,8 @@ public boolean isEmpty() {\n   public Map<UnsignedLong, VoteTracker> getVotes() {\n     return votes;\n   }\n+\n+  public Map<Bytes32, SlotAndBlockRoot> getStateRootsToBlockRoots() {\n+    return stateRootsToBlockRoots;\n+  }", "originalCommit": "6b352a5b91178edf930d1cb3cc08076dd21b53bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNTIyOQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458515229", "bodyText": "its now called stateRoots and everything that's putting into the hot storage is putting into that list, so hopefully i've resolved this comment.", "author": "rolfyone", "createdAt": "2020-07-22T03:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1MDEyNQ=="}], "type": "inlineReview"}, {"oid": "2b3b586d27fa71b4111bbce3d0a44fd0cda63255", "url": "https://github.com/ConsenSys/teku/commit/2b3b586d27fa71b4111bbce3d0a44fd0cda63255", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups", "committedDate": "2020-07-21T20:10:37Z", "type": "commit"}, {"oid": "b9cca5442541aa7316976199dc82bd9b2a08009f", "url": "https://github.com/ConsenSys/teku/commit/b9cca5442541aa7316976199dc82bd9b2a08009f", "message": "hot state roots now map to the correct block root.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-22T03:25:47Z", "type": "commit"}, {"oid": "52d81500c9894f530d7c5577e83b00de076dfe20", "url": "https://github.com/ConsenSys/teku/commit/52d81500c9894f530d7c5577e83b00de076dfe20", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups", "committedDate": "2020-07-22T03:38:25Z", "type": "commit"}, {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14", "url": "https://github.com/ConsenSys/teku/commit/b73552155ce9b04055a83cfdc55a301b52097f14", "message": "these test cases are covered fairly easily at the ChainDataProvider layer, so i'm removing these to cut down on duplication.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-22T03:50:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDI4NQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458520285", "body": "Mocking `BeaconChainUtil` is unexpected given its a test util class. I think I'd just always use the real `BeaconChainUtil`. The only place it's used is for the non-mock version anyway.", "bodyText": "Mocking BeaconChainUtil is unexpected given its a test util class. I think I'd just always use the real BeaconChainUtil. The only place it's used is for the non-mock version anyway.", "bodyHTML": "<p dir=\"auto\">Mocking <code>BeaconChainUtil</code> is unexpected given its a test util class. I think I'd just always use the real <code>BeaconChainUtil</code>. The only place it's used is for the non-mock version anyway.</p>", "author": "ajsutton", "createdAt": "2020-07-22T04:01:05Z", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java", "diffHunk": "@@ -109,10 +112,13 @@ private void setupStorage(final StorageSystem storageSystem, final boolean useMo\n     recentChainData = storageSystem.recentChainData();\n     chainBuilder = ChainBuilder.create(VALIDATOR_KEYS);\n     chainUpdater = new ChainUpdater(recentChainData, chainBuilder);\n-    this.forkChoice =\n-        useMockForkChoice\n-            ? mock(ForkChoice.class)\n-            : new ForkChoice(recentChainData, stateTransition);\n+    if (useMockForkChoice) {\n+      beaconChainUtil = mock(BeaconChainUtil.class);", "originalCommit": "b73552155ce9b04055a83cfdc55a301b52097f14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyOTE3OQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458529179", "bodyText": "its only while mocking the fork choice so that tests pass, otherwise the 'not ready' tests fail... i can investigate if there's another way to do this...", "author": "rolfyone", "createdAt": "2020-07-22T04:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMDk5NA==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458530994", "bodyText": "They passed when I ran them with the change.  Which ones were failing for you?", "author": "ajsutton", "createdAt": "2020-07-22T04:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMTEzNw==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458531137", "bodyText": "There's only a couple of tests that ever call the method that uses beaconChainUtil - the others should be unaffected (we'd still mock FockChoice just not BeaconChainUtil.", "author": "ajsutton", "createdAt": "2020-07-22T04:45:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDI4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNjUzMQ==", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458526531", "body": "```suggestion\r\n            maybeSlotAndBlockRoot ->\r\n                maybeSlotAndBlockRoot\r\n                    .map(this::getStateFromSlotAndBlock)\r\n                    .orElse(STATE_NOT_AVAILABLE));\r\n            });\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        maybeSlotAndBlockRoot -> {\n          \n          \n            \n                          if (maybeSlotAndBlockRoot.isEmpty()) {\n          \n          \n            \n                            return STATE_NOT_AVAILABLE;\n          \n          \n            \n                          }\n          \n          \n            \n                          return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n          \n          \n            \n                        });\n          \n          \n            \n                        maybeSlotAndBlockRoot ->\n          \n          \n            \n                            maybeSlotAndBlockRoot\n          \n          \n            \n                                .map(this::getStateFromSlotAndBlock)\n          \n          \n            \n                                .orElse(STATE_NOT_AVAILABLE));\n          \n          \n            \n                        });", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            maybeSlotAndBlockRoot <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (maybeSlotAndBlockRoot<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">STATE_NOT_AVAILABLE</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">return</span> getStateFromSlotAndBlock(maybeSlotAndBlockRoot<span class=\"pl-k\">.</span>get());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            maybeSlotAndBlockRoot <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                maybeSlotAndBlockRoot</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .map(<span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span>getStateFromSlotAndBlock)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .orElse(<span class=\"pl-c1\">STATE_NOT_AVAILABLE</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-22T04:26:19Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -205,6 +206,32 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public SafeFuture<Optional<BeaconState>> getStateByStateRoot(final Bytes32 stateRoot) {\n+    final UpdatableStore store = getStore();\n+    if (store == null) {\n+      LOG.trace(\"No state at stateRoot {} because the store is not set\", stateRoot);\n+      return STATE_NOT_AVAILABLE;\n+    }\n+    return historicalChainData\n+        .getSlotAndBlockRootByStateRoot(stateRoot)\n+        .thenCompose(\n+            maybeSlotAndBlockRoot -> {\n+              if (maybeSlotAndBlockRoot.isEmpty()) {\n+                return STATE_NOT_AVAILABLE;\n+              }\n+              return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n+            });", "originalCommit": "b73552155ce9b04055a83cfdc55a301b52097f14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "95f89f9ccebbcc29bc3021967c9c46e7c24c97fe", "url": "https://github.com/ConsenSys/teku/commit/95f89f9ccebbcc29bc3021967c9c46e7c24c97fe", "message": "moved SlotAndBlockRoot to :ethereum:datastructures to remove the dependency on :storage:api\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-22T05:06:01Z", "type": "commit"}, {"oid": "1f265c7bd7caf8300f72d1b911e5061b7f0de7b9", "url": "https://github.com/ConsenSys/teku/commit/1f265c7bd7caf8300f72d1b911e5061b7f0de7b9", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-07-22T05:52:52Z", "type": "commit"}, {"oid": "c3ab066b19b0cd524d5f33e450e62ca115261030", "url": "https://github.com/ConsenSys/teku/commit/c3ab066b19b0cd524d5f33e450e62ca115261030", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups", "committedDate": "2020-07-22T06:04:24Z", "type": "commit"}]}