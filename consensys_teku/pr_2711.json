{"pr_number": 2711, "pr_title": "[Issue-2566] Exit teku if eth1 service fails to start up", "pr_author": "mbaxter", "pr_createdAt": "2020-09-01T19:39:37Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2711", "timeline": [{"oid": "d00b2a0da081ac4c3cdc8a37f5bbe03e0efd3497", "url": "https://github.com/ConsenSys/teku/commit/d00b2a0da081ac4c3cdc8a37f5bbe03e0efd3497", "message": "If Eth1DepositManager fails to start, throw fatal error and exit", "committedDate": "2020-09-01T19:30:45Z", "type": "commit"}, {"oid": "505f9e8ca1f92ccd20e3104051e88a46ca04bda2", "url": "https://github.com/ConsenSys/teku/commit/505f9e8ca1f92ccd20e3104051e88a46ca04bda2", "message": "Merge branch 'master' into issue-2566/throw-error-and-exit-on-eth1-startup-failure", "committedDate": "2020-09-01T20:13:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQyNDQ3OQ==", "url": "https://github.com/ConsenSys/teku/pull/2711#discussion_r481424479", "body": "It may be worth using Guava's `Throwables.getCausalChain` so we benefit from all the details they have in iterating exception causes like loop detection.  I think it would be something like:\r\n```suggestion\r\n  public static <T extends Throwable> Optional<T> getCause(\r\n      final Throwable err, Class<T> targetType) {\r\n    return Throwables.getCausalChain(err).filter(cause -> targetType.isInstance(cause)).findFirst();\r\n  }\r\n```", "bodyText": "It may be worth using Guava's Throwables.getCausalChain so we benefit from all the details they have in iterating exception causes like loop detection.  I think it would be something like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static <T extends Throwable> Optional<T> getCause(\n          \n          \n            \n                  final Throwable err, Class<T> targetType) {\n          \n          \n            \n                Throwable current = err;\n          \n          \n            \n                while (current != null) {\n          \n          \n            \n                  if (targetType.isInstance(current)) {\n          \n          \n            \n                    return Optional.of((T) current);\n          \n          \n            \n                  }\n          \n          \n            \n                  current = current.getCause();\n          \n          \n            \n                }\n          \n          \n            \n                return Optional.empty();\n          \n          \n            \n              }\n          \n          \n            \n              public static <T extends Throwable> Optional<T> getCause(\n          \n          \n            \n                  final Throwable err, Class<T> targetType) {\n          \n          \n            \n                return Throwables.getCausalChain(err).filter(cause -> targetType.isInstance(cause)).findFirst();\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">It may be worth using Guava's <code>Throwables.getCausalChain</code> so we benefit from all the details they have in iterating exception causes like loop detection.  I think it would be something like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"28\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">T</span> extends <span class=\"pl-smi\">Throwable</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">T</span>&gt;</span> getCause(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"29\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Throwable</span> err, <span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">T</span>&gt;</span> targetType) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"30\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">Throwable</span> current <span class=\"pl-k\">=</span> err;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"31\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">while</span> (current <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"32\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (targetType<span class=\"pl-k\">.</span>isInstance(current)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"33\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of((<span class=\"pl-smi\">T</span>) current);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"34\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"35\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      current <span class=\"pl-k\">=</span> current<span class=\"pl-k\">.</span>getCause();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"36\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"38\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"28\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">T</span> extends <span class=\"pl-smi\">Throwable</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">T</span>&gt;</span> getCause(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"29\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Throwable</span> err, <span class=\"pl-k\">Class&lt;<span class=\"pl-smi\">T</span>&gt;</span> targetType) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"30\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Throwables</span><span class=\"pl-k\">.</span>getCausalChain(err)<span class=\"pl-k\">.</span>filter(cause <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> targetType<span class=\"pl-k\">.</span>isInstance(cause))<span class=\"pl-k\">.</span>findFirst();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"31\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-09-01T20:53:06Z", "path": "util/src/main/java/tech/pegasys/teku/util/exceptions/ExceptionUtil.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.util.exceptions;\n+\n+import java.util.Optional;\n+\n+public class ExceptionUtil {\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T extends Throwable> Optional<T> getCause(\n+      final Throwable err, Class<T> targetType) {\n+    Throwable current = err;\n+    while (current != null) {\n+      if (targetType.isInstance(current)) {\n+        return Optional.of((T) current);\n+      }\n+      current = current.getCause();\n+    }\n+    return Optional.empty();\n+  }", "originalCommit": "505f9e8ca1f92ccd20e3104051e88a46ca04bda2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ2MzIwOQ==", "url": "https://github.com/ConsenSys/teku/pull/2711#discussion_r481463209", "bodyText": "Used apache commons ExceptionUtils.getThrowableList() because the guava util throws if there's a loop.", "author": "mbaxter", "createdAt": "2020-09-01T22:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQyNDQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQyNTI5NA==", "url": "https://github.com/ConsenSys/teku/pull/2711#discussion_r481425294", "body": "Just to confirm, this doesn't apply when the ETH1 node is down at startup right? We should keep retrying in that case until the node comes up.  Otherwise it gets very difficult to coordinate services properly in things like docker-compose.", "bodyText": "Just to confirm, this doesn't apply when the ETH1 node is down at startup right? We should keep retrying in that case until the node comes up.  Otherwise it gets very difficult to coordinate services properly in things like docker-compose.", "bodyHTML": "<p dir=\"auto\">Just to confirm, this doesn't apply when the ETH1 node is down at startup right? We should keep retrying in that case until the node comes up.  Otherwise it gets very difficult to coordinate services properly in things like docker-compose.</p>", "author": "ajsutton", "createdAt": "2020-09-01T20:54:45Z", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -61,9 +62,12 @@ public void start() {\n         .thenCompose(\n             replayDepositsResult ->\n                 getHead().thenCompose(headBlock -> processStart(headBlock, replayDepositsResult)))\n-        .finish(\n-            () -> LOG.info(\"Eth1DepositsManager successfully ran startup sequence.\"),\n-            (err) -> LOG.fatal(\"Eth1DepositsManager unable to run startup sequence.\", err));\n+        .thenAccept(__ -> LOG.info(\"Eth1DepositsManager successfully ran startup sequence.\"))\n+        .exceptionally(\n+            (err) -> {\n+              throw new FatalServiceFailureException(getClass(), err);\n+            })", "originalCommit": "505f9e8ca1f92ccd20e3104051e88a46ca04bda2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMzAyMw==", "url": "https://github.com/ConsenSys/teku/pull/2711#discussion_r481433023", "bodyText": "good question - i'll double-check", "author": "mbaxter", "createdAt": "2020-09-01T21:09:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQyNTI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3NTk3OQ==", "url": "https://github.com/ConsenSys/teku/pull/2711#discussion_r481475979", "bodyText": "Tested manually - we keep retrying if the eth1 node isn't up.  Also added some unit tests.", "author": "mbaxter", "createdAt": "2020-09-01T22:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQyNTI5NA=="}], "type": "inlineReview"}, {"oid": "258abc1714498f5a90cd938d02fc4782239abffa", "url": "https://github.com/ConsenSys/teku/commit/258abc1714498f5a90cd938d02fc4782239abffa", "message": "Use utility to collect list of throwable causes", "committedDate": "2020-09-01T22:14:33Z", "type": "commit"}, {"oid": "f5920d7b1bed1e1dc30f3070e14de05d73c5fa75", "url": "https://github.com/ConsenSys/teku/commit/f5920d7b1bed1e1dc30f3070e14de05d73c5fa75", "message": "Add some tests to verify startup behavior", "committedDate": "2020-09-01T22:52:42Z", "type": "commit"}, {"oid": "23b9ea93ae7ac49ebe6953d54e9973c8d2953566", "url": "https://github.com/ConsenSys/teku/commit/23b9ea93ae7ac49ebe6953d54e9973c8d2953566", "message": "Merge branch 'master' into issue-2566/throw-error-and-exit-on-eth1-startup-failure", "committedDate": "2020-09-01T22:53:17Z", "type": "commit"}, {"oid": "0c21fbe0af545398e5587fa848db5f8780de3703", "url": "https://github.com/ConsenSys/teku/commit/0c21fbe0af545398e5587fa848db5f8780de3703", "message": "Fix class name", "committedDate": "2020-09-01T22:55:39Z", "type": "commit"}, {"oid": "027ebbb5197bf25d64c736046ebb54b68c16f1c8", "url": "https://github.com/ConsenSys/teku/commit/027ebbb5197bf25d64c736046ebb54b68c16f1c8", "message": "Merge branch 'master' into issue-2566/throw-error-and-exit-on-eth1-startup-failure", "committedDate": "2020-09-02T14:50:28Z", "type": "commit"}]}