{"pr_number": 1220, "pr_title": "DiscoveryService", "pr_author": "ajsutton", "pr_createdAt": "2020-02-24T04:14:16Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1220", "timeline": [{"oid": "4951f21df77e55d86af0e5b42d9446c9afef9d85", "url": "https://github.com/ConsenSys/teku/commit/4951f21df77e55d86af0e5b42d9446c9afef9d85", "message": "Generate private key in config so it's available outside LibP2PNetwork.", "committedDate": "2020-02-17T01:42:09Z", "type": "commit"}, {"oid": "ed9a68d41ba0ebdc159503ef888bbfe7690f4d74", "url": "https://github.com/ConsenSys/teku/commit/ed9a68d41ba0ebdc159503ef888bbfe7690f4d74", "message": "Require private key to be passed into NetworkConfig.", "committedDate": "2020-02-17T01:45:15Z", "type": "commit"}, {"oid": "fdc340cc8d3723309f075411a56c82935d71838a", "url": "https://github.com/ConsenSys/teku/commit/fdc340cc8d3723309f075411a56c82935d71838a", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery", "committedDate": "2020-02-23T20:51:10Z", "type": "commit"}, {"oid": "2824a1d94ff8849f79a749f890f7d7fd16acdb49", "url": "https://github.com/ConsenSys/teku/commit/2824a1d94ff8849f79a749f890f7d7fd16acdb49", "message": "Begin integration of discv5", "committedDate": "2020-02-24T04:11:52Z", "type": "commit"}, {"oid": "5d2c96a771d08c6cc5c9037db62b1799cddc6378", "url": "https://github.com/ConsenSys/teku/commit/5d2c96a771d08c6cc5c9037db62b1799cddc6378", "message": "Reduce log levels.", "committedDate": "2020-02-24T04:14:36Z", "type": "commit"}, {"oid": "1ad5ce0b3176f56ba322049a33cd00dae8588a72", "url": "https://github.com/ConsenSys/teku/commit/1ad5ce0b3176f56ba322049a33cd00dae8588a72", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery", "committedDate": "2020-02-24T04:14:54Z", "type": "commit"}, {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5", "url": "https://github.com/ConsenSys/teku/commit/f513ddd146cdc9501e0f85d710dc4bd05df649c5", "message": "Spotless.", "committedDate": "2020-02-24T04:17:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4ODgwMQ==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383388801", "body": "Should we use the generic `Service` interface?:\r\n```suggestion\r\npublic interface DiscoveryService implements Service {\r\n```", "bodyText": "Should we use the generic Service interface?:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface DiscoveryService {\n          \n          \n            \n            public interface DiscoveryService implements Service {", "bodyHTML": "<p dir=\"auto\">Should we use the generic <code>Service</code> interface?:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en\">DiscoveryService</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en\">DiscoveryService</span> <span class=\"pl-k x x-first\">implements</span><span class=\"x\"> </span><span class=\"pl-e x\">Service</span><span class=\"x x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-02-24T16:56:36Z", "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/libp2p/discovery/DiscoveryService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.libp2p.discovery;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Stream;\n+\n+public interface DiscoveryService {", "originalCommit": "f513ddd146cdc9501e0f85d710dc4bd05df649c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyMTcxMw==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383621713", "bodyText": "Service is an abstract class so the interface can't extend it, but we can use it for the implementation which makes a lot of sense.", "author": "ajsutton", "createdAt": "2020-02-25T02:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4ODgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5MzI5Mg==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383393292", "body": "Looks like the \"TCP_V4\" field can be interpreted as applying to both ipv4 and ipv6 addresses, so I think this should produce a valid record:\r\n\r\n> If no tcp6 / udp6 port is provided, the tcp / udp port applies to both IP addresses.\r\n\r\nFrom: https://github.com/ethereum/devp2p/blob/master/enr.md#record-structure", "bodyText": "Looks like the \"TCP_V4\" field can be interpreted as applying to both ipv4 and ipv6 addresses, so I think this should produce a valid record:\n\nIf no tcp6 / udp6 port is provided, the tcp / udp port applies to both IP addresses.\n\nFrom: https://github.com/ethereum/devp2p/blob/master/enr.md#record-structure", "bodyHTML": "<p dir=\"auto\">Looks like the \"TCP_V4\" field can be interpreted as applying to both ipv4 and ipv6 addresses, so I think this should produce a valid record:</p>\n<blockquote>\n<p dir=\"auto\">If no tcp6 / udp6 port is provided, the tcp / udp port applies to both IP addresses.</p>\n</blockquote>\n<p dir=\"auto\">From: <a href=\"https://github.com/ethereum/devp2p/blob/master/enr.md#record-structure\">https://github.com/ethereum/devp2p/blob/master/enr.md#record-structure</a></p>", "author": "mbaxter", "createdAt": "2020-02-24T17:04:09Z", "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/libp2p/discovery/discv5/NodeRecordConverterTest.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.libp2p.discovery.discv5;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.networking.p2p.libp2p.discovery.discv5.NodeRecordConverter.convertToDiscoveryPeer;\n+\n+import io.libp2p.core.multiformats.Multiaddr;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt64;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.IdentitySchema;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import org.ethereum.beacon.discovery.schema.NodeRecordFactory;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.networking.p2p.libp2p.discovery.DiscoveryPeer;\n+\n+class NodeRecordConverterTest {\n+\n+  private static final DiscoveryNodeId NODE_ID =\n+      new DiscoveryNodeId(\n+          Bytes.fromHexString(\n+              \"0x833246C198388F1B5E06EF1950B0A6705FBF6370E002656CDA2C6C803C06258D\"));\n+  private static final Bytes PUB_KEY =\n+      Bytes.fromHexString(\"0x0295A5A50F083697FF8557F3C6FE0CDF8E8EC2141D15F19A5A45571ED9C38CE181\");\n+  private static final Bytes IPV6_LOCALHOST =\n+      Bytes.fromHexString(\"0x00000000000000000000000000000001\");\n+\n+  @Test\n+  public void shouldNotConvertRecordWithNoIp() {\n+    assertThat(convertNodeRecordWithFields()).isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpButNoPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1}))))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpAndUdpPortButNoTcpPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.UDP_V4, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithV4IpAndV6Port() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.TCP_V6, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithV6IpAndV4Port() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V6, IPV6_LOCALHOST), new EnrField(EnrField.TCP_V4, 30303)))", "originalCommit": "f513ddd146cdc9501e0f85d710dc4bd05df649c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df121ee47110ceca20eb721fa1310b7048c2c39f", "url": "https://github.com/ConsenSys/teku/commit/df121ee47110ceca20eb721fa1310b7048c2c39f", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery", "committedDate": "2020-02-25T02:03:36Z", "type": "commit"}, {"oid": "bf554d3fe6739edc632e008ad34be7e5df9e8664", "url": "https://github.com/ConsenSys/teku/commit/bf554d3fe6739edc632e008ad34be7e5df9e8664", "message": "Use 0.3 release of discovery.\nExtend Service.", "committedDate": "2020-02-25T02:10:41Z", "type": "commit"}, {"oid": "6cae13720d26374e188bf8f352e9c80a9a3bd16e", "url": "https://github.com/ConsenSys/teku/commit/6cae13720d26374e188bf8f352e9c80a9a3bd16e", "message": "Record InetSocketAddress in DiscoveryPeer instead of a Multiaddr.", "committedDate": "2020-02-25T03:26:43Z", "type": "commit"}, {"oid": "b2408d78c2cb0b79fcc9a607269f5b74b5e28baf", "url": "https://github.com/ConsenSys/teku/commit/b2408d78c2cb0b79fcc9a607269f5b74b5e28baf", "message": "Rearrange packages.", "committedDate": "2020-02-25T03:34:11Z", "type": "commit"}, {"oid": "7670dddb2e050f20a806fb3a6e6b4a3da65e8191", "url": "https://github.com/ConsenSys/teku/commit/7670dddb2e050f20a806fb3a6e6b4a3da65e8191", "message": "DiscoveryNodeId isn't discv5 specific.", "committedDate": "2020-02-25T04:01:14Z", "type": "commit"}, {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834", "url": "https://github.com/ConsenSys/teku/commit/7cab83c90fccbec8c8ceafbee3a0d546b6814834", "message": "Spotless.", "committedDate": "2020-02-25T04:09:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0OTY0NQ==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383949645", "body": "I think this should be:\r\n```suggestion\r\n        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V4))\r\n```", "bodyText": "I think this should be:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .or(() -> addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V6))\n          \n          \n            \n                    .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V4))", "bodyHTML": "<p dir=\"auto\">I think this should be:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .or(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> addressFromFields(nodeRecord, <span class=\"pl-smi\">EnrField</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">IP_V4</span></span>, <span class=\"pl-smi\">EnrField</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">TCP_V6</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .or(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> addressFromFields(nodeRecord, <span class=\"pl-smi\">EnrField</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">IP_V6</span></span>, <span class=\"pl-smi\">EnrField</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">TCP_V4</span></span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-02-25T15:25:46Z", "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/discovery/discv5/NodeRecordConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.discovery.discv5;\n+\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.UnknownHostException;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryNodeId;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryPeer;\n+\n+public class NodeRecordConverter {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  static Optional<DiscoveryPeer> convertToDiscoveryPeer(final NodeRecord nodeRecord) {\n+    return addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V4)\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V6))\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V6))", "originalCommit": "7cab83c90fccbec8c8ceafbee3a0d546b6814834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1NDk0NA==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383954944", "bodyText": "We should probably rename TCP_V4 -> TCP and UDP_V4 -> UDP", "author": "mbaxter", "createdAt": "2020-02-25T15:33:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0OTY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE1MTE2MQ==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r384151161", "bodyText": "Yeah I misread your comment and once I had it in my head the wrong way no amount of spec reading could fix it...  Rename will have to happen in discovery and flow through.  Will try to get that into the next release.", "author": "ajsutton", "createdAt": "2020-02-25T21:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0OTY0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1OTEzNQ==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383959135", "body": "Is this valid - should we catch this?  If an IP_V4 field contains and IPV6 address?  ", "bodyText": "Is this valid - should we catch this?  If an IP_V4 field contains and IPV6 address?", "bodyHTML": "<p dir=\"auto\">Is this valid - should we catch this?  If an IP_V4 field contains and IPV6 address?</p>", "author": "mbaxter", "createdAt": "2020-02-25T15:39:50Z", "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/discovery/discv5/NodeRecordConverterTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.discovery.discv5;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.networking.p2p.discovery.discv5.NodeRecordConverter.convertToDiscoveryPeer;\n+\n+import java.net.InetSocketAddress;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt64;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.IdentitySchema;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import org.ethereum.beacon.discovery.schema.NodeRecordFactory;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryNodeId;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryPeer;\n+\n+class NodeRecordConverterTest {\n+\n+  private static final DiscoveryNodeId NODE_ID =\n+      new DiscoveryNodeId(\n+          Bytes.fromHexString(\n+              \"0x833246C198388F1B5E06EF1950B0A6705FBF6370E002656CDA2C6C803C06258D\"));\n+  private static final Bytes PUB_KEY =\n+      Bytes.fromHexString(\"0x0295A5A50F083697FF8557F3C6FE0CDF8E8EC2141D15F19A5A45571ED9C38CE181\");\n+  private static final Bytes IPV6_LOCALHOST =\n+      Bytes.fromHexString(\"0x00000000000000000000000000000001\");\n+\n+  @Test\n+  public void shouldNotConvertRecordWithNoIp() {\n+    assertThat(convertNodeRecordWithFields()).isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpButNoPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1}))))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpAndUdpPortButNoTcpPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.UDP_V4, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldUseV4IpIfV6PortSpecifiedWithNoV6Ip() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, IPV6_LOCALHOST), new EnrField(EnrField.TCP_V6, 30303)))", "originalCommit": "7cab83c90fccbec8c8ceafbee3a0d546b6814834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE0ODk2NA==", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r384148964", "bodyText": "This is a result of me having the fallback from IP_V6 to IP_V4 rather than for port.  The test has been changed around to match the now-fixed code.\nAlthough we would still work if there was an IPV6 address in a V4 field - I think I'm ok with that.  Maybe the discovery library should validate that the value it gets is actually the right number of bytes but I think it works out ok regardless - the data was signed by the node so it hasn't been tampered with and we may wind up connecting to a node that others can't because we detect the version rather than insisting it match the field.", "author": "ajsutton", "createdAt": "2020-02-25T21:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1OTEzNQ=="}], "type": "inlineReview"}, {"oid": "69c3f2d82c488668a2dcc25a50cfcd7316fe8c8c", "url": "https://github.com/ConsenSys/teku/commit/69c3f2d82c488668a2dcc25a50cfcd7316fe8c8c", "message": "Fallback to V4 port not IP.", "committedDate": "2020-02-25T21:44:43Z", "type": "commit"}, {"oid": "01d8ba43904fb48e7413f6bb9a63524a649ea3ce", "url": "https://github.com/ConsenSys/teku/commit/01d8ba43904fb48e7413f6bb9a63524a649ea3ce", "message": "Merge branch 'master' into discovery", "committedDate": "2020-02-25T21:57:45Z", "type": "commit"}, {"oid": "035704fc5fb3c0cf90337eee85b846773dc8f21c", "url": "https://github.com/ConsenSys/teku/commit/035704fc5fb3c0cf90337eee85b846773dc8f21c", "message": "Merge branch 'master' into discovery", "committedDate": "2020-02-25T23:30:50Z", "type": "commit"}]}