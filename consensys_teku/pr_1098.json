{"pr_number": 1098, "pr_title": "[BC-221] Disconnect peers advertising an invalid finalized epoch", "pr_author": "mbaxter", "pr_createdAt": "2020-01-20T20:33:14Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1098", "timeline": [{"oid": "b9270947856c1462d6275ddf70d74d541901f83e", "url": "https://github.com/ConsenSys/teku/commit/b9270947856c1462d6275ddf70d74d541901f83e", "message": "Disconnect peers advertising an invalid finalized epoch", "committedDate": "2020-01-20T20:30:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368731525", "body": "I think this will give us the slot of the best bock, not the current slot.  So if we haven't completed sync this would be a slot from the distant past and we'd disconnect most peers.  I think we want to use `get_current_slot(store)` which will give us the slot based on the time, not what blocks have been imported.", "bodyText": "I think this will give us the slot of the best bock, not the current slot.  So if we haven't completed sync this would be a slot from the distant past and we'd disconnect most peers.  I think we want to use get_current_slot(store) which will give us the slot based on the time, not what blocks have been imported.", "bodyHTML": "<p dir=\"auto\">I think this will give us the slot of the best bock, not the current slot.  So if we haven't completed sync this would be a slot from the distant past and we'd disconnect most peers.  I think we want to use <code>get_current_slot(store)</code> which will give us the slot based on the time, not what blocks have been imported.</p>", "author": "ajsutton", "createdAt": "2020-01-20T21:28:59Z", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -112,11 +114,22 @@ public static PeerChainValidator create(\n       return SafeFuture.completedFuture(true);\n     }\n \n-    // Check whether finalized checkpoints are compatible\n     final Checkpoint finalizedCheckpoint = storageClient.getStore().getFinalizedCheckpoint();\n     final UnsignedLong finalizedEpoch = finalizedCheckpoint.getEpoch();\n     final UnsignedLong remoteFinalizedEpoch = status.getFinalizedEpoch();\n+    final UnsignedLong currentEpoch = compute_epoch_at_slot(storageClient.getBestSlot());", "originalCommit": "b9270947856c1462d6275ddf70d74d541901f83e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3NzM0NA==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r369077344", "bodyText": "whoops - good catch :D", "author": "mbaxter", "createdAt": "2020-01-21T15:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0NzI0Ng==", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368747246", "body": "nit: It's probably simpler to say:\r\n```suggestion\r\n            && !remoteFinalizedEpoch.equals(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)));\r\n```\r\nPossibly slightly more accurate too if `GENESIS_BLOCK` isn't actually 0.", "bodyText": "nit: It's probably simpler to say:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);\n          \n          \n            \n                        && !remoteFinalizedEpoch.equals(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)));\n          \n      \n    \n    \n  \n\nPossibly slightly more accurate too if GENESIS_BLOCK isn't actually 0.", "bodyHTML": "<p dir=\"auto\">nit: It's probably simpler to say:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">&amp;&amp;</span> remoteFinalizedEpoch<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">compareTo</span>(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>GENESIS_EPOCH</span>))<span class=\"x x-first\"> </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k x x-first x-last\">!</span>remoteFinalizedEpoch<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">equals</span>(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>GENESIS_EPOCH</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Possibly slightly more accurate too if <code>GENESIS_BLOCK</code> isn't actually 0.</p>", "author": "ajsutton", "createdAt": "2020-01-20T22:37:45Z", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -128,6 +141,15 @@ public static PeerChainValidator create(\n     }\n   }\n \n+  private boolean remoteEpochIsInvalid(\n+      final UnsignedLong currentEpoch, final UnsignedLong remoteFinalizedEpoch) {\n+    // Remote finalized epoch is invalid if it is from the future\n+    return remoteFinalizedEpoch.compareTo(currentEpoch) > 0\n+        // Remote finalized epoch is invalid if is from the current epoch (unless we're at genesis)\n+        || (remoteFinalizedEpoch.compareTo(currentEpoch) == 0\n+            && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);", "originalCommit": "b9270947856c1462d6275ddf70d74d541901f83e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5d36fb13f45cd3491aa6ba324e69f95395f9259", "url": "https://github.com/ConsenSys/teku/commit/a5d36fb13f45cd3491aa6ba324e69f95395f9259", "message": "Simplify genesis epoch check\n\nCo-Authored-By: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-01-21T15:43:16Z", "type": "commit"}, {"oid": "49230180431e7c6c9c7b80062c5f31571b23f9d4", "url": "https://github.com/ConsenSys/teku/commit/49230180431e7c6c9c7b80062c5f31571b23f9d4", "message": "Fix current epoch calculation", "committedDate": "2020-01-21T16:06:37Z", "type": "commit"}, {"oid": "04cc66cd87e16bde5b8272c9f83aa2603384adbb", "url": "https://github.com/ConsenSys/teku/commit/04cc66cd87e16bde5b8272c9f83aa2603384adbb", "message": "Merge branch 'master' into bc-221/reject-peers-w-invalid-finalized-epoch", "committedDate": "2020-01-21T16:14:11Z", "type": "commit"}]}