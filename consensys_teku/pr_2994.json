{"pr_number": 2994, "pr_title": "implement `/eth/v1/beacon/pool/attestations` POST", "pr_author": "rolfyone", "pr_createdAt": "2020-10-16T03:41:18Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2994", "timeline": [{"oid": "bc203686dab6a974eb75e5b9833cc92c2d7372c3", "url": "https://github.com/ConsenSys/teku/commit/bc203686dab6a974eb75e5b9833cc92c2d7372c3", "message": "implement `/eth/v1/beacon/pool/attestations` POST\n\n - deprecated old `/validator/attestation` POST endpoint\n\n - switched validator client to use the new standard rest endpoint.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-10-16T03:39:35Z", "type": "commit"}, {"oid": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d", "url": "https://github.com/ConsenSys/teku/commit/2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d", "message": "implement `/eth/v1/beacon/pool/attestations` POST\n\n - deprecated old `/validator/attestation` POST endpoint\n\n - switched validator client to use the new standard rest endpoint.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-10-16T03:41:29Z", "type": "commit"}, {"oid": "1e204a7cf6bee6a8bbfb2a25069a2997aaae5dd4", "url": "https://github.com/ConsenSys/teku/commit/1e204a7cf6bee6a8bbfb2a25069a2997aaae5dd4", "message": "Merge remote-tracking branch 'upstream/master' into validator-standard-attestation-endpoints", "committedDate": "2020-10-16T03:42:41Z", "type": "commit"}, {"oid": "52f0f87b7af6e3f6df7f93ed23f4570cd62316b3", "url": "https://github.com/ConsenSys/teku/commit/52f0f87b7af6e3f6df7f93ed23f4570cd62316b3", "message": "spotless\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-10-16T03:43:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMDg3Mg==", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506030872", "body": "The attestation is already signed in this case.  Maybe\r\n```suggestion\r\n              + \"This endpoint does not protect against slashing.\",\r\n```", "bodyText": "The attestation is already signed in this case.  Maybe\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",\n          \n          \n            \n                          + \"This endpoint does not protect against slashing.\",", "bodyHTML": "<p dir=\"auto\">The attestation is already signed in this case.  Maybe</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>This endpoint does not <span class=\"x x-first x-last\">protected</span> against slashing<span class=\"x x-first x-last\">. Signing the attestation can result in a slashable offence</span>.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>This endpoint does not <span class=\"x x-first x-last\">protect</span> against slashing.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-10-16T03:43:21Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/PostAttestationData.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.INVALID_BODY_SUPPLIED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_VALIDATOR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.http.Context;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.schema.Attestation;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class PostAttestationData extends AbstractHandler {\n+  public static final String ROUTE = \"/eth/v1/beacon/pool/attestations\";\n+  private final ValidatorDataProvider provider;\n+\n+  public PostAttestationData(final DataProvider provider, final JsonProvider jsonProvider) {\n+    this(provider.getValidatorDataProvider(), jsonProvider);\n+  }\n+\n+  public PostAttestationData(\n+      final ValidatorDataProvider provider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = provider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Submit a signed attestation\",\n+      tags = {TAG_V1_VALIDATOR, TAG_VALIDATOR_REQUIRED},\n+      requestBody = @OpenApiRequestBody(content = {@OpenApiContent(from = Attestation.class)}),\n+      description =\n+          \"Submit a signed attestation to the beacon node to be validated and submitted if valid.\\n\\n\"\n+              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",", "originalCommit": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTEzNA==", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506031134", "body": "Don't we normally add a `deprecated = true` option?", "bodyText": "Don't we normally add a deprecated = true option?", "bodyHTML": "<p dir=\"auto\">Don't we normally add a <code>deprecated = true</code> option?</p>", "author": "ajsutton", "createdAt": "2020-10-16T03:44:10Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostAttestation.java", "diffHunk": "@@ -54,12 +53,13 @@ public PostAttestation(final ValidatorDataProvider provider, final JsonProvider\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.POST,\n-      summary = \"Submit a signed attestation.\",\n+      summary = \"Submit a signed attestation\",\n       tags = {TAG_VALIDATOR},\n       requestBody = @OpenApiRequestBody(content = {@OpenApiContent(from = Attestation.class)}),\n       description =\n           \"Submit a signed attestation to the beacon node to be validated and submitted if valid.\\n\\n\"\n-              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",\n+              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\\n\\n\"\n+              + \"Deprecated - use `/eth/v1/validator/attestation_data` instead.\",\n       responses = {", "originalCommit": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTQ3MA==", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506031470", "bodyText": "yep. done", "author": "rolfyone", "createdAt": "2020-10-16T03:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTEzNA=="}], "type": "inlineReview"}, {"oid": "2cf64dcad7308ea875fdc343a5a96184ed5b024a", "url": "https://github.com/ConsenSys/teku/commit/2cf64dcad7308ea875fdc343a5a96184ed5b024a", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-10-16T03:46:36Z", "type": "commit"}]}