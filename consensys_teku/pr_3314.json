{"pr_number": 3314, "pr_title": "Use ValidatorsUtil.getValidatorPubKey where possible", "pr_author": "Nashatyrev", "pr_createdAt": "2020-11-25T10:28:18Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3314", "timeline": [{"oid": "fd7ef91e11b6e6bb8992bc5b8354b3406609147c", "url": "https://github.com/ConsenSys/teku/commit/fd7ef91e11b6e6bb8992bc5b8354b3406609147c", "message": "Make Validator.getPubkey() to return Bytes48 instead of construction-expensive BLSPublicKey\nUse ValidatorsUtil.getValidatorPubKey where possible to make use of BLSPublicKey instance cache", "committedDate": "2020-11-25T10:14:24Z", "type": "commit"}, {"oid": "803cfeb706d74352860a966e1383b59cc2e4a2d1", "url": "https://github.com/ConsenSys/teku/commit/803cfeb706d74352860a966e1383b59cc2e4a2d1", "message": "Add javadoc", "committedDate": "2020-11-25T10:34:25Z", "type": "commit"}, {"oid": "d88b16c422c517e3388e0afe28cacad0df637ab6", "url": "https://github.com/ConsenSys/teku/commit/d88b16c422c517e3388e0afe28cacad0df637ab6", "message": "Fix Validator SSZ", "committedDate": "2020-11-25T11:12:47Z", "type": "commit"}, {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7", "url": "https://github.com/ConsenSys/teku/commit/e9fc54ab10669681a35c1b2620f96584690c1cc7", "message": "Fix ValidatorApiHandler.createAttesterDuties handling of invalid validatorIndex", "committedDate": "2020-11-25T11:54:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NDM4Nw==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530664387", "body": "nit: Can we make this throw `BlockProcessingException` specifically.  It shouldn't ever happen but if it does it should be the same as the signature being invalid to ensure it gets handled correctly.\r\n```suggestion\r\n        ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow(() -> new BlockProcessingException(\"Public key not found for validator \" + proposerIndex));\r\n```", "bodyText": "nit: Can we make this throw BlockProcessingException specifically.  It shouldn't ever happen but if it does it should be the same as the signature being invalid to ensure it gets handled correctly.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow();\n          \n          \n            \n                    ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow(() -> new BlockProcessingException(\"Public key not found for validator \" + proposerIndex));", "bodyHTML": "<p dir=\"auto\">nit: Can we make this throw <code>BlockProcessingException</code> specifically.  It shouldn't ever happen but if it does it should be the same as the signature being invalid to ensure it gets handled correctly.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">ValidatorsUtil</span><span class=\"pl-k\">.</span>getValidatorPubKey(state, <span class=\"pl-smi\">UInt64</span><span class=\"pl-k\">.</span>valueOf(proposerIndex))<span class=\"pl-k\">.</span>orElseThrow();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">ValidatorsUtil</span><span class=\"pl-k\">.</span>getValidatorPubKey(state, <span class=\"pl-smi\">UInt64</span><span class=\"pl-k\">.</span>valueOf(proposerIndex))<span class=\"pl-k\">.</span>orElseThrow(<span class=\"x x-first\">() </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">BlockProcessingException</span><span class=\"x\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Public key not found for validator </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> proposerIndex)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-11-25T22:01:37Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/blockvalidator/SimpleBlockValidator.java", "diffHunk": "@@ -120,13 +122,14 @@ public SimpleBlockValidator(\n \n   private void verify_block_signature(final BeaconState state, SignedBeaconBlock signed_block)\n       throws BlockProcessingException {\n-    final Validator proposer =\n-        state.getValidators().get(get_beacon_proposer_index(state, signed_block.getSlot()));\n+    final int proposerIndex = get_beacon_proposer_index(state, signed_block.getSlot());\n+    final BLSPublicKey proposerPublicKey =\n+        ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow();", "originalCommit": "e9fc54ab10669681a35c1b2620f96584690c1cc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzODUyMA==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530838520", "bodyText": "Let it be, thought that exception would still indicate internal logic malfunction cause get_beacon_proposer_index should normally return existing validator index", "author": "Nashatyrev", "createdAt": "2020-11-26T08:08:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NDM4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530667450", "body": "nit: Would be good to just return `false` here if the pub key isn't available. Little surprised we've gotten away with the current version actually as we don't appear to check the proposer index ahead of time.", "bodyText": "nit: Would be good to just return false here if the pub key isn't available. Little surprised we've gotten away with the current version actually as we don't appear to check the proposer index ahead of time.", "bodyHTML": "<p dir=\"auto\">nit: Would be good to just return <code>false</code> here if the pub key isn't available. Little surprised we've gotten away with the current version actually as we don't appear to check the proposer index ahead of time.</p>", "author": "ajsutton", "createdAt": "2020-11-25T22:09:21Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/ProposerSlashingSignatureVerifier.java", "diffHunk": "@@ -40,11 +39,7 @@ public boolean verifySignature(\n     final BeaconBlockHeader header1 = proposerSlashing.getHeader_1().getMessage();\n     final BeaconBlockHeader header2 = proposerSlashing.getHeader_2().getMessage();\n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                header1.getProposerIndex(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, header1.getProposerIndex()).orElseThrow();", "originalCommit": "e9fc54ab10669681a35c1b2620f96584690c1cc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0OTYzNw==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530849637", "bodyText": "Done. Looks like the slashing index is checked just here (i.e. when validating gossiped slashing) : \n  \n    \n      teku/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/ProposerSlashingValidator.java\n    \n    \n         Line 77\n      in\n      ae994ca\n    \n    \n    \n    \n\n        \n          \n           Optional<OperationInvalidReason> invalidReason = transitionValidator.validate(state, slashing); \n        \n    \n  \n\n\nBut is not checked when validating block slashings", "author": "Nashatyrev", "createdAt": "2020-11-26T08:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1NjIzNQ==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530856235", "bodyText": "Created the issue on this: #3319", "author": "Nashatyrev", "createdAt": "2020-11-26T08:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2Nzk3MQ==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530667971", "body": "Returning `false` here would be good too.", "bodyText": "Returning false here would be good too.", "bodyHTML": "<p dir=\"auto\">Returning <code>false</code> here would be good too.</p>", "author": "ajsutton", "createdAt": "2020-11-25T22:10:42Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/VoluntaryExitSignatureVerifier.java", "diffHunk": "@@ -34,11 +33,7 @@ public boolean verifySignature(\n     final VoluntaryExit exit = signedExit.getMessage();\n \n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                exit.getValidator_index(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, exit.getValidator_index()).orElseThrow();", "originalCommit": "e9fc54ab10669681a35c1b2620f96584690c1cc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MjQ5Mg==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530862492", "bodyText": "The similar issue as with ProposerSlashingSignatureVerifier`. Also added to the issue #3319", "author": "Nashatyrev", "createdAt": "2020-11-26T08:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2Nzk3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2ODEwNw==", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530668107", "body": "nit: Can just use \r\n```suggestion\r\n    fixedPartsList.add(getPubkey());\r\n```", "bodyText": "nit: Can just use\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fixedPartsList.addAll(Collections.singleton(getPubkey()));\n          \n          \n            \n                fixedPartsList.add(getPubkey());", "bodyHTML": "<p dir=\"auto\">nit: Can just use</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    fixedPartsList<span class=\"pl-k\">.</span><span class=\"x x-first\">addAll(</span><span class=\"pl-smi x\">Collections</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">singleton(</span>getPubkey(<span class=\"x x-first x-last\">)</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    fixedPartsList<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">add(</span>getPubkey());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-11-25T22:11:08Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/Validator.java", "diffHunk": "@@ -127,7 +129,7 @@ public int getSSZFieldCount() {\n   @Override\n   public List<Bytes> get_fixed_parts() {\n     List<Bytes> fixedPartsList = new ArrayList<>();\n-    fixedPartsList.addAll(getPubkey().get_fixed_parts());\n+    fixedPartsList.addAll(Collections.singleton(getPubkey()));", "originalCommit": "e9fc54ab10669681a35c1b2620f96584690c1cc7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8596af11603f587a622c3e039ecc8678255c22e8", "url": "https://github.com/ConsenSys/teku/commit/8596af11603f587a622c3e039ecc8678255c22e8", "message": "Throw BlocksProcessingException instead of NoSuchelementException\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-11-26T08:09:43Z", "type": "commit"}, {"oid": "7679f337aa64f39129226adc56653b863fe5aff0", "url": "https://github.com/ConsenSys/teku/commit/7679f337aa64f39129226adc56653b863fe5aff0", "message": "Just return false from verifySignature() when slashing proposer index is invalid", "committedDate": "2020-11-26T08:26:11Z", "type": "commit"}, {"oid": "d3042c92e86b6a509f420ffc2d5e0987d3c9c0df", "url": "https://github.com/ConsenSys/teku/commit/d3042c92e86b6a509f420ffc2d5e0987d3c9c0df", "message": "Shorten the code\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-11-26T08:40:07Z", "type": "commit"}, {"oid": "ed0b0c699878bce301426294320dd58107072651", "url": "https://github.com/ConsenSys/teku/commit/ed0b0c699878bce301426294320dd58107072651", "message": "Just return false from verifySignature() when voluntary exit validator index is invalid", "committedDate": "2020-11-26T08:46:59Z", "type": "commit"}, {"oid": "dabded072f40eaaed51b5b611935321e2c1e8e25", "url": "https://github.com/ConsenSys/teku/commit/dabded072f40eaaed51b5b611935321e2c1e8e25", "message": "Merge branch 'fix/use-validator-pubkey-cache' of https://github.com/Nashatyrev/artemis into fix/use-validator-pubkey-cache", "committedDate": "2020-11-26T08:48:44Z", "type": "commit"}, {"oid": "9ab78ffbbd6fad063a9d702734e298cc288e9d20", "url": "https://github.com/ConsenSys/teku/commit/9ab78ffbbd6fad063a9d702734e298cc288e9d20", "message": "Merge branch 'master' into fix/use-validator-pubkey-cache", "committedDate": "2020-11-26T08:49:37Z", "type": "commit"}, {"oid": "0f2e03da07c7a088082563f0efee708fd4a798fe", "url": "https://github.com/ConsenSys/teku/commit/0f2e03da07c7a088082563f0efee708fd4a798fe", "message": "Sptoless", "committedDate": "2020-11-26T09:06:04Z", "type": "commit"}]}