{"pr_number": 2117, "pr_title": "[Issue-2101] Minimize finalized state regeneration", "pr_author": "mbaxter", "pr_createdAt": "2020-06-10T20:04:47Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2117", "timeline": [{"oid": "810b78f132bc6e313994bd057804ec1af83d32f1", "url": "https://github.com/ConsenSys/teku/commit/810b78f132bc6e313994bd057804ec1af83d32f1", "message": "Move finalized state regeneration to Database", "committedDate": "2020-06-10T17:39:11Z", "type": "commit"}, {"oid": "b49be4f8aa623d794ea965c31df6297b7a2c9500", "url": "https://github.com/ConsenSys/teku/commit/b49be4f8aa623d794ea965c31df6297b7a2c9500", "message": "Bundle finalized data together", "committedDate": "2020-06-10T18:51:24Z", "type": "commit"}, {"oid": "fcddb7c35d8ffe712329b9bb9293fa9c2e05104a", "url": "https://github.com/ConsenSys/teku/commit/fcddb7c35d8ffe712329b9bb9293fa9c2e05104a", "message": "Simplify var names", "committedDate": "2020-06-10T19:34:53Z", "type": "commit"}, {"oid": "02ec9d3934b4a5c1e3a538bacf6b2db76243dd63", "url": "https://github.com/ConsenSys/teku/commit/02ec9d3934b4a5c1e3a538bacf6b2db76243dd63", "message": "Add tests, fix knownBlock handling", "committedDate": "2020-06-10T19:55:46Z", "type": "commit"}, {"oid": "744022beaa59995c0d4815ebbb07c8ccddd6faea", "url": "https://github.com/ConsenSys/teku/commit/744022beaa59995c0d4815ebbb07c8ccddd6faea", "message": "Ignore ordering differences", "committedDate": "2020-06-10T20:44:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDgzMw==", "url": "https://github.com/ConsenSys/teku/pull/2117#discussion_r438450833", "body": "```suggestion\r\n        assertThat(resultMap.get(root)).isSameAs(expectedResult.get(root));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(resultMap.get(root) == expectedResult.get(root)).isTrue();\n          \n          \n            \n                    assertThat(resultMap.get(root)).isSameAs(expectedResult.get(root));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(resultMap<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\"> </span><span class=\"pl-k x\">==</span><span class=\"x x-last\"> </span>expectedResult<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isTrue(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(resultMap<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isSameAs(</span>expectedResult<span class=\"pl-k\">.</span>get(root));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-10T22:54:25Z", "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/StateGeneratorTest.java", "diffHunk": "@@ -215,7 +230,19 @@ private void testRegenerateAllStates(\n     assertThat(resultMap.size()).isEqualTo(results.size());\n     // Check that our expectations are met\n     assertThat(resultMap.size()).isEqualTo(expectedResult.size());\n-    assertThat(resultMap).isEqualToComparingFieldByField(expectedResult);\n+    assertThat(resultMap).containsExactlyInAnyOrderEntriesOf(expectedResult);\n+    // Check states were / were not regenerated as expected\n+    if (supplyAllKnownStates) {\n+      // No states should be regenerated - they should all match the known state\n+      for (Bytes32 root : expectedResult.keySet()) {\n+        assertThat(resultMap.get(root) == expectedResult.get(root)).isTrue();", "originalCommit": "744022beaa59995c0d4815ebbb07c8ccddd6faea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2MjE1Nw==", "url": "https://github.com/ConsenSys/teku/pull/2117#discussion_r438862157", "bodyText": "thanks - I knew there was an API for this but couldn't find it!", "author": "mbaxter", "createdAt": "2020-06-11T15:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDgzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MDkxMg==", "url": "https://github.com/ConsenSys/teku/pull/2117#discussion_r438450912", "body": "```suggestion\r\n        assertThat(resultMap.get(root)).isNotSameAs(expectedResult.get(root));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(resultMap.get(root) == expectedResult.get(root)).isFalse();\n          \n          \n            \n                    assertThat(resultMap.get(root)).isNotSameAs(expectedResult.get(root));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(resultMap<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\"> </span><span class=\"pl-k x\">==</span><span class=\"x x-last\"> </span>expectedResult<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isFalse(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(resultMap<span class=\"pl-k\">.</span>get(root)<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isNotSameAs(</span>expectedResult<span class=\"pl-k\">.</span>get(root));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-10T22:54:39Z", "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/StateGeneratorTest.java", "diffHunk": "@@ -215,7 +230,19 @@ private void testRegenerateAllStates(\n     assertThat(resultMap.size()).isEqualTo(results.size());\n     // Check that our expectations are met\n     assertThat(resultMap.size()).isEqualTo(expectedResult.size());\n-    assertThat(resultMap).isEqualToComparingFieldByField(expectedResult);\n+    assertThat(resultMap).containsExactlyInAnyOrderEntriesOf(expectedResult);\n+    // Check states were / were not regenerated as expected\n+    if (supplyAllKnownStates) {\n+      // No states should be regenerated - they should all match the known state\n+      for (Bytes32 root : expectedResult.keySet()) {\n+        assertThat(resultMap.get(root) == expectedResult.get(root)).isTrue();\n+      }\n+    } else if (cacheSize == 0) {\n+      // All states should be regenerated and should not match the known states\n+      for (Bytes32 root : expectedResult.keySet()) {\n+        assertThat(resultMap.get(root) == expectedResult.get(root)).isFalse();", "originalCommit": "744022beaa59995c0d4815ebbb07c8ccddd6faea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1MjMyNg==", "url": "https://github.com/ConsenSys/teku/pull/2117#discussion_r438452326", "body": "```suggestion\r\n    final Map<Bytes32, BeaconState> states = new HashMap<>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final HashMap<Bytes32, BeaconState> states = new HashMap<>();\n          \n          \n            \n                final Map<Bytes32, BeaconState> states = new HashMap<>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">HashMap</span>&lt;<span class=\"pl-smi\">Bytes32</span>, <span class=\"pl-smi\">BeaconState</span>&gt;</span> states <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">Map</span>&lt;<span class=\"pl-smi\">Bytes32</span>, <span class=\"pl-smi\">BeaconState</span>&gt;</span> states <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-10T22:59:05Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdates.java", "diffHunk": "@@ -149,17 +154,18 @@ public static StoreTransactionUpdates calculate(final Store baseStore, final Tra\n       throw new IllegalStateException(\"Unable to retrieve all finalized blocks\");\n     }\n \n-    // Collect states in order and return finalized chain data map\n-    // State collection is done separately to avoid repeatedly regenerating state by processing\n-    // states in reverse-order.  See: Store.getOrGenerateBlockState\n-    Collections.reverse(blocks);\n-    return blocks.stream()\n-        .map(\n-            block -> {\n-              final BeaconState state = tx.getBlockState(block.getRoot());\n-              return new SignedBlockAndState(block, state);\n-            })\n-        .collect(Collectors.toMap(SignedBlockAndState::getRoot, Function.identity()));\n+    return blocks;\n+  }\n+\n+  private static Map<Bytes32, BeaconState> collectFinalizedStates(\n+      final Store.Transaction tx, final Set<SignedBeaconBlock> finalizedBlocks) {\n+    final HashMap<Bytes32, BeaconState> states = new HashMap<>();", "originalCommit": "744022beaa59995c0d4815ebbb07c8ccddd6faea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "985f54c452b740a6abbc5b1216247051b2ee7b62", "url": "https://github.com/ConsenSys/teku/commit/985f54c452b740a6abbc5b1216247051b2ee7b62", "message": "Address review comments", "committedDate": "2020-06-11T15:18:52Z", "type": "commit"}, {"oid": "9e978b343510d4c5f2d5a3991a45eb8e38b16b0a", "url": "https://github.com/ConsenSys/teku/commit/9e978b343510d4c5f2d5a3991a45eb8e38b16b0a", "message": "Merge branch 'master' into issue-2101/minimize-finalized-state-regeneration", "committedDate": "2020-06-11T15:19:20Z", "type": "commit"}]}