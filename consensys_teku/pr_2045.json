{"pr_number": 2045, "pr_title": "load eth1 deposits from storage on startup", "pr_author": "rolfyone", "pr_createdAt": "2020-06-03T09:16:31Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2045", "timeline": [{"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a", "url": "https://github.com/ConsenSys/teku/commit/1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a", "message": "initial commit of startup change for deposit storage\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-03T09:15:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNjU4OA==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434426588", "body": "not a huge fan of this any ideas @ajsutton ", "bodyText": "not a huge fan of this any ideas @ajsutton", "bodyHTML": "<p dir=\"auto\">not a huge fan of this any ideas <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ajsutton/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ajsutton\">@ajsutton</a></p>", "author": "rolfyone", "createdAt": "2020-06-03T09:17:20Z", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -50,16 +50,13 @@ public Eth1DepositManager(\n     this.minimumGenesisTimeBlockFinder = minimumGenesisTimeBlockFinder;\n   }\n \n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "originalCommit": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MzcxNA==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434483714", "bodyText": "Will look through the PR properly in the morning, but yeah that's definitely wrong.  Need to find which future is being ignored and shove a .finish call on it at least to report any exceptions.", "author": "ajsutton", "createdAt": "2020-06-03T11:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNjU4OA=="}], "type": "inlineReview"}, {"oid": "5bc1e1e04efddc0d50cb3e50cccb5062577b4404", "url": "https://github.com/ConsenSys/teku/commit/5bc1e1e04efddc0d50cb3e50cccb5062577b4404", "message": "from changelist, got missed in commit.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-03T21:01:04Z", "type": "commit"}, {"oid": "1b4cea2302baced5a9b19c536bf8dc64f0a8ab59", "url": "https://github.com/ConsenSys/teku/commit/1b4cea2302baced5a9b19c536bf8dc64f0a8ab59", "message": "removed suppressWarnings annotations\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-03T21:35:41Z", "type": "commit"}, {"oid": "8f0cd14e8627a9f83ccfdd9f9c58287a7af66b2c", "url": "https://github.com/ConsenSys/teku/commit/8f0cd14e8627a9f83ccfdd9f9c58287a7af66b2c", "message": "add eth1-deposits-from-storage-enabled option, and disable by default.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-03T23:19:19Z", "type": "commit"}, {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "url": "https://github.com/ConsenSys/teku/commit/2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "message": "Merge remote-tracking branch 'upstream/master' into 1412-startup", "committedDate": "2020-06-03T23:20:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936332", "body": "If the head block isn't after the start block number, we appear to not do anything and so never start tracking head. So even when the chain progresses past our start block we won't process any new blocks.\r\n\r\nI suspect we need a `depositProcessingController.startSubscription(startBlockNumber)` in the else case for this outer if.", "bodyText": "If the head block isn't after the start block number, we appear to not do anything and so never start tracking head. So even when the chain progresses past our start block we won't process any new blocks.\nI suspect we need a depositProcessingController.startSubscription(startBlockNumber) in the else case for this outer if.", "bodyHTML": "<p dir=\"auto\">If the head block isn't after the start block number, we appear to not do anything and so never start tracking head. So even when the chain progresses past our start block we won't process any new blocks.</p>\n<p dir=\"auto\">I suspect we need a <code>depositProcessingController.startSubscription(startBlockNumber)</code> in the else case for this outer if.</p>", "author": "ajsutton", "createdAt": "2020-06-04T01:05:48Z", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();\n+    if (headBlock.getNumber().compareTo(startBlockNumber) > 0) {", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2OTMxMg==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434969312", "bodyText": "good catch.", "author": "rolfyone", "createdAt": "2020-06-04T03:18:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDY0MQ==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434980641", "bodyText": "So turns out I lied about the right solution.  If min genesis has already happened we need to run depositProcessingController.startSubscription(startBlockNumber) but if it hasn't we need to run preGenesisSubscription(startBlockNumber).", "author": "ajsutton", "createdAt": "2020-06-04T04:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjgxOA==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936818", "body": "We've got this logic in at least three places - probably worth either extracting a method for it or calculating up-front and passing the value down.", "bodyText": "We've got this logic in at least three places - probably worth either extracting a method for it or calculating up-front and passing the value down.", "bodyHTML": "<p dir=\"auto\">We've got this logic in at least three places - probably worth either extracting a method for it or calculating up-front and passing the value down.</p>", "author": "ajsutton", "createdAt": "2020-06-04T01:07:54Z", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434938091", "body": "Switch `java.util.function.Supplier` instead of the google version.  It's only the package that needs to change.\r\n```suggestion\r\nimport java.util.function.Supplier;\r\n```", "bodyText": "Switch java.util.function.Supplier instead of the google version.  It's only the package that needs to change.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.google.common.base.Supplier;\n          \n          \n            \n            import java.util.function.Supplier;", "bodyHTML": "<p dir=\"auto\">Switch <code>java.util.function.Supplier</code> instead of the google version.  It's only the package that needs to change.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\"><span class=\"x x-first x-last\">com.google.common.base</span>.Supplier</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\"><span class=\"x x-first x-last\">java.util.function</span>.Supplier</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-04T01:13:22Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.common.base.Supplier;", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2OTgxOA==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434969818", "bodyText": "what about the Suppliers? use that from google still?", "author": "rolfyone", "createdAt": "2020-06-04T03:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3MjU0OQ==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434972549", "bodyText": "Yep that still comes from the google package.", "author": "ajsutton", "createdAt": "2020-06-04T03:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDQ4Ng==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940486", "body": "nit: Couldn't we just have `depositsComplete()` return the `ReplayDepositsResult`?", "bodyText": "nit: Couldn't we just have depositsComplete() return the ReplayDepositsResult?", "bodyHTML": "<p dir=\"auto\">nit: Couldn't we just have <code>depositsComplete()</code> return the <code>ReplayDepositsResult</code>?</p>", "author": "ajsutton", "createdAt": "2020-06-04T01:23:09Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDg1Mg==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940852", "body": "```suggestion\r\n    startingBlock =\r\n        result\r\n            .getBlockNumber()\r\n            .map(number -> number.plus(UnsignedLong.ONE).bigIntegerValue())\r\n            .or(() -> Optional.of(BigInteger.valueOf(-1)));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (result.getBlockNumber().isPresent()) {\n          \n          \n            \n                  startingBlock =\n          \n          \n            \n                      Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n          \n          \n            \n                } else {\n          \n          \n            \n                  startingBlock = Optional.of(BigInteger.valueOf(-1L));\n          \n          \n            \n                }\n          \n          \n            \n                startingBlock =\n          \n          \n            \n                    result\n          \n          \n            \n                        .getBlockNumber()\n          \n          \n            \n                        .map(number -> number.plus(UnsignedLong.ONE).bigIntegerValue())\n          \n          \n            \n                        .or(() -> Optional.of(BigInteger.valueOf(-1)));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (result<span class=\"pl-k\">.</span>getBlockNumber()<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      startingBlock <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(result<span class=\"pl-k\">.</span>getBlockNumber()<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>plus(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ONE</span>)<span class=\"pl-k\">.</span>bigIntegerValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      startingBlock <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(<span class=\"pl-smi\">BigInteger</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1L</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    startingBlock <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        result</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .getBlockNumber()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .map(number <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> number<span class=\"pl-k\">.</span>plus(<span class=\"pl-smi\">UnsignedLong</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ONE</span>)<span class=\"pl-k\">.</span>bigIntegerValue())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .or(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(<span class=\"pl-smi\">BigInteger</span><span class=\"pl-k\">.</span>valueOf(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-04T01:24:44Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941381", "body": "This probably works out but the thread safety is questionable and it's causing IntelliJ to flag warnings.  Better would be to only load the current value of `startingBlock` once.\r\n```suggestion\r\n    return startingBlock.map(block -> block.compareTo(blockNumber) < 0).orElse(false)\r\n```", "bodyText": "This probably works out but the thread safety is questionable and it's causing IntelliJ to flag warnings.  Better would be to only load the current value of startingBlock once.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;\n          \n          \n            \n                return startingBlock.map(block -> block.compareTo(blockNumber) < 0).orElse(false)", "bodyHTML": "<p dir=\"auto\">This probably works out but the thread safety is questionable and it's causing IntelliJ to flag warnings.  Better would be to only load the current value of <code>startingBlock</code> once.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> startingBlock<span class=\"pl-k\">.</span><span class=\"x x-first\">isPresent() </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> startingBlock</span><span class=\"pl-k x\">.</span><span class=\"x\">get()</span><span class=\"pl-k x x-last\">.</span>compareTo(blockNumber) <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span><span class=\"x x-first x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> startingBlock<span class=\"pl-k\">.</span><span class=\"x x-first\">map(block </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> block</span><span class=\"pl-k x x-last\">.</span>compareTo(blockNumber) <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span><span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x\">orElse(</span><span class=\"pl-c1 x\">false</span><span class=\"x x-last\">)</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-06-04T01:26:30Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }\n+    return result;\n+  }\n+\n+  private boolean shouldProcessEvent(final BigInteger blockNumber) {\n+    return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;", "originalCommit": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTY3Mg==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941672", "bodyText": "I'd be tempted to make this take an UnsignedLong as parameter and do the .bigIntegerValue() once in here instead of in the two places it's called.", "author": "ajsutton", "createdAt": "2020-06-04T01:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ=="}], "type": "inlineReview"}, {"oid": "1389616db8b7289cf2d56ec43379977d351eb5d1", "url": "https://github.com/ConsenSys/teku/commit/1389616db8b7289cf2d56ec43379977d351eb5d1", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-04T04:03:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDk1Ng==", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434980956", "body": "nit: can use `replayDepositsResult.getBockNumberOrZero()` here too.", "bodyText": "nit: can use replayDepositsResult.getBockNumberOrZero() here too.", "bodyHTML": "<p dir=\"auto\">nit: can use <code>replayDepositsResult.getBockNumberOrZero()</code> here too.</p>", "author": "ajsutton", "createdAt": "2020-06-04T04:08:19Z", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -94,9 +124,11 @@ public void stop() {\n   }\n \n   private SafeFuture<EthBlock.Block> sendDepositsUpToMinGenesis(\n-      final EthBlock.Block minGenesisTimeBlock) {\n+      final EthBlock.Block minGenesisTimeBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "originalCommit": "1389616db8b7289cf2d56ec43379977d351eb5d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b2c242cce889cc5c71f1b6a90fcf3aa9c184cfb3", "url": "https://github.com/ConsenSys/teku/commit/b2c242cce889cc5c71f1b6a90fcf3aa9c184cfb3", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-04T04:48:40Z", "type": "commit"}, {"oid": "b254b1e52283afd37797f537d0395a0311fbdc07", "url": "https://github.com/ConsenSys/teku/commit/b254b1e52283afd37797f537d0395a0311fbdc07", "message": "Merge remote-tracking branch 'upstream/master' into 1412-startup", "committedDate": "2020-06-04T04:49:55Z", "type": "commit"}, {"oid": "4809254c9b040936a2bb918ee50bb259822df528", "url": "https://github.com/ConsenSys/teku/commit/4809254c9b040936a2bb918ee50bb259822df528", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-06-04T05:26:33Z", "type": "commit"}]}