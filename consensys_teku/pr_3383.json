{"pr_number": 3383, "pr_title": "Add weighted participation metrics", "pr_author": "cemozerr", "pr_createdAt": "2020-12-09T19:23:33Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3383", "timeline": [{"oid": "327a2fe34ac924069e6a589d5fb8ce9967576afc", "url": "https://github.com/ConsenSys/teku/commit/327a2fe34ac924069e6a589d5fb8ce9967576afc", "message": "Use a static totalBalance to update beacon chain metrics", "committedDate": "2020-12-09T19:17:48Z", "type": "commit"}, {"oid": "965b0a69cb2649a171d4081c04525741032a05c0", "url": "https://github.com/ConsenSys/teku/commit/965b0a69cb2649a171d4081c04525741032a05c0", "message": "Update total balances static variable when processing epoch", "committedDate": "2020-12-09T19:20:07Z", "type": "commit"}, {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422", "url": "https://github.com/ConsenSys/teku/commit/d0911ef0d020c0cc353cd641c264ff2d20618422", "message": "Run spotless", "committedDate": "2020-12-09T19:20:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539601023", "body": "do we need to make sure the StateAndBlockSummary are current epoch?  If we change epoch and there's an empty slot it might not match?", "bodyText": "do we need to make sure the StateAndBlockSummary are current epoch?  If we change epoch and there's an empty slot it might not match?", "bodyHTML": "<p dir=\"auto\">do we need to make sure the StateAndBlockSummary are current epoch?  If we change epoch and there's an empty slot it might not match?</p>", "author": "rolfyone", "createdAt": "2020-12-09T19:52:47Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +175,57 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();", "originalCommit": "d0911ef0d020c0cc353cd641c264ff2d20618422", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4ODEyMA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540688120", "bodyText": "Hmm, good question.  It won't have updated if there's an empty slot but it will then update when the next block is received so it's probably not a big deal.  The alternative would be to use retrieveStateAtSlot but that risks triggering the processing of a bunch of empty slots and epoch transitions just to update metrics which I don't think we want to do.\nSo I'd probably leave it as is I think...", "author": "ajsutton", "createdAt": "2020-12-11T04:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw=="}], "type": "inlineReview"}, {"oid": "fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "url": "https://github.com/ConsenSys/teku/commit/fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "message": "Store total balances in transition caches", "committedDate": "2020-12-09T22:10:29Z", "type": "commit"}, {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5", "url": "https://github.com/ConsenSys/teku/commit/78b4851ae0efbdaf647cd796addb644dee6329b5", "message": "Revert redundant change", "committedDate": "2020-12-09T22:13:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODQwOQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539688409", "body": "nit: I don't think you meant to rename this method - IntelliJ was being \"helpful\".", "bodyText": "nit: I don't think you meant to rename this method - IntelliJ was being \"helpful\".", "bodyHTML": "<p dir=\"auto\">nit: I don't think you meant to rename this method - IntelliJ was being \"helpful\".</p>", "author": "ajsutton", "createdAt": "2020-12-09T22:15:26Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java", "diffHunk": "@@ -27,7 +27,7 @@\n    */\n   public static BeaconState processEpoch(final BeaconState preState)\n       throws EpochProcessingException {\n-    final ValidatorStatuses validatorStatuses = ValidatorStatuses.create(preState);\n+    final ValidatorStatuses validatorStatuses = ValidatorStatuses.createTotalBalances(preState);", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTUxNQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539699515", "bodyText": "oh shoot yeah. reverted.", "author": "cemozerr", "createdAt": "2020-12-09T22:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODQwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4OTAwNg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539689006", "body": "nit: This probably should just be private - you'd just create `ValidatorStatuses` and then use `getTotalBalances` to get it.", "bodyText": "nit: This probably should just be private - you'd just create ValidatorStatuses and then use getTotalBalances to get it.", "bodyHTML": "<p dir=\"auto\">nit: This probably should just be private - you'd just create <code>ValidatorStatuses</code> and then use <code>getTotalBalances</code> to get it.</p>", "author": "ajsutton", "createdAt": "2020-12-09T22:16:30Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  public static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTYwNA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539699604", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4OTAwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MDU0Mg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539690542", "body": "Given these are now cheap to compute, we can probably update them each slot so that they update when we switch forks.", "bodyText": "Given these are now cheap to compute, we can probably update them each slot so that they update when we switch forks.", "bodyHTML": "<p dir=\"auto\">Given these are now cheap to compute, we can probably update them each slot so that they update when we switch forks.</p>", "author": "ajsutton", "createdAt": "2020-12-09T22:19:16Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +174,62 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              // Update participation weights only once per epoch, a slot after epoch transition to\n+              // make\n+              // sure\n+              // total balances are properly updated.", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODYxMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539698613", "bodyText": "Makes sense. Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MDU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTE0Mw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539691143", "body": "This will need to be volatile.", "bodyText": "This will need to be volatile.", "bodyHTML": "<p dir=\"auto\">This will need to be volatile.</p>", "author": "ajsutton", "createdAt": "2020-12-09T22:20:13Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java", "diffHunk": "@@ -65,6 +67,8 @@ public static TransitionCaches getNoOp() {\n   private final ValidatorIndexCache validatorIndexCache;\n   private final Cache<Bytes32, List<Integer>> committeeShuffle;\n \n+  private Optional<TotalBalances> latestTotalBalances = Optional.empty();", "originalCommit": "78b4851ae0efbdaf647cd796addb644dee6329b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODY1Nw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539698657", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-09T22:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTE0Mw=="}], "type": "inlineReview"}, {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "url": "https://github.com/ConsenSys/teku/commit/82236af1ae71de008e1f7a4b0ca3767a10bfc802", "message": "Incorporate feedback", "committedDate": "2020-12-09T22:42:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2MzgwMw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539763803", "body": "```suggestion\r\n  @VisibleForTesting\r\n  static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n          \n          \n            \n              @VisibleForTesting\n          \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k x x-first\">static</span><span class=\"x\"> </span><span class=\"pl-smi x\">TotalBalances</span><span class=\"x\"> createTotalBalances(</span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-k\"><span class=\"x\">List&lt;</span><span class=\"pl-smi x\">ValidatorStatus</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> statuses) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k x x-first x-last\">@VisibleForTesting</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">static</span> <span class=\"pl-smi\">TotalBalances</span> createTotalBalances(<span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">ValidatorStatus</span>&gt;</span> statuses) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-12-10T01:01:02Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1Njc2Mg==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540356762", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-12-10T17:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2MzgwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539764295", "body": "Probably shouldn't add this here.  `BeaconStateCache.getTransitionCaches` is used to get the cache everywhere else.\r\n\r\nI'm not against changing this but if we do we should change it everywhere and I seem to recall @Nashatyrev had a preference for this approach and some reasoning behind it.", "bodyText": "Probably shouldn't add this here.  BeaconStateCache.getTransitionCaches is used to get the cache everywhere else.\nI'm not against changing this but if we do we should change it everywhere and I seem to recall @Nashatyrev had a preference for this approach and some reasoning behind it.", "bodyHTML": "<p dir=\"auto\">Probably shouldn't add this here.  <code>BeaconStateCache.getTransitionCaches</code> is used to get the cache everywhere else.</p>\n<p dir=\"auto\">I'm not against changing this but if we do we should change it everywhere and I seem to recall <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Nashatyrev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Nashatyrev\">@Nashatyrev</a> had a preference for this approach and some reasoning behind it.</p>", "author": "ajsutton", "createdAt": "2020-12-10T01:02:19Z", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java", "diffHunk": "@@ -193,6 +193,8 @@ static BeaconState create(\n             });\n   }\n \n+  TransitionCaches getTransitionCaches();", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2MTQ4NA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539961484", "bodyText": "I'm pretty fine with adding BeaconState.getTransitionCaches(), though you would either remove BeaconStateCache then or do  BeaconState extends  BeaconStateCache and yes then you would need to refactor all the usages", "author": "Nashatyrev", "createdAt": "2020-12-10T08:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NjQ2NA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540356464", "bodyText": "Turns out BeaconStateCache.getTransitionCaches() works perfectly for my use case. I've removed this line.", "author": "cemozerr", "createdAt": "2020-12-10T17:25:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539769597", "body": "Now that I think about it, these numbers don't quite work out like this (sorry).  The `TotalBalances` are created at the end of the epoch so the \"current\" balance is actually \"previous\" by the time we're actually updating the metrics.  I suspect we should just drop the \"current\" version of these metrics as they're not particularly useful anyway.\r\n\r\nThen we wind up setting:\r\n```suggestion\r\n              previousEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\r\n\r\n              previousEpochParticipationWeight.set(\r\n                  totalBalances.getCurrentEpochAttesters().longValue());\r\n```\r\n\r\nand add a comment explaining why it's right even though it looks weird. :) Also need to consider if we have to worry about overflowing the signed long value with these metrics.  Prometheus actually uses a `double` for everything so we could potentially convert it to ETH if there's a risk of overflow.", "bodyText": "Now that I think about it, these numbers don't quite work out like this (sorry).  The TotalBalances are created at the end of the epoch so the \"current\" balance is actually \"previous\" by the time we're actually updating the metrics.  I suspect we should just drop the \"current\" version of these metrics as they're not particularly useful anyway.\nThen we wind up setting:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          currentEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getPreviousEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n      \n    \n    \n  \n\nand add a comment explaining why it's right even though it looks weird. :) Also need to consider if we have to worry about overflowing the signed long value with these metrics.  Prometheus actually uses a double for everything so we could potentially convert it to ETH if there's a risk of overflow.", "bodyHTML": "<p dir=\"auto\">Now that I think about it, these numbers don't quite work out like this (sorry).  The <code>TotalBalances</code> are created at the end of the epoch so the \"current\" balance is actually \"previous\" by the time we're actually updating the metrics.  I suspect we should just drop the \"current\" version of these metrics as they're not particularly useful anyway.</p>\n<p dir=\"auto\">Then we wind up setting:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              currentEpochTotalWeight<span class=\"pl-k\">.</span>set(totalBalances<span class=\"pl-k\">.</span>getCurrentEpoch()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              previousEpochTotalWeight<span class=\"pl-k\">.</span>set(totalBalances<span class=\"pl-k\">.</span>getPreviousEpoch()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              currentEpochParticipationWeight<span class=\"pl-k\">.</span>set(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  totalBalances<span class=\"pl-k\">.</span>getCurrentEpochAttesters()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              previousEpochParticipationWeight<span class=\"pl-k\">.</span>set(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  totalBalances<span class=\"pl-k\">.</span>getPreviousEpochAttesters()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              previousEpochTotalWeight<span class=\"pl-k\">.</span>set(totalBalances<span class=\"pl-k\">.</span>getCurrentEpoch()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              previousEpochParticipationWeight<span class=\"pl-k\">.</span>set(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  totalBalances<span class=\"pl-k\">.</span>getCurrentEpochAttesters()<span class=\"pl-k\">.</span>longValue());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">and add a comment explaining why it's right even though it looks weird. :) Also need to consider if we have to worry about overflowing the signed long value with these metrics.  Prometheus actually uses a <code>double</code> for everything so we could potentially convert it to ETH if there's a risk of overflow.</p>", "author": "ajsutton", "createdAt": "2020-12-10T01:17:03Z", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -171,6 +208,19 @@ public void onSlot(final UInt64 slot) {\n \n   private void updateMetrics(final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n+              previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n+\n+              currentEpochParticipationWeight.set(\n+                  totalBalances.getCurrentEpochAttesters().longValue());\n+              previousEpochParticipationWeight.set(\n+                  totalBalances.getPreviousEpochAttesters().longValue());", "originalCommit": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NzE4MQ==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540377181", "bodyText": "I read that the double MAX value is: 1.7*10^308. So I don't think that will be an issue. Am I missing something?", "author": "cemozerr", "createdAt": "2020-12-10T17:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NzYzMA==", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540377630", "bodyText": "Put the comment and made the change for previous/current epoch confusion.", "author": "cemozerr", "createdAt": "2020-12-10T17:54:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw=="}], "type": "inlineReview"}, {"oid": "3117b208a19d003a4c43b7ae9845dac360e71805", "url": "https://github.com/ConsenSys/teku/commit/3117b208a19d003a4c43b7ae9845dac360e71805", "message": "Get transition caches with util class and only set previous epoch weights", "committedDate": "2020-12-10T17:56:22Z", "type": "commit"}, {"oid": "cff7050717344d7795f2f5d568d65be697c99a88", "url": "https://github.com/ConsenSys/teku/commit/cff7050717344d7795f2f5d568d65be697c99a88", "message": "Run spotless", "committedDate": "2020-12-10T18:13:02Z", "type": "commit"}, {"oid": "43ab52b167f91f0238b1aaf855a608564681021c", "url": "https://github.com/ConsenSys/teku/commit/43ab52b167f91f0238b1aaf855a608564681021c", "message": "Run spotless", "committedDate": "2020-12-10T18:13:49Z", "type": "commit"}, {"oid": "1e0cd459f40a6153ac2d949d2514fe64251d5362", "url": "https://github.com/ConsenSys/teku/commit/1e0cd459f40a6153ac2d949d2514fe64251d5362", "message": "Remove redundant varibles", "committedDate": "2020-12-10T18:14:07Z", "type": "commit"}, {"oid": "fcb85a02317fdcd5f5a61d134546887664b6a777", "url": "https://github.com/ConsenSys/teku/commit/fcb85a02317fdcd5f5a61d134546887664b6a777", "message": "Add independent module to reference test executor", "committedDate": "2020-12-10T18:22:16Z", "type": "commit"}, {"oid": "40e9c7683f40caca67322f45f243787b27c378b4", "url": "https://github.com/ConsenSys/teku/commit/40e9c7683f40caca67322f45f243787b27c378b4", "message": "Merge branch 'master' into addWeightedParticipationMetrics2", "committedDate": "2020-12-10T18:49:08Z", "type": "commit"}, {"oid": "1a6f726058a12b94cac683e9c10480fbc5739f77", "url": "https://github.com/ConsenSys/teku/commit/1a6f726058a12b94cac683e9c10480fbc5739f77", "message": "Merge branch 'master' into addWeightedParticipationMetrics2", "committedDate": "2020-12-11T14:19:58Z", "type": "commit"}]}