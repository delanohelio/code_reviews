{"pr_number": 2835, "pr_title": "implement `/eth/v1/events` endpoint", "pr_author": "rolfyone", "pr_createdAt": "2020-09-23T05:01:58Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2835", "timeline": [{"oid": "0d20947c776ba9037f2eeb5da7814869a12860ee", "url": "https://github.com/ConsenSys/teku/commit/0d20947c776ba9037f2eeb5da7814869a12860ee", "message": "Add endpoint for `/eth/v1/beacon/genesis`\n\n- deprecated the previous genesis endpoint `/node/genesis_time`.\n\n partially addresses #2757\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-21T03:37:12Z", "type": "commit"}, {"oid": "9748debe7a48e4c074c5def150c8a96f47c8c5d6", "url": "https://github.com/ConsenSys/teku/commit/9748debe7a48e4c074c5def150c8a96f47c8c5d6", "message": "tagged syncing endpoint as validatorRequired also.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-21T03:46:43Z", "type": "commit"}, {"oid": "f3284cbf32530056d9bc37035eef953bf5db6784", "url": "https://github.com/ConsenSys/teku/commit/f3284cbf32530056d9bc37035eef953bf5db6784", "message": "implement standard `/eth/v1/beacon/states/:state_id/fork` endpoint\n\n - deprecated the old `/node/fork` endpoint\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-21T22:38:11Z", "type": "commit"}, {"oid": "b88f9576f2aadc66608dd82911632158e6406838", "url": "https://github.com/ConsenSys/teku/commit/b88f9576f2aadc66608dd82911632158e6406838", "message": "Merge remote-tracking branch 'upstream/master' into 2757-get-fork", "committedDate": "2020-09-21T23:40:20Z", "type": "commit"}, {"oid": "8fbf4547fa00362f54088c875ccadd735cab077c", "url": "https://github.com/ConsenSys/teku/commit/8fbf4547fa00362f54088c875ccadd735cab077c", "message": "clean up message passing from path parameters back to the calling function - now using IllegalArgumentException.\n\n - checked test coverage, and improved a bit.\n\n - tried to clean up the ChainDataUnavailable exception, but the old api's use a catch all to return a 410 so i can't put a generic handler in for the UnavailableException to return a 503.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-22T01:16:42Z", "type": "commit"}, {"oid": "7c8ffdc982a4d2e561683117c80e8c7d2953e0a2", "url": "https://github.com/ConsenSys/teku/commit/7c8ffdc982a4d2e561683117c80e8c7d2953e0a2", "message": "push V1 endpoints up to the top of the documentation\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-22T01:42:07Z", "type": "commit"}, {"oid": "f1baab29351a29f4dd1fda2f730289cdad76da60", "url": "https://github.com/ConsenSys/teku/commit/f1baab29351a29f4dd1fda2f730289cdad76da60", "message": "spotless\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-22T01:45:45Z", "type": "commit"}, {"oid": "1b6cbd51554b4eb477d795bd527508dc21a6b378", "url": "https://github.com/ConsenSys/teku/commit/1b6cbd51554b4eb477d795bd527508dc21a6b378", "message": "implement `/eth/v1/events` endpoint\n\n - added chain_reorg event listening and publishing.\n\n - added old and new state roots to the chain reorg event.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-23T04:59:18Z", "type": "commit"}, {"oid": "cab94066e35df35ff3afc2a1dcd297e8176c7f32", "url": "https://github.com/ConsenSys/teku/commit/cab94066e35df35ff3afc2a1dcd297e8176c7f32", "message": "Merge remote-tracking branch 'upstream/master' into 2754-eventstream\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>\n\n# Conflicts:\n#\tdata/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/BeaconRestApi.java\n#\tdata/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java\n#\tdata/provider/src/test/java/tech/pegasys/teku/api/ChainDataProviderTest.java", "committedDate": "2020-09-23T21:24:01Z", "type": "commit"}, {"oid": "1e8e9db2de62a928eb347086b93dfb6700c80880", "url": "https://github.com/ConsenSys/teku/commit/1e8e9db2de62a928eb347086b93dfb6700c80880", "message": "add test cases, implement finalized_checkpoint event.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-24T04:34:09Z", "type": "commit"}, {"oid": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "url": "https://github.com/ConsenSys/teku/commit/7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "message": "removed 503, as it no longer returns that.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-24T05:10:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzNjQ1NA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494436454", "body": "nit: collecting this to a Set might be better.", "bodyText": "nit: collecting this to a Set might be better.", "bodyHTML": "<p dir=\"auto\">nit: collecting this to a Set might be better.</p>", "author": "cemozerr", "createdAt": "2020-09-24T16:02:50Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/ListQueryParameterUtils.java", "diffHunk": "@@ -55,4 +55,11 @@\n           ex);\n     }\n   }\n+\n+  public static List<String> getParameterAsStringList(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    final String list = String.join(\",\", validateQueryParameter(parameterMap, key));\n+    return splitter.splitToStream(list).collect(Collectors.toList());", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTQ0NQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494441445", "body": "nit: (class name and object name being different is a bit confusing.)\r\n```suggestion\r\n  private final EventSubscriptionManager eventSubscriptionManager;\r\n```", "bodyText": "nit: (class name and object name being different is a bit confusing.)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final EventSubscriptionManager eventService;\n          \n          \n            \n              private final EventSubscriptionManager eventSubscriptionManager;", "bodyHTML": "<p dir=\"auto\">nit: (class name and object name being different is a bit confusing.)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">EventSubscriptionManager</span> <span class=\"x x-first x-last\">eventService</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">EventSubscriptionManager</span> <span class=\"x x-first x-last\">eventSubscriptionManager</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cemozerr", "createdAt": "2020-09-24T16:10:22Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/GetEvents.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_EVENTS;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.beaconrestapi.handlers.v1.EventSubscriptionManager.VALID_EVENT_TYPES;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.http.sse.SseClient;\n+import io.javalin.http.sse.SseHandler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetEvents implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/events\";\n+  private final JsonProvider jsonProvider;\n+  private final EventSubscriptionManager eventService;", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwODI2MQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494608261", "bodyText": "this is what happens when i rename a class :)", "author": "rolfyone", "createdAt": "2020-09-24T21:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTQ0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3MzMwMg==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494373302", "body": "Might be worth adding some unit tests around these utils", "bodyText": "Might be worth adding some unit tests around these utils", "bodyHTML": "<p dir=\"auto\">Might be worth adding some unit tests around these utils</p>", "author": "mbaxter", "createdAt": "2020-09-24T14:38:20Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/ListQueryParameterUtils.java", "diffHunk": "@@ -55,4 +55,11 @@\n           ex);\n     }\n   }\n+\n+  public static List<String> getParameterAsStringList(", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NjkzOA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494376938", "body": "```suggestion\r\n  private final Queue<SseClient> clients = new ConcurrentLinkedQueue<>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n          \n          \n            \n              private final Queue<SseClient> clients = new ConcurrentLinkedQueue<>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">ConcurrentLinkedQueue</span>&lt;<span class=\"pl-smi\">SseClient</span>&gt;</span> clients <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ConcurrentLinkedQueue&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">Queue</span>&lt;<span class=\"pl-smi\">SseClient</span>&gt;</span> clients <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ConcurrentLinkedQueue&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T14:42:58Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4MTc0Mg==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494381742", "body": "Should we back `clients` with a concurrent `Map` for faster lookup?:\r\n`Collections.newSetFromMap(new ConcurrentHashMap<>())`", "bodyText": "Should we back clients with a concurrent Map for faster lookup?:\nCollections.newSetFromMap(new ConcurrentHashMap<>())", "bodyHTML": "<p dir=\"auto\">Should we back <code>clients</code> with a concurrent <code>Map</code> for faster lookup?:<br>\n<code>Collections.newSetFromMap(new ConcurrentHashMap&lt;&gt;())</code></p>", "author": "mbaxter", "createdAt": "2020-09-24T14:49:03Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n+\n+  public EventSubscriptionManager(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.provider = provider;\n+    this.jsonProvider = jsonProvider;\n+    eventChannels.subscribe(ReorgEventChannel.class, this);\n+    eventChannels.subscribe(FinalizedCheckpointChannel.class, this);\n+  }\n+\n+  public static final List<String> VALID_EVENT_TYPES =\n+      List.of(CHAIN_REORG, HEAD, BLOCK, ATTESTATION, VOLUNTARY_EXIT, FINALIZED_CHECKPOINT);\n+\n+  public void registerClient(final SseClient sseClient) {\n+    LOG.trace(\"connected \" + sseClient.hashCode());\n+    sseClient.onClose(\n+        () -> {\n+          clients.remove(sseClient);", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NDIxNA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494384214", "body": "```suggestion\r\n      LOG.error(ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.trace(ex);\n          \n          \n            \n                  LOG.error(ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(ex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">error</span>(ex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T14:52:11Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n+\n+  public EventSubscriptionManager(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.provider = provider;\n+    this.jsonProvider = jsonProvider;\n+    eventChannels.subscribe(ReorgEventChannel.class, this);\n+    eventChannels.subscribe(FinalizedCheckpointChannel.class, this);\n+  }\n+\n+  public static final List<String> VALID_EVENT_TYPES =\n+      List.of(CHAIN_REORG, HEAD, BLOCK, ATTESTATION, VOLUNTARY_EXIT, FINALIZED_CHECKPOINT);\n+\n+  public void registerClient(final SseClient sseClient) {\n+    LOG.trace(\"connected \" + sseClient.hashCode());\n+    sseClient.onClose(\n+        () -> {\n+          clients.remove(sseClient);\n+          LOG.trace(\"disconnected \" + sseClient.hashCode());\n+        });\n+    clients.add(sseClient);\n+  }\n+\n+  @Override\n+  public void reorgOccurred(\n+      final Bytes32 bestBlockRoot,\n+      final UInt64 bestSlot,\n+      final Bytes32 bestStateRoot,\n+      final Bytes32 oldBestBlockRoot,\n+      final Bytes32 oldBestStateRoot,\n+      final UInt64 commonAncestorSlot) {\n+    try {\n+      final UInt64 epoch = compute_epoch_at_slot(bestSlot);\n+\n+      final String reorgEventString =\n+          jsonProvider.objectToJSON(\n+              new ChainReorgEvent(\n+                  bestSlot,\n+                  bestSlot.minus(commonAncestorSlot),\n+                  oldBestBlockRoot,\n+                  bestBlockRoot,\n+                  oldBestStateRoot,\n+                  bestStateRoot,\n+                  epoch));\n+      sendEventToClients(CHAIN_REORG, reorgEventString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NTcxNA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494385714", "body": "```suggestion\r\n      LOG.error(ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.trace(ex);\n          \n          \n            \n                  LOG.error(ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(ex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">error</span>(ex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T14:54:07Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n+\n+  public EventSubscriptionManager(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.provider = provider;\n+    this.jsonProvider = jsonProvider;\n+    eventChannels.subscribe(ReorgEventChannel.class, this);\n+    eventChannels.subscribe(FinalizedCheckpointChannel.class, this);\n+  }\n+\n+  public static final List<String> VALID_EVENT_TYPES =\n+      List.of(CHAIN_REORG, HEAD, BLOCK, ATTESTATION, VOLUNTARY_EXIT, FINALIZED_CHECKPOINT);\n+\n+  public void registerClient(final SseClient sseClient) {\n+    LOG.trace(\"connected \" + sseClient.hashCode());\n+    sseClient.onClose(\n+        () -> {\n+          clients.remove(sseClient);\n+          LOG.trace(\"disconnected \" + sseClient.hashCode());\n+        });\n+    clients.add(sseClient);\n+  }\n+\n+  @Override\n+  public void reorgOccurred(\n+      final Bytes32 bestBlockRoot,\n+      final UInt64 bestSlot,\n+      final Bytes32 bestStateRoot,\n+      final Bytes32 oldBestBlockRoot,\n+      final Bytes32 oldBestStateRoot,\n+      final UInt64 commonAncestorSlot) {\n+    try {\n+      final UInt64 epoch = compute_epoch_at_slot(bestSlot);\n+\n+      final String reorgEventString =\n+          jsonProvider.objectToJSON(\n+              new ChainReorgEvent(\n+                  bestSlot,\n+                  bestSlot.minus(commonAncestorSlot),\n+                  oldBestBlockRoot,\n+                  bestBlockRoot,\n+                  oldBestStateRoot,\n+                  bestStateRoot,\n+                  epoch));\n+      sendEventToClients(CHAIN_REORG, reorgEventString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);\n+    }\n+  }\n+\n+  @Override\n+  public void onNewFinalizedCheckpoint(final Checkpoint checkpoint) {\n+    try {\n+      Optional<Bytes32> stateRoot = provider.getStateRootFromBlockRoot(checkpoint.getRoot());\n+      final String checkpointString =\n+          jsonProvider.objectToJSON(\n+              new FinalizedCheckpointEvent(\n+                  checkpoint.getRoot(), stateRoot.orElse(Bytes32.ZERO), checkpoint.getEpoch()));\n+      sendEventToClients(FINALIZED_CHECKPOINT, checkpointString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5MjQ1OA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494392458", "body": "What does the \"id\" field do here?  Just curious since the other `sendEvent` doesn't set an id.", "bodyText": "What does the \"id\" field do here?  Just curious since the other sendEvent doesn't set an id.", "bodyHTML": "<p dir=\"auto\">What does the \"id\" field do here?  Just curious since the other <code>sendEvent</code> doesn't set an id.</p>", "author": "mbaxter", "createdAt": "2020-09-24T15:02:46Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n+\n+  public EventSubscriptionManager(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.provider = provider;\n+    this.jsonProvider = jsonProvider;\n+    eventChannels.subscribe(ReorgEventChannel.class, this);\n+    eventChannels.subscribe(FinalizedCheckpointChannel.class, this);\n+  }\n+\n+  public static final List<String> VALID_EVENT_TYPES =\n+      List.of(CHAIN_REORG, HEAD, BLOCK, ATTESTATION, VOLUNTARY_EXIT, FINALIZED_CHECKPOINT);\n+\n+  public void registerClient(final SseClient sseClient) {\n+    LOG.trace(\"connected \" + sseClient.hashCode());\n+    sseClient.onClose(\n+        () -> {\n+          clients.remove(sseClient);\n+          LOG.trace(\"disconnected \" + sseClient.hashCode());\n+        });\n+    clients.add(sseClient);\n+  }\n+\n+  @Override\n+  public void reorgOccurred(\n+      final Bytes32 bestBlockRoot,\n+      final UInt64 bestSlot,\n+      final Bytes32 bestStateRoot,\n+      final Bytes32 oldBestBlockRoot,\n+      final Bytes32 oldBestStateRoot,\n+      final UInt64 commonAncestorSlot) {\n+    try {\n+      final UInt64 epoch = compute_epoch_at_slot(bestSlot);\n+\n+      final String reorgEventString =\n+          jsonProvider.objectToJSON(\n+              new ChainReorgEvent(\n+                  bestSlot,\n+                  bestSlot.minus(commonAncestorSlot),\n+                  oldBestBlockRoot,\n+                  bestBlockRoot,\n+                  oldBestStateRoot,\n+                  bestStateRoot,\n+                  epoch));\n+      sendEventToClients(CHAIN_REORG, reorgEventString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);\n+    }\n+  }\n+\n+  @Override\n+  public void onNewFinalizedCheckpoint(final Checkpoint checkpoint) {\n+    try {\n+      Optional<Bytes32> stateRoot = provider.getStateRootFromBlockRoot(checkpoint.getRoot());\n+      final String checkpointString =\n+          jsonProvider.objectToJSON(\n+              new FinalizedCheckpointEvent(\n+                  checkpoint.getRoot(), stateRoot.orElse(Bytes32.ZERO), checkpoint.getEpoch()));\n+      sendEventToClients(FINALIZED_CHECKPOINT, checkpointString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);\n+    }\n+  }\n+\n+  public void stop() {\n+    clients.forEach(client -> client.sendEvent(\"bye\", \"bye\", \"-1\"));", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NTY1MQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494395651", "body": "May be worth saving a `Map` from `client -> topics:List<String>`, so we don't have to keep re-parsing this on every send.  ", "bodyText": "May be worth saving a Map from client -> topics:List<String>, so we don't have to keep re-parsing this on every send.", "bodyHTML": "<p dir=\"auto\">May be worth saving a <code>Map</code> from <code>client -&gt; topics:List&lt;String&gt;</code>, so we don't have to keep re-parsing this on every send.</p>", "author": "mbaxter", "createdAt": "2020-09-24T15:07:10Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManager.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.sse.SseClient;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+import tech.pegasys.teku.storage.api.FinalizedCheckpointChannel;\n+import tech.pegasys.teku.storage.api.ReorgEventChannel;\n+\n+public class EventSubscriptionManager implements ReorgEventChannel, FinalizedCheckpointChannel {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private static final String CHAIN_REORG = \"chain_reorg\";\n+  private static final String HEAD = \"head\";\n+  private static final String BLOCK = \"block\";\n+  private static final String ATTESTATION = \"attestation\";\n+  private static final String VOLUNTARY_EXIT = \"voluntary_exit\";\n+  private static final String FINALIZED_CHECKPOINT = \"finalized_checkpoint\";\n+  private final JsonProvider jsonProvider;\n+  private final ChainDataProvider provider;\n+  private final ConcurrentLinkedQueue<SseClient> clients = new ConcurrentLinkedQueue<>();\n+\n+  public EventSubscriptionManager(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.provider = provider;\n+    this.jsonProvider = jsonProvider;\n+    eventChannels.subscribe(ReorgEventChannel.class, this);\n+    eventChannels.subscribe(FinalizedCheckpointChannel.class, this);\n+  }\n+\n+  public static final List<String> VALID_EVENT_TYPES =\n+      List.of(CHAIN_REORG, HEAD, BLOCK, ATTESTATION, VOLUNTARY_EXIT, FINALIZED_CHECKPOINT);\n+\n+  public void registerClient(final SseClient sseClient) {\n+    LOG.trace(\"connected \" + sseClient.hashCode());\n+    sseClient.onClose(\n+        () -> {\n+          clients.remove(sseClient);\n+          LOG.trace(\"disconnected \" + sseClient.hashCode());\n+        });\n+    clients.add(sseClient);\n+  }\n+\n+  @Override\n+  public void reorgOccurred(\n+      final Bytes32 bestBlockRoot,\n+      final UInt64 bestSlot,\n+      final Bytes32 bestStateRoot,\n+      final Bytes32 oldBestBlockRoot,\n+      final Bytes32 oldBestStateRoot,\n+      final UInt64 commonAncestorSlot) {\n+    try {\n+      final UInt64 epoch = compute_epoch_at_slot(bestSlot);\n+\n+      final String reorgEventString =\n+          jsonProvider.objectToJSON(\n+              new ChainReorgEvent(\n+                  bestSlot,\n+                  bestSlot.minus(commonAncestorSlot),\n+                  oldBestBlockRoot,\n+                  bestBlockRoot,\n+                  oldBestStateRoot,\n+                  bestStateRoot,\n+                  epoch));\n+      sendEventToClients(CHAIN_REORG, reorgEventString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);\n+    }\n+  }\n+\n+  @Override\n+  public void onNewFinalizedCheckpoint(final Checkpoint checkpoint) {\n+    try {\n+      Optional<Bytes32> stateRoot = provider.getStateRootFromBlockRoot(checkpoint.getRoot());\n+      final String checkpointString =\n+          jsonProvider.objectToJSON(\n+              new FinalizedCheckpointEvent(\n+                  checkpoint.getRoot(), stateRoot.orElse(Bytes32.ZERO), checkpoint.getEpoch()));\n+      sendEventToClients(FINALIZED_CHECKPOINT, checkpointString);\n+    } catch (JsonProcessingException ex) {\n+      LOG.trace(ex);\n+    }\n+  }\n+\n+  public void stop() {\n+    clients.forEach(client -> client.sendEvent(\"bye\", \"bye\", \"-1\"));\n+    clients.clear();\n+  }\n+\n+  private void sendEventToClients(final String eventType, final String eventString) {\n+    clients.stream()\n+        .filter(client -> isSubscribedToTopic(eventType, client))\n+        .forEach(ctx -> ctx.sendEvent(eventType, eventString));\n+  }\n+\n+  private boolean isSubscribedToTopic(final String topic, final SseClient sseClient) {\n+    List<String> subscribedTopics =\n+        ListQueryParameterUtils.getParameterAsStringList(sseClient.ctx.queryParamMap(), TOPICS);", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwMDM1MA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494400350", "body": "```suggestion\r\n                    + \"Available values : \" + VALID_EVENT_TYPES.stream().collect(Collectors.joining(\", \")),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                + \"Available values : head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),\n          \n          \n            \n                                + \"Available values : \" + VALID_EVENT_TYPES.stream().collect(Collectors.joining(\", \")),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Available values : <span class=\"x x-first\">head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg</span><span class=\"pl-pds x x-last\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Available values : <span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x\">VALID_EVENT_TYPES</span><span class=\"pl-k x\">.</span><span class=\"x\">stream()</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x\">joining(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">, </span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T15:13:34Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/GetEvents.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_EVENTS;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.beaconrestapi.handlers.v1.EventSubscriptionManager.VALID_EVENT_TYPES;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.http.sse.SseClient;\n+import io.javalin.http.sse.SseHandler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetEvents implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/events\";\n+  private final JsonProvider jsonProvider;\n+  private final EventSubscriptionManager eventService;\n+\n+  public GetEvents(\n+      final DataProvider dataProvider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider, eventChannels);\n+  }\n+\n+  GetEvents(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.jsonProvider = jsonProvider;\n+    eventService = new EventSubscriptionManager(provider, jsonProvider, eventChannels);\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Subscribe to node events\",\n+      tags = {TAG_EVENTS, TAG_VALIDATOR_REQUIRED},\n+      description =\n+          \"Provides endpoint to subscribe to beacon node Server-Sent-Events stream. Consumers should use\"\n+              + \" [eventsource](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)\"\n+              + \" implementation to listen on those events.\",\n+      queryParams = {\n+        @OpenApiParam(\n+            name = TOPICS,\n+            required = true,\n+            description =\n+                \"Event types to subscribe to.\"\n+                    + \"Available values : head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwMDcyNw==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494400727", "body": "Looks like there's an extra space after the \":\"\r\n```suggestion\r\n                    + \"Available values: head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),\r\n```", "bodyText": "Looks like there's an extra space after the \":\"\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                + \"Available values : head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),\n          \n          \n            \n                                + \"Available values: head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),", "bodyHTML": "<p dir=\"auto\">Looks like there's an extra space after the \":\"</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Available values<span class=\"x x-first x-last\"> </span>: head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Available values: head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T15:14:05Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/GetEvents.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_EVENTS;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.beaconrestapi.handlers.v1.EventSubscriptionManager.VALID_EVENT_TYPES;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.http.sse.SseClient;\n+import io.javalin.http.sse.SseHandler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetEvents implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/events\";\n+  private final JsonProvider jsonProvider;\n+  private final EventSubscriptionManager eventService;\n+\n+  public GetEvents(\n+      final DataProvider dataProvider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider, eventChannels);\n+  }\n+\n+  GetEvents(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.jsonProvider = jsonProvider;\n+    eventService = new EventSubscriptionManager(provider, jsonProvider, eventChannels);\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Subscribe to node events\",\n+      tags = {TAG_EVENTS, TAG_VALIDATOR_REQUIRED},\n+      description =\n+          \"Provides endpoint to subscribe to beacon node Server-Sent-Events stream. Consumers should use\"\n+              + \" [eventsource](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)\"\n+              + \" implementation to listen on those events.\",\n+      queryParams = {\n+        @OpenApiParam(\n+            name = TOPICS,\n+            required = true,\n+            description =\n+                \"Event types to subscribe to.\"\n+                    + \"Available values : head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5NzY4MQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494697681", "bodyText": "copy / paste from the spec :) fixed", "author": "rolfyone", "createdAt": "2020-09-25T01:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwMDcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwNDkwMw==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494404903", "body": "Should `validateQueryParameter` run `String::trim` on each value before returning?", "bodyText": "Should validateQueryParameter run String::trim on each value before returning?", "bodyHTML": "<p dir=\"auto\">Should <code>validateQueryParameter</code> run <code>String::trim</code> on each value before returning?</p>", "author": "mbaxter", "createdAt": "2020-09-24T15:19:40Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/ListQueryParameterUtils.java", "diffHunk": "@@ -55,4 +55,11 @@\n           ex);\n     }\n   }\n+\n+  public static List<String> getParameterAsStringList(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    final String list = String.join(\",\", validateQueryParameter(parameterMap, key));", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY5OTkwMQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494699901", "bodyText": "good idea", "author": "rolfyone", "createdAt": "2020-09-25T01:42:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwNDkwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MDI5NQ==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494440295", "body": "```suggestion\r\n        LOG.error(e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.trace(e);\n          \n          \n            \n                    LOG.error(e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">error</span>(e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-09-24T16:08:37Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/GetEvents.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_EVENTS;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.beaconrestapi.handlers.v1.EventSubscriptionManager.VALID_EVENT_TYPES;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.http.sse.SseClient;\n+import io.javalin.http.sse.SseHandler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetEvents implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/events\";\n+  private final JsonProvider jsonProvider;\n+  private final EventSubscriptionManager eventService;\n+\n+  public GetEvents(\n+      final DataProvider dataProvider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this(dataProvider.getChainDataProvider(), jsonProvider, eventChannels);\n+  }\n+\n+  GetEvents(\n+      final ChainDataProvider provider,\n+      final JsonProvider jsonProvider,\n+      final EventChannels eventChannels) {\n+    this.jsonProvider = jsonProvider;\n+    eventService = new EventSubscriptionManager(provider, jsonProvider, eventChannels);\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Subscribe to node events\",\n+      tags = {TAG_EVENTS, TAG_VALIDATOR_REQUIRED},\n+      description =\n+          \"Provides endpoint to subscribe to beacon node Server-Sent-Events stream. Consumers should use\"\n+              + \" [eventsource](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)\"\n+              + \" implementation to listen on those events.\",\n+      queryParams = {\n+        @OpenApiParam(\n+            name = TOPICS,\n+            required = true,\n+            description =\n+                \"Event types to subscribe to.\"\n+                    + \"Available values : head, block, attestation, voluntary_exit, finalized_checkpoint, chain_reorg\"),\n+      },\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            content = @OpenApiContent(type = \"text/event-stream\", from = String.class)),\n+        @OpenApiResponse(status = RES_BAD_REQUEST),\n+        @OpenApiResponse(status = RES_INTERNAL_ERROR)\n+      })\n+  @Override\n+  public void handle(@NotNull final Context ctx) throws Exception {\n+    SseHandler sseHandler = new SseHandler(this::sseEventHandler);\n+    sseHandler.handle(ctx);\n+  }\n+\n+  public void sseEventHandler(final SseClient sseClient) {\n+    List<String> topics =\n+        ListQueryParameterUtils.getParameterAsStringList(sseClient.ctx.queryParamMap(), TOPICS);\n+    if (topics.stream().anyMatch(topic -> !VALID_EVENT_TYPES.contains(topic))) {\n+      sseClient.ctx.status(SC_BAD_REQUEST);\n+      try {\n+        sseClient.ctx.result(jsonProvider.objectToJSON(new BadRequest(\"Invalid topics requested\")));\n+      } catch (JsonProcessingException e) {\n+        LOG.trace(e);", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MjIwNg==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494472206", "body": "Might be worth adding a test with a subscription for multiple topics", "bodyText": "Might be worth adding a test with a subscription for multiple topics", "bodyHTML": "<p dir=\"auto\">Might be worth adding a test with a subscription for multiple topics</p>", "author": "mbaxter", "createdAt": "2020-09-24T16:58:56Z", "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/EventSubscriptionManagerTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+\n+import io.javalin.http.Context;\n+import io.javalin.http.sse.SseClient;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Optional;\n+import javax.servlet.AsyncContext;\n+import javax.servlet.ServletOutputStream;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.ArgumentCaptor;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.response.v1.ChainReorgEvent;\n+import tech.pegasys.teku.api.response.v1.FinalizedCheckpointEvent;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class EventSubscriptionManagerTest {\n+  private final JsonProvider jsonProvider = new JsonProvider();\n+  private final DataStructureUtil data = new DataStructureUtil();\n+  private final ArgumentCaptor<String> stringArgs = ArgumentCaptor.forClass(String.class);\n+  protected final ChainDataProvider chainDataProvider = mock(ChainDataProvider.class);\n+  // chain reorg fields\n+  private final UInt64 slot = UInt64.valueOf(\"1024100\");\n+  private final UInt64 epoch = compute_epoch_at_slot(slot);\n+  private final UInt64 depth = UInt64.valueOf(100);\n+  private final ChainReorgEvent sampleEvent =\n+      new ChainReorgEvent(\n+          slot,\n+          depth,\n+          data.randomBytes32(),\n+          data.randomBytes32(),\n+          data.randomBytes32(),\n+          data.randomBytes32(),\n+          epoch);\n+\n+  private final FinalizedCheckpointEvent sampleCheckpointEvent =\n+      new FinalizedCheckpointEvent(data.randomBytes32(), data.randomBytes32(), epoch);\n+\n+  private final AsyncContext async = mock(AsyncContext.class);\n+  private final EventChannels channels = mock(EventChannels.class);\n+  private final HttpServletRequest req = mock(HttpServletRequest.class);\n+  private final HttpServletResponse res = mock(HttpServletResponse.class);\n+  private final ServletResponse srvResponse = mock(ServletResponse.class);\n+  private final ServletOutputStream outputStream = mock(ServletOutputStream.class);\n+  private final Context ctx = new Context(req, res, Collections.emptyMap());\n+\n+  private EventSubscriptionManager manager;\n+\n+  @BeforeEach\n+  void setup() throws IOException {\n+    when(req.getAsyncContext()).thenReturn(async);\n+    when(async.getResponse()).thenReturn(srvResponse);\n+    when(srvResponse.getOutputStream()).thenReturn(outputStream);\n+    final SseClient client1 = new SseClient(ctx);\n+    manager = new EventSubscriptionManager(chainDataProvider, jsonProvider, channels);\n+    manager.registerClient(client1);\n+  }\n+\n+  @Test\n+  void shouldPropagateReorgMessages() throws IOException {\n+    when(req.getQueryString()).thenReturn(\"&topics=chain_reorg\");\n+\n+    triggerReorgEvent();\n+    verify(outputStream).print(stringArgs.capture());\n+    final String eventString = stringArgs.getValue();\n+    assertThat(eventString).contains(\"event: chain_reorg\\n\");\n+    final ChainReorgEvent event =\n+        jsonProvider.jsonToObject(\n+            eventString.substring(eventString.indexOf(\"{\")), ChainReorgEvent.class);\n+\n+    assertThat(event).isEqualTo(sampleEvent);\n+  }\n+\n+  @Test\n+  void shouldPropagateFinalizedCheckpointMessages() throws IOException {\n+    when(req.getQueryString()).thenReturn(\"&topics=finalized_checkpoint\");", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3NjkyMA==", "url": "https://github.com/ConsenSys/teku/pull/2835#discussion_r494476920", "body": "Is it feasible to add integration tests for the events endpoint?", "bodyText": "Is it feasible to add integration tests for the events endpoint?", "bodyHTML": "<p dir=\"auto\">Is it feasible to add integration tests for the events endpoint?</p>", "author": "mbaxter", "createdAt": "2020-09-24T17:06:54Z", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/GetEvents.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_EVENTS;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TOPICS;\n+import static tech.pegasys.teku.beaconrestapi.handlers.v1.EventSubscriptionManager.VALID_EVENT_TYPES;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.http.sse.SseClient;\n+import io.javalin.http.sse.SseHandler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.beaconrestapi.ListQueryParameterUtils;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.events.EventChannels;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetEvents implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/events\";", "originalCommit": "7e4ef2e56c84f4dc696e7b1128b8b27079774c2b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5dc64f670c17955dab6ed13ad4461ad29e51ef49", "url": "https://github.com/ConsenSys/teku/commit/5dc64f670c17955dab6ed13ad4461ad29e51ef49", "message": "Merge remote-tracking branch 'upstream/master' into 2754-eventstream", "committedDate": "2020-09-24T21:02:34Z", "type": "commit"}, {"oid": "301a1cefeafee579a784a8dc4befb8385e4e99a2", "url": "https://github.com/ConsenSys/teku/commit/301a1cefeafee579a784a8dc4befb8385e4e99a2", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-25T02:22:55Z", "type": "commit"}]}