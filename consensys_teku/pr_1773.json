{"pr_number": 1773, "pr_title": "Adds periodic peer status updates", "pr_author": "cemozerr", "pr_createdAt": "2020-05-12T22:52:11Z", "pr_url": "https://github.com/ConsenSys/teku/pull/1773", "timeline": [{"oid": "449ea320b1574ead31e8c09183e2cb9b14497834", "url": "https://github.com/ConsenSys/teku/commit/449ea320b1574ead31e8c09183e2cb9b14497834", "message": "Add periodic peer status updates", "committedDate": "2020-05-12T22:49:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMTg1Nw==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424101857", "body": "Suggest combining these into one call to `subscribeDisconnect`:\r\n```suggestion\r\n    peer.subscribeDisconnect(() -> {\r\n        periodicStatusUpdateTask.cancel(false);\r\n        periodicPingTask.cancel(false);\r\n     });\r\n```", "bodyText": "Suggest combining these into one call to subscribeDisconnect:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                peer.subscribeDisconnect(() -> periodicStatusUpdateTask.cancel(false));\n          \n          \n            \n                peer.subscribeDisconnect(() -> periodicPingTask.cancel(false));\n          \n          \n            \n                peer.subscribeDisconnect(() -> {\n          \n          \n            \n                    periodicStatusUpdateTask.cancel(false);\n          \n          \n            \n                    periodicPingTask.cancel(false);\n          \n          \n            \n                 });", "bodyHTML": "<p dir=\"auto\">Suggest combining these into one call to <code>subscribeDisconnect</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    peer<span class=\"pl-k\">.</span>subscribeDisconnect(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> periodicStatusUpdateTask<span class=\"pl-k\">.</span>cancel(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    peer<span class=\"pl-k\">.</span>subscribeDisconnect(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> periodicPingTask<span class=\"pl-k\">.</span>cancel(<span class=\"pl-c1\">false</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    peer<span class=\"pl-k\">.</span>subscribeDisconnect(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        periodicStatusUpdateTask<span class=\"pl-k\">.</span>cancel(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        periodicPingTask<span class=\"pl-k\">.</span>cancel(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-05-13T00:06:51Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManager.java", "diffHunk": "@@ -105,7 +111,49 @@ public static Eth2PeerManager create(\n         peerValidatorFactory,\n         attestationSubnetService,\n         rpcEncoding,\n-        eth2RpcPingInterval);\n+        eth2RpcPingInterval,\n+        eth2StatusUpdateInterval);\n+  }\n+\n+  private void setUpPeriodicTasksForPeer(Eth2Peer peer) {\n+    SafeFuture<Void> periodicStatusUpdateTask = periodicallyUpdatePeerStatus(peer);\n+    SafeFuture<Void> periodicPingTask = periodicallyPingPeer(peer);\n+    peer.subscribeDisconnect(() -> periodicStatusUpdateTask.cancel(false));\n+    peer.subscribeDisconnect(() -> periodicPingTask.cancel(false));", "originalCommit": "449ea320b1574ead31e8c09183e2cb9b14497834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwNTU1Mw==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424505553", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-05-13T14:57:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMTg1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424103043", "body": "I misunderstood this when I read the ping PR, but we shouldn't be ignoring futures here.  If the `peer:sendStatus` call fails (ie we don't get a response from them or it's invalid) - what should we do?  Feels like we should disconnect if we get too many of those but definitely should at least report it at debug level.", "bodyText": "I misunderstood this when I read the ping PR, but we shouldn't be ignoring futures here.  If the peer:sendStatus call fails (ie we don't get a response from them or it's invalid) - what should we do?  Feels like we should disconnect if we get too many of those but definitely should at least report it at debug level.", "bodyHTML": "<p dir=\"auto\">I misunderstood this when I read the ping PR, but we shouldn't be ignoring futures here.  If the <code>peer:sendStatus</code> call fails (ie we don't get a response from them or it's invalid) - what should we do?  Feels like we should disconnect if we get too many of those but definitely should at least report it at debug level.</p>", "author": "ajsutton", "createdAt": "2020-05-13T00:11:35Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManager.java", "diffHunk": "@@ -105,7 +111,49 @@ public static Eth2PeerManager create(\n         peerValidatorFactory,\n         attestationSubnetService,\n         rpcEncoding,\n-        eth2RpcPingInterval);\n+        eth2RpcPingInterval,\n+        eth2StatusUpdateInterval);\n+  }\n+\n+  private void setUpPeriodicTasksForPeer(Eth2Peer peer) {\n+    SafeFuture<Void> periodicStatusUpdateTask = periodicallyUpdatePeerStatus(peer);\n+    SafeFuture<Void> periodicPingTask = periodicallyPingPeer(peer);\n+    peer.subscribeDisconnect(() -> periodicStatusUpdateTask.cancel(false));\n+    peer.subscribeDisconnect(() -> periodicPingTask.cancel(false));\n+  }\n+\n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "originalCommit": "449ea320b1574ead31e8c09183e2cb9b14497834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwODI4NQ==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424508285", "bodyText": "@Nashatyrev has a PR up that counts the number of outstanding requests and disconnects at a certain point (specifically for PING messages). I think the future value still gets ignored in Anton's PR, but we count the number of outstanding requests instead. I think the same approach can be applied to periodically updating peer status.", "author": "cemozerr", "createdAt": "2020-05-13T15:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwOTQ4OA==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424509488", "bodyText": "So, I'm probably going to merge this in and make another ticket for dealing with outstanding Status requests. (not to step Anton's toes even further)", "author": "cemozerr", "createdAt": "2020-05-13T15:02:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUxMjYyNA==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424512624", "bodyText": "Also @Nashatyrev, this made me think, and am now curious, if instead of specifically counting outstanding PING requests (in this PR #1779), if we should count all outstanding requests by type in the Eth2Peer.sendRequest method. It's probably important for us to know if the peer is not responding to requests of any type.", "author": "cemozerr", "createdAt": "2020-05-13T15:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyMDc2MQ==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424520761", "bodyText": "I've also added .finish() handler to deal with success and failure by logging some information.", "author": "cemozerr", "createdAt": "2020-05-13T15:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU0MjgzMw==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424542833", "bodyText": "Ping is sent with a predefined period so when missing some ping responses means that some significant time have passed without responses. While you may potentially do a lot of concurrent requests in say 10ms and all of them would be pending for responses", "author": "Nashatyrev", "createdAt": "2020-05-13T15:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyMzM0Nw==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424623347", "bodyText": "I understand. So I think that check would need to be specific to each Eth2Peer.", "author": "cemozerr", "createdAt": "2020-05-13T17:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzA0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyOTA5Ng==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424529096", "body": "This variant of `runWithFixedDelay` returns `Future` which is actually never completes (until `cancel()` call). So the only method which makes sense here is `Future.cancel()`. Any exception happened in the periodic task is reported via exceptionHandler (`(err) -> LOG.debug(\"Exception updating peer status.\", err))`)\r\n\r\nThat's probably my fault and the `runWithFixedDelay` method should return something like `Cancellable` instead of `SafeFuture<Void>`\r\n", "bodyText": "This variant of runWithFixedDelay returns Future which is actually never completes (until cancel() call). So the only method which makes sense here is Future.cancel(). Any exception happened in the periodic task is reported via exceptionHandler ((err) -> LOG.debug(\"Exception updating peer status.\", err)))\nThat's probably my fault and the runWithFixedDelay method should return something like Cancellable instead of SafeFuture<Void>", "bodyHTML": "<p dir=\"auto\">This variant of <code>runWithFixedDelay</code> returns <code>Future</code> which is actually never completes (until <code>cancel()</code> call). So the only method which makes sense here is <code>Future.cancel()</code>. Any exception happened in the periodic task is reported via exceptionHandler (<code>(err) -&gt; LOG.debug(\"Exception updating peer status.\", err))</code>)</p>\n<p dir=\"auto\">That's probably my fault and the <code>runWithFixedDelay</code> method should return something like <code>Cancellable</code> instead of <code>SafeFuture&lt;Void&gt;</code></p>", "author": "Nashatyrev", "createdAt": "2020-05-13T15:28:28Z", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManager.java", "diffHunk": "@@ -105,7 +111,49 @@ public static Eth2PeerManager create(\n         peerValidatorFactory,\n         attestationSubnetService,\n         rpcEncoding,\n-        eth2RpcPingInterval);\n+        eth2RpcPingInterval,\n+        eth2StatusUpdateInterval);\n+  }\n+\n+  private void setUpPeriodicTasksForPeer(Eth2Peer peer) {\n+    SafeFuture<Void> periodicStatusUpdateTask = periodicallyUpdatePeerStatus(peer);\n+    SafeFuture<Void> periodicPingTask = periodicallyPingPeer(peer);\n+    peer.subscribeDisconnect(() -> periodicStatusUpdateTask.cancel(false));\n+    peer.subscribeDisconnect(() -> periodicPingTask.cancel(false));\n+  }\n+\n+  @SuppressWarnings(\"FutureReturnValueIgnored\")\n+  SafeFuture<Void> periodicallyUpdatePeerStatus(Eth2Peer peer) {\n+    return asyncRunner\n+        .runWithFixedDelay(\n+            peer::sendStatus,\n+            eth2StatusUpdateInterval.getSeconds(),\n+            TimeUnit.SECONDS,\n+            (err) -> LOG.debug(\"Exception updating peer status.\", err))\n+        .exceptionallyCompose(", "originalCommit": "449ea320b1574ead31e8c09183e2cb9b14497834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNDYwNA==", "url": "https://github.com/ConsenSys/teku/pull/1773#discussion_r424624604", "bodyText": "We discussed this further offline, and Anton made a patch that switched runWithFixedDelay to return a Cancellable object instead of a SafeFuture. I've included the patch in this PR.", "author": "cemozerr", "createdAt": "2020-05-13T17:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyOTA5Ng=="}], "type": "inlineReview"}, {"oid": "339c0ee7f760bc2188ceb788b098d1ce5ec13597", "url": "https://github.com/ConsenSys/teku/commit/339c0ee7f760bc2188ceb788b098d1ce5ec13597", "message": ".", "committedDate": "2020-05-13T17:32:08Z", "type": "commit"}, {"oid": "57f749798201ba02f3f5585e0a7f781f0aa8916b", "url": "https://github.com/ConsenSys/teku/commit/57f749798201ba02f3f5585e0a7f781f0aa8916b", "message": "Log when individual calls fail", "committedDate": "2020-05-13T17:32:33Z", "type": "commit"}, {"oid": "d5a3e7f19b3ed9347158a815f191884d063601d9", "url": "https://github.com/ConsenSys/teku/commit/d5a3e7f19b3ed9347158a815f191884d063601d9", "message": "Run spotless", "committedDate": "2020-05-13T17:35:07Z", "type": "commit"}, {"oid": "02f7ff9092b9fdf36abcc3338edc169866ba4032", "url": "https://github.com/ConsenSys/teku/commit/02f7ff9092b9fdf36abcc3338edc169866ba4032", "message": "Make AsyncRunner.runWithFixedDelay interface clearer with returning simple Cancellable and removing one unused variant", "committedDate": "2020-05-13T17:35:57Z", "type": "commit"}, {"oid": "e670aafb6601ba0334dd97927652d05c98153cdc", "url": "https://github.com/ConsenSys/teku/commit/e670aafb6601ba0334dd97927652d05c98153cdc", "message": "Update periodic functions to work with new cancellable object", "committedDate": "2020-05-13T17:44:26Z", "type": "commit"}, {"oid": "dd3e4366c62fd8e0b8c07ee97dcb034f73c840f6", "url": "https://github.com/ConsenSys/teku/commit/dd3e4366c62fd8e0b8c07ee97dcb034f73c840f6", "message": "Run spotless", "committedDate": "2020-05-13T17:47:44Z", "type": "commit"}, {"oid": "6ebe00b0fd9e079b8447f37005373fcb63910fd1", "url": "https://github.com/ConsenSys/teku/commit/6ebe00b0fd9e079b8447f37005373fcb63910fd1", "message": "Merge remote-tracking branch 'remotes/origin/master' into addPeriodicStatusUpdates\n\n# Conflicts:\n#\tnetworking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/Eth2NetworkBuilder.java\n#\tnetworking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManager.java\n#\tnetworking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManagerTest.java\n#\tnetworking/eth2/src/testFixtures/java/tech/pegasys/teku/networking/eth2/Eth2NetworkFactory.java", "committedDate": "2020-05-14T15:35:25Z", "type": "commit"}, {"oid": "6ebe00b0fd9e079b8447f37005373fcb63910fd1", "url": "https://github.com/ConsenSys/teku/commit/6ebe00b0fd9e079b8447f37005373fcb63910fd1", "message": "Merge remote-tracking branch 'remotes/origin/master' into addPeriodicStatusUpdates\n\n# Conflicts:\n#\tnetworking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/Eth2NetworkBuilder.java\n#\tnetworking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManager.java\n#\tnetworking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/peers/Eth2PeerManagerTest.java\n#\tnetworking/eth2/src/testFixtures/java/tech/pegasys/teku/networking/eth2/Eth2NetworkFactory.java", "committedDate": "2020-05-14T15:35:25Z", "type": "forcePushed"}]}