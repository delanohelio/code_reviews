{"pr_number": 3151, "pr_title": "Check equality of proposer slashing signed block header messages", "pr_author": "cemozerr", "pr_createdAt": "2020-11-04T18:29:03Z", "pr_url": "https://github.com/ConsenSys/teku/pull/3151", "timeline": [{"oid": "4a2f360817e6f819b11064dbc202c4d93941d826", "url": "https://github.com/ConsenSys/teku/commit/4a2f360817e6f819b11064dbc202c4d93941d826", "message": "Check equality of proposer slashing signed block header messages", "committedDate": "2020-11-04T18:26:25Z", "type": "commit"}, {"oid": "2fe1e26b7287852895e8bd7700f9bef35cf83cab", "url": "https://github.com/ConsenSys/teku/commit/2fe1e26b7287852895e8bd7700f9bef35cf83cab", "message": "Run spotless", "committedDate": "2020-11-04T18:31:54Z", "type": "commit"}, {"oid": "f19619d5e802fa10d8797cfeab9c789191d82169", "url": "https://github.com/ConsenSys/teku/commit/f19619d5e802fa10d8797cfeab9c789191d82169", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-04T18:32:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MDk5MA==", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517560990", "body": "(nit) We can simplify:\r\n```suggestion\r\n                !Objects.equals(\r\n                    header1.getMessage(),\r\n                    header2.getMessage()),\r\n```", "bodyText": "(nit) We can simplify:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            !Objects.equals(\n          \n          \n            \n                                proposerSlashing.getHeader_1().getMessage(),\n          \n          \n            \n                                proposerSlashing.getHeader_2().getMessage()),\n          \n          \n            \n                            !Objects.equals(\n          \n          \n            \n                                header1.getMessage(),\n          \n          \n            \n                                header2.getMessage()),", "bodyHTML": "<p dir=\"auto\">(nit) We can simplify:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">!</span><span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"x x-first\">proposerSlashing</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getHeader_1()</span><span class=\"pl-k\">.</span>getMessage(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"x x-first\">proposerSlashing</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getHeader_2()</span><span class=\"pl-k\">.</span>getMessage()),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">!</span><span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"x x-first x-last\">header1</span><span class=\"pl-k\">.</span>getMessage(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"x x-first x-last\">header2</span><span class=\"pl-k\">.</span>getMessage()),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-11-04T18:52:51Z", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationvalidators/ProposerSlashingStateTransitionValidator.java", "diffHunk": "@@ -45,7 +45,9 @@\n                 ProposerSlashingInvalidReason.PROPOSER_INDICES_DIFFERENT),\n         () ->\n             check(\n-                !Objects.equals(proposerSlashing.getHeader_1(), proposerSlashing.getHeader_2()),\n+                !Objects.equals(\n+                    proposerSlashing.getHeader_1().getMessage(),\n+                    proposerSlashing.getHeader_2().getMessage()),", "originalCommit": "f19619d5e802fa10d8797cfeab9c789191d82169", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3MzA5OA==", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517573098", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T19:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MDk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2NDEyNg==", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517564126", "body": "(nit) I'd declare the second header as a variable, and assert that the 2 headers are not equal, just so we're being really explicit and verifying our assumptions:\r\n\r\n```suggestion\r\n    final SignedBeaconBlockHeader header2 = new SignedBeaconBlockHeader(signedBeaconBlockHeader.getMessage(), BLSSignature.random(100);\r\n    assertThat(header2).isNotEqualTo(signedBeaconBlockHeader);\r\n    ProposerSlashing slashing =\r\n        new ProposerSlashing(\r\n            header2,\r\n            signedBeaconBlockHeader);\r\n```", "bodyText": "(nit) I'd declare the second header as a variable, and assert that the 2 headers are not equal, just so we're being really explicit and verifying our assumptions:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ProposerSlashing slashing =\n          \n          \n            \n                    new ProposerSlashing(\n          \n          \n            \n                        new SignedBeaconBlockHeader(\n          \n          \n            \n                            signedBeaconBlockHeader.getMessage(), BLSSignature.random(100)),\n          \n          \n            \n                        signedBeaconBlockHeader);\n          \n          \n            \n                final SignedBeaconBlockHeader header2 = new SignedBeaconBlockHeader(signedBeaconBlockHeader.getMessage(), BLSSignature.random(100);\n          \n          \n            \n                assertThat(header2).isNotEqualTo(signedBeaconBlockHeader);\n          \n          \n            \n                ProposerSlashing slashing =\n          \n          \n            \n                    new ProposerSlashing(\n          \n          \n            \n                        header2,\n          \n          \n            \n                        signedBeaconBlockHeader);", "bodyHTML": "<p dir=\"auto\">(nit) I'd declare the second header as a variable, and assert that the 2 headers are not equal, just so we're being really explicit and verifying our assumptions:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">ProposerSlashing</span> slashing <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ProposerSlashing</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SignedBeaconBlockHeader</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                signedBeaconBlockHeader<span class=\"pl-k\">.</span>getMessage(), <span class=\"pl-smi\">BLSSignature</span><span class=\"pl-k\">.</span>random(<span class=\"pl-c1\">100</span>)),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            signedBeaconBlockHeader);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">SignedBeaconBlockHeader</span> header2 <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SignedBeaconBlockHeader</span>(signedBeaconBlockHeader<span class=\"pl-k\">.</span>getMessage(), <span class=\"pl-smi\">BLSSignature</span><span class=\"pl-k\">.</span>random(<span class=\"pl-c1\">100</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(header2)<span class=\"pl-k\">.</span>isNotEqualTo(signedBeaconBlockHeader);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">ProposerSlashing</span> slashing <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ProposerSlashing</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            header2,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            signedBeaconBlockHeader);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-11-04T18:58:03Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/ProposerSlashingValidatorTest.java", "diffHunk": "@@ -117,4 +119,26 @@ public void shouldIgnoreProposerSlashingForTheSameProposer() throws Exception {\n     assertThat(proposerSlashingValidator.validate(slashing1)).isEqualTo(ACCEPT);\n     assertThat(proposerSlashingValidator.validate(slashing2)).isEqualTo(IGNORE);\n   }\n+\n+  @Test\n+  public void shouldRejectProposerSlashingForTwoSignedHeadersWithSameMessageButDifferentSignature()\n+      throws Exception {\n+    beaconChainUtil.initializeStorage();\n+    beaconChainUtil.createAndImportBlockAtSlot(6);\n+    stateTransitionValidator = new ProposerSlashingStateTransitionValidator();\n+    SignedBeaconBlockHeader signedBeaconBlockHeader =\n+        dataStructureUtil.randomSignedBeaconBlockHeader();\n+    ProposerSlashing slashing =\n+        new ProposerSlashing(\n+            new SignedBeaconBlockHeader(\n+                signedBeaconBlockHeader.getMessage(), BLSSignature.random(100)),\n+            signedBeaconBlockHeader);", "originalCommit": "f19619d5e802fa10d8797cfeab9c789191d82169", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3NDc2NQ==", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517574765", "bodyText": "Done.", "author": "cemozerr", "createdAt": "2020-11-04T19:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2NDEyNg=="}], "type": "inlineReview"}, {"oid": "342ebfb340808a8fc1601c7c7d4c25f841af36f4", "url": "https://github.com/ConsenSys/teku/commit/342ebfb340808a8fc1601c7c7d4c25f841af36f4", "message": "Incorporate feedback", "committedDate": "2020-11-04T19:18:10Z", "type": "commit"}, {"oid": "969e3b9c64bb29ded294a6943ba523a759c3c311", "url": "https://github.com/ConsenSys/teku/commit/969e3b9c64bb29ded294a6943ba523a759c3c311", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-04T20:22:07Z", "type": "commit"}, {"oid": "9c5c97160d127388a5c90cfebe0f3b40f3039454", "url": "https://github.com/ConsenSys/teku/commit/9c5c97160d127388a5c90cfebe0f3b40f3039454", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-04T22:07:17Z", "type": "commit"}, {"oid": "60723113ec8595ef29380f4f33096bb5c0b8fc91", "url": "https://github.com/ConsenSys/teku/commit/60723113ec8595ef29380f4f33096bb5c0b8fc91", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-04T22:31:34Z", "type": "commit"}, {"oid": "07bde0b125fb704269e42a3e4d9d015802794d61", "url": "https://github.com/ConsenSys/teku/commit/07bde0b125fb704269e42a3e4d9d015802794d61", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-05T03:10:09Z", "type": "commit"}, {"oid": "9ac6fe6341a0883ffc3eb25648df3fb0d3e82638", "url": "https://github.com/ConsenSys/teku/commit/9ac6fe6341a0883ffc3eb25648df3fb0d3e82638", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-05T13:13:57Z", "type": "commit"}, {"oid": "ce085496c27640a207b78ee0cce718aa56b6520a", "url": "https://github.com/ConsenSys/teku/commit/ce085496c27640a207b78ee0cce718aa56b6520a", "message": "Merge branch 'master' into fixMinorStateTransitionBug", "committedDate": "2020-11-05T13:44:50Z", "type": "commit"}]}