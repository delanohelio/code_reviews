{"pr_number": 2748, "pr_title": "[2722] add GetPeers and GetPeersById api endpoints", "pr_author": "rolfyone", "pr_createdAt": "2020-09-08T03:31:42Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2748", "timeline": [{"oid": "5eac71141d85d4475f783c126a8973372035b34d", "url": "https://github.com/ConsenSys/teku/commit/5eac71141d85d4475f783c126a8973372035b34d", "message": "add GetPeers and GetPeersById api endpoints\n\n - deprecated a number of endpoints that are now served by standard endpoints\n   - /network/enr -> /eth/v1/node/identity\n   - /network/listen_addresses -> /eth/v1/node/identity\n   - /network/listen_port -> /eth/v1/node/identity\n   - /network/peer_count -> /eth/v1/node/peers\n   - /network/peer_id -> /eth/v1/node/identity\n   - /network/peers -> /eth/v1/node/peers\n\n - provided /eth/v1/node/peers\n   - never sets ENR currently, as its a non trivial exercise to retrieve.\n - provided /eth/v1/node/peers/:peer_id\n\n Only added an integration test for getPeerById, as getPeers is just a case of calling that multiple times.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-08T03:27:34Z", "type": "commit"}, {"oid": "135239aa8ae4b43a4747ed90012eff55fd1e02a9", "url": "https://github.com/ConsenSys/teku/commit/135239aa8ae4b43a4747ed90012eff55fd1e02a9", "message": "Merge remote-tracking branch 'upstream/master' into 2722-node-peers", "committedDate": "2020-09-08T03:28:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0MTk5MQ==", "url": "https://github.com/ConsenSys/teku/pull/2748#discussion_r484641991", "body": "This is definitely not ideal.  It probably should ask the network to convert the `peerId` into the right type rather than hard coding a `LibP2PNodeId`.  Probably the simplest thing would be to overload `P2PNetwork.getPeer` to have a version that takes a string - then the conversion to a `NodeId` can be done internally.\r\n\r\nShould consider what to do when the peerId isn't valid base58 - probably should return not found.", "bodyText": "This is definitely not ideal.  It probably should ask the network to convert the peerId into the right type rather than hard coding a LibP2PNodeId.  Probably the simplest thing would be to overload P2PNetwork.getPeer to have a version that takes a string - then the conversion to a NodeId can be done internally.\nShould consider what to do when the peerId isn't valid base58 - probably should return not found.", "bodyHTML": "<p dir=\"auto\">This is definitely not ideal.  It probably should ask the network to convert the <code>peerId</code> into the right type rather than hard coding a <code>LibP2PNodeId</code>.  Probably the simplest thing would be to overload <code>P2PNetwork.getPeer</code> to have a version that takes a string - then the conversion to a <code>NodeId</code> can be done internally.</p>\n<p dir=\"auto\">Should consider what to do when the peerId isn't valid base58 - probably should return not found.</p>", "author": "ajsutton", "createdAt": "2020-09-08T04:22:46Z", "path": "data/provider/src/main/java/tech/pegasys/teku/api/NetworkDataProvider.java", "diffHunk": "@@ -89,4 +94,23 @@ public int getListenPort() {\n   public Metadata getMetadata() {\n     return new Metadata(network.getMetadata());\n   }\n+\n+  public List<tech.pegasys.teku.api.response.v1.node.Peer> getPeers() {\n+    return network.streamPeers().map(this::toPeer).collect(Collectors.toList());\n+  }\n+\n+  public Optional<tech.pegasys.teku.api.response.v1.node.Peer> getPeerById(final String peerId) {\n+    final NodeId nodeId = new LibP2PNodeId(PeerId.fromBase58(peerId));", "originalCommit": "135239aa8ae4b43a4747ed90012eff55fd1e02a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0NTM1NA==", "url": "https://github.com/ConsenSys/teku/pull/2748#discussion_r484645354", "bodyText": "wasn't super keen on that, means pulling in libp2p too, but wasn't sure what else to do.. will have a go with what you've suggested... otherwise i could potentially implement the interface for testing i guess...", "author": "rolfyone", "createdAt": "2020-09-08T04:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0MTk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0NTk4MQ==", "url": "https://github.com/ConsenSys/teku/pull/2748#discussion_r484645981", "bodyText": "There's a MockNodeId which implements the interface for you.  I guess you could have another implementation that's a SimpleNodeId which just holds the base58 encoded node ID, but I think I'd be more inclined to leave it to the network to decode.", "author": "ajsutton", "createdAt": "2020-09-08T04:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0MTk5MQ=="}], "type": "inlineReview"}, {"oid": "2c33ae18ceb06a3650113f1832d3f025dcb4901a", "url": "https://github.com/ConsenSys/teku/commit/2c33ae18ceb06a3650113f1832d3f025dcb4901a", "message": "review comments\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-08T10:00:28Z", "type": "commit"}, {"oid": "3d138ba0b320d309dd82beb878b071ee819f2aee", "url": "https://github.com/ConsenSys/teku/commit/3d138ba0b320d309dd82beb878b071ee819f2aee", "message": "make ENR explicitly nullable.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>", "committedDate": "2020-09-08T21:04:29Z", "type": "commit"}, {"oid": "b427678dcaf87832db81dad351d71ff6dd359d61", "url": "https://github.com/ConsenSys/teku/commit/b427678dcaf87832db81dad351d71ff6dd359d61", "message": "Merge remote-tracking branch 'upstream/master' into 2722-node-peers", "committedDate": "2020-09-08T21:05:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNzU4OA==", "url": "https://github.com/ConsenSys/teku/pull/2748#discussion_r485217588", "body": "This should just delegate to the underlying network\r\n```suggestion\r\n    return network.parseNodeId(nodeId);\r\n```", "bodyText": "This should just delegate to the underlying network\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return new LibP2PNodeId(PeerId.fromBase58(nodeId));\n          \n          \n            \n                return network.parseNodeId(nodeId);", "bodyHTML": "<p dir=\"auto\">This should just delegate to the underlying network</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">LibP2PNodeId</span><span class=\"x\">(</span><span class=\"pl-smi x\">PeerId</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">fromBase58</span>(nodeId<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"x x-first\">network</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">parseNodeId</span>(nodeId);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-09-08T21:55:04Z", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/network/DelegatingP2PNetwork.java", "diffHunk": "@@ -41,6 +43,11 @@ public PeerAddress createPeerAddress(final DiscoveryPeer discoveryPeer) {\n     return network.createPeerAddress(discoveryPeer);\n   }\n \n+  @Override\n+  public NodeId parseNodeId(final String nodeId) {\n+    return new LibP2PNodeId(PeerId.fromBase58(nodeId));", "originalCommit": "b427678dcaf87832db81dad351d71ff6dd359d61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56f21b41ac3a9c97204e7d87fc93f85ef7c34bb9", "url": "https://github.com/ConsenSys/teku/commit/56f21b41ac3a9c97204e7d87fc93f85ef7c34bb9", "message": "Update networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/network/DelegatingP2PNetwork.java\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>", "committedDate": "2020-09-08T22:53:42Z", "type": "commit"}, {"oid": "b69342b8e6c4f1d9c45dd7d2653b19ede3f22fff", "url": "https://github.com/ConsenSys/teku/commit/b69342b8e6c4f1d9c45dd7d2653b19ede3f22fff", "message": "spotless", "committedDate": "2020-09-08T22:58:13Z", "type": "commit"}]}