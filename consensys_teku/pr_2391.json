{"pr_number": 2391, "pr_title": "[Issue-2291] Migrate more calls to get state", "pr_author": "mbaxter", "pr_createdAt": "2020-07-20T21:15:56Z", "pr_url": "https://github.com/ConsenSys/teku/pull/2391", "timeline": [{"oid": "0fd700a4ed59dc38bbe69177151ca8a34500f42d", "url": "https://github.com/ConsenSys/teku/commit/0fd700a4ed59dc38bbe69177151ca8a34500f42d", "message": "Replace calls to getBlockState", "committedDate": "2020-07-20T19:02:49Z", "type": "commit"}, {"oid": "37a076ce4643346fe1370ad86046d545c999a0d4", "url": "https://github.com/ConsenSys/teku/commit/37a076ce4643346fe1370ad86046d545c999a0d4", "message": "Modify updateBestBlock to use async block / state retrieval", "committedDate": "2020-07-20T19:19:55Z", "type": "commit"}, {"oid": "1ee36b64f007f36cb7b880552164350256ce0f75", "url": "https://github.com/ConsenSys/teku/commit/1ee36b64f007f36cb7b880552164350256ce0f75", "message": "Start migrating RecentChainData.getStateInEffectAtSlot", "committedDate": "2020-07-20T19:28:27Z", "type": "commit"}, {"oid": "0687a3b373b768531b6779e39f3557066b910869", "url": "https://github.com/ConsenSys/teku/commit/0687a3b373b768531b6779e39f3557066b910869", "message": "Update subnet calculation to use async retrieveStateInEffectAtSlot()", "committedDate": "2020-07-20T19:39:14Z", "type": "commit"}, {"oid": "492cd65f833dcb26fe75bf1393dcb4f7fc6f496f", "url": "https://github.com/ConsenSys/teku/commit/492cd65f833dcb26fe75bf1393dcb4f7fc6f496f", "message": "Remove method getStateInEffectAtSlot", "committedDate": "2020-07-20T19:41:48Z", "type": "commit"}, {"oid": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "url": "https://github.com/ConsenSys/teku/commit/bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "message": "Rework bestBlock update to prevent rollbacks of the chainhead", "committedDate": "2020-07-20T22:31:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTU2OA==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r457765568", "body": "These join calls are spreading through tests a lot.  It's not the end of the world but if for some reason the future wasn't completed they'd hang forever which would make it very hard to know which test was failing.\r\n\r\nWe already have `SafeFutureAssert` to add some utilities for asserting stuff about futures so I think we could add:\r\n```suggestion\r\n      public void isCompletedWithEmptyOptional() {\r\n    isCompleted();\r\n    Assertions.assertThat(actual.join()).isEqualTo(Optional.empty());\r\n  }\r\n  \r\n  public void isCompletedWithNonEmptyOptional() {\r\n    isCompleted();\r\n    Assertions.assertThat(actual.join()).isNotEqualTo(Optional.empty());  \r\n  }\r\n```\r\n", "bodyText": "These join calls are spreading through tests a lot.  It's not the end of the world but if for some reason the future wasn't completed they'd hang forever which would make it very hard to know which test was failing.\nWe already have SafeFutureAssert to add some utilities for asserting stuff about futures so I think we could add:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation).join()).isNotEqualTo(Optional.empty());\n          \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation2).join()).isEqualTo(Optional.empty());\n          \n          \n            \n                  public void isCompletedWithEmptyOptional() {\n          \n          \n            \n                isCompleted();\n          \n          \n            \n                Assertions.assertThat(actual.join()).isEqualTo(Optional.empty());\n          \n          \n            \n              }\n          \n          \n            \n              \n          \n          \n            \n              public void isCompletedWithNonEmptyOptional() {\n          \n          \n            \n                isCompleted();\n          \n          \n            \n                Assertions.assertThat(actual.join()).isNotEqualTo(Optional.empty());  \n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">These join calls are spreading through tests a lot.  It's not the end of the world but if for some reason the future wasn't completed they'd hang forever which would make it very hard to know which test was failing.</p>\n<p dir=\"auto\">We already have <code>SafeFutureAssert</code> to add some utilities for asserting stuff about futures so I think we could add:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation)<span class=\"pl-k\">.</span>join())<span class=\"pl-k\">.</span>isNotEqualTo(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation2)<span class=\"pl-k\">.</span>join())<span class=\"pl-k\">.</span>isEqualTo(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> isCompletedWithEmptyOptional() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    isCompleted();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Assertions</span><span class=\"pl-k\">.</span>assertThat(actual<span class=\"pl-k\">.</span>join())<span class=\"pl-k\">.</span>isEqualTo(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> isCompletedWithNonEmptyOptional() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    isCompleted();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Assertions</span><span class=\"pl-k\">.</span>assertThat(actual<span class=\"pl-k\">.</span>join())<span class=\"pl-k\">.</span>isNotEqualTo(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());  </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-21T00:28:35Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/subnets/AttestationSubnetSubscriptionsTest.java", "diffHunk": "@@ -73,16 +73,16 @@ void getChannelReturnsEmptyIfNotSubscribedToSubnet() {\n     int subnetId = computeSubnetId(attestation);\n     assertThat(computeSubnetId(attestation2)).isNotEqualTo(subnetId); // Sanity check\n     subnetSubscriptions.subscribeToSubnetId(subnetId);\n-    assertThat(subnetSubscriptions.getChannel(attestation)).isNotEqualTo(Optional.empty());\n-    assertThat(subnetSubscriptions.getChannel(attestation2)).isEqualTo(Optional.empty());\n+    assertThat(subnetSubscriptions.getChannel(attestation).join()).isNotEqualTo(Optional.empty());\n+    assertThat(subnetSubscriptions.getChannel(attestation2).join()).isEqualTo(Optional.empty());", "originalCommit": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE5Mjg2MQ==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r458192861", "bodyText": "neat \ud83c\udf89", "author": "mbaxter", "createdAt": "2020-07-21T15:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTcwNQ==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r457765705", "body": "These can just be:\r\n```suggestion\r\n    assertThat(subnetSubscriptions.getChannel(attestation1))\r\n        .isCompletedWith(Optional.of(topicChannel1));\r\n    assertThat(subnetSubscriptions.getChannel(attestation2))\r\n        .isCompletedWith(Optional.of(topicChannel2));\r\n```", "bodyText": "These can just be:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation1).join())\n          \n          \n            \n                    .isEqualTo(Optional.of(topicChannel1));\n          \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation2).join())\n          \n          \n            \n                    .isEqualTo(Optional.of(topicChannel2));\n          \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation1))\n          \n          \n            \n                    .isCompletedWith(Optional.of(topicChannel1));\n          \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation2))\n          \n          \n            \n                    .isCompletedWith(Optional.of(topicChannel2));", "bodyHTML": "<p dir=\"auto\">These can just be:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation1)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">join()</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .<span class=\"x x-first x-last\">isEqualTo</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel1));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation2)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">join()</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .<span class=\"x x-first x-last\">isEqualTo</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel2));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation1))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .<span class=\"x x-first x-last\">isCompletedWith</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel1));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation2))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .<span class=\"x x-first x-last\">isCompletedWith</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel2));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-21T00:29:07Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/subnets/AttestationSubnetSubscriptionsTest.java", "diffHunk": "@@ -110,8 +110,10 @@ void shouldSubscribeToCommitteesOnDifferentSubnets() {\n     verify(gossipNetwork)\n         .subscribe(argThat(i -> i.contains(\"beacon_attestation_\" + subnetId2)), any());\n \n-    assertThat(subnetSubscriptions.getChannel(attestation1)).isEqualTo(Optional.of(topicChannel1));\n-    assertThat(subnetSubscriptions.getChannel(attestation2)).isEqualTo(Optional.of(topicChannel2));\n+    assertThat(subnetSubscriptions.getChannel(attestation1).join())\n+        .isEqualTo(Optional.of(topicChannel1));\n+    assertThat(subnetSubscriptions.getChannel(attestation2).join())\n+        .isEqualTo(Optional.of(topicChannel2));", "originalCommit": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTc4OQ==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r457765789", "body": "```suggestion\r\n    assertThat(subnetSubscriptions.getChannel(attestation))\r\n        .isCompletedWith(Optional.of(topicChannel));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation).join())\n          \n          \n            \n                    .isEqualTo(Optional.of(topicChannel));\n          \n          \n            \n                assertThat(subnetSubscriptions.getChannel(attestation))\n          \n          \n            \n                    .isCompletedWith(Optional.of(topicChannel));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">join()</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .<span class=\"x x-first x-last\">isEqualTo</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(subnetSubscriptions<span class=\"pl-k\">.</span>getChannel(attestation))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .<span class=\"x x-first x-last\">isCompletedWith</span>(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(topicChannel));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-21T00:29:23Z", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/subnets/AttestationSubnetSubscriptionsTest.java", "diffHunk": "@@ -126,7 +128,8 @@ void shouldUnsubscribeFromOnlyCommitteeOnSubnet() {\n \n     verify(gossipNetwork).subscribe(any(), any());\n \n-    assertThat(subnetSubscriptions.getChannel(attestation)).isEqualTo(Optional.of(topicChannel));\n+    assertThat(subnetSubscriptions.getChannel(attestation).join())\n+        .isEqualTo(Optional.of(topicChannel));", "originalCommit": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NjAwNQ==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r457766005", "body": "nit:\r\n```suggestion\r\n                // during processing\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // during\n          \n          \n            \n                            // processing\n          \n          \n            \n                            // during processing", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> during</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> processing</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> during processing</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-07-21T00:30:11Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -160,16 +160,20 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     }\n \n     if (isRecentData(slot)) {\n-      final Optional<BeaconState> recentState = recentChainData.getStateInEffectAtSlot(slot);\n-      if (recentState.isPresent()) {\n-        LOG.trace(\"State at slot {} was from recent chain data\", slot);\n-        return completedFuture(recentState);\n-      }\n+      return recentChainData\n+          .retrieveStateInEffectAtSlot(slot)\n+          .thenCompose(\n+              recentState -> {\n+                if (recentState.isPresent()) {\n+                  return completedFuture(recentState);\n+                }\n+                // Fall-through to historical query in case state has moved into historical range\n+                // during\n+                // processing", "originalCommit": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3OTc1OQ==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r457779759", "body": "I don't think this works.  Say we have:\r\n\r\n* Update 1 starts, grabs original head as slot 1, trying to set slot to 2.\r\n* Update 2 starts, grabs original head as slot 1, trying to set slot to 3.\r\n* Update 1 completes and sets head to 2\r\n* Update 2 will now be skipped because it expects head to be 1 but it's changed. We then wind up with an outdated head (but at least we don't go backwards).\r\n\r\nI wonder if in `RecentChainData` we should just return the `SafeFuture`.  `ForkChoiceHead` is the key place it gets called from and it probably needs to call `join` so it all happens in the `synchronized` block.  Kind of just pushing the problem down the road unfortunately but I'm struggling to see how else to do it.  Ultimately we need to ensure there is only one thing updating head at a time.", "bodyText": "I don't think this works.  Say we have:\n\nUpdate 1 starts, grabs original head as slot 1, trying to set slot to 2.\nUpdate 2 starts, grabs original head as slot 1, trying to set slot to 3.\nUpdate 1 completes and sets head to 2\nUpdate 2 will now be skipped because it expects head to be 1 but it's changed. We then wind up with an outdated head (but at least we don't go backwards).\n\nI wonder if in RecentChainData we should just return the SafeFuture.  ForkChoiceHead is the key place it gets called from and it probably needs to call join so it all happens in the synchronized block.  Kind of just pushing the problem down the road unfortunately but I'm struggling to see how else to do it.  Ultimately we need to ensure there is only one thing updating head at a time.", "bodyHTML": "<p dir=\"auto\">I don't think this works.  Say we have:</p>\n<ul dir=\"auto\">\n<li>Update 1 starts, grabs original head as slot 1, trying to set slot to 2.</li>\n<li>Update 2 starts, grabs original head as slot 1, trying to set slot to 3.</li>\n<li>Update 1 completes and sets head to 2</li>\n<li>Update 2 will now be skipped because it expects head to be 1 but it's changed. We then wind up with an outdated head (but at least we don't go backwards).</li>\n</ul>\n<p dir=\"auto\">I wonder if in <code>RecentChainData</code> we should just return the <code>SafeFuture</code>.  <code>ForkChoiceHead</code> is the key place it gets called from and it probably needs to call <code>join</code> so it all happens in the <code>synchronized</code> block.  Kind of just pushing the problem down the road unfortunately but I'm struggling to see how else to do it.  Ultimately we need to ensure there is only one thing updating head at a time.</p>", "author": "ajsutton", "createdAt": "2020-07-21T01:20:15Z", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/RecentChainData.java", "diffHunk": "@@ -186,30 +186,43 @@ public StoreTransaction startStoreTransaction() {\n    * @param slot the new best slot\n    */\n   public void updateBestBlock(Bytes32 root, UnsignedLong slot) {\n+    final Optional<SignedBlockAndStateAndSlot> originalChainHead = chainHead;\n+    store\n+        .retrieveBlockAndState(root)\n+        .thenApply(\n+            headBlockAndState ->\n+                headBlockAndState\n+                    .map(head -> SignedBlockAndStateAndSlot.create(head, slot))\n+                    .orElseThrow(\n+                        () ->\n+                            new IllegalStateException(\n+                                String.format(\n+                                    \"Unable to update best block as of slot %s.  Block is unavailable: %s.\",\n+                                    slot, root))))\n+        .thenAccept(headBlock -> updateChainHead(originalChainHead, headBlock))\n+        .reportExceptions();\n+  }\n+\n+  private void updateChainHead(\n+      final Optional<SignedBlockAndStateAndSlot> originalHead,\n+      final SignedBlockAndStateAndSlot newChainHead) {\n     synchronized (this) {\n-      final SignedBeaconBlock newBestBlock = store.getSignedBlock(root);\n-      final BeaconState newBestState = store.getBlockState(root);\n-      if (newBestBlock == null || newBestState == null) {\n-        LOG.warn(\n-            \"Unable to update best block (slot={}, root={}). Corresponding {} unavailable\",\n-            slot,\n-            root,\n-            newBestBlock == null ? \"block\" : \"state\");\n+      if (!chainHead.equals(originalHead)) {\n+        // The chain head has been updated while we were waiting for the newChainHead\n+        // Skip this update to avoid accidentally regressing the chain head\n+        LOG.debug(\"Skipping best block update to avoid potential rollback of the best block.\");", "originalCommit": "bd54c67470aeadf9dd73683c55aa2e47fc35cce7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3OTQyMw==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r458279423", "bodyText": "Right - the current logic will prevent us from rolling back the chain head, but it doesn't guarantee we get the most up-to-date chain head.\nI think as long as we're taking the chain head from RecentChainData  it shouldn't matter if we miss an update on rare occasions should it?  We update the head periodically so it should advance on the next call that completes.", "author": "mbaxter", "createdAt": "2020-07-21T17:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3OTc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ1NzA2Ng==", "url": "https://github.com/ConsenSys/teku/pull/2391#discussion_r458457066", "bodyText": "It makes me nervous and may mean we generate attestations pointing to an outdated head but yeah it probably works -especially since we very likely still have the state in cache since we would have either created it by processing a block or processed an attestation that needed it.\nI think it would be well worth printing an INFO level message each time we skip an update though. If it happens a lot we should be worried and I think it's useful to know how often it is happening.", "author": "ajsutton", "createdAt": "2020-07-22T00:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3OTc1OQ=="}], "type": "inlineReview"}, {"oid": "49b178861ecde60038757f34716d4fe6fa0b9164", "url": "https://github.com/ConsenSys/teku/commit/49b178861ecde60038757f34716d4fe6fa0b9164", "message": "Simplify new test", "committedDate": "2020-07-21T15:21:08Z", "type": "commit"}, {"oid": "c7f9c58c6bd63c6a929b0ef8b6dbd2aea1f2ca48", "url": "https://github.com/ConsenSys/teku/commit/c7f9c58c6bd63c6a929b0ef8b6dbd2aea1f2ca48", "message": "Clean up future test assertions", "committedDate": "2020-07-21T15:50:34Z", "type": "commit"}, {"oid": "6cce9d9cc175c325a646c53588f31783aeb39edf", "url": "https://github.com/ConsenSys/teku/commit/6cce9d9cc175c325a646c53588f31783aeb39edf", "message": "Add some tests for SafeFutureAssert", "committedDate": "2020-07-21T15:52:46Z", "type": "commit"}, {"oid": "81bc6818b21cc2c5f04eb9f731b812b6a7697e64", "url": "https://github.com/ConsenSys/teku/commit/81bc6818b21cc2c5f04eb9f731b812b6a7697e64", "message": "Merge branch 'master' into issue-2291/migrate-more-calls-to-get-state", "committedDate": "2020-07-21T15:53:19Z", "type": "commit"}, {"oid": "7b8c11002a981b3327ef66e32e9ff324ecd33590", "url": "https://github.com/ConsenSys/teku/commit/7b8c11002a981b3327ef66e32e9ff324ecd33590", "message": "Run spotless, fix comment", "committedDate": "2020-07-21T15:57:34Z", "type": "commit"}, {"oid": "0f6bd09e9ec86b9800fa076f0d7fb751d67bf1c9", "url": "https://github.com/ConsenSys/teku/commit/0f6bd09e9ec86b9800fa076f0d7fb751d67bf1c9", "message": "Make RecentChainData the source-of-truth for chain head data", "committedDate": "2020-07-21T17:36:50Z", "type": "commit"}, {"oid": "9db2a214b91dda56f805369b7a72ae248d7b3c21", "url": "https://github.com/ConsenSys/teku/commit/9db2a214b91dda56f805369b7a72ae248d7b3c21", "message": "Merge branch 'master' into issue-2291/migrate-more-calls-to-get-state", "committedDate": "2020-07-22T14:46:01Z", "type": "commit"}, {"oid": "a310ac242e12442ee593520c50b1ab4fbb68daa0", "url": "https://github.com/ConsenSys/teku/commit/a310ac242e12442ee593520c50b1ab4fbb68daa0", "message": "Log at info level", "committedDate": "2020-07-22T14:52:27Z", "type": "commit"}, {"oid": "0f698791a8ec6d1fdde4ec57efacce147fd274d3", "url": "https://github.com/ConsenSys/teku/commit/0f698791a8ec6d1fdde4ec57efacce147fd274d3", "message": "Merge branch 'master' into issue-2291/migrate-more-calls-to-get-state", "committedDate": "2020-07-22T15:08:47Z", "type": "commit"}, {"oid": "850a61ced1bf9bbeb6399198154294a25bc9049b", "url": "https://github.com/ConsenSys/teku/commit/850a61ced1bf9bbeb6399198154294a25bc9049b", "message": "Merge branch 'master' into issue-2291/migrate-more-calls-to-get-state", "committedDate": "2020-07-22T15:18:19Z", "type": "commit"}]}