{"pr_number": 160, "pr_title": "Address PMD violations", "pr_author": "hui-yang", "pr_createdAt": "2020-04-06T23:20:26Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NjYyMQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404446621", "body": "This should be kept small, especially since everything is local. Did you find anytime that this actually helped? Or is the test/implementation just flaky?", "bodyText": "This should be kept small, especially since everything is local. Did you find anytime that this actually helped? Or is the test/implementation just flaky?", "bodyHTML": "<p dir=\"auto\">This should be kept small, especially since everything is local. Did you find anytime that this actually helped? Or is the test/implementation just flaky?</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:22:48Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/deployment/DeploymentServiceIntegrationTest.java", "diffHunk": "@@ -158,7 +156,7 @@ void GIVEN_services_running_WHEN_updated_params_THEN_services_start_with_updated\n         Future<?> result = submitSampleJobDocument(\n                 DeploymentServiceIntegrationTest.class.getResource(\"SampleJobDocument_updated.json\").toURI(),\n                 System.currentTimeMillis());\n-        result.get(30, TimeUnit.SECONDS);\n+        result.get(60, TimeUnit.SECONDS);", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NjgxMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404446810", "body": "Likewise with all of these, they should not be taking this long at all.", "bodyText": "Likewise with all of these, they should not be taking this long at all.", "bodyHTML": "<p dir=\"auto\">Likewise with all of these, they should not be taking this long at all.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:23:24Z", "path": "src/integrationtests/java/com/aws/iot/evergreen/integrationtests/kernel/ServiceConfigMergingTest.java", "diffHunk": "@@ -142,7 +142,7 @@ void GIVEN_kernel_running_single_service_WHEN_merge_change_adding_dependency_THE\n \n         // THEN\n         assertTrue(newServiceStarted.await(60, TimeUnit.SECONDS));\n-        assertTrue(mainRestarted.await(60, TimeUnit.SECONDS));\n+        assertTrue(mainRestarted.await(90, TimeUnit.SECONDS));", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NzY2NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404447664", "body": "Remove this since you fixed this issue as well.", "bodyText": "Remove this since you fixed this issue as well.", "bodyHTML": "<p dir=\"auto\">Remove this since you fixed this issue as well.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:25:53Z", "path": "src/main/java/com/aws/iot/evergreen/config/ConfigurationWriter.java", "diffHunk": "@@ -72,12 +72,9 @@ public static ConfigurationWriter logTransactionsTo(Configuration c, Path p) thr\n     @SuppressWarnings({\"checkstyle:emptycatchblock\"})", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0Nzg1OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404447859", "body": "Why? We want to keep a nice fluent interface that can chain things together. I know PMD doesn't like it, but either ignore it, or change the name to something that makes PMD happy.", "bodyText": "Why? We want to keep a nice fluent interface that can chain things together. I know PMD doesn't like it, but either ignore it, or change the name to something that makes PMD happy.", "bodyHTML": "<p dir=\"auto\">Why? We want to keep a nice fluent interface that can chain things together. I know PMD doesn't like it, but either ignore it, or change the name to something that makes PMD happy.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:26:29Z", "path": "src/main/java/com/aws/iot/evergreen/config/Node.java", "diffHunk": "@@ -67,9 +67,8 @@ public String getName() {\n \n     public abstract void copyFrom(Node n);\n \n-    public <T extends Node> T setParentNeedsToKnow(boolean np) {\n+    public void setParentNeedsToKnow(boolean np) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0ODYzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404448636", "body": "Likewise here, let's either ignore PMD or do a rename instead of changing the interface.", "bodyText": "Likewise here, let's either ignore PMD or do a rename instead of changing the interface.", "bodyHTML": "<p dir=\"auto\">Likewise here, let's either ignore PMD or do a rename instead of changing the interface.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:28:50Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -88,36 +82,34 @@ public void appendTo(Appendable a) throws IOException {\n         appendValueTo(a);\n     }\n \n-    public Topic setValue(Object nv) {\n-        return setValue(System.currentTimeMillis(), nv);\n+    public void setValue(Object nv) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0OTA0OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404449048", "body": "Let's use `Objects.requireNonNull` instead of asserts.", "bodyText": "Let's use Objects.requireNonNull instead of asserts.", "bodyHTML": "<p dir=\"auto\">Let's use <code>Objects.requireNonNull</code> instead of asserts.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:30:06Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -56,10 +56,10 @@ public int size() {\n \n     @Override\n     public void copyFrom(Node from) {\n-        assert (from != null);\n+        assert from != null;", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0OTM4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404449387", "body": "We definitely need to be logging any exceptions from here since so much runs in the publish queue. Otherwise the exceptions will be totally lost.", "bodyText": "We definitely need to be logging any exceptions from here since so much runs in the publish queue. Otherwise the exceptions will be totally lost.", "bodyHTML": "<p dir=\"auto\">We definitely need to be logging any exceptions from here since so much runs in the publish queue. Otherwise the exceptions will be totally lost.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:31:17Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -62,22 +63,15 @@ public void run() {\n             while (true) {\n                 try {\n                     Runnable task = serialized.takeFirst();\n-                    try {\n-                        task.run();\n-                    } catch (Throwable t) {\n-                        logger.atError().setEventType(\"run-on-publish-queue-error\").setCause(t).log();\n-                    }\n+                    task.run();", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0OTQ4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404449483", "body": "I think we need handling here now, we can't just ignore it.", "bodyText": "I think we need handling here now, we can't just ignore it.", "bodyHTML": "<p dir=\"auto\">I think we need handling here now, we can't just ignore it.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:31:36Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -62,22 +63,15 @@ public void run() {\n             while (true) {\n                 try {\n                     Runnable task = serialized.takeFirst();\n-                    try {\n-                        task.run();\n-                    } catch (Throwable t) {\n-                        logger.atError().setEventType(\"run-on-publish-queue-error\").setCause(t).log();\n-                    }\n+                    task.run();\n                 } catch (InterruptedException ignored) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MDI2OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404450269", "body": "Use `Objects.equals(v, targetValue)` instead of this stuff.", "bodyText": "Use Objects.equals(v, targetValue) instead of this stuff.", "bodyHTML": "<p dir=\"auto\">Use <code>Objects.equals(v, targetValue)</code> instead of this stuff.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:33:57Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -397,12 +389,12 @@ private synchronized T get0() {\n          * @return new value\n          */\n         public final synchronized T put(T v) {\n-            if (v == value) {\n+            if (v == null && targetValue == null || v != null && targetValue != null && targetValue.equals(v)) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MDQ4Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404450482", "body": "Same here, rename instead of changing the interface.", "bodyText": "Same here, rename instead of changing the interface.", "bodyHTML": "<p dir=\"auto\">Same here, rename instead of changing the interface.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:34:38Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/EZPlugins.java", "diffHunk": "@@ -51,10 +52,9 @@ private static void walk(Path p, Consumer<Path> action) throws IOException {\n      * Set the plugin root directory.\n      *\n      * @param d plugin root directory\n-     * @return this\n      */\n     @SuppressWarnings({\"checkstyle:emptycatchblock\"})\n-    public final EZPlugins setCacheDirectory(Path d) {\n+    public final void setCacheDirectory(Path d) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MDc2OA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404450768", "body": "perhaps not now, but all this needs to be cleaned up to remove the ignored exceptions like L64 and the print stack trace here.", "bodyText": "perhaps not now, but all this needs to be cleaned up to remove the ignored exceptions like L64 and the print stack trace here.", "bodyHTML": "<p dir=\"auto\">perhaps not now, but all this needs to be cleaned up to remove the ignored exceptions like L64 and the print stack trace here.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:35:32Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/EZPlugins.java", "diffHunk": "@@ -111,10 +110,10 @@ public EZPlugins loadCache() throws IOException {\n             });\n         }\n         walk(untrustedCacheDirectory, p -> {\n-            if (p.toString().endsWith(\".jar\")) {\n+            if (p.toString().endsWith(JAR_FILE_EXTENSION)) {\n                 try {\n                     loadPlugins(false, p);\n-                } catch (Throwable ex) {\n+                } catch (IOException ex) {\n                     e1.compareAndSet(null, new IOException(\"Error loading untrusted plugin \" + p, ex));\n                     ex.printStackTrace(System.out);", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NjIyNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405156224", "bodyText": "I can create a subtask to update all the empty catch blocks.", "author": "hui-yang", "createdAt": "2020-04-07T22:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MDc2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MDkwMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404450902", "body": "This handling is no good. Let's see if we can fix it.", "bodyText": "This handling is no good. Let's see if we can fix it.", "bodyHTML": "<p dir=\"auto\">This handling is no good. Let's see if we can fix it.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:36:00Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/EZPlugins.java", "diffHunk": "@@ -156,10 +155,10 @@ public EZPlugins loadCache() throws IOException {\n      */\n     public EZPlugins clearCache() throws IOException {\n         walk(cacheDirectory, p -> {\n-            if (p.toString().endsWith(\".jar\")) {\n+            if (p.toString().endsWith(JAR_FILE_EXTENSION)) {\n                 try {\n                     Files.delete(p);\n-                } catch (Throwable ex) {\n+                } catch (IOException ex) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MTUwMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404451500", "body": "Not sure about this, probably @fengwa-aws has a better opinion. But for these things, we don't want to crash. IMO we definitely want to report back to the customer (over IPC) when possible what the error was, no matter what. So we need a catch all so that the IPC server doesn't die.", "bodyText": "Not sure about this, probably @fengwa-aws has a better opinion. But for these things, we don't want to crash. IMO we definitely want to report back to the customer (over IPC) when possible what the error was, no matter what. So we need a catch all so that the IPC server doesn't die.", "bodyHTML": "<p dir=\"auto\">Not sure about this, probably @fengwa-aws has a better opinion. But for these things, we don't want to crash. IMO we definitely want to report back to the customer (over IPC) when possible what the error was, no matter what. So we need a catch all so that the IPC server doesn't die.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:37:55Z", "path": "src/main/java/com/aws/iot/evergreen/ipc/AuthHandler.java", "diffHunk": "@@ -103,7 +105,7 @@ void handleAuth(ChannelHandlerContext ctx, FrameReader.MessageFrame message) thr\n                                 .build();\n                 sendResponse(new FrameReader.Message(applicationMessage.toByteArray()), message.requestId,\n                         message.destination, ctx, false);\n-            } catch (Throwable t) {\n+            } catch (IPCException t) {", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MTk4Ng==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404451986", "body": "Let's try not to ignore these on the class level. Methods, perhaps, but ideally we'd just fix it when possible.", "bodyText": "Let's try not to ignore these on the class level. Methods, perhaps, but ideally we'd just fix it when possible.", "bodyHTML": "<p dir=\"auto\">Let's try not to ignore these on the class level. Methods, perhaps, but ideally we'd just fix it when possible.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:39:12Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -49,6 +50,7 @@\n \n import static com.aws.iot.evergreen.util.Utils.getUltimateCause;\n \n+@SuppressWarnings({\"PMD.AvoidCatchingThrowable\", \"PMD.AvoidCatchingGenericException\"})", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MjM5NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404452395", "body": "Please change this so that it can print out `db`. See Fahad's PR for how he did it. Just printing the `backingTask` which is a future really isn't helpful to anyone.", "bodyText": "Please change this so that it can print out db. See Fahad's PR for how he did it. Just printing the backingTask which is a future really isn't helpful to anyone.", "bodyHTML": "<p dir=\"auto\">Please change this so that it can print out <code>db</code>. See Fahad's PR for how he did it. Just printing the <code>backingTask</code> which is a future really isn't helpful to anyone.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:40:32Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -636,16 +646,13 @@ public void handleError() throws InterruptedException {\n     }\n \n     private synchronized void setBackingTask(Runnable r, String db) {\n-        Future bt = backingTask;\n-        if (bt != null) {\n-            backingTask = null;\n-            if (!bt.isDone()) {\n-                logger.info(\"Stopping backingTask {}\", bt);\n-                bt.cancel(true);\n-            }\n+        if (backingTask != null && (!backingTask.isDone() || !backingTask.isCancelled())) {\n+            logger.info(\"Stopping backingTask: {}\", backingTask);", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MjQxMA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404452410", "body": "please drop this down to debug since this is going to be very common.", "bodyText": "please drop this down to debug since this is going to be very common.", "bodyHTML": "<p dir=\"auto\">please drop this down to debug since this is going to be very common.</p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:40:35Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -636,16 +646,13 @@ public void handleError() throws InterruptedException {\n     }\n \n     private synchronized void setBackingTask(Runnable r, String db) {\n-        Future bt = backingTask;\n-        if (bt != null) {\n-            backingTask = null;\n-            if (!bt.isDone()) {\n-                logger.info(\"Stopping backingTask {}\", bt);\n-                bt.cancel(true);\n-            }\n+        if (backingTask != null && (!backingTask.isDone() || !backingTask.isCancelled())) {\n+            logger.info(\"Stopping backingTask: {}\", backingTask);\n+            backingTask.cancel(true);\n         }\n         if (r != null) {\n             backingTask = context.get(ExecutorService.class).submit(r);\n+            logger.info(\"Submit backingTask: {}\", db);", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1MjY3Mg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404452672", "body": "Though unnecessary, can you add clarifying parenthesis. Also change `==` to use `.equals` like `State.INSTALLED.equals(getState())`", "bodyText": "Though unnecessary, can you add clarifying parenthesis. Also change == to use .equals like State.INSTALLED.equals(getState())", "bodyHTML": "<p dir=\"auto\">Though unnecessary, can you add clarifying parenthesis. Also change <code>==</code> to use <code>.equals</code> like <code>State.INSTALLED.equals(getState())</code></p>", "author": "MikeDombo", "createdAt": "2020-04-06T23:41:28Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -769,11 +776,10 @@ public synchronized void addOrUpdateDependency(\n \n     private Subscriber createDependencySubscriber(EvergreenService dependentEvergreenService, State startWhenState) {\n         return (WhatHappened what, Topic t) -> {\n-            if (this.getState() == State.INSTALLED || this.getState() == State.RUNNING) {\n-                if (!dependencyReady(dependentEvergreenService, startWhenState)) {\n-                    this.requestRestart();\n-                    logger.atInfo().setEventType(\"service-restart\").log(\"Restart service because of dependencies\");\n-                }\n+            if (this.getState() == State.INSTALLED || this.getState() == State.RUNNING", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MDI5MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404460290", "body": "Does this work properly with `Collections.EMPTY_LIST`? I though that had a special implementation. Shouldn't we just use an ArrayList initialized on L89?", "bodyText": "Does this work properly with Collections.EMPTY_LIST? I though that had a special implementation. Shouldn't we just use an ArrayList initialized on L89?", "bodyHTML": "<p dir=\"auto\">Does this work properly with <code>Collections.EMPTY_LIST</code>? I though that had a special implementation. Shouldn't we just use an ArrayList initialized on L89?</p>", "author": "MikeDombo", "createdAt": "2020-04-07T00:05:14Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -347,9 +347,8 @@ public void installCliTool(URL resource) {\n         }\n     }\n \n-    @SuppressWarnings(\"PMD.NullAssignment\")\n     public synchronized void clearODcache() {\n-        cachedOD = null;\n+        cachedOD.clear();", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NjgxNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405156817", "bodyText": "It works with EMPTY_LIST and I just changed it to be type-safe.", "author": "hui-yang", "createdAt": "2020-04-07T22:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MDI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MTI5OQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404461299", "body": "Why change this?", "bodyText": "Why change this?", "bodyHTML": "<p dir=\"auto\">Why change this?</p>", "author": "MikeDombo", "createdAt": "2020-04-07T00:08:40Z", "path": "src/main/java/com/aws/iot/evergreen/util/Exec.java", "diffHunk": "@@ -42,16 +42,15 @@\n  * .background(exc -> System.out.println(\"exit \"+exc));\n  * </pre>\n  */\n-@SuppressWarnings({\"checkstyle:emptycatchblock\", \"PMD.AvoidCatchingThrowable\", \"PMD.AssignmentInOperand\"})\n+@SuppressWarnings({\"checkstyle:emptycatchblock\", \"PMD.AvoidCatchingThrowable\"})\n public final class Exec implements Closeable {\n     public static final boolean isWindows = System.getProperty(\"os.name\").toLowerCase().contains(\"wind\");\n     public static final String EvergreenUid = Utils.generateRandomString(16).toUpperCase();\n     private static final Consumer<CharSequence> NOP = s -> {\n     };\n     private static final File userdir = new File(System.getProperty(\"user.dir\"));\n     private static final File homedir = new File(System.getProperty(\"user.home\"));\n-    @SuppressWarnings(\"PMD.LooseCoupling\")\n-    private static final LinkedList<Path> paths = new LinkedList<>();\n+    private static final ConcurrentLinkedDeque<Path> paths = new ConcurrentLinkedDeque<>();", "originalCommit": "88089c564579b8fe5c44217fbce195eee4a4eb17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2Nzk4NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404467984", "bodyText": "I ran into ConcurrentModificationException occasionally in computePathString in my testing", "author": "hui-yang", "createdAt": "2020-04-07T00:31:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MTI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2ODcyNw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r404968727", "bodyText": "I also saw this in my testing. But I couldn't find the places where the paths is accessed concurrently.", "author": "fengwang666", "createdAt": "2020-04-07T17:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MTI5OQ=="}], "type": "inlineReview"}, {"oid": "15f070a119f1e8a705c99743403425312b828a7c", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/15f070a119f1e8a705c99743403425312b828a7c", "message": "Address PMD violations", "committedDate": "2020-04-07T00:15:52Z", "type": "forcePushed"}, {"oid": "a352c1644b094120835387417af9adf8e91ff2f8", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/a352c1644b094120835387417af9adf8e91ff2f8", "message": "Address PMD violations", "committedDate": "2020-04-07T22:33:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NzAzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405157032", "body": "Not necessarily an issue, but why switch the order?", "bodyText": "Not necessarily an issue, but why switch the order?", "bodyHTML": "<p dir=\"auto\">Not necessarily an issue, but why switch the order?</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:45:23Z", "path": "src/main/java/com/aws/iot/evergreen/config/Configuration.java", "diffHunk": "@@ -42,8 +41,8 @@ public String toString() {\n     @Inject\n     @SuppressWarnings(\"LeakingThisInConstructor\")\n     public Configuration(Context c) {  // This is one of the few classes that can't use injection\n-        c.put(Configuration.class, this);\n         root = new Topics(context = c, null, null);\n+        c.put(Configuration.class, this);", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3MTE4Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405171187", "bodyText": "Context.put compares this new value with the existing value and calls Configuration.equals, which checks root", "author": "hui-yang", "createdAt": "2020-04-07T23:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NzAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3MTgzMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405171832", "bodyText": "So what was happening before? Why was it working?", "author": "MikeDombo", "createdAt": "2020-04-07T23:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NzAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NTAzNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405175036", "bodyText": "Before this PR, we used v == targetValue instead of Objects.equals(v, targetValue) here https://github.com/aws/aws-greengrass-kernel/blob/6482b610add31d091dfb2743acf888dd3a239632/src/main/java/com/aws/iot/evergreen/dependency/Context.java#L396", "author": "hui-yang", "createdAt": "2020-04-07T23:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NzAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NzgyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405157822", "body": "typo: `exit`.", "bodyText": "typo: exit.", "bodyHTML": "<p dir=\"auto\">typo: <code>exit</code>.</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:47:37Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -44,40 +45,38 @@\n public class Context implements Closeable {\n     private final ConcurrentHashMap<Object, Value> parts = new ConcurrentHashMap<>();\n     private static final Logger logger = LogManager.getLogger(Context.class);\n+    private static final String classKeyword = \"class\";\n     // magical\n     private boolean shuttingDown = false;\n     // global state change notification\n     private CopyOnWriteArrayList<EvergreenService.GlobalStateChangeListener> listeners;\n-    private BlockingDeque<Runnable> serialized = new LinkedBlockingDeque<>();\n+    private final BlockingDeque<Runnable> serialized = new LinkedBlockingDeque<>();\n     private final Thread publishThread = new Thread() {\n         {\n             setName(\"Serialized listener processor\");\n             setPriority(Thread.MAX_PRIORITY - 1);\n             //                setDaemon(true);\n         }\n \n-        @SuppressWarnings({\"checkstyle:emptycatchblock\"})\n+        @SuppressWarnings({\"checkstyle:emptycatchblock\", \"PMD.AvoidCatchingThrowable\"})\n         @Override\n         public void run() {\n             while (true) {\n                 try {\n                     Runnable task = serialized.takeFirst();\n-                    try {\n-                        task.run();\n-                    } catch (Throwable t) {\n-                        logger.atError().setEventType(\"run-on-publish-queue-error\").setCause(t).log();\n-                    }\n-                } catch (InterruptedException ignored) {\n+                    task.run();\n+                } catch (InterruptedException ie) {\n+                    logger.atWarn().log(\"Interrupted while running tasks. Publish thread will exist now.\");", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1ODAyNg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405158026", "body": "Since we return the throwable, I'm not sure we need this log.", "bodyText": "Since we return the throwable, I'm not sure we need this log.", "bodyHTML": "<p dir=\"auto\">Since we return the throwable, I'm not sure we need this log.</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:48:10Z", "path": "src/main/java/com/aws/iot/evergreen/dependency/Context.java", "diffHunk": "@@ -287,7 +283,7 @@ public Throwable runOnPublishQueueAndWait(Crashable r) {\n                 r.run();\n             } catch (Throwable t) {\n                 ret.set(t);\n-                logger.atError().setEventType(\"run-publish-queue-and-wait-error\").setCause(t).log();\n+                logger.atError(\"run-publish-queue-and-wait-error\", t).log();", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1OTAyMg==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405159022", "body": "remove this q.", "bodyText": "remove this q.", "bodyHTML": "<p dir=\"auto\">remove this q.</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:50:33Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -654,7 +661,7 @@ private void stopBackingTask() {\n     }\n \n     /**\n-     * Report that the service has hit an error.\n+     * Report that the service has hit an error.q", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1OTE3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405159175", "body": "Don't suppress the future, we need to fix it, or at least have a good reasoning for waiting forever.", "bodyText": "Don't suppress the future, we need to fix it, or at least have a good reasoning for waiting forever.", "bodyHTML": "<p dir=\"auto\">Don't suppress the future, we need to fix it, or at least have a good reasoning for waiting forever.</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:51:00Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EvergreenService.java", "diffHunk": "@@ -709,6 +716,7 @@ protected void shutdown() throws InterruptedException {\n      *\n      * @return future completes when the lifecycle thread shuts down.\n      */\n+    @SuppressWarnings({\"PMD.AvoidGettingFutureWithoutTimeout\", \"PMD.AvoidCatchingGenericException\"})", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2MDAwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405160003", "body": "same here, we need to be very careful with this suppression.", "bodyText": "same here, we need to be very careful with this suppression.", "bodyHTML": "<p dir=\"auto\">same here, we need to be very careful with this suppression.</p>", "author": "MikeDombo", "createdAt": "2020-04-07T22:53:15Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/Kernel.java", "diffHunk": "@@ -634,6 +641,7 @@ public Topics findServiceTopic(String name) {\n         return totallyCompleteFuture;\n     }\n \n+    @SuppressWarnings(\"PMD.AvoidGettingFutureWithoutTimeout\")", "originalCommit": "a352c1644b094120835387417af9adf8e91ff2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6482b610add31d091dfb2743acf888dd3a239632", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/6482b610add31d091dfb2743acf888dd3a239632", "message": "Address PMD violations", "committedDate": "2020-04-07T23:20:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MDY4Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405180683", "body": "curious whats the violation behind the rename", "bodyText": "curious whats the violation behind the rename", "bodyHTML": "<p dir=\"auto\">curious whats the violation behind the rename</p>", "author": "fahadmohammed01", "createdAt": "2020-04-07T23:55:17Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topic.java", "diffHunk": "@@ -88,8 +82,8 @@ public void appendTo(Appendable a) throws IOException {\n         appendValueTo(a);\n     }\n \n-    public Topic setValue(Object nv) {\n-        return setValue(System.currentTimeMillis(), nv);\n+    public Topic withValue(Object nv) {", "originalCommit": "6482b610add31d091dfb2743acf888dd3a239632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0NjE3NQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405246175", "bodyText": "https://pmd.github.io/latest/pmd_rules_java_codestyle.html#linguisticnaming", "author": "hui-yang", "createdAt": "2020-04-08T04:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MDY4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTc3MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405185771", "body": "remove Objects.requireNonNull(from) ?", "bodyText": "remove Objects.requireNonNull(from) ?", "bodyHTML": "<p dir=\"auto\">remove Objects.requireNonNull(from) ?</p>", "author": "fahadmohammed01", "createdAt": "2020-04-08T00:12:24Z", "path": "src/main/java/com/aws/iot/evergreen/config/Topics.java", "diffHunk": "@@ -55,7 +55,7 @@ public int size() {\n     }\n \n     @Override\n-    public void copyFrom(Node from) {\n+    public void copyFrom(@Nonnull Node from) {\n         Objects.requireNonNull(from);", "originalCommit": "6482b610add31d091dfb2743acf888dd3a239632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MDQ0MQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405250441", "bodyText": "javax.annotation.Nonnull doesn't run validations, but lombok.NonNull does. I'm going to remove the annotation and just make the check explicit in code.", "author": "hui-yang", "createdAt": "2020-04-08T04:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTc3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4ODM3NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405188374", "body": "what the violation for making this more verbose?", "bodyText": "what the violation for making this more verbose?", "bodyHTML": "<p dir=\"auto\">what the violation for making this more verbose?</p>", "author": "fahadmohammed01", "createdAt": "2020-04-08T00:21:20Z", "path": "src/main/java/com/aws/iot/evergreen/kernel/EZTemplates.java", "diffHunk": "@@ -46,9 +46,10 @@ public static CharSequence toCS(InputStream in) throws IOException {\n     @SuppressWarnings(\"ThrowableResultIgnored\")\n     public static CharSequence toCS(Reader in) throws IOException {\n         StringBuilder sb = new StringBuilder();\n-        int c;\n-        while ((c = in.read()) >= 0) {", "originalCommit": "6482b610add31d091dfb2743acf888dd3a239632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0NjM3MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/160#discussion_r405246370", "bodyText": "https://pmd.github.io/latest/pmd_rules_ecmascript_codestyle.html#assignmentinoperand", "author": "hui-yang", "createdAt": "2020-04-08T04:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4ODM3NA=="}], "type": "inlineReview"}, {"oid": "909429dc08e6beeed23430e299fce3b3a6d9d83f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/909429dc08e6beeed23430e299fce3b3a6d9d83f", "message": "Address PMD violations", "committedDate": "2020-04-08T04:25:26Z", "type": "commit"}, {"oid": "909429dc08e6beeed23430e299fce3b3a6d9d83f", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/909429dc08e6beeed23430e299fce3b3a6d9d83f", "message": "Address PMD violations", "committedDate": "2020-04-08T04:25:26Z", "type": "forcePushed"}]}