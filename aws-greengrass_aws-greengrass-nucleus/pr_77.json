{"pr_number": 77, "pr_title": "integration test for ipc aware service", "pr_author": "fahadmohammed01", "pr_createdAt": "2020-02-26T18:44:28Z", "pr_url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77", "timeline": [{"oid": "090bb6af3361c828670d8dae7798d4690a54b972", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/090bb6af3361c828670d8dae7798d4690a54b972", "message": "integration test for ipc aware service", "committedDate": "2020-02-26T18:41:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384702818", "body": "Even though this only has 1 test, if we added more they would probably break because this is `AfterAll`. Can you switch these to be `BeforeEach` and `AfterEach` so that when we add more tests they still work?", "bodyText": "Even though this only has 1 test, if we added more they would probably break because this is AfterAll. Can you switch these to be BeforeEach and AfterEach so that when we add more tests they still work?", "bodyHTML": "<p dir=\"auto\">Even though this only has 1 test, if we added more they would probably break because this is <code>AfterAll</code>. Can you switch these to be <code>BeforeEach</code> and <code>AfterEach</code> so that when we add more tests they still work?</p>", "author": "MikeDombo", "createdAt": "2020-02-26T19:09:01Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MDM1Nw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384770357", "bodyText": "changed, based AfterAll and BeforeAll based on the existing tests", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:16:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwMjgxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384708214", "body": "```suggestion\r\n        boolean isRunning = serviceRunning.await(10, TimeUnit.SECONDS);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean await = serviceRunning.await(10, TimeUnit.SECONDS);\n          \n          \n            \n                    boolean isRunning = serviceRunning.await(10, TimeUnit.SECONDS);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">await</span> <span class=\"pl-k\">=</span> serviceRunning<span class=\"pl-k\">.</span>await(<span class=\"pl-c1\">10</span>, <span class=\"pl-smi\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SECONDS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isRunning</span> <span class=\"pl-k\">=</span> serviceRunning<span class=\"pl-k\">.</span>await(<span class=\"pl-c1\">10</span>, <span class=\"pl-smi\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SECONDS</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "leaf94", "createdAt": "2020-02-26T19:19:27Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeAll\n+    public static void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);\n+        kernel = new Kernel();\n+        String tdir = System.getProperty(\"user.dir\");\n+        kernel.parseArgs(\"-r\", tdir, \"-log\", \"stdout\", \"-i\", IPCServicesTest.class.getResource(\"ipc_aware_main.yaml\").toString());\n+        kernel.launch();\n+    }\n+\n+    @AfterAll\n+    public static void teardown() {\n+        kernel.shutdown();\n+    }\n+\n+    @Test\n+    public void GIVEN_ipc_aware_service_WHEN_report_state_as_running_THEN_kernel_updates_state_as_running()\n+            throws Exception {\n+        CountDownLatch serviceRunning = new CountDownLatch(1);\n+        EvergreenService.GlobalStateChangeListener listener = (service, state) -> {\n+            if (\"main\".equals(service.getName()) && State.RUNNING.equals(service.getState())) {\n+                serviceRunning.countDown();\n+            }\n+        };\n+        kernel.context.addGlobalStateChangeListener(listener);\n+        //waiting for main to transition to running\n+        boolean await = serviceRunning.await(10, TimeUnit.SECONDS);", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTY4MA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384771680", "bodyText": "changed", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709029", "body": "Maybe\r\n```suggestion\r\npublic class SampleIpcAwareService {\r\n```", "bodyText": "Maybe\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ServiceMovesToRunning {\n          \n          \n            \n            public class SampleIpcAwareService {", "bodyHTML": "<p dir=\"auto\">Maybe</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">ServiceMovesToRunning</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">SampleIpcAwareService</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "leaf94", "createdAt": "2020-02-26T19:21:02Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTE5NA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779194", "bodyText": "maybe, renamed to SampleIpcAwareServiceMovesToRunning", "author": "fahadmohammed01", "createdAt": "2020-02-26T21:32:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTAyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwOTIxOA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384709218", "body": "neat!!!", "bodyText": "neat!!!", "bodyHTML": "<p dir=\"auto\">neat!!!</p>", "author": "leaf94", "createdAt": "2020-02-26T19:21:25Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/ipcawareservices/ServiceMovesToRunning.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.aws.iot.evergreen.ipc.ipcawareservices;\n+\n+import com.aws.iot.evergreen.ipc.IPCClient;\n+import com.aws.iot.evergreen.ipc.IPCClientImpl;\n+import com.aws.iot.evergreen.ipc.config.KernelIPCClientConfig;\n+import com.aws.iot.evergreen.ipc.services.lifecycle.LifecycleImpl;\n+\n+public class ServiceMovesToRunning {\n+    public static void main(String[] args) throws Exception {\n+        IPCClient client = new IPCClientImpl(KernelIPCClientConfig.builder().build());\n+        LifecycleImpl c = new LifecycleImpl(client);\n+        c.reportState(\"RUNNING\");\n+        client.disconnect();", "originalCommit": "090bb6af3361c828670d8dae7798d4690a54b972", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "message": "addressed minor comments from PR", "committedDate": "2020-02-26T21:32:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3OTgwNA==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384779804", "body": "no * imports.", "bodyText": "no * imports.", "bodyHTML": "<p dir=\"auto\">no * imports.</p>", "author": "MikeDombo", "createdAt": "2020-02-26T21:34:05Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;", "originalCommit": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzNTk2Mw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384835963", "body": "why is this public?", "bodyText": "why is this public?", "bodyHTML": "<p dir=\"auto\">why is this public?</p>", "author": "shaguptashaikh", "createdAt": "2020-02-26T23:48:01Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.*;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;", "originalCommit": "4534a4f173e9ba44b5d4af3324c3cbe96d0776a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eae17915205061e28cbaa6f386aeb5338324306d", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/eae17915205061e28cbaa6f386aeb5338324306d", "message": "removed *  import", "committedDate": "2020-02-26T23:54:32Z", "type": "commit"}, {"oid": "fffc320d5c081a44a2d003e20bd181106f60e65b", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/commit/fffc320d5c081a44a2d003e20bd181106f60e65b", "message": "Merge branch 'master' into integration-test-ipc-aware-service", "committedDate": "2020-02-27T00:01:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NTAwMw==", "url": "https://github.com/aws-greengrass/aws-greengrass-nucleus/pull/77#discussion_r384855003", "body": "remove?", "bodyText": "remove?", "bodyHTML": "<p dir=\"auto\">remove?</p>", "author": "leaf94", "createdAt": "2020-02-27T00:49:52Z", "path": "src/test/java/com/aws/iot/evergreen/ipc/IPCAwareServicesTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.aws.iot.evergreen.ipc;\n+\n+import com.aws.iot.evergreen.dependency.State;\n+import com.aws.iot.evergreen.kernel.EvergreenService;\n+import com.aws.iot.evergreen.kernel.Kernel;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class IPCAwareServicesTest {\n+\n+    public static Kernel kernel;\n+\n+    @BeforeEach\n+    public void setup() {\n+        // starting daemon\n+        CountDownLatch OK = new CountDownLatch(1);", "originalCommit": "fffc320d5c081a44a2d003e20bd181106f60e65b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}