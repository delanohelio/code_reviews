{"pr_number": 17851, "pr_title": "Issue 17850 reserved vars", "pr_author": "wezell", "pr_createdAt": "2020-01-15T16:12:53Z", "pr_url": "https://github.com/dotCMS/core/pull/17851", "timeline": [{"oid": "1675196495efe9874a239abdbba3b23447586edd", "url": "https://github.com/dotCMS/core/commit/1675196495efe9874a239abdbba3b23447586edd", "message": "#17850 untested fix", "committedDate": "2020-01-15T15:05:48Z", "type": "commit"}, {"oid": "c9771491439a232e578800e108fd393754f4de8c", "url": "https://github.com/dotCMS/core/commit/c9771491439a232e578800e108fd393754f4de8c", "message": "#17850 test lowercase", "committedDate": "2020-01-15T15:30:05Z", "type": "commit"}, {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3", "url": "https://github.com/dotCMS/core/commit/849b9274382732424cc6db31f98e65ac87ca93c3", "message": "#17850 throws execption before saving", "committedDate": "2020-01-15T16:18:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODE5MQ==", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r366988191", "body": "sorry to bother, we could use a Logger here, for tracking purposes. ", "bodyText": "sorry to bother, we could use a Logger here, for tracking purposes.", "bodyHTML": "<p dir=\"auto\">sorry to bother, we could use a Logger here, for tracking purposes.</p>", "author": "oarrietadotcms", "createdAt": "2020-01-15T16:50:37Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -316,7 +367,9 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     }\n \n     ContentType retType = builder.build();\n-\n+    if(reservedContentTypeVars.contains(retType.variable().toLowerCase())){\n+        throw new IllegalArgumentException(\"Invalid content type variable - reserved var name: \" + retType.variable().toLowerCase());", "originalCommit": "849b9274382732424cc6db31f98e65ac87ca93c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "url": "https://github.com/dotCMS/core/commit/0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-02-05T21:54:00Z", "type": "commit"}, {"oid": "c693b45499f867b5b086b9310b1e378aa0424e18", "url": "https://github.com/dotCMS/core/commit/c693b45499f867b5b086b9310b1e378aa0424e18", "message": "#17850 include integration-test", "committedDate": "2020-02-05T23:06:04Z", "type": "commit"}, {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "url": "https://github.com/dotCMS/core/commit/4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "message": "#17850 fix terminology", "committedDate": "2020-02-05T23:09:38Z", "type": "commit"}, {"oid": "91113a7b077b76129052c61c4d3918a6b27cd108", "url": "https://github.com/dotCMS/core/commit/91113a7b077b76129052c61c4d3918a6b27cd108", "message": "#17850 code-review", "committedDate": "2020-02-06T16:45:32Z", "type": "commit"}, {"oid": "4708faa0bf89f3fcd5f17621bce5fddca1df8128", "url": "https://github.com/dotCMS/core/commit/4708faa0bf89f3fcd5f17621bce5fddca1df8128", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-02-10T17:37:23Z", "type": "commit"}, {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "url": "https://github.com/dotCMS/core/commit/acd52e3029e5451ea92c531d02be62d9325f2d3e", "message": "#17850 refactor test to avoid calling init service", "committedDate": "2020-02-10T22:43:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY1OA==", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364658", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Local variable 'eeTypes' could be declared final](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945)", "bodyText": "Issue found: Local variable 'eeTypes' could be declared final", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945\" rel=\"nofollow\">Local variable 'eeTypes' could be declared final</a></p>", "author": "dev-dotcms", "createdAt": "2020-02-10T22:50:37Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY3MA==", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364670", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Local variable 'eeTypesList' could be declared final](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945)", "bodyText": "Issue found: Local variable 'eeTypesList' could be declared final", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945\" rel=\"nofollow\">Local variable 'eeTypesList' could be declared final</a></p>", "author": "dev-dotcms", "createdAt": "2020-02-10T22:50:39Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY4Mw==", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364683", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [JUnit tests should include assert() or fail()](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945)", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945\" rel=\"nofollow\">JUnit tests should include assert() or fail()</a></p>", "author": "dev-dotcms", "createdAt": "2020-02-10T22:50:40Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NDY4Nw==", "url": "https://github.com/dotCMS/core/pull/17851#discussion_r377364687", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Local variable 'testCase' could be declared final](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945)", "bodyText": "Issue found: Local variable 'testCase' could be declared final", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4826945\" rel=\"nofollow\">Local variable 'testCase' could be declared final</a></p>", "author": "dev-dotcms", "createdAt": "2020-02-10T22:50:41Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());\n+\n+        for (Tuple2<String, BaseContentType> testCase : eeTypesList) {", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}