{"pr_number": 17867, "pr_title": "#17864 fixed with test", "pr_author": "wezell", "pr_createdAt": "2020-01-17T21:38:11Z", "pr_url": "https://github.com/dotCMS/core/pull/17867", "timeline": [{"oid": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "url": "https://github.com/dotCMS/core/commit/2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "message": "#17864 fixed with test", "committedDate": "2020-01-17T21:14:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDExMA==", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150110", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Avoid unused imports such as 'java.util.Set'](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681)", "bodyText": "Issue found: Avoid unused imports such as 'java.util.Set'", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681\" rel=\"nofollow\">Avoid unused imports such as 'java.util.Set'</a></p>", "author": "dev-dotcms", "createdAt": "2020-01-17T21:47:56Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -21,10 +24,14 @@\n import com.dotmarketing.portlets.contentlet.struts.ContentletForm;\n import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n import com.dotmarketing.portlets.workflows.business.BaseWorkflowIntegrationTest;\n+import com.dotmarketing.util.UUIDGenerator;\n+import com.twelvemonkeys.util.LinkedSet;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Set;", "originalCommit": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDExOQ==", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150119", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [A method/constructor should not explicitly throw java.lang.Exception](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681)", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681\" rel=\"nofollow\">A method/constructor should not explicitly throw java.lang.Exception</a></p>", "author": "dev-dotcms", "createdAt": "2020-01-17T21:47:57Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {", "originalCommit": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEyNQ==", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150125", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Local variable 'newField' could be declared final](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681)", "bodyText": "Issue found: Local variable 'newField' could be declared final", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681\" rel=\"nofollow\">Local variable 'newField' could be declared final</a></p>", "author": "dev-dotcms", "createdAt": "2020-01-17T21:47:58Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {\n+        \n+        \n+        // create a widget and a content of that widget;\n+        final ContentType widgetLikeContenType = TestDataUtils.getWidgetLikeContentType();\n+        final Contentlet newContentlet = TestDataUtils.getWidgetContent(true, 1, widgetLikeContenType.id());\n+        assertNotNull(newContentlet);\n+\n+        final List<Field> constants = widgetLikeContenType.fields(ConstantField.class);\n+        \n+        final String constantVar1 = constants.get(0).variable();\n+        final String constantVar2 = constants.get(1).variable();\n+        \n+        // assert our content type has no constant values in it\n+        assertTrue(constants.size()>1);\n+        assertNull(constants.get(0).values());\n+        assertNull(constants.get(1).values());\n+        \n+        // assert our content Map has no constant values in it\n+        Map<String,Object> map = new ContentletToMapTransformer(newContentlet).toMaps().get(0);\n+        assertNull(map.get(constantVar1));\n+        assertNull(map.get(constantVar2));\n+        \n+        \n+        // update our Content Type constants to have values\n+        final List<Field> allFields = new ArrayList<>(widgetLikeContenType.fields());\n+        allFields.removeIf(f->constants.contains(f));\n+        for(final Field field : constants) {\n+            final String value = UUIDGenerator.generateUuid();\n+            Field newField = FieldBuilder.builder(field).values(value).build();", "originalCommit": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEzMw==", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150133", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Avoid unused imports such as 'com.twelvemonkeys.util.LinkedSet'](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681)", "bodyText": "Issue found: Avoid unused imports such as 'com.twelvemonkeys.util.LinkedSet'", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681\" rel=\"nofollow\">Avoid unused imports such as 'com.twelvemonkeys.util.LinkedSet'</a></p>", "author": "dev-dotcms", "createdAt": "2020-01-17T21:47:59Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -21,10 +24,14 @@\n import com.dotmarketing.portlets.contentlet.struts.ContentletForm;\n import com.dotmarketing.portlets.htmlpageasset.business.HTMLPageAssetAPI;\n import com.dotmarketing.portlets.workflows.business.BaseWorkflowIntegrationTest;\n+import com.dotmarketing.util.UUIDGenerator;\n+import com.twelvemonkeys.util.LinkedSet;", "originalCommit": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE1MDEzOQ==", "url": "https://github.com/dotCMS/core/pull/17867#discussion_r368150139", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Local variable 'updatedType' could be declared final](https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681)", "bodyText": "Issue found: Local variable 'updatedType' could be declared final", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/dotCMS/core/pullRequest?prid=4843681\" rel=\"nofollow\">Local variable 'updatedType' could be declared final</a></p>", "author": "dev-dotcms", "createdAt": "2020-01-17T21:48:01Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/portlets/contentlet/transform/ContentletTransformerTest.java", "diffHunk": "@@ -166,6 +175,68 @@ public String getUrl(Contentlet contentlet) {\n         assertEquals(urlExpected, newContentlet.getMap().get(HTMLPageAssetAPI.URL_FIELD));\n         assertFalse(newContentlet.getMap().containsKey(Contentlet.NULL_PROPERTIES));\n     }\n+    \n+    /**\n+     * this test creates a widget type that has constant fields and a content of this type.\n+     * It updates the constant field values and insures that the new constant field values are both\n+     * in the content object and the newly transformed map\n+     * @throws Exception\n+     */\n+    @Test\n+    public void Test_Constant_fields_are_in_map() throws Exception {\n+        \n+        \n+        // create a widget and a content of that widget;\n+        final ContentType widgetLikeContenType = TestDataUtils.getWidgetLikeContentType();\n+        final Contentlet newContentlet = TestDataUtils.getWidgetContent(true, 1, widgetLikeContenType.id());\n+        assertNotNull(newContentlet);\n+\n+        final List<Field> constants = widgetLikeContenType.fields(ConstantField.class);\n+        \n+        final String constantVar1 = constants.get(0).variable();\n+        final String constantVar2 = constants.get(1).variable();\n+        \n+        // assert our content type has no constant values in it\n+        assertTrue(constants.size()>1);\n+        assertNull(constants.get(0).values());\n+        assertNull(constants.get(1).values());\n+        \n+        // assert our content Map has no constant values in it\n+        Map<String,Object> map = new ContentletToMapTransformer(newContentlet).toMaps().get(0);\n+        assertNull(map.get(constantVar1));\n+        assertNull(map.get(constantVar2));\n+        \n+        \n+        // update our Content Type constants to have values\n+        final List<Field> allFields = new ArrayList<>(widgetLikeContenType.fields());\n+        allFields.removeIf(f->constants.contains(f));\n+        for(final Field field : constants) {\n+            final String value = UUIDGenerator.generateUuid();\n+            Field newField = FieldBuilder.builder(field).values(value).build();\n+            allFields.add(newField);\n+        }\n+        ContentType updatedType =APILocator.getContentTypeAPI(APILocator.systemUser()).save(widgetLikeContenType, allFields);", "originalCommit": "2244ae0defc6e2e77a4db53e67a2e9922e3677a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}