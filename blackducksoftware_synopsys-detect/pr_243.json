{"pr_number": 243, "pr_title": "Sb clang canonicalize dep paths", "pr_author": "stevebillings", "pr_createdAt": "2020-10-28T16:40:28Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/243", "timeline": [{"oid": "a83acc8608fa86cd0e0979c5f6a9628e09d30783", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/a83acc8608fa86cd0e0979c5f6a9628e09d30783", "message": "fix(clang): canonicalize dependency paths before using them", "committedDate": "2020-10-28T16:29:40Z", "type": "commit"}, {"oid": "0ef95ce9cff66ea7cc09bfab65cdb374d83f4b72", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0ef95ce9cff66ea7cc09bfab65cdb374d83f4b72", "message": "Merge branch 'master' into sb_clangCanonicalizeDepPaths", "committedDate": "2020-10-28T16:34:31Z", "type": "commit"}, {"oid": "17e8667c09127595103f4b259d775eec638450e6", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/17e8667c09127595103f4b259d775eec638450e6", "message": "fix(clang): keep blanks out of dependency list", "committedDate": "2020-10-28T16:58:49Z", "type": "commit"}, {"oid": "2ccf3be5f947d550a3d5c57b7094b36680ad3bd3", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/2ccf3be5f947d550a3d5c57b7094b36680ad3bd3", "message": "style(help): release note", "committedDate": "2020-10-28T18:24:09Z", "type": "commit"}, {"oid": "44c39ebb86487a4ac7d8d9c27450fa1014fddc9f", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/44c39ebb86487a4ac7d8d9c27450fa1014fddc9f", "message": "style(clang): eliminated a redundant log msg", "committedDate": "2020-10-28T18:41:41Z", "type": "commit"}, {"oid": "ab0324b70128ef7be16423fffa3d0f236dc10f06", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ab0324b70128ef7be16423fffa3d0f236dc10f06", "message": "style(help): fixed typo in release note", "committedDate": "2020-10-28T18:42:19Z", "type": "commit"}, {"oid": "936b9cb75395c16646b2061ab350991257188c73", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/936b9cb75395c16646b2061ab350991257188c73", "message": "Merge branch 'master' into sb_clangCanonicalizeDepPaths", "committedDate": "2020-10-29T14:03:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyODAzNw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/243#discussion_r514328037", "body": "```suggestion\r\n       String canonicalPath = rawPath;\r\n        try {\r\n            canonicalPath = targetFile.getCanonicalPath();\r\n             logger.trace(String.format(\"Canonicalized %s to %s\", rawPath, canonicalPath));\r\n        } catch (final IOException e) {\r\n            logger.warn(String.format(\"Unable to convert %s to canonical path\", rawPath));\r\n        }\r\n       \r\n        return canonicalPath;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final String canonicalPath;\n          \n          \n            \n                    try {\n          \n          \n            \n                        canonicalPath = targetFile.getCanonicalPath();\n          \n          \n            \n                    } catch (final IOException e) {\n          \n          \n            \n                        logger.warn(String.format(\"Unable to convert %s to canonical path\", rawPath));\n          \n          \n            \n                        return rawPath;\n          \n          \n            \n                    }\n          \n          \n            \n                    logger.trace(String.format(\"Canonicalized %s to %s\", rawPath, canonicalPath));\n          \n          \n            \n                    return canonicalPath;\n          \n          \n            \n                   String canonicalPath = rawPath;\n          \n          \n            \n                    try {\n          \n          \n            \n                        canonicalPath = targetFile.getCanonicalPath();\n          \n          \n            \n                         logger.trace(String.format(\"Canonicalized %s to %s\", rawPath, canonicalPath));\n          \n          \n            \n                    } catch (final IOException e) {\n          \n          \n            \n                        logger.warn(String.format(\"Unable to convert %s to canonical path\", rawPath));\n          \n          \n            \n                    }\n          \n          \n            \n                   \n          \n          \n            \n                    return canonicalPath;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">       <span class=\"x x-first\"> </span><span class=\"pl-k x\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">String</span> canonicalPath;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            canonicalPath <span class=\"pl-k\">=</span> targetFile<span class=\"pl-k\">.</span>getCanonicalPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">} </span><span class=\"pl-k x\">catch</span><span class=\"x\"> (</span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">IOException</span><span class=\"x x-last\"> e) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">    logger</span><span class=\"pl-k x\">.</span><span class=\"x\">warn(</span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Unable to convert %s to canonical path</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, rawPath));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k x x-first\">return</span><span class=\"x x-last\"> </span>rawPath;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">       <span class=\"x x-first\"> logger</span><span class=\"pl-k x\">.</span><span class=\"x\">trace(</span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Canonicalized %s to %s</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, rawPath, canonicalPath));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> canonicalPath;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">       <span class=\"pl-smi\">String</span> canonicalPath<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> rawPath</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            canonicalPath <span class=\"pl-k\">=</span> targetFile<span class=\"pl-k\">.</span>getCanonicalPath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">     logger</span><span class=\"pl-k x\">.</span><span class=\"x\">trace(</span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Canonicalized %s to %s</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, rawPath, canonicalPath));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">} </span><span class=\"pl-k x\">catch</span><span class=\"x\"> (</span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">IOException</span><span class=\"x x-last\"> e) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first\">logger</span><span class=\"pl-k x\">.</span><span class=\"x\">warn(</span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Unable to convert %s to canonical path</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, </span>rawPath<span class=\"x x-first x-last\">))</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">       </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> canonicalPath;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "psantos1113", "createdAt": "2020-10-29T15:00:44Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/clang/dependencyfile/DependenyListFileParser.java", "diffHunk": "@@ -61,9 +63,25 @@\n         logger.trace(String.format(\"dependencies, backslashes removed: %s\", depsListString));\n \n         final String[] deps = depsListString.split(\"\\\\s+\");\n+        final List<String> depsList = new ArrayList<>(deps.length);\n         for (final String includeFile : deps) {\n-            logger.trace(String.format(\"\\t%s\", includeFile));\n+            if (StringUtils.isNotBlank(includeFile)) {\n+                depsList.add(toCanonical(includeFile));\n+            }\n         }\n-        return Arrays.asList(deps);\n+        return depsList;\n+    }\n+\n+    private String toCanonical(final String rawPath) {\n+        final File targetFile = new File(rawPath);\n+        final String canonicalPath;\n+        try {\n+            canonicalPath = targetFile.getCanonicalPath();\n+        } catch (final IOException e) {\n+            logger.warn(String.format(\"Unable to convert %s to canonical path\", rawPath));\n+            return rawPath;\n+        }\n+        logger.trace(String.format(\"Canonicalized %s to %s\", rawPath, canonicalPath));\n+        return canonicalPath;", "originalCommit": "936b9cb75395c16646b2061ab350991257188c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8827632d066c024bc6778ecae242b1ef1b9ed42d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/8827632d066c024bc6778ecae242b1ef1b9ed42d", "message": "refactor: replace File.getCanonicalPath() with Path.normalize()", "committedDate": "2020-10-29T15:16:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0NDk0MQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/243#discussion_r514344941", "body": "If these files are all empty below can we just create files in the unit test without including empty files in the resources?  The files created in the test would have paths similar to the paths after clang portion of the file paths currently.  \r\n\r\ni.e. \r\n```\r\n        final File testParent = new File(curDir,\"test\");\r\n        final File canonicalTestParent = new File(testParent, \"subDir1/subDir2);\r\n        final File sourceFile = new File(testParent, \"src/process.c\");\r\n        final File includeFile1 = new File(testParent, \"include/stdc-predef.h\");\r\n        final File includeFile2 = new File(canonicalTestParent, \"../../include/./assert.h\");\r\n        canonicalTestParent.mkdirs();\r\n        sourceFile.create();\r\n        includeFile1.create();\r\n        includeFile2.create();\r\n```\r\nAt the end of the test you can delete the files you created for this test.", "bodyText": "If these files are all empty below can we just create files in the unit test without including empty files in the resources?  The files created in the test would have paths similar to the paths after clang portion of the file paths currently.\ni.e.\n        final File testParent = new File(curDir,\"test\");\n        final File canonicalTestParent = new File(testParent, \"subDir1/subDir2);\n        final File sourceFile = new File(testParent, \"src/process.c\");\n        final File includeFile1 = new File(testParent, \"include/stdc-predef.h\");\n        final File includeFile2 = new File(canonicalTestParent, \"../../include/./assert.h\");\n        canonicalTestParent.mkdirs();\n        sourceFile.create();\n        includeFile1.create();\n        includeFile2.create();\n\nAt the end of the test you can delete the files you created for this test.", "bodyHTML": "<p dir=\"auto\">If these files are all empty below can we just create files in the unit test without including empty files in the resources?  The files created in the test would have paths similar to the paths after clang portion of the file paths currently.</p>\n<p dir=\"auto\">i.e.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        final File testParent = new File(curDir,&quot;test&quot;);\n        final File canonicalTestParent = new File(testParent, &quot;subDir1/subDir2);\n        final File sourceFile = new File(testParent, &quot;src/process.c&quot;);\n        final File includeFile1 = new File(testParent, &quot;include/stdc-predef.h&quot;);\n        final File includeFile2 = new File(canonicalTestParent, &quot;../../include/./assert.h&quot;);\n        canonicalTestParent.mkdirs();\n        sourceFile.create();\n        includeFile1.create();\n        includeFile2.create();\"><pre><code>        final File testParent = new File(curDir,\"test\");\n        final File canonicalTestParent = new File(testParent, \"subDir1/subDir2);\n        final File sourceFile = new File(testParent, \"src/process.c\");\n        final File includeFile1 = new File(testParent, \"include/stdc-predef.h\");\n        final File includeFile2 = new File(canonicalTestParent, \"../../include/./assert.h\");\n        canonicalTestParent.mkdirs();\n        sourceFile.create();\n        includeFile1.create();\n        includeFile2.create();\n</code></pre></div>\n<p dir=\"auto\">At the end of the test you can delete the files you created for this test.</p>", "author": "psantos1113", "createdAt": "2020-10-29T15:22:18Z", "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/clang/functional/DependencyListFileParserTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.synopsys.integration.detectable.detectables.clang.functional;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.detectable.detectables.clang.dependencyfile.DependenyListFileParser;\n+\n+public class DependencyListFileParserTest {\n+\n+    @Test\n+    public void testSimple() {\n+        final String curDirPath = System.getProperty(\"user.dir\");\n+        final File curDir = new File(curDirPath);\n+        final File sourceFile = new File(curDir, \"src/test/resources/detectables/functional/clang/src/process.c\");\n+        final File includeFile1 = new File(curDir, \"src/test/resources/detectables/functional/clang/include/stdc-predef.h\");\n+        final File includeFile2 = new File(curDir, \"src/test/resources/detectables/functional/clang/include/assert.h\");\n+        final String fileContents = String.format(\"dependencies: %s \\\\\\n %s %s\\\\\\n\",\n+            sourceFile.getAbsolutePath(), includeFile1.getAbsolutePath(), includeFile2.getAbsolutePath());\n+\n+        final DependenyListFileParser parser = new DependenyListFileParser();\n+        final List<String> deps = parser.parseDepsMk(fileContents);\n+\n+        for (final String dep : deps) {\n+            System.out.printf(\"dep: %s\\n\", dep);\n+        }\n+        assertTrue(deps.contains(sourceFile.getAbsolutePath()));\n+        assertTrue(deps.contains(includeFile1.getAbsolutePath()));\n+        assertTrue(deps.contains(includeFile2.getAbsolutePath()));\n+    }\n+\n+    @Test\n+    public void testNonCanonical() throws IOException {\n+        final String curDirPath = System.getProperty(\"user.dir\");\n+        final File curDir = new File(curDirPath);\n+        final File sourceFile = new File(curDir, \"src/test/resources/detectables/functional/clang/src/process.c\");\n+        final File includeFile1 = new File(curDir, \"src/test/resources/detectables/functional/clang/include/stdc-predef.h\");\n+        final File includeFile2 = new File(curDir, \"src/test/resources/../../test/resources/detectables/functional/clang/include/assert.h\");", "originalCommit": "936b9cb75395c16646b2061ab350991257188c73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f26ed215503927afc9bc1f90a135b5ae8f50869", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0f26ed215503927afc9bc1f90a135b5ae8f50869", "message": "refactor: streamified a for loop", "committedDate": "2020-10-29T15:34:28Z", "type": "commit"}, {"oid": "d4a8259ac69d74828b2a38a18065d56bb2b894ca", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d4a8259ac69d74828b2a38a18065d56bb2b894ca", "message": "test(clang): eliminated need for test resource files", "committedDate": "2020-10-29T16:35:03Z", "type": "commit"}, {"oid": "da0de22c7168f3864461cc63cad6d5fe73930e1d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/da0de22c7168f3864461cc63cad6d5fe73930e1d", "message": "style: fixed my save actions and applied to DependencyListFileParserTest", "committedDate": "2020-10-29T16:41:51Z", "type": "commit"}]}