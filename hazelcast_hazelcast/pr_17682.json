{"pr_number": 17682, "pr_title": "Check duplicate fields when building class definition", "pr_author": "sancar", "pr_createdAt": "2020-10-05T11:30:26Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17682", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1OTM5Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r499559393", "body": "A style comment:\r\n```suggestion\r\n        if (!addedFieldNames.add(fieldName)) {\r\n            throw new HazelcastSerializationException(\"Field with field name : \" + fieldName + \" already exists\");\r\n        }\r\n```", "bodyText": "A style comment:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (addedFieldNames.contains(fieldName)) {\n          \n          \n            \n                        throw new HazelcastSerializationException(\"Field with field name : \" + fieldName + \" already exists\");\n          \n          \n            \n                    }\n          \n          \n            \n                    addedFieldNames.add(fieldName);\n          \n          \n            \n                    if (!addedFieldNames.add(fieldName)) {\n          \n          \n            \n                        throw new HazelcastSerializationException(\"Field with field name : \" + fieldName + \" already exists\");\n          \n          \n            \n                    }", "bodyHTML": "<p dir=\"auto\">A style comment:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (addedFieldNames<span class=\"pl-k\">.</span>contains(fieldName)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HazelcastSerializationException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Field with field name : <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> fieldName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> already exists<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        addedFieldNames<span class=\"pl-k\">.</span>add(fieldName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>addedFieldNames<span class=\"pl-k\">.</span>add(fieldName)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HazelcastSerializationException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Field with field name : <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> fieldName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> already exists<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "viliam-durina", "createdAt": "2020-10-05T12:26:36Z", "path": "hazelcast/src/main/java/com/hazelcast/nio/serialization/ClassDefinitionBuilder.java", "diffHunk": "@@ -213,7 +341,11 @@ public ClassDefinition build() {\n         return cd;\n     }\n \n-    private void check() {\n+    private void check(String fieldName) {\n+        if (addedFieldNames.contains(fieldName)) {\n+            throw new HazelcastSerializationException(\"Field with field name : \" + fieldName + \" already exists\");\n+        }\n+        addedFieldNames.add(fieldName);", "originalCommit": "344a0b0df7ca238bb43afd5e5bf516ec4371c1c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1e126e5064164a5bace665b26ed0967948bb6ee3", "url": "https://github.com/hazelcast/hazelcast/commit/1e126e5064164a5bace665b26ed0967948bb6ee3", "message": "Check duplicate fields when building class definition\n\nClassDefinitionBuider.addX methods checks if a field\nis already added with same name and\nthrows HazelcastSerializatioException if already added.\n\nfixes https://github.com/hazelcast/hazelcast/issues/17616", "committedDate": "2020-10-05T12:32:11Z", "type": "commit"}, {"oid": "1e126e5064164a5bace665b26ed0967948bb6ee3", "url": "https://github.com/hazelcast/hazelcast/commit/1e126e5064164a5bace665b26ed0967948bb6ee3", "message": "Check duplicate fields when building class definition\n\nClassDefinitionBuider.addX methods checks if a field\nis already added with same name and\nthrows HazelcastSerializatioException if already added.\n\nfixes https://github.com/hazelcast/hazelcast/issues/17616", "committedDate": "2020-10-05T12:32:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2ODU2NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r499568565", "body": "`HazelcastSerializationException` isn't correct IMO. It should be thrown \"when a problem occurs while serializing/deserializing objects\". This should rather be `IllegalStateException`. \r\n\r\nBut it's consistent with the same issue 3 lines below...", "bodyText": "HazelcastSerializationException isn't correct IMO. It should be thrown \"when a problem occurs while serializing/deserializing objects\". This should rather be IllegalStateException.\nBut it's consistent with the same issue 3 lines below...", "bodyHTML": "<p dir=\"auto\"><code>HazelcastSerializationException</code> isn't correct IMO. It should be thrown \"when a problem occurs while serializing/deserializing objects\". This should rather be <code>IllegalStateException</code>.</p>\n<p dir=\"auto\">But it's consistent with the same issue 3 lines below...</p>", "author": "viliam-durina", "createdAt": "2020-10-05T12:42:27Z", "path": "hazelcast/src/main/java/com/hazelcast/nio/serialization/ClassDefinitionBuilder.java", "diffHunk": "@@ -213,7 +341,10 @@ public ClassDefinition build() {\n         return cd;\n     }\n \n-    private void check() {\n+    private void check(String fieldName) {\n+        if (!addedFieldNames.add(fieldName)) {\n+            throw new HazelcastSerializationException(\"Field with field name : \" + fieldName + \" already exists\");", "originalCommit": "1e126e5064164a5bace665b26ed0967948bb6ee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b8d43b7633c7441a129c90553973abacf4a54e8", "url": "https://github.com/hazelcast/hazelcast/commit/7b8d43b7633c7441a129c90553973abacf4a54e8", "message": "address review comments. Javadoc and test update.", "committedDate": "2020-10-06T08:22:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5ODQyNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r500298424", "body": "Forgot to mention one potential problem with this approach. In situation when `#addPortableArrayField()` or `#addPortableField()` are invoked with incorrect ClassDefinition definition (with zero classId), the field will be added into the `addedFieldNames`, while, in fact, it wasn't added due to next failed check. The simplest fix would be to remove the field from `addedFieldNames` before throwing an `IllegalArgumentException` in those methods, but there might be more elegant solutions like changing validation order.", "bodyText": "Forgot to mention one potential problem with this approach. In situation when #addPortableArrayField() or #addPortableField() are invoked with incorrect ClassDefinition definition (with zero classId), the field will be added into the addedFieldNames, while, in fact, it wasn't added due to next failed check. The simplest fix would be to remove the field from addedFieldNames before throwing an IllegalArgumentException in those methods, but there might be more elegant solutions like changing validation order.", "bodyHTML": "<p dir=\"auto\">Forgot to mention one potential problem with this approach. In situation when <code>#addPortableArrayField()</code> or <code>#addPortableField()</code> are invoked with incorrect ClassDefinition definition (with zero classId), the field will be added into the <code>addedFieldNames</code>, while, in fact, it wasn't added due to next failed check. The simplest fix would be to remove the field from <code>addedFieldNames</code> before throwing an <code>IllegalArgumentException</code> in those methods, but there might be more elegant solutions like changing validation order.</p>", "author": "puzpuzpuz", "createdAt": "2020-10-06T13:52:51Z", "path": "hazelcast/src/main/java/com/hazelcast/nio/serialization/ClassDefinitionBuilder.java", "diffHunk": "@@ -213,7 +341,10 @@ public ClassDefinition build() {\n         return cd;\n     }\n \n-    private void check() {\n+    private void check(String fieldName) {\n+        if (!addedFieldNames.add(fieldName)) {", "originalCommit": "7b8d43b7633c7441a129c90553973abacf4a54e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxOTM0NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r500319344", "bodyText": "Good catch. I fixed it.", "author": "sancar", "createdAt": "2020-10-06T14:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5ODQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMzcwNw==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r500403707", "bodyText": "I'd say it doesn't matter. As soon as the builder throws an exception, it should be considered broken. A code that catches an exception and continue with the builder is very rare I'd say...", "author": "viliam-durina", "createdAt": "2020-10-06T15:43:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5ODQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2NjM0OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17682#discussion_r500766348", "bodyText": "It's normal to keep using the builder after a validation exception was thrown. If we consider the object broken, we must enforce this contract and throw on any subsequent call. A public API shouldn't be based on fuzzy assumptions which only exist in maintainers minds.", "author": "puzpuzpuz", "createdAt": "2020-10-07T06:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5ODQyNA=="}], "type": "inlineReview"}, {"oid": "8086e4af0138f4bcdf8538a36f0a65a8536dba69", "url": "https://github.com/hazelcast/hazelcast/commit/8086e4af0138f4bcdf8538a36f0a65a8536dba69", "message": "fix addPortable/ArrayField", "committedDate": "2020-10-06T14:12:34Z", "type": "commit"}]}