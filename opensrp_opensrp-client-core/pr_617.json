{"pr_number": 617, "pr_title": "Remove all instances of Foreign  tables when not required for P2P", "pr_author": "rkodev", "pr_createdAt": "2020-08-03T10:20:05Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/617", "timeline": [{"oid": "887410cd93927e01a3e6232e1e34881fce0a5e97", "url": "https://github.com/opensrp/opensrp-client-core/commit/887410cd93927e01a3e6232e1e34881fce0a5e97", "message": "Remove all instances of Foreign  tables when not required for P2P", "committedDate": "2020-08-03T10:19:34Z", "type": "commit"}, {"oid": "e30494680507bfdb187ef9131c4432540a7ec996", "url": "https://github.com/opensrp/opensrp-client-core/commit/e30494680507bfdb187ef9131c4432540a7ec996", "message": "Invert push to server checks", "committedDate": "2020-08-03T10:22:55Z", "type": "commit"}, {"oid": "90a02ae92d5a136d758a1f295fe835b55f1cd87a", "url": "https://github.com/opensrp/opensrp-client-core/commit/90a02ae92d5a136d758a1f295fe835b55f1cd87a", "message": "Codacy clean up on SyncIntentService", "committedDate": "2020-08-03T10:40:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0ODkwMA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464348900", "body": "refactor so that `CoreLibrary.getInstance().context().hasForeignEvents()` is at the start", "bodyText": "refactor so that CoreLibrary.getInstance().context().hasForeignEvents() is at the start", "bodyHTML": "<p dir=\"auto\">refactor so that <code>CoreLibrary.getInstance().context().hasForeignEvents()</code> is at the start</p>", "author": "githengi", "createdAt": "2020-08-03T11:15:11Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "diffHunk": "@@ -53,10 +53,10 @@ public JsonData getJsonData(@NonNull DataType dataType, long l, int i) {\n         } else if (dataType.getName().equals(task.getName())) {\n             return CoreLibrary.getInstance().context()\n                     .getTaskRepository().getTasks(l, i);\n-        } else if (dataType.getName().equals(foreignClient.getName())) {\n+        } else if (dataType.getName().equals(foreignClient.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {", "originalCommit": "90a02ae92d5a136d758a1f295fe835b55f1cd87a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0ODkyOQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464348929", "body": "refactor so that `CoreLibrary.getInstance().context().hasForeignEvents()` is at the start", "bodyText": "refactor so that CoreLibrary.getInstance().context().hasForeignEvents() is at the start", "bodyHTML": "<p dir=\"auto\">refactor so that <code>CoreLibrary.getInstance().context().hasForeignEvents()</code> is at the start</p>", "author": "githengi", "createdAt": "2020-08-03T11:15:15Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PSenderTransferDao.java", "diffHunk": "@@ -53,10 +53,10 @@ public JsonData getJsonData(@NonNull DataType dataType, long l, int i) {\n         } else if (dataType.getName().equals(task.getName())) {\n             return CoreLibrary.getInstance().context()\n                     .getTaskRepository().getTasks(l, i);\n-        } else if (dataType.getName().equals(foreignClient.getName())) {\n+        } else if (dataType.getName().equals(foreignClient.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {\n             return CoreLibrary.getInstance().context()\n                     .getForeignEventClientRepository().getClients(l, i);\n-        } else if (dataType.getName().equals(foreignEvent.getName())) {\n+        } else if (dataType.getName().equals(foreignEvent.getName()) && CoreLibrary.getInstance().context().hasForeignEvents()) {", "originalCommit": "90a02ae92d5a136d758a1f295fe835b55f1cd87a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM0OTM0NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464349345", "body": "could you use `CoreLibrary.getInstance().context().hasForeignEvents()` for consistency ", "bodyText": "could you use CoreLibrary.getInstance().context().hasForeignEvents() for consistency", "bodyHTML": "<p dir=\"auto\">could you use <code>CoreLibrary.getInstance().context().hasForeignEvents()</code> for consistency</p>", "author": "githengi", "createdAt": "2020-08-03T11:16:16Z", "path": "opensrp-app/src/main/java/org/smartregister/repository/P2PReceiverTransferDao.java", "diffHunk": "@@ -49,7 +49,7 @@ public long receiveJson(@NonNull DataType dataType, @NonNull JSONArray jsonArray\n         EventClientRepository foreignEventClientRepository = CoreLibrary.getInstance().context().getForeignEventClientRepository();\n \n         int eventsMaxRowId = eventClientRepository.getMaxRowId(eventClientRepository.getEventTable());\n-        int foreignEventsMaxRowId = foreignEventClientRepository.getMaxRowId(foreignEventClientRepository.getEventTable());\n+        int foreignEventsMaxRowId = (getP2PClassifier() == null) ? 0 : foreignEventClientRepository.getMaxRowId(foreignEventClientRepository.getEventTable());", "originalCommit": "90a02ae92d5a136d758a1f295fe835b55f1cd87a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MDg5OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/617#discussion_r464350899", "body": "```suggestion\r\n        return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\r\n                (!CoreLibrary.getInstance().context().hasForeignEvents() || pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository()));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!CoreLibrary.getInstance().context().hasForeignEvents())\n          \n          \n            \n                        return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository());\n          \n          \n            \n            \n          \n          \n            \n                    return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n          \n          \n            \n                            pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository());\n          \n          \n            \n                    return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n          \n          \n            \n                            (!CoreLibrary.getInstance().context().hasForeignEvents() || pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository()));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>hasForeignEvents())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> pushECToServer(<span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>getEventClientRepository());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> pushECToServer(<span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>getEventClientRepository()) <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                pushECToServer(<span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>getForeignEventClientRepository());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> pushECToServer(<span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>getEventClientRepository()) <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                (<span class=\"pl-k\">!</span><span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>hasForeignEvents() <span class=\"pl-k\">||</span> pushECToServer(<span class=\"pl-smi\">CoreLibrary</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>context()<span class=\"pl-k\">.</span>getForeignEventClientRepository()));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "githengi", "createdAt": "2020-08-03T11:20:02Z", "path": "opensrp-app/src/main/java/org/smartregister/sync/intent/SyncIntentService.java", "diffHunk": "@@ -229,6 +229,9 @@ protected void processClient(Pair<Long, Long> serverVersionPair) {\n \n     // PUSH TO SERVER\n     private boolean pushToServer() {\n+        if (!CoreLibrary.getInstance().context().hasForeignEvents())\n+            return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository());\n+\n         return pushECToServer(CoreLibrary.getInstance().context().getEventClientRepository()) &&\n                 pushECToServer(CoreLibrary.getInstance().context().getForeignEventClientRepository());", "originalCommit": "90a02ae92d5a136d758a1f295fe835b55f1cd87a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ba18dbbfae00179af70e80ed39e659a785b2a43", "url": "https://github.com/opensrp/opensrp-client-core/commit/7ba18dbbfae00179af70e80ed39e659a785b2a43", "message": "Update opensrp-app/src/main/java/org/smartregister/sync/intent/SyncIntentService.java\n\nCo-authored-by: Samuel Githengi <samuel.githengi@gmail.com>", "committedDate": "2020-08-03T11:22:26Z", "type": "commit"}, {"oid": "d793ccbb11092f082a7a95c4151b39f2b0a7985b", "url": "https://github.com/opensrp/opensrp-client-core/commit/d793ccbb11092f082a7a95c4151b39f2b0a7985b", "message": "Refactor hasForeignEvents check for consistency", "committedDate": "2020-08-03T11:27:57Z", "type": "commit"}, {"oid": "f79ac58744061a77c07b1d93f4410294a5175128", "url": "https://github.com/opensrp/opensrp-client-core/commit/f79ac58744061a77c07b1d93f4410294a5175128", "message": "Fix NPE on tests", "committedDate": "2020-08-03T12:01:22Z", "type": "commit"}]}