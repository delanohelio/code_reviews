{"pr_number": 6352, "pr_title": "add p6spy driver support for proxy backend", "pr_author": "xbkaishui", "pr_createdAt": "2020-07-15T04:07:32Z", "pr_url": "https://github.com/apache/shardingsphere/pull/6352", "merge_commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "timeline": [{"oid": "707586bc306a2d12c76bc4b8e56d96ecb6f1c837", "url": "https://github.com/apache/shardingsphere/commit/707586bc306a2d12c76bc4b8e56d96ecb6f1c837", "message": "add p6spy driver support for proxy backend", "committedDate": "2020-07-15T04:02:34Z", "type": "commit"}, {"oid": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "url": "https://github.com/apache/shardingsphere/commit/9b8e3c056ce68e3ae80e39a5017c05ed45062528", "message": "fix ci error", "committedDate": "2020-07-15T05:29:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MDc1OQ==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456240759", "body": "Please update all config-*.yaml", "bodyText": "Please update all config-*.yaml", "bodyHTML": "<p dir=\"auto\">Please update all config-*.yaml</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:18:34Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java", "diffHunk": "@@ -20,6 +20,7 @@\n import lombok.AccessLevel;\n import lombok.NoArgsConstructor;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\nindex 5d674659410..c9ad9b3fb64 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n", "chunk": "@@ -22,10 +22,7 @@ import lombok.NoArgsConstructor;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.LinkedList;\n-import java.util.ServiceLoader;\n+import org.apache.shardingsphere.spi.ShardingSphereServiceLoader;\n \n /**\n  * JDBC driver URL recognizer engine.\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\ndeleted file mode 100644\nindex c9ad9b3fb64..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n+++ /dev/null\n", "chunk": "@@ -1,55 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer;\n-\n-import lombok.AccessLevel;\n-import lombok.NoArgsConstructor;\n-import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-import org.apache.shardingsphere.spi.ShardingSphereServiceLoader;\n-\n-/**\n- * JDBC driver URL recognizer engine.\n- */\n-@NoArgsConstructor(access = AccessLevel.PRIVATE)\n-public final class JDBCDriverURLRecognizerEngine {\n-    \n-    static {\n-        ShardingSphereServiceLoader.register(JDBCDriverURLRecognizer.class);\n-    }\n-    \n-    /**\n-     * Get JDBC driver URL recognizer.\n-     * \n-     * @param url JDBC URL\n-     * @return JDBC driver URL recognizer\n-     */\n-    public static JDBCDriverURLRecognizer getJDBCDriverURLRecognizer(final String url) {\n-        JDBCDriverURLRecognizer result = ShardingSphereServiceLoader.getSingletonServiceInstances(JDBCDriverURLRecognizer.class).stream().filter(each -> isMatchURL(url, each)).findAny()\n-                .orElseThrow(() -> new ShardingSphereException(\"Cannot resolve JDBC url `%s`. Please implements `%s` and add to SPI.\", url, JDBCDriverURLRecognizer.class.getName()));\n-        if (result instanceof JDBCDriverComposeURLRecognizer) {\n-            return ((JDBCDriverComposeURLRecognizer) result).getDriverURLRecognizer(url);\n-        }\n-        return result;\n-    }\n-    \n-    private static boolean isMatchURL(final String url, final JDBCDriverURLRecognizer recognizer) {\n-        return recognizer.getURLPrefixes().stream().anyMatch(url::startsWith);\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "e8297b02c37bfbfb188ee8f4af9ad7a6b78a1ce2", "committedDate": "2020-09-17 08:59:11 +0800", "message": "For checkstyle (#7495)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTEzMw==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241133", "body": "Redundant exception.", "bodyText": "Redundant exception.", "bodyHTML": "<p dir=\"auto\">Redundant exception.</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:19:46Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n+\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public class P6SpyDriverRecognizerTest {\n+    \n+    private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n+    \n+    @Test\n+    public void getURLPrefixes() throws Exception {", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 7369917836c..5815b778ce8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -29,12 +29,12 @@ public class P6SpyDriverRecognizerTest {\n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n-    public void getURLPrefixes() throws Exception {\n+    public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n-    public void getDriverClassName() throws Exception {\n+    public void getDriverClassName() {\n         assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n     }\n     \n", "next_change": null}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 7369917836c..5815b778ce8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -29,12 +29,12 @@ public class P6SpyDriverRecognizerTest {\n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n-    public void getURLPrefixes() throws Exception {\n+    public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n-    public void getDriverClassName() throws Exception {\n+    public void getDriverClassName() {\n         assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n     }\n     \n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 5815b778ce8..87c402761ab 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -24,13 +24,13 @@ import java.util.Collections;\n import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertThat;\n \n-public class P6SpyDriverRecognizerTest {\n+public final class P6SpyDriverRecognizerTest {\n     \n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n     public void getURLPrefixes() {\n-        assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n+        assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 87c402761ab..7108fd3e294 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -32,10 +32,4 @@ public final class P6SpyDriverRecognizerTest {\n     public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n     }\n-    \n-    @Test\n-    public void getDriverClassName() {\n-        assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n-    }\n-    \n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\ndeleted file mode 100644\nindex 7108fd3e294..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ /dev/null\n", "chunk": "@@ -1,35 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.junit.Test;\n-\n-import java.util.Collections;\n-\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.junit.Assert.assertThat;\n-\n-public final class P6SpyDriverRecognizerTest {\n-    \n-    private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n-    \n-    @Test\n-    public void getURLPrefixes() {\n-        assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "031961ee8e539918c9baf7e4aab58d5390dad56f", "committedDate": "2020-08-08 23:25:35 +0800", "message": "Add final if class is not design for extension"}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTE4Mw==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241183", "body": "Redundant exception.", "bodyText": "Redundant exception.", "bodyHTML": "<p dir=\"auto\">Redundant exception.</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:19:53Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n+\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public class P6SpyDriverRecognizerTest {\n+    \n+    private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n+    \n+    @Test\n+    public void getURLPrefixes() throws Exception {\n+        assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n+    }\n+    \n+    @Test\n+    public void getDriverClassName() throws Exception {", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 7369917836c..5815b778ce8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -29,12 +29,12 @@ public class P6SpyDriverRecognizerTest {\n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n-    public void getURLPrefixes() throws Exception {\n+    public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n-    public void getDriverClassName() throws Exception {\n+    public void getDriverClassName() {\n         assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n     }\n     \n", "next_change": null}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 7369917836c..5815b778ce8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -29,12 +29,12 @@ public class P6SpyDriverRecognizerTest {\n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n-    public void getURLPrefixes() throws Exception {\n+    public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n-    public void getDriverClassName() throws Exception {\n+    public void getDriverClassName() {\n         assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n     }\n     \n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 5815b778ce8..87c402761ab 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -24,13 +24,13 @@ import java.util.Collections;\n import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertThat;\n \n-public class P6SpyDriverRecognizerTest {\n+public final class P6SpyDriverRecognizerTest {\n     \n     private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n     \n     @Test\n     public void getURLPrefixes() {\n-        assertThat(recognizer.getURLPrefixes(), is(Collections.singletonList(\"jdbc:p6spy:\")));\n+        assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n     }\n     \n     @Test\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\nindex 87c402761ab..7108fd3e294 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n", "chunk": "@@ -32,10 +32,4 @@ public final class P6SpyDriverRecognizerTest {\n     public void getURLPrefixes() {\n         assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n     }\n-    \n-    @Test\n-    public void getDriverClassName() {\n-        assertThat(recognizer.getDriverClassName(), is(P6SpyDriverRecognizer.DRIVER_CLASS_NAME));\n-    }\n-    \n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\ndeleted file mode 100644\nindex 7108fd3e294..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/P6SpyDriverRecognizerTest.java\n+++ /dev/null\n", "chunk": "@@ -1,35 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.junit.Test;\n-\n-import java.util.Collections;\n-\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.junit.Assert.assertThat;\n-\n-public final class P6SpyDriverRecognizerTest {\n-    \n-    private final P6SpyDriverRecognizer recognizer = new P6SpyDriverRecognizer();\n-    \n-    @Test\n-    public void getURLPrefixes() {\n-        assertThat(recognizer.getURLPrefixes(), is(Collections.singleton(\"jdbc:p6spy:\")));\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "031961ee8e539918c9baf7e4aab58d5390dad56f", "committedDate": "2020-08-08 23:25:35 +0800", "message": "Add final if class is not design for extension"}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTYzNQ==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241635", "body": "Field 'databaseType' may be 'final'", "bodyText": "Field 'databaseType' may be 'final'", "bodyHTML": "<p dir=\"auto\">Field 'databaseType' may be 'final'</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:21:14Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n+    private PostgreSQLDatabaseType databaseType = new PostgreSQLDatabaseType();", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQxODI5MA==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456418290", "bodyText": "done", "author": "xbkaishui", "createdAt": "2020-07-17T12:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex 40b190e1906..297e960f4b4 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -28,7 +28,7 @@ import java.util.Collections;\n  */\n public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private PostgreSQLDatabaseType databaseType = new PostgreSQLDatabaseType();\n+    private final PostgreSQLDatabaseType databaseType = new PostgreSQLDatabaseType();\n     \n     @Override\n     public String getDatabaseType() {\n", "next_change": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex 297e960f4b4..b99531b7573 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private final PostgreSQLDatabaseType databaseType = new PostgreSQLDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"PostgreSQL\";\n     }\n     \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex 40b190e1906..b99531b7573 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private PostgreSQLDatabaseType databaseType = new PostgreSQLDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"PostgreSQL\";\n     }\n     \n     @Override\n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex b99531b7573..bec86f3256f 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -34,7 +34,7 @@ public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n     @Override\n     public Collection<String> getURLPrefixes() {\n-        return Collections.singletonList(\"jdbc:postgresql:\");\n+        return Collections.singleton(\"jdbc:postgresql:\");\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex bec86f3256f..ba7d9a921f8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collections;\n  */\n public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"PostgreSQL\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Collections.singleton(\"jdbc:postgresql:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\ndeleted file mode 100644\nindex ba7d9a921f8..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for PostgreSQL.\n- */\n-public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:postgresql:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.postgresql.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"PostgreSQL\";\n-    }\n-}\n", "next_change": null}]}}, {"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\nindex bec86f3256f..ba7d9a921f8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n", "chunk": "@@ -41,4 +36,9 @@ public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n     public String getDriverClassName() {\n         return \"org.postgresql.Driver\";\n     }\n+    \n+    @Override\n+    public String getDatabaseType() {\n+        return \"PostgreSQL\";\n+    }\n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\ndeleted file mode 100644\nindex ba7d9a921f8..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/PostgreSQLRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for PostgreSQL.\n- */\n-public final class PostgreSQLRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:postgresql:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.postgresql.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"PostgreSQL\";\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTY2OA==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241668", "body": "Field 'databaseType' may be 'final'", "bodyText": "Field 'databaseType' may be 'final'", "bodyHTML": "<p dir=\"auto\">Field 'databaseType' may be 'final'</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:21:21Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n     \n+    private SQLServerDatabaseType databaseType = new SQLServerDatabaseType();", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\nindex 63908368a8f..f0c1bd60be3 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n", "chunk": "@@ -28,7 +28,7 @@ import java.util.Collection;\n  */\n public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private SQLServerDatabaseType databaseType = new SQLServerDatabaseType();\n+    private final SQLServerDatabaseType databaseType = new SQLServerDatabaseType();\n     \n     @Override\n     public String getDatabaseType() {\n", "next_change": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\nindex f0c1bd60be3..13bc983a62a 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collection;\n  */\n public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private final SQLServerDatabaseType databaseType = new SQLServerDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"SQLServer\";\n     }\n     \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\nindex 63908368a8f..13bc983a62a 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collection;\n  */\n public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private SQLServerDatabaseType databaseType = new SQLServerDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"SQLServer\";\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\nindex 13bc983a62a..b84ea455050 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collection;\n  */\n public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"SQLServer\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Arrays.asList(\"jdbc:sqlserver:\", \"jdbc:microsoft:sqlserver:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\ndeleted file mode 100644\nindex b84ea455050..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/SQLServerRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-\n-/**\n- * JDBC URL recognizer for SQLServer.\n- */\n-public final class SQLServerRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Arrays.asList(\"jdbc:sqlserver:\", \"jdbc:microsoft:sqlserver:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"SQLServer\";\n-    }\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTg3NQ==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241875", "body": "Field 'databaseType' may be 'final'", "bodyText": "Field 'databaseType' may be 'final'", "bodyHTML": "<p dir=\"auto\">Field 'databaseType' may be 'final'</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:21:57Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n+    private H2DatabaseType databaseType = new H2DatabaseType();", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex bbc2a189898..f99b023bb87 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -28,7 +28,7 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    private H2DatabaseType databaseType = new H2DatabaseType();\n+    private final H2DatabaseType databaseType = new H2DatabaseType();\n     \n     @Override\n     public String getDatabaseType() {\n", "next_change": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex f99b023bb87..0d538651007 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    private final H2DatabaseType databaseType = new H2DatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"H2\";\n     }\n     \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex bbc2a189898..0d538651007 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    private H2DatabaseType databaseType = new H2DatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"H2\";\n     }\n     \n     @Override\n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 0d538651007..34895783da4 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -34,7 +34,7 @@ public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n     @Override\n     public Collection<String> getURLPrefixes() {\n-        return Collections.singletonList(\"jdbc:h2:\");\n+        return Collections.singleton(\"jdbc:h2:\");\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 34895783da4..e8fcc265e68 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Collections.singleton(\"jdbc:h2:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\ndeleted file mode 100644\nindex e8fcc265e68..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for H2.\n- */\n-public final class H2Recognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:h2:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.h2.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-}\n", "next_change": null}]}}, {"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 34895783da4..e8fcc265e68 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -41,4 +36,9 @@ public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     public String getDriverClassName() {\n         return \"org.h2.Driver\";\n     }\n+    \n+    @Override\n+    public String getDatabaseType() {\n+        return \"H2\";\n+    }\n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\ndeleted file mode 100644\nindex e8fcc265e68..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for H2.\n- */\n-public final class H2Recognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:h2:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.h2.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTk3OA==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456241978", "body": "Field 'databaseType' may be 'final'", "bodyText": "Field 'databaseType' may be 'final'", "bodyHTML": "<p dir=\"auto\">Field 'databaseType' may be 'final'</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:22:17Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n+    private MySQLDatabaseType databaseType = new MySQLDatabaseType();", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\nindex 3a7a14bec60..23b09d1ecb9 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n", "chunk": "@@ -28,7 +28,7 @@ import java.util.Collections;\n  */\n public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private MySQLDatabaseType databaseType = new MySQLDatabaseType();\n+    private final MySQLDatabaseType databaseType = new MySQLDatabaseType();\n     \n     @Override\n     public String getDatabaseType() {\n", "next_change": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\nindex 23b09d1ecb9..0990b3e0234 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private final MySQLDatabaseType databaseType = new MySQLDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"MySQL\";\n     }\n     \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\nindex 3a7a14bec60..0990b3e0234 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private MySQLDatabaseType databaseType = new MySQLDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"MySQL\";\n     }\n     \n     @Override\n", "next_change": {"commit": "8622d19db2f02272158ae1fe51ccf9910cf9c52d", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\nindex 0990b3e0234..53a476e32a0 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n", "chunk": "@@ -34,7 +34,7 @@ public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n     @Override\n     public Collection<String> getURLPrefixes() {\n-        return Collections.singletonList(\"jdbc:mysql:\");\n+        return Collections.singleton(\"jdbc:mysql:\");\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\nindex 53a476e32a0..5a5c85aa80a 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collections;\n  */\n public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"MySQL\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Collections.singleton(\"jdbc:mysql:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\ndeleted file mode 100644\nindex 5a5c85aa80a..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/MySQLRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for MySQL.\n- */\n-public final class MySQLRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:mysql:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        try {\n-            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n-            return \"com.mysql.cj.jdbc.Driver\";\n-        } catch (final ClassNotFoundException ignore) {\n-            return \"com.mysql.jdbc.Driver\";\n-        }\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"MySQL\";\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "8622d19db2f02272158ae1fe51ccf9910cf9c52d", "committedDate": "2021-06-11 22:23:04 +0800", "message": "Add AlterRDLStatement (#10772)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MjExMQ==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456242111", "body": "Field 'databaseType' may be 'final'", "bodyText": "Field 'databaseType' may be 'final'", "bodyHTML": "<p dir=\"auto\">Field 'databaseType' may be 'final'</p>", "author": "tuohai666", "createdAt": "2020-07-17T06:22:36Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n+    private OracleDatabaseType databaseType = new OracleDatabaseType();", "originalCommit": "9b8e3c056ce68e3ae80e39a5017c05ed45062528", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 1b7e8ea38fe..7dd2be0033e 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -28,7 +28,7 @@ import java.util.Collections;\n  */\n public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private OracleDatabaseType databaseType = new OracleDatabaseType();\n+    private final OracleDatabaseType databaseType = new OracleDatabaseType();\n     \n     @Override\n     public String getDatabaseType() {\n", "next_change": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 7dd2be0033e..77e60a44ac8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private final OracleDatabaseType databaseType = new OracleDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"Oracle\";\n     }\n     \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 1b7e8ea38fe..77e60a44ac8 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n-    private OracleDatabaseType databaseType = new OracleDatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"Oracle\";\n     }\n     \n     @Override\n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 77e60a44ac8..6ef5b324fd1 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -34,7 +34,7 @@ public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n     @Override\n     public Collection<String> getURLPrefixes() {\n-        return Collections.singletonList(\"jdbc:oracle:\");\n+        return Collections.singleton(\"jdbc:oracle:\");\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 6ef5b324fd1..88c68f9f3ad 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collections;\n  */\n public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"Oracle\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Collections.singleton(\"jdbc:oracle:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\ndeleted file mode 100644\nindex 88c68f9f3ad..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for Oracle.\n- */\n-public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:oracle:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"oracle.jdbc.driver.OracleDriver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"Oracle\";\n-    }\n-}\n", "next_change": null}]}}, {"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\nindex 6ef5b324fd1..88c68f9f3ad 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n", "chunk": "@@ -41,4 +36,9 @@ public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n     public String getDriverClassName() {\n         return \"oracle.jdbc.driver.OracleDriver\";\n     }\n+    \n+    @Override\n+    public String getDatabaseType() {\n+        return \"Oracle\";\n+    }\n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\ndeleted file mode 100644\nindex 88c68f9f3ad..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/OracleRecognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for Oracle.\n- */\n-public final class OracleRecognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:oracle:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"oracle.jdbc.driver.OracleDriver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"Oracle\";\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"oid": "0e8ae07cc7ba9e88c4722243ba796978168a18d4", "url": "https://github.com/apache/shardingsphere/commit/0e8ae07cc7ba9e88c4722243ba796978168a18d4", "message": "Merge branch 'master' into fix-6266", "committedDate": "2020-07-17T06:37:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4NjgzOQ==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456386839", "body": "add spy.properties", "bodyText": "add spy.properties", "bodyHTML": "<p dir=\"auto\">add spy.properties</p>", "author": "tuohai666", "createdAt": "2020-07-17T11:34:56Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java", "diffHunk": "@@ -20,6 +20,7 @@\n import lombok.AccessLevel;\n import lombok.NoArgsConstructor;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;", "originalCommit": "0e8ae07cc7ba9e88c4722243ba796978168a18d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\nindex 5d674659410..c9ad9b3fb64 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n", "chunk": "@@ -22,10 +22,7 @@ import lombok.NoArgsConstructor;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;\n import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.LinkedList;\n-import java.util.ServiceLoader;\n+import org.apache.shardingsphere.spi.ShardingSphereServiceLoader;\n \n /**\n  * JDBC driver URL recognizer engine.\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\ndeleted file mode 100644\nindex c9ad9b3fb64..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/JDBCDriverURLRecognizerEngine.java\n+++ /dev/null\n", "chunk": "@@ -1,55 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer;\n-\n-import lombok.AccessLevel;\n-import lombok.NoArgsConstructor;\n-import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverComposeURLRecognizer;\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-import org.apache.shardingsphere.spi.ShardingSphereServiceLoader;\n-\n-/**\n- * JDBC driver URL recognizer engine.\n- */\n-@NoArgsConstructor(access = AccessLevel.PRIVATE)\n-public final class JDBCDriverURLRecognizerEngine {\n-    \n-    static {\n-        ShardingSphereServiceLoader.register(JDBCDriverURLRecognizer.class);\n-    }\n-    \n-    /**\n-     * Get JDBC driver URL recognizer.\n-     * \n-     * @param url JDBC URL\n-     * @return JDBC driver URL recognizer\n-     */\n-    public static JDBCDriverURLRecognizer getJDBCDriverURLRecognizer(final String url) {\n-        JDBCDriverURLRecognizer result = ShardingSphereServiceLoader.getSingletonServiceInstances(JDBCDriverURLRecognizer.class).stream().filter(each -> isMatchURL(url, each)).findAny()\n-                .orElseThrow(() -> new ShardingSphereException(\"Cannot resolve JDBC url `%s`. Please implements `%s` and add to SPI.\", url, JDBCDriverURLRecognizer.class.getName()));\n-        if (result instanceof JDBCDriverComposeURLRecognizer) {\n-            return ((JDBCDriverComposeURLRecognizer) result).getDriverURLRecognizer(url);\n-        }\n-        return result;\n-    }\n-    \n-    private static boolean isMatchURL(final String url, final JDBCDriverURLRecognizer recognizer) {\n-        return recognizer.getURLPrefixes().stream().anyMatch(url::startsWith);\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "e8297b02c37bfbfb188ee8f4af9ad7a6b78a1ce2", "committedDate": "2020-09-17 08:59:11 +0800", "message": "For checkstyle (#7495)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"oid": "9ac4cddd85034a327778f801dd91e82c6c35ddf9", "url": "https://github.com/apache/shardingsphere/commit/9ac4cddd85034a327778f801dd91e82c6c35ddf9", "message": "fix cr suggestions", "committedDate": "2020-07-17T12:45:53Z", "type": "commit"}, {"oid": "b3510a4c3b9a76a9dc3a26d29194b7847b94d279", "url": "https://github.com/apache/shardingsphere/commit/b3510a4c3b9a76a9dc3a26d29194b7847b94d279", "message": "include distribution file", "committedDate": "2020-07-17T13:01:38Z", "type": "commit"}, {"oid": "ba3c4cdb7da5ef1c017ee1962b6db60900f4a404", "url": "https://github.com/apache/shardingsphere/commit/ba3c4cdb7da5ef1c017ee1962b6db60900f4a404", "message": "remove apache license", "committedDate": "2020-07-17T13:32:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczNTE0Mw==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456735143", "body": "Can this method revert to origin?", "bodyText": "Can this method revert to origin?", "bodyHTML": "<p dir=\"auto\">Can this method revert to origin?</p>", "author": "tuohai666", "createdAt": "2020-07-18T01:57:47Z", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java", "diffHunk": "@@ -27,9 +28,11 @@\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n+    private final H2DatabaseType databaseType = new H2DatabaseType();\n+    \n     @Override\n     public String getDatabaseType() {", "originalCommit": "ba3c4cdb7da5ef1c017ee1962b6db60900f4a404", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc0NDQ2NA==", "url": "https://github.com/apache/shardingsphere/pull/6352#discussion_r456744464", "bodyText": "I saw our source code contains so many literals of databaseType,  is it better to refers only *DatabaseType class ?", "author": "xbkaishui", "createdAt": "2020-07-18T03:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczNTE0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "739dba2464ea205d2f4d10019796c359ee664a84", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex f99b023bb87..0d538651007 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    private final H2DatabaseType databaseType = new H2DatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"H2\";\n     }\n     \n     @Override\n", "next_change": null}]}, "revised_code_in_main": {"commit": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex f99b023bb87..0d538651007 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -28,11 +27,9 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    private final H2DatabaseType databaseType = new H2DatabaseType();\n-    \n     @Override\n     public String getDatabaseType() {\n-        return databaseType.getName();\n+        return \"H2\";\n     }\n     \n     @Override\n", "next_change": {"commit": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 0d538651007..34895783da4 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -34,7 +34,7 @@ public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n     @Override\n     public Collection<String> getURLPrefixes() {\n-        return Collections.singletonList(\"jdbc:h2:\");\n+        return Collections.singleton(\"jdbc:h2:\");\n     }\n     \n     @Override\n", "next_change": {"commit": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 34895783da4..e8fcc265e68 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -27,11 +27,6 @@ import java.util.Collections;\n  */\n public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-    \n     @Override\n     public Collection<String> getURLPrefixes() {\n         return Collections.singleton(\"jdbc:h2:\");\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\ndeleted file mode 100644\nindex e8fcc265e68..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for H2.\n- */\n-public final class H2Recognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:h2:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.h2.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-}\n", "next_change": null}]}}, {"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\nindex 34895783da4..e8fcc265e68 100644\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n", "chunk": "@@ -41,4 +36,9 @@ public final class H2Recognizer implements JDBCDriverURLRecognizer {\n     public String getDriverClassName() {\n         return \"org.h2.Driver\";\n     }\n+    \n+    @Override\n+    public String getDatabaseType() {\n+        return \"H2\";\n+    }\n }\n", "next_change": {"commit": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "changed_code": [{"header": "diff --git a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java b/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\ndeleted file mode 100644\nindex e8fcc265e68..00000000000\n--- a/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/communication/jdbc/recognizer/impl/H2Recognizer.java\n+++ /dev/null\n", "chunk": "@@ -1,44 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.impl;\n-\n-import org.apache.shardingsphere.proxy.backend.communication.jdbc.recognizer.spi.JDBCDriverURLRecognizer;\n-\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-/**\n- * JDBC URL recognizer for H2.\n- */\n-public final class H2Recognizer implements JDBCDriverURLRecognizer {\n-    \n-    @Override\n-    public Collection<String> getURLPrefixes() {\n-        return Collections.singleton(\"jdbc:h2:\");\n-    }\n-    \n-    @Override\n-    public String getDriverClassName() {\n-        return \"org.h2.Driver\";\n-    }\n-    \n-    @Override\n-    public String getDatabaseType() {\n-        return \"H2\";\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "c62767a0e7d2faf404bda67a363fe231f4ac85ae", "message": "Merge commit", "committedDate": null}, {"oid": "953e5ec5e3562dad9dc01658704c56d8f49199eb", "committedDate": "2021-06-11 23:11:38 +0800", "message": "Polish structure of RDL and RQL statement (#10775)"}, {"oid": "3a2922d10d66b02e26fe60e87d73e56e302b8cf8", "committedDate": "2022-04-09 22:33:01 +0800", "message": "Decouple JDBCDriverURLRecognizerEngine and DatabaseTypeAwareSPI (#16706)"}, {"oid": "2ff3dd9738e8035e4aa45cb590f7c4dd5f4c251a", "committedDate": "2022-04-09 23:27:58 +0800", "message": "Remove useless JDBCDriverURLRecognizer (#16707)"}]}, {"oid": "ae560c70ae84815d0938c28921f95529bfea4b1b", "url": "https://github.com/apache/shardingsphere/commit/ae560c70ae84815d0938c28921f95529bfea4b1b", "message": "remove spy properties file", "committedDate": "2020-07-18T03:52:51Z", "type": "commit"}, {"oid": "8b336d0c9ac584a647ecad04ef89cfa544ed1677", "url": "https://github.com/apache/shardingsphere/commit/8b336d0c9ac584a647ecad04ef89cfa544ed1677", "message": "remove spy properties file", "committedDate": "2020-07-18T03:55:15Z", "type": "commit"}, {"oid": "739dba2464ea205d2f4d10019796c359ee664a84", "url": "https://github.com/apache/shardingsphere/commit/739dba2464ea205d2f4d10019796c359ee664a84", "message": "revert change datasource type", "committedDate": "2020-07-20T03:48:49Z", "type": "commit"}]}