{"pr_number": 4481, "pr_title": "Add backward compatibility for revolut change", "pr_author": "chimp1984", "pr_createdAt": "2020-09-04T23:32:25Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4481", "timeline": [{"oid": "61c071184eaace9306ee13857d3d9da355423726", "url": "https://github.com/bisq-network/bisq/commit/61c071184eaace9306ee13857d3d9da355423726", "message": "Add JsonExclude to userName\n\nFor backward compatibility we need to exclude the new field for\nthe contract json.\nWe can remove that after a while when risk that users with\npre 1.3.8 version trade with updated\nusers is very low.", "committedDate": "2020-09-04T19:50:53Z", "type": "commit"}, {"oid": "c87899c662fff2e678229c32fda3793645e9a7f7", "url": "https://github.com/bisq-network/bisq/commit/c87899c662fff2e678229c32fda3793645e9a7f7", "message": "Add check if xmrTxProof is used to avoid null pointer exception", "committedDate": "2020-09-04T19:51:34Z", "type": "commit"}, {"oid": "9e6db6e738280f7fd37f4b24a53135cf3178a50e", "url": "https://github.com/bisq-network/bisq/commit/9e6db6e738280f7fd37f4b24a53135cf3178a50e", "message": "Move revolutAccountsUpdateHandler code up to BisqSetup", "committedDate": "2020-09-04T23:20:16Z", "type": "commit"}, {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9", "url": "https://github.com/bisq-network/bisq/commit/97d3383dbbe3dc567956fe782ec826c82c2db6d9", "message": "Fix handling of username/accountId\n\nWe apply userName to accountId if it is not set (e.g. new account\ncreated with new version). We do not use that for display or for\naccount signing in case both fields are the same but we need to use\naccountId in case the user trades with a not updated user who expects\naccountId as only field.\nI improved a bit the display of account data in the trade screens.\nIn case accountId was set with the phone number (updated account with\nphone nr used for account signing) we show both userName and phone nr.\n\n- Show phone number if accountId was set by old account. Otherwise\nshow only userName\n- For old users they will see the user name as phone number displayed\nif they trade with new users if the new user has created a new account.\nIf he has updated an existing account the accountId (phone number) is\nused, so it displays the phone number.\n- At step 2 changed display of own account data to show account name\n- Add 'Recipients' prefix to account data of peer at step 2\n\nStep 3: Buyers account data can be\n- Phone number if peer is using old version\n- User name if peer is updated user with new account (we apply userName\nto accountId)\n- Phone number if user is on old version and peer is updated user with\nupdated account (we keep accountId as phone number)\n- User name/Phone number if peer is updated user with updated account", "committedDate": "2020-09-04T23:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc2NA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483956764", "body": "This will be done in the next statement anyway", "bodyText": "This will be done in the next statement anyway", "bodyHTML": "<p dir=\"auto\">This will be done in the next statement anyway</p>", "author": "sqrrm", "createdAt": "2020-09-05T14:38:07Z", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep3View.java", "diffHunk": "@@ -157,13 +154,19 @@ public void activate() {\n             }\n         });\n \n-        // we listen for updates on the trade autoConfirmResult field\n-        if (assetTxProofResultField != null) {\n-            trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+        if (useXmrTxProof) {\n+            proofResultListener = (observable, oldValue, newValue) -> {\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());\n+            };\n+\n+            // we listen for updates on the trade autoConfirmResult field\n+            if (assetTxProofResultField != null) {\n+                trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());", "originalCommit": "c87899c662fff2e678229c32fda3793645e9a7f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MjkxNA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r484092914", "bodyText": "Yes, true. I will add a commit with a more clean handling.", "author": "chimp1984", "createdAt": "2020-09-06T17:06:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc4MA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483956780", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            applyAssetTxProofResult(trade.getAssetTxProofResult());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">                applyAssetTxProofResult(trade</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getAssetTxProofResult());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sqrrm", "createdAt": "2020-09-05T14:38:19Z", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep3View.java", "diffHunk": "@@ -157,13 +154,19 @@ public void activate() {\n             }\n         });\n \n-        // we listen for updates on the trade autoConfirmResult field\n-        if (assetTxProofResultField != null) {\n-            trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+        if (useXmrTxProof) {\n+            proofResultListener = (observable, oldValue, newValue) -> {\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());\n+            };\n+\n+            // we listen for updates on the trade autoConfirmResult field\n+            if (assetTxProofResultField != null) {\n+                trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());", "originalCommit": "c87899c662fff2e678229c32fda3793645e9a7f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MjkzOQ==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r484092939", "bodyText": "There is more to clean up. See new commit.", "author": "chimp1984", "createdAt": "2020-09-06T17:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzQ3Nw==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483957477", "body": "This is kind of a mess, but seems correct.", "bodyText": "This is kind of a mess, but seems correct.", "bodyHTML": "<p dir=\"auto\">This is kind of a mess, but seems correct.</p>", "author": "sqrrm", "createdAt": "2020-09-05T14:47:15Z", "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -105,7 +110,34 @@ public static RevolutAccountPayload fromProto(protobuf.PaymentAccountPayload pro\n \n     @Override\n     public String getPaymentDetails() {\n-        return Res.get(paymentMethodId) + \" - \" + Res.getWithCol(\"payment.account.userName\") + \" \" + getUserName();\n+        Tuple2<String, String> tuple = getLabelValueTuple();\n+        return Res.get(paymentMethodId) + \" - \" + tuple.first + \": \" + tuple.second;\n+    }\n+\n+    private Tuple2<String, String> getLabelValueTuple() {", "originalCommit": "97d3383dbbe3dc567956fe782ec826c82c2db6d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MzIxNA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r484093214", "bodyText": "Yes, not great all those special cases. Could be done mor elegantly for sure but this feature ate already much more time as expected, so tried to get it fixes as quickly I could ;-)", "author": "chimp1984", "createdAt": "2020-09-06T17:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzY2NA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483957664", "body": "Using `var tuple` really helps make the code cleaner and easier to read in cases like this. Although that's personal preference.", "bodyText": "Using var tuple really helps make the code cleaner and easier to read in cases like this. Although that's personal preference.", "bodyHTML": "<p dir=\"auto\">Using <code>var tuple</code> really helps make the code cleaner and easier to read in cases like this. Although that's personal preference.</p>", "author": "sqrrm", "createdAt": "2020-09-05T14:49:58Z", "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -105,7 +110,34 @@ public static RevolutAccountPayload fromProto(protobuf.PaymentAccountPayload pro\n \n     @Override\n     public String getPaymentDetails() {\n-        return Res.get(paymentMethodId) + \" - \" + Res.getWithCol(\"payment.account.userName\") + \" \" + getUserName();\n+        Tuple2<String, String> tuple = getLabelValueTuple();\n+        return Res.get(paymentMethodId) + \" - \" + tuple.first + \": \" + tuple.second;\n+    }\n+\n+    private Tuple2<String, String> getLabelValueTuple() {\n+        String label;\n+        String value;\n+        checkArgument(!userName.isEmpty() || hasOldAccountId(),\n+                \"Either username must be set or we have an old account with accountId\");\n+        if (!userName.isEmpty()) {\n+            label = Res.get(\"payment.account.userName\");\n+            value = userName;\n+\n+            if (hasOldAccountId()) {\n+                label += \"/\" + Res.get(\"payment.account.phoneNr\");\n+                value += \"/\" + accountId;\n+            }\n+        } else {\n+            label = Res.get(\"payment.account.phoneNr\");\n+            value = accountId;\n+        }\n+        return new Tuple2<>(label, value);\n+    }\n+\n+    public Tuple2<String, String> getRecipientsAccountData() {\n+        Tuple2<String, String> tuple = getLabelValueTuple();", "originalCommit": "97d3383dbbe3dc567956fe782ec826c82c2db6d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MzA4MQ==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r484093081", "bodyText": "I am not a fan of 'var', prefer to have the type information more explicit. I know in such a small context it does not make much difference, but in larger context it does.", "author": "chimp1984", "createdAt": "2020-09-06T17:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzY2NA=="}], "type": "inlineReview"}, {"oid": "ec31ecbf4399f23d4b41633f515461d3d972dc33", "url": "https://github.com/bisq-network/bisq/commit/ec31ecbf4399f23d4b41633f515461d3d972dc33", "message": "Improve handling of nullable assetTxProof fields", "committedDate": "2020-09-06T17:05:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1NTAyMA==", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r485655020", "body": "I just tried to create a new Revolut account and saw that it doesn't behave as expected.\r\n\r\n![Bildschirmfoto 2020-09-09 um 16 12 09](https://user-images.githubusercontent.com/170962/92611346-fb2a9e80-f2b8-11ea-95b4-dd9e2dcaef61.png)\r\n![Bildschirmfoto 2020-09-09 um 16 13 35](https://user-images.githubusercontent.com/170962/92611362-fe258f00-f2b8-11ea-8622-50f92e1dfe87.png)\r\n\r\nThe problem is that it is checked at this place if the accountId is empty which will only work for the first character entered into the field e.g. `B` of `Bobby` this ends up with `accountId` set to `B` and userName set to `Bobby`", "bodyText": "I just tried to create a new Revolut account and saw that it doesn't behave as expected.\n\n\nThe problem is that it is checked at this place if the accountId is empty which will only work for the first character entered into the field e.g. B of Bobby this ends up with accountId set to B and userName set to Bobby", "bodyHTML": "<p dir=\"auto\">I just tried to create a new Revolut account and saw that it doesn't behave as expected.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/170962/92611346-fb2a9e80-f2b8-11ea-95b4-dd9e2dcaef61.png\"><img src=\"https://user-images.githubusercontent.com/170962/92611346-fb2a9e80-f2b8-11ea-95b4-dd9e2dcaef61.png\" alt=\"Bildschirmfoto 2020-09-09 um 16 12 09\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/170962/92611362-fe258f00-f2b8-11ea-8622-50f92e1dfe87.png\"><img src=\"https://user-images.githubusercontent.com/170962/92611362-fe258f00-f2b8-11ea-8622-50f92e1dfe87.png\" alt=\"Bildschirmfoto 2020-09-09 um 16 13 35\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The problem is that it is checked at this place if the accountId is empty which will only work for the first character entered into the field e.g. <code>B</code> of <code>Bobby</code> this ends up with <code>accountId</code> set to <code>B</code> and userName set to <code>Bobby</code></p>", "author": "ripcurlx", "createdAt": "2020-09-09T14:26:02Z", "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -116,23 +148,30 @@ public String getPaymentDetailsForTradePopup() {\n     @Override\n     public byte[] getAgeWitnessInputData() {\n         // getAgeWitnessInputData is called at new account creation when accountId is empty string.\n-        return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+        if (hasOldAccountId()) {\n+            // If the accountId was already in place (updated user who had used accountId for account age) we keep the\n+            // old accountId to not invalidate the existing account age witness.\n+            return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+\n+        } else {\n+            // If a new account was registered from version 1.3.8 or later we use the userName.\n+            return super.getAgeWitnessInputData(userName.getBytes(StandardCharsets.UTF_8));\n+        }\n     }\n \n-    public void setUserName(@Nullable String userName) {\n-        this.userName = userName;\n-        // We only set accountId to userName for new accounts. Existing accounts have accountId set with email\n-        // or phone nr. and we keep that to not break account signing.\n-        if (accountId.isEmpty()) {\n-            accountId = userName;\n-        }\n+    public boolean userNameNotSet() {\n+        return userName.isEmpty();\n     }\n \n-    public String getUserName() {\n-        return userName != null ? userName : accountId;\n+    public boolean hasOldAccountId() {\n+        return !accountId.equals(userName);\n     }\n \n-    public boolean userNameNotSet() {\n-        return userName == null;\n+    public void setUserName(String userName) {\n+        this.userName = userName;\n+        // We need to set accountId as pre v1.3.8 clients expect the accountId field\n+        if (accountId.isEmpty()) {\n+            accountId = userName;\n+        }", "originalCommit": "97d3383dbbe3dc567956fe782ec826c82c2db6d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}