{"pr_number": 4068, "pr_title": "Sorting order of offers appropriately by min/max range", "pr_author": "jmacxx", "pr_createdAt": "2020-03-16T14:08:07Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4068", "timeline": [{"oid": "b91993fd23d6ebdacc64cf24e42858c036c7e84e", "url": "https://github.com/bisq-network/bisq/commit/b91993fd23d6ebdacc64cf24e42858c036c7e84e", "message": "Sort order of offers appropriately by min/max range\n\nThis change fixes an issue with sorting the offer list when the amount is shown as a range.\nIn OfferBookView::activate() we add a listener for the sortTypeProperty on amountColumn and\nvolumeColumn. When the sortType is changed we set the comparator to be the approprate property\nof the Offer; either getAmount/getMinAmount; getVolume/getMinVolume.\n\nFixes #3818", "committedDate": "2020-03-16T20:37:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2OTAxNg==", "url": "https://github.com/bisq-network/bisq/pull/4068#discussion_r393769016", "body": "As we had issues in the past concerning using no brackets for one line conditionals we decided to use always `{}`", "bodyText": "As we had issues in the past concerning using no brackets for one line conditionals we decided to use always {}", "bodyHTML": "<p dir=\"auto\">As we had issues in the past concerning using no brackets for one line conditionals we decided to use always <code>{}</code></p>", "author": "ripcurlx", "createdAt": "2020-03-17T15:34:39Z", "path": "desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookView.java", "diffHunk": "@@ -293,6 +293,19 @@ protected void activate() {\n         model.priceSortTypeProperty.addListener((observable, oldValue, newValue) -> priceColumn.setSortType(newValue));\n         priceColumn.setSortType(model.priceSortTypeProperty.get());\n \n+        amountColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n+            if (newValue==TableColumn.SortType.DESCENDING)\n+                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+            else\n+                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+        });\n+        volumeColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n+            if (newValue==TableColumn.SortType.DESCENDING)\n+                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+            else\n+                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+        });", "originalCommit": "b91993fd23d6ebdacc64cf24e42858c036c7e84e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MzU5MQ==", "url": "https://github.com/bisq-network/bisq/pull/4068#discussion_r393773591", "body": "And there should be spaces before and after `==`\r\n```suggestion\r\n        amountColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\r\n            if (newValue == TableColumn.SortType.DESCENDING) {\r\n                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\r\n            } else {\r\n                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\r\n            }\r\n        });\r\n        volumeColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\r\n            if (newValue == TableColumn.SortType.DESCENDING) {\r\n                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\r\n            } else {\r\n                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\r\n            }\r\n        });\r\n```", "bodyText": "And there should be spaces before and after ==\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    amountColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n          \n          \n            \n                        if (newValue==TableColumn.SortType.DESCENDING)\n          \n          \n            \n                            amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        else\n          \n          \n            \n                            amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                    });\n          \n          \n            \n                    volumeColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n          \n          \n            \n                        if (newValue==TableColumn.SortType.DESCENDING)\n          \n          \n            \n                            volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        else\n          \n          \n            \n                            volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                    });\n          \n          \n            \n                    amountColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n          \n          \n            \n                        if (newValue == TableColumn.SortType.DESCENDING) {\n          \n          \n            \n                            amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        } else {\n          \n          \n            \n                            amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    volumeColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n          \n          \n            \n                        if (newValue == TableColumn.SortType.DESCENDING) {\n          \n          \n            \n                            volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        } else {\n          \n          \n            \n                            volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n          \n          \n            \n                        }\n          \n          \n            \n                    });", "bodyHTML": "<p dir=\"auto\">And there should be spaces before and after <code>==</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"309\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        amountColumn<span class=\"pl-k\">.</span>sortTypeProperty()<span class=\"pl-k\">.</span>addListener((observable, oldValue, newValue) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"310\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (newValue<span class=\"pl-k\">==</span><span class=\"pl-smi\">TableColumn</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SortType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DESCENDING</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"311\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                amountColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getAmount(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"312\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">else</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"313\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                amountColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getMinAmount(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"314\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"315\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        volumeColumn<span class=\"pl-k\">.</span>sortTypeProperty()<span class=\"pl-k\">.</span>addListener((observable, oldValue, newValue) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"316\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (newValue<span class=\"pl-k\">==</span><span class=\"pl-smi\">TableColumn</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SortType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DESCENDING</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"317\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                volumeColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getVolume(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"318\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">else</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"319\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                volumeColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getMinVolume(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"320\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"309\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        amountColumn<span class=\"pl-k\">.</span>sortTypeProperty()<span class=\"pl-k\">.</span>addListener((observable, oldValue, newValue) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"310\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (newValue <span class=\"pl-k\">==</span> <span class=\"pl-smi\">TableColumn</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SortType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DESCENDING</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"311\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                amountColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getAmount(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"312\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"313\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                amountColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getMinAmount(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"314\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"315\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"316\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        volumeColumn<span class=\"pl-k\">.</span>sortTypeProperty()<span class=\"pl-k\">.</span>addListener((observable, oldValue, newValue) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"317\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (newValue <span class=\"pl-k\">==</span> <span class=\"pl-smi\">TableColumn</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SortType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DESCENDING</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"318\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                volumeColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getVolume(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"319\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"320\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                volumeColumn<span class=\"pl-k\">.</span>setComparator(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>comparing(o <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> o<span class=\"pl-k\">.</span>getOffer()<span class=\"pl-k\">.</span>getMinVolume(), <span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>nullsFirst(<span class=\"pl-smi\">Comparator</span><span class=\"pl-k\">.</span>naturalOrder())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"321\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"322\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ripcurlx", "createdAt": "2020-03-17T15:40:35Z", "path": "desktop/src/main/java/bisq/desktop/main/offer/offerbook/OfferBookView.java", "diffHunk": "@@ -293,6 +293,19 @@ protected void activate() {\n         model.priceSortTypeProperty.addListener((observable, oldValue, newValue) -> priceColumn.setSortType(newValue));\n         priceColumn.setSortType(model.priceSortTypeProperty.get());\n \n+        amountColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n+            if (newValue==TableColumn.SortType.DESCENDING)\n+                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+            else\n+                amountColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinAmount(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+        });\n+        volumeColumn.sortTypeProperty().addListener((observable, oldValue, newValue) -> {\n+            if (newValue==TableColumn.SortType.DESCENDING)\n+                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+            else\n+                volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getMinVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n+        });", "originalCommit": "b91993fd23d6ebdacc64cf24e42858c036c7e84e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3Mzk0MA==", "url": "https://github.com/bisq-network/bisq/pull/4068#discussion_r393773940", "bodyText": "I'll have a look why Codacy is not checking for this.", "author": "ripcurlx", "createdAt": "2020-03-17T15:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MzU5MQ=="}], "type": "inlineReview"}, {"oid": "52d6ea87755b6d53547f09a01974b12128fb755e", "url": "https://github.com/bisq-network/bisq/commit/52d6ea87755b6d53547f09a01974b12128fb755e", "message": "Sort order of offers appropriately by min/max range\n\nThis change fixes an issue with sorting the offer list when the amount is shown as a range.\nIn OfferBookView::activate() we add a listener for the sortTypeProperty on amountColumn and\nvolumeColumn. When the sortType is changed we set the comparator to be the approprate property\nof the Offer; either getAmount/getMinAmount; getVolume/getMinVolume.\n\nFixes #3818", "committedDate": "2020-03-17T17:02:20Z", "type": "forcePushed"}, {"oid": "d4dae4b6b1f773198b16299f10028603bbd96db5", "url": "https://github.com/bisq-network/bisq/commit/d4dae4b6b1f773198b16299f10028603bbd96db5", "message": "Sort order of offers appropriately by min/max range\n\nThis change fixes an issue with sorting the offer list when the amount\nis shown as a range.  In OfferBookView::activate() we add a listener\nfor the sortTypeProperty on amountColumn and volumeColumn. When the\nsortType is changed we set the comparator to be the approprate property\nof the Offer; either getAmount/getMinAmount; getVolume/getMinVolume.\n\nFixes #3818", "committedDate": "2020-03-18T12:09:18Z", "type": "commit"}, {"oid": "d4dae4b6b1f773198b16299f10028603bbd96db5", "url": "https://github.com/bisq-network/bisq/commit/d4dae4b6b1f773198b16299f10028603bbd96db5", "message": "Sort order of offers appropriately by min/max range\n\nThis change fixes an issue with sorting the offer list when the amount\nis shown as a range.  In OfferBookView::activate() we add a listener\nfor the sortTypeProperty on amountColumn and volumeColumn. When the\nsortType is changed we set the comparator to be the approprate property\nof the Offer; either getAmount/getMinAmount; getVolume/getMinVolume.\n\nFixes #3818", "committedDate": "2020-03-18T12:09:18Z", "type": "forcePushed"}]}