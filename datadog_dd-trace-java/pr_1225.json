{"pr_number": 1225, "pr_title": "Introduce the LogsHandler", "pr_author": "mariusc83", "pr_createdAt": "2020-02-14T17:33:11Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1225", "timeline": [{"oid": "9c26cacbaa17953d6358a3a02f6e83b01be53622", "url": "https://github.com/DataDog/dd-trace-java/commit/9c26cacbaa17953d6358a3a02f6e83b01be53622", "message": "Introduce the LogsHandler", "committedDate": "2020-02-14T17:34:34Z", "type": "forcePushed"}, {"oid": "c287dbbf895e0c6182b9a33170b693f354d11244", "url": "https://github.com/DataDog/dd-trace-java/commit/c287dbbf895e0c6182b9a33170b693f354d11244", "message": "Introduce the LogsHandler", "committedDate": "2020-02-14T18:13:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTE5Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815196", "body": "What about making the previous behavior be the default `logHandler`?\r\nThen this method would simply call\r\n```java\r\nlogHandler.log(map);\r\n```", "bodyText": "What about making the previous behavior be the default logHandler?\nThen this method would simply call\nlogHandler.log(map);", "bodyHTML": "<p dir=\"auto\">What about making the previous behavior be the default <code>logHandler</code>?<br>\nThen this method would simply call</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"logHandler.log(map);\"><pre>logHandler<span class=\"pl-k\">.</span>log(map);</pre></div>", "author": "tylerbenson", "createdAt": "2020-02-26T22:48:54Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java", "diffHunk": "@@ -227,7 +242,9 @@ public final DDSpan setOperationName(final String operationName) {\n    */\n   @Override\n   public final DDSpan log(final Map<String, ?> map) {\n-    if (!extractError(map)) {\n+    if (!extractError(map) && logsHandler != null) {", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTYwOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815608", "body": "This could start with the Default implementation instead of null.", "bodyText": "This could start with the Default implementation instead of null.", "bodyHTML": "<p dir=\"auto\">This could start with the Default implementation instead of null.</p>", "author": "tylerbenson", "createdAt": "2020-02-26T22:50:03Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -580,6 +580,7 @@ private static DDScopeEventFactory createScopeEventFactory() {\n     private boolean errorFlag;\n     private String spanType;\n     private boolean ignoreScope = false;\n+    private LogsHandler logsHandler = null;", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTc1MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384815750", "body": "Assert logsHandler is never set to null.", "bodyText": "Assert logsHandler is never set to null.", "bodyHTML": "<p dir=\"auto\">Assert logsHandler is never set to null.</p>", "author": "tylerbenson", "createdAt": "2020-02-26T22:50:25Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -670,6 +671,11 @@ public DDSpanBuilder withSpanType(final String spanType) {\n       return parent.baggageItems();\n     }\n \n+    public DDSpanBuilder withLogsHandler(LogsHandler logsHandler) {\n+      this.logsHandler = logsHandler;", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNjU1MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r384816551", "body": "One more thing... lets go with `LogHandler`", "bodyText": "One more thing... lets go with LogHandler", "bodyHTML": "<p dir=\"auto\">One more thing... lets go with <code>LogHandler</code></p>", "author": "tylerbenson", "createdAt": "2020-02-26T22:52:24Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/LogsHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package datadog.opentracing;\n+\n+import java.util.Map;\n+\n+public interface LogsHandler {", "originalCommit": "c287dbbf895e0c6182b9a33170b693f354d11244", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "url": "https://github.com/DataDog/dd-trace-java/commit/56bc7ddb42f1e2dacd4b1e3466fe17c55ca9f4f8", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T11:55:17Z", "type": "forcePushed"}, {"oid": "bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "url": "https://github.com/DataDog/dd-trace-java/commit/bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T12:21:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385095632", "body": "I guess this should stay here...it is decorating the current span with the relevant information from the map (attributes). I don't think it's the LogHandler's responsibility to do this.", "bodyText": "I guess this should stay here...it is decorating the current span with the relevant information from the map (attributes). I don't think it's the LogHandler's responsibility to do this.", "bodyHTML": "<p dir=\"auto\">I guess this should stay here...it is decorating the current span with the relevant information from the map (attributes). I don't think it's the LogHandler's responsibility to do this.</p>", "author": "mariusc83", "createdAt": "2020-02-27T12:28:39Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpan.java", "diffHunk": "@@ -238,9 +252,8 @@ public final DDSpan log(final Map<String, ?> map) {\n    */\n   @Override\n   public final DDSpan log(final long l, final Map<String, ?> map) {\n-    if (!extractError(map)) {\n-      log.debug(\"`log` method is not implemented. Doing nothing\");\n-    }\n+    extractError(map);", "originalCommit": "bdc8a27fe97b4d599ec346d8f3f3f96657a7abec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIzOTMyOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385239328", "bodyText": "My suggestion was to move this into the logHandler...  For that to work, you may need to pass DDSpan in as the first argument of each method.\nWhy don't you like that idea?", "author": "tylerbenson", "createdAt": "2020-02-27T16:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4ODAyNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385288026", "bodyText": "Because exactly that :D . Did no want to modify the arguments to pass the Span, but if you like it more like that I will pass it and handle it there ;)", "author": "mariusc83", "createdAt": "2020-02-27T18:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0ODM1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385348357", "bodyText": "Alternatively, you could split up the logHandler and a factory that takes a span and returns the logHandler.", "author": "tylerbenson", "createdAt": "2020-02-27T20:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5NTYzMg=="}], "type": "inlineReview"}, {"oid": "f523ee26075d62577cad486b985923305dabd068", "url": "https://github.com/DataDog/dd-trace-java/commit/f523ee26075d62577cad486b985923305dabd068", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-27T12:31:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MDg5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1225#discussion_r385240890", "body": "```suggestion\r\n      if(logHandler != null) {\r\n          this.logHandler = logHandler;\r\n      }\r\n```\r\nNow that I think about it, I think this is a better option...  Avoids the risk of harmful exceptions.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  assert logHandler != null : \"LogHandler must not be null\";\n          \n          \n            \n                  this.logHandler = logHandler;\n          \n          \n            \n                  if(logHandler != null) {\n          \n          \n            \n                      this.logHandler = logHandler;\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nNow that I think about it, I think this is a better option...  Avoids the risk of harmful exceptions.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">assert</span> logHandler <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>LogHandler must not be null<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>logHandler <span class=\"pl-k\">=</span> logHandler;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span>(logHandler <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>logHandler <span class=\"pl-k\">=</span> logHandler;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Now that I think about it, I think this is a better option...  Avoids the risk of harmful exceptions.</p>", "author": "tylerbenson", "createdAt": "2020-02-27T16:57:38Z", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -670,6 +671,12 @@ public DDSpanBuilder withSpanType(final String spanType) {\n       return parent.baggageItems();\n     }\n \n+    public DDSpanBuilder withLogHandler(final LogHandler logHandler) {\n+      assert logHandler != null : \"LogHandler must not be null\";\n+      this.logHandler = logHandler;", "originalCommit": "f523ee26075d62577cad486b985923305dabd068", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "349c57e687b5fb5de8244365a05f62dc254eb658", "url": "https://github.com/DataDog/dd-trace-java/commit/349c57e687b5fb5de8244365a05f62dc254eb658", "message": "Apply code review changes", "committedDate": "2020-02-28T08:12:10Z", "type": "forcePushed"}, {"oid": "4ff068df9c514384facf31d1af3d3071e434a272", "url": "https://github.com/DataDog/dd-trace-java/commit/4ff068df9c514384facf31d1af3d3071e434a272", "message": "Apply code review changes", "committedDate": "2020-02-28T09:22:17Z", "type": "forcePushed"}, {"oid": "6cd2d9f79b7848d9e7873eb19e917d4e6233a935", "url": "https://github.com/DataDog/dd-trace-java/commit/6cd2d9f79b7848d9e7873eb19e917d4e6233a935", "message": "Introduce the LogsHandler", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "b24ae8d6387868c7a69ed601a79277e1d9688d63", "url": "https://github.com/DataDog/dd-trace-java/commit/b24ae8d6387868c7a69ed601a79277e1d9688d63", "message": "Add the DefaultLogHandler implementation", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "url": "https://github.com/DataDog/dd-trace-java/commit/d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "message": "Apply code review changes", "committedDate": "2020-02-28T17:53:35Z", "type": "commit"}, {"oid": "d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "url": "https://github.com/DataDog/dd-trace-java/commit/d36201c9dc8e63c1e5e066c1d71aa8ac3545a87f", "message": "Apply code review changes", "committedDate": "2020-02-28T17:53:35Z", "type": "forcePushed"}]}