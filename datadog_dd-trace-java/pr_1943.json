{"pr_number": 1943, "pr_title": "Add `peer.hostname` to database spans", "pr_author": "randomanderson", "pr_createdAt": "2020-10-01T21:59:16Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1943", "timeline": [{"oid": "1f34982c6c121170870a3096e6c96a84f85f9c5c", "url": "https://github.com/DataDog/dd-trace-java/commit/1f34982c6c121170870a3096e6c96a84f85f9c5c", "message": "Add `peer.hostname` to database spans", "committedDate": "2020-10-01T22:02:09Z", "type": "commit"}, {"oid": "1f34982c6c121170870a3096e6c96a84f85f9c5c", "url": "https://github.com/DataDog/dd-trace-java/commit/1f34982c6c121170870a3096e6c96a84f85f9c5c", "message": "Add `peer.hostname` to database spans", "committedDate": "2020-10-01T22:02:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwMDUyMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1943#discussion_r498700523", "body": "Use `hostName` instead of calling the method again.", "bodyText": "Use hostName instead of calling the method again.", "bodyHTML": "<p dir=\"auto\">Use <code>hostName</code> instead of calling the method again.</p>", "author": "richardstartin", "createdAt": "2020-10-02T09:00:01Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/DatabaseClientDecorator.java", "diffHunk": "@@ -43,6 +45,11 @@ public AgentSpan onConnection(final AgentSpan span, final CONNECTION connection)\n       if (instanceName != null && Config.get().isDbClientSplitByInstance()) {\n         span.setTag(DDTags.SERVICE_NAME, instanceName);\n       }\n+\n+      String hostName = dbHostname(connection);\n+      if (hostName != null) {\n+        span.setTag(Tags.PEER_HOSTNAME, dbHostname(connection));", "originalCommit": "1f34982c6c121170870a3096e6c96a84f85f9c5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwMTgxMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1943#discussion_r498701810", "body": "If this returned `CharSequence` there would be the _option_ not to use `String` and use something we can serialise faster.", "bodyText": "If this returned CharSequence there would be the option not to use String and use something we can serialise faster.", "bodyHTML": "<p dir=\"auto\">If this returned <code>CharSequence</code> there would be the <em>option</em> not to use <code>String</code> and use something we can serialise faster.</p>", "author": "richardstartin", "createdAt": "2020-10-02T09:02:31Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/DatabaseClientDecorator.java", "diffHunk": "@@ -26,6 +26,8 @@\n \n   protected abstract String dbInstance(CONNECTION connection);\n \n+  protected abstract String dbHostname(CONNECTION connection);", "originalCommit": "1f34982c6c121170870a3096e6c96a84f85f9c5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzNDk0OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1943#discussion_r498834948", "body": "I wonder if this should be brought up to the `ClientDecorator`.  Wouldn't this make sense for all clients?  (Maybe not necessary since http clients provide the full URL)", "bodyText": "I wonder if this should be brought up to the ClientDecorator.  Wouldn't this make sense for all clients?  (Maybe not necessary since http clients provide the full URL)", "bodyHTML": "<p dir=\"auto\">I wonder if this should be brought up to the <code>ClientDecorator</code>.  Wouldn't this make sense for all clients?  (Maybe not necessary since http clients provide the full URL)</p>", "author": "tylerbenson", "createdAt": "2020-10-02T13:51:53Z", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/DatabaseClientDecorator.java", "diffHunk": "@@ -26,6 +26,8 @@\n \n   protected abstract String dbInstance(CONNECTION connection);\n \n+  protected abstract String dbHostname(CONNECTION connection);", "originalCommit": "1f34982c6c121170870a3096e6c96a84f85f9c5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwMjU2NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1943#discussion_r498902565", "bodyText": "Looking at the clients, I don't think it would work well now.  The 2 main derived classes are HttpClientDecorator and DatabaseClientDecorator.  HttpClientDecorator uses URL.  The others are Kafka, JMS, Rabbit, Twilio, Rmi, Grpc, Spring, and KafkaStreams.  They all do things too differently.\nI think if we:\n\nFix the generics in database client decorators to make sense (many of them seem aren't correct so I couldn't add peer)\nAdd a better hierarchy around the other clients (perhaps a QueueClientDecorator?)\n\nWe might be able to revisit later", "author": "randomanderson", "createdAt": "2020-10-02T15:45:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzNDk0OA=="}], "type": "inlineReview"}, {"oid": "c209306af017747e7bc6da31b9b60ee9c82b56d7", "url": "https://github.com/DataDog/dd-trace-java/commit/c209306af017747e7bc6da31b9b60ee9c82b56d7", "message": "Review comments", "committedDate": "2020-10-02T15:39:49Z", "type": "commit"}]}