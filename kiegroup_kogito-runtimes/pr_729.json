{"pr_number": 729, "pr_title": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus(native image )", "pr_author": "swati-kale", "pr_createdAt": "2020-08-26T17:17:21Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/729", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkxOTA3NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r477919074", "body": "@swati-kale I think the solution is good but we shouldnt depend on the mongo client parameter to define if the native items should be produced. I think a better approach would be to check the persistence type. Perhaps extract the logic from the PersistenceGenerator and reuse the type here and as parameter to the generator.", "bodyText": "@swati-kale I think the solution is good but we shouldnt depend on the mongo client parameter to define if the native items should be produced. I think a better approach would be to check the persistence type. Perhaps extract the logic from the PersistenceGenerator and reuse the type here and as parameter to the generator.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/swati-kale/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/swati-kale\">@swati-kale</a> I think the solution is good but we shouldnt depend on the mongo client parameter to define if the native items should be produced. I think a better approach would be to check the persistence type. Perhaps extract the logic from the PersistenceGenerator and reuse the type here and as parameter to the generator.</p>", "author": "cristianonicolai", "createdAt": "2020-08-27T02:04:15Z", "path": "kogito-quarkus-extension/deployment/src/main/java/org/kie/kogito/quarkus/deployment/KogitoAssetsProcessor.java", "diffHunk": "@@ -287,6 +288,18 @@ private void generatePersistenceInfo(AppPaths appPaths, IndexView inputIndex) th\n         if (usePersistence) {\n             resource.produce(new NativeImageResourceBuildItem(\"kogito-types.proto\"));\n         }\n+        \n+        if(!parameters.isEmpty() && parameters.contains(\"com.mongodb.client.MongoClient\")) {", "originalCommit": "257c659bd750b2a6627377faf69c02ab5bb1087d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA5NzA1MA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r478097050", "bodyText": "ok, done,", "author": "swati-kale", "createdAt": "2020-08-27T04:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkxOTA3NA=="}], "type": "inlineReview"}, {"oid": "38d642b18d55862ff9d9c773a801bf23a7afe940", "url": "https://github.com/kiegroup/kogito-runtimes/commit/38d642b18d55862ff9d9c773a801bf23a7afe940", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T04:24:36Z", "type": "forcePushed"}, {"oid": "63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "url": "https://github.com/kiegroup/kogito-runtimes/commit/63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T06:16:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE5MTA2Nw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/729#discussion_r478191067", "body": "just to make it consistent with the other tyes\r\n```suggestion\r\n    public static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\r\n    public static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";\r\n```", "bodyText": "just to make it consistent with the other tyes\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n          \n          \n            \n                private static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";\n          \n          \n            \n                public static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n          \n          \n            \n                public static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";", "bodyHTML": "<p dir=\"auto\">just to make it consistent with the other tyes</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first x-last\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">FILESYSTEM_PERSISTENCE_TYPE</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filesystem<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first x-last\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">INFINISPAN_PERSISTENCE_TYPE</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>infinispan<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">FILESYSTEM_PERSISTENCE_TYPE</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filesystem<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">INFINISPAN_PERSISTENCE_TYPE</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>infinispan<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cristianonicolai", "createdAt": "2020-08-27T06:44:55Z", "path": "kogito-codegen/src/main/java/org/kie/kogito/codegen/process/persistence/PersistenceGenerator.java", "diffHunk": "@@ -66,8 +66,8 @@\n \n     private static final String FILESYSTEM_PERSISTENCE_TYPE = \"filesystem\";\n     private static final String INFINISPAN_PERSISTENCE_TYPE = \"infinispan\";", "originalCommit": "63f29bbd4eb554fb439a315f833d4ec253e1e1e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "264660e55c61919e7010adbe2e6b5bcd7eb4bc14", "url": "https://github.com/kiegroup/kogito-runtimes/commit/264660e55c61919e7010adbe2e6b5bcd7eb4bc14", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T12:28:43Z", "type": "forcePushed"}, {"oid": "0b245b511a6a69c65d64c6db6889244a9994b16c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b245b511a6a69c65d64c6db6889244a9994b16c", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:05:07Z", "type": "commit"}, {"oid": "0b245b511a6a69c65d64c6db6889244a9994b16c", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b245b511a6a69c65d64c6db6889244a9994b16c", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:05:07Z", "type": "forcePushed"}]}