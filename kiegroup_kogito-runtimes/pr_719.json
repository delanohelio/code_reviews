{"pr_number": 719, "pr_title": "[KOGITO-1942] tasks endpoint to return a list work item", "pr_author": "fjtirado", "pr_createdAt": "2020-08-24T14:49:39Z", "pr_url": "https://github.com/kiegroup/kogito-runtimes/pull/719", "timeline": [{"oid": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "url": "https://github.com/kiegroup/kogito-runtimes/commit/115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-24T20:53:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476198646", "body": "My suggestion to simplify this without need for creating the TestWorkItem class \r\n```suggestion\r\n        String taskId = given()\r\n                .when()\r\n                .get(\"/cinema/{pid}/tasks\", pid)\r\n                .then()\r\n                .statusCode(200)\r\n                .body(\"$.size\", is(1))\r\n                .body(\"[0].name\", is(\"ReviewRatingTask\"))\r\n                .extract()\r\n                .path(\"[0].id\");\r\n\r\n        Map<String, Object> reviewedRating = new HashMap<>();\r\n        reviewedRating.put(\"reviewedRating\", Rating.PG_13);\r\n        given()\r\n            .contentType(ContentType.JSON)\r\n            .when()\r\n            .body(reviewedRating)\r\n            .post(\"/cinema/{pid}/ReviewRatingTask/{taskId}\", pid, taskId)\r\n            .then()\r\n            .statusCode(200)\r\n            .body(\"movie.rating\", equalTo(Rating.PG_13.name()));\r\n```", "bodyText": "My suggestion to simplify this without need for creating the TestWorkItem class\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WorkItem[] tasks = given()\n          \n          \n            \n                        .when()\n          \n          \n            \n                        .get(\"/cinema/{pid}/tasks\", pid)\n          \n          \n            \n                        .then()\n          \n          \n            \n                        .statusCode(200)\n          \n          \n            \n                        .extract()\n          \n          \n            \n                        .body()\n          \n          \n            \n                        .as(TestWorkItem[].class);\n          \n          \n            \n                    assertEquals(1, tasks.length);\n          \n          \n            \n                    String taskId = given()\n          \n          \n            \n                            .when()\n          \n          \n            \n                            .get(\"/cinema/{pid}/tasks\", pid)\n          \n          \n            \n                            .then()\n          \n          \n            \n                            .statusCode(200)\n          \n          \n            \n                            .body(\"$.size\", is(1))\n          \n          \n            \n                            .body(\"[0].name\", is(\"ReviewRatingTask\"))\n          \n          \n            \n                            .extract()\n          \n          \n            \n                            .path(\"[0].id\");\n          \n          \n            \n            \n          \n          \n            \n                    Map<String, Object> reviewedRating = new HashMap<>();\n          \n          \n            \n                    reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n          \n          \n            \n                    given()\n          \n          \n            \n                        .contentType(ContentType.JSON)\n          \n          \n            \n                        .when()\n          \n          \n            \n                        .body(reviewedRating)\n          \n          \n            \n                        .post(\"/cinema/{pid}/ReviewRatingTask/{taskId}\", pid, taskId)\n          \n          \n            \n                        .then()\n          \n          \n            \n                        .statusCode(200)\n          \n          \n            \n                        .body(\"movie.rating\", equalTo(Rating.PG_13.name()));", "bodyHTML": "<p dir=\"auto\">My suggestion to simplify this without need for creating the TestWorkItem class</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">WorkItem</span>[] tasks <span class=\"pl-k\">=</span> given()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .when()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cinema/{pid}/tasks<span class=\"pl-pds\">\"</span></span>, pid)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .then()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .statusCode(<span class=\"pl-c1\">200</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .extract()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .body()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .as(<span class=\"pl-k\">TestWorkItem</span>[]<span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertEquals(<span class=\"pl-c1\">1</span>, tasks<span class=\"pl-k\">.</span>length);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> taskId <span class=\"pl-k\">=</span> given()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .when()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cinema/{pid}/tasks<span class=\"pl-pds\">\"</span></span>, pid)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .then()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .statusCode(<span class=\"pl-c1\">200</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .body(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$.size<span class=\"pl-pds\">\"</span></span>, is(<span class=\"pl-c1\">1</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .body(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[0].name<span class=\"pl-pds\">\"</span></span>, is(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ReviewRatingTask<span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .extract()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .path(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[0].id<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> reviewedRating <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        reviewedRating<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>reviewedRating<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Rating</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PG_13</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        given()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .contentType(<span class=\"pl-smi\">ContentType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>JSON</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .when()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .body(reviewedRating)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cinema/{pid}/ReviewRatingTask/{taskId}<span class=\"pl-pds\">\"</span></span>, pid, taskId)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .then()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .statusCode(<span class=\"pl-c1\">200</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .body(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>movie.rating<span class=\"pl-pds\">\"</span></span>, equalTo(<span class=\"pl-smi\">Rating</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PG_13</span><span class=\"pl-k\">.</span>name()));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cristianonicolai", "createdAt": "2020-08-25T06:07:29Z", "path": "integration-tests/integration-tests-quarkus/src/test/java/org/kie/kogito/integrationtests/quarkus/EnumsTest.java", "diffHunk": "@@ -65,27 +66,27 @@ void testSubmitMovie() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n-                .when()\n-                    .get(\"/cinema/{pid}/tasks\", pid)\n-                .then()\n-                    .statusCode(200)\n-                .extract()\n-                    .body()\n-                    .as(Map.class);\n-        assertEquals(1, tasks.size());\n+        WorkItem[] tasks = given()\n+            .when()\n+            .get(\"/cinema/{pid}/tasks\", pid)\n+            .then()\n+            .statusCode(200)\n+            .extract()\n+            .body()\n+            .as(TestWorkItem[].class);\n+        assertEquals(1, tasks.length);", "originalCommit": "115d29d80acef5f422ec4c220a196e7cc9f5ee8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MTc5NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476281794", "bodyText": "I prefer to deserialize the whole workitem id to ensure they match.", "author": "fjtirado", "createdAt": "2020-08-25T08:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI5Mjg4Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476292883", "bodyText": "why not take advantage of RestAssured capabilities to check that the request actually matches using .body(\"[0].attribute\") for that? I find that easier to read and maintain, but that is just my point of view.", "author": "cristianonicolai", "createdAt": "2020-08-25T09:01:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2OTM4NA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476369384", "bodyText": "Because I also wanted to check that the response do not contain any extra attribute that is not contemplated in WorkItem interface.\nIf workItem interface is changed, the test needs to be changed too, and using WorkItem this will be enforced by the compiler.", "author": "fjtirado", "createdAt": "2020-08-25T11:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njk3NzA4NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r476977085", "bodyText": "yep, I see your point but I would be more concerned in checking that the attribute values returned are the expected ones, so if something changes as in value is not expected and attribute is removed, that would break the test. But adding a new attribute isn't much of concern I would say, we should be able to evolve the model without breaking existing code. That's why I think we have different ways to tackle this, but completely fine to have different opinions and approach right :)", "author": "cristianonicolai", "createdAt": "2020-08-26T02:06:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NTAyMA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r478365020", "bodyText": "Ok, since we actually have two similar test, one for quarkus and one for springboot, lets took the salomonic approach, one will check only expected attributes (quarkus), the other (springboot) will check the whole item", "author": "fjtirado", "createdAt": "2020-08-27T12:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5ODY0Ng=="}], "type": "inlineReview"}, {"oid": "0b92b857571bd6cba99e6e348614448614f995e3", "url": "https://github.com/kiegroup/kogito-runtimes/commit/0b92b857571bd6cba99e6e348614448614f995e3", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-25T08:58:58Z", "type": "forcePushed"}, {"oid": "615667c69907ce6d0b14079f490fbc7dfb6e4584", "url": "https://github.com/kiegroup/kogito-runtimes/commit/615667c69907ce6d0b14079f490fbc7dfb6e4584", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-25T09:07:35Z", "type": "forcePushed"}, {"oid": "c97b873f076f8379c4a78437a18f8cf50d323909", "url": "https://github.com/kiegroup/kogito-runtimes/commit/c97b873f076f8379c4a78437a18f8cf50d323909", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-27T12:03:40Z", "type": "forcePushed"}, {"oid": "2e72b74651989f9335d36fa0d41f8318e76cb205", "url": "https://github.com/kiegroup/kogito-runtimes/commit/2e72b74651989f9335d36fa0d41f8318e76cb205", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-27T12:11:28Z", "type": "forcePushed"}, {"oid": "f6a39763737d82555601b0789e6c3b710b43a1c6", "url": "https://github.com/kiegroup/kogito-runtimes/commit/f6a39763737d82555601b0789e6c3b710b43a1c6", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-08-27T13:19:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjI0Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r479912243", "body": "As done in other changes as part of this PR, what about not copying the content in the array and assert the content directly doing:\r\n\r\n```\r\n.body(\"$.size\", is(1))\r\n.body(\"[0].name\", is(\"Task\"));\r\n```", "bodyText": "As done in other changes as part of this PR, what about not copying the content in the array and assert the content directly doing:\n.body(\"$.size\", is(1))\n.body(\"[0].name\", is(\"Task\"));", "bodyHTML": "<p dir=\"auto\">As done in other changes as part of this PR, what about not copying the content in the array and assert the content directly doing:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".body(&quot;$.size&quot;, is(1))\n.body(&quot;[0].name&quot;, is(&quot;Task&quot;));\"><pre><code>.body(\"$.size\", is(1))\n.body(\"[0].name\", is(\"Task\"));\n</code></pre></div>", "author": "Sgitario", "createdAt": "2020-08-31T06:06:02Z", "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/BasicRestTest.java", "diffHunk": "@@ -197,16 +198,16 @@ void testGetTasks() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n+        WorkItem[] tasks = given()\n                 .contentType(ContentType.JSON)\n             .when()\n                 .get(\"/AdHocFragments/{id}/tasks\", id)\n             .then()\n                 .statusCode(200)\n             .extract()\n                 .body()\n-                .as(Map.class);\n-        assertEquals(1, tasks.size());\n-        assertEquals(\"Task\", tasks.values().iterator().next());\n+                .as(TestWorkItem[].class);\n+        assertEquals(1, tasks.length);", "originalCommit": "f6a39763737d82555601b0789e6c3b710b43a1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI2OTE1NQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r484269155", "bodyText": "As explained in previous discussion with Cristiano, I wanted a test that deserialize the whole work item.", "author": "fjtirado", "createdAt": "2020-09-07T08:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3NDgxMg==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r484274812", "bodyText": "Then, what about making the test purpose clearer? So nobody in the future can change it.", "author": "Sgitario", "createdAt": "2020-09-07T08:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxODk4MQ==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r484318981", "bodyText": "I added a class implementation comment on TestWorkItem explaining the purpose of this class", "author": "fjtirado", "createdAt": "2020-09-07T09:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjI0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMzEzOA==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r479913138", "body": "For sake of readability, maybe we could just use Collections.singletonMap(\"reviewedRating\", Rating.PG_13) instead of creating a separated HashMap. ", "bodyText": "For sake of readability, maybe we could just use Collections.singletonMap(\"reviewedRating\", Rating.PG_13) instead of creating a separated HashMap.", "bodyHTML": "<p dir=\"auto\">For sake of readability, maybe we could just use Collections.singletonMap(\"reviewedRating\", Rating.PG_13) instead of creating a separated HashMap.</p>", "author": "Sgitario", "createdAt": "2020-08-31T06:08:56Z", "path": "integration-tests/integration-tests-springboot/src/it/integration-tests-springboot-it/src/test/java/org/kie/kogito/integrationtests/springboot/EnumsTest.java", "diffHunk": "@@ -63,27 +66,26 @@ void testSubmitMovie() {\n             .extract()\n                 .path(\"id\");\n \n-        Map<String, String> tasks = given()\n+        WorkItem task = given()\n                 .when()\n-                    .get(\"/cinema/{pid}/tasks\", pid)\n+                .get(\"/cinema/{pid}/tasks\", pid)\n                 .then()\n-                    .statusCode(200)\n+                .statusCode(200)\n+                .body(\"$.size\", is(1))\n                 .extract()\n-                    .body()\n-                    .as(Map.class);\n-        assertEquals(1, tasks.size());\n+                .as(TestWorkItem[].class)[0];\n \n-        tasks.keySet().forEach(taskId -> {\n-            Map<String, Object> reviewedRating = new HashMap<>();\n-            reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n-            given()\n-                    .contentType(ContentType.JSON)\n-                .when()\n-                    .body(reviewedRating)\n-                    .post(\"/cinema/{pid}/ReviewRatingTask/{taskId}\", pid, taskId)\n-                .then()\n-                    .statusCode(200)\n-                    .body(\"movie.rating\", equalTo(Rating.PG_13.name()));\n-        });\n-    }\n+        assertEquals(\"ReviewRatingTask\", task.getName());\n+\n+        Map<String, Object> reviewedRating = new HashMap<>();\n+        reviewedRating.put(\"reviewedRating\", Rating.PG_13);\n+        given()\n+            .contentType(ContentType.JSON)\n+            .when()\n+            .body(reviewedRating)", "originalCommit": "f6a39763737d82555601b0789e6c3b710b43a1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3MzY5Mw==", "url": "https://github.com/kiegroup/kogito-runtimes/pull/719#discussion_r484273693", "bodyText": "Ok, done", "author": "fjtirado", "createdAt": "2020-09-07T08:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMzEzOA=="}], "type": "inlineReview"}, {"oid": "e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "url": "https://github.com/kiegroup/kogito-runtimes/commit/e20e2370bab6fd990ab2205b7d2bbc9e46bf6c1d", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-09-07T08:26:50Z", "type": "forcePushed"}, {"oid": "827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "url": "https://github.com/kiegroup/kogito-runtimes/commit/827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-09-07T09:42:13Z", "type": "commit"}, {"oid": "827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "url": "https://github.com/kiegroup/kogito-runtimes/commit/827d7ccf6d4f507e0c2a567f7fe3440ecccd783a", "message": "[KOGITO-1942] tasks endpoint to return a list work item", "committedDate": "2020-09-07T09:42:13Z", "type": "forcePushed"}]}