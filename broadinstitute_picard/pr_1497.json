{"pr_number": 1497, "pr_title": "GL-970.  Have CompareMetrics consider two NaN metrics equal", "pr_author": "gbggrant", "pr_createdAt": "2020-04-13T15:17:25Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1497", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzE2Nw==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407557167", "body": "Can use fewer parens\r\n```suggestion\r\n                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\r\n```", "bodyText": "Can use fewer parens\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if ((!Double.isNaN(numValue1)) || (!Double.isNaN(numValue2))) {\n          \n          \n            \n                            if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {", "bodyHTML": "<p dir=\"auto\">Can use fewer parens</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\">(</span><span class=\"pl-k\">!</span><span class=\"pl-smi\">Double</span><span class=\"pl-k\">.</span>isNaN(numValue1)<span class=\"x x-first x-last\">)</span> <span class=\"pl-k\">||</span> <span class=\"x x-first x-last\">(</span><span class=\"pl-k\">!</span><span class=\"pl-smi\">Double</span><span class=\"pl-k\">.</span>isNaN(numValue2<span class=\"x x-first x-last\">)</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-smi\">Double</span><span class=\"pl-k\">.</span>isNaN(numValue1) <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span><span class=\"pl-smi\">Double</span><span class=\"pl-k\">.</span>isNaN(numValue2)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pshapiro4broad", "createdAt": "2020-04-13T16:02:57Z", "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,7 +267,11 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n+                double relativeChange = 0;\n+                if ((!Double.isNaN(numValue1)) || (!Double.isNaN(numValue2))) {", "originalCommit": "0d514a2f666c44744d11588db578f375e8986c67", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407593504", "body": "Under what conditions is it possible for `absoluteChange` to be non-zero and for `(numValue1 == 0 && numValue2 == 0)` to be true? Are this trying to avoid dividing by zero?\r\n\r\nAlso this code now divides by `numValue1` and before it divided by `numValue2`, is that a fix?", "bodyText": "Under what conditions is it possible for absoluteChange to be non-zero and for (numValue1 == 0 && numValue2 == 0) to be true? Are this trying to avoid dividing by zero?\nAlso this code now divides by numValue1 and before it divided by numValue2, is that a fix?", "bodyHTML": "<p dir=\"auto\">Under what conditions is it possible for <code>absoluteChange</code> to be non-zero and for <code>(numValue1 == 0 &amp;&amp; numValue2 == 0)</code> to be true? Are this trying to avoid dividing by zero?</p>\n<p dir=\"auto\">Also this code now divides by <code>numValue1</code> and before it divided by <code>numValue2</code>, is that a fix?</p>", "author": "pshapiro4broad", "createdAt": "2020-04-13T17:09:48Z", "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "originalCommit": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxMzI0Mg==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407613242", "bodyText": "Yes, that's to avoid the divide by zero.\nI've changed the code to be comparison of the second metric, relative to the first metric, so that's why the denominator has changed.\nchange = (value2 - value1) / value1", "author": "gbggrant", "createdAt": "2020-04-13T17:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNDQ1Ng==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407634456", "bodyText": "That explains the second numValue1 == 0 check. But I don't see how (numValue1 == 0 && numValue2 == 0) can be true if absoluteChange is not zero.", "author": "pshapiro4broad", "createdAt": "2020-04-13T18:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1OTM2MA==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407659360", "bodyText": "Probably true, the problem with doing lots of incremental changes.", "author": "gbggrant", "createdAt": "2020-04-13T19:08:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NjUwMg==", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407666502", "bodyText": "And it's really not even a problem if the numerator is 0.", "author": "gbggrant", "createdAt": "2020-04-13T19:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}], "type": "inlineReview"}, {"oid": "21b9ee87061372502d1f4d6cf5e438bad8a67737", "url": "https://github.com/broadinstitute/picard/commit/21b9ee87061372502d1f4d6cf5e438bad8a67737", "message": "GL-970.\nHave CompareMetrics consider two NaN metrics equal\nAdded absolute difference", "committedDate": "2020-04-13T22:49:09Z", "type": "commit"}, {"oid": "21b9ee87061372502d1f4d6cf5e438bad8a67737", "url": "https://github.com/broadinstitute/picard/commit/21b9ee87061372502d1f4d6cf5e438bad8a67737", "message": "GL-970.\nHave CompareMetrics consider two NaN metrics equal\nAdded absolute difference", "committedDate": "2020-04-13T22:49:09Z", "type": "forcePushed"}]}