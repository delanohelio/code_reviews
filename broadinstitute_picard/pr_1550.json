{"pr_number": 1550, "pr_title": "Added a simple test for LiftoverHaplotypeMap", "pr_author": "yfarjoun", "pr_createdAt": "2020-07-21T18:20:00Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1550", "timeline": [{"oid": "aadb85fa6e762cc561529ed03a8f2a4ba610be35", "url": "https://github.com/broadinstitute/picard/commit/aadb85fa6e762cc561529ed03a8f2a4ba610be35", "message": "Added a simple test for LiftoverHaplotypeMap", "committedDate": "2020-07-21T18:18:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNDc5MA==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458314790", "body": "```suggestion\r\nnew LiftOverHaplotypeMap().instanceMain(new String[] {\"--I\", HG18_HAPLOTYPE_MAP,\r\n                \"--OUTPUT\", tmp.getAbsolutePath(), \"--SEQUENCE_DICTIONARY\", HG_19_SD,\r\n                \"--CHAIN\", CHAIN });\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new LiftOverHaplotypeMap().instanceMain(new String[] {\"INPUT=\" + HG18_HAPLOTYPE_MAP,\n          \n          \n            \n                            \"OUTPUT=\" + tmp.getAbsolutePath(), \"SEQUENCE_DICTIONARY=\" + HG_19_SD,\n          \n          \n            \n                            \"CHAIN=\" + CHAIN });\n          \n          \n            \n            new LiftOverHaplotypeMap().instanceMain(new String[] {\"--I\", HG18_HAPLOTYPE_MAP,\n          \n          \n            \n                            \"--OUTPUT\", tmp.getAbsolutePath(), \"--SEQUENCE_DICTIONARY\", HG_19_SD,\n          \n          \n            \n                            \"--CHAIN\", CHAIN });", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">        </span><span class=\"pl-k\">new</span> <span class=\"pl-smi\">LiftOverHaplotypeMap</span>()<span class=\"pl-k\">.</span>instanceMain(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first\">INPUT=</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span> <span class=\"pl-c1\">HG18_HAPLOTYPE_MAP</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>OUTPUT<span class=\"x x-first\">=</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>tmp<span class=\"pl-k\">.</span>getAbsolutePath(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SEQUENCE_DICTIONARY<span class=\"x x-first\">=</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span> <span class=\"pl-c1\">HG_19_SD</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CHAIN<span class=\"x x-first\">=</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span> <span class=\"pl-c1\">CHAIN</span> });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">new</span> <span class=\"pl-smi\">LiftOverHaplotypeMap</span>()<span class=\"pl-k\">.</span>instanceMain(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first\">--I</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">,</span> <span class=\"pl-c1\">HG18_HAPLOTYPE_MAP</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">--</span>OUTPUT<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x x-last\">, </span>tmp<span class=\"pl-k\">.</span>getAbsolutePath(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">--</span>SEQUENCE_DICTIONARY<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x x-last\">,</span> <span class=\"pl-c1\">HG_19_SD</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">--</span>CHAIN<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x x-last\">,</span> <span class=\"pl-c1\">CHAIN</span> });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cmnbroad", "createdAt": "2020-07-21T18:48:11Z", "path": "src/test/java/picard/fingerprint/LiftoverHaplotypeMapTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020 The Broad Institute\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package picard.fingerprint;\n+\n+import htsjdk.samtools.SamReader;\n+import htsjdk.samtools.SamReaderFactory;\n+import htsjdk.samtools.util.CloserUtil;\n+import htsjdk.samtools.util.Interval;\n+import htsjdk.samtools.util.SequenceUtil;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Basic test for HaplotypeMap liftover\n+ */\n+public class LiftoverHaplotypeMapTest {\n+\n+    private static final String TEST_DATA_DIR=\"testdata/picard/fingerprint/\";\n+    private static final String HG18_HAPLOTYPE_MAP = TEST_DATA_DIR + \"haplotypeMapHg18.txt\";\n+    private static final String CHAIN = TEST_DATA_DIR + \"hg18ToHg19.broad.over.chain\";\n+    private static final String HG_19_SD = TEST_DATA_DIR + \"Homo_sapiens_assembly19.dict\";\n+\n+    @Test\n+    public void testHaplotypeMapLiftover() throws Exception {\n+\n+        Map<String, Interval> hg19 = new HashMap<String, Interval>();\n+        hg19.put(\"rs1210110\", new Interval(\"1\", 14096821, 14096821));\n+        hg19.put(\"rs7555566\", new Interval(\"1\", 14804874, 14804874));\n+        hg19.put(\"rs1364054\", new Interval(\"2\", 8178735, 8178735));\n+        hg19.put(\"rs6734275\", new Interval(\"2\", 67241174, 67241174));\n+        hg19.put(\"rs7584993\", new Interval(\"2\", 223845942, 223845942));\n+        hg19.put(\"rs17272796\", new Interval(\"3\", 17077268, 17077268));\n+        hg19.put(\"rs1155741\", new Interval(\"3\", 37627112, 37627112));\n+        hg19.put(\"rs1155744\", new Interval(\"3\", 37627598, 37627598));\n+        hg19.put(\"rs161792\", new Interval(\"3\", 151899704, 151899704));\n+        hg19.put(\"rs11940551\", new Interval(\"4\", 27162478, 27162478));\n+        hg19.put(\"rs9293511\", new Interval(\"5\", 88416354, 88416354));\n+        hg19.put(\"rs10943567\", new Interval(\"6\", 79402451, 79402451));\n+        hg19.put(\"rs9343786\", new Interval(\"6\", 79414728, 79414728));\n+        hg19.put(\"rs9352613\", new Interval(\"6\", 79424433, 79424433));\n+        hg19.put(\"rs685449\", new Interval(\"6\", 153344531, 153344531));\n+        hg19.put(\"rs7808249\", new Interval(\"7\", 86983715, 86983715));\n+        hg19.put(\"rs1106334\", new Interval(\"8\", 71012811, 71012811));\n+        hg19.put(\"rs11017876\", new Interval(\"10\", 129200964, 129200964));\n+        hg19.put(\"rs9572094\", new Interval(\"13\", 35252882, 35252882));\n+        hg19.put(\"rs4905366\", new Interval(\"14\", 96103099, 96103099));\n+        hg19.put(\"rs4775699\", new Interval(\"15\", 47873549, 47873549));\n+        hg19.put(\"rs1528601\", new Interval(\"16\", 51098427, 51098427));\n+        hg19.put(\"rs11655512\", new Interval(\"17\", 20851735, 20851735));\n+        hg19.put(\"rs4793172\", new Interval(\"17\", 43131480, 43131480));\n+        hg19.put(\"rs242076\", new Interval(\"22\", 33229830, 33229830));\n+        hg19.put(\"rs6603251\", new Interval(\"X\", 320580, 320580));\n+\n+\n+        final File tmp = File.createTempFile(\"hg19Map\", \".txt\");\n+        tmp.deleteOnExit();\n+\n+        new LiftOverHaplotypeMap().instanceMain(new String[] {\"INPUT=\" + HG18_HAPLOTYPE_MAP,\n+                \"OUTPUT=\" + tmp.getAbsolutePath(), \"SEQUENCE_DICTIONARY=\" + HG_19_SD,\n+                \"CHAIN=\" + CHAIN });", "originalCommit": "aadb85fa6e762cc561529ed03a8f2a4ba610be35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTczMw==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458319733", "bodyText": "hmmm. I think that this sort of change should be done as a separate PR.... (also I tried and it failed...)", "author": "yfarjoun", "createdAt": "2020-07-21T18:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNDc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzMTU1Mg==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458331552", "bodyText": "Its new code - why would we create more new legacy code that will have to be changed later ? Anyway, not working is a more serious issue - I'll try it and see why it fails.", "author": "cmnbroad", "createdAt": "2020-07-21T19:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNDc5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzNTM5NA==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458335394", "bodyText": "Anyway, it seems to work for me.", "author": "cmnbroad", "createdAt": "2020-07-21T19:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxNDc5MA=="}], "type": "inlineReview"}, {"oid": "b6f5bc327e3c94fc909e990cf414080231971453", "url": "https://github.com/broadinstitute/picard/commit/b6f5bc327e3c94fc909e990cf414080231971453", "message": "clipped chain file so it's not so big...", "committedDate": "2020-07-21T18:53:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NTkwNQ==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458355905", "body": "You could use try-with-resources to avoid explicit `close` here.", "bodyText": "You could use try-with-resources to avoid explicit close here.", "bodyHTML": "<p dir=\"auto\">You could use try-with-resources to avoid explicit <code>close</code> here.</p>", "author": "pshapiro4broad", "createdAt": "2020-07-21T20:05:17Z", "path": "src/test/java/picard/fingerprint/LiftOverHaplotypeMapTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020 The Broad Institute\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package picard.fingerprint;\n+\n+import htsjdk.samtools.SamReader;\n+import htsjdk.samtools.SamReaderFactory;\n+import htsjdk.samtools.util.CloserUtil;\n+import htsjdk.samtools.util.Interval;\n+import htsjdk.samtools.util.SequenceUtil;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Basic test for HaplotypeMap liftover\n+ */\n+public class LiftOverHaplotypeMapTest {\n+\n+    private static final String TEST_DATA_DIR=\"testdata/picard/fingerprint/\";\n+    private static final String HG18_HAPLOTYPE_MAP = TEST_DATA_DIR + \"haplotypeMapHg18.txt\";\n+    private static final String CHAIN = TEST_DATA_DIR + \"hg18ToHg19.clipped.over.chain\";\n+    private static final String HG_19_SD = TEST_DATA_DIR + \"Homo_sapiens_assembly19.dict\";\n+\n+    @Test\n+    public void testHaplotypeMapLiftover() throws Exception {\n+\n+        Map<String, Interval> hg19 = new HashMap<>();\n+        hg19.put(\"rs1210110\", new Interval(\"1\", 14096821, 14096821));\n+        hg19.put(\"rs7555566\", new Interval(\"1\", 14804874, 14804874));\n+        hg19.put(\"rs1364054\", new Interval(\"2\", 8178735, 8178735));\n+        hg19.put(\"rs6734275\", new Interval(\"2\", 67241174, 67241174));\n+        hg19.put(\"rs7584993\", new Interval(\"2\", 223845942, 223845942));\n+\n+\n+        final File tmp = File.createTempFile(\"hg19Map\", \".txt\");\n+        tmp.deleteOnExit();\n+\n+        new LiftOverHaplotypeMap().instanceMain(new String[] {\"INPUT=\" + HG18_HAPLOTYPE_MAP,\n+                \"OUTPUT=\" + tmp.getAbsolutePath(), \"SEQUENCE_DICTIONARY=\" + HG_19_SD,\n+                \"CHAIN=\" + CHAIN });\n+        final HaplotypeMap results = new HaplotypeMap(tmp);\n+        final SamReader samReader = SamReaderFactory.makeDefault().open(new File(HG_19_SD));\n+        SequenceUtil.assertSequenceDictionariesEqual(\n+                results.getHeader().getSequenceDictionary(),\n+                samReader.getFileHeader().getSequenceDictionary());\n+\n+        for (Snp snp : results.getAllSnps()) {\n+            Interval i = hg19.remove(snp.getName());\n+            Assert.assertNotNull(i, \"No lifted-over interval found for Snp: \" + snp.getName());\n+            Assert.assertEquals(snp.getChrom(), i.getContig(), \"Sequence doesn't match for \" + snp.getName());\n+            Assert.assertEquals(snp.getPos(), i.getStart(), \"Start position doesn't match for \" + snp.getName());\n+        }\n+        Assert.assertEquals(hg19.size(), 0, \"Extra intervals remain after liftover: \" + hg19);\n+        CloserUtil.close(samReader);", "originalCommit": "b6f5bc327e3c94fc909e990cf414080231971453", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NjE3Nw==", "url": "https://github.com/broadinstitute/picard/pull/1550#discussion_r458356177", "body": "whitespace\r\n```suggestion\r\n    private static final String TEST_DATA_DIR = \"testdata/picard/fingerprint/\";\r\n```", "bodyText": "whitespace\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String TEST_DATA_DIR=\"testdata/picard/fingerprint/\";\n          \n          \n            \n                private static final String TEST_DATA_DIR = \"testdata/picard/fingerprint/\";", "bodyHTML": "<p dir=\"auto\">whitespace</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">TEST_DATA_DIR</span><span class=\"pl-k x x-first x-last\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>testdata/picard/fingerprint/<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">TEST_DATA_DIR</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>testdata/picard/fingerprint/<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pshapiro4broad", "createdAt": "2020-07-21T20:05:50Z", "path": "src/test/java/picard/fingerprint/LiftOverHaplotypeMapTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2020 The Broad Institute\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package picard.fingerprint;\n+\n+import htsjdk.samtools.SamReader;\n+import htsjdk.samtools.SamReaderFactory;\n+import htsjdk.samtools.util.CloserUtil;\n+import htsjdk.samtools.util.Interval;\n+import htsjdk.samtools.util.SequenceUtil;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Basic test for HaplotypeMap liftover\n+ */\n+public class LiftOverHaplotypeMapTest {\n+\n+    private static final String TEST_DATA_DIR=\"testdata/picard/fingerprint/\";", "originalCommit": "b6f5bc327e3c94fc909e990cf414080231971453", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ffff13fd2eb6658271d89d72e89680526224b34", "url": "https://github.com/broadinstitute/picard/commit/9ffff13fd2eb6658271d89d72e89680526224b34", "message": "- formated lines\n- using try-with-resources", "committedDate": "2020-07-21T20:22:06Z", "type": "commit"}]}