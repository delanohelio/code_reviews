{"pr_number": 1581, "pr_title": "Fixed a bug in MergeBamAlignment", "pr_author": "yfarjoun", "pr_createdAt": "2020-09-23T21:30:42Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1581", "timeline": [{"oid": "ed3b1981827a31e9b929dcdaae4b6da7d1f7b372", "url": "https://github.com/broadinstitute/picard/commit/ed3b1981827a31e9b929dcdaae4b6da7d1f7b372", "message": "Fixed yet another bug in MergeBamAlignment: when there's a deletion in the base just beyond the 5' end of the mate, the code for clipping overhanging reads got confused and didn't clip anything. This commit fixes that.\n\nAdded tests that specifically cover this case.", "committedDate": "2020-09-23T21:28:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTcxNg==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r493909716", "body": "this is to protect from a stupidly aligned read that has a deletion at the end somehow, so there are no bases __following__ that base.", "bodyText": "this is to protect from a stupidly aligned read that has a deletion at the end somehow, so there are no bases following that base.", "bodyHTML": "<p dir=\"auto\">this is to protect from a stupidly aligned read that has a deletion at the end somehow, so there are no bases <strong>following</strong> that base.</p>", "author": "yfarjoun", "createdAt": "2020-09-23T21:37:10Z", "path": "src/main/java/picard/sam/AbstractAlignmentMerger.java", "diffHunk": "@@ -861,10 +860,21 @@ static int getReadPositionAtReferencePositionIgnoreSoftClips(final SAMRecord rec\n         rec.setCigar(newCigar);\n         // Since the read effectively got shifted forward by turning the clips into matches, the query position needs\n         // also to be moved forward bye posShift so that it's still querying the same base.\n-        readPosition = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, false);\n+        final int readPosition = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, true);\n+\n         rec.setCigar(oldCigar);\n \n-        return readPosition;\n+        // if this returns zero, it means that there's a deletion at the position of the desired base,\n+        // if the read is on the positive strand readPosition should be incremented by one to get the\n+        // base __following__ the deletion rather than the one preceding it (which is what returnLastBaseIfDeleted argument in\n+        // getReadPositionAtReferencePosition will do)\n+        final int readPositionZeroOnDeletion = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, false);\n+        final boolean increamentReadPosition = readPositionZeroOnDeletion == 0 &&\n+                !rec.getReadNegativeStrandFlag() &&\n+                readPosition < rec.getReadLength() - 1;", "originalCommit": "ed3b1981827a31e9b929dcdaae4b6da7d1f7b372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "changed_code": [{"header": "diff --git a/src/main/java/picard/sam/AbstractAlignmentMerger.java b/src/main/java/picard/sam/AbstractAlignmentMerger.java\nindex f24c93dd5..9b6a0d096 100644\n--- a/src/main/java/picard/sam/AbstractAlignmentMerger.java\n+++ b/src/main/java/picard/sam/AbstractAlignmentMerger.java\n", "chunk": "@@ -868,12 +868,12 @@ public abstract class AbstractAlignmentMerger {\n         // if the read is on the positive strand readPosition should be incremented by one to get the\n         // base __following__ the deletion rather than the one preceding it (which is what returnLastBaseIfDeleted argument in\n         // getReadPositionAtReferencePosition will do)\n-        final int readPositionZeroOnDeletion = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, false);\n-        final boolean increamentReadPosition = readPositionZeroOnDeletion == 0 &&\n+        final boolean incrementReadPosition = readPositionZeroOnDeletion == 0 &&\n+                readPosition != 0 &&\n                 !rec.getReadNegativeStrandFlag() &&\n                 readPosition < rec.getReadLength() - 1;\n \n-        return increamentReadPosition ? readPosition + 1 : readPosition;\n+        return incrementReadPosition ? readPosition + 1 : readPosition;\n \n     }\n \n", "next_change": {"commit": "ba1cf02743400a78571e4d24d20ce20ca4789d3e", "changed_code": [{"header": "diff --git a/src/main/java/picard/sam/AbstractAlignmentMerger.java b/src/main/java/picard/sam/AbstractAlignmentMerger.java\nindex 9b6a0d096..5f7debcf4 100644\n--- a/src/main/java/picard/sam/AbstractAlignmentMerger.java\n+++ b/src/main/java/picard/sam/AbstractAlignmentMerger.java\n", "chunk": "@@ -860,18 +860,21 @@ public abstract class AbstractAlignmentMerger {\n         // Since the read effectively got shifted forward by turning the clips into matches, the query position needs\n         // also to be moved forward by posShift so that it's still querying the same base.\n         final int readPosition = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, true);\n-        final int readPositionZeroOnDeletion = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, false);\n-\n-        rec.setCigar(oldCigar);\n \n         // if this returns zero, it means that there's a deletion at the position of the desired base,\n         // if the read is on the positive strand readPosition should be incremented by one to get the\n         // base __following__ the deletion rather than the one preceding it (which is what returnLastBaseIfDeleted argument in\n         // getReadPositionAtReferencePosition will do)\n-        final boolean incrementReadPosition = readPositionZeroOnDeletion == 0 &&\n-                readPosition != 0 &&\n-                !rec.getReadNegativeStrandFlag() &&\n-                readPosition < rec.getReadLength() - 1;\n+        final int readPositionZeroOnDeletion = SAMRecord.getReadPositionAtReferencePosition(rec, pos + posShift, false);\n+\n+        rec.setCigar(oldCigar);\n+\n+        final boolean refPositionOnDeletion = readPositionZeroOnDeletion == 0 && readPosition != 0;\n+\n+        final boolean incrementReadPosition = refPositionOnDeletion &&\n+                !rec.getReadNegativeStrandFlag() && // only needed for positive-strand reads\n+                readPosition < rec.getReadLength(); // protection against the possibility that getReadPositionAtReferencePosition\n+        // would return the last base of a read when it ends in a deletion (it currently doesn't)\n \n         return incrementReadPosition ? readPosition + 1 : readPosition;\n \n", "next_change": null}]}}]}}, {"oid": "cba7e24ba46eed6e57c6aef082910b887bb30356", "url": "https://github.com/broadinstitute/picard/commit/cba7e24ba46eed6e57c6aef082910b887bb30356", "message": "- fix last minute bug\n- many more tests", "committedDate": "2020-09-24T16:22:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU1Mzc3MA==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494553770", "body": "These are super helpful figures.\r\n\r\nThe \"-\" at the end of MMMMMMMMMMMMMMMMMMsssssssss-> should be removed because it looks like a deletion, and for the reverse reads you use \"<\".\r\n\r\nThis occurs in a few other places.", "bodyText": "These are super helpful figures.\nThe \"-\" at the end of MMMMMMMMMMMMMMMMMMsssssssss-> should be removed because it looks like a deletion, and for the reverse reads you use \"<\".\nThis occurs in a few other places.", "bodyHTML": "<p dir=\"auto\">These are super helpful figures.</p>\n<p dir=\"auto\">The \"-\" at the end of MMMMMMMMMMMMMMMMMMsssssssss-&gt; should be removed because it looks like a deletion, and for the reverse reads you use \"&lt;\".</p>\n<p dir=\"auto\">This occurs in a few other places.</p>", "author": "fleharty", "createdAt": "2020-09-24T19:15:42Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba1cf02743400a78571e4d24d20ce20ca4789d3e", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..dd8b470c5 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -202,11 +229,11 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n                 //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n                 //          should become\n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss>\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n", "next_change": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex dd8b470c5..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -242,11 +242,11 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n                 //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n                 //          should become\n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss>\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -250,7 +255,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n-                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                {27, false, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -257,7 +260,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n                 {27, false, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //     <ssssssssMMMMMMMMMMMMMMMMMMM\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MjEwNg==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494572106", "body": "I suggest adding another test:\r\n                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\r\n                //                  MMMMMMMMMMMMMMMMMMsssssssss->\r\n                //     <ssssssssMMM--MMMMMMMMMMMMMMMM\r\n                //          should become\r\n                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\r\n                //                  MMMMMMMMMMMMMMMMMSsssssssss->\r\n                //       <ssssssssSSSMMMMMMMMMMMMMMMM\r\n\r\n                {27, 18, 14, \"18M9S\", \"8S3M2D16M\", false, true, 18, 19, \"17M10S\", \"11S1D16M\", false,\r\n                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\r\n                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities, null, null},\r\n\r\n", "bodyText": "I suggest adding another test:\n// 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n//                  MMMMMMMMMMMMMMMMMMsssssssss->\n//     <ssssssssMMM--MMMMMMMMMMMMMMMM\n//          should become\n// 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n//                  MMMMMMMMMMMMMMMMMSsssssssss->\n//       <ssssssssSSSMMMMMMMMMMMMMMMM\n            {27, 18, 14, \"18M9S\", \"8S3M2D16M\", false, true, 18, 19, \"17M10S\", \"11S1D16M\", false,\n                    default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                    default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities, null, null},", "bodyHTML": "<p dir=\"auto\">I suggest adding another test:<br>\n// 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789<br>\n//                  MMMMMMMMMMMMMMMMMMsssssssss-&gt;<br>\n//     &lt;ssssssssMMM--MMMMMMMMMMMMMMMM<br>\n//          should become<br>\n// 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789<br>\n//                  MMMMMMMMMMMMMMMMMSsssssssss-&gt;<br>\n//       &lt;ssssssssSSSMMMMMMMMMMMMMMMM</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            {27, 18, 14, &quot;18M9S&quot;, &quot;8S3M2D16M&quot;, false, true, 18, 19, &quot;17M10S&quot;, &quot;11S1D16M&quot;, false,\n                    default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                    default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities, null, null},\"><pre><code>            {27, 18, 14, \"18M9S\", \"8S3M2D16M\", false, true, 18, 19, \"17M10S\", \"11S1D16M\", false,\n                    default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                    default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities, null, null},\n</code></pre></div>", "author": "fleharty", "createdAt": "2020-09-24T19:50:54Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MzcyMQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494593721", "bodyText": "could you also add a similar test with an insertion that spans the region to be clipped?", "author": "fleharty", "createdAt": "2020-09-24T20:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MjEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMTIyMw==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494611223", "bodyText": "you mean a deletion? I'm not sure how to interpret this in the case of an insertion....", "author": "yfarjoun", "createdAt": "2020-09-24T21:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MjEwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMzYwMQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494613601", "bodyText": "I added the two-deletion test in line 290", "author": "yfarjoun", "createdAt": "2020-09-24T21:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MjEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "ba1cf02743400a78571e4d24d20ce20ca4789d3e", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..dd8b470c5 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -202,11 +229,11 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n                 //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n                 //          should become\n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss>\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n", "next_change": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex dd8b470c5..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -242,11 +242,11 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n                 //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n                 //          should become\n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss>\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -250,7 +255,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //      <ssssssssSSSMMMMMMMMMMMMMMMM\n \n \n-                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                {27, false, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -257,7 +260,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n                 {27, false, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //     <ssssssssMMMMMMMMMMMMMMMMMMM\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDA1MQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494584051", "body": "MMMMMMMMMMMMMMMMMssssssssss>\r\n\r\nshould be:\r\n\r\nMMMMMMMMMMMMMMMMMSsssssssss>", "bodyText": "MMMMMMMMMMMMMMMMMssssssssss>\nshould be:\nMMMMMMMMMMMMMMMMMSsssssssss>", "bodyHTML": "<p dir=\"auto\">MMMMMMMMMMMMMMMMMssssssssss&gt;</p>\n<p dir=\"auto\">should be:</p>\n<p dir=\"auto\">MMMMMMMMMMMMMMMMMSsssssssss&gt;</p>", "author": "fleharty", "createdAt": "2020-09-24T20:14:13Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba1cf02743400a78571e4d24d20ce20ca4789d3e", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..dd8b470c5 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -264,8 +315,6 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //                                     MMMMMMMMMMMMMMMMMssssssssss>\n                 //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n-\n-\n                 {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n", "next_change": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex dd8b470c5..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -310,10 +310,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n                 //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n-                //                                  /\\\n+                //                                  ^^\n                 //   with an insertion of two bases here should become\n                 //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                                     MMMMMMMMMMMMMMMMMSsssssssss>\n                 //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n                 {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -315,7 +320,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //                                     MMMMMMMMMMMMMMMMMSsssssssss>\n                 //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n-                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                {27, false, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -322,7 +322,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n                 {27, false, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n \n                 //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n", "next_change": null}]}}]}}, {"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex dd8b470c5..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -323,10 +323,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n-                //                                         /\\\n+                //                                         ^^\n                 //         with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -330,7 +335,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n-                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -333,11 +333,9 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n-                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\",\n+                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n \n                 //       123456789.123456789.123456789.123--456789.123456789.123456789.123456789.123456789\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4ODMxNg==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494588316", "body": "The cigar for the second read is 16M2I2M7S so there should be two \"i\"s in the second read.", "bodyText": "The cigar for the second read is 16M2I2M7S so there should be two \"i\"s in the second read.", "bodyHTML": "<p dir=\"auto\">The cigar for the second read is 16M2I2M7S so there should be two \"i\"s in the second read.</p>", "author": "fleharty", "createdAt": "2020-09-24T20:22:29Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiMMMsssssss>", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -301,10 +350,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n \n-                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //       123456789.123456789.123456789.123-456789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n-                //                                        /\\\n+                //                                        ^\n                 //        with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -360,7 +365,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n-                {27, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -359,12 +355,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n                 //                                        ^\n-                //        with an insertion of one bases here should become\n+                //        with an insertion of one base here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n                 {27, false, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n", "next_change": null}, {"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -373,26 +367,203 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n                 //                                         ^^\n-                //         with an insertion of one bases here should become\n+                //         with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n-\n                 {27, false, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                //      <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                {27, true, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11H\", \"11H16M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 16), default27LongR2Bases.substring(11, 27),\n+                        default27LongR1Bases.substring(16, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 11)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 16), default27LongR2Qualities.substring(11, 27),\n+                        default27LongR1Qualities.substring(16, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 11)),\n+                },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                //      <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                {27, true, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11H\", \"11H16M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 16), default27LongR2Bases.substring(11, 27),\n+                        default27LongR1Bases.substring(16, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 11)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 16), default27LongR2Qualities.substring(11, 27),\n+                        default27LongR1Qualities.substring(16, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 11))\n+                },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12H15M\", \"15M12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12H15M\", \"15M12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMM---MMMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMSHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"14M3D4M9S\", true, false, 18, 18, \"12H15M\", \"14M1S12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.12-3456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //      MMMMMMMMMMMMMMMMMMMMMMMMMMM-> ## deletion right at the end\n+                //          should remain\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //      MMMMMMMMMMMMMMMMMMMMMMMMMMM->  ## deletion right at the end\n+                {27, true, 14, 6, \"8S19M\", \"27M1D\", true, false, 14, 6, \"8S19M\", \"27M1D\",\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  ^^\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMHHHHHHHHHH>\n+                //                          <HHHHHHHHHHMMMMMMMMMMMMMMMMM\n+                {27, true, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10H\", \"10H17M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 17), default27LongR2Bases.substring(10, 27),\n+                        default27LongR1Bases.substring(17, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 10)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 17), default27LongR2Qualities.substring(10, 27),\n+                        default27LongR1Qualities.substring(17, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 10))},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         ^^\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.123--456789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        ^^\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+                {27, true, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.123-456789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n+                //                                        ^\n+                //        with an insertion of one base here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n+                //                                         ^^\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n         };\n     }\n \n     @DataProvider\n-    public Iterator<Object[]> overlapReadDataWithSwaps(){\n+    public Iterator<Object[]> overlapReadDataWithSwaps() {\n         List<Object[]> tests = new LinkedList<>();\n \n         for (Object[] inputs : overlapReadData()) {\n             tests.add(inputs);\n             final Object[] swappedInputs = new Object[inputs.length];\n-            swappedInputs[0] = inputs[0]; //read length\n+            swappedInputs[0] = inputs[0]; // read length\n             swappedInputs[1] = inputs[1]; // hard_clip\n \n             for (int i = 2; i < inputs.length; i += 2) {\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4OTMwMA==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494589300", "body": "<ssssssSSSSSMMMMMMMMMMMMMMMM\r\nshould be\r\n<sssssssSSSSMMMMMMMMMMMMMMMM\r\n", "bodyText": "<ssssssSSSSSMMMMMMMMMMMMMMMM\nshould be\n<sssssssSSSSMMMMMMMMMMMMMMMM", "bodyHTML": "<p dir=\"auto\">&lt;ssssssSSSSSMMMMMMMMMMMMMMMM<br>\nshould be<br>\n&lt;sssssssSSSSMMMMMMMMMMMMMMMM</p>", "author": "fleharty", "createdAt": "2020-09-24T20:24:31Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of one bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiMMsssssss>\n+                //                                         /\\\n+                //         with an insertion of one bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -317,19 +366,17 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n                 //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n-                //                        MMMMMMMMMMMMMMMMMiMMsssssss>\n-                //                                         /\\\n+                //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n+                //                                         ^^\n                 //         with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n-                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n+                //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n \n-                {27, 14, 18, \"7S20M\", \"17M1I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n-\n         };\n     }\n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -370,24 +375,48 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                                         ^^\n                 //         with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n \n-                {27, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n         };\n     }\n \n-    @Test(dataProvider = \"overlapReadData\")\n-    public void testOverlappedReadClipping(final int readLength, final int start1, final int start2, final String cigar1, final String cigar2,\n+    @DataProvider\n+    public Iterator<Object[]> overlapReadDataWithSwaps(){\n+        List<Object[]> tests = new LinkedList<>();\n+\n+        for (Object[] inputs : overlapReadData()) {\n+            tests.add(inputs);\n+            final Object[] swappedInputs = new Object[inputs.length];\n+            swappedInputs[0] = inputs[0]; //read length\n+            swappedInputs[1] = inputs[1]; // hard_clip\n+\n+            for (int i = 2; i < inputs.length; i += 2) {\n+                swappedInputs[i] = inputs[i + 1];\n+                swappedInputs[i + 1] = inputs[i];\n+            }\n+            tests.add(swappedInputs);\n+        }\n+        return tests.iterator();\n+    }\n+\n+    @Test(dataProvider = \"overlapReadDataWithSwaps\")\n+    public void testOverlappedReadClipping(\n+                                           final int readLength,final boolean hardClipOverlappingReads,\n+                                           final int start1, final int start2,\n+                                           final String cigar1, final String cigar2,\n                                            final boolean strand1, final boolean strand2,\n                                            final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n-                                           final String expectedR1Cigar, final String expectedR2Cigar, final boolean hardClipOverlappingReads,\n-                                           final String read1Bases, final String read2Bases, final String expectedR1Bases, final String expectedR2Bases,\n-                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases, final String read1Qualities,\n-                                           final String read2Qualities, final String expectedR1Qualities, final String expectedR2Qualities,\n+                                           final String expectedR1Cigar, final String expectedR2Cigar,\n+                                           final String read1Bases, final String read2Bases,\n+                                           final String expectedR1Bases, final String expectedR2Bases,\n+                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n+                                           final String read1Qualities, final String read2Qualities,\n+                                           final String expectedR1Qualities, final String expectedR2Qualities,\n                                            final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n \n         final SAMRecordSetBuilder set = new SAMRecordSetBuilder();\n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -406,18 +577,18 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n     @Test(dataProvider = \"overlapReadDataWithSwaps\")\n     public void testOverlappedReadClipping(\n-                                           final int readLength,final boolean hardClipOverlappingReads,\n-                                           final int start1, final int start2,\n-                                           final String cigar1, final String cigar2,\n-                                           final boolean strand1, final boolean strand2,\n-                                           final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n-                                           final String expectedR1Cigar, final String expectedR2Cigar,\n-                                           final String read1Bases, final String read2Bases,\n-                                           final String expectedR1Bases, final String expectedR2Bases,\n-                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n-                                           final String read1Qualities, final String read2Qualities,\n-                                           final String expectedR1Qualities, final String expectedR2Qualities,\n-                                           final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n+            final int readLength, final boolean hardClipOverlappingReads,\n+            final int start1, final int start2,\n+            final String cigar1, final String cigar2,\n+            final boolean strand1, final boolean strand2,\n+            final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n+            final String expectedR1Cigar, final String expectedR2Cigar,\n+            final String read1Bases, final String read2Bases,\n+            final String expectedR1Bases, final String expectedR2Bases,\n+            final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n+            final String read1Qualities, final String read2Qualities,\n+            final String expectedR1Qualities, final String expectedR2Qualities,\n+            final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n \n         final SAMRecordSetBuilder set = new SAMRecordSetBuilder();\n         set.setReadLength(readLength);\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MDU1NQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494590555", "body": "123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\r\nshould be\r\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789", "bodyText": "123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\nshould be\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789", "bodyHTML": "<p dir=\"auto\">123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789<br>\nshould be<br>\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789</p>", "author": "fleharty", "createdAt": "2020-09-24T20:27:01Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of one bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -317,19 +366,17 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n                 //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n-                //                        MMMMMMMMMMMMMMMMMiMMsssssss>\n-                //                                         /\\\n+                //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n+                //                                         ^^\n                 //         with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n-                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n+                //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n \n-                {27, 14, 18, \"7S20M\", \"17M1I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n-\n         };\n     }\n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -370,24 +375,48 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                                         ^^\n                 //         with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n \n-                {27, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n         };\n     }\n \n-    @Test(dataProvider = \"overlapReadData\")\n-    public void testOverlappedReadClipping(final int readLength, final int start1, final int start2, final String cigar1, final String cigar2,\n+    @DataProvider\n+    public Iterator<Object[]> overlapReadDataWithSwaps(){\n+        List<Object[]> tests = new LinkedList<>();\n+\n+        for (Object[] inputs : overlapReadData()) {\n+            tests.add(inputs);\n+            final Object[] swappedInputs = new Object[inputs.length];\n+            swappedInputs[0] = inputs[0]; //read length\n+            swappedInputs[1] = inputs[1]; // hard_clip\n+\n+            for (int i = 2; i < inputs.length; i += 2) {\n+                swappedInputs[i] = inputs[i + 1];\n+                swappedInputs[i + 1] = inputs[i];\n+            }\n+            tests.add(swappedInputs);\n+        }\n+        return tests.iterator();\n+    }\n+\n+    @Test(dataProvider = \"overlapReadDataWithSwaps\")\n+    public void testOverlappedReadClipping(\n+                                           final int readLength,final boolean hardClipOverlappingReads,\n+                                           final int start1, final int start2,\n+                                           final String cigar1, final String cigar2,\n                                            final boolean strand1, final boolean strand2,\n                                            final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n-                                           final String expectedR1Cigar, final String expectedR2Cigar, final boolean hardClipOverlappingReads,\n-                                           final String read1Bases, final String read2Bases, final String expectedR1Bases, final String expectedR2Bases,\n-                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases, final String read1Qualities,\n-                                           final String read2Qualities, final String expectedR1Qualities, final String expectedR2Qualities,\n+                                           final String expectedR1Cigar, final String expectedR2Cigar,\n+                                           final String read1Bases, final String read2Bases,\n+                                           final String expectedR1Bases, final String expectedR2Bases,\n+                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n+                                           final String read1Qualities, final String read2Qualities,\n+                                           final String expectedR1Qualities, final String expectedR2Qualities,\n                                            final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n \n         final SAMRecordSetBuilder set = new SAMRecordSetBuilder();\n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -406,18 +577,18 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n     @Test(dataProvider = \"overlapReadDataWithSwaps\")\n     public void testOverlappedReadClipping(\n-                                           final int readLength,final boolean hardClipOverlappingReads,\n-                                           final int start1, final int start2,\n-                                           final String cigar1, final String cigar2,\n-                                           final boolean strand1, final boolean strand2,\n-                                           final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n-                                           final String expectedR1Cigar, final String expectedR2Cigar,\n-                                           final String read1Bases, final String read2Bases,\n-                                           final String expectedR1Bases, final String expectedR2Bases,\n-                                           final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n-                                           final String read1Qualities, final String read2Qualities,\n-                                           final String expectedR1Qualities, final String expectedR2Qualities,\n-                                           final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n+            final int readLength, final boolean hardClipOverlappingReads,\n+            final int start1, final int start2,\n+            final String cigar1, final String cigar2,\n+            final boolean strand1, final boolean strand2,\n+            final int r1ExpectedAlignmentStart, final int r2ExpectedAlignmentStart,\n+            final String expectedR1Cigar, final String expectedR2Cigar,\n+            final String read1Bases, final String read2Bases,\n+            final String expectedR1Bases, final String expectedR2Bases,\n+            final String expectedR1ClippedBases, final String expectedR2ClippedBases,\n+            final String read1Qualities, final String read2Qualities,\n+            final String expectedR1Qualities, final String expectedR2Qualities,\n+            final String expectedR1ClippedQualities, final String expectedR2ClippedQualities) {\n \n         final SAMRecordSetBuilder set = new SAMRecordSetBuilder();\n         set.setReadLength(readLength);\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTAxNA==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494591014", "body": "123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\r\nshould be\r\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789", "bodyText": "123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\nshould be\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789", "bodyHTML": "<p dir=\"auto\">123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789<br>\nshould be<br>\n123456789.123456789.123456789.1234-56789.123456789.123456789.123456789.123456789</p>", "author": "fleharty", "createdAt": "2020-09-24T20:27:51Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -301,10 +350,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n \n-                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //       123456789.123456789.123456789.123-456789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n-                //                                        /\\\n+                //                                        ^\n                 //        with an insertion of one bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -360,7 +365,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n-                {27, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -359,12 +355,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n                 //                                        ^\n-                //        with an insertion of one bases here should become\n+                //        with an insertion of one base here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n                 {27, false, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n", "next_change": null}, {"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -373,26 +367,203 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n                 //                                         ^^\n-                //         with an insertion of one bases here should become\n+                //         with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSSssssss>\n-\n                 {27, false, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                //      <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                {27, true, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11H\", \"11H16M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 16), default27LongR2Bases.substring(11, 27),\n+                        default27LongR1Bases.substring(16, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 11)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 16), default27LongR2Qualities.substring(11, 27),\n+                        default27LongR1Qualities.substring(16, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 11)),\n+                },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                //      <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                {27, true, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11H\", \"11H16M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 16), default27LongR2Bases.substring(11, 27),\n+                        default27LongR1Bases.substring(16, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 11)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 16), default27LongR2Qualities.substring(11, 27),\n+                        default27LongR1Qualities.substring(16, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 11))\n+                },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12H15M\", \"15M12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12H15M\", \"15M12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMM---MMMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <HHHHHHHHHHHHMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMSHHHHHHHHHHHH>\n+                {27, true, 14, 18, \"8S19M\", \"14M3D4M9S\", true, false, 18, 18, \"12H15M\", \"14M1S12H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(12, 27), default27LongR2Bases.substring(0, 15),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 12)), default27LongR2Bases.substring(15, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(12, 27), default27LongR2Qualities.substring(0, 15),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 12)), default27LongR2Qualities.substring(15, 27)},\n+\n+\n+                // 123456789.123456789.123456789.12-3456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //      MMMMMMMMMMMMMMMMMMMMMMMMMMM-> ## deletion right at the end\n+                //          should remain\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //      MMMMMMMMMMMMMMMMMMMMMMMMMMM->  ## deletion right at the end\n+                {27, true, 14, 6, \"8S19M\", \"27M1D\", true, false, 14, 6, \"8S19M\", \"27M1D\",\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  ^^\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMHHHHHHHHHH>\n+                //                          <HHHHHHHHHHMMMMMMMMMMMMMMMMM\n+                {27, true, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10H\", \"10H17M\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(0, 17), default27LongR2Bases.substring(10, 27),\n+                        default27LongR1Bases.substring(17, 27), SequenceUtil.reverseComplement(default27LongR2Bases.substring(0, 10)),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(0, 17), default27LongR2Qualities.substring(10, 27),\n+                        default27LongR1Qualities.substring(17, 27), StringUtil.reverseString(default27LongR2Qualities.substring(0, 10))},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         ^^\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.123--456789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        ^^\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+                {27, true, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.123-456789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n+                //                                        ^\n+                //        with an insertion of one base here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMMssssss>\n+                //                                         ^^\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <HHHHHHHHHHHMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMHHHHHHHHHHH>\n+                {27, true, 14, 18, \"7S20M\", \"17M2I2M6S\", true, false, 18, 18, \"11H16M\", \"16M11H\",\n+                        default27LongR1Bases, default27LongR2Bases,\n+                        default27LongR1Bases.substring(11, 27), default27LongR2Bases.substring(0, 16),\n+                        SequenceUtil.reverseComplement(default27LongR1Bases.substring(0, 11)), default27LongR2Bases.substring(16, 27),\n+                        default27LongR1Qualities, default27LongR2Qualities,\n+                        default27LongR1Qualities.substring(11, 27), default27LongR2Qualities.substring(0, 16),\n+                        StringUtil.reverseString(default27LongR1Qualities.substring(0, 11)), default27LongR2Qualities.substring(16, 27)},\n         };\n     }\n \n     @DataProvider\n-    public Iterator<Object[]> overlapReadDataWithSwaps(){\n+    public Iterator<Object[]> overlapReadDataWithSwaps() {\n         List<Object[]> tests = new LinkedList<>();\n \n         for (Object[] inputs : overlapReadData()) {\n             tests.add(inputs);\n             final Object[] swappedInputs = new Object[inputs.length];\n-            swappedInputs[0] = inputs[0]; //read length\n+            swappedInputs[0] = inputs[0]; // read length\n             swappedInputs[1] = inputs[1]; // hard_clip\n \n             for (int i = 2; i < inputs.length; i += 2) {\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTc3OQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494591779", "body": "                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\r\nshould be\r\n                //            <sssssssSSSSMMMMMMMMMMMMMMMM\r\n", "bodyText": "//            <ssssssSSSSSMMMMMMMMMMMMMMMM\n\nshould be\n//            <sssssssSSSSMMMMMMMMMMMMMMMM", "bodyHTML": "<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            //            &lt;ssssssSSSSSMMMMMMMMMMMMMMMM\"><pre><code>            //            &lt;ssssssSSSSSMMMMMMMMMMMMMMMM\n</code></pre></div>\n<p dir=\"auto\">should be<br>\n//            &lt;sssssssSSSSMMMMMMMMMMMMMMMM</p>", "author": "fleharty", "createdAt": "2020-09-24T20:29:18Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n+\n+\n+                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n+                //                                        /\\\n+                //        with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -286,10 +335,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n \n-                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //       123456789.123456789.123456789.123--456789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiiMMsssssss>\n-                //                                        /\\\n+                //                                        ^^\n                 //        with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n", "next_change": {"commit": "091ae8c06009ffd903932bbade53ba6bc0e25959", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..5726d1826 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -341,7 +347,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                                        ^^\n                 //        with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 5726d1826..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -351,7 +350,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n-                {27, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -348,8 +346,6 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n                 {27, false, 14, 18, \"7S20M\", \"16M2I2M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n", "next_change": null}, {"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -359,12 +355,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMiMMMsssssss>\n                 //                                        ^\n-                //        with an insertion of one bases here should become\n+                //        with an insertion of one base here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n                 {27, false, 14, 18, \"7S20M\", \"16M1I3M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MjI1OQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r494592259", "body": "                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\r\nshould be\r\n                //            <sssssssSSSSMMMMMMMMMMMMMMMM", "bodyText": "//            <ssssssSSSSSMMMMMMMMMMMMMMMM\n\nshould be\n//            <sssssssSSSSMMMMMMMMMMMMMMMM", "bodyHTML": "<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            //            &lt;ssssssSSSSSMMMMMMMMMMMMMMMM\"><pre><code>            //            &lt;ssssssSSSSSMMMMMMMMMMMMMMMM\n</code></pre></div>\n<p dir=\"auto\">should be<br>\n//            &lt;sssssssSSSSMMMMMMMMMMMMMMMM</p>", "author": "fleharty", "createdAt": "2020-09-24T20:30:14Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -199,6 +200,136 @@\n                 {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss->\n+                //   <ssssssssMMM---MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss->\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 12, \"18M9S\", \"8S3M3D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM-MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M1D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssMMMMMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMM---MMMsssssssss>\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //     <ssssssssSSSSMMMMMMMMMMMMMMM\n+                //                  MMMMMMMMMMMMMMMSSSsssssssss>\n+\n+\n+                {27, 14, 18, \"8S19M\", \"15M3D3M9S\", true, false, 18, 18, \"12S15M\", \"15M12S\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+\n+                //                  123456789.123456--789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMMsssssssss>\n+                //                          <sssssMMiiMMMMMMMMMMMMMMMMMM\n+                //                                  /\\\n+                //   with an insertion of two bases here should become\n+                //                    123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                                     MMMMMMMMMMMMMMMMMssssssssss>\n+                //                          <sssssSSSSSMMMMMMMMMMMMMMMMM\n+\n+\n+                {27, 18, 15, \"18M9S\", \"5S2M2I18M\", false, true, 18, 18, \"17M10S\", \"10S17M\", false,\n+                        default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n+                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+\n+\n+                //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n+                //            <sssssssMMMMMMMMMMMMMMMMMMMM\n+                //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n+                //                                         /\\\n+                //         with an insertion of two bases here should become\n+                //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //            <ssssssSSSSSMMMMMMMMMMMMMMMM", "originalCommit": "cba7e24ba46eed6e57c6aef082910b887bb30356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 93a017d7e..cce2bf250 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -274,10 +323,10 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //       123456789.123456789.123456789.1234--56789.123456789.123456789.123456789.123456789\n                 //            <sssssssMMMMMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMMiiMsssssss>\n-                //                                         /\\\n+                //                                         ^^\n                 //         with an insertion of two bases here should become\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n-                //            <ssssssSSSSSMMMMMMMMMMMMMMMM\n+                //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n", "next_change": {"commit": "0173e89a693e5412a35ba9eafcaa915d07822aae", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex cce2bf250..9203c3670 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -330,7 +335,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n \n \n-                {27, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\", false,\n+                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n                         default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n \n", "next_change": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 9203c3670..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -333,11 +333,9 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n                 //       123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //            <sssssssSSSSMMMMMMMMMMMMMMMM\n                 //                        MMMMMMMMMMMMMMMMSSSSsssssss>\n-\n-\n-                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18,\"11S16M\",\"16M11S\",\n+                {27, false, 14, 18, \"7S20M\", \"17M2I1M7S\", true, false, 18, 18, \"11S16M\", \"16M11S\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n \n                 //       123456789.123456789.123456789.123--456789.123456789.123456789.123456789.123456789\n", "next_change": null}]}}]}}]}}, {"oid": "ba1cf02743400a78571e4d24d20ce20ca4789d3e", "url": "https://github.com/broadinstitute/picard/commit/ba1cf02743400a78571e4d24d20ce20ca4789d3e", "message": "- clarify some comments\n- more tests!", "committedDate": "2020-09-24T20:59:35Z", "type": "commit"}, {"oid": "5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "url": "https://github.com/broadinstitute/picard/commit/5fac6395c6cf8ffa2f8d06c3b0cc3f6253f194f4", "message": "-comment fixups", "committedDate": "2020-09-24T21:09:12Z", "type": "commit"}, {"oid": "ac9d9d976473be423d9b7ca022a7ae9bde179f93", "url": "https://github.com/broadinstitute/picard/commit/ac9d9d976473be423d9b7ca022a7ae9bde179f93", "message": "optimize imports", "committedDate": "2020-09-24T21:11:44Z", "type": "commit"}, {"oid": "091ae8c06009ffd903932bbade53ba6bc0e25959", "url": "https://github.com/broadinstitute/picard/commit/091ae8c06009ffd903932bbade53ba6bc0e25959", "message": "- fixup comments", "committedDate": "2020-09-24T21:15:14Z", "type": "commit"}, {"oid": "0173e89a693e5412a35ba9eafcaa915d07822aae", "url": "https://github.com/broadinstitute/picard/commit/0173e89a693e5412a35ba9eafcaa915d07822aae", "message": "- refactored test", "committedDate": "2020-09-25T19:31:19Z", "type": "commit"}, {"oid": "e43f3f760fb0717616025279726504af64b9fd0d", "url": "https://github.com/broadinstitute/picard/commit/e43f3f760fb0717616025279726504af64b9fd0d", "message": "- removed comment", "committedDate": "2020-09-25T19:57:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMzE3NQ==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r496233175", "body": "Could you add tests for the hardclipping case for these examples involving insertions and deletions as well?  Based on following the code and a simple test I tried out it seems to give an answer that I would considered \"correct\", but it gets there in a pretty unsafe round-about sort of way.  I suspect if it's not well tested the harclipping behavior in these cases could easily be unintentionally and unknowingly changed as a side effect of some future pr.", "bodyText": "Could you add tests for the hardclipping case for these examples involving insertions and deletions as well?  Based on following the code and a simple test I tried out it seems to give an answer that I would considered \"correct\", but it gets there in a pretty unsafe round-about sort of way.  I suspect if it's not well tested the harclipping behavior in these cases could easily be unintentionally and unknowingly changed as a side effect of some future pr.", "bodyHTML": "<p dir=\"auto\">Could you add tests for the hardclipping case for these examples involving insertions and deletions as well?  Based on following the code and a simple test I tried out it seems to give an answer that I would considered \"correct\", but it gets there in a pretty unsafe round-about sort of way.  I suspect if it's not well tested the harclipping behavior in these cases could easily be unintentionally and unknowingly changed as a side effect of some future pr.</p>", "author": "kachulis", "createdAt": "2020-09-28T21:07:42Z", "path": "src/test/java/picard/sam/AbstractAlignmentMergerTest.java", "diffHunk": "@@ -192,24 +228,198 @@\n \n                  */\n \n-                {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M18S\", \"22S88M\", false,\n+                {110, false, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M18S\", \"22S88M\",\n                         default110LongR1Bases, default110LongR2Bases, default110LongR1Bases, default110LongR2Bases, null, null,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, default110LongR1BaseQualities, default110LongR2BaseQualities, null, null},\n \n-                {110, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\", true,\n+                {110, true, 105, 96, \"12S80M18S\", \"13S97M\", false, true, 105, 105, \"12S80M8S10H\", \"10H12S88M\",\n                         default110LongR1Bases, default110LongR2Bases, sharedBases, sharedBases, default110LongR1ClippedBases, default110LongR2ClippedBases,\n                         default110LongR1BaseQualities, default110LongR2BaseQualities, sharedQualities, sharedQualities, r1ClippedQualities10, r2ClippedQualities10},\n+\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMMMsssssssss>\n+                //     <ssssssssMMM-MMMMMMMMMMMMMMMM\n+                //          should become\n+                // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n+                //                  MMMMMMMMMMMMMMMMSSsssssssss>\n+                //      <ssssssssSSSMMMMMMMMMMMMMMMM\n+\n+\n+                {27, false, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",", "originalCommit": "e43f3f760fb0717616025279726504af64b9fd0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2MDEwMw==", "url": "https://github.com/broadinstitute/picard/pull/1581#discussion_r496960103", "bodyText": "added.", "author": "yfarjoun", "createdAt": "2020-09-29T18:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzMzE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "changed_code": [{"header": "diff --git a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\nindex 5c764ddf8..0bd17a4eb 100644\n--- a/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n+++ b/src/test/java/picard/sam/AbstractAlignmentMergerTest.java\n", "chunk": "@@ -247,7 +247,7 @@ public class AbstractAlignmentMergerTest extends CommandLineProgramTest {\n \n                 {27, false, 18, 14, \"18M9S\", \"8S3M1D16M\", false, true, 18, 18, \"16M11S\", \"11S16M\",\n                         default27LongR1Bases, default27LongR2Bases, default27LongR1Bases, default27LongR2Bases, null, null,\n-                        default27LongR1Qualities, default27LongR2Qualities,default27LongR1Qualities, default27LongR2Qualities , null,null },\n+                        default27LongR1Qualities, default27LongR2Qualities, default27LongR1Qualities, default27LongR2Qualities, null, null},\n \n                 // 123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789\n                 //                  MMMMMMMMMMMMMMMMMMsssssssss>\n", "next_change": null}]}}, {"oid": "a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "url": "https://github.com/broadinstitute/picard/commit/a61000a5b0ab4bc6aea3aaf2c957d6094cac80fa", "message": "- added MOAR tests", "committedDate": "2020-09-29T18:43:01Z", "type": "commit"}, {"oid": "c355bd227a7941a82a5ccdc31c3d8a3bc8b5e74e", "url": "https://github.com/broadinstitute/picard/commit/c355bd227a7941a82a5ccdc31c3d8a3bc8b5e74e", "message": "Merge branch 'master' into yf_add_MBA_test", "committedDate": "2020-09-29T20:56:46Z", "type": "commit"}]}