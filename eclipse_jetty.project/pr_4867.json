{"pr_number": 4867, "pr_title": "Issue #4861 - reduce garbage created by the async request attributes", "pr_author": "lachlan-roberts", "pr_createdAt": "2020-05-12T08:41:15Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4867", "timeline": [{"oid": "9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "url": "https://github.com/eclipse/jetty.project/commit/9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "message": "Issue #4861 - reduce garbage created by the async request attributes\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-12T08:28:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzMjEwNw==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r423632107", "body": "I don't like all the dereferences here.   We end up with `ServletAttributes->AsyncAttributes->AttributesMap`, so 3 object and 3 dereferences.\r\nI think it would be much better to do (also note the name change):\r\n```suggestion\r\npublic class AsyncAttributesMap extends AttributesMap\r\n{\r\n    public AsyncAttributesMap()\r\n    {\r\n    }\r\n```\r\nThe override the methods as follows:\r\n```java\r\n    @Override\r\n\ufffc    public Object getAttribute(String name)\r\n\ufffc    {\r\n        // do the AsyncAttribute handling here\r\n        // else\r\n        return super.getAttribute(name);\r\n    }\r\n```\r\n\r\nThen you don't need AsyncAttributes class.", "bodyText": "I don't like all the dereferences here.   We end up with ServletAttributes->AsyncAttributes->AttributesMap, so 3 object and 3 dereferences.\nI think it would be much better to do (also note the name change):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ServletAttributes implements Attributes\n          \n          \n            \n            {\n          \n          \n            \n                private final Attributes _attributes;\n          \n          \n            \n            \n          \n          \n            \n                public ServletAttributes()\n          \n          \n            \n                {\n          \n          \n            \n                    _attributes = new AsyncAttributes(new AttributesMap());\n          \n          \n            \n                }\n          \n          \n            \n            public class AsyncAttributesMap extends AttributesMap\n          \n          \n            \n            {\n          \n          \n            \n                public AsyncAttributesMap()\n          \n          \n            \n                {\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nThe override the methods as follows:\n    @Override\n\ufffc    public Object getAttribute(String name)\n\ufffc    {\n        // do the AsyncAttribute handling here\n        // else\n        return super.getAttribute(name);\n    }\nThen you don't need AsyncAttributes class.", "bodyHTML": "<p dir=\"auto\">I don't like all the dereferences here.   We end up with <code>ServletAttributes-&gt;AsyncAttributes-&gt;AttributesMap</code>, so 3 object and 3 dereferences.<br>\nI think it would be much better to do (also note the name change):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ServletAttributes</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">Attributes</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Attributes</span> _attributes;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"43\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> ServletAttributes()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"44\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"45\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        _attributes <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AsyncAttributes</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">AttributesMap</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">AsyncAttributesMap</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">AttributesMap</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> AsyncAttributesMap()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"43\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">The override the methods as follows:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Override\n\ufffc    public Object getAttribute(String name)\n\ufffc    {\n        // do the AsyncAttribute handling here\n        // else\n        return super.getAttribute(name);\n    }\"><pre>    <span class=\"pl-k\">@Override</span>\n\ufffc    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> getAttribute(<span class=\"pl-smi\">String</span> name)\n\ufffc    {\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> do the AsyncAttribute handling here</span>\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> else</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>getAttribute(name);\n    }</pre></div>\n<p dir=\"auto\">Then you don't need AsyncAttributes class.</p>", "author": "gregw", "createdAt": "2020-05-12T10:34:04Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ServletAttributes.java", "diffHunk": "@@ -0,0 +1,64 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.server;\n+\n+import java.util.Set;\n+\n+import org.eclipse.jetty.util.Attributes;\n+import org.eclipse.jetty.util.AttributesMap;\n+\n+public class ServletAttributes implements Attributes\n+{\n+    private final Attributes _attributes;\n+\n+    public ServletAttributes()\n+    {\n+        _attributes = new AsyncAttributes(new AttributesMap());\n+    }", "originalCommit": "9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzMjczNw==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r423632737", "body": "Don't create a wrapper for this, just implement directly in `ServletAttributes`. See below:", "bodyText": "Don't create a wrapper for this, just implement directly in ServletAttributes. See below:", "bodyHTML": "<p dir=\"auto\">Don't create a wrapper for this, just implement directly in <code>ServletAttributes</code>. See below:</p>", "author": "gregw", "createdAt": "2020-05-12T10:35:16Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncAttributes.java", "diffHunk": "@@ -0,0 +1,130 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.server;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.servlet.AsyncContext;\n+\n+import org.eclipse.jetty.util.Attributes;\n+\n+class AsyncAttributes extends Attributes.Wrapper", "originalCommit": "9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODE5MA==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r423638190", "body": "Currently when we create `AsyncContextEvent` it does:\r\n```java\r\n                baseRequest.setAttribute(AsyncContext.ASYNC_REQUEST_URI, baseRequest.getRequestURI());\r\n                baseRequest.setAttribute(AsyncContext.ASYNC_CONTEXT_PATH, baseRequest.getContextPath());\r\n                baseRequest.setAttribute(AsyncContext.ASYNC_SERVLET_PATH, baseRequest.getServletPath());\r\n                baseRequest.setAttribute(AsyncContext.ASYNC_PATH_INFO, baseRequest.getPathInfo());\r\n                baseRequest.setAttribute(AsyncContext.ASYNC_QUERY_STRING, baseRequest.getQueryString());\r\n```\r\nSo that's 5 (6 in jetty-10) `startWith` and string switches.    It would be good to be able set these in bulk.\r\nSo either the `AsyncContextEvent` can unwrap and downcast until it gets the `AsyncAttributesMap` and directly sets these fields... or have a synthentic set-only attribute called \"org.eclipse.jetty.servlet.AsyncContextEvent.request\" and pass it the request object.  This class then can extract all 5 (eventually 6) fields directly from the request. Ditto for the forwarded path with another synth attribute.\r\n", "bodyText": "Currently when we create AsyncContextEvent it does:\n                baseRequest.setAttribute(AsyncContext.ASYNC_REQUEST_URI, baseRequest.getRequestURI());\n                baseRequest.setAttribute(AsyncContext.ASYNC_CONTEXT_PATH, baseRequest.getContextPath());\n                baseRequest.setAttribute(AsyncContext.ASYNC_SERVLET_PATH, baseRequest.getServletPath());\n                baseRequest.setAttribute(AsyncContext.ASYNC_PATH_INFO, baseRequest.getPathInfo());\n                baseRequest.setAttribute(AsyncContext.ASYNC_QUERY_STRING, baseRequest.getQueryString());\nSo that's 5 (6 in jetty-10) startWith and string switches.    It would be good to be able set these in bulk.\nSo either the AsyncContextEvent can unwrap and downcast until it gets the AsyncAttributesMap and directly sets these fields... or have a synthentic set-only attribute called \"org.eclipse.jetty.servlet.AsyncContextEvent.request\" and pass it the request object.  This class then can extract all 5 (eventually 6) fields directly from the request. Ditto for the forwarded path with another synth attribute.", "bodyHTML": "<p dir=\"auto\">Currently when we create <code>AsyncContextEvent</code> it does:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                baseRequest.setAttribute(AsyncContext.ASYNC_REQUEST_URI, baseRequest.getRequestURI());\n                baseRequest.setAttribute(AsyncContext.ASYNC_CONTEXT_PATH, baseRequest.getContextPath());\n                baseRequest.setAttribute(AsyncContext.ASYNC_SERVLET_PATH, baseRequest.getServletPath());\n                baseRequest.setAttribute(AsyncContext.ASYNC_PATH_INFO, baseRequest.getPathInfo());\n                baseRequest.setAttribute(AsyncContext.ASYNC_QUERY_STRING, baseRequest.getQueryString());\n\"><pre>                baseRequest<span class=\"pl-k\">.</span>setAttribute(<span class=\"pl-smi\">AsyncContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ASYNC_REQUEST_URI</span>, baseRequest<span class=\"pl-k\">.</span>getRequestURI());\n                baseRequest<span class=\"pl-k\">.</span>setAttribute(<span class=\"pl-smi\">AsyncContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ASYNC_CONTEXT_PATH</span>, baseRequest<span class=\"pl-k\">.</span>getContextPath());\n                baseRequest<span class=\"pl-k\">.</span>setAttribute(<span class=\"pl-smi\">AsyncContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ASYNC_SERVLET_PATH</span>, baseRequest<span class=\"pl-k\">.</span>getServletPath());\n                baseRequest<span class=\"pl-k\">.</span>setAttribute(<span class=\"pl-smi\">AsyncContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ASYNC_PATH_INFO</span>, baseRequest<span class=\"pl-k\">.</span>getPathInfo());\n                baseRequest<span class=\"pl-k\">.</span>setAttribute(<span class=\"pl-smi\">AsyncContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ASYNC_QUERY_STRING</span>, baseRequest<span class=\"pl-k\">.</span>getQueryString());</pre></div>\n<p dir=\"auto\">So that's 5 (6 in jetty-10) <code>startWith</code> and string switches.    It would be good to be able set these in bulk.<br>\nSo either the <code>AsyncContextEvent</code> can unwrap and downcast until it gets the <code>AsyncAttributesMap</code> and directly sets these fields... or have a synthentic set-only attribute called \"org.eclipse.jetty.servlet.AsyncContextEvent.request\" and pass it the request object.  This class then can extract all 5 (eventually 6) fields directly from the request. Ditto for the forwarded path with another synth attribute.</p>", "author": "gregw", "createdAt": "2020-05-12T10:45:25Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/AsyncAttributes.java", "diffHunk": "@@ -0,0 +1,130 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.server;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.servlet.AsyncContext;\n+\n+import org.eclipse.jetty.util.Attributes;\n+\n+class AsyncAttributes extends Attributes.Wrapper\n+{\n+    /**\n+     * Async dispatch attribute name prefix.\n+     */\n+    public static final String __ASYNC_PREFIX = \"javax.servlet.async.\";\n+\n+    private String _requestURI;\n+    private String _contextPath;\n+    private String _servletPath;\n+    private String _pathInfo;\n+    private String _query;\n+\n+    AsyncAttributes(Attributes attributes)\n+    {\n+        super(attributes);\n+    }\n+\n+    @Override\n+    public Object getAttribute(String key)\n+    {\n+        if (!key.startsWith(__ASYNC_PREFIX))\n+            return super.getAttribute(key);\n+\n+        switch (key)\n+        {\n+            case AsyncContext.ASYNC_REQUEST_URI:\n+                return _requestURI;\n+            case AsyncContext.ASYNC_CONTEXT_PATH:\n+                return _contextPath;\n+            case AsyncContext.ASYNC_SERVLET_PATH:\n+                return _servletPath;\n+            case AsyncContext.ASYNC_PATH_INFO:\n+                return _pathInfo;\n+            case AsyncContext.ASYNC_QUERY_STRING:\n+                return _query;\n+            default:\n+                return super.getAttribute(key);\n+        }\n+    }\n+\n+    @Override\n+    public Set<String> getAttributeNameSet()\n+    {\n+        HashSet<String> set = new HashSet<>();\n+        for (String name : _attributes.getAttributeNameSet())\n+        {\n+            if (!name.startsWith(__ASYNC_PREFIX))\n+                set.add(name);\n+        }\n+\n+        if (_requestURI != null)\n+            set.add(AsyncContext.ASYNC_REQUEST_URI);\n+        if (_contextPath != null)\n+            set.add(AsyncContext.ASYNC_CONTEXT_PATH);\n+        if (_servletPath != null)\n+            set.add(AsyncContext.ASYNC_SERVLET_PATH);\n+        if (_pathInfo != null)\n+            set.add(AsyncContext.ASYNC_PATH_INFO);\n+        if (_query != null)\n+            set.add(AsyncContext.ASYNC_QUERY_STRING);\n+\n+        return set;\n+    }\n+\n+    @Override\n+    public void setAttribute(String key, Object value)", "originalCommit": "9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0ODI2Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r423648262", "body": "Ah we can't make this final because of possible wrappers that don't unwrap.\r\nSo go back to lazy creation of this field......  OR have 2 fields:\r\n```suggestion\r\n    private final AsyncAttributesMap _asyncAttributes = new AsyncAttributesMap();\r\n    private Attributes _attributes = _asyncAttributes;\r\n```\r\n\r\nThis way, async could as the request directly for the `_asyncAttributes` and set the fields on it.... but we'd still create an extra class with 6 fields even if we never use attributes.... hmmmm @lorban your thoughts on which is best?", "bodyText": "Ah we can't make this final because of possible wrappers that don't unwrap.\nSo go back to lazy creation of this field......  OR have 2 fields:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Attributes _attributes = new ServletAttributes();\n          \n          \n            \n                private final AsyncAttributesMap _asyncAttributes = new AsyncAttributesMap();\n          \n          \n            \n                private Attributes _attributes = _asyncAttributes;\n          \n      \n    \n    \n  \n\nThis way, async could as the request directly for the _asyncAttributes and set the fields on it.... but we'd still create an extra class with 6 fields even if we never use attributes.... hmmmm @lorban your thoughts on which is best?", "bodyHTML": "<p dir=\"auto\">Ah we can't make this final because of possible wrappers that don't unwrap.<br>\nSo go back to lazy creation of this field......  OR have 2 fields:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first\">Attributes</span><span class=\"x x-last\"> _attributes </span><span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">ServletAttributes</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">AsyncAttributesMap</span><span class=\"x x-last\"> _asyncAttributes </span><span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">AsyncAttributesMap</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Attributes</span> _attributes <span class=\"pl-k\">=</span> _asyncAttributes;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This way, async could as the request directly for the <code>_asyncAttributes</code> and set the fields on it.... but we'd still create an extra class with 6 fields even if we never use attributes.... hmmmm <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/lorban/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lorban\">@lorban</a> your thoughts on which is best?</p>", "author": "gregw", "createdAt": "2020-05-12T11:05:01Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -199,7 +200,7 @@ public static Request getBaseRequest(ServletRequest request)\n     private boolean _handled = false;\n     private boolean _contentParamsExtracted;\n     private boolean _requestedSessionIdFromCookie = false;\n-    private Attributes _attributes;\n+    private Attributes _attributes = new ServletAttributes();", "originalCommit": "9f39fd1dd1b12415b636f0421c8f1715a8283a9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MDE1MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r423780151", "bodyText": "I would leave the _attributes field non-final, this is the simplest way to go.\nAny sort of cleanup seem to require a non-negligible amount of refactoring, so I'd keep #4861 open until the code is cleaned up. Regarding perf, this small change has 99% of the benefits of a larger refactoring.", "author": "lorban", "createdAt": "2020-05-12T14:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0ODI2Mg=="}], "type": "inlineReview"}, {"oid": "629e106045a7ea357c229d83ba18ff196dc434b1", "url": "https://github.com/eclipse/jetty.project/commit/629e106045a7ea357c229d83ba18ff196dc434b1", "message": "Issue #4861 - increase efficiency of ServletAttributes when going async\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-13T09:10:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MDMxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r424370315", "body": "just reset to null", "bodyText": "just reset to null", "bodyHTML": "<p dir=\"auto\">just reset to null</p>", "author": "gregw", "createdAt": "2020-05-13T11:39:19Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/Request.java", "diffHunk": "@@ -1868,13 +1868,10 @@ protected void recycle()\n         _asyncNotSupportedSource = null;\n         _handled = false;\n         _attributes = Attributes.unwrap(_attributes);\n-        if (_attributes != null)\n-        {\n-            if (AttributesMap.class.equals(_attributes.getClass()))\n-                _attributes.clearAttributes();\n-            else\n-                _attributes = null;\n-        }\n+        if (ServletAttributes.class.equals(_attributes.getClass()))\n+            _attributes.clearAttributes();\n+        else\n+            _attributes = new ServletAttributes();", "originalCommit": "629e106045a7ea357c229d83ba18ff196dc434b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MjcwNg==", "url": "https://github.com/eclipse/jetty.project/pull/4867#discussion_r424372706", "body": "I think it is clearer as:\r\n\r\n```suggestion\r\n        (_asyncAttributes == null ? _asyncAttributes : _attributes).removeAttribute(name);\r\n```\r\n\r\nor maybe even with a private method:\r\n```java\r\n    attributes().removeAttribute(name);\r\n```\r\nsame for other methods below.\r\n", "bodyText": "I think it is clearer as:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (_asyncAttributes == null)\n          \n          \n            \n                        _attributes.removeAttribute(name);\n          \n          \n            \n                    else\n          \n          \n            \n                        _asyncAttributes.removeAttribute(name);\n          \n          \n            \n                    (_asyncAttributes == null ? _asyncAttributes : _attributes).removeAttribute(name);\n          \n      \n    \n    \n  \n\nor maybe even with a private method:\n    attributes().removeAttribute(name);\nsame for other methods below.", "bodyHTML": "<p dir=\"auto\">I think it is clearer as:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (_asyncAttributes <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            _attributes<span class=\"pl-k\">.</span>removeAttribute(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">else</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            _asyncAttributes<span class=\"pl-k\">.</span>removeAttribute(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        (_asyncAttributes <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">?</span> _asyncAttributes <span class=\"pl-k\">:</span> _attributes)<span class=\"pl-k\">.</span>removeAttribute(name);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">or maybe even with a private method:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    attributes().removeAttribute(name);\"><pre>    attributes()<span class=\"pl-k\">.</span>removeAttribute(name);</pre></div>\n<p dir=\"auto\">same for other methods below.</p>", "author": "gregw", "createdAt": "2020-05-13T11:44:06Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/ServletAttributes.java", "diffHunk": "@@ -0,0 +1,83 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.server;\n+\n+import java.util.Set;\n+\n+import org.eclipse.jetty.util.Attributes;\n+import org.eclipse.jetty.util.AttributesMap;\n+\n+public class ServletAttributes implements Attributes\n+{\n+    private final Attributes _attributes = new AttributesMap();\n+    private AsyncAttributes _asyncAttributes;\n+\n+    public void setAsyncAttributes(AsyncAttributes attributes)\n+    {\n+        _asyncAttributes = attributes;\n+    }\n+\n+    @Override\n+    public void removeAttribute(String name)\n+    {\n+        if (_asyncAttributes == null)\n+            _attributes.removeAttribute(name);\n+        else\n+            _asyncAttributes.removeAttribute(name);", "originalCommit": "629e106045a7ea357c229d83ba18ff196dc434b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4aece5e9cfd8b461d0e13ea243cadc63947e35e7", "url": "https://github.com/eclipse/jetty.project/commit/4aece5e9cfd8b461d0e13ea243cadc63947e35e7", "message": "Issue #4861 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-13T13:12:22Z", "type": "commit"}, {"oid": "7111f5f1617bbdb1f4f0a25aad016873108cfa06", "url": "https://github.com/eclipse/jetty.project/commit/7111f5f1617bbdb1f4f0a25aad016873108cfa06", "message": "Issue #4861 - AsyncAttributes should wrap ServletAttributes inner AttributesMap\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-13T22:33:31Z", "type": "commit"}]}