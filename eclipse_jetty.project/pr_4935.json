{"pr_number": 4935, "pr_title": "#4877 fix PathSpec long-standing bugs and shortcomings", "pr_author": "lorban", "pr_createdAt": "2020-06-03T12:23:31Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4935", "timeline": [{"oid": "a0179dfd57f204c27639958e60b07e1ba788e727", "url": "https://github.com/eclipse/jetty.project/commit/a0179dfd57f204c27639958e60b07e1ba788e727", "message": "#4877 fix PathSpec long-standing bugs and shortcomings\n\nSigned-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T12:26:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzMzA4MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4935#discussion_r434533081", "body": "This code is duplicated 3 times, why don't we have a simple base class like `AbstractPathSpec`, which could implement this and also maybe `compareTo` and `toString`, and then we could reduce the code duplication.\r\n\r\nI made some similar changes like this in my branch at `jetty-9.4.x-4877-PathSpecEquals` if you want to take a look\r\nhttps://github.com/eclipse/jetty.project/blob/c6a40782571a08ae2410c165bfc58da5976432c8/jetty-http/src/main/java/org/eclipse/jetty/http/pathmap/AbstractPathSpec.java#L23-L60", "bodyText": "This code is duplicated 3 times, why don't we have a simple base class like AbstractPathSpec, which could implement this and also maybe compareTo and toString, and then we could reduce the code duplication.\nI made some similar changes like this in my branch at jetty-9.4.x-4877-PathSpecEquals if you want to take a look\n\n  \n    \n      jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/pathmap/AbstractPathSpec.java\n    \n    \n        Lines 23 to 60\n      in\n      c6a4078\n    \n    \n    \n    \n\n        \n          \n           public abstract class AbstractPathSpec implements PathSpec \n        \n\n        \n          \n           { \n        \n\n        \n          \n               @Override \n        \n\n        \n          \n               public int compareTo(PathSpec other) \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   // Grouping (increasing) \n        \n\n        \n          \n                   int diff = getGroup().ordinal() - other.getGroup().ordinal(); \n        \n\n        \n          \n                   if (diff != 0) \n        \n\n        \n          \n                       return diff; \n        \n\n        \n          \n            \n        \n\n        \n          \n                   // Spec Length (decreasing) \n        \n\n        \n          \n                   diff = other.getSpecLength() - getSpecLength(); \n        \n\n        \n          \n                   if (diff != 0) \n        \n\n        \n          \n                       return diff; \n        \n\n        \n          \n            \n        \n\n        \n          \n                   // Path Spec Name (alphabetical) \n        \n\n        \n          \n                   return getDeclaration().compareTo(other.getDeclaration()); \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               @Override \n        \n\n        \n          \n               public boolean equals(Object obj) \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   if (this == obj) \n        \n\n        \n          \n                       return true; \n        \n\n        \n          \n                   if (obj == null) \n        \n\n        \n          \n                       return false; \n        \n\n        \n          \n                   if (getClass() != obj.getClass()) \n        \n\n        \n          \n                       return false; \n        \n\n        \n          \n            \n        \n\n        \n          \n                   return Objects.equals(getDeclaration(), ((PathSpec)obj).getDeclaration()); \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               @Override \n        \n\n        \n          \n               public String toString() \n        \n\n        \n          \n               { \n        \n\n        \n          \n                   return String.format(\"%s@%s{%s}\", getClass().getSimpleName(), Integer.toHexString(hashCode()), getDeclaration()); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "bodyHTML": "<p dir=\"auto\">This code is duplicated 3 times, why don't we have a simple base class like <code>AbstractPathSpec</code>, which could implement this and also maybe <code>compareTo</code> and <code>toString</code>, and then we could reduce the code duplication.</p>\n<p dir=\"auto\">I made some similar changes like this in my branch at <code>jetty-9.4.x-4877-PathSpecEquals</code> if you want to take a look<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/eclipse/jetty.project/blob/c6a40782571a08ae2410c165bfc58da5976432c8/jetty-http/src/main/java/org/eclipse/jetty/http/pathmap/AbstractPathSpec.java#L23-L60\">jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/pathmap/AbstractPathSpec.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 23 to 60\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/eclipse/jetty.project/commit/c6a40782571a08ae2410c165bfc58da5976432c8\">c6a4078</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L23\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"23\"></td>\n          <td id=\"LC23\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">AbstractPathSpec</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">PathSpec</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L24\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"24\"></td>\n          <td id=\"LC24\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L25\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"25\"></td>\n          <td id=\"LC25\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">@Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L26\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"26\"></td>\n          <td id=\"LC26\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">public</span> <span class=\"pl-k\">int</span> <span class=\"pl-en\">compareTo</span>(<span class=\"pl-smi\">PathSpec</span> <span class=\"pl-v\">other</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L27\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"27\"></td>\n          <td id=\"LC27\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L28\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"28\"></td>\n          <td id=\"LC28\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">//</span> Grouping (increasing)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L29\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"29\"></td>\n          <td id=\"LC29\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">int</span> diff <span class=\"pl-k\">=</span> getGroup()<span class=\"pl-k\">.</span>ordinal() <span class=\"pl-k\">-</span> other<span class=\"pl-k\">.</span>getGroup()<span class=\"pl-k\">.</span>ordinal(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L30\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"30\"></td>\n          <td id=\"LC30\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (diff <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L31\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"31\"></td>\n          <td id=\"LC31\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> diff; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L32\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"32\"></td>\n          <td id=\"LC32\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L33\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"33\"></td>\n          <td id=\"LC33\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">//</span> Spec Length (decreasing)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L34\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"34\"></td>\n          <td id=\"LC34\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         diff <span class=\"pl-k\">=</span> other<span class=\"pl-k\">.</span>getSpecLength() <span class=\"pl-k\">-</span> getSpecLength(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L35\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"35\"></td>\n          <td id=\"LC35\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (diff <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L36\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"36\"></td>\n          <td id=\"LC36\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> diff; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L37\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"37\"></td>\n          <td id=\"LC37\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L38\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"38\"></td>\n          <td id=\"LC38\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">//</span> Path Spec Name (alphabetical)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L39\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"39\"></td>\n          <td id=\"LC39\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> getDeclaration()<span class=\"pl-k\">.</span>compareTo(other<span class=\"pl-k\">.</span>getDeclaration()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L40\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"40\"></td>\n          <td id=\"LC40\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L41\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"41\"></td>\n          <td id=\"LC41\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">@Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"pl-en\">equals</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-v\">obj</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L44\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"44\"></td>\n          <td id=\"LC44\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">this</span> <span class=\"pl-k\">==</span> obj) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (obj <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (getClass() <span class=\"pl-k\">!=</span> obj<span class=\"pl-k\">.</span>getClass()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(getDeclaration(), ((<span class=\"pl-smi\">PathSpec</span>)obj)<span class=\"pl-k\">.</span>getDeclaration()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">@Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"pl-en\">toString</span>() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%s@%s{%s}<span class=\"pl-pds\">\"</span></span>, getClass()<span class=\"pl-k\">.</span>getSimpleName(), <span class=\"pl-smi\">Integer</span><span class=\"pl-k\">.</span>toHexString(hashCode()), getDeclaration()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "lachlan-roberts", "createdAt": "2020-06-03T12:36:13Z", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/pathmap/RegexPathSpec.java", "diffHunk": "@@ -193,4 +194,21 @@ public boolean matches(final String path)\n             return getMatcher(path).matches();\n         }\n     }\n+\n+    @Override\n+    public boolean equals(Object o)", "originalCommit": "a0179dfd57f204c27639958e60b07e1ba788e727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzNDQyNg==", "url": "https://github.com/eclipse/jetty.project/pull/4935#discussion_r434534426", "bodyText": "@lachlan-roberts because I asked him to make all the fields final. Hard to do the abstract and the final fields without more complication.", "author": "gregw", "createdAt": "2020-06-03T12:38:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzMzA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzNTY1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4935#discussion_r434535656", "bodyText": "@gregw Take a look at the file I linked, it doesn't prevent having any final fields in the implementations of the abstract class.", "author": "lachlan-roberts", "createdAt": "2020-06-03T12:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzMzA4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzODc1MA==", "url": "https://github.com/eclipse/jetty.project/pull/4935#discussion_r434538750", "bodyText": "I like the idea of this abstract class that provides implementations for toString, equals, hashcode and compareTo, especially if I can get rid of the  PathSpec.compareTo default implementation. But I'd make equals and hashcode final then to make sure compareTo and equals always agree. See my comment for context.", "author": "lorban", "createdAt": "2020-06-03T12:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzMzA4MQ=="}], "type": "inlineReview"}, {"oid": "43cd401ba2b35f9bfd83461188b6dfc2b3a4d994", "url": "https://github.com/eclipse/jetty.project/commit/43cd401ba2b35f9bfd83461188b6dfc2b3a4d994", "message": "Signed-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T13:46:11Z", "type": "forcePushed"}, {"oid": "6c62157865f124c83c5b8e7278af8acf140883f2", "url": "https://github.com/eclipse/jetty.project/commit/6c62157865f124c83c5b8e7278af8acf140883f2", "message": "Signed-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T14:30:26Z", "type": "commit"}, {"oid": "7d7f56ab7991c788c08bedf6e487ac6485436b3e", "url": "https://github.com/eclipse/jetty.project/commit/7d7f56ab7991c788c08bedf6e487ac6485436b3e", "message": "Signed-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T14:30:26Z", "type": "forcePushed"}, {"oid": "e43c98f08d8f711a0f24b8c022133fb0a205c4d4", "url": "https://github.com/eclipse/jetty.project/commit/e43c98f08d8f711a0f24b8c022133fb0a205c4d4", "message": "Signed-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T15:58:01Z", "type": "commit"}, {"oid": "e43c98f08d8f711a0f24b8c022133fb0a205c4d4", "url": "https://github.com/eclipse/jetty.project/commit/e43c98f08d8f711a0f24b8c022133fb0a205c4d4", "message": "Signed-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-06-03T15:58:01Z", "type": "forcePushed"}]}