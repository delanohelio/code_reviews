{"pr_number": 5125, "pr_title": "Issue #5122 - Improve connection statistics for WebSocket", "pr_author": "lachlan-roberts", "pr_createdAt": "2020-08-06T11:19:41Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5125", "timeline": [{"oid": "be429f0910385b1c3b753549027d101377fa1afd", "url": "https://github.com/eclipse/jetty.project/commit/be429f0910385b1c3b753549027d101377fa1afd", "message": "Issue #5122 - add specialized Connection.Listener for WebSocket ConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-06T10:38:02Z", "type": "commit"}, {"oid": "8a3ff775d5bc285e066e5638623970496f32022d", "url": "https://github.com/eclipse/jetty.project/commit/8a3ff775d5bc285e066e5638623970496f32022d", "message": "Issue #5122 - make number of active WS Sessions a managed attribute on SessionTracker\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-06T10:45:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1OTU1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r468459556", "body": "I think this could be generalised as we now probably need the same thing for HTTP stats maybe HTTP2 stats etc.\r\n\r\nSo perhaps put a protected method into ConnectionStatistics that asks if a connection should be included.... perhaps with the default implementation checking in IncludeExcludeSet of classes?\r\n", "bodyText": "I think this could be generalised as we now probably need the same thing for HTTP stats maybe HTTP2 stats etc.\nSo perhaps put a protected method into ConnectionStatistics that asks if a connection should be included.... perhaps with the default implementation checking in IncludeExcludeSet of classes?", "bodyHTML": "<p dir=\"auto\">I think this could be generalised as we now probably need the same thing for HTTP stats maybe HTTP2 stats etc.</p>\n<p dir=\"auto\">So perhaps put a protected method into ConnectionStatistics that asks if a connection should be included.... perhaps with the default implementation checking in IncludeExcludeSet of classes?</p>", "author": "gregw", "createdAt": "2020-08-11T09:48:06Z", "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/util/WebSocketConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,40 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.websocket.common.util;\n+\n+import org.eclipse.jetty.io.Connection;\n+import org.eclipse.jetty.io.ConnectionStatistics;\n+import org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection;\n+\n+public class WebSocketConnectionStatistics extends ConnectionStatistics", "originalCommit": "8a3ff775d5bc285e066e5638623970496f32022d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2MDc0OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r468460749", "bodyText": "Hmm perhaps keep the base class the same for efficiency, but have an IncludeExclude version derived", "author": "gregw", "createdAt": "2020-08-11T09:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1OTU1Ng=="}], "type": "inlineReview"}, {"oid": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "url": "https://github.com/eclipse/jetty.project/commit/1663a6d7af9d85390fef6deb6d15cd7bce30263e", "message": "Issue #5125 - Generalise WebSocketConnectionStatistics into IncludeExcludeConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-14T05:19:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMzQzOQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471333439", "body": "You don't need tristate logic here, just use:\r\n```suggestion\r\n        if (_set.test(connection))\r\n```", "bodyText": "You don't need tristate logic here, just use:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n          \n          \n            \n                    if (_set.test(connection))", "bodyHTML": "<p dir=\"auto\">You don't need tristate logic here, just use:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi x x-first\">Boolean</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">TRUE</span></span><span class=\"pl-k x\">.</span><span class=\"x x-last\">equals(</span>_set<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isIncludedAndNotExcluded</span>(connection<span class=\"x x-first x-last\">)</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (_set<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">test</span>(connection))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gregw", "createdAt": "2020-08-17T08:48:44Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMzYyMw==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471333623", "body": "ditto\r\n", "bodyText": "ditto", "bodyHTML": "<p dir=\"auto\">ditto</p>", "author": "gregw", "createdAt": "2020-08-17T08:49:04Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onOpened(connection);\n+    }\n+\n+    @Override\n+    public void onClosed(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzODg2NQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471338865", "body": "rather than create your own set type just to provide a predicate is is probably simpler to use:\r\n```java\r\nnew IncludeExcludeSet<>(new HashSet<>(), Connection.class::isAssignableFrom, new HashSet<>(), Connection.class::isAssignableFrom);\r\n```", "bodyText": "rather than create your own set type just to provide a predicate is is probably simpler to use:\nnew IncludeExcludeSet<>(new HashSet<>(), Connection.class::isAssignableFrom, new HashSet<>(), Connection.class::isAssignableFrom);", "bodyHTML": "<p dir=\"auto\">rather than create your own set type just to provide a predicate is is probably simpler to use:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"new IncludeExcludeSet&lt;&gt;(new HashSet&lt;&gt;(), Connection.class::isAssignableFrom, new HashSet&lt;&gt;(), Connection.class::isAssignableFrom);\"><pre><span class=\"pl-k\">new</span> <span class=\"pl-k\">IncludeExcludeSet&lt;&gt;</span>(<span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;&gt;</span>(), <span class=\"pl-smi\">Connection</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">::</span>isAssignableFrom, <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;&gt;</span>(), <span class=\"pl-smi\">Connection</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">::</span>isAssignableFrom);</pre></div>", "author": "gregw", "createdAt": "2020-08-17T08:58:11Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onOpened(connection);\n+    }\n+\n+    @Override\n+    public void onClosed(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onClosed(connection);\n+    }\n+\n+    public static class ConnectionSet extends AbstractSet<Class<? extends Connection>> implements Predicate<Connection>", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0Mjc4Mw==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471842783", "bodyText": "This doesn't work, we wan't to know if assignable from one of the values present in the set, it will always be assignable from Connection.\nTo get the same logic I would need something like this\nHashSet<Class<? extends Connection>> includes = new HashSet<>();\nHashSet<Class<? extends Connection>> excludes = new HashSet<>();\n\n_set = new IncludeExcludeSet<>(includes, connection ->\n{\n    if (connection == null)\n        return false;\n    return includes.stream().anyMatch(c -> c.isAssignableFrom(connection.getClass()));\n},\nexcludes, connection ->\n{\n    if (connection == null)\n        return false;\n    return excludes.stream().anyMatch(c -> c.isAssignableFrom(connection.getClass()));\n});\nso seems easier to just define the set type.", "author": "lachlan-roberts", "createdAt": "2020-08-18T00:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzODg2NQ=="}], "type": "inlineReview"}, {"oid": "c37d902ef7fe9b0095ff775b1885abec3e4a4999", "url": "https://github.com/eclipse/jetty.project/commit/c37d902ef7fe9b0095ff775b1885abec3e4a4999", "message": "remove tri-state logic from IncludeExcludeConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-18T00:18:44Z", "type": "commit"}]}