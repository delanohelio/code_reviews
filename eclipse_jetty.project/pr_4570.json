{"pr_number": 4570, "pr_title": "Issue #4567 - StdErrLog cleanup and final Arg Throwable support", "pr_author": "joakime", "pr_createdAt": "2020-02-13T20:12:34Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4570", "timeline": [{"oid": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "url": "https://github.com/eclipse/jetty.project/commit/3f3eaf2182a5f3b1794816c26f3268ee62865836", "message": "Issue #4567 - StdErrLog cleanup and final Arg Throwable support\n\nCheckstyle fixes ...\n+ Log.__loggers now Log.LOGGERS\n+ Log.__props now Log.PROPS\n+ StdErrLog.__tagpad now StdErrLog.THREADNAME_PADDING\n+ StdErrLog.__source now StdErrLog.SOURCE\n+ StdErrLog.__long now StdErrLog.LONG_CLASSNAMES\n+ StdErrLog.__escape now StdErrLog.ESCAPE_CONTROL_CHARS\n+ Removed redundant \"public\" modifier on Log interface methods\n\nNew code ...\n+ New Log.getProperty(String key, String defaultValue)\n  Used by JavaUtilLog, JettyLogHandler, and StdErrLog\n+ New StdErrLog.getConfiguredLevel()\n+ New StrErrLog.println(String) used to write StringBuilder\n  to configured PrintStream\n\nRemoved code ...\n+ Removed deprecated prop check in StdErrLog initialization\n\nCleanup and Corrected code ...\n+ StdErrLog.setDebugEnabled(boolean) cleanup\n+ StdErrLog._stderr is now used and is never null\n+ Only one StdErrLog.format() method entry point\n+ StdErrLog.format(StringBuilder, Throwable) now called .formatCause(StringBuilder, Throwable, String)\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-02-13T19:00:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY2Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379824666", "body": "Should we do this IFF the number of args is +1 the number of args in the format string?", "bodyText": "Should we do this IFF the number of args is +1 the number of args in the format string?", "bodyHTML": "<p dir=\"auto\">Should we do this IFF the number of args is +1 the number of args in the format string?</p>", "author": "gregw", "createdAt": "2020-02-15T10:57:55Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)\n+                {\n+                    cause = (Throwable)inArgs[msgArgsLen - 1];", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5ODkyMw==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380798923", "bodyText": "mismatched placeholders and arguments are usually an error in most IDEs.\nscanning the placeholders each and every time isn't a great idea.\nI would prefer that we just use the MessageFormatters as-is, and don't reinvent the wheel here.\nalso, if the logger is using a org.slf4j.spi.LocationAwareLogger then the formatting is done with ...\nFormattingTuple ft = MessageFormatter.arrayFormat(msg, argArray);\nlogger.log(level, ft.getMessage());", "author": "joakime", "createdAt": "2020-02-18T16:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY5Mw==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379824693", "body": "merge the two `if`s into a single `&&` clause.", "bodyText": "merge the two ifs into a single && clause.", "bodyHTML": "<p dir=\"auto\">merge the two <code>if</code>s into a single <code>&amp;&amp;</code> clause.</p>", "author": "gregw", "createdAt": "2020-02-15T10:58:26Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,50 +431,57 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0)\n+            {\n+                if (inArgs[msgArgsLen - 1] instanceof Throwable)", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzAzOA==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803038", "bodyText": "Done", "author": "joakime", "createdAt": "2020-02-18T16:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgyNDY5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODAzNw==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918037", "body": "Should not this be `SOURCE` since it's a `static final` constant?", "bodyText": "Should not this be SOURCE since it's a static final constant?", "bodyHTML": "<p dir=\"auto\">Should not this be <code>SOURCE</code> since it's a <code>static final</code> constant?</p>", "author": "sbordet", "createdAt": "2020-02-16T17:09:45Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzY2Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803662", "bodyText": "done.", "author": "joakime", "createdAt": "2020-02-18T16:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODEwNg==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918106", "body": "This constant is ever used once, so it can just be inlined.", "bodyText": "This constant is ever used once, so it can just be inlined.", "bodyHTML": "<p dir=\"auto\">This constant is ever used once, so it can just be inlined.</p>", "author": "sbordet", "createdAt": "2020-02-16T17:10:47Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMzczMA==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380803730", "bodyText": "Done.", "author": "joakime", "createdAt": "2020-02-18T16:55:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODEwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918191", "body": "Why this `static` has just 1 `_` while the same in `Log` has 2 `__`?", "bodyText": "Why this static has just 1 _ while the same in Log has 2 __?", "bodyHTML": "<p dir=\"auto\">Why this <code>static</code> has just 1 <code>_</code> while the same in <code>Log</code> has 2 <code>__</code>?</p>", "author": "sbordet", "createdAt": "2020-02-16T17:12:02Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/JavaUtilLog.java", "diffHunk": "@@ -65,8 +65,8 @@\n {\n     private static final String THIS_CLASS = JavaUtilLog.class.getName();\n     private static final boolean __source =\n-        Boolean.parseBoolean(Log.__props.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n-            Log.__props.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n+        Boolean.parseBoolean(Log.getProperty(\"org.eclipse.jetty.util.log.SOURCE\",\n+            Log.getProperty(\"org.eclipse.jetty.util.log.javautil.SOURCE\", \"true\")));\n \n     private static boolean _initialized = false;", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjkzNw==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380806937", "bodyText": "It was __<constant> (aka static final) and _<field> (aka a field).\nBut a static alone didn't have a old-school jetty syntax/format.", "author": "joakime", "createdAt": "2020-02-18T17:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTk1Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809952", "bodyText": "I'll fix it anyway.", "author": "joakime", "createdAt": "2020-02-18T17:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODIxNw==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918217", "body": "See above, one or two `_`?", "bodyText": "See above, one or two _?", "bodyHTML": "<p dir=\"auto\">See above, one or two <code>_</code>?</p>", "author": "sbordet", "createdAt": "2020-02-16T17:12:21Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/Log.java", "diffHunk": "@@ -67,8 +67,8 @@\n     /**\n      * Logging Configuration Properties\n      */\n-    protected static final Properties __props = new Properties();\n-    private static final ConcurrentMap<String, Logger> __loggers = new ConcurrentHashMap<>();\n+    protected static final Properties PROPS = new Properties();\n+    private static final ConcurrentMap<String, Logger> LOGGERS = new ConcurrentHashMap<>();\n     private static boolean __initialized;", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTg1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809859", "bodyText": "Fixed.", "author": "joakime", "createdAt": "2020-02-18T17:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODMyOQ==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379918329", "body": "This is not `final`, so not a constant, so it should be `__threadNamePadding`.", "bodyText": "This is not final, so not a constant, so it should be __threadNamePadding.", "bodyHTML": "<p dir=\"auto\">This is not <code>final</code>, so not a constant, so it should be <code>__threadNamePadding</code>.</p>", "author": "sbordet", "createdAt": "2020-02-16T17:13:58Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -92,30 +93,20 @@\n @ManagedObject(\"Jetty StdErr Logging Implementation\")\n public class StdErrLog extends AbstractLogger\n {\n-    private static final String EOL = System.getProperty(\"line.separator\");\n+    private static final String EOL = System.lineSeparator();\n+    private static final Object[] EMPTY_ARGS = new Object[0];\n     // Do not change output format lightly, people rely on this output format now.\n-    private static int __tagpad = Integer.parseInt(Log.__props.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));\n+    private static int THREADNAME_PADDING = Integer.parseInt(Log.getProperty(\"org.eclipse.jetty.util.log.StdErrLog.TAG_PAD\", \"0\"));", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwODgwMA==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380808800", "bodyText": "Done.", "author": "joakime", "createdAt": "2020-02-18T17:03:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODMyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxOTEzOQ==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r379919139", "body": "This seems to me more complicated than it needs to.\r\nWas not enough to use a local variable?\r\n\r\n```java\r\nStdErrLog logger = (StdErrLog)log;\r\nint level = enabled ? LEVEL_DEBUG : logger.getConfiguredLevel();\r\nlogger.setLevel(level);\r\n```\r\n", "bodyText": "This seems to me more complicated than it needs to.\nWas not enough to use a local variable?\nStdErrLog logger = (StdErrLog)log;\nint level = enabled ? LEVEL_DEBUG : logger.getConfiguredLevel();\nlogger.setLevel(level);", "bodyHTML": "<p dir=\"auto\">This seems to me more complicated than it needs to.<br>\nWas not enough to use a local variable?</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"StdErrLog logger = (StdErrLog)log;\nint level = enabled ? LEVEL_DEBUG : logger.getConfiguredLevel();\nlogger.setLevel(level);\n\"><pre><span class=\"pl-smi\">StdErrLog</span> logger <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">StdErrLog</span>)log;\n<span class=\"pl-k\">int</span> level <span class=\"pl-k\">=</span> enabled <span class=\"pl-k\">?</span> <span class=\"pl-c1\">LEVEL_DEBUG</span> <span class=\"pl-k\">:</span> logger<span class=\"pl-k\">.</span>getConfiguredLevel();\nlogger<span class=\"pl-k\">.</span>setLevel(level);</pre></div>", "author": "sbordet", "createdAt": "2020-02-16T17:26:05Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -350,28 +341,35 @@ public boolean isDebugEnabled()\n     @Override\n     public void setDebugEnabled(boolean enabled)\n     {\n+        Function<StdErrLog, Integer> lvlFunc;\n+\n         if (enabled)\n         {\n-            this._level = LEVEL_DEBUG;\n-\n-            for (Logger log : Log.getLoggers().values())\n-            {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(LEVEL_DEBUG);\n-            }\n+            lvlFunc = (logger) -> LEVEL_DEBUG;\n         }\n         else\n         {\n-            this._level = this._configuredLevel;\n+            lvlFunc = (logger) -> logger.getConfiguredLevel();\n+        }\n+\n+        this.setLevel(lvlFunc.apply(this));\n \n-            for (Logger log : Log.getLoggers().values())\n+        String name = getName();\n+        for (Logger log : Log.getLoggers().values())\n+        {\n+            if (log.getName().startsWith(name) && log instanceof StdErrLog)\n             {\n-                if (log.getName().startsWith(getName()) && log instanceof StdErrLog)\n-                    ((StdErrLog)log).setLevel(((StdErrLog)log)._configuredLevel);\n+                StdErrLog logger = (StdErrLog)log;\n+                logger.setLevel(lvlFunc.apply(logger));", "originalCommit": "3f3eaf2182a5f3b1794816c26f3268ee62865836", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwOTc5MA==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r380809790", "bodyText": "Done.", "author": "joakime", "createdAt": "2020-02-18T17:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxOTEzOQ=="}], "type": "inlineReview"}, {"oid": "c9134df60a676b0d35c764b8b40b125c03185cb1", "url": "https://github.com/eclipse/jetty.project/commit/c9134df60a676b0d35c764b8b40b125c03185cb1", "message": "Issue #4567 - Applying changes from PR review\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-02-18T17:09:46Z", "type": "commit"}, {"oid": "5df8b0532754ce86a81d1e233b0f3fa87c986223", "url": "https://github.com/eclipse/jetty.project/commit/5df8b0532754ce86a81d1e233b0f3fa87c986223", "message": "Issue #4567 - null arguments on StdErrLog result in no output (avoiding \"null\")\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-02-19T21:10:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3MTcxMQ==", "url": "https://github.com/eclipse/jetty.project/pull/4570#discussion_r381571711", "body": "Small nit, this should be `builder.append(\": \").append(cause);`", "bodyText": "Small nit, this should be builder.append(\": \").append(cause);", "bodyHTML": "<p dir=\"auto\">Small nit, this should be <code>builder.append(\": \").append(cause);</code></p>", "author": "sbordet", "createdAt": "2020-02-19T22:03:01Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/log/StdErrLog.java", "diffHunk": "@@ -426,112 +421,118 @@ public void debug(Throwable thrown)\n     @Override\n     public void debug(String msg, Throwable thrown)\n     {\n-        if (_level <= LEVEL_DEBUG)\n+        if (isDebugEnabled())\n         {\n-            StringBuilder buffer = new StringBuilder(64);\n-            format(buffer, \":DBUG:\", msg, thrown);\n-            (_stderr == null ? System.err : _stderr).println(buffer);\n+            StringBuilder builder = new StringBuilder(64);\n+            format(builder, \":DBUG:\", msg, thrown);\n+            println(builder);\n         }\n     }\n \n-    private void format(StringBuilder buffer, String level, String msg, Object... args)\n+    private void println(StringBuilder builder)\n+    {\n+        _stderr.println(builder);\n+    }\n+\n+    private void format(StringBuilder builder, String level, String msg, Object... inArgs)\n     {\n         long now = System.currentTimeMillis();\n         int ms = (int)(now % 1000);\n         String d = _dateCache.formatNow(now);\n-        tag(buffer, d, ms, level);\n-        format(buffer, msg, args);\n-    }\n+        tag(builder, d, ms, level);\n \n-    private void format(StringBuilder buffer, String level, String msg, Throwable thrown)\n-    {\n-        format(buffer, level, msg);\n-        if (isHideStacks())\n-        {\n-            format(buffer, \": \" + String.valueOf(thrown));\n-        }\n-        else\n+        Object[] msgArgs = EMPTY_ARGS;\n+        int msgArgsLen = 0;\n+        Throwable cause = null;\n+\n+        if (inArgs != null)\n         {\n-            format(buffer, thrown);\n+            msgArgs = inArgs;\n+            msgArgsLen = inArgs.length;\n+            if (msgArgsLen > 0 && inArgs[msgArgsLen - 1] instanceof Throwable)\n+            {\n+                cause = (Throwable)inArgs[msgArgsLen - 1];\n+                msgArgsLen--;\n+            }\n         }\n-    }\n \n-    private void format(StringBuilder builder, String msg, Object... args)\n-    {\n         if (msg == null)\n         {\n             msg = \"\";\n-            for (int i = 0; i < args.length; i++)\n+            for (int i = 0; i < msgArgsLen; i++)\n             {\n                 msg += \"{} \";\n             }\n         }\n         String braces = \"{}\";\n         int start = 0;\n-        for (Object arg : args)\n+        for (int i = 0; i < msgArgsLen; i++)\n         {\n+            Object arg = msgArgs[i];\n             int bracesIndex = msg.indexOf(braces, start);\n             if (bracesIndex < 0)\n             {\n                 escape(builder, msg.substring(start));\n                 builder.append(\" \");\n-                builder.append(arg);\n+                if (arg != null)\n+                    builder.append(arg);\n                 start = msg.length();\n             }\n             else\n             {\n                 escape(builder, msg.substring(start, bracesIndex));\n-                builder.append(String.valueOf(arg));\n+                if (arg != null)\n+                    builder.append(arg);\n                 start = bracesIndex + braces.length();\n             }\n         }\n         escape(builder, msg.substring(start));\n-    }\n \n-    protected void format(StringBuilder buffer, Throwable thrown)\n-    {\n-        format(buffer, thrown, \"\");\n+        if (cause != null)\n+        {\n+            if (isHideStacks())\n+            {\n+                builder.append(\": \" + cause);", "originalCommit": "5df8b0532754ce86a81d1e233b0f3fa87c986223", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "16230e6e1c39ca8adaecbb7158bc43dedb1724c8", "url": "https://github.com/eclipse/jetty.project/commit/16230e6e1c39ca8adaecbb7158bc43dedb1724c8", "message": "Issue #4567 - Applying fixes from PR #4570 review\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-02-20T16:31:59Z", "type": "commit"}, {"oid": "3c6c9112deafaeae27bfc1c1f7aa20b459a5e941", "url": "https://github.com/eclipse/jetty.project/commit/3c6c9112deafaeae27bfc1c1f7aa20b459a5e941", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4567-StdErrLog-throwable", "committedDate": "2020-02-20T17:16:19Z", "type": "commit"}, {"oid": "4ec8826873f09d77093dfa626ad36f66975e6764", "url": "https://github.com/eclipse/jetty.project/commit/4ec8826873f09d77093dfa626ad36f66975e6764", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4567-StdErrLog-throwable", "committedDate": "2020-02-20T17:53:07Z", "type": "commit"}]}