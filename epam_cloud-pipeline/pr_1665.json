{"pr_number": 1665, "pr_title": "Issue #1652: VMMonitor shall handle pool nodes", "pr_author": "cryteq", "pr_createdAt": "2020-12-18T11:54:43Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1665", "merge_commit": "a71d92c4713f0501c9a75395df0c12417a1447cd", "timeline": [{"oid": "0531209ba38e986bc176947a1be07168e24c4483", "url": "https://github.com/epam/cloud-pipeline/commit/0531209ba38e986bc176947a1be07168e24c4483", "message": "Issue #1652: Pool entity added to common module", "committedDate": "2020-12-18T11:32:38Z", "type": "commit"}, {"oid": "d30ccb6684c3dd6420676da9e47f2ce02b5550cd", "url": "https://github.com/epam/cloud-pipeline/commit/d30ccb6684c3dd6420676da9e47f2ce02b5550cd", "message": "Issue #1652: Pool id check added for nodes with non-numeric run id", "committedDate": "2020-12-18T11:37:10Z", "type": "commit"}, {"oid": "c4f96fa6f083f6e29436d9860e2a6a2a3334a224", "url": "https://github.com/epam/cloud-pipeline/commit/c4f96fa6f083f6e29436d9860e2a6a2a3334a224", "message": "Issue #1652: Added tests for monitor pool id check", "committedDate": "2020-12-18T11:38:24Z", "type": "commit"}, {"oid": "fac095dc1ee05be0fb3b95de8f55f2e9bae035f4", "url": "https://github.com/epam/cloud-pipeline/commit/fac095dc1ee05be0fb3b95de8f55f2e9bae035f4", "message": "Issue #1652: pool_id label moved to properties", "committedDate": "2020-12-21T11:01:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5ODIzOQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1665#discussion_r547398239", "body": "Pool label exists only on kubernetes nodes, so we shall check it in `checkLabels` method, which operates kubernetes `Node` instead of AWS `VirtualMachine`", "bodyText": "Pool label exists only on kubernetes nodes, so we shall check it in checkLabels method, which operates kubernetes Node instead of AWS VirtualMachine", "bodyHTML": "<p dir=\"auto\">Pool label exists only on kubernetes nodes, so we shall check it in <code>checkLabels</code> method, which operates kubernetes <code>Node</code> instead of AWS <code>VirtualMachine</code></p>", "author": "mzueva", "createdAt": "2020-12-22T17:14:38Z", "path": "vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java", "diffHunk": "@@ -102,7 +106,7 @@ private void checkVmState(final VirtualMachine vm) {\n                 checkMatchingNodes(nodes, vm);\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n-                if (!matchingRunExists(vm)) {\n+                if (!matchingRunExists(vm) && !poolIdExists(vm)) {", "originalCommit": "fac095dc1ee05be0fb3b95de8f55f2e9bae035f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67688d7804c4689aef360cd49fcd0b9d099913fd", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 1b514f8c4..a1b0479de 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -106,7 +106,7 @@ public class VMMonitor {\n                 checkMatchingNodes(nodes, vm);\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n-                if (!matchingRunExists(vm) && !poolIdExists(vm)) {\n+                if (!matchingRunExists(vm)) {\n                     notifier.notifyMissingNode(vm);\n                 }\n             }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "a71d92c4713f0501c9a75395df0c12417a1447cd", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 1b514f8c4..641dff9f7 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -106,7 +106,7 @@ public class VMMonitor {\n                 checkMatchingNodes(nodes, vm);\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n-                if (!matchingRunExists(vm) && !poolIdExists(vm)) {\n+                if (!matchingRunExists(vm)) {\n                     notifier.notifyMissingNode(vm);\n                 }\n             }\n", "next_change": {"commit": "7da64202582fdcb9953d1965637d3a0d827be637", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 641dff9f7..976a1c085 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -107,7 +108,7 @@ public class VMMonitor {\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n                 if (!matchingRunExists(vm)) {\n-                    notifier.notifyMissingNode(vm);\n+                    notifier.queueMissingNodeNotification(vm);\n                 }\n             }\n         } catch (Exception e) {\n", "next_change": {"commit": "a6bef34ba2d2cddab88399b6365ab09165cf7967", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 976a1c085..0cc415fcb 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -107,7 +118,7 @@ public class VMMonitor {\n                 checkMatchingNodes(nodes, vm);\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n-                if (!matchingRunExists(vm)) {\n+                if (!matchingRunExists(vm) && !checkVMPoolNode(vm)) {\n                     notifier.queueMissingNodeNotification(vm);\n                 }\n             }\n", "next_change": {"commit": "27a3f99671968fab3d0ba3ac6409cfde9dc0f422", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 0cc415fcb..9d932c4a6 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -119,7 +126,7 @@ public class VMMonitor {\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n                 if (!matchingRunExists(vm) && !checkVMPoolNode(vm)) {\n-                    notifier.queueMissingNodeNotification(vm);\n+                    notifier.queueMissingNodeNotification(vm, apiClient.searchRunsByInstanceId(vm.getInstanceId()));\n                 }\n             }\n         } catch (Exception e) {\n", "next_change": {"commit": "462bc2bdf0b9fa740075f1ef6db4babafe06aaf5", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 9d932c4a6..40e77ecb4 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -126,7 +127,13 @@ public class VMMonitor {\n             } else {\n                 log.debug(\"No matching nodes were found for VM {} {}.\", vm.getInstanceId(), vm.getCloudProvider());\n                 if (!matchingRunExists(vm) && !checkVMPoolNode(vm)) {\n-                    notifier.queueMissingNodeNotification(vm, apiClient.searchRunsByInstanceId(vm.getInstanceId()));\n+                    final Map<String, String> vmTags = MapUtils.emptyIfNull(vm.getTags());\n+                    final List<PipelineRun> matchingRuns = findLongValueInMap(vmTags, runIdLabel)\n+                        .map(runId -> loadPipelineRun(runId).orElseGet(() -> new PipelineRun(runId, null)))\n+                        .map(Collections::singletonList)\n+                        .orElseGet(() -> apiClient.searchRunsByInstanceId(vm.getInstanceId()));\n+                    final Long matchingPoolId = findLongValueInMap(vmTags, poolIdLabel).orElse(null);\n+                    notifier.queueMissingNodeNotification(vm, matchingRuns, matchingPoolId);\n                 }\n             }\n         } catch (Exception e) {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "a71d92c4713f0501c9a75395df0c12417a1447cd", "message": "Merge commit", "committedDate": null}, {"oid": "7da64202582fdcb9953d1965637d3a0d827be637", "committedDate": "2021-12-02 20:00:11 +0300", "message": "Issue #2367 VMMonitor notifications grouping (#2369)"}, {"oid": "5542db2cc51e55dcc5ff8ce11bb2c4741d4cb53d", "committedDate": "2021-12-07 12:55:34 +0300", "message": "Send notifications even if an error occurred during monitoring process"}, {"oid": "a6bef34ba2d2cddab88399b6365ab09165cf7967", "committedDate": "2021-12-21 16:00:41 +0300", "message": "Fix monitoring of instances created for a node pool. Maximum time for instance to live without a label is configured by `CP_VM_MONITOR_MAX_LIVE_MINUTES` (60 minutes by default)"}, {"oid": "9037be46e2d6d12961548bd32c42ae88e589afb5", "committedDate": "2021-12-21 23:38:10 +0300", "message": "Fix monitoring of instances created for a node pool. Maximum time for instance to live without a label is configured by `CP_VM_MONITOR_MAX_LIVE_MINUTES` (60 minutes by default)"}, {"oid": "c0f50f24259c26364c5536cecf98deb34fe9123b", "committedDate": "2022-02-09 19:40:09 +0300", "message": "Improve error handling for VM monitor"}, {"oid": "27a3f99671968fab3d0ba3ac6409cfde9dc0f422", "committedDate": "2022-03-25 12:24:36 +0300", "message": "Issue #2568 Extend notification on missing node/label (#2569)"}, {"oid": "462bc2bdf0b9fa740075f1ef6db4babafe06aaf5", "committedDate": "2022-04-07 13:22:47 +0300", "message": "Issue #2568 Propagate pool ID to cloud instance tags, extend missing labels/node notification (#2591)"}, {"oid": "0474f0b13233edbf600f339001aa77b82edb8a28", "committedDate": "2022-10-20 17:22:52 +0200", "message": "Simplify node metrics api (#2883)"}]}, {"oid": "67688d7804c4689aef360cd49fcd0b9d099913fd", "url": "https://github.com/epam/cloud-pipeline/commit/67688d7804c4689aef360cd49fcd0b9d099913fd", "message": "Issue #1652: Removed poolId check from checkVmState", "committedDate": "2020-12-23T10:46:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM1MzA3NA==", "url": "https://github.com/epam/cloud-pipeline/pull/1665#discussion_r549353074", "body": "As I mentioned previously `VirtualMachine ` doesn't have `pool` label, we need to check  `NodeInstance ` tags instead.", "bodyText": "As I mentioned previously VirtualMachine  doesn't have pool label, we need to check  NodeInstance  tags instead.", "bodyHTML": "<p dir=\"auto\">As I mentioned previously <code>VirtualMachine </code> doesn't have <code>pool</code> label, we need to check  <code>NodeInstance </code> tags instead.</p>", "author": "mzueva", "createdAt": "2020-12-28T13:45:01Z", "path": "vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java", "diffHunk": "@@ -124,6 +128,23 @@ private boolean matchingRunExists(final VirtualMachine vm) {\n         return false;\n     }\n \n+    private boolean poolIdExists(final VirtualMachine vm) {\n+        log.debug(\"Checking whether a node pool with corresponding pool id exists.\");", "originalCommit": "fac095dc1ee05be0fb3b95de8f55f2e9bae035f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c62f3734b48276f4a195c21b6446fdfa49f6b46f", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 1b514f8c4..641dff9f7 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -128,13 +128,13 @@ public class VMMonitor {\n         return false;\n     }\n \n-    private boolean poolIdExists(final VirtualMachine vm) {\n+    private boolean poolIdExists(final NodeInstance node) {\n         log.debug(\"Checking whether a node pool with corresponding pool id exists.\");\n-        final String poolIdValue = MapUtils.emptyIfNull(vm.getTags()).get(poolIdLabel);\n+        final String poolIdValue = MapUtils.emptyIfNull(node.getLabels()).get(poolIdLabel);\n         if (StringUtils.isNotBlank(poolIdValue) && NumberUtils.isDigits(poolIdValue)) {\n             final long poolId = Long.parseLong(poolIdValue);\n-            log.debug(\"VM {} {} is associated with pool id {}. Checking node pool existence.\",\n-                    vm.getInstanceId(), vm.getCloudProvider(), poolId);\n+            log.debug(\"NodeInstance {} {} is associated with pool id {}. Checking node pool existence.\",\n+                    node.getUid(), node.getClusterName(), poolId);\n             return isNodePoolExists(poolId);\n         }\n         return false;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "a71d92c4713f0501c9a75395df0c12417a1447cd", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 1b514f8c4..641dff9f7 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -128,13 +128,13 @@ public class VMMonitor {\n         return false;\n     }\n \n-    private boolean poolIdExists(final VirtualMachine vm) {\n+    private boolean poolIdExists(final NodeInstance node) {\n         log.debug(\"Checking whether a node pool with corresponding pool id exists.\");\n-        final String poolIdValue = MapUtils.emptyIfNull(vm.getTags()).get(poolIdLabel);\n+        final String poolIdValue = MapUtils.emptyIfNull(node.getLabels()).get(poolIdLabel);\n         if (StringUtils.isNotBlank(poolIdValue) && NumberUtils.isDigits(poolIdValue)) {\n             final long poolId = Long.parseLong(poolIdValue);\n-            log.debug(\"VM {} {} is associated with pool id {}. Checking node pool existence.\",\n-                    vm.getInstanceId(), vm.getCloudProvider(), poolId);\n+            log.debug(\"NodeInstance {} {} is associated with pool id {}. Checking node pool existence.\",\n+                    node.getUid(), node.getClusterName(), poolId);\n             return isNodePoolExists(poolId);\n         }\n         return false;\n", "next_change": {"commit": "a6bef34ba2d2cddab88399b6365ab09165cf7967", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 641dff9f7..0cc415fcb 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -137,6 +149,25 @@ public class VMMonitor {\n                     node.getUid(), node.getClusterName(), poolId);\n             return isNodePoolExists(poolId);\n         }\n+        return checkVMPoolNode(vm);\n+    }\n+\n+    private boolean checkVMPoolNode(final VirtualMachine vm) {\n+        log.debug(\"Checking whether VM {} is created for some node pool.\", vm.getInstanceId());\n+        final String runIdValue = MapUtils.emptyIfNull(vm.getTags()).get(runIdLabel);\n+        if (StringUtils.isNotBlank(runIdValue) && runIdValue.startsWith(POOL_RUN_ID_PREFIX)) {\n+            log.debug(\"VM {} is labeled with {} and it possibly matches a node pool.\",\n+                    vm.getInstanceId(), runIdValue);\n+            final LocalDateTime created = vm.getCreated();\n+            if (created == null) {\n+                return false;\n+            }\n+            final long minutesAlive = Duration.between(created, LocalDateTime.now(Clock.systemUTC()))\n+                    .get(ChronoUnit.MINUTES);\n+            log.debug(\"VM {} was launched at {} and is alive for {} minutes\",\n+                    vm.getInstanceId(), created, minutesAlive);\n+            return minutesAlive > vmMaxLiveMinutes;\n+        }\n         return false;\n     }\n \n", "next_change": {"commit": "9037be46e2d6d12961548bd32c42ae88e589afb5", "changed_code": [{"header": "diff --git a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\nindex 0cc415fcb..2a6b8c499 100644\n--- a/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n+++ b/vm-monitor/src/main/java/com/epam/pipeline/vmmonitor/service/vm/VMMonitor.java\n", "chunk": "@@ -163,10 +164,10 @@ public class VMMonitor {\n                 return false;\n             }\n             final long minutesAlive = Duration.between(created, LocalDateTime.now(Clock.systemUTC()))\n-                    .get(ChronoUnit.MINUTES);\n+                    .getSeconds() / SECONDS_IN_MINUTES;\n             log.debug(\"VM {} was launched at {} and is alive for {} minutes\",\n                     vm.getInstanceId(), created, minutesAlive);\n-            return minutesAlive > vmMaxLiveMinutes;\n+            return minutesAlive <= vmMaxLiveMinutes;\n         }\n         return false;\n     }\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "a71d92c4713f0501c9a75395df0c12417a1447cd", "message": "Merge commit", "committedDate": null}, {"oid": "7da64202582fdcb9953d1965637d3a0d827be637", "committedDate": "2021-12-02 20:00:11 +0300", "message": "Issue #2367 VMMonitor notifications grouping (#2369)"}, {"oid": "5542db2cc51e55dcc5ff8ce11bb2c4741d4cb53d", "committedDate": "2021-12-07 12:55:34 +0300", "message": "Send notifications even if an error occurred during monitoring process"}, {"oid": "a6bef34ba2d2cddab88399b6365ab09165cf7967", "committedDate": "2021-12-21 16:00:41 +0300", "message": "Fix monitoring of instances created for a node pool. Maximum time for instance to live without a label is configured by `CP_VM_MONITOR_MAX_LIVE_MINUTES` (60 minutes by default)"}, {"oid": "9037be46e2d6d12961548bd32c42ae88e589afb5", "committedDate": "2021-12-21 23:38:10 +0300", "message": "Fix monitoring of instances created for a node pool. Maximum time for instance to live without a label is configured by `CP_VM_MONITOR_MAX_LIVE_MINUTES` (60 minutes by default)"}, {"oid": "c0f50f24259c26364c5536cecf98deb34fe9123b", "committedDate": "2022-02-09 19:40:09 +0300", "message": "Improve error handling for VM monitor"}, {"oid": "27a3f99671968fab3d0ba3ac6409cfde9dc0f422", "committedDate": "2022-03-25 12:24:36 +0300", "message": "Issue #2568 Extend notification on missing node/label (#2569)"}, {"oid": "462bc2bdf0b9fa740075f1ef6db4babafe06aaf5", "committedDate": "2022-04-07 13:22:47 +0300", "message": "Issue #2568 Propagate pool ID to cloud instance tags, extend missing labels/node notification (#2591)"}, {"oid": "0474f0b13233edbf600f339001aa77b82edb8a28", "committedDate": "2022-10-20 17:22:52 +0200", "message": "Simplify node metrics api (#2883)"}]}, {"oid": "c62f3734b48276f4a195c21b6446fdfa49f6b46f", "url": "https://github.com/epam/cloud-pipeline/commit/c62f3734b48276f4a195c21b6446fdfa49f6b46f", "message": "Issue #1652: Moved poolId label check to NodeInstance", "committedDate": "2020-12-29T11:40:03Z", "type": "commit"}]}