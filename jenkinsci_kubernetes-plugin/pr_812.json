{"pr_number": 812, "pr_title": "Suggest NodeProvisioner review after adding new pods", "pr_author": "Jinxit", "pr_createdAt": "2020-08-03T12:50:24Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/812", "timeline": [{"oid": "631e45172b4fdada0ac62ce1ea990962e353e10b", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/631e45172b4fdada0ac62ce1ea990962e353e10b", "message": "suggest NodeProvisioner review after adding new pods", "committedDate": "2020-08-03T12:42:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyOTg2OA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/812#discussion_r467729868", "body": "nodeProvisioner is always non-null if label is non-null.\r\n\r\n```suggestion\r\n            if (availableCapacity > 0 && label != null) {\r\n                LOGGER.log(Level.FINE, \"Suggesting NodeProvisioner review\");\r\n                Timer.get().schedule(label.nodeProvisioner::suggestReviewNow, 1L, TimeUnit.SECONDS);\r\n            }\r\n```\r\n\r\n`availableCapacity > 0` is not useful IMO. It would be more relevant to capture the number of nodes provisioned in the current round and check if it is `>0`.", "bodyText": "nodeProvisioner is always non-null if label is non-null.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        NodeProvisioner nodeProvisioner = label.nodeProvisioner;\n          \n          \n            \n                        if (availableCapacity > 0 && nodeProvisioner != null) {\n          \n          \n            \n                            LOGGER.log(Level.FINE, \"Suggesting NodeProvisioner review\");\n          \n          \n            \n                            Timer.get().schedule(nodeProvisioner::suggestReviewNow, 1L, TimeUnit.SECONDS);\n          \n          \n            \n                        }\n          \n          \n            \n                        if (availableCapacity > 0 && label != null) {\n          \n          \n            \n                            LOGGER.log(Level.FINE, \"Suggesting NodeProvisioner review\");\n          \n          \n            \n                            Timer.get().schedule(label.nodeProvisioner::suggestReviewNow, 1L, TimeUnit.SECONDS);\n          \n          \n            \n                        }\n          \n      \n    \n    \n  \n\navailableCapacity > 0 is not useful IMO. It would be more relevant to capture the number of nodes provisioned in the current round and check if it is >0.", "bodyHTML": "<p dir=\"auto\">nodeProvisioner is always non-null if label is non-null.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">NodeProvisioner</span> nodeProvisioner <span class=\"pl-k\">=</span> label<span class=\"pl-k\">.</span>nodeProvisioner;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (availableCapacity <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> nodeProvisioner <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>log(<span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>FINE</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Suggesting NodeProvisioner review<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">Timer</span><span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>schedule(nodeProvisioner<span class=\"pl-k\">::</span>suggestReviewNow, <span class=\"pl-c1\">1L</span>, <span class=\"pl-smi\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SECONDS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (availableCapacity <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&amp;&amp;</span> label <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>log(<span class=\"pl-smi\">Level</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>FINE</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Suggesting NodeProvisioner review<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">Timer</span><span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>schedule(label<span class=\"pl-k\">.</span>nodeProvisioner<span class=\"pl-k\">::</span>suggestReviewNow, <span class=\"pl-c1\">1L</span>, <span class=\"pl-smi\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SECONDS</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\"><code>availableCapacity &gt; 0</code> is not useful IMO. It would be more relevant to capture the number of nodes provisioned in the current round and check if it is <code>&gt;0</code>.</p>", "author": "Vlatombe", "createdAt": "2020-08-10T07:30:41Z", "path": "src/main/java/io/jenkins/plugins/kubernetes/NoDelayProvisionerStrategy.java", "diffHunk": "@@ -71,6 +73,11 @@\n             }\n         }\n         if (availableCapacity >= currentDemand) {\n+            NodeProvisioner nodeProvisioner = label.nodeProvisioner;\n+            if (availableCapacity > 0 && nodeProvisioner != null) {\n+                LOGGER.log(Level.FINE, \"Suggesting NodeProvisioner review\");\n+                Timer.get().schedule(nodeProvisioner::suggestReviewNow, 1L, TimeUnit.SECONDS);\n+            }", "originalCommit": "631e45172b4fdada0ac62ce1ea990962e353e10b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a3d3d6d8ec0f078e0cb1911b8bf97ce3f0c0243", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/2a3d3d6d8ec0f078e0cb1911b8bf97ce3f0c0243", "message": "check if any nodes were provisioned in the current round", "committedDate": "2020-08-10T07:47:23Z", "type": "commit"}]}