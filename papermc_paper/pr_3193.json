{"pr_number": 3193, "pr_title": "Implement Brigadier Mojang API", "pr_author": "aikar", "pr_createdAt": "2020-04-19T22:22:14Z", "pr_url": "https://github.com/PaperMC/Paper/pull/3193", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ==", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r411011051", "body": "Wasn't this supposed to be called AsyncPlayerSendCommands**Event**?", "bodyText": "Wasn't this supposed to be called AsyncPlayerSendCommandsEvent?", "bodyHTML": "<p dir=\"auto\">Wasn't this supposed to be called AsyncPlayerSendCommands<strong>Event</strong>?</p>", "author": "JavierKasunic", "createdAt": "2020-04-19T23:01:42Z", "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.destroystokyo.paper.event.brigadier;\n+\n+import com.mojang.brigadier.tree.RootCommandNode;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Fired any time a Brigadier RootCommandNode is generated for a player to inform the client of commands.\n+ * You may manipulate this CommandNode to change what the client sees.\n+ *\n+ * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n+ *\n+ * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n+ * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n+ *\n+ * Your logic should look like this:\n+ * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }\n+ *\n+ * If your logic is not safe to run asynchronously, only react to the synchronous version.\n+ */\n+public class AsyncPlayerSendCommands extends PlayerEvent {", "originalCommit": "96f24f8716ee709a891c4e7ab22a4126dc9e9387", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTQzNQ==", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r411011435", "bodyText": "good catch", "author": "aikar", "createdAt": "2020-04-19T23:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "76f1a9c9d2129cfd707f2de41616d3248358c1e5", "changed_code": [{"header": "diff --git a/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java b/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\nsimilarity index 60%\nrename from Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java\nrename to Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\nindex 9fc63c0d9..a275a85ad 100644\n--- a/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommands.java\n+++ b/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\n", "chunk": "@@ -13,31 +14,41 @@ import org.jetbrains.annotations.NotNull;\n  *\n  * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n  *\n+ * This event will fire before {@link org.bukkit.event.player.PlayerCommandSendEvent}, so no filtering has been done by\n+ * other plugins yet.\n+ *\n  * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n- * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * It is important that you check event.isAsynchronous() and event.hasFiredAsync() to ensure you only act once.\n  * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n  *\n  * Your logic should look like this:\n- * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }\n+ * if (event.isAsynchronous() || !event.hasFiredAsync()) { do stuff }\n  *\n  * If your logic is not safe to run asynchronously, only react to the synchronous version.\n+ * @deprecated Draft API - Subject to change until confirmed solves desired use cases\n  */\n-public class AsyncPlayerSendCommands extends PlayerEvent {\n+public class AsyncPlayerSendCommandsEvent <S extends BukkitBrigadierCommandSource> extends PlayerEvent {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private final RootCommandNode node;\n+    private final RootCommandNode<S> node;\n     private final boolean hasFiredAsync;\n \n-    public AsyncPlayerSendCommands(Player player, RootCommandNode node, boolean hasFiredAsync) {\n+    public AsyncPlayerSendCommandsEvent(Player player, RootCommandNode<S> node, boolean hasFiredAsync) {\n         super(player, !Bukkit.isPrimaryThread());\n         this.node = node;\n         this.hasFiredAsync = hasFiredAsync;\n     }\n \n-    public RootCommandNode getCommandNode() {\n+    /**\n+     * @return The full Root Command Node being sent to the client, which is mutable.\n+     */\n+    public RootCommandNode<S> getCommandNode() {\n         return node;\n     }\n \n+    /**\n+     * @return If this event has already fired asynchronously.\n+     */\n     public boolean hasFiredAsync() {\n         return hasFiredAsync;\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNjcwNQ==", "url": "https://github.com/PaperMC/Paper/pull/3193#discussion_r412306705", "body": "I know this is pseudo code, but for easy copy and pasting, this and the reference in line 20 should prolly say `isAsynchronous` since thats the proper name of the method.\r\n\r\nIntelliJ also reminded me, that this can be simplified to `event.isAsynchronous() || !event.hasFiredAsync()`", "bodyText": "I know this is pseudo code, but for easy copy and pasting, this and the reference in line 20 should prolly say isAsynchronous since thats the proper name of the method.\nIntelliJ also reminded me, that this can be simplified to event.isAsynchronous() || !event.hasFiredAsync()", "bodyHTML": "<p dir=\"auto\">I know this is pseudo code, but for easy copy and pasting, this and the reference in line 20 should prolly say <code>isAsynchronous</code> since thats the proper name of the method.</p>\n<p dir=\"auto\">IntelliJ also reminded me, that this can be simplified to <code>event.isAsynchronous() || !event.hasFiredAsync()</code></p>", "author": "MiniDigger", "createdAt": "2020-04-21T16:28:59Z", "path": "Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.destroystokyo.paper.event.brigadier;\n+\n+import com.mojang.brigadier.tree.RootCommandNode;\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Fired any time a Brigadier RootCommandNode is generated for a player to inform the client of commands.\n+ * You may manipulate this CommandNode to change what the client sees.\n+ *\n+ * This event may fire on login, world change, and permission rebuilds, by plugin request, and potentially future means.\n+ *\n+ * This event will fire before {@link org.bukkit.event.player.PlayerCommandSendEvent}, so no filtering has been done by\n+ * other plugins yet.\n+ *\n+ * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n+ * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n+ *\n+ * Your logic should look like this:\n+ * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }", "originalCommit": "7ed04a5e6c619935fac534f0f7a2a0bb9fe59a69", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76f1a9c9d2129cfd707f2de41616d3248358c1e5", "changed_code": [{"header": "diff --git a/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java b/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\nindex d840f39fc..a275a85ad 100644\n--- a/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\n+++ b/Paper-MojangAPI/src/main/java/com/destroystokyo/paper/event/brigadier/AsyncPlayerSendCommandsEvent.java\n", "chunk": "@@ -17,22 +18,22 @@ import org.jetbrains.annotations.NotNull;\n  * other plugins yet.\n  *\n  * WARNING: This event will potentially (and most likely) fire twice! Once for Async, and once again for Sync.\n- * It is important that you check event.isAsync() and event.hasFiredAsync() to ensure you only act once.\n+ * It is important that you check event.isAsynchronous() and event.hasFiredAsync() to ensure you only act once.\n  * If for some reason we are unable to send this asynchronously in the future, only the sync method will fire.\n  *\n  * Your logic should look like this:\n- * if (event.isAsync() || (!event.isAsync() && !event.hasFiredAsync())) { do stuff }\n+ * if (event.isAsynchronous() || !event.hasFiredAsync()) { do stuff }\n  *\n  * If your logic is not safe to run asynchronously, only react to the synchronous version.\n  * @deprecated Draft API - Subject to change until confirmed solves desired use cases\n  */\n-public class AsyncPlayerSendCommandsEvent extends PlayerEvent {\n+public class AsyncPlayerSendCommandsEvent <S extends BukkitBrigadierCommandSource> extends PlayerEvent {\n \n     private static final HandlerList handlers = new HandlerList();\n-    private final RootCommandNode node;\n+    private final RootCommandNode<S> node;\n     private final boolean hasFiredAsync;\n \n-    public AsyncPlayerSendCommandsEvent(Player player, RootCommandNode node, boolean hasFiredAsync) {\n+    public AsyncPlayerSendCommandsEvent(Player player, RootCommandNode<S> node, boolean hasFiredAsync) {\n         super(player, !Bukkit.isPrimaryThread());\n         this.node = node;\n         this.hasFiredAsync = hasFiredAsync;\n", "next_change": null}]}}, {"oid": "76f1a9c9d2129cfd707f2de41616d3248358c1e5", "url": "https://github.com/PaperMC/Paper/commit/76f1a9c9d2129cfd707f2de41616d3248358c1e5", "message": "Rebase master, More updates, fix generics on Send Event", "committedDate": "2020-04-23T08:16:24Z", "type": "forcePushed"}, {"oid": "fdf41b742d5e78e7e97659a829f43803c61efb8f", "url": "https://github.com/PaperMC/Paper/commit/fdf41b742d5e78e7e97659a829f43803c61efb8f", "message": "Implement Brigadier Mojang API\n\nThis is the start of a new module for Paper to add support for API's\nthat interface Mojang API's directly.\n\nThis allows us to version properly by MC version incase Mojang makes any major breaking changes.\n\nIt also lets us separate Mojang API's from Paper-API so our downstream friends at Glowstone\nwill not have to worry about Mojang code.\n\nAdds AsyncPlayerSendCommandsEvent\n  - Allows modifying on a per command basis what command data they see.\n\nAdds CommandRegisteredEvent\n  - Allows manipulating the CommandNode to add more children/metadata for the client", "committedDate": "2020-04-27T05:42:12Z", "type": "commit"}, {"oid": "fdf41b742d5e78e7e97659a829f43803c61efb8f", "url": "https://github.com/PaperMC/Paper/commit/fdf41b742d5e78e7e97659a829f43803c61efb8f", "message": "Implement Brigadier Mojang API\n\nThis is the start of a new module for Paper to add support for API's\nthat interface Mojang API's directly.\n\nThis allows us to version properly by MC version incase Mojang makes any major breaking changes.\n\nIt also lets us separate Mojang API's from Paper-API so our downstream friends at Glowstone\nwill not have to worry about Mojang code.\n\nAdds AsyncPlayerSendCommandsEvent\n  - Allows modifying on a per command basis what command data they see.\n\nAdds CommandRegisteredEvent\n  - Allows manipulating the CommandNode to add more children/metadata for the client", "committedDate": "2020-04-27T05:42:12Z", "type": "forcePushed"}]}