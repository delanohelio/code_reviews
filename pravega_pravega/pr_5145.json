{"pr_number": 5145, "pr_title": "Issue 5144: Force token refresh when segment store indicates token expiry", "pr_author": "ravisharda", "pr_createdAt": "2020-09-04T11:15:39Z", "pr_url": "https://github.com/pravega/pravega/pull/5145", "timeline": [{"oid": "3ac2c7d770f6c869884f06ce4ab779b5b7560b89", "url": "https://github.com/pravega/pravega/commit/3ac2c7d770f6c869884f06ce4ab779b5b7560b89", "message": "Add a test\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-04T08:25:24Z", "type": "commit"}, {"oid": "f2df59c754ab6b2e94fff06c5899c0699e0d751b", "url": "https://github.com/pravega/pravega/commit/f2df59c754ab6b2e94fff06c5899c0699e0d751b", "message": "Token expiry signaling changes and tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-04T11:10:26Z", "type": "commit"}, {"oid": "4a31a87be7bec4c15ccc25521bf592627510a5d9", "url": "https://github.com/pravega/pravega/commit/4a31a87be7bec4c15ccc25521bf592627510a5d9", "message": "Fix tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-05T03:04:08Z", "type": "commit"}, {"oid": "1127aee9812dffa582b596bf0027462d28d6a780", "url": "https://github.com/pravega/pravega/commit/1127aee9812dffa582b596bf0027462d28d6a780", "message": "Remove commented lines.\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-05T03:04:32Z", "type": "commit"}, {"oid": "571c909faa27cac6c3d0ff2e7a2f01a4f8e5f095", "url": "https://github.com/pravega/pravega/commit/571c909faa27cac6c3d0ff2e7a2f01a4f8e5f095", "message": "Add tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-06T02:37:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTQwNw==", "url": "https://github.com/pravega/pravega/pull/5145#discussion_r484165407", "body": "TokenExpirySignal has a higher priority and hence should be checked before returning a token right ?", "bodyText": "TokenExpirySignal has a higher priority and hence should be checked before returning a token right ?", "bodyHTML": "<p dir=\"auto\">TokenExpirySignal has a higher priority and hence should be checked before returning a token right ?</p>", "author": "shrids", "createdAt": "2020-09-07T03:28:58Z", "path": "client/src/main/java/io/pravega/client/security/auth/JwtTokenProviderImpl.java", "diffHunk": "@@ -132,17 +134,22 @@ private JwtTokenProviderImpl(Controller controllerClient, String scopeName, Stri\n     @Override\n     public CompletableFuture<String> retrieveToken() {\n         DelegationToken currentToken = this.delegationToken.get();\n-\n+        final CompletableFuture<String> result;\n         if (currentToken == null) {\n-            return this.refreshToken();\n+            result = this.refreshToken();\n         } else if (currentToken.getExpiryTime() == null) {\n-            return CompletableFuture.completedFuture(currentToken.getValue());\n+            result = CompletableFuture.completedFuture(currentToken.getValue());", "originalCommit": "571c909faa27cac6c3d0ff2e7a2f01a4f8e5f095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI5ODgzNg==", "url": "https://github.com/pravega/pravega/pull/5145#discussion_r484298836", "bodyText": "If the token has no expiry time set on it, the signal wouldn't be interpreted as token having been expired. Therefore, we do this check before the check for the signal.", "author": "ravisharda", "createdAt": "2020-09-07T09:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3MDk1MQ==", "url": "https://github.com/pravega/pravega/pull/5145#discussion_r484170951", "body": "would this cause a change to the SegmentHelper logic at https://github.com/pravega/pravega/blob/4f7be177996bd5d3a05e2ab6f117d5a40b1e2207/controller/src/main/java/io/pravega/controller/server/SegmentHelper.java#L624-L641 ?", "bodyText": "would this cause a change to the SegmentHelper logic at \n  \n    \n      pravega/controller/src/main/java/io/pravega/controller/server/SegmentHelper.java\n    \n    \n        Lines 624 to 641\n      in\n      4f7be17\n    \n    \n    \n    \n\n        \n          \n           private <T extends Request & WireCommand> CompletableFuture<Reply> sendRequest(RawClient connection, long requestId, T request) { \n        \n\n        \n          \n               CompletableFuture<Reply> future = Futures.futureWithTimeout(() -> connection.sendRequest(requestId, request), timeout.get(), \"request\", executorService); \n        \n\n        \n          \n               return future \n        \n\n        \n          \n                       .exceptionally(e -> { \n        \n\n        \n          \n                           Throwable unwrap = Exceptions.unwrap(e); \n        \n\n        \n          \n                           if (unwrap instanceof ConnectionFailedException || unwrap instanceof ConnectionClosedException) { \n        \n\n        \n          \n                               log.warn(requestId, \"Connection dropped\"); \n        \n\n        \n          \n                               throw new WireCommandFailedException(request.getType(), WireCommandFailedException.Reason.ConnectionFailed); \n        \n\n        \n          \n                           } else if (unwrap instanceof AuthenticationException) { \n        \n\n        \n          \n                               log.warn(requestId, \"Authentication Exception\"); \n        \n\n        \n          \n                               throw new WireCommandFailedException(request.getType(), WireCommandFailedException.Reason.AuthFailed); \n        \n\n        \n          \n                           } else if (unwrap instanceof TimeoutException) { \n        \n\n        \n          \n                               log.warn(requestId, \"Request timedout.\"); \n        \n\n        \n          \n                               throw new WireCommandFailedException(request.getType(), WireCommandFailedException.Reason.ConnectionFailed); \n        \n\n        \n          \n                           } else { \n        \n\n        \n          \n                               log.error(requestId, \"Request failed\", e); \n        \n\n        \n          \n                               throw new CompletionException(e); \n        \n\n        \n          \n                           } \n        \n    \n  \n\n ?", "bodyHTML": "<p dir=\"auto\">would this cause a change to the SegmentHelper logic at <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pravega/pravega/blob/4f7be177996bd5d3a05e2ab6f117d5a40b1e2207/controller/src/main/java/io/pravega/controller/server/SegmentHelper.java#L624-L641\">pravega/controller/src/main/java/io/pravega/controller/server/SegmentHelper.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 624 to 641\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pravega/pravega/commit/4f7be177996bd5d3a05e2ab6f117d5a40b1e2207\">4f7be17</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L624\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"624\"></td>\n          <td id=\"LC624\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">&lt;<span class=\"pl-smi\">T</span> extends <span class=\"pl-smi\">Request</span> &amp; <span class=\"pl-smi\">WireCommand</span>&gt;</span> <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">Reply</span>&gt;</span> <span class=\"pl-en\">sendRequest</span>(<span class=\"pl-smi\">RawClient</span> <span class=\"pl-v\">connection</span>, <span class=\"pl-k\">long</span> <span class=\"pl-v\">requestId</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-v\">request</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L625\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"625\"></td>\n          <td id=\"LC625\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">Reply</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Futures</span><span class=\"pl-k\">.</span>futureWithTimeout(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> connection<span class=\"pl-k\">.</span>sendRequest(requestId, request), timeout<span class=\"pl-k\">.</span>get(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>request<span class=\"pl-pds\">\"</span></span>, executorService); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L626\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"626\"></td>\n          <td id=\"LC626\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> future </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L627\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"627\"></td>\n          <td id=\"LC627\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             .exceptionally(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L628\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"628\"></td>\n          <td id=\"LC628\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 <span class=\"pl-smi\">Throwable</span> unwrap <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Exceptions</span><span class=\"pl-k\">.</span>unwrap(e); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L629\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"629\"></td>\n          <td id=\"LC629\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 <span class=\"pl-k\">if</span> (unwrap <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ConnectionFailedException</span> <span class=\"pl-k\">||</span> unwrap <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ConnectionClosedException</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L630\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"630\"></td>\n          <td id=\"LC630\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     log<span class=\"pl-k\">.</span>warn(requestId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Connection dropped<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L631\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"631\"></td>\n          <td id=\"LC631\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WireCommandFailedException</span>(request<span class=\"pl-k\">.</span>getType(), <span class=\"pl-smi\">WireCommandFailedException</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Reason</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">ConnectionFailed</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L632\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"632\"></td>\n          <td id=\"LC632\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (unwrap <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">AuthenticationException</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L633\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"633\"></td>\n          <td id=\"LC633\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     log<span class=\"pl-k\">.</span>warn(requestId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Authentication Exception<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L634\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"634\"></td>\n          <td id=\"LC634\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WireCommandFailedException</span>(request<span class=\"pl-k\">.</span>getType(), <span class=\"pl-smi\">WireCommandFailedException</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Reason</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AuthFailed</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L635\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"635\"></td>\n          <td id=\"LC635\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (unwrap <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">TimeoutException</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L636\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"636\"></td>\n          <td id=\"LC636\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     log<span class=\"pl-k\">.</span>warn(requestId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Request timedout.<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L637\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"637\"></td>\n          <td id=\"LC637\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WireCommandFailedException</span>(request<span class=\"pl-k\">.</span>getType(), <span class=\"pl-smi\">WireCommandFailedException</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Reason</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">ConnectionFailed</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L638\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"638\"></td>\n          <td id=\"LC638\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L639\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"639\"></td>\n          <td id=\"LC639\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     log<span class=\"pl-k\">.</span>error(requestId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Request failed<span class=\"pl-pds\">\"</span></span>, e); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L640\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"640\"></td>\n          <td id=\"LC640\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CompletionException</span>(e); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L641\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"641\"></td>\n          <td id=\"LC641\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n ?</p>", "author": "shrids", "createdAt": "2020-09-07T03:58:23Z", "path": "client/src/main/java/io/pravega/client/connection/impl/RawClient.java", "diffHunk": "@@ -78,7 +79,11 @@ public void processingFailure(Exception error) {\n         @Override\n         public void authTokenCheckFailed(WireCommands.AuthTokenCheckFailed authTokenCheckFailed) {\n             log.warn(\"Auth token check failed on segment {} with {}\", segmentId, authTokenCheckFailed);\n-            closeConnection(new AuthenticationException(authTokenCheckFailed.toString()));\n+            if (authTokenCheckFailed.isTokenExpired()) {\n+                closeConnection(new TokenExpiredException(authTokenCheckFailed.getServerStackTrace()));", "originalCommit": "571c909faa27cac6c3d0ff2e7a2f01a4f8e5f095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI5OTI3Mw==", "url": "https://github.com/pravega/pravega/pull/5145#discussion_r484299273", "bodyText": "Thanks. I've pushed the fix in the latest commit.", "author": "ravisharda", "createdAt": "2020-09-07T09:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3MDk1MQ=="}], "type": "inlineReview"}, {"oid": "f65b3d0d21d0a508fc9dabc11f182baf223964ea", "url": "https://github.com/pravega/pravega/commit/f65b3d0d21d0a508fc9dabc11f182baf223964ea", "message": "Address review comments.\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-07T07:55:41Z", "type": "commit"}, {"oid": "d2a9b13725e3d5da4469ed9736f1047e5165c84d", "url": "https://github.com/pravega/pravega/commit/d2a9b13725e3d5da4469ed9736f1047e5165c84d", "message": "Merge branch 'master' into forced-token-renewal-on-expiry", "committedDate": "2020-09-07T13:07:34Z", "type": "commit"}, {"oid": "74e14cfc46ae05626e0d002dad38977fb6954030", "url": "https://github.com/pravega/pravega/commit/74e14cfc46ae05626e0d002dad38977fb6954030", "message": "Add tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-07T15:18:45Z", "type": "commit"}, {"oid": "77f2217501eac6c91e85e885170562c4f758beb3", "url": "https://github.com/pravega/pravega/commit/77f2217501eac6c91e85e885170562c4f758beb3", "message": "Merge remote-tracking branch 'origin/forced-token-renewal-on-expiry' into forced-token-renewal-on-expiry", "committedDate": "2020-09-07T15:19:10Z", "type": "commit"}, {"oid": "56828b9ede3b82fa09e5d978e6d82aafaf95d74c", "url": "https://github.com/pravega/pravega/commit/56828b9ede3b82fa09e5d978e6d82aafaf95d74c", "message": "Turn repeated code into reusable\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>", "committedDate": "2020-09-08T05:14:27Z", "type": "commit"}, {"oid": "7fabaa45e29356cced9e61d0cb614236aff59aaa", "url": "https://github.com/pravega/pravega/commit/7fabaa45e29356cced9e61d0cb614236aff59aaa", "message": "Merge branch 'master' into forced-token-renewal-on-expiry", "committedDate": "2020-09-08T05:15:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI2NTczMg==", "url": "https://github.com/pravega/pravega/pull/5145#discussion_r485265732", "body": "This should be done inside of refreshToken in case on of the other branches occurs right before this is set.", "bodyText": "This should be done inside of refreshToken in case on of the other branches occurs right before this is set.", "bodyHTML": "<p dir=\"auto\">This should be done inside of refreshToken in case on of the other branches occurs right before this is set.</p>", "author": "tkaitchuck", "createdAt": "2020-09-09T00:23:00Z", "path": "client/src/main/java/io/pravega/client/security/auth/JwtTokenProviderImpl.java", "diffHunk": "@@ -132,17 +134,22 @@ private JwtTokenProviderImpl(Controller controllerClient, String scopeName, Stri\n     @Override\n     public CompletableFuture<String> retrieveToken() {\n         DelegationToken currentToken = this.delegationToken.get();\n-\n+        final CompletableFuture<String> result;\n         if (currentToken == null) {\n-            return this.refreshToken();\n+            result = this.refreshToken();\n         } else if (currentToken.getExpiryTime() == null) {\n-            return CompletableFuture.completedFuture(currentToken.getValue());\n+            result = CompletableFuture.completedFuture(currentToken.getValue());\n+        } else if (this.tokenExpirySignal.get()) {\n+            log.debug(\"Token was signaled as expired for scope/stream {}/{}\", this.scopeName, this.streamName);\n+            result = refreshToken();\n+            this.tokenExpirySignal.compareAndSet(true, false);", "originalCommit": "7fabaa45e29356cced9e61d0cb614236aff59aaa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}