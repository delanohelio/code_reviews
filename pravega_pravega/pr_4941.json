{"pr_number": 4941, "pr_title": "Issue 4940: Propagating Transaction Exceptions to the caller", "pr_author": "ravibeta", "pr_createdAt": "2020-07-12T02:06:49Z", "pr_url": "https://github.com/pravega/pravega/pull/4941", "timeline": [{"oid": "68daa829a652f24d76a4b34d30879dc86d2ca034", "url": "https://github.com/pravega/pravega/commit/68daa829a652f24d76a4b34d30879dc86d2ca034", "message": "throws TxnFailedException\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-12T02:03:07Z", "type": "commit"}, {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "url": "https://github.com/pravega/pravega/commit/664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "message": ":test:integration:checkstyleMain\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-12T02:51:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDQ4NA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274484", "body": "This comment does not add value. Can you please explain in which case, as an example, this method will throw this exception?", "bodyText": "This comment does not add value. Can you please explain in which case, as an example, this method will throw this exception?", "bodyHTML": "<p dir=\"auto\">This comment does not add value. Can you please explain in which case, as an example, this method will throw this exception?</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:26:21Z", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyOTA2NQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455929065", "bodyText": "Yes Enrico it does not throw TxnFailedException anymore.", "author": "ravibeta", "createdAt": "2020-07-16T16:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/Transaction.java b/client/src/main/java/io/pravega/client/stream/Transaction.java\nindex a0085eac4..893779772 100644\n--- a/client/src/main/java/io/pravega/client/stream/Transaction.java\n+++ b/client/src/main/java/io/pravega/client/stream/Transaction.java\n", "chunk": "@@ -100,7 +100,7 @@ public interface Transaction<Type> {\n     /**\n      * Gets the status of the transaction.\n      *\n-     *  @throws TxnFailedException This exception could be thrown on checkStatus\n+     *  @throws TxnFailedException The Transaction is no longer in state {@link Status#OPEN}\n      *  @return Current status of the transaction\n      */\n     Status checkStatus() throws TxnFailedException;\n", "next_change": {"commit": "55246e44d26633f364c90e9b50e46964acc6edfd", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/Transaction.java b/client/src/main/java/io/pravega/client/stream/Transaction.java\nindex 893779772..bd40a604c 100644\n--- a/client/src/main/java/io/pravega/client/stream/Transaction.java\n+++ b/client/src/main/java/io/pravega/client/stream/Transaction.java\n", "chunk": "@@ -100,8 +100,7 @@ public interface Transaction<Type> {\n     /**\n      * Gets the status of the transaction.\n      *\n-     *  @throws TxnFailedException The Transaction is no longer in state {@link Status#OPEN}\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus() throws TxnFailedException;\n+    Status checkStatus();\n }\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDUzNw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274537", "body": "This is weird from the user point of view.\r\nTxnFailedException sounds like the transaction is broken or you broke it by calling this method.\r\n\r\nHere I would expect some new TxNotValidException", "bodyText": "This is weird from the user point of view.\nTxnFailedException sounds like the transaction is broken or you broke it by calling this method.\nHere I would expect some new TxNotValidException", "bodyHTML": "<p dir=\"auto\">This is weird from the user point of view.<br>\nTxnFailedException sounds like the transaction is broken or you broke it by calling this method.</p>\n<p dir=\"auto\">Here I would expect some new TxNotValidException</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:26:58Z", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus();\n+    Status checkStatus() throws TxnFailedException;", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNjM3MA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454016370", "bodyText": "Yes Status includes aborted.", "author": "tkaitchuck", "createdAt": "2020-07-13T23:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/Transaction.java b/client/src/main/java/io/pravega/client/stream/Transaction.java\nindex a0085eac4..893779772 100644\n--- a/client/src/main/java/io/pravega/client/stream/Transaction.java\n+++ b/client/src/main/java/io/pravega/client/stream/Transaction.java\n", "chunk": "@@ -100,7 +100,7 @@ public interface Transaction<Type> {\n     /**\n      * Gets the status of the transaction.\n      *\n-     *  @throws TxnFailedException This exception could be thrown on checkStatus\n+     *  @throws TxnFailedException The Transaction is no longer in state {@link Status#OPEN}\n      *  @return Current status of the transaction\n      */\n     Status checkStatus() throws TxnFailedException;\n", "next_change": {"commit": "55246e44d26633f364c90e9b50e46964acc6edfd", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/Transaction.java b/client/src/main/java/io/pravega/client/stream/Transaction.java\nindex 893779772..bd40a604c 100644\n--- a/client/src/main/java/io/pravega/client/stream/Transaction.java\n+++ b/client/src/main/java/io/pravega/client/stream/Transaction.java\n", "chunk": "@@ -100,8 +100,7 @@ public interface Transaction<Type> {\n     /**\n      * Gets the status of the transaction.\n      *\n-     *  @throws TxnFailedException The Transaction is no longer in state {@link Status#OPEN}\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus() throws TxnFailedException;\n+    Status checkStatus();\n }\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDU3Mw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274573", "body": "This kind of comments are not useful to the user", "bodyText": "This kind of comments are not useful to the user", "bodyHTML": "<p dir=\"auto\">This kind of comments are not useful to the user</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:27:32Z", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyOTMxNw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455929317", "bodyText": "Yes Enrico", "author": "ravibeta", "createdAt": "2020-07-16T16:50:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDU3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\nindex 852a7ee47..3d33d4706 100644\n--- a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n+++ b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n", "chunk": "@@ -26,7 +26,7 @@ public interface TransactionalEventStreamWriter<Type> extends AutoCloseable  {\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n-     * @throws TxnFailedException This exception could be thrown on beginTxn\n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n     Transaction<Type> beginTxn() throws TxnFailedException;\n", "next_change": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\nindex 3d33d4706..f8a613fc2 100644\n--- a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n+++ b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n", "chunk": "@@ -26,19 +26,17 @@ public interface TransactionalEventStreamWriter<Type> extends AutoCloseable  {\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn() throws TxnFailedException;\n+    Transaction<Type> beginTxn();\n \n     /**\n      * Returns a previously created transaction.\n      * \n      * @param transactionId The result retained from calling {@link Transaction#getTxnId()}\n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return Transaction object with given UUID\n      */\n-    Transaction<Type> getTxn(UUID transactionId) throws TxnFailedException;\n+    Transaction<Type> getTxn(UUID transactionId);\n \n     /**\n      * Returns the configuration that this writer was created with.\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274667", "body": "How can a transaction that does not exist can fail?\r\nMaybe it is fine to have this error here but it deserves a little explanation in javadocs", "bodyText": "How can a transaction that does not exist can fail?\nMaybe it is fine to have this error here but it deserves a little explanation in javadocs", "bodyHTML": "<p dir=\"auto\">How can a transaction that does not exist can fail?<br>\nMaybe it is fine to have this error here but it deserves a little explanation in javadocs</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:28:42Z", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn();\n+    Transaction<Type> beginTxn() throws TxnFailedException;", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMTMwMA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455931300", "bodyText": "Yes Enrico", "author": "ravibeta", "createdAt": "2020-07-16T16:53:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\nindex 852a7ee47..3d33d4706 100644\n--- a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n+++ b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n", "chunk": "@@ -26,7 +26,7 @@ public interface TransactionalEventStreamWriter<Type> extends AutoCloseable  {\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n-     * @throws TxnFailedException This exception could be thrown on beginTxn\n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n     Transaction<Type> beginTxn() throws TxnFailedException;\n", "next_change": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\nindex 3d33d4706..f8a613fc2 100644\n--- a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n+++ b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n", "chunk": "@@ -26,19 +26,17 @@ public interface TransactionalEventStreamWriter<Type> extends AutoCloseable  {\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn() throws TxnFailedException;\n+    Transaction<Type> beginTxn();\n \n     /**\n      * Returns a previously created transaction.\n      * \n      * @param transactionId The result retained from calling {@link Transaction#getTxnId()}\n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return Transaction object with given UUID\n      */\n-    Transaction<Type> getTxn(UUID transactionId) throws TxnFailedException;\n+    Transaction<Type> getTxn(UUID transactionId);\n \n     /**\n      * Returns the configuration that this writer was created with.\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDc2Ng==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274766", "body": "Methods that return a CP should not throw but return a failed CompletableFuture", "bodyText": "Methods that return a CP should not throw but return a failed CompletableFuture", "bodyHTML": "<p dir=\"auto\">Methods that return a CP should not throw but return a failed CompletableFuture</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:30:01Z", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -81,10 +82,18 @@ protected void doStart() {\n         notifyStarted();\n         this.runTask = Futures\n                 .delayedFuture(INITIAL_DELAY, this.executorService)\n-                .thenCompose(v -> run());\n+                .thenCompose(v -> runWithException());\n         this.runTask.whenComplete((r, ex) -> stopAsync());\n     }\n \n+    private CompletableFuture<Void> runWithException() {\n+        try {\n+            return run();\n+        } catch (TxnFailedException ex) {\n+            throw new RuntimeException(ex);", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzg2Nw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927867", "bodyText": "Yes Enrico, these comments are outdated.", "author": "ravibeta", "createdAt": "2020-07-16T16:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\nindex 01db24280..14921c1fb 100644\n--- a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n+++ b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n", "chunk": "@@ -90,7 +90,7 @@ abstract class Actor extends AbstractService implements AutoCloseable {\n         try {\n             return run();\n         } catch (TxnFailedException ex) {\n-            throw new RuntimeException(ex);\n+            return Futures.failedFuture(ex);\n         }\n     }\n \n", "next_change": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\nindex 14921c1fb..712cf09e2 100644\n--- a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n+++ b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n", "chunk": "@@ -82,18 +81,10 @@ abstract class Actor extends AbstractService implements AutoCloseable {\n         notifyStarted();\n         this.runTask = Futures\n                 .delayedFuture(INITIAL_DELAY, this.executorService)\n-                .thenCompose(v -> runWithException());\n+                .thenCompose(v -> run());\n         this.runTask.whenComplete((r, ex) -> stopAsync());\n     }\n \n-    private CompletableFuture<Void> runWithException() {\n-        try {\n-            return run();\n-        } catch (TxnFailedException ex) {\n-            return Futures.failedFuture(ex);\n-        }\n-    }\n-\n     @Override\n     protected void doStop() {\n         Exceptions.checkNotClosed(this.closed.get(), this);\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDgxMg==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274812", "body": "The same here", "bodyText": "The same here", "bodyHTML": "<p dir=\"auto\">The same here</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:30:21Z", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -119,7 +128,7 @@ protected void doStop() {\n     /**\n      * Executes the role of this Actor.\n      */\n-    protected abstract CompletableFuture<Void> run();\n+    protected abstract CompletableFuture<Void> run() throws TxnFailedException;", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzc2NQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927765", "bodyText": "Yes Enrico", "author": "ravibeta", "createdAt": "2020-07-16T16:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\nindex 01db24280..712cf09e2 100644\n--- a/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n+++ b/test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java\n", "chunk": "@@ -128,7 +119,7 @@ abstract class Actor extends AbstractService implements AutoCloseable {\n     /**\n      * Executes the role of this Actor.\n      */\n-    protected abstract CompletableFuture<Void> run() throws TxnFailedException;\n+    protected abstract CompletableFuture<Void> run();\n \n     /**\n      * Gets a value indicating the Id to use in logging for this Actor.\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDg3NQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274875", "body": "return a failed future  here and in other points", "bodyText": "return a failed future  here and in other points", "bodyHTML": "<p dir=\"auto\">return a failed future  here and in other points</p>", "author": "eolivelli", "createdAt": "2020-07-12T06:30:55Z", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java", "diffHunk": "@@ -258,5 +261,13 @@ private void postStreamDeletion(String name) {\n         this.state.recordDeletedStream(name);\n     }\n \n+    private CompletableFuture<Void> deleteStreamThrowing(String name, Duration timeout) {\n+        try {\n+            return this.store.deleteStream(name, this.config.getTimeout());\n+        } catch (TxnFailedException ex) {\n+            throw new CompletionException(ex);", "originalCommit": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzY1NA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927654", "bodyText": "Yes Enrico", "author": "ravibeta", "createdAt": "2020-07-16T16:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "changed_code": [{"header": "diff --git a/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java b/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\nindex 0917c3f57..8f91aa08d 100644\n--- a/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\n+++ b/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\n", "chunk": "@@ -265,7 +265,7 @@ class StreamProducerDataSource extends ProducerDataSource<Event> {\n         try {\n             return this.store.deleteStream(name, this.config.getTimeout());\n         } catch (TxnFailedException ex) {\n-            throw new CompletionException(ex);\n+            return Futures.failedFuture(ex);\n         }\n     }\n \n", "next_change": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java b/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\nindex 8f91aa08d..f88f3972e 100644\n--- a/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\n+++ b/test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java\n", "chunk": "@@ -261,13 +258,5 @@ class StreamProducerDataSource extends ProducerDataSource<Event> {\n         this.state.recordDeletedStream(name);\n     }\n \n-    private CompletableFuture<Void> deleteStreamThrowing(String name, Duration timeout) {\n-        try {\n-            return this.store.deleteStream(name, this.config.getTimeout());\n-        } catch (TxnFailedException ex) {\n-            return Futures.failedFuture(ex);\n-        }\n-    }\n-\n     //endregion\n }\n", "next_change": null}]}}]}}, {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "url": "https://github.com/pravega/pravega/commit/22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "message": "throws TxnFailedException\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-13T23:29:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNjA5MQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454016091", "body": "This is a bit confusing. If failing the transaction fails it throws `TxnFailedException` but this is exactly the opposite of what happened. If the transaction has failed then this should return successfully.", "bodyText": "This is a bit confusing. If failing the transaction fails it throws TxnFailedException but this is exactly the opposite of what happened. If the transaction has failed then this should return successfully.", "bodyHTML": "<p dir=\"auto\">This is a bit confusing. If failing the transaction fails it throws <code>TxnFailedException</code> but this is exactly the opposite of what happened. If the transaction has failed then this should return successfully.</p>", "author": "tkaitchuck", "createdAt": "2020-07-13T23:57:48Z", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE", "originalCommit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/Transaction.java b/client/src/main/java/io/pravega/client/stream/Transaction.java\nindex 893779772..6866296d1 100644\n--- a/client/src/main/java/io/pravega/client/stream/Transaction.java\n+++ b/client/src/main/java/io/pravega/client/stream/Transaction.java\n", "chunk": "@@ -92,16 +92,13 @@ public interface Transaction<Type> {\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n-     *\n-     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort() throws TxnFailedException;\n+    void abort();\n \n     /**\n      * Gets the status of the transaction.\n      *\n-     *  @throws TxnFailedException The Transaction is no longer in state {@link Status#OPEN}\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus() throws TxnFailedException;\n+    Status checkStatus();\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzIxOQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017219", "body": "I don't think we want this behavior. \r\nIt seems legitimate to me to do:\r\n```\r\ngetTxn(id).checkStatus()\r\n```\r\nIn this case I would expect the result to return whatever the status was even if it is not `OPEN`. \r\nIf the code doesn't work this way. we should open an issue.", "bodyText": "I don't think we want this behavior.\nIt seems legitimate to me to do:\ngetTxn(id).checkStatus()\n\nIn this case I would expect the result to return whatever the status was even if it is not OPEN.\nIf the code doesn't work this way. we should open an issue.", "bodyHTML": "<p dir=\"auto\">I don't think we want this behavior.<br>\nIt seems legitimate to me to do:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"getTxn(id).checkStatus()\"><pre><code>getTxn(id).checkStatus()\n</code></pre></div>\n<p dir=\"auto\">In this case I would expect the result to return whatever the status was even if it is not <code>OPEN</code>.<br>\nIf the code doesn't work this way. we should open an issue.</p>", "author": "tkaitchuck", "createdAt": "2020-07-14T00:01:27Z", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn();\n+    Transaction<Type> beginTxn() throws TxnFailedException;\n \n     /**\n      * Returns a previously created transaction.\n      * \n      * @param transactionId The result retained from calling {@link Transaction#getTxnId()}\n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}", "originalCommit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\nindex 3d33d4706..f8a613fc2 100644\n--- a/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n+++ b/client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java\n", "chunk": "@@ -26,19 +26,17 @@ public interface TransactionalEventStreamWriter<Type> extends AutoCloseable  {\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn() throws TxnFailedException;\n+    Transaction<Type> beginTxn();\n \n     /**\n      * Returns a previously created transaction.\n      * \n      * @param transactionId The result retained from calling {@link Transaction#getTxnId()}\n-     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return Transaction object with given UUID\n      */\n-    Transaction<Type> getTxn(UUID transactionId) throws TxnFailedException;\n+    Transaction<Type> getTxn(UUID transactionId);\n \n     /**\n      * Returns the configuration that this writer was created with.\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzU0MA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017540", "body": "I think what we really want if for the controller client to dictate the exception type. \r\nSo instead of converting this, I think we should instead call `getThrowingException` which will just pass up whatever the underlying error was.", "bodyText": "I think what we really want if for the controller client to dictate the exception type.\nSo instead of converting this, I think we should instead call getThrowingException which will just pass up whatever the underlying error was.", "bodyHTML": "<p dir=\"auto\">I think what we really want if for the controller client to dictate the exception type.<br>\nSo instead of converting this, I think we should instead call <code>getThrowingException</code> which will just pass up whatever the underlying error was.</p>", "author": "tkaitchuck", "createdAt": "2020-07-14T00:02:33Z", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -144,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                getAndHandleExceptions(controller.abortTransaction(stream, txId), TxnFailedException::new);", "originalCommit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\nindex 536e3ac4c..b0e2db78b 100644\n--- a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n+++ b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n", "chunk": "@@ -144,15 +143,19 @@ public class TransactionalEventStreamWriterImpl<Type> implements TransactionalEv\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), TxnFailedException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));\n                 closed.set(true);\n             }\n         }\n \n         @Override\n-        public Status checkStatus() throws TxnFailedException {\n-            log.info(\"Check transaction status {}\", txId);\n-            return getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), TxnFailedException::new);\n+        public Status checkStatus() {\n+            try {\n+                log.info(\"Check transaction status {}\", txId);\n+                return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));\n+            } catch (RuntimeException e) {\n+                return Transaction.Status.ABORTED;\n+            }\n         }\n \n         @Override\n", "next_change": {"commit": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\nindex b0e2db78b..e209e2516 100644\n--- a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n+++ b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n", "chunk": "@@ -150,12 +151,8 @@ public class TransactionalEventStreamWriterImpl<Type> implements TransactionalEv\n \n         @Override\n         public Status checkStatus() {\n-            try {\n-                log.info(\"Check transaction status {}\", txId);\n-                return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));\n-            } catch (RuntimeException e) {\n-                return Transaction.Status.ABORTED;\n-            }\n+            log.info(\"Check transaction status {}\", txId);\n+            return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));\n         }\n \n         @Override\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzYwNQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017605", "body": "Same here", "bodyText": "Same here", "bodyHTML": "<p dir=\"auto\">Same here</p>", "author": "tkaitchuck", "createdAt": "2020-07-14T00:02:44Z", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -176,9 +176,9 @@ private void throwIfClosed() throws TxnFailedException {\n     }\n \n     @Override\n-    public Transaction<Type> beginTxn() {\n+    public Transaction<Type> beginTxn() throws TxnFailedException {\n         TxnSegments txnSegments = getAndHandleExceptions(controller.createTransaction(stream, config.getTransactionTimeoutTime()),\n-                RuntimeException::new);\n+                TxnFailedException::new);", "originalCommit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\nindex 536e3ac4c..b0e2db78b 100644\n--- a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n+++ b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n", "chunk": "@@ -176,9 +179,8 @@ public class TransactionalEventStreamWriterImpl<Type> implements TransactionalEv\n     }\n \n     @Override\n-    public Transaction<Type> beginTxn() throws TxnFailedException {\n-        TxnSegments txnSegments = getAndHandleExceptions(controller.createTransaction(stream, config.getTransactionTimeoutTime()),\n-                TxnFailedException::new);\n+    public Transaction<Type> beginTxn() {\n+        TxnSegments txnSegments = Futures.getThrowingException(controller.createTransaction(stream, config.getTransactionTimeoutTime()));\n         log.info(\"Transaction {} created\", txnSegments.getTxnId());\n         UUID txnId = txnSegments.getTxnId();\n         Map<Segment, SegmentTransaction<Type>> transactions = new HashMap<>();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzc4NQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017785", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "tkaitchuck", "createdAt": "2020-07-14T00:03:27Z", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -198,16 +198,16 @@ private void throwIfClosed() throws TxnFailedException {\n     }\n \n     @Override\n-    public Transaction<Type> getTxn(UUID txId) {\n+    public Transaction<Type> getTxn(UUID txId) throws TxnFailedException {\n         // check if the transaction is open.\n-        Status status = getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), RuntimeException::new);\n+        Status status = getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), TxnFailedException::new);", "originalCommit": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "changed_code": [{"header": "diff --git a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\nindex 536e3ac4c..b0e2db78b 100644\n--- a/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n+++ b/client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java\n", "chunk": "@@ -198,16 +200,16 @@ public class TransactionalEventStreamWriterImpl<Type> implements TransactionalEv\n     }\n \n     @Override\n-    public Transaction<Type> getTxn(UUID txId) throws TxnFailedException {\n+    public Transaction<Type> getTxn(UUID txId) {\n         // check if the transaction is open.\n-        Status status = getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), TxnFailedException::new);\n+        Status status = Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));\n         if (status != Status.OPEN) {\n             return new TransactionImpl<>(writerId, txId, controller, stream);\n         }\n \n         // get the segments corresponding to the transaction.\n-        StreamSegments segments = getAndHandleExceptions(\n-                controller.getEpochSegments(stream.getScope(), stream.getStreamName(), getEpoch(txId)), TxnFailedException::new);\n+        StreamSegments segments = Futures.getThrowingException(\n+                controller.getEpochSegments(stream.getScope(), stream.getStreamName(), getEpoch(txId)));\n         assert segments != null : \"Epoch segments returned is null\";\n         Preconditions.checkState(segments.getSegments().size() > 0, \"There should be at least 1 epoch segment\");\n \n", "next_change": null}]}}, {"oid": "abda6de53f8603a5cafbc02302666cc0f8f8f857", "url": "https://github.com/pravega/pravega/commit/abda6de53f8603a5cafbc02302666cc0f8f8f857", "message": "fix test\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-14T01:02:06Z", "type": "commit"}, {"oid": "18a2edb23fbee090629552847463aaec92b24a0f", "url": "https://github.com/pravega/pravega/commit/18a2edb23fbee090629552847463aaec92b24a0f", "message": "fix checkstyleMain\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-14T02:15:56Z", "type": "commit"}, {"oid": "55246e44d26633f364c90e9b50e46964acc6edfd", "url": "https://github.com/pravega/pravega/commit/55246e44d26633f364c90e9b50e46964acc6edfd", "message": "no throw from Transaction.checkStatus\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-14T16:53:28Z", "type": "commit"}, {"oid": "b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "url": "https://github.com/pravega/pravega/commit/b76cf007f27ad91c24dc9a1821dd1a96a5bd31fa", "message": "Use Futures.getThrowingException instead of Futures.getAndHandleExceptions\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-15T15:22:01Z", "type": "commit"}, {"oid": "4681d7be0b518cf7d41f51d0e48afb60fd6c12ad", "url": "https://github.com/pravega/pravega/commit/4681d7be0b518cf7d41f51d0e48afb60fd6c12ad", "message": "Merge branch 'master' into issue-4940-txnfailedexception", "committedDate": "2020-07-15T16:28:20Z", "type": "commit"}, {"oid": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4", "url": "https://github.com/pravega/pravega/commit/7c8ee1458493fe05c04b0c60732f48d2c131d8b4", "message": "propagate exceptions\n\nSigned-off-by: Ravi Rajamani <ravi.rajamani@emc.com>", "committedDate": "2020-07-15T17:12:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5Mzk0MQ==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455493941", "body": "Observation : The abort Transaction operations on the controller are idempotent, hence calling an abortTransaction() successively will not throw an error.(TnxFailedException or any other error).  \r\nThe controller client will throw a TxnFailedException if the txn id is not found by the controller during abort().\r\n", "bodyText": "Observation : The abort Transaction operations on the controller are idempotent, hence calling an abortTransaction() successively will not throw an error.(TnxFailedException or any other error).\nThe controller client will throw a TxnFailedException if the txn id is not found by the controller during abort().", "bodyHTML": "<p dir=\"auto\">Observation : The abort Transaction operations on the controller are idempotent, hence calling an abortTransaction() successively will not throw an error.(TnxFailedException or any other error).<br>\nThe controller client will throw a TxnFailedException if the txn id is not found by the controller during abort().</p>", "author": "shrids", "createdAt": "2020-07-16T03:52:12Z", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));", "originalCommit": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNTUxNg==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455925516", "bodyText": "Yes Sandeep", "author": "ravibeta", "createdAt": "2020-07-16T16:44:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5Mzk0MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDMwOA==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455494308", "body": "checkTransactionStatus will never throw a TxnFailedException ; as I understand the intent here is to remove redundant RuntimeException wrapping.", "bodyText": "checkTransactionStatus will never throw a TxnFailedException ; as I understand the intent here is to remove redundant RuntimeException wrapping.", "bodyHTML": "<p dir=\"auto\">checkTransactionStatus will never throw a TxnFailedException ; as I understand the intent here is to remove redundant RuntimeException wrapping.</p>", "author": "shrids", "createdAt": "2020-07-16T03:53:53Z", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));\n                 closed.set(true);\n             }\n         }\n \n         @Override\n         public Status checkStatus() {\n             log.info(\"Check transaction status {}\", txId);\n-            return getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), RuntimeException::new);\n+            return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));", "originalCommit": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNTIxNw==", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455925217", "bodyText": "Yes Sandeep", "author": "ravibeta", "createdAt": "2020-07-16T16:44:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDMwOA=="}], "type": "inlineReview", "revised_code": null}]}