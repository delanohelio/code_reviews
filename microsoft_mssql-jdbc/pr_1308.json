{"pr_number": 1308, "pr_title": "MSI expiry date format fix for Azure Functions", "pr_author": "peterbae", "pr_createdAt": "2020-04-09T17:12:59Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1308", "timeline": [{"oid": "7b1e193785c1c62458ea422e5521c78d5fc2c6e3", "url": "https://github.com/microsoft/mssql-jdbc/commit/7b1e193785c1c62458ea422e5521c78d5fc2c6e3", "message": "msi change", "committedDate": "2020-04-09T17:04:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTY5OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#discussion_r406361698", "body": "```java\r\nint startIndex_ATX = isAzureFunction ? result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length() : result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\r\n                    \r\nStringBuilder sb = new StringBuilder(result);\r\nString accessTokenExpiry = sb.subString(startIndex_ATX, sb.indexOf(\"\\\"\", startIndex_ATX + 1));\r\ncal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\r\n```\r\n\r\nSee if we can just use StringBuilder from the beginning instead of a string. I think it's not really possible to go directly from a Reader to a StringBuilder, but lets try to switch to StringBuilder as soon as we can because I see most of these operations are fully supported and identical to StringBuilder APIs.", "bodyText": "int startIndex_ATX = isAzureFunction ? result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length() : result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\n                    \nStringBuilder sb = new StringBuilder(result);\nString accessTokenExpiry = sb.subString(startIndex_ATX, sb.indexOf(\"\\\"\", startIndex_ATX + 1));\ncal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\nSee if we can just use StringBuilder from the beginning instead of a string. I think it's not really possible to go directly from a Reader to a StringBuilder, but lets try to switch to StringBuilder as soon as we can because I see most of these operations are fully supported and identical to StringBuilder APIs.", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"int startIndex_ATX = isAzureFunction ? result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length() : result.indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER) + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\n                    \nStringBuilder sb = new StringBuilder(result);\nString accessTokenExpiry = sb.subString(startIndex_ATX, sb.indexOf(&quot;\\&quot;&quot;, startIndex_ATX + 1));\ncal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\"><pre><span class=\"pl-k\">int</span> startIndex_ATX <span class=\"pl-k\">=</span> isAzureFunction <span class=\"pl-k\">?</span> result<span class=\"pl-k\">.</span>indexOf(<span class=\"pl-smi\">ActiveDirectoryAuthentication</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER</span>) <span class=\"pl-k\">+</span> <span class=\"pl-smi\">ActiveDirectoryAuthentication</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER</span><span class=\"pl-k\">.</span>length() <span class=\"pl-k\">:</span> result<span class=\"pl-k\">.</span>indexOf(<span class=\"pl-smi\">ActiveDirectoryAuthentication</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER</span>) <span class=\"pl-k\">+</span> <span class=\"pl-smi\">ActiveDirectoryAuthentication</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER</span><span class=\"pl-k\">.</span>length();\n                    \n<span class=\"pl-smi\">StringBuilder</span> sb <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringBuilder</span>(result);\n<span class=\"pl-smi\">String</span> accessTokenExpiry <span class=\"pl-k\">=</span> sb<span class=\"pl-k\">.</span>subString(startIndex_ATX, sb<span class=\"pl-k\">.</span>indexOf(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span>, startIndex_ATX <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>));\ncal<span class=\"pl-k\">.</span>add(<span class=\"pl-smi\">Calendar</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SECOND</span>, <span class=\"pl-smi\">Integer</span><span class=\"pl-k\">.</span>parseInt(accessTokenExpiry));</pre></div>\n<p dir=\"auto\">See if we can just use StringBuilder from the beginning instead of a string. I think it's not really possible to go directly from a Reader to a StringBuilder, but lets try to switch to StringBuilder as soon as we can because I see most of these operations are fully supported and identical to StringBuilder APIs.</p>", "author": "rene-ye", "createdAt": "2020-04-09T17:27:55Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerSecurityUtility.java", "diffHunk": "@@ -324,30 +318,23 @@ static SqlFedAuthToken getMSIAuthToken(String resource, String msiClientId) thro\n \r\n                     Calendar cal = new Calendar.Builder().setInstant(new Date()).build();\r\n \r\n+                    int startIndex_ATX;\r\n+\r\n+                    // Fetch expires_on\r\n                     if (isAzureFunction) {\r\n-                        // Fetch expires_on\r\n-                        int startIndex_ATX = result\r\n+                        startIndex_ATX = result\r\n                                 .indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER)\r\n                                 + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_IDENTIFIER.length();\r\n-                        String accessTokenExpiry = result.substring(startIndex_ATX,\r\n-                                result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n-                        if (connectionlogger.isLoggable(Level.FINER)) {\r\n-                            connectionlogger.finer(\"MSI auth token expires on: \" + accessTokenExpiry);\r\n-                        }\r\n-\r\n-                        DateFormat df = new SimpleDateFormat(\r\n-                                ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_ON_DATE_FORMAT);\r\n-                        cal = new Calendar.Builder().setInstant(df.parse(accessTokenExpiry)).build();\r\n                     } else {\r\n-                        // Fetch expires_in\r\n-                        int startIndex_ATX = result\r\n+                        startIndex_ATX = result\r\n                                 .indexOf(ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER)\r\n                                 + ActiveDirectoryAuthentication.ACCESS_TOKEN_EXPIRES_IN_IDENTIFIER.length();\r\n-                        String accessTokenExpiry = result.substring(startIndex_ATX,\r\n-                                result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n-                        cal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\r\n                     }\r\n \r\n+                    String accessTokenExpiry = result.substring(startIndex_ATX,\r\n+                            result.indexOf(\"\\\"\", startIndex_ATX + 1));\r\n+                    cal.add(Calendar.SECOND, Integer.parseInt(accessTokenExpiry));\r", "originalCommit": "7b1e193785c1c62458ea422e5521c78d5fc2c6e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzMDY2Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1308#discussion_r407630667", "bodyText": "Thanks. I used a stringbuilder for this now.", "author": "peterbae", "createdAt": "2020-04-13T18:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTY5OA=="}], "type": "inlineReview"}, {"oid": "e9faea27e586e6d4c4810e1c8aa29891533bd4ac", "url": "https://github.com/microsoft/mssql-jdbc/commit/e9faea27e586e6d4c4810e1c8aa29891533bd4ac", "message": "use stringbuilder", "committedDate": "2020-04-13T18:15:59Z", "type": "commit"}]}