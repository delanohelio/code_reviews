{"pr_number": 532, "pr_title": "Lock copybook download queue in case of wrong MF credentials", "pr_author": "grianbrcom", "pr_createdAt": "2020-09-23T11:19:56Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493498031", "body": "With the new value defined here, I think is time to find a more appropriate value for that enum. In past was named ```TextDocumentSyncType``` because was the reference in the LSP protocol specification for ```DID_OPEN``` and ```DID_CHANGE```", "bodyText": "With the new value defined here, I think is time to find a more appropriate value for that enum. In past was named TextDocumentSyncType because was the reference in the LSP protocol specification for DID_OPEN and DID_CHANGE", "bodyHTML": "<p dir=\"auto\">With the new value defined here, I think is time to find a more appropriate value for that enum. In past was named <code>TextDocumentSyncType</code> because was the reference in the LSP protocol specification for <code>DID_OPEN</code> and <code>DID_CHANGE</code></p>", "author": "andzac", "createdAt": "2020-09-23T11:53:22Z", "path": "server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java", "diffHunk": "@@ -20,5 +20,6 @@\n  */\n public enum TextDocumentSyncType {", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5NDk5Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493694993", "bodyText": "It may be replaced with according methods in CopybookProcessingMode", "author": "temanbrcom", "createdAt": "2020-09-23T15:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4MDQ2NQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494180465", "bodyText": "I've deleted this enum.", "author": "grianbrcom", "createdAt": "2020-09-24T09:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5ODAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java b/server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java\ndeleted file mode 100644\nindex 7c12bf96..00000000\n--- a/server/src/main/java/com/ca/lsp/cobol/service/TextDocumentSyncType.java\n+++ /dev/null\n", "chunk": "@@ -1,25 +0,0 @@\n-/*\n- * Copyright (c) 2020 Broadcom.\n- * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n- *\n- * This program and the accompanying materials are made\n- * available under the terms of the Eclipse Public License 2.0\n- * which is available at https://www.eclipse.org/legal/epl-2.0/\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- *\n- * Contributors:\n- *    Broadcom, Inc. - initial API and implementation\n- *\n- */\n-\n-package com.ca.lsp.cobol.service;\n-\n-/**\n- * This enum class contains the kind of document synchronization that could be sent from the client\n- */\n-public enum TextDocumentSyncType {\n-  DID_OPEN,\n-  DID_CHANGE,\n-  USER_REQUEST\n-}\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDAzNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493500037", "body": "use ```copybookProcessingMode``` instead of ```syncType```", "bodyText": "use copybookProcessingMode instead of syncType", "bodyHTML": "<p dir=\"auto\">use <code>copybookProcessingMode</code> instead of <code>syncType</code></p>", "author": "andzac", "createdAt": "2020-09-23T11:55:29Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java", "diffHunk": "@@ -33,5 +34,5 @@\n    */\n   @Nullable\n   CopybookModel resolve(\n-      @Nonnull String copybookName, @Nonnull String documentUri, @Nonnull String syncType);\n+      @Nonnull String copybookName, @Nonnull String documentUri, @Nonnull CopybookProcessingMode syncType);", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java\nindex dfd46106..a6e1f084 100644\n--- a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java\n+++ b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/CopybookResolution.java\n", "chunk": "@@ -29,10 +29,11 @@ public interface CopybookResolution {\n    *\n    * @param copybookName - the name of the copybook to be retrieved\n    * @param documentUri - the currently processing document that contains the copy statement\n-   * @param syncType - text document synchronization type\n+   * @param copybookProcessingMode - text document synchronization type\n    * @return a CopybookModel that contains copybook name, its URI and the content\n    */\n   @Nullable\n   CopybookModel resolve(\n-      @Nonnull String copybookName, @Nonnull String documentUri, @Nonnull CopybookProcessingMode syncType);\n+      @Nonnull String copybookName, @Nonnull String documentUri,\n+      @Nonnull CopybookProcessingMode copybookProcessingMode);\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDUxNg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493500516", "body": "as above ;)", "bodyText": "as above ;)", "bodyHTML": "<p dir=\"auto\">as above ;)</p>", "author": "andzac", "createdAt": "2020-09-23T11:55:56Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "diffHunk": "@@ -28,5 +29,5 @@ GrammarPreprocessorListenerImpl create(\n       @Nonnull @Assisted(\"uri\") String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") String textDocumentSyncType);\n+      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\nindex 1b03ff68..c3a38219 100644\n--- a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\n+++ b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\n", "chunk": "@@ -26,8 +25,8 @@ import java.util.Deque;\n \n public interface GrammarPreprocessorListenerFactory {\n   GrammarPreprocessorListenerImpl create(\n-      @Nonnull @Assisted(\"uri\") String uri,\n+      @Nonnull String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);\n+      @Nonnull CopybookProcessingMode copybookProcessingMode);\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0Njk3OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493646979", "body": "If I remember correctly, ID in `@Assisted` required only if there are some similar types injected. Now, all the parameters have different types, so you may use `@Assisted` without ID", "bodyText": "If I remember correctly, ID in @Assisted required only if there are some similar types injected. Now, all the parameters have different types, so you may use @Assisted without ID", "bodyHTML": "<p dir=\"auto\">If I remember correctly, ID in <code>@Assisted</code> required only if there are some similar types injected. Now, all the parameters have different types, so you may use <code>@Assisted</code> without ID</p>", "author": "temanbrcom", "createdAt": "2020-09-23T14:38:17Z", "path": "server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java", "diffHunk": "@@ -28,5 +29,5 @@ GrammarPreprocessorListenerImpl create(\n       @Nonnull @Assisted(\"uri\") String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") String textDocumentSyncType);\n+      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NDAwNw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494164007", "bodyText": "Cool, I can even delete the entire @Assested.", "author": "grianbrcom", "createdAt": "2020-09-24T09:17:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0Njk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\nindex 1b03ff68..c3a38219 100644\n--- a/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\n+++ b/server/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/GrammarPreprocessorListenerFactory.java\n", "chunk": "@@ -26,8 +25,8 @@ import java.util.Deque;\n \n public interface GrammarPreprocessorListenerFactory {\n   GrammarPreprocessorListenerImpl create(\n-      @Nonnull @Assisted(\"uri\") String uri,\n+      @Nonnull String uri,\n       @Nonnull BufferedTokenStream tokens,\n       @Nonnull Deque<CopybookUsage> copybookStack,\n-      @Nonnull @Assisted(\"copybookProcessingMode\") CopybookProcessingMode textDocumentSyncType);\n+      @Nonnull CopybookProcessingMode copybookProcessingMode);\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1MTk0NQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493651945", "body": "Will fork for now, but later on I would prefer to change the logic using different methods with descriptive names instead of passing the boolean flag. ", "bodyText": "Will fork for now, but later on I would prefer to change the logic using different methods with descriptive names instead of passing the boolean flag.", "bodyHTML": "<p dir=\"auto\">Will fork for now, but later on I would prefer to change the logic using different methods with descriptive names instead of passing the boolean flag.</p>", "author": "temanbrcom", "createdAt": "2020-09-23T14:44:30Z", "path": "server/src/main/java/com/ca/lsp/cobol/service/MyTextDocumentService.java", "diffHunk": "@@ -216,7 +215,7 @@ private void registerEngineAndAnalyze(String uri, String languageType, String te\n       communications.notifyThatExtensionIsUnsupported(fileExtension);\n     } else if (isCobolFile(languageType)) {\n       communications.notifyThatLoadingInProgress(uri);\n-      analyzeDocumentFirstTime(uri, text);\n+      analyzeDocumentFirstTime(uri, text, false);", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1Mzc1MA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493653750", "body": "I think this `switch` may be replaced with different methods dropping the `TextDocumentSyncType` class. Not necessary to do it now, just a note for future", "bodyText": "I think this switch may be replaced with different methods dropping the TextDocumentSyncType class. Not necessary to do it now, just a note for future", "bodyHTML": "<p dir=\"auto\">I think this <code>switch</code> may be replaced with different methods dropping the <code>TextDocumentSyncType</code> class. Not necessary to do it now, just a note for future</p>", "author": "temanbrcom", "createdAt": "2020-09-23T14:46:48Z", "path": "server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java", "diffHunk": "@@ -42,12 +53,23 @@ public static CopybookProcessingMode getCopybookProcessingMode(\n         : getProcessingModeByTextDocSyncType(textDocumentSyncType);\n   }\n \n-  private static CopybookProcessingMode getProcessingModeByTextDocSyncType(\n+  /**\n+   * Converts sync type into appropriate processing mode.\n+   *\n+   * @param textDocumentSyncType the sync type of the document.\n+   * @return an appropriate processing mode.\n+   */\n+  public static CopybookProcessingMode getProcessingModeByTextDocSyncType(\n       @Nonnull TextDocumentSyncType textDocumentSyncType) {\n-    if (textDocumentSyncType == TextDocumentSyncType.DID_CHANGE) {\n-      return SKIP;\n-    } else {\n-      return ENABLED;\n+    switch (textDocumentSyncType) {\n+      case DID_OPEN:\n+        return ENABLED;\n+      case DID_CHANGE:\n+        return SKIP;\n+      case USER_REQUEST:\n+        return ENABLED_VERBOSE;\n+      default:\n+        return DISABLED;", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java b/server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java\nindex e53c86dd..0007dd8f 100644\n--- a/server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java\n+++ b/server/src/main/java/com/ca/lsp/cobol/service/CopybookProcessingMode.java\n", "chunk": "@@ -36,40 +34,15 @@ public enum CopybookProcessingMode {\n   }\n \n   /**\n-   * This method enables or disables copybook management based on two factors: 1) the file is an\n-   * extended source file, 2) the file is open in DID_OPEN|DID_CHANGE\n+   * This method disables copybook management if the file is an extended source file. Otherwise it will return\n+   * provided processing mode.\n    *\n    * @param uri of the document opened in the editor by the client\n-   * @param textDocumentSyncType the sync type of the document [{@link\n-   *     TextDocumentSyncType#DID_OPEN} or {@link TextDocumentSyncType#DID_CHANGE}]\n-   * @return A value of that could be [{@link CopybookProcessingMode#ENABLED}|{@link\n-   *     CopybookProcessingMode#DISABLED}] if the document is an extended document.\n+   * @param copybookProcessingMode desired processing mode\n+   * @return a final copybook processing mode based on the file type.\n    */\n   public static CopybookProcessingMode getCopybookProcessingMode(\n-      String uri, TextDocumentSyncType textDocumentSyncType) {\n-\n-    return isFileUnderExtendedSourceFolder(uri)\n-        ? DISABLED\n-        : getProcessingModeByTextDocSyncType(textDocumentSyncType);\n-  }\n-\n-  /**\n-   * Converts sync type into appropriate processing mode.\n-   *\n-   * @param textDocumentSyncType the sync type of the document.\n-   * @return an appropriate processing mode.\n-   */\n-  public static CopybookProcessingMode getProcessingModeByTextDocSyncType(\n-      @Nonnull TextDocumentSyncType textDocumentSyncType) {\n-    switch (textDocumentSyncType) {\n-      case DID_OPEN:\n-        return ENABLED;\n-      case DID_CHANGE:\n-        return SKIP;\n-      case USER_REQUEST:\n-        return ENABLED_VERBOSE;\n-      default:\n-        return DISABLED;\n-    }\n+      String uri, CopybookProcessingMode copybookProcessingMode) {\n+    return isFileUnderExtendedSourceFolder(uri) ? DISABLED : copybookProcessingMode;\n   }\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3Mzk3NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493673974", "body": "I don't see where do you check this value", "bodyText": "I don't see where do you check this value", "bodyHTML": "<p dir=\"auto\">I don't see where do you check this value</p>", "author": "temanbrcom", "createdAt": "2020-09-23T15:11:52Z", "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NTAyOA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494165028", "bodyText": "Oops, you are right. I must use it in MyTextDocumentService:observerCallback.", "author": "grianbrcom", "createdAt": "2020-09-24T09:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3Mzk3NA=="}], "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java b/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\nindex 9ae2b20c..0cc178b7 100644\n--- a/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\n+++ b/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\n", "chunk": "@@ -22,15 +22,15 @@ import static com.broadcom.lsp.domain.cobol.event.model.DataEventType.RUN_ANALYS\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n-  public final boolean quiet;\n+  public final boolean verbose;\n \n   public RunAnalysisEvent() {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n-    this.quiet = true;\n+    this.verbose = false;\n   }\n \n-  public RunAnalysisEvent(boolean quiet) {\n+  public RunAnalysisEvent(boolean verbose) {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n-    this.quiet = quiet;\n+    this.verbose = verbose;\n   }\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3NDY5OA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493674698", "body": "I think that \"verbose\" here would be more descriptive, but it depends on how do you use it", "bodyText": "I think that \"verbose\" here would be more descriptive, but it depends on how do you use it", "bodyHTML": "<p dir=\"auto\">I think that \"verbose\" here would be more descriptive, but it depends on how do you use it</p>", "author": "temanbrcom", "createdAt": "2020-09-23T15:12:48Z", "path": "server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java", "diffHunk": "@@ -22,7 +22,15 @@\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n+  public final boolean quiet;\n+\n   public RunAnalysisEvent() {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = true;\n+  }\n+\n+  public RunAnalysisEvent(boolean quiet) {\n+    super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n+    this.quiet = quiet;", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2NjkwNg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494166906", "bodyText": "Agree, I'll rename it.", "author": "grianbrcom", "createdAt": "2020-09-24T09:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY3NDY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java b/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\nindex 9ae2b20c..0cc178b7 100644\n--- a/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\n+++ b/server/src/main/java/com/broadcom/lsp/domain/cobol/event/model/RunAnalysisEvent.java\n", "chunk": "@@ -22,15 +22,15 @@ import static com.broadcom.lsp.domain.cobol.event.model.DataEventType.RUN_ANALYS\n  * all the registered documents.\n  */\n public class RunAnalysisEvent extends DataEvent {\n-  public final boolean quiet;\n+  public final boolean verbose;\n \n   public RunAnalysisEvent() {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n-    this.quiet = true;\n+    this.verbose = false;\n   }\n \n-  public RunAnalysisEvent(boolean quiet) {\n+  public RunAnalysisEvent(boolean verbose) {\n     super(RUN_ANALYSIS_EVENT, RUN_ANALYSIS_EVENT.getId());\n-    this.quiet = quiet;\n+    this.verbose = verbose;\n   }\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5MDY1Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r493690657", "body": "I didn't get why did you change this", "bodyText": "I didn't get why did you change this", "bodyHTML": "<p dir=\"auto\">I didn't get why did you change this</p>", "author": "temanbrcom", "createdAt": "2020-09-23T15:33:55Z", "path": "server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -365,8 +369,8 @@ private void verifyCallback(\n       String text,\n       String uri) {\n \n-    verify(engine, timeout(10000).times(2)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n-    verify(communications, times(2)).publishDiagnostics(diagnostics);\n+    verify(engine, timeout(10000).times(1)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n+    verify(communications, times(1)).publishDiagnostics(diagnostics);", "originalCommit": "cc78943d945a523d42d2c0403720225cb9455260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MjUwNg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/532#discussion_r494172506", "bodyText": "You are right. I'll return that back.", "author": "grianbrcom", "createdAt": "2020-09-24T09:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5MDY1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d741bb9c713e20b11b89c9b57247bb0872014052", "changed_code": [{"header": "diff --git a/server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java b/server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\nindex 6549f90c..4ab69b77 100644\n--- a/server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\n+++ b/server/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\n", "chunk": "@@ -369,8 +369,8 @@ class MyTextDocumentServiceTest extends ConfigurableTest {\n       String text,\n       String uri) {\n \n-    verify(engine, timeout(10000).times(1)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n-    verify(communications, times(1)).publishDiagnostics(diagnostics);\n+    verify(engine, timeout(10000).times(2)).analyze(uri, text, CopybookProcessingMode.ENABLED);\n+    verify(communications, times(2)).publishDiagnostics(diagnostics);\n   }\n \n   /**\n", "next_change": null}]}}, {"oid": "d741bb9c713e20b11b89c9b57247bb0872014052", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/d741bb9c713e20b11b89c9b57247bb0872014052", "message": "feat: Lock copybook download queue in case of wrong MF credentials\n\nCloses #488\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>", "committedDate": "2020-09-24T10:05:27Z", "type": "forcePushed"}, {"oid": "d7ac0e28720076a4701b623ce3d9bbdb2638541d", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/d7ac0e28720076a4701b623ce3d9bbdb2638541d", "message": "feat: Lock copybook download queue in case of wrong MF credentials\n\nCloses #488\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>", "committedDate": "2020-09-25T14:12:54Z", "type": "forcePushed"}, {"oid": "eaab16ebe54664b2e3a00e9bcd168878095f2542", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/eaab16ebe54664b2e3a00e9bcd168878095f2542", "message": "feat: Lock copybook download queue in case of wrong MF credentials\n\nCloses #488\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>", "committedDate": "2020-09-29T12:38:42Z", "type": "commit"}, {"oid": "eaab16ebe54664b2e3a00e9bcd168878095f2542", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/eaab16ebe54664b2e3a00e9bcd168878095f2542", "message": "feat: Lock copybook download queue in case of wrong MF credentials\n\nCloses #488\n\nSigned-off-by: Anton Grigorev <anton.grigorev@broadcom.com>", "committedDate": "2020-09-29T12:38:42Z", "type": "forcePushed"}]}