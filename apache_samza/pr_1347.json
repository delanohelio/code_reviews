{"pr_number": 1347, "pr_title": "SAMZA-2511 : Adding logic to handle container stop fail ", "pr_author": "rmatharu", "pr_createdAt": "2020-04-15T03:31:34Z", "pr_url": "https://github.com/apache/samza/pull/1347", "timeline": [{"oid": "8e509fc18f82f1b7a6334a02f4150661517901c9", "url": "https://github.com/apache/samza/commit/8e509fc18f82f1b7a6334a02f4150661517901c9", "message": "Adding logic to handle container stop fail", "committedDate": "2020-04-15T03:20:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3NjU2Ng==", "url": "https://github.com/apache/samza/pull/1347#discussion_r408576566", "body": "ContainerAllocator only relinquishes resources when there are no requests in the queue. It will be worth manually releasing the resource in this case.", "bodyText": "ContainerAllocator only relinquishes resources when there are no requests in the queue. It will be worth manually releasing the resource in this case.", "bodyHTML": "<p dir=\"auto\">ContainerAllocator only relinquishes resources when there are no requests in the queue. It will be worth manually releasing the resource in this case.</p>", "author": "Sanil15", "createdAt": "2020-04-15T04:40:04Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -233,6 +233,30 @@ void handleContainerLaunchFail(String processorId, String containerId, String pr\n     }\n   }\n \n+  /**\n+   * Handle the container stop failure for active containers and standby (if enabled).\n+   * @param processorId logical id of the container eg 1,2,3\n+   * @param containerId last known id of the container deployed\n+   * @param containerHost host on which container is requested to be deployed\n+   * @param containerAllocator allocator for requesting resources\n+   */\n+  void handleContainerStopFail(String processorId, String containerId, String containerHost,\n+      ContainerAllocator containerAllocator) {\n+    if (processorId != null && hasActiveContainerPlacementAction(processorId)) {\n+      // Assuming resource acquired on destination host will be relinquished by the containerAllocator,", "originalCommit": "8e509fc18f82f1b7a6334a02f4150661517901c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzMjQ2NA==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409032464", "bodyText": "There is nothing in the ContainerPlacementMetadata to determine the container-id (not processor-id) of the resources already acquired.\nThe containerid in this callback is of the container whose stop failed.\nGiven that there are likely many placement actions in the queue (not just one), the resource acquired may be useful for handling subsequent placement actions that are in the queue.\nStop-fail is rare occurrence, so relying on the allocator to relinquish is perhaps not that bad.", "author": "rmatharu", "createdAt": "2020-04-15T18:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3NjU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3OTU4NA==", "url": "https://github.com/apache/samza/pull/1347#discussion_r408579584", "body": "In the case of ContainerPlacement actions, request in the allocator is waiting for active container to stop and since the active container stop fails here, you also want to cancel the resource request tied to the placement action\r\n\r\nresourceRequestState.cancelResourceRequest(request);\r\n\r\nI believe ContainerPlacementMetadata maintains a set the resource-request that we can read, but only need to cancel the latest one from that set (since that is the one that is active)\r\n", "bodyText": "In the case of ContainerPlacement actions, request in the allocator is waiting for active container to stop and since the active container stop fails here, you also want to cancel the resource request tied to the placement action\nresourceRequestState.cancelResourceRequest(request);\nI believe ContainerPlacementMetadata maintains a set the resource-request that we can read, but only need to cancel the latest one from that set (since that is the one that is active)", "bodyHTML": "<p dir=\"auto\">In the case of ContainerPlacement actions, request in the allocator is waiting for active container to stop and since the active container stop fails here, you also want to cancel the resource request tied to the placement action</p>\n<p dir=\"auto\">resourceRequestState.cancelResourceRequest(request);</p>\n<p dir=\"auto\">I believe ContainerPlacementMetadata maintains a set the resource-request that we can read, but only need to cancel the latest one from that set (since that is the one that is active)</p>", "author": "Sanil15", "createdAt": "2020-04-15T04:52:35Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -233,6 +233,30 @@ void handleContainerLaunchFail(String processorId, String containerId, String pr\n     }\n   }\n \n+  /**\n+   * Handle the container stop failure for active containers and standby (if enabled).\n+   * @param processorId logical id of the container eg 1,2,3\n+   * @param containerId last known id of the container deployed\n+   * @param containerHost host on which container is requested to be deployed\n+   * @param containerAllocator allocator for requesting resources\n+   */\n+  void handleContainerStopFail(String processorId, String containerId, String containerHost,\n+      ContainerAllocator containerAllocator) {\n+    if (processorId != null && hasActiveContainerPlacementAction(processorId)) {\n+      // Assuming resource acquired on destination host will be relinquished by the containerAllocator,\n+      // we mark the placement action as failed, and return.", "originalCommit": "8e509fc18f82f1b7a6334a02f4150661517901c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAzMDczNw==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409030737", "bodyText": "Isnt the container-stop on the active, issued after the resource has already been acquired?\nIn that case, if the resource has already been acquired, the resource-request for it has already been met, so it should have already been cancelled?", "author": "rmatharu", "createdAt": "2020-04-15T17:59:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3OTU4NA=="}], "type": "inlineReview"}, {"oid": "ddebe6e954a27aba3276b25def49eb65e42bba28", "url": "https://github.com/apache/samza/commit/ddebe6e954a27aba3276b25def49eb65e42bba28", "message": "Fixing test", "committedDate": "2020-04-15T18:17:14Z", "type": "commit"}, {"oid": "187a3857b31b570b4511c9d30f35a6619ac0b4bb", "url": "https://github.com/apache/samza/commit/187a3857b31b570b4511c9d30f35a6619ac0b4bb", "message": "Adding cancel resource request", "committedDate": "2020-04-15T18:52:04Z", "type": "commit"}, {"oid": "f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "url": "https://github.com/apache/samza/commit/f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "message": "Adding status for stop-failed", "committedDate": "2020-04-15T20:27:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxMjk2OA==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409212968", "body": "AMRMAsync thread will do a container status update here, allocator thread marks the actions as failed. Please remove the comments.", "bodyText": "AMRMAsync thread will do a container status update here, allocator thread marks the actions as failed. Please remove the comments.", "bodyHTML": "<p dir=\"auto\">AMRMAsync thread will do a container status update here, allocator thread marks the actions as failed. Please remove the comments.</p>", "author": "Sanil15", "createdAt": "2020-04-16T00:36:55Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -233,6 +239,28 @@ void handleContainerLaunchFail(String processorId, String containerId, String pr\n     }\n   }\n \n+  /**\n+   * Handle the container stop failure for active containers and standby (if enabled).\n+   * @param processorId logical id of the container eg 1,2,3\n+   * @param containerId last known id of the container deployed\n+   * @param containerHost host on which container is requested to be deployed\n+   * @param containerAllocator allocator for requesting resources\n+   */\n+  void handleContainerStopFail(String processorId, String containerId, String containerHost,\n+      ContainerAllocator containerAllocator) {\n+    if (processorId != null && hasActiveContainerPlacementAction(processorId)) {\n+      // Assuming resource acquired on destination host will be relinquished by the containerAllocator,\n+      // We mark the placement action as failed, and return.\n+      ContainerPlacementMetadata metaData = getPlacementActionMetadata(processorId).get();", "originalCommit": "f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxNTA3OA==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409215078", "body": "Please correct the comment here, Case 2. If this is an active container, throw an exception restart the AM.", "bodyText": "Please correct the comment here, Case 2. If this is an active container, throw an exception restart the AM.", "bodyHTML": "<p dir=\"auto\">Please correct the comment here, Case 2. If this is an active container, throw an exception restart the AM.</p>", "author": "Sanil15", "createdAt": "2020-04-16T00:44:12Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/StandbyContainerManager.java", "diffHunk": "@@ -126,6 +126,30 @@ public void handleContainerLaunchFail(String containerID, String resourceID,\n     }\n   }\n \n+  /**\n+   *  Handle the failed stop for a container, based on\n+   *  Case 1. If it is standby container, continue the failover\n+   *  Case 2. If it is an active container, then log a warning and return.", "originalCommit": "f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxNTcxNw==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409215717", "body": "nit: @param containerID logical id ex 0,1,2 of the failed samza container\r\n       @param resourceID physical id of the failed container", "bodyText": "nit: @param containerID logical id ex 0,1,2 of the failed samza container\n@param resourceID physical id of the failed container", "bodyHTML": "<p dir=\"auto\">nit: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a> containerID logical id ex 0,1,2 of the failed samza container<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a> resourceID physical id of the failed container</p>", "author": "Sanil15", "createdAt": "2020-04-16T00:46:38Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/StandbyContainerManager.java", "diffHunk": "@@ -126,6 +126,30 @@ public void handleContainerLaunchFail(String containerID, String resourceID,\n     }\n   }\n \n+  /**\n+   *  Handle the failed stop for a container, based on\n+   *  Case 1. If it is standby container, continue the failover\n+   *  Case 2. If it is an active container, then log a warning and return.\n+   * @param containerID the ID of the container that has failed", "originalCommit": "f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIxNjM0NQ==", "url": "https://github.com/apache/samza/pull/1347#discussion_r409216345", "body": "Please add a todo for adding an integ test for this, I can pick that up later!", "bodyText": "Please add a todo for adding an integ test for this, I can pick that up later!", "bodyHTML": "<p dir=\"auto\">Please add a todo for adding an integ test for this, I can pick that up later!</p>", "author": "Sanil15", "createdAt": "2020-04-16T00:48:47Z", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -233,6 +239,28 @@ void handleContainerLaunchFail(String processorId, String containerId, String pr\n     }\n   }\n \n+  /**\n+   * Handle the container stop failure for active containers and standby (if enabled).\n+   * @param processorId logical id of the container eg 1,2,3\n+   * @param containerId last known id of the container deployed\n+   * @param containerHost host on which container is requested to be deployed\n+   * @param containerAllocator allocator for requesting resources\n+   */\n+  void handleContainerStopFail(String processorId, String containerId, String containerHost,", "originalCommit": "f8ce199bbda43bd45b5732e9622df7fd4174d0c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e7d0f08ed361de5f6c6d7312d9f832947ccb112", "url": "https://github.com/apache/samza/commit/8e7d0f08ed361de5f6c6d7312d9f832947ccb112", "message": "Adding comments", "committedDate": "2020-04-16T02:22:38Z", "type": "commit"}]}