{"pr_number": 5954, "pr_title": "Exclude patterns and files from Find In Files search and replace", "pr_author": "melissa-barca", "pr_createdAt": "2020-01-03T01:39:34Z", "pr_url": "https://github.com/rstudio/rstudio/pull/5954", "merge_commit": "46f6e09c13285b121062782e122f555b854a5a1f", "timeline": [{"oid": "c951b2ef8deb5348dd441dea572af34d88483dbc", "url": "https://github.com/rstudio/rstudio/commit/c951b2ef8deb5348dd441dea572af34d88483dbc", "message": "update RPCs to send/accept excludeFilePatterns, remove gitIgnore code", "committedDate": "2019-12-18T19:55:52Z", "type": "commit"}, {"oid": "460e0fac3a2af9ab3f5591631c189977de525a3a", "url": "https://github.com/rstudio/rstudio/commit/460e0fac3a2af9ab3f5591631c189977de525a3a", "message": "fix display bugs", "committedDate": "2019-12-18T20:55:51Z", "type": "commit"}, {"oid": "589d0e8c315275dea9972371feffbdf8e8a2d4da", "url": "https://github.com/rstudio/rstudio/commit/589d0e8c315275dea9972371feffbdf8e8a2d4da", "message": "remove gitIgnore from cpp code,\nfix bug not defaulting to previous state after exclude custom selected", "committedDate": "2019-12-18T21:34:42Z", "type": "commit"}, {"oid": "77500a8e167e5b57da05c493b50913284cdd2300", "url": "https://github.com/rstudio/rstudio/commit/77500a8e167e5b57da05c493b50913284cdd2300", "message": "start implementing reading of gitignore (WIP)", "committedDate": "2019-12-18T22:58:52Z", "type": "commit"}, {"oid": "65a61db5aff68311d54995573bb0d779a1ffff43", "url": "https://github.com/rstudio/rstudio/commit/65a61db5aff68311d54995573bb0d779a1ffff43", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/replace-git-ignore", "committedDate": "2019-12-20T18:13:38Z", "type": "commit"}, {"oid": "b2b9d258277b0ab84eeec048369c02e27b82b14f", "url": "https://github.com/rstudio/rstudio/commit/b2b9d258277b0ab84eeec048369c02e27b82b14f", "message": "fix initialization of excludeFilePatterns, ignore some files in .gitignore", "committedDate": "2019-12-23T20:24:30Z", "type": "commit"}, {"oid": "3b71600c0fe4857adc4b300660cf624dd91f5e87", "url": "https://github.com/rstudio/rstudio/commit/3b71600c0fe4857adc4b300660cf624dd91f5e87", "message": "refactor createGitIgnoreString, make string include every .gitignore file", "committedDate": "2019-12-23T21:50:52Z", "type": "commit"}, {"oid": "28d9212e344d10866dedef41915ee65bec964cc4", "url": "https://github.com/rstudio/rstudio/commit/28d9212e344d10866dedef41915ee65bec964cc4", "message": "remove code causing UI to fail", "committedDate": "2019-12-23T21:52:46Z", "type": "commit"}, {"oid": "12f77b688a1e70cc6281414366d3f6b9e99e39d5", "url": "https://github.com/rstudio/rstudio/commit/12f77b688a1e70cc6281414366d3f6b9e99e39d5", "message": "uncomment accessibility changes, now working as expected", "committedDate": "2020-01-02T18:49:16Z", "type": "commit"}, {"oid": "1cec3f5f6e4dc0b9bcc860184fd180e557169657", "url": "https://github.com/rstudio/rstudio/commit/1cec3f5f6e4dc0b9bcc860184fd180e557169657", "message": "Revert \"uncomment accessibility changes, now working as expected\"\n\nThis reverts commit 12f77b688a1e70cc6281414366d3f6b9e99e39d5.", "committedDate": "2020-01-02T19:20:27Z", "type": "commit"}, {"oid": "8da132dbbde0ca295f7f02f494b0cd3b2c18e81d", "url": "https://github.com/rstudio/rstudio/commit/8da132dbbde0ca295f7f02f494b0cd3b2c18e81d", "message": "Fix bug causing previously commented out code to work. Add aria properties to new span field.", "committedDate": "2020-01-02T21:08:49Z", "type": "commit"}, {"oid": "84455d4ab548706550771aa2660ddd2e34e66633", "url": "https://github.com/rstudio/rstudio/commit/84455d4ab548706550771aa2660ddd2e34e66633", "message": "fix case", "committedDate": "2020-01-02T22:27:16Z", "type": "commit"}, {"oid": "3887602ded78176480626489046144ea3f91863f", "url": "https://github.com/rstudio/rstudio/commit/3887602ded78176480626489046144ea3f91863f", "message": "fix git command to check for ignored files", "committedDate": "2020-01-03T01:05:20Z", "type": "commit"}, {"oid": "2291853c9ee7574532f861ebe862a4e05e207a20", "url": "https://github.com/rstudio/rstudio/commit/2291853c9ee7574532f861ebe862a4e05e207a20", "message": "rename gitignore variables to accurately represent exclude-standard functionality", "committedDate": "2020-01-03T01:23:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODU3OA==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362928578", "body": "Should this be `[]` since the function returns an array?", "bodyText": "Should this be [] since the function returns an array?", "bodyHTML": "<p dir=\"auto\">Should this be <code>[]</code> since the function returns an array?</p>", "author": "jmcphers", "createdAt": "2020-01-03T19:18:59Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -104,6 +100,18 @@ private native JsArrayString getFilePatternsNative() /*-{\n          return this.filePatterns;\n       }-*/;\n \n+      public final String[] getExcludeFilePatterns()\n+      {\n+         return JsUtil.toStringArray(getExcludeFilePatternsNative());\n+      }\n+\n+      private native JsArrayString getExcludeFilePatternsNative() /*-{\n+\n+         if (!this.excludeFilePatterns)\n+            this.excludeFilePatterns=\"\";", "originalCommit": "2291853c9ee7574532f861ebe862a4e05e207a20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NDQ5Ng==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362964496", "bodyText": "Fixed", "author": "melissa-barca", "createdAt": "2020-01-03T21:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "860bf4815925bf3201042e8f802fceb401568345", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..7b385ac22e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -108,7 +108,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       private native JsArrayString getExcludeFilePatternsNative() /*-{\n \n          if (!this.excludeFilePatterns)\n-            this.excludeFilePatterns=\"\";\n+            this.excludeFilePatterns = [];\n          return this.excludeFilePatterns;\n       }-*/;\n \n", "next_change": {"commit": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 7b385ac22e..4715d02a82 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -108,7 +108,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       private native JsArrayString getExcludeFilePatternsNative() /*-{\n \n          if (!this.excludeFilePatterns)\n-            this.excludeFilePatterns = [];\n+            this.excludeFilePatterns=\"\";\n          return this.excludeFilePatterns;\n       }-*/;\n \n", "next_change": {"commit": "5893773badcfa073c810d8a490903428d5fe03c8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..7b385ac22e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -108,7 +108,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       private native JsArrayString getExcludeFilePatternsNative() /*-{\n \n          if (!this.excludeFilePatterns)\n-            this.excludeFilePatterns=\"\";\n+            this.excludeFilePatterns = [];\n          return this.excludeFilePatterns;\n       }-*/;\n \n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "46f6e09c13285b121062782e122f555b854a5a1f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..0e4c7ccfd5 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -108,7 +112,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       private native JsArrayString getExcludeFilePatternsNative() /*-{\n \n          if (!this.excludeFilePatterns)\n-            this.excludeFilePatterns=\"\";\n+            this.excludeFilePatterns = [];\n          return this.excludeFilePatterns;\n       }-*/;\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "46f6e09c13285b121062782e122f555b854a5a1f", "message": "Merge commit", "committedDate": null}, {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "committedDate": "2020-01-08 14:59:15 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "2d7059c81c36c388ef67ecffd4533b63d13d5581", "committedDate": "2020-01-08 18:06:09 -0800", "message": "add include option for R packages (R/ src/ tests/)"}, {"oid": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "committedDate": "2020-01-09 12:17:09 -0800", "message": "fix spacing and add error checking for when a user tries to search a package while not in a package session"}, {"oid": "cac983631da2f51d35b5cfe5568c6e4cb5f1b8c4", "committedDate": "2020-01-13 16:02:30 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "b446c85fe3bc8c31ddf7611f5343bafb219960af", "committedDate": "2020-01-13 16:03:50 -0800", "message": "rename functions using retrieve because we are not fetching update include/exclude file patterns to use enums for readability disable the Git option when git is not installed"}, {"oid": "b02744c1a5292e0403f0a32965f4dbde8535c629", "committedDate": "2020-01-13 16:03:50 -0800", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar was visible after the replace had completed - removed code unnsuccesfully trying to fix this"}, {"oid": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "committedDate": "2020-01-13 16:03:50 -0800", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected add value change handler to Find In Files directory chooser, on changes check if the new directory is a git repository and if git is installed add new Files Server operation to check if a directory is a git directory"}, {"oid": "4da19f30bc83bba7f492781e0c9aefafb450c028", "committedDate": "2020-01-13 16:03:50 -0800", "message": "add include option for user to filter by package source code add new RPC to check if a directory is a package, only display the package source option for package directories"}, {"oid": "1c158214d1b7cb337026bed8baeedf2ec2d92da4", "committedDate": "2020-01-14 13:32:54 -0800", "message": "only allow includes that don't require the grep --include parameter when filtering with git"}, {"oid": "ceb218b2a0b36ad4fd47aa3863e6226b2d166f7a", "committedDate": "2020-01-14 16:38:38 -0800", "message": "allow user to filter by package source and follow standard git exclusions"}, {"oid": "0d277db4376dd4c482af64f88967829db017b46b", "committedDate": "2020-01-15 16:00:05 -0800", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "852c6e6d5c7b731110d97e3345240b2a68efc2ae", "committedDate": "2020-01-15 16:51:42 -0800", "message": "rename enums for readability fix issue where Git and Package states weren't preserved"}, {"oid": "285a581ac72308a9a0ac541889b2a4d84324568d", "committedDate": "2020-01-16 12:55:22 -0800", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448", "committedDate": "2020-01-16 14:02:08 -0800", "message": "add include options to GrepOptions class"}, {"oid": "5f301b22a1a8d2cb1d7d761b244e82397ea2c410", "committedDate": "2020-01-23 14:07:25 -0800", "message": "clean up warning message implement and use dom utility to disable or an enable an option"}, {"oid": "ce40ab9d46b2dfec6143eaf33610d18646b3b27e", "committedDate": "2020-01-27 14:16:50 -0800", "message": "move getIndexFromValue to FormListBox and switch find in files dialog to use FormListBox. When Package Source is selected and the user selects a non-package directory, switch include option to All Files"}, {"oid": "30aa1f83a276c19fb2212e562b436b0086fa4ef2", "committedDate": "2020-02-04 10:50:14 -0800", "message": "bulk update RStudio, Inc. => RStudio, PBC"}, {"oid": "4cec2b9e4289f49b5739903b78187e3406083f30", "committedDate": "2020-02-10 09:38:48 -0800", "message": "fix bug where the include logic was always set to 'All Files' when the directory was not identified as a package"}, {"oid": "75fb5040283c17f9991745e6c96ec6179ed75b3e", "committedDate": "2020-02-18 15:08:29 -0800", "message": "update `Search in` option to search Package Source or Package Test - remove .Rd files from Common R Source Files option"}, {"oid": "f9de8491d8975ad1f440b77be99e083e1379161e", "committedDate": "2020-03-18 11:47:45 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "7f835483591826c63ab86fcdc1421240197ba086", "committedDate": "2020-09-05 18:31:13 -0700", "message": "minor mechanical cleanup of some find-in-files Java sources"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "74318734f3e7c8c5aed401f80fa99b729666411e", "committedDate": "2021-01-27 18:07:49 -0500", "message": "add \"whole word\" checkbox and disable for regexes"}, {"oid": "53c94c30af0386f01d231e65055c35fade77526f", "committedDate": "2021-01-27 18:32:00 -0500", "message": "modify query to regex when whole word is selected"}, {"oid": "74bf06d8945a59e62282d45127427c72daf73c01", "committedDate": "2021-01-28 12:22:36 -0500", "message": "add aria labels for accessibility and automated tests"}, {"oid": "4e6fa8a3fb02c90695943bd40844ca1a7e59197b", "committedDate": "2021-01-29 10:38:07 -0500", "message": "set element ID because elements were already accessible"}, {"oid": "ae0bef92342e984ecf513da367ba12db22ad2b95", "committedDate": "2021-01-29 09:48:17 -0800", "message": "create and use FormCheckBox to set elementId from ui.xml file"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "committedDate": "2022-03-30 15:45:24 -0700", "message": "Always use `git grep` when possible (#10594)"}, {"oid": "5d0e7c2118f3be2dc469819a4b0b9e4c309805ef", "committedDate": "2022-04-25 15:16:29 -0600", "message": "rest of tabs"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "404c6dea4cd88c2325c36f416151ab45c6016bb7", "committedDate": "2022-09-30 04:37:49 -0700", "message": "eliminate eclipse warnings"}, {"oid": "c4f507fb638f9ac30e24911ec206da88e639acf2", "committedDate": "2023-05-03 11:20:27 -0700", "message": "use '-w' flag for whole word (#13087)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODkyNg==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362928926", "body": "Nit: for very complicated reasons, we prefer StringUtil.equals (GWT has actually changed the way string comparison works between releases!)", "bodyText": "Nit: for very complicated reasons, we prefer StringUtil.equals (GWT has actually changed the way string comparison works between releases!)", "bodyHTML": "<p dir=\"auto\">Nit: for very complicated reasons, we prefer StringUtil.equals (GWT has actually changed the way string comparison works between releases!)</p>", "author": "jmcphers", "createdAt": "2020-01-03T19:20:07Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -203,12 +225,26 @@ protected State collectInput()\n             list.add(trimmedPattern);\n       }\n \n+      String excludeFilePatterns =\n+         listPresetExcludeFilePatterns_.getValue(\n+               listPresetExcludeFilePatterns_.getSelectedIndex());\n+      if (excludeFilePatterns == \"custom\")", "originalCommit": "2291853c9ee7574532f861ebe862a4e05e207a20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2NDUzMA==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r362964530", "bodyText": "Fixed", "author": "melissa-barca", "createdAt": "2020-01-03T21:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODkyNg=="}], "type": "inlineReview", "revised_code": {"commit": "860bf4815925bf3201042e8f802fceb401568345", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..7b385ac22e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -228,7 +228,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       String excludeFilePatterns =\n          listPresetExcludeFilePatterns_.getValue(\n                listPresetExcludeFilePatterns_.getSelectedIndex());\n-      if (excludeFilePatterns == \"custom\")\n+      if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n          excludeFilePatterns = txtExcludeFilePattern_.getText();\n \n       ArrayList<String> excludeList = new ArrayList<String>();\n", "next_change": {"commit": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 7b385ac22e..4715d02a82 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -228,7 +228,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       String excludeFilePatterns =\n          listPresetExcludeFilePatterns_.getValue(\n                listPresetExcludeFilePatterns_.getSelectedIndex());\n-      if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n+      if (excludeFilePatterns == \"custom\")\n          excludeFilePatterns = txtExcludeFilePattern_.getText();\n \n       ArrayList<String> excludeList = new ArrayList<String>();\n", "next_change": {"commit": "5893773badcfa073c810d8a490903428d5fe03c8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..7b385ac22e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -228,7 +228,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       String excludeFilePatterns =\n          listPresetExcludeFilePatterns_.getValue(\n                listPresetExcludeFilePatterns_.getSelectedIndex());\n-      if (excludeFilePatterns == \"custom\")\n+      if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n          excludeFilePatterns = txtExcludeFilePattern_.getText();\n \n       ArrayList<String> excludeList = new ArrayList<String>();\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "46f6e09c13285b121062782e122f555b854a5a1f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4715d02a82..0e4c7ccfd5 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -228,7 +300,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       String excludeFilePatterns =\n          listPresetExcludeFilePatterns_.getValue(\n                listPresetExcludeFilePatterns_.getSelectedIndex());\n-      if (excludeFilePatterns == \"custom\")\n+      if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n          excludeFilePatterns = txtExcludeFilePattern_.getText();\n \n       ArrayList<String> excludeList = new ArrayList<String>();\n", "next_change": {"commit": "7f835483591826c63ab86fcdc1421240197ba086", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 0e4c7ccfd5..27fbbe02e8 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -303,7 +355,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n       if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n          excludeFilePatterns = txtExcludeFilePattern_.getText();\n \n-      ArrayList<String> excludeList = new ArrayList<String>();\n+      ArrayList<String> excludeList = new ArrayList<>();\n       for (String pattern : excludeFilePatterns.split(\",\"))\n       {\n          String trimmedPattern = pattern.trim();\n", "next_change": {"commit": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 27fbbe02e8..c563a3f70c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -349,12 +304,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n             list.add(trimmedPattern);\n       }\n \n-      String excludeFilePatterns =\n-         listPresetExcludeFilePatterns_.getValue(\n-               listPresetExcludeFilePatterns_.getSelectedIndex());\n-      if (StringUtil.equals(excludeFilePatterns, \"custom\"))\n-         excludeFilePatterns = txtExcludeFilePattern_.getText();\n-\n+      String excludeFilePatterns = checkboxExcludeCustom_.getValue() ? txtExcludeFilePattern_.getText() : \"\";\n       ArrayList<String> excludeList = new ArrayList<>();\n       for (String pattern : excludeFilePatterns.split(\",\"))\n       {\n", "next_change": null}, {"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 27fbbe02e8..c563a3f70c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -362,12 +312,15 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n          if (trimmedPattern.length() > 0)\n             excludeList.add(trimmedPattern);\n       }\n-\n+      \n       return State.createState(txtSearchPattern_.getText(),\n                                getEffectivePath(),\n                                checkboxRegex_.getValue(),\n                                checkboxCaseSensitive_.getValue(),\n+                               checkboxWholeWord_.getValue(),\n                                JsUtil.toJsArrayString(list),\n+                               gitStatus_,\n+                               checkboxExcludeGitIgnore_.getValue(),\n                                JsUtil.toJsArrayString(excludeList));\n    }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "46f6e09c13285b121062782e122f555b854a5a1f", "message": "Merge commit", "committedDate": null}, {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "committedDate": "2020-01-08 14:59:15 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "2d7059c81c36c388ef67ecffd4533b63d13d5581", "committedDate": "2020-01-08 18:06:09 -0800", "message": "add include option for R packages (R/ src/ tests/)"}, {"oid": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "committedDate": "2020-01-09 12:17:09 -0800", "message": "fix spacing and add error checking for when a user tries to search a package while not in a package session"}, {"oid": "cac983631da2f51d35b5cfe5568c6e4cb5f1b8c4", "committedDate": "2020-01-13 16:02:30 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "b446c85fe3bc8c31ddf7611f5343bafb219960af", "committedDate": "2020-01-13 16:03:50 -0800", "message": "rename functions using retrieve because we are not fetching update include/exclude file patterns to use enums for readability disable the Git option when git is not installed"}, {"oid": "b02744c1a5292e0403f0a32965f4dbde8535c629", "committedDate": "2020-01-13 16:03:50 -0800", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar was visible after the replace had completed - removed code unnsuccesfully trying to fix this"}, {"oid": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "committedDate": "2020-01-13 16:03:50 -0800", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected add value change handler to Find In Files directory chooser, on changes check if the new directory is a git repository and if git is installed add new Files Server operation to check if a directory is a git directory"}, {"oid": "4da19f30bc83bba7f492781e0c9aefafb450c028", "committedDate": "2020-01-13 16:03:50 -0800", "message": "add include option for user to filter by package source code add new RPC to check if a directory is a package, only display the package source option for package directories"}, {"oid": "1c158214d1b7cb337026bed8baeedf2ec2d92da4", "committedDate": "2020-01-14 13:32:54 -0800", "message": "only allow includes that don't require the grep --include parameter when filtering with git"}, {"oid": "ceb218b2a0b36ad4fd47aa3863e6226b2d166f7a", "committedDate": "2020-01-14 16:38:38 -0800", "message": "allow user to filter by package source and follow standard git exclusions"}, {"oid": "0d277db4376dd4c482af64f88967829db017b46b", "committedDate": "2020-01-15 16:00:05 -0800", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "852c6e6d5c7b731110d97e3345240b2a68efc2ae", "committedDate": "2020-01-15 16:51:42 -0800", "message": "rename enums for readability fix issue where Git and Package states weren't preserved"}, {"oid": "285a581ac72308a9a0ac541889b2a4d84324568d", "committedDate": "2020-01-16 12:55:22 -0800", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448", "committedDate": "2020-01-16 14:02:08 -0800", "message": "add include options to GrepOptions class"}, {"oid": "5f301b22a1a8d2cb1d7d761b244e82397ea2c410", "committedDate": "2020-01-23 14:07:25 -0800", "message": "clean up warning message implement and use dom utility to disable or an enable an option"}, {"oid": "ce40ab9d46b2dfec6143eaf33610d18646b3b27e", "committedDate": "2020-01-27 14:16:50 -0800", "message": "move getIndexFromValue to FormListBox and switch find in files dialog to use FormListBox. When Package Source is selected and the user selects a non-package directory, switch include option to All Files"}, {"oid": "30aa1f83a276c19fb2212e562b436b0086fa4ef2", "committedDate": "2020-02-04 10:50:14 -0800", "message": "bulk update RStudio, Inc. => RStudio, PBC"}, {"oid": "4cec2b9e4289f49b5739903b78187e3406083f30", "committedDate": "2020-02-10 09:38:48 -0800", "message": "fix bug where the include logic was always set to 'All Files' when the directory was not identified as a package"}, {"oid": "75fb5040283c17f9991745e6c96ec6179ed75b3e", "committedDate": "2020-02-18 15:08:29 -0800", "message": "update `Search in` option to search Package Source or Package Test - remove .Rd files from Common R Source Files option"}, {"oid": "f9de8491d8975ad1f440b77be99e083e1379161e", "committedDate": "2020-03-18 11:47:45 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "7f835483591826c63ab86fcdc1421240197ba086", "committedDate": "2020-09-05 18:31:13 -0700", "message": "minor mechanical cleanup of some find-in-files Java sources"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "74318734f3e7c8c5aed401f80fa99b729666411e", "committedDate": "2021-01-27 18:07:49 -0500", "message": "add \"whole word\" checkbox and disable for regexes"}, {"oid": "53c94c30af0386f01d231e65055c35fade77526f", "committedDate": "2021-01-27 18:32:00 -0500", "message": "modify query to regex when whole word is selected"}, {"oid": "74bf06d8945a59e62282d45127427c72daf73c01", "committedDate": "2021-01-28 12:22:36 -0500", "message": "add aria labels for accessibility and automated tests"}, {"oid": "4e6fa8a3fb02c90695943bd40844ca1a7e59197b", "committedDate": "2021-01-29 10:38:07 -0500", "message": "set element ID because elements were already accessible"}, {"oid": "ae0bef92342e984ecf513da367ba12db22ad2b95", "committedDate": "2021-01-29 09:48:17 -0800", "message": "create and use FormCheckBox to set elementId from ui.xml file"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "committedDate": "2022-03-30 15:45:24 -0700", "message": "Always use `git grep` when possible (#10594)"}, {"oid": "5d0e7c2118f3be2dc469819a4b0b9e4c309805ef", "committedDate": "2022-04-25 15:16:29 -0600", "message": "rest of tabs"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "404c6dea4cd88c2325c36f416151ab45c6016bb7", "committedDate": "2022-09-30 04:37:49 -0700", "message": "eliminate eclipse warnings"}, {"oid": "c4f507fb638f9ac30e24911ec206da88e639acf2", "committedDate": "2023-05-03 11:20:27 -0700", "message": "use '-w' flag for whole word (#13087)"}]}, {"oid": "860bf4815925bf3201042e8f802fceb401568345", "url": "https://github.com/rstudio/rstudio/commit/860bf4815925bf3201042e8f802fceb401568345", "message": "refactor code to meet standards", "committedDate": "2020-01-03T21:17:23Z", "type": "commit"}, {"oid": "58b96168fa59d05f184f49cb8fd5f6022ac79076", "url": "https://github.com/rstudio/rstudio/commit/58b96168fa59d05f184f49cb8fd5f6022ac79076", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output", "committedDate": "2020-01-06T21:19:00Z", "type": "commit"}, {"oid": "58b96168fa59d05f184f49cb8fd5f6022ac79076", "url": "https://github.com/rstudio/rstudio/commit/58b96168fa59d05f184f49cb8fd5f6022ac79076", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output", "committedDate": "2020-01-06T21:19:00Z", "type": "forcePushed"}, {"oid": "186008596e64425c0221491401034e2c0a165763", "url": "https://github.com/rstudio/rstudio/commit/186008596e64425c0221491401034e2c0a165763", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output", "committedDate": "2020-01-06T22:04:31Z", "type": "commit"}, {"oid": "fc6fee43759e81cdc1a3b9246c9ee86e24ee076b", "url": "https://github.com/rstudio/rstudio/commit/fc6fee43759e81cdc1a3b9246c9ee86e24ee076b", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/replace-git-ignore", "committedDate": "2020-01-06T23:43:08Z", "type": "commit"}, {"oid": "c829f1fe60fc4346daeb1935eff69026ae3a8f50", "url": "https://github.com/rstudio/rstudio/commit/c829f1fe60fc4346daeb1935eff69026ae3a8f50", "message": "remove extra function declaration (wip)", "committedDate": "2020-01-07T00:44:26Z", "type": "commit"}, {"oid": "fe0b89d58f71fcb6c5c14f2fbadb3e6d82f7101a", "url": "https://github.com/rstudio/rstudio/commit/fe0b89d58f71fcb6c5c14f2fbadb3e6d82f7101a", "message": "make Find in Files functional with `git grep`\n- standard output from `git grep` differs from `grep` and this needs to be accounted for when\n  parsing our results", "committedDate": "2020-01-08T00:43:53Z", "type": "commit"}, {"oid": "bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "url": "https://github.com/rstudio/rstudio/commit/bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change", "committedDate": "2020-01-08T01:45:46Z", "type": "commit"}, {"oid": "bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "url": "https://github.com/rstudio/rstudio/commit/bdcbdf49cb58f41d626c3fe5f9285760514d4d75", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change", "committedDate": "2020-01-08T01:45:46Z", "type": "forcePushed"}, {"oid": "113f6900220f3171af9780a6085b175423e33c1e", "url": "https://github.com/rstudio/rstudio/commit/113f6900220f3171af9780a6085b175423e33c1e", "message": "add unit tests for regexes used to parse stdout results\n- move regex retrieval to SessionFind.hpp\n- also fix bug where exclude no longer worked with git grep,\n  and never worked when multiple patterns were requested\n- renamed some existing unit test variables to match standards", "committedDate": "2020-01-08T21:24:22Z", "type": "commit"}, {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "url": "https://github.com/rstudio/rstudio/commit/7803a4ddae43b2883f67c182e49fbe561a9bf002", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include", "committedDate": "2020-01-08T22:59:15Z", "type": "forcePushed"}, {"oid": "e4c94d03c45ebe6eebed798d04158a094e24575c", "url": "https://github.com/rstudio/rstudio/commit/e4c94d03c45ebe6eebed798d04158a094e24575c", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include", "committedDate": "2020-01-09T19:07:11Z", "type": "commit"}, {"oid": "e4c94d03c45ebe6eebed798d04158a094e24575c", "url": "https://github.com/rstudio/rstudio/commit/e4c94d03c45ebe6eebed798d04158a094e24575c", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include", "committedDate": "2020-01-09T19:07:11Z", "type": "forcePushed"}, {"oid": "becfd6961fc5f344369c4320e560952ca4a82cae", "url": "https://github.com/rstudio/rstudio/commit/becfd6961fc5f344369c4320e560952ca4a82cae", "message": "remove old comment", "committedDate": "2020-01-09T19:08:39Z", "type": "commit"}, {"oid": "f7dec99b9d8b96d946cf768f637cc8ef79979f5b", "url": "https://github.com/rstudio/rstudio/commit/f7dec99b9d8b96d946cf768f637cc8ef79979f5b", "message": "rename functions using retrieve because we are not fetching\nupdate include/exclude file patterns to use enums for readability\ndisable the Git option when git is not installed", "committedDate": "2020-01-10T22:15:07Z", "type": "commit"}, {"oid": "730d6520888f53207075ac99e4815f705dbcbcf0", "url": "https://github.com/rstudio/rstudio/commit/730d6520888f53207075ac99e4815f705dbcbcf0", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar\nwas visible after the replace had completed\n- removed code unnsuccesfully trying to fix this", "committedDate": "2020-01-10T22:15:24Z", "type": "commit"}, {"oid": "395ca23a264350cade327bbb2f6896f33bab06c7", "url": "https://github.com/rstudio/rstudio/commit/395ca23a264350cade327bbb2f6896f33bab06c7", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected\nadd value change handler to Find In Files directory chooser, on changes check if the new directory\nis a git repository and if git is installed\nadd new Files Server operation to check if a directory is a git directory", "committedDate": "2020-01-13T22:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MTU5NA==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366081594", "body": "Nit: GWT has automatic unboxing so this could be simplified to `dialog.setGitStatus(isGitDirectory)`", "bodyText": "Nit: GWT has automatic unboxing so this could be simplified to dialog.setGitStatus(isGitDirectory)", "bodyHTML": "<p dir=\"auto\">Nit: GWT has automatic unboxing so this could be simplified to <code>dialog.setGitStatus(isGitDirectory)</code></p>", "author": "jmcphers", "createdAt": "2020-01-13T23:22:18Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java", "diffHunk": "@@ -509,6 +525,33 @@ public void onResponseReceived(String handle)\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)", "originalCommit": "395ca23a264350cade327bbb2f6896f33bab06c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5NjcxMg==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366096712", "bodyText": "Fixed", "author": "melissa-barca", "createdAt": "2020-01-14T00:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MTU5NA=="}], "type": "inlineReview", "revised_code": {"commit": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..e2132ae8de 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex e2132ae8de..881b306b01 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,33 +518,6 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n-            {\n-               fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n-                  @Override\n-                  public void onResponseReceived(Boolean isGitDirectory)\n-                  {\n-                     dialog.setGitStatus(isGitDirectory);\n-                  }\n-   \n-                  @Override\n-                  public void onError(ServerError error)\n-                  {\n-                     // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n-                     dialog.setGitStatus(true);\n-                     Debug.logError(error);\n-                  }\n-               });\n-            }\n-         });\n-      }\n-\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "383f3f50077970e7376f619324eacb9b1a047ead", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 881b306b01..ed002dee6f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -518,6 +525,33 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)\n+                     dialog.setGitStatus(true);\n+                  else\n+                     dialog.setGitStatus(false);\n+               }\n+\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled later\n+                  dialog.setGitStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n+\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "6822b2d9b1e080539f54ea89b12d25b287f500d3", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..e2132ae8de 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "46f6e09c13285b121062782e122f555b854a5a1f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..7a69edb386 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 7a69edb386..39d1136188 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,33 +526,6 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n-            {\n-               fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n-                  @Override\n-                  public void onResponseReceived(Boolean isGitDirectory)\n-                  {\n-                     dialog.setGitStatus(isGitDirectory);\n-                  }\n-   \n-                  @Override\n-                  public void onError(ServerError error)\n-                  {\n-                     // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n-                     dialog.setGitStatus(true);\n-                     Debug.logError(error);\n-                  }\n-               });\n-            }\n-         });\n-      }\n-\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 39d1136188..adc63b3035 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,6 +532,33 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)\n+                     dialog.setGitStatus(true);\n+                  else\n+                     dialog.setGitStatus(false);\n+               }\n+\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled later\n+                  dialog.setGitStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n+\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "4da19f30bc83bba7f492781e0c9aefafb450c028", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex adc63b3035..6f412e7e34 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -551,11 +551,29 @@ public class FindOutputPresenter extends BasePresenter\n                public void onError(ServerError error)\n                {\n                   // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n+                  // if the user enters invalid data it will be handled by the backend\n                   dialog.setGitStatus(true);\n                   Debug.logError(error);\n                }\n             });\n+\n+            fileServer_.isPackageDirectory(dialog.getDirectory(),\n+                                           new ServerRequestCallback<Boolean>()\n+            {\n+               @Override\n+               public void onResponseReceived(final Boolean isPackageDirectory)\n+               {\n+                  dialog.setPackageStatus(isPackageDirectory);\n+               }\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled by the backend\n+                  dialog.setPackageStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n          }\n       });\n \n", "next_change": {"commit": "1b397a62560e288e4cda7aa5b4fdb325c1d9dc78", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 6f412e7e34..7ab9b3a836 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -532,50 +525,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                       new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n-                     dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled by the backend\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-\n-            fileServer_.isPackageDirectory(dialog.getDirectory(),\n-                                           new ServerRequestCallback<Boolean>()\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n             {\n-               @Override\n-               public void onResponseReceived(final Boolean isPackageDirectory)\n-               {\n-                  dialog.setPackageStatus(isPackageDirectory);\n-               }\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled by the backend\n-                  dialog.setPackageStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n+                     dialog.setGitStatus(true);\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "33b845043faedd6bef45aad45ed0040a95e9e721", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 7ab9b3a836..ce7d635146 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +525,50 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n             {\n                fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n+                                          new ServerRequestCallback<Boolean>() {\n                   @Override\n                   public void onResponseReceived(Boolean isGitDirectory)\n                   {\n                      dialog.setGitStatus(isGitDirectory);\n                   }\n-   \n+\n                   @Override\n                   public void onError(ServerError error)\n                   {\n                      // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n+                     // if the user enters invalid data it will be handled by the backend\n                      dialog.setGitStatus(true);\n                      Debug.logError(error);\n                   }\n                });\n             }\n-         });\n-      }\n+\n+            fileServer_.isPackageDirectory(dialog.getDirectory(),\n+                                           new ServerRequestCallback<Boolean>()\n+            {\n+               @Override\n+               public void onResponseReceived(final Boolean isPackageDirectory)\n+               {\n+                  dialog.setPackageStatus(isPackageDirectory);\n+               }\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled by the backend\n+                  dialog.setPackageStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ce7d635146..33bbdc3194 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -572,7 +567,7 @@ public class FindOutputPresenter extends BasePresenter\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n-      \n+\n       if (dialogState_ == null)\n       {\n          dialog.setDirectory(\n", "next_change": {"commit": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 33bbdc3194..8772fdd76a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -574,6 +599,8 @@ public class FindOutputPresenter extends BasePresenter\n                session_.getSessionInfo().getActiveProjectDir() != null ?\n                session_.getSessionInfo().getActiveProjectDir() :\n                workbenchContext_.getCurrentWorkingDir());\n+\n+         dialog.checkboxExcludeGitIgnore_.setValue(true);\n       }\n       else\n       {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "46f6e09c13285b121062782e122f555b854a5a1f", "message": "Merge commit", "committedDate": null}, {"oid": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "committedDate": "2020-01-09 12:17:09 -0800", "message": "fix spacing and add error checking for when a user tries to search a package while not in a package session"}, {"oid": "9ee1ca83af5561bbc2ebd1dcf479d9b79adb4bd3", "committedDate": "2020-01-09 17:49:03 -0800", "message": "update state name"}, {"oid": "b446c85fe3bc8c31ddf7611f5343bafb219960af", "committedDate": "2020-01-13 16:03:50 -0800", "message": "rename functions using retrieve because we are not fetching update include/exclude file patterns to use enums for readability disable the Git option when git is not installed"}, {"oid": "b02744c1a5292e0403f0a32965f4dbde8535c629", "committedDate": "2020-01-13 16:03:50 -0800", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar was visible after the replace had completed - removed code unnsuccesfully trying to fix this"}, {"oid": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "committedDate": "2020-01-13 16:03:50 -0800", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected add value change handler to Find In Files directory chooser, on changes check if the new directory is a git repository and if git is installed add new Files Server operation to check if a directory is a git directory"}, {"oid": "4da19f30bc83bba7f492781e0c9aefafb450c028", "committedDate": "2020-01-13 16:03:50 -0800", "message": "add include option for user to filter by package source code add new RPC to check if a directory is a package, only display the package source option for package directories"}, {"oid": "0d277db4376dd4c482af64f88967829db017b46b", "committedDate": "2020-01-15 16:00:05 -0800", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448", "committedDate": "2020-01-16 14:02:08 -0800", "message": "add include options to GrepOptions class"}, {"oid": "1b397a62560e288e4cda7aa5b4fdb325c1d9dc78", "committedDate": "2020-01-27 10:21:57 -0800", "message": "fix bug where resultsCount was being cleared before being initialized"}, {"oid": "33b845043faedd6bef45aad45ed0040a95e9e721", "committedDate": "2020-01-27 16:32:37 -0800", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/find-in-files-exception"}, {"oid": "9a23c4f28563d77e6c5670c76581636e688fbddd", "committedDate": "2020-02-03 17:04:57 -0800", "message": "prevent resultsCount from being set when Find In Files state is null"}, {"oid": "30aa1f83a276c19fb2212e562b436b0086fa4ef2", "committedDate": "2020-02-04 10:50:14 -0800", "message": "bulk update RStudio, Inc. => RStudio, PBC"}, {"oid": "86349d87c93b5b447651ba53ba3a5ca175b9f593", "committedDate": "2020-02-04 14:26:53 -0800", "message": "Merge pull request #6138 from rstudio/bugfix/find-in-files-exception"}, {"oid": "f9de8491d8975ad1f440b77be99e083e1379161e", "committedDate": "2020-03-18 11:47:45 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "d6283900feec65069669929ce63b19fcf73ebb1c", "committedDate": "2020-07-28 06:48:23 -0400", "message": "fix focus/selection bug for visual editor that occurred when exiting find in files dialog"}, {"oid": "3daa85047da1641d744b2aeb36d1a064b997da80", "committedDate": "2020-07-29 16:19:51 -0400", "message": "Revert \"fix focus/selection bug for visual editor that occurred when exiting find in files dialog\""}, {"oid": "7b18374c67f0a3e43acaeb7999fbdaaaaaf43d70", "committedDate": "2020-08-06 22:12:08 -0700", "message": "modernize a couple more events into the single-file format"}, {"oid": "7f835483591826c63ab86fcdc1421240197ba086", "committedDate": "2020-09-05 18:31:13 -0700", "message": "minor mechanical cleanup of some find-in-files Java sources"}, {"oid": "94e294ec04da136a9af0427c7a17e74de5c82749", "committedDate": "2020-09-06 14:59:44 -0700", "message": "prevent exception from clicking replace with no dialogState"}, {"oid": "a7dc4aeaaea541b0b4fa93b3ef0dcc829f599c72", "committedDate": "2020-09-29 14:40:37 -0400", "message": "fix issue preventing project-relative paths from being saved"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "53c94c30af0386f01d231e65055c35fade77526f", "committedDate": "2021-01-27 18:32:00 -0500", "message": "modify query to regex when whole word is selected"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d202c7ca4518d782823845e8d11a17f4f2b3188e", "committedDate": "2022-01-21 17:11:25 -0500", "message": "fix frontend bug in completeReplace call when whole word option is checked"}, {"oid": "cf0f5d7a94da7cc9557022aa1e7d0654e68f78b6", "committedDate": "2022-01-24 10:50:30 -0500", "message": "Rename unit test, add fixes to NEWS, and update code comments"}, {"oid": "c8079b31a19d0dc2425557daad24d7da6dae2ed8", "committedDate": "2022-03-01 17:14:07 -0500", "message": "update Search label on preview replace event"}, {"oid": "5d297e92053297b6677cfe723172cf260b85592b", "committedDate": "2022-03-15 11:51:26 -0400", "message": "Add refresh button functionality, restart beginFind when clicked"}, {"oid": "09cb731a7a11247df7dd2e269993e96277c58dbc", "committedDate": "2022-03-15 13:57:24 -0400", "message": "Make sure replace mode fully turned off when starting new begin Find"}, {"oid": "ce535f124a763e205c1e92265e88d717fd4478ee", "committedDate": "2022-03-16 09:24:13 -0400", "message": "Update src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java"}, {"oid": "e4a05b678221835e16e7e4623bcf01d62d418437", "committedDate": "2022-03-16 11:21:47 -0400", "message": "Remove unnecessary code"}, {"oid": "22306199e82e1e72f67d4fc9ad5659a3bfd05c74", "committedDate": "2022-03-16 12:36:29 -0400", "message": "tweaks to make sure that stop button and refresh button never show at the same time, especially on initialization"}, {"oid": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "committedDate": "2022-03-30 15:45:24 -0700", "message": "Always use `git grep` when possible (#10594)"}, {"oid": "b2c56eb99fca06e45d66d4c27a12e5d97705a449", "committedDate": "2022-05-05 11:51:39 -0700", "message": "Fix SW bugs in Find in Files path and find in files replacements (#11143)"}, {"oid": "6f9f6727c427e2a9d0503c6344134fd1c4b7a027", "committedDate": "2022-08-17 14:54:06 -0400", "message": "checkpoint"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "c4f507fb638f9ac30e24911ec206da88e639acf2", "committedDate": "2023-05-03 11:20:27 -0700", "message": "use '-w' flag for whole word (#13087)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MjMyNA==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366082324", "body": "Maybe we should only add this value change handler when `session_.getSessionInfo().isVcsAvailable` is true? (otherwise there's no point as we'd never show git options)", "bodyText": "Maybe we should only add this value change handler when session_.getSessionInfo().isVcsAvailable is true? (otherwise there's no point as we'd never show git options)", "bodyHTML": "<p dir=\"auto\">Maybe we should only add this value change handler when <code>session_.getSessionInfo().isVcsAvailable</code> is true? (otherwise there's no point as we'd never show git options)</p>", "author": "jmcphers", "createdAt": "2020-01-13T23:24:42Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java", "diffHunk": "@@ -509,6 +525,33 @@ public void onResponseReceived(String handle)\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {", "originalCommit": "395ca23a264350cade327bbb2f6896f33bab06c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5NjY3NQ==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366096675", "bodyText": "done \ud83d\udc4d", "author": "melissa-barca", "createdAt": "2020-01-14T00:16:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4MjMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..e2132ae8de 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex e2132ae8de..881b306b01 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,33 +518,6 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n-            {\n-               fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n-                  @Override\n-                  public void onResponseReceived(Boolean isGitDirectory)\n-                  {\n-                     dialog.setGitStatus(isGitDirectory);\n-                  }\n-   \n-                  @Override\n-                  public void onError(ServerError error)\n-                  {\n-                     // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n-                     dialog.setGitStatus(true);\n-                     Debug.logError(error);\n-                  }\n-               });\n-            }\n-         });\n-      }\n-\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "383f3f50077970e7376f619324eacb9b1a047ead", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 881b306b01..ed002dee6f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -518,6 +525,33 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)\n+                     dialog.setGitStatus(true);\n+                  else\n+                     dialog.setGitStatus(false);\n+               }\n+\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled later\n+                  dialog.setGitStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n+\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "6822b2d9b1e080539f54ea89b12d25b287f500d3", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..e2132ae8de 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "46f6e09c13285b121062782e122f555b854a5a1f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ed002dee6f..7a69edb386 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +526,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                   new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n+            {\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n                      dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 7a69edb386..39d1136188 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,33 +526,6 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n-            {\n-               fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n-                  @Override\n-                  public void onResponseReceived(Boolean isGitDirectory)\n-                  {\n-                     dialog.setGitStatus(isGitDirectory);\n-                  }\n-   \n-                  @Override\n-                  public void onError(ServerError error)\n-                  {\n-                     // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n-                     dialog.setGitStatus(true);\n-                     Debug.logError(error);\n-                  }\n-               });\n-            }\n-         });\n-      }\n-\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 39d1136188..adc63b3035 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -526,6 +532,33 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                   new ServerRequestCallback<Boolean>() {\n+               @Override\n+               public void onResponseReceived(Boolean isGitDirectory)\n+               {\n+                  if (isGitDirectory)\n+                     dialog.setGitStatus(true);\n+                  else\n+                     dialog.setGitStatus(false);\n+               }\n+\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled later\n+                  dialog.setGitStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n+\n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n       \n", "next_change": {"commit": "4da19f30bc83bba7f492781e0c9aefafb450c028", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex adc63b3035..6f412e7e34 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -551,11 +551,29 @@ public class FindOutputPresenter extends BasePresenter\n                public void onError(ServerError error)\n                {\n                   // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled later\n+                  // if the user enters invalid data it will be handled by the backend\n                   dialog.setGitStatus(true);\n                   Debug.logError(error);\n                }\n             });\n+\n+            fileServer_.isPackageDirectory(dialog.getDirectory(),\n+                                           new ServerRequestCallback<Boolean>()\n+            {\n+               @Override\n+               public void onResponseReceived(final Boolean isPackageDirectory)\n+               {\n+                  dialog.setPackageStatus(isPackageDirectory);\n+               }\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled by the backend\n+                  dialog.setPackageStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n          }\n       });\n \n", "next_change": {"commit": "1b397a62560e288e4cda7aa5b4fdb325c1d9dc78", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 6f412e7e34..7ab9b3a836 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -532,50 +525,32 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-         @Override\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                       new ServerRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean isGitDirectory)\n-               {\n-                  if (isGitDirectory)\n-                     dialog.setGitStatus(true);\n-                  else\n-                     dialog.setGitStatus(false);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled by the backend\n-                  dialog.setGitStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-\n-            fileServer_.isPackageDirectory(dialog.getDirectory(),\n-                                           new ServerRequestCallback<Boolean>()\n+      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n+      {\n+         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+            @Override\n+            public void onValueChange(ValueChangeEvent<String> event)\n             {\n-               @Override\n-               public void onResponseReceived(final Boolean isPackageDirectory)\n-               {\n-                  dialog.setPackageStatus(isPackageDirectory);\n-               }\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  // assume true if we are not sure\n-                  // if the user enters invalid data it will be handled by the backend\n-                  dialog.setPackageStatus(true);\n-                  Debug.logError(error);\n-               }\n-            });\n-         }\n-      });\n+               fileServer_.isGitDirectory(dialog.getDirectory(),\n+                                      new ServerRequestCallback<Boolean>() {\n+                  @Override\n+                  public void onResponseReceived(Boolean isGitDirectory)\n+                  {\n+                     dialog.setGitStatus(isGitDirectory);\n+                  }\n+   \n+                  @Override\n+                  public void onError(ServerError error)\n+                  {\n+                     // assume true if we are not sure\n+                     // if the user enters invalid data it will be handled later\n+                     dialog.setGitStatus(true);\n+                     Debug.logError(error);\n+                  }\n+               });\n+            }\n+         });\n+      }\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "33b845043faedd6bef45aad45ed0040a95e9e721", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 7ab9b3a836..ce7d635146 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -525,32 +525,50 @@ public class FindOutputPresenter extends BasePresenter\n          }\n       });\n \n-      if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n-      {\n-         dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n-            @Override\n-            public void onValueChange(ValueChangeEvent<String> event)\n+      dialog.getDirectoryChooser().addValueChangeHandler(new ValueChangeHandler<String>() {\n+         @Override\n+         public void onValueChange(ValueChangeEvent<String> event)\n+         {\n+            if (session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n             {\n                fileServer_.isGitDirectory(dialog.getDirectory(),\n-                                      new ServerRequestCallback<Boolean>() {\n+                                          new ServerRequestCallback<Boolean>() {\n                   @Override\n                   public void onResponseReceived(Boolean isGitDirectory)\n                   {\n                      dialog.setGitStatus(isGitDirectory);\n                   }\n-   \n+\n                   @Override\n                   public void onError(ServerError error)\n                   {\n                      // assume true if we are not sure\n-                     // if the user enters invalid data it will be handled later\n+                     // if the user enters invalid data it will be handled by the backend\n                      dialog.setGitStatus(true);\n                      Debug.logError(error);\n                   }\n                });\n             }\n-         });\n-      }\n+\n+            fileServer_.isPackageDirectory(dialog.getDirectory(),\n+                                           new ServerRequestCallback<Boolean>()\n+            {\n+               @Override\n+               public void onResponseReceived(final Boolean isPackageDirectory)\n+               {\n+                  dialog.setPackageStatus(isPackageDirectory);\n+               }\n+               @Override\n+               public void onError(ServerError error)\n+               {\n+                  // assume true if we are not sure\n+                  // if the user enters invalid data it will be handled by the backend\n+                  dialog.setPackageStatus(true);\n+                  Debug.logError(error);\n+               }\n+            });\n+         }\n+      });\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex ce7d635146..33bbdc3194 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -572,7 +567,7 @@ public class FindOutputPresenter extends BasePresenter\n \n       if (!StringUtil.isNullOrEmpty(event.getSearchPattern()))\n          dialog.setSearchPattern(event.getSearchPattern());\n-      \n+\n       if (dialogState_ == null)\n       {\n          dialog.setDirectory(\n", "next_change": {"commit": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\nindex 33bbdc3194..8772fdd76a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java\n", "chunk": "@@ -574,6 +599,8 @@ public class FindOutputPresenter extends BasePresenter\n                session_.getSessionInfo().getActiveProjectDir() != null ?\n                session_.getSessionInfo().getActiveProjectDir() :\n                workbenchContext_.getCurrentWorkingDir());\n+\n+         dialog.checkboxExcludeGitIgnore_.setValue(true);\n       }\n       else\n       {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "46f6e09c13285b121062782e122f555b854a5a1f", "message": "Merge commit", "committedDate": null}, {"oid": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "committedDate": "2020-01-09 12:17:09 -0800", "message": "fix spacing and add error checking for when a user tries to search a package while not in a package session"}, {"oid": "9ee1ca83af5561bbc2ebd1dcf479d9b79adb4bd3", "committedDate": "2020-01-09 17:49:03 -0800", "message": "update state name"}, {"oid": "b446c85fe3bc8c31ddf7611f5343bafb219960af", "committedDate": "2020-01-13 16:03:50 -0800", "message": "rename functions using retrieve because we are not fetching update include/exclude file patterns to use enums for readability disable the Git option when git is not installed"}, {"oid": "b02744c1a5292e0403f0a32965f4dbde8535c629", "committedDate": "2020-01-13 16:03:50 -0800", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar was visible after the replace had completed - removed code unnsuccesfully trying to fix this"}, {"oid": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "committedDate": "2020-01-13 16:03:50 -0800", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected add value change handler to Find In Files directory chooser, on changes check if the new directory is a git repository and if git is installed add new Files Server operation to check if a directory is a git directory"}, {"oid": "4da19f30bc83bba7f492781e0c9aefafb450c028", "committedDate": "2020-01-13 16:03:50 -0800", "message": "add include option for user to filter by package source code add new RPC to check if a directory is a package, only display the package source option for package directories"}, {"oid": "0d277db4376dd4c482af64f88967829db017b46b", "committedDate": "2020-01-15 16:00:05 -0800", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448", "committedDate": "2020-01-16 14:02:08 -0800", "message": "add include options to GrepOptions class"}, {"oid": "1b397a62560e288e4cda7aa5b4fdb325c1d9dc78", "committedDate": "2020-01-27 10:21:57 -0800", "message": "fix bug where resultsCount was being cleared before being initialized"}, {"oid": "33b845043faedd6bef45aad45ed0040a95e9e721", "committedDate": "2020-01-27 16:32:37 -0800", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/find-in-files-exception"}, {"oid": "9a23c4f28563d77e6c5670c76581636e688fbddd", "committedDate": "2020-02-03 17:04:57 -0800", "message": "prevent resultsCount from being set when Find In Files state is null"}, {"oid": "30aa1f83a276c19fb2212e562b436b0086fa4ef2", "committedDate": "2020-02-04 10:50:14 -0800", "message": "bulk update RStudio, Inc. => RStudio, PBC"}, {"oid": "86349d87c93b5b447651ba53ba3a5ca175b9f593", "committedDate": "2020-02-04 14:26:53 -0800", "message": "Merge pull request #6138 from rstudio/bugfix/find-in-files-exception"}, {"oid": "f9de8491d8975ad1f440b77be99e083e1379161e", "committedDate": "2020-03-18 11:47:45 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "d6283900feec65069669929ce63b19fcf73ebb1c", "committedDate": "2020-07-28 06:48:23 -0400", "message": "fix focus/selection bug for visual editor that occurred when exiting find in files dialog"}, {"oid": "3daa85047da1641d744b2aeb36d1a064b997da80", "committedDate": "2020-07-29 16:19:51 -0400", "message": "Revert \"fix focus/selection bug for visual editor that occurred when exiting find in files dialog\""}, {"oid": "7b18374c67f0a3e43acaeb7999fbdaaaaaf43d70", "committedDate": "2020-08-06 22:12:08 -0700", "message": "modernize a couple more events into the single-file format"}, {"oid": "7f835483591826c63ab86fcdc1421240197ba086", "committedDate": "2020-09-05 18:31:13 -0700", "message": "minor mechanical cleanup of some find-in-files Java sources"}, {"oid": "94e294ec04da136a9af0427c7a17e74de5c82749", "committedDate": "2020-09-06 14:59:44 -0700", "message": "prevent exception from clicking replace with no dialogState"}, {"oid": "a7dc4aeaaea541b0b4fa93b3ef0dcc829f599c72", "committedDate": "2020-09-29 14:40:37 -0400", "message": "fix issue preventing project-relative paths from being saved"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "53c94c30af0386f01d231e65055c35fade77526f", "committedDate": "2021-01-27 18:32:00 -0500", "message": "modify query to regex when whole word is selected"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d202c7ca4518d782823845e8d11a17f4f2b3188e", "committedDate": "2022-01-21 17:11:25 -0500", "message": "fix frontend bug in completeReplace call when whole word option is checked"}, {"oid": "cf0f5d7a94da7cc9557022aa1e7d0654e68f78b6", "committedDate": "2022-01-24 10:50:30 -0500", "message": "Rename unit test, add fixes to NEWS, and update code comments"}, {"oid": "c8079b31a19d0dc2425557daad24d7da6dae2ed8", "committedDate": "2022-03-01 17:14:07 -0500", "message": "update Search label on preview replace event"}, {"oid": "5d297e92053297b6677cfe723172cf260b85592b", "committedDate": "2022-03-15 11:51:26 -0400", "message": "Add refresh button functionality, restart beginFind when clicked"}, {"oid": "09cb731a7a11247df7dd2e269993e96277c58dbc", "committedDate": "2022-03-15 13:57:24 -0400", "message": "Make sure replace mode fully turned off when starting new begin Find"}, {"oid": "ce535f124a763e205c1e92265e88d717fd4478ee", "committedDate": "2022-03-16 09:24:13 -0400", "message": "Update src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindOutputPresenter.java"}, {"oid": "e4a05b678221835e16e7e4623bcf01d62d418437", "committedDate": "2022-03-16 11:21:47 -0400", "message": "Remove unnecessary code"}, {"oid": "22306199e82e1e72f67d4fc9ad5659a3bfd05c74", "committedDate": "2022-03-16 12:36:29 -0400", "message": "tweaks to make sure that stop button and refresh button never show at the same time, especially on initialization"}, {"oid": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "committedDate": "2022-03-30 15:45:24 -0700", "message": "Always use `git grep` when possible (#10594)"}, {"oid": "b2c56eb99fca06e45d66d4c27a12e5d97705a449", "committedDate": "2022-05-05 11:51:39 -0700", "message": "Fix SW bugs in Find in Files path and find in files replacements (#11143)"}, {"oid": "6f9f6727c427e2a9d0503c6344134fd1c4b7a027", "committedDate": "2022-08-17 14:54:06 -0400", "message": "checkpoint"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "c4f507fb638f9ac30e24911ec206da88e639acf2", "committedDate": "2023-05-03 11:20:27 -0700", "message": "use '-w' flag for whole word (#13087)"}]}, {"oid": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "url": "https://github.com/rstudio/rstudio/commit/6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "message": "only check if a directory is a git directory if git is installed", "committedDate": "2020-01-14T00:15:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3NTg4Nw==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366575887", "body": "Nit: could you rename this `includeFilePatterns` to mirror `excludeFilePatterns`, as well as other occurrences? I think that would make it a bit clearer when just glancing over the code.", "bodyText": "Nit: could you rename this includeFilePatterns to mirror excludeFilePatterns, as well as other occurrences? I think that would make it a bit clearer when just glancing over the code.", "bodyHTML": "<p dir=\"auto\">Nit: could you rename this <code>includeFilePatterns</code> to mirror <code>excludeFilePatterns</code>, as well as other occurrences? I think that would make it a bit clearer when just glancing over the code.</p>", "author": "MariaSemple", "createdAt": "2020-01-14T21:15:43Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -58,15 +62,15 @@ public static native State createState(String query,\n                                              String path,\n                                              boolean regex,\n                                              boolean caseSensitive,\n-                                             boolean gitIgnore,\n-                                             JsArrayString filePatterns) /*-{\n+                                             JsArrayString filePatterns,", "originalCommit": "6cd4082277d1c3d5eb1ec0619b085777d1578ca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwMDA5Mg==", "url": "https://github.com/rstudio/rstudio/pull/5954#discussion_r366600092", "bodyText": "Done", "author": "melissa-barca", "createdAt": "2020-01-14T22:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3NTg4Nw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "74318734f3e7c8c5aed401f80fa99b729666411e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 4168e03c3c..8c0e5c9a5b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -62,6 +62,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n                                              String path,\n                                              boolean regex,\n                                              boolean caseSensitive,\n+                                             boolean wholeWord,\n                                              JsArrayString filePatterns,\n                                              JsArrayString excludeFilePatterns) /*-{\n          return {\n", "next_change": {"commit": "ae0bef92342e984ecf513da367ba12db22ad2b95", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 8c0e5c9a5b..04e453f9fc 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -70,7 +70,7 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n             path: path,\n             regex: regex,\n             caseSensitive: caseSensitive,\n-            wholeWord: wholeWord, \n+            wholeWord: wholeWord,\n             filePatterns: filePatterns,\n             excludeFilePatterns: excludeFilePatterns,\n             resultsCount: 0,\n", "next_change": {"commit": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\nindex 04e453f9fc..c563a3f70c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java\n", "chunk": "@@ -72,6 +69,8 @@ public class FindInFilesDialog extends ModalDialog<FindInFilesDialog.State>\n             caseSensitive: caseSensitive,\n             wholeWord: wholeWord,\n             filePatterns: filePatterns,\n+            useGitGrep: useGitGrep,\n+            excludeGitIgnore: excludeGitIgnore,\n             excludeFilePatterns: excludeFilePatterns,\n             resultsCount: 0,\n             errorCount: 0,\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "46f6e09c13285b121062782e122f555b854a5a1f", "message": "Merge commit", "committedDate": null}, {"oid": "7803a4ddae43b2883f67c182e49fbe561a9bf002", "committedDate": "2020-01-08 14:59:15 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "2d7059c81c36c388ef67ecffd4533b63d13d5581", "committedDate": "2020-01-08 18:06:09 -0800", "message": "add include option for R packages (R/ src/ tests/)"}, {"oid": "23c69b18ec6a9104853731e0c4b50c1b18c9161f", "committedDate": "2020-01-09 12:17:09 -0800", "message": "fix spacing and add error checking for when a user tries to search a package while not in a package session"}, {"oid": "cac983631da2f51d35b5cfe5568c6e4cb5f1b8c4", "committedDate": "2020-01-13 16:02:30 -0800", "message": "update the UI so a user cannot input file patterns when using git exclusions as git grep doesn't have an equivalent to grep's --include"}, {"oid": "b446c85fe3bc8c31ddf7611f5343bafb219960af", "committedDate": "2020-01-13 16:03:50 -0800", "message": "rename functions using retrieve because we are not fetching update include/exclude file patterns to use enums for readability disable the Git option when git is not installed"}, {"oid": "b02744c1a5292e0403f0a32965f4dbde8535c629", "committedDate": "2020-01-13 16:03:50 -0800", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar was visible after the replace had completed - removed code unnsuccesfully trying to fix this"}, {"oid": "8988227b65a5ac2f92cadbaaccdfd84887c02a29", "committedDate": "2020-01-13 16:03:50 -0800", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected add value change handler to Find In Files directory chooser, on changes check if the new directory is a git repository and if git is installed add new Files Server operation to check if a directory is a git directory"}, {"oid": "4da19f30bc83bba7f492781e0c9aefafb450c028", "committedDate": "2020-01-13 16:03:50 -0800", "message": "add include option for user to filter by package source code add new RPC to check if a directory is a package, only display the package source option for package directories"}, {"oid": "1c158214d1b7cb337026bed8baeedf2ec2d92da4", "committedDate": "2020-01-14 13:32:54 -0800", "message": "only allow includes that don't require the grep --include parameter when filtering with git"}, {"oid": "ceb218b2a0b36ad4fd47aa3863e6226b2d166f7a", "committedDate": "2020-01-14 16:38:38 -0800", "message": "allow user to filter by package source and follow standard git exclusions"}, {"oid": "0d277db4376dd4c482af64f88967829db017b46b", "committedDate": "2020-01-15 16:00:05 -0800", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "852c6e6d5c7b731110d97e3345240b2a68efc2ae", "committedDate": "2020-01-15 16:51:42 -0800", "message": "rename enums for readability fix issue where Git and Package states weren't preserved"}, {"oid": "285a581ac72308a9a0ac541889b2a4d84324568d", "committedDate": "2020-01-16 12:55:22 -0800", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/find-in-package-src"}, {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448", "committedDate": "2020-01-16 14:02:08 -0800", "message": "add include options to GrepOptions class"}, {"oid": "5f301b22a1a8d2cb1d7d761b244e82397ea2c410", "committedDate": "2020-01-23 14:07:25 -0800", "message": "clean up warning message implement and use dom utility to disable or an enable an option"}, {"oid": "ce40ab9d46b2dfec6143eaf33610d18646b3b27e", "committedDate": "2020-01-27 14:16:50 -0800", "message": "move getIndexFromValue to FormListBox and switch find in files dialog to use FormListBox. When Package Source is selected and the user selects a non-package directory, switch include option to All Files"}, {"oid": "30aa1f83a276c19fb2212e562b436b0086fa4ef2", "committedDate": "2020-02-04 10:50:14 -0800", "message": "bulk update RStudio, Inc. => RStudio, PBC"}, {"oid": "4cec2b9e4289f49b5739903b78187e3406083f30", "committedDate": "2020-02-10 09:38:48 -0800", "message": "fix bug where the include logic was always set to 'All Files' when the directory was not identified as a package"}, {"oid": "75fb5040283c17f9991745e6c96ec6179ed75b3e", "committedDate": "2020-02-18 15:08:29 -0800", "message": "update `Search in` option to search Package Source or Package Test - remove .Rd files from Common R Source Files option"}, {"oid": "f9de8491d8975ad1f440b77be99e083e1379161e", "committedDate": "2020-03-18 11:47:45 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "7f835483591826c63ab86fcdc1421240197ba086", "committedDate": "2020-09-05 18:31:13 -0700", "message": "minor mechanical cleanup of some find-in-files Java sources"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "74318734f3e7c8c5aed401f80fa99b729666411e", "committedDate": "2021-01-27 18:07:49 -0500", "message": "add \"whole word\" checkbox and disable for regexes"}, {"oid": "53c94c30af0386f01d231e65055c35fade77526f", "committedDate": "2021-01-27 18:32:00 -0500", "message": "modify query to regex when whole word is selected"}, {"oid": "74bf06d8945a59e62282d45127427c72daf73c01", "committedDate": "2021-01-28 12:22:36 -0500", "message": "add aria labels for accessibility and automated tests"}, {"oid": "4e6fa8a3fb02c90695943bd40844ca1a7e59197b", "committedDate": "2021-01-29 10:38:07 -0500", "message": "set element ID because elements were already accessible"}, {"oid": "ae0bef92342e984ecf513da367ba12db22ad2b95", "committedDate": "2021-01-29 09:48:17 -0800", "message": "create and use FormCheckBox to set elementId from ui.xml file"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "29464a5e49dcbe95cf0d9ce89adca95747aeae18", "committedDate": "2022-03-30 15:45:24 -0700", "message": "Always use `git grep` when possible (#10594)"}, {"oid": "5d0e7c2118f3be2dc469819a4b0b9e4c309805ef", "committedDate": "2022-04-25 15:16:29 -0600", "message": "rest of tabs"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "404c6dea4cd88c2325c36f416151ab45c6016bb7", "committedDate": "2022-09-30 04:37:49 -0700", "message": "eliminate eclipse warnings"}, {"oid": "c4f507fb638f9ac30e24911ec206da88e639acf2", "committedDate": "2023-05-03 11:20:27 -0700", "message": "use '-w' flag for whole word (#13087)"}]}, {"oid": "837672d7049b6189d4dad40fc216d29375274ecb", "url": "https://github.com/rstudio/rstudio/commit/837672d7049b6189d4dad40fc216d29375274ecb", "message": "refactor git grep changes for readability and bug fix\n- fix potential bug when regex doesn't return 3 matches\n- remame filePatterns to includeFilePatterns for clarity\n- create grep/git grep commands separately\n- renamed function to parse grep output", "committedDate": "2020-01-14T23:05:09Z", "type": "commit"}, {"oid": "2d8f27b4fa882783175980dc41ee422bcf3bf688", "url": "https://github.com/rstudio/rstudio/commit/2d8f27b4fa882783175980dc41ee422bcf3bf688", "message": "add safety check and add comment for clarity", "committedDate": "2020-01-15T00:50:49Z", "type": "commit"}, {"oid": "92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "url": "https://github.com/rstudio/rstudio/commit/92ffa58d85cbd32f1a69ecb397dbe0bbb51fb677", "message": "fix initialization of excludeFilePatterns, ignore some files in .gitignore, improve accessibility\n\nrefactor createGitIgnoreString, make string include every .gitignore file", "committedDate": "2020-01-15T01:11:30Z", "type": "commit"}, {"oid": "5893773badcfa073c810d8a490903428d5fe03c8", "url": "https://github.com/rstudio/rstudio/commit/5893773badcfa073c810d8a490903428d5fe03c8", "message": "fix case\n\nfix git command to check for ignored files\n\nrename gitignore variables to accurately represent exclude-standard functionality\n\nrefactor code to meet standards", "committedDate": "2020-01-15T01:11:35Z", "type": "commit"}, {"oid": "3d9b24f7249afa25497042255eaf98f433d02102", "url": "https://github.com/rstudio/rstudio/commit/3d9b24f7249afa25497042255eaf98f433d02102", "message": "use `git grep` when excluding standard git exclusions to prevent an unbounded amount of output", "committedDate": "2020-01-15T01:11:43Z", "type": "commit"}, {"oid": "d5da1169b3d97a2f1c9e74c498b6aba824ea92a4", "url": "https://github.com/rstudio/rstudio/commit/d5da1169b3d97a2f1c9e74c498b6aba824ea92a4", "message": "make Find in Files functional with `git grep`\n- standard output from `git grep` differs from `grep` and this needs to be accounted for when\n  parsing our results", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "78018841564840c4ae777dc5018d68543e6b897c", "url": "https://github.com/rstudio/rstudio/commit/78018841564840c4ae777dc5018d68543e6b897c", "message": "update FindInFilesState to save data related to replace previews on pause\n- also made updateFrequency_ in progress const bc it shouldn't change", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "e01cd01dbb68041ee6b3bd293e11f3a86fe9d4ed", "url": "https://github.com/rstudio/rstudio/commit/e01cd01dbb68041ee6b3bd293e11f3a86fe9d4ed", "message": "add unit tests for regexes used to parse stdout results\n- move regex retrieval to SessionFind.hpp\n- also fix bug where exclude no longer worked with git grep,\n  and never worked when multiple patterns were requested\n- renamed some existing unit test variables to match standards", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "7000138961795e830f72eb19637f310bef436e3f", "url": "https://github.com/rstudio/rstudio/commit/7000138961795e830f72eb19637f310bef436e3f", "message": "update the UI so a user cannot input file patterns when using git exclusions\nas git grep doesn't have an equivalent to grep's --include", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "1473d510d7f510a8e03a774f509b385ab457a322", "url": "https://github.com/rstudio/rstudio/commit/1473d510d7f510a8e03a774f509b385ab457a322", "message": "rename functions using retrieve because we are not fetching\nupdate include/exclude file patterns to use enums for readability\ndisable the Git option when git is not installed", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "29c5a50ff304c9c5299d19f7f3aab400943a4f34", "url": "https://github.com/rstudio/rstudio/commit/29c5a50ff304c9c5299d19f7f3aab400943a4f34", "message": "fix issue where in rare cases ReplaceOperationEndedEvent wasn't getting called and the progress bar\nwas visible after the replace had completed\n- removed code unnsuccesfully trying to fix this", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "383f3f50077970e7376f619324eacb9b1a047ead", "url": "https://github.com/rstudio/rstudio/commit/383f3f50077970e7376f619324eacb9b1a047ead", "message": "disable Standard Git Exclusions selection when git is not installed or a git repo isn't selected\nadd value change handler to Find In Files directory chooser, on changes check if the new directory\nis a git repository and if git is installed\nadd new Files Server operation to check if a directory is a git directory", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "6822b2d9b1e080539f54ea89b12d25b287f500d3", "url": "https://github.com/rstudio/rstudio/commit/6822b2d9b1e080539f54ea89b12d25b287f500d3", "message": "only check if a directory is a git directory if git is installed", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "890eec1e0e8103dfd3cb37807128f600430bffe7", "url": "https://github.com/rstudio/rstudio/commit/890eec1e0e8103dfd3cb37807128f600430bffe7", "message": "refactor git grep changes for readability and bug fix\n- fix potential bug when regex doesn't return 3 matches\n- remame filePatterns to includeFilePatterns for clarity\n- create grep/git grep commands separately\n- renamed function to parse grep output", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "3820db91167b139d1192d21763d0004a0b9858c5", "url": "https://github.com/rstudio/rstudio/commit/3820db91167b139d1192d21763d0004a0b9858c5", "message": "add safety check and add comment for clarity", "committedDate": "2020-01-15T01:11:55Z", "type": "commit"}, {"oid": "c8feea1c5ed1cba80a31decabe75c8aa732691c6", "url": "https://github.com/rstudio/rstudio/commit/c8feea1c5ed1cba80a31decabe75c8aa732691c6", "message": "Merge branch 'feature/replace-git-ignore' of https://github.com/rstudio/rstudio into feature/replace-git-ignore", "committedDate": "2020-01-16T19:24:26Z", "type": "commit"}, {"oid": "0beef751656ddf7e66329446c1e499f2c8ef8090", "url": "https://github.com/rstudio/rstudio/commit/0beef751656ddf7e66329446c1e499f2c8ef8090", "message": "move excludeFilePatterns derivatives into GrepOptions and switch GrepOptions to a class", "committedDate": "2020-01-16T20:23:40Z", "type": "commit"}, {"oid": "318bfb8f512c55574dbbe004480b19b966e03004", "url": "https://github.com/rstudio/rstudio/commit/318bfb8f512c55574dbbe004480b19b966e03004", "message": "remove const when returning by-value", "committedDate": "2020-01-16T20:35:39Z", "type": "commit"}]}