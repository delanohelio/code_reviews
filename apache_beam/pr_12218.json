{"pr_number": 12218, "pr_title": "[BEAM-10444] Simpler PAssert for simpler cases.", "pr_author": "robertwb", "pr_createdAt": "2020-07-10T17:48:31Z", "pr_url": "https://github.com/apache/beam/pull/12218", "timeline": [{"oid": "725cc9a4e04dfcfc755b6e391f45c9cee794713c", "url": "https://github.com/apache/beam/commit/725cc9a4e04dfcfc755b6e391f45c9cee794713c", "message": "[BEAM-10444] Simpler PAssert for simpler cases.", "committedDate": "2020-07-10T17:44:59Z", "type": "commit"}, {"oid": "505cad3b4505b62d2224c4af42b41fa3db5536b0", "url": "https://github.com/apache/beam/commit/505cad3b4505b62d2224c4af42b41fa3db5536b0", "message": "Add necessary triggering for unbounded PCollections.", "committedDate": "2020-07-10T19:08:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0ODAzNQ==", "url": "https://github.com/apache/beam/pull/12218#discussion_r453048035", "body": "```suggestion\r\n                // Default end-of-window trigger disallowed for unbounded PCollections.\r\n```\r\n\r\nNit: spelling", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // Default end-of-window trigger dissallowed for unbounded PCollections.\n          \n          \n            \n                            // Default end-of-window trigger disallowed for unbounded PCollections.\n          \n      \n    \n    \n  \n\nNit: spelling", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> Default end-of-window trigger <span class=\"x x-first x-last\">dissallowed</span> for unbounded PCollections.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> Default end-of-window trigger <span class=\"x x-first x-last\">disallowed</span> for unbounded PCollections.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Nit: spelling</p>", "author": "ibzib", "createdAt": "2020-07-10T19:51:38Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java", "diffHunk": "@@ -1171,6 +1174,41 @@ public GroupGlobally(AssertionWindows rewindowingStrategy) {\n     public PCollection<Iterable<ValueInSingleWindow<T>>> expand(PCollection<T> input) {\n       final int combinedKey = 42;\n \n+      if (input.getWindowingStrategy().equals(WindowingStrategy.globalDefault())\n+          && rewindowingStrategy instanceof IntoGlobalWindow) {\n+        // If we don't have to worry about complicated triggering semantics we can generate\n+        // a much simpler pipeline.  This is particularly useful for bootstrapping runners so that\n+        // we can run subsets of the validates runner test suite requiring support of only the\n+        // most basic primitives.\n+\n+        // In order to ensure we actually get an (empty) iterable rather than an empty PCollection\n+        // when the input is an empty PCollection, we flatten with a dummy PCollection containing\n+        // an empty iterable before grouping on a singleton key and concatenating.\n+        PCollection<Iterable<ValueInSingleWindow<T>>> actual =\n+            input.apply(Reify.windows()).apply(ParDo.of(new ToSingletonIterables<>()));\n+        PCollection<Iterable<ValueInSingleWindow<T>>> dummy =\n+            input\n+                .getPipeline()\n+                .apply(\n+                    Create.<Iterable<ValueInSingleWindow<T>>>of(\n+                            ImmutableList.of(ImmutableList.of()))\n+                        .withCoder(actual.getCoder()));\n+        return PCollectionList.of(dummy)\n+            .and(actual)\n+            .apply(Flatten.pCollections())\n+            .apply(\n+                // Default end-of-window trigger dissallowed for unbounded PCollections.", "originalCommit": "505cad3b4505b62d2224c4af42b41fa3db5536b0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MjE0MA==", "url": "https://github.com/apache/beam/pull/12218#discussion_r453052140", "body": "Why does this only apply to unbounded PCollections? It looks like the existing translation removes triggers for both bounded and unbounded.", "bodyText": "Why does this only apply to unbounded PCollections? It looks like the existing translation removes triggers for both bounded and unbounded.", "bodyHTML": "<p dir=\"auto\">Why does this only apply to unbounded PCollections? It looks like the existing translation removes triggers for both bounded and unbounded.</p>", "author": "ibzib", "createdAt": "2020-07-10T20:01:19Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java", "diffHunk": "@@ -1171,6 +1174,41 @@ public GroupGlobally(AssertionWindows rewindowingStrategy) {\n     public PCollection<Iterable<ValueInSingleWindow<T>>> expand(PCollection<T> input) {\n       final int combinedKey = 42;\n \n+      if (input.getWindowingStrategy().equals(WindowingStrategy.globalDefault())\n+          && rewindowingStrategy instanceof IntoGlobalWindow) {\n+        // If we don't have to worry about complicated triggering semantics we can generate\n+        // a much simpler pipeline.  This is particularly useful for bootstrapping runners so that\n+        // we can run subsets of the validates runner test suite requiring support of only the\n+        // most basic primitives.\n+\n+        // In order to ensure we actually get an (empty) iterable rather than an empty PCollection\n+        // when the input is an empty PCollection, we flatten with a dummy PCollection containing\n+        // an empty iterable before grouping on a singleton key and concatenating.\n+        PCollection<Iterable<ValueInSingleWindow<T>>> actual =\n+            input.apply(Reify.windows()).apply(ParDo.of(new ToSingletonIterables<>()));\n+        PCollection<Iterable<ValueInSingleWindow<T>>> dummy =\n+            input\n+                .getPipeline()\n+                .apply(\n+                    Create.<Iterable<ValueInSingleWindow<T>>>of(\n+                            ImmutableList.of(ImmutableList.of()))\n+                        .withCoder(actual.getCoder()));\n+        return PCollectionList.of(dummy)\n+            .and(actual)\n+            .apply(Flatten.pCollections())\n+            .apply(\n+                // Default end-of-window trigger dissallowed for unbounded PCollections.", "originalCommit": "505cad3b4505b62d2224c4af42b41fa3db5536b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNDk5OQ==", "url": "https://github.com/apache/beam/pull/12218#discussion_r453114999", "bodyText": "Due to the if condition, the triggering (and windowing) is already the default, which is fine for bounded but not for unbounded. (I opted to leave it this way for bounded so that you don't have to know about the never.ever trigger to do bounded PAsserts.)", "author": "robertwb", "createdAt": "2020-07-10T23:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MjE0MA=="}], "type": "inlineReview"}, {"oid": "5b8bf6b7db7532a58a97a89bd5c5c6893f3ee00f", "url": "https://github.com/apache/beam/commit/5b8bf6b7db7532a58a97a89bd5c5c6893f3ee00f", "message": "Update sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java\n\nCo-authored-by: Kyle Weaver <kcweaver@google.com>", "committedDate": "2020-07-10T23:06:13Z", "type": "commit"}]}