{"pr_number": 12454, "pr_title": "[BEAM-10629] KnownBuilderInstances in ExternalTransformRegistrar", "pr_author": "sclukas77", "pr_createdAt": "2020-08-03T15:39:00Z", "pr_url": "https://github.com/apache/beam/pull/12454", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464497235", "body": "Let's mark this Deprecated and we can remove it down the road.\r\n```suggestion\r\n  /** \r\n   * A mapping from URN to an {@link ExternalTransformBuilder} class.\r\n   *\r\n   * @deprecated Prefer implementing `knownBuilderInstances`. This method will be removed in a future version of Beam.\r\n   */\r\n   @Deprecated\r\n```", "bodyText": "Let's mark this Deprecated and we can remove it down the road.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n          \n          \n            \n              /** \n          \n          \n            \n               * A mapping from URN to an {@link ExternalTransformBuilder} class.\n          \n          \n            \n               *\n          \n          \n            \n               * @deprecated Prefer implementing `knownBuilderInstances`. This method will be removed in a future version of Beam.\n          \n          \n            \n               */\n          \n          \n            \n               @Deprecated", "bodyHTML": "<p dir=\"auto\">Let's mark this Deprecated and we can remove it down the road.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* <span class=\"x x-first\">A mapping from URN to an {@link ExternalTransformBuilder} class. </span><span class=\"pl-c x x-last\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span> </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> mapping from <span class=\"pl-c1\">URN</span> to an {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">ExternalTransformBuilder</span>} class.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@deprecated</span> <span class=\"pl-smi\">Prefer</span> implementing `knownBuilderInstances`<span class=\"pl-c1\">.</span> <span class=\"pl-smi\">This</span> method will be removed in a future version of <span class=\"pl-smi\">Beam</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">@Deprecated</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheNeuralBit", "createdAt": "2020-08-03T15:43:03Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NjU0NQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465186545", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726158", "body": "I think after this change there are no callers to `buildTransform`, can you remove it?", "bodyText": "I think after this change there are no callers to buildTransform, can you remove it?", "bodyHTML": "<p dir=\"auto\">I think after this change there are no callers to <code>buildTransform</code>, can you remove it?</p>", "author": "TheNeuralBit", "createdAt": "2020-08-04T00:11:22Z", "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -107,39 +107,39 @@\n           ImmutableMap.builder();\n       for (ExternalTransformRegistrar registrar :\n           ServiceLoader.load(ExternalTransformRegistrar.class)) {\n-        for (Map.Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> entry :\n-            registrar.knownBuilders().entrySet()) {\n+        for (Map.Entry<String, ExternalTransformBuilder<?, ?, ?>> entry :\n+            registrar.knownBuilderInstances().entrySet()) {\n           String urn = entry.getKey();\n-          Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass = entry.getValue();\n+          ExternalTransformBuilder builderInstance = entry.getValue();\n           builder.put(\n               urn,\n               spec -> {\n                 try {\n                   ExternalTransforms.ExternalConfigurationPayload payload =\n                       ExternalTransforms.ExternalConfigurationPayload.parseFrom(spec.getPayload());\n-                  return translate(payload, builderClass);\n+                  return builderInstance.buildExternal(\n+                      payloadToConfig(\n+                          payload,\n+                          (Class<? extends ExternalTransformBuilder<?, ?, ?>>)\n+                              builderInstance.getClass()));\n                 } catch (Exception e) {\n                   throw new RuntimeException(\n                       String.format(\"Failed to build transform %s from spec %s\", urn, spec), e);\n                 }\n               });\n         }\n       }\n+\n       return builder.build();\n     }\n \n-    private static PTransform<?, ?> translate(\n+    Object payloadToConfig(\n         ExternalTransforms.ExternalConfigurationPayload payload,\n         Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass)\n         throws Exception {\n-      Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(builderClass),\n-          \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          builderClass.getName());\n-\n       Object configObject = initConfiguration(builderClass);\n       populateConfiguration(configObject, payload);\n-      return buildTransform(builderClass, configObject);", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzAyNg==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187026", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726803", "body": "There should be a default implementation for this that just returns an empty Map, that way new implementations will only have to override `knownBuilderInstances()`", "bodyText": "There should be a default implementation for this that just returns an empty Map, that way new implementations will only have to override knownBuilderInstances()", "bodyHTML": "<p dir=\"auto\">There should be a default implementation for this that just returns an empty Map, that way new implementations will only have to override <code>knownBuilderInstances()</code></p>", "author": "TheNeuralBit", "createdAt": "2020-08-04T00:13:34Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n   Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzE3OQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187179", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw=="}], "type": "inlineReview"}, {"oid": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "url": "https://github.com/apache/beam/commit/bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "message": "[BEAM-10629] Added KnownBuilderInstances to ExternalTransformRegistrar", "committedDate": "2020-08-04T16:40:25Z", "type": "commit"}, {"oid": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "url": "https://github.com/apache/beam/commit/bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "message": "[BEAM-10629] Added KnownBuilderInstances to ExternalTransformRegistrar", "committedDate": "2020-08-04T16:40:25Z", "type": "forcePushed"}]}