{"pr_number": 12089, "pr_title": "[BEAM-10283] Add new overloads of withKeyRanges and withRowFilter met\u2026", "pr_author": "rafi-kamal", "pr_createdAt": "2020-06-25T05:33:53Z", "pr_url": "https://github.com/apache/beam/pull/12089", "timeline": [{"oid": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "url": "https://github.com/apache/beam/commit/1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "message": "[BEAM-10283] Add new overloads of withKeyRanges and withRowFilter methods that take ValueProvider as a parameter.", "committedDate": "2020-06-25T05:45:08Z", "type": "commit"}, {"oid": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "url": "https://github.com/apache/beam/commit/1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "message": "[BEAM-10283] Add new overloads of withKeyRanges and withRowFilter methods that take ValueProvider as a parameter.", "committedDate": "2020-06-25T05:45:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MDEyMw==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450540123", "body": "```suggestion\r\n  /** Returns the row filter to use. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Returns the Row filter to use. */\n          \n          \n            \n              /** Returns the row filter to use. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns the <span class=\"x x-first x-last\">Row</span> filter to use. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns the <span class=\"x x-first x-last\">row</span> filter to use. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-07-07T00:03:33Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableReadOptions.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.apache.beam.sdk.io.gcp.bigtable;\n+\n+import static org.apache.beam.vendor.guava.v26_0_jre.com.google.common.base.Preconditions.checkArgument;\n+\n+import com.google.auto.value.AutoValue;\n+import com.google.bigtable.v2.RowFilter;\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.annotation.Nullable;\n+import org.apache.beam.sdk.io.range.ByteKeyRange;\n+import org.apache.beam.sdk.options.ValueProvider;\n+import org.apache.beam.sdk.transforms.display.DisplayData;\n+\n+/** Configuration for which values to read from Bigtable. */\n+@AutoValue\n+abstract class BigtableReadOptions implements Serializable {\n+\n+  /** Returns the Row filter to use. */", "originalCommit": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTA2NQ==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450541065", "body": "nit: currently it seems like overlapping ranges lead to duplicate reads for any keys in the overlapping area, it would be good if either:\r\n1) overlapping ranges lead to an error\r\n2) overlapping ranges are correctly fixed up to not produce duplicates", "bodyText": "nit: currently it seems like overlapping ranges lead to duplicate reads for any keys in the overlapping area, it would be good if either:\n\noverlapping ranges lead to an error\noverlapping ranges are correctly fixed up to not produce duplicates", "bodyHTML": "<p dir=\"auto\">nit: currently it seems like overlapping ranges lead to duplicate reads for any keys in the overlapping area, it would be good if either:</p>\n<ol dir=\"auto\">\n<li>overlapping ranges lead to an error</li>\n<li>overlapping ranges are correctly fixed up to not produce duplicates</li>\n</ol>", "author": "lukecwik", "createdAt": "2020-07-07T00:06:58Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableIO.java", "diffHunk": "@@ -410,13 +417,22 @@ public Read withKeyRange(ByteKeyRange keyRange) {\n      *\n      * <p>Does not modify this object.\n      */\n-    public Read withKeyRanges(List<ByteKeyRange> keyRanges) {\n+    public Read withKeyRanges(ValueProvider<List<ByteKeyRange>> keyRanges) {\n       checkArgument(keyRanges != null, \"keyRanges can not be null\");\n-      checkArgument(!keyRanges.isEmpty(), \"keyRanges can not be empty\");\n-      for (ByteKeyRange range : keyRanges) {\n-        checkArgument(range != null, \"keyRanges cannot hold null range\");\n-      }\n-      return toBuilder().setKeyRanges(keyRanges).build();\n+      BigtableReadOptions bigtableReadOptions = getBigtableReadOptions();\n+      return toBuilder()\n+          .setBigtableReadOptions(bigtableReadOptions.toBuilder().setKeyRanges(keyRanges).build())\n+          .build();\n+    }\n+\n+    /**\n+     * Returns a new {@link BigtableIO.Read} that will read only rows in the specified ranges.\n+     * Ranges must not overlap.", "originalCommit": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5MDQ2OA==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450590468", "bodyText": "Agreed - personally I would prefer option 2. I think it's out of scope for this PR, though, but I'll be happy to do it as a follow-up. Do you know if there is already a JIRA issue for this?", "author": "rafi-kamal", "createdAt": "2020-07-07T03:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEyMDUxMg==", "url": "https://github.com/apache/beam/pull/12089#discussion_r451120512", "bodyText": "I'm not aware of a JIRA, you'll need to look. If you don't find one, file one.", "author": "lukecwik", "createdAt": "2020-07-07T20:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTg4OQ==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450541889", "body": "Needs an Apache 2.0 license header in the file. See other files for an example.", "bodyText": "Needs an Apache 2.0 license header in the file. See other files for an example.", "bodyHTML": "<p dir=\"auto\">Needs an Apache 2.0 license header in the file. See other files for an example.</p>", "author": "lukecwik", "createdAt": "2020-07-07T00:10:08Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableReadOptions.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.apache.beam.sdk.io.gcp.bigtable;", "originalCommit": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4Nzk5OA==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450587998", "bodyText": "Done. Thanks for checking the test results btw, I tried to figure out what's wrong from the failing tests but couldn't find any error logs or stacktraces.", "author": "rafi-kamal", "createdAt": "2020-07-07T03:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0MTk3Mw==", "url": "https://github.com/apache/beam/pull/12089#discussion_r450541973", "body": "```suggestion\r\n            .withTableId(options.getBigtableTableId());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .withTableId(options.getBigtableTableId())\n          \n          \n            \n                        .withTableId(options.getBigtableTableId());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .withTableId(options<span class=\"pl-k\">.</span>getBigtableTableId())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .withTableId(options<span class=\"pl-k\">.</span>getBigtableTableId())<span class=\"x x-first x-last\">;</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-07-07T00:10:28Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableIOTest.java", "diffHunk": "@@ -1100,7 +1141,7 @@ public void testReadingDisplayDataFromRuntimeParameters() {\n             .withBigtableOptions(BIGTABLE_OPTIONS)\n             .withProjectId(options.getBigtableProject())\n             .withInstanceId(options.getBigtableInstanceId())\n-            .withTableId(options.getBigtableTableId());\n+            .withTableId(options.getBigtableTableId())", "originalCommit": "1c1ee29522fd91481fa6c47edaf09e1a4839fca9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1df4a9de5c79c8202b977db537ac18b22d0483d2", "url": "https://github.com/apache/beam/commit/1df4a9de5c79c8202b977db537ac18b22d0483d2", "message": "Update sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableReadOptions.java\n\nCo-authored-by: Lukasz Cwik <lcwik@google.com>", "committedDate": "2020-07-07T03:05:38Z", "type": "commit"}, {"oid": "6335fdeee0ca41047af043427fc9c31490c26d86", "url": "https://github.com/apache/beam/commit/6335fdeee0ca41047af043427fc9c31490c26d86", "message": "Update sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigtable/BigtableIOTest.java\n\nCo-authored-by: Lukasz Cwik <lcwik@google.com>", "committedDate": "2020-07-07T03:05:47Z", "type": "commit"}, {"oid": "fae4395e3dca731af27fa0bcd786f55b2c5d3857", "url": "https://github.com/apache/beam/commit/fae4395e3dca731af27fa0bcd786f55b2c5d3857", "message": "Move the feature description in CHANGES.md to 2.24.0 and add a license header for BigtableReadOptions.", "committedDate": "2020-07-07T03:11:08Z", "type": "commit"}, {"oid": "77b4501163f297129ec02a4488467b48b2967d73", "url": "https://github.com/apache/beam/commit/77b4501163f297129ec02a4488467b48b2967d73", "message": "Reformatted code.", "committedDate": "2020-07-07T03:36:39Z", "type": "commit"}, {"oid": "710721e13f65333a997ae17d4a841739875b7bf8", "url": "https://github.com/apache/beam/commit/710721e13f65333a997ae17d4a841739875b7bf8", "message": "Reformatted code by running spotlessApply", "committedDate": "2020-07-07T03:44:16Z", "type": "commit"}]}