{"pr_number": 11199, "pr_title": "[BEAM-9562] Update Timer encoding with respect of dynamic timers", "pr_author": "boyuanzz", "pr_createdAt": "2020-03-23T20:06:08Z", "pr_url": "https://github.com/apache/beam/pull/11199", "timeline": [{"oid": "43ca8789d34e9786043bc201ee3d11f0706f0d25", "url": "https://github.com/apache/beam/commit/43ca8789d34e9786043bc201ee3d11f0706f0d25", "message": "Update Timer encoding into V2", "committedDate": "2020-03-27T04:49:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NzU2OA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399587568", "body": "```suggestion\r\n                    Timer.Coder.of(((KvCoder) mainInput.getCoder()).getKeyCoder(), GlobalWindow.Coder.INSTANCE)));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE)));\n          \n          \n            \n                                Timer.Coder.of(((KvCoder) mainInput.getCoder()).getKeyCoder(), GlobalWindow.Coder.INSTANCE)));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"199\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">Timer</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Coder</span><span class=\"pl-k\">.</span>of(<span class=\"pl-smi x x-first\">StringUtf8Coder</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">of</span>(), <span class=\"pl-smi\">GlobalWindow</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Coder</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INSTANCE</span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"199\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">Timer</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Coder</span><span class=\"pl-k\">.</span>of(<span class=\"x x-first\">((</span><span class=\"pl-smi x\">KvCoder</span><span class=\"x\">) mainInput</span><span class=\"pl-k x\">.</span><span class=\"x\">getCoder())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getKeyCoder</span>(), <span class=\"pl-smi\">GlobalWindow</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Coder</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INSTANCE</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-27T23:56:41Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/ParDoTranslation.java", "diffHunk": "@@ -197,7 +199,7 @@ public boolean canTranslate(PTransform<?, ?> pTransform) {\n                     ((KvCoder) mainInput.getCoder()).getKeyCoder(),\n                     // TODO: Add support for timer payloads to the SDK\n                     // We currently assume that all payloads are unspecified.\n-                    Timer.Coder.of(VoidCoder.of())));\n+                    Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE)));", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc0MDI0Mg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399740242", "bodyText": "I chose StringUtf8Coder for convenience since there is no place actually parsing this key. I plan to plump through actual coders when migrating to use data channel.", "author": "boyuanzz", "createdAt": "2020-03-29T03:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NzU2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwNTQxNQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r401005415", "bodyText": "sg", "author": "lukecwik", "createdAt": "2020-03-31T15:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NzU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4NzYxNg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399587616", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // TODO: Add support for timer payloads to the SDK\n          \n          \n            \n                                // We currently assume that all payloads are unspecified.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> TODO: Add support for timer payloads to the SDK</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> We currently assume that all payloads are unspecified.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-27T23:56:54Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/ParDoTranslation.java", "diffHunk": "@@ -197,7 +199,7 @@ public boolean canTranslate(PTransform<?, ?> pTransform) {\n                     ((KvCoder) mainInput.getCoder()).getKeyCoder(),\n                     // TODO: Add support for timer payloads to the SDK\n                     // We currently assume that all payloads are unspecified.", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4ODAzOQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399588039", "body": "```suggestion\r\n   * Returns a timer for the given timestamp with a user specified key.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns a timer for the given timestamp with a user specified payload.\n          \n          \n            \n               * Returns a timer for the given timestamp with a user specified key.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a timer <span class=\"pl-k\">for</span> the given timestamp with a user specified <span class=\"x x-first x-last\">payload</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a timer <span class=\"pl-k\">for</span> the given timestamp with a user specified <span class=\"x x-first x-last\">key</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-27T23:59:05Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,14 +49,26 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a timer for the given timestamp with a user specified payload.", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4ODYxMQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399588611", "body": "May I suggest you create these two static methods for creating the two common cases?\r\n.of(userKey, dynamicTimerTag, fireTimestamp, holdTimestamp, windows, pane);\r\n.cleared(userKey, dynamicTImerTag);\r\n\r\nthis way you can make sure that dynamicTimerTag, fireTimestamp, holdTimestamp, windows and pane are not null", "bodyText": "May I suggest you create these two static methods for creating the two common cases?\n.of(userKey, dynamicTimerTag, fireTimestamp, holdTimestamp, windows, pane);\n.cleared(userKey, dynamicTImerTag);\nthis way you can make sure that dynamicTimerTag, fireTimestamp, holdTimestamp, windows and pane are not null", "bodyHTML": "<p dir=\"auto\">May I suggest you create these two static methods for creating the two common cases?<br>\n.of(userKey, dynamicTimerTag, fireTimestamp, holdTimestamp, windows, pane);<br>\n.cleared(userKey, dynamicTImerTag);</p>\n<p dir=\"auto\">this way you can make sure that dynamicTimerTag, fireTimestamp, holdTimestamp, windows and pane are not null</p>", "author": "lukecwik", "createdAt": "2020-03-28T00:02:06Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,14 +49,26 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a timer for the given timestamp with a user specified payload.\n+   *\n+   * @return\n+   */\n+  // TODO(BEAM-9562): Plumb through actual Timer fields.\n+  public static <T> Timer<T> of(", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwNzg1Mw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r400607853", "bodyText": "Thanks for you suggestion! I really like this idea. I planned to refine the signature when moving to data channel, but I can do it in this PR.", "author": "boyuanzz", "createdAt": "2020-03-31T02:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4ODYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4ODY2NQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399588665", "body": "```suggestion\r\n  public abstract boolean getClearBit();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public abstract Boolean getClearBit();\n          \n          \n            \n              public abstract boolean getClearBit();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi x x-first x-last\">Boolean</span> getClearBit();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k x x-first x-last\">boolean</span> getClearBit();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-28T00:02:23Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -57,11 +78,24 @@\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract T getUserKey();\n+\n+  public abstract String getDynamicTimerTag();\n+\n+  public abstract Boolean getClearBit();", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4ODc4Mg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399588782", "body": "please update class comment", "bodyText": "please update class comment", "bodyHTML": "<p dir=\"auto\">please update class comment</p>", "author": "lukecwik", "createdAt": "2020-03-28T00:02:59Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -73,59 +107,81 @@\n    */\n   public static class Coder<T> extends StructuredCoder<Timer<T>> {", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4OTI0Ng==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399589246", "body": "```suggestion\r\n      boolean clearBit = BooleanCoder.of().decode(inStream);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Boolean clearBit = BooleanCoder.of().decode(inStream);\n          \n          \n            \n                  boolean clearBit = BooleanCoder.of().decode(inStream);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi x x-first x-last\">Boolean</span> clearBit <span class=\"pl-k\">=</span> <span class=\"pl-smi\">BooleanCoder</span><span class=\"pl-k\">.</span>of()<span class=\"pl-k\">.</span>decode(inStream);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k x x-first x-last\">boolean</span> clearBit <span class=\"pl-k\">=</span> <span class=\"pl-smi\">BooleanCoder</span><span class=\"pl-k\">.</span>of()<span class=\"pl-k\">.</span>decode(inStream);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-28T00:05:24Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -73,59 +107,81 @@\n    */\n   public static class Coder<T> extends StructuredCoder<Timer<T>> {\n \n-    public static <T> Coder of(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      return new Coder(payloadCoder);\n+    public static <T> Coder<T> of(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      return new Coder<>(keyCoder, windowCoder);\n     }\n \n-    private final org.apache.beam.sdk.coders.Coder<T> payloadCoder;\n+    private final org.apache.beam.sdk.coders.Coder<T> keyCoder;\n+    private final org.apache.beam.sdk.coders.Coder<Collection<? extends BoundedWindow>>\n+        windowsCoder;\n \n-    private Coder(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      this.payloadCoder = payloadCoder;\n+    private Coder(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      this.keyCoder = keyCoder;\n+      this.windowsCoder = (org.apache.beam.sdk.coders.Coder) CollectionCoder.of(windowCoder);\n+      ;\n     }\n \n     @Override\n     public void encode(Timer<T> timer, OutputStream outStream) throws CoderException, IOException {\n-      InstantCoder.of().encode(timer.getTimestamp(), outStream);\n-      payloadCoder.encode(timer.getPayload(), outStream);\n+      keyCoder.encode(timer.getUserKey(), outStream);\n+      StringUtf8Coder.of().encode(timer.getDynamicTimerTag(), outStream);\n+      BooleanCoder.of().encode(timer.getClearBit(), outStream);\n+      if (!timer.getClearBit()) {\n+        InstantCoder.of().encode(timer.getFireTimestamp(), outStream);\n+        InstantCoder.of().encode(timer.getHoldTimestamp(), outStream);\n+        windowsCoder.encode(timer.getWindows(), outStream);\n+        PaneInfoCoder.INSTANCE.encode(timer.getPane(), outStream);\n+      }\n     }\n \n     @Override\n     public Timer<T> decode(InputStream inStream) throws CoderException, IOException {\n-      Instant instant = InstantCoder.of().decode(inStream);\n-      T value = payloadCoder.decode(inStream);\n-      return Timer.of(instant, value);\n+      T userKey = keyCoder.decode(inStream);\n+      String dynamicTimerTag = StringUtf8Coder.of().decode(inStream);\n+      Boolean clearBit = BooleanCoder.of().decode(inStream);", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4OTMxNQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399589315", "body": "```suggestion\r\n      Instant holdTimestamp = InstantCoder.of().decode(inStream);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Instant holeTimestamp = InstantCoder.of().decode(inStream);\n          \n          \n            \n                  Instant holdTimestamp = InstantCoder.of().decode(inStream);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">Instant</span> <span class=\"x x-first x-last\">holeTimestamp</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">InstantCoder</span><span class=\"pl-k\">.</span>of()<span class=\"pl-k\">.</span>decode(inStream);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">Instant</span> <span class=\"x x-first x-last\">holdTimestamp</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">InstantCoder</span><span class=\"pl-k\">.</span>of()<span class=\"pl-k\">.</span>decode(inStream);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-28T00:05:45Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -73,59 +107,81 @@\n    */\n   public static class Coder<T> extends StructuredCoder<Timer<T>> {\n \n-    public static <T> Coder of(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      return new Coder(payloadCoder);\n+    public static <T> Coder<T> of(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      return new Coder<>(keyCoder, windowCoder);\n     }\n \n-    private final org.apache.beam.sdk.coders.Coder<T> payloadCoder;\n+    private final org.apache.beam.sdk.coders.Coder<T> keyCoder;\n+    private final org.apache.beam.sdk.coders.Coder<Collection<? extends BoundedWindow>>\n+        windowsCoder;\n \n-    private Coder(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      this.payloadCoder = payloadCoder;\n+    private Coder(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      this.keyCoder = keyCoder;\n+      this.windowsCoder = (org.apache.beam.sdk.coders.Coder) CollectionCoder.of(windowCoder);\n+      ;\n     }\n \n     @Override\n     public void encode(Timer<T> timer, OutputStream outStream) throws CoderException, IOException {\n-      InstantCoder.of().encode(timer.getTimestamp(), outStream);\n-      payloadCoder.encode(timer.getPayload(), outStream);\n+      keyCoder.encode(timer.getUserKey(), outStream);\n+      StringUtf8Coder.of().encode(timer.getDynamicTimerTag(), outStream);\n+      BooleanCoder.of().encode(timer.getClearBit(), outStream);\n+      if (!timer.getClearBit()) {\n+        InstantCoder.of().encode(timer.getFireTimestamp(), outStream);\n+        InstantCoder.of().encode(timer.getHoldTimestamp(), outStream);\n+        windowsCoder.encode(timer.getWindows(), outStream);\n+        PaneInfoCoder.INSTANCE.encode(timer.getPane(), outStream);\n+      }\n     }\n \n     @Override\n     public Timer<T> decode(InputStream inStream) throws CoderException, IOException {\n-      Instant instant = InstantCoder.of().decode(inStream);\n-      T value = payloadCoder.decode(inStream);\n-      return Timer.of(instant, value);\n+      T userKey = keyCoder.decode(inStream);\n+      String dynamicTimerTag = StringUtf8Coder.of().decode(inStream);\n+      Boolean clearBit = BooleanCoder.of().decode(inStream);\n+      if (clearBit) {\n+        return Timer.of(userKey, dynamicTimerTag, clearBit);\n+      }\n+      Instant fireTimestamp = InstantCoder.of().decode(inStream);\n+      Instant holeTimestamp = InstantCoder.of().decode(inStream);", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4OTYzMw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r399589633", "body": "```suggestion\r\n      verifyDeterministic(this, \"Window coder must be deterministic\", windowsCoder);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  verifyDeterministic(this, \"Windows coder must be deterministic\", windowsCoder);\n          \n          \n            \n                  verifyDeterministic(this, \"Window coder must be deterministic\", windowsCoder);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      verifyDeterministic(<span class=\"pl-c1\">this</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Windows</span> coder must be deterministic<span class=\"pl-pds\">\"</span></span>, windowsCoder);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      verifyDeterministic(<span class=\"pl-c1\">this</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Window</span> coder must be deterministic<span class=\"pl-pds\">\"</span></span>, windowsCoder);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-03-28T00:07:35Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -73,59 +107,81 @@\n    */\n   public static class Coder<T> extends StructuredCoder<Timer<T>> {\n \n-    public static <T> Coder of(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      return new Coder(payloadCoder);\n+    public static <T> Coder<T> of(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      return new Coder<>(keyCoder, windowCoder);\n     }\n \n-    private final org.apache.beam.sdk.coders.Coder<T> payloadCoder;\n+    private final org.apache.beam.sdk.coders.Coder<T> keyCoder;\n+    private final org.apache.beam.sdk.coders.Coder<Collection<? extends BoundedWindow>>\n+        windowsCoder;\n \n-    private Coder(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      this.payloadCoder = payloadCoder;\n+    private Coder(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      this.keyCoder = keyCoder;\n+      this.windowsCoder = (org.apache.beam.sdk.coders.Coder) CollectionCoder.of(windowCoder);\n+      ;\n     }\n \n     @Override\n     public void encode(Timer<T> timer, OutputStream outStream) throws CoderException, IOException {\n-      InstantCoder.of().encode(timer.getTimestamp(), outStream);\n-      payloadCoder.encode(timer.getPayload(), outStream);\n+      keyCoder.encode(timer.getUserKey(), outStream);\n+      StringUtf8Coder.of().encode(timer.getDynamicTimerTag(), outStream);\n+      BooleanCoder.of().encode(timer.getClearBit(), outStream);\n+      if (!timer.getClearBit()) {\n+        InstantCoder.of().encode(timer.getFireTimestamp(), outStream);\n+        InstantCoder.of().encode(timer.getHoldTimestamp(), outStream);\n+        windowsCoder.encode(timer.getWindows(), outStream);\n+        PaneInfoCoder.INSTANCE.encode(timer.getPane(), outStream);\n+      }\n     }\n \n     @Override\n     public Timer<T> decode(InputStream inStream) throws CoderException, IOException {\n-      Instant instant = InstantCoder.of().decode(inStream);\n-      T value = payloadCoder.decode(inStream);\n-      return Timer.of(instant, value);\n+      T userKey = keyCoder.decode(inStream);\n+      String dynamicTimerTag = StringUtf8Coder.of().decode(inStream);\n+      Boolean clearBit = BooleanCoder.of().decode(inStream);\n+      if (clearBit) {\n+        return Timer.of(userKey, dynamicTimerTag, clearBit);\n+      }\n+      Instant fireTimestamp = InstantCoder.of().decode(inStream);\n+      Instant holeTimestamp = InstantCoder.of().decode(inStream);\n+      Collection<? extends BoundedWindow> windows = windowsCoder.decode(inStream);\n+      PaneInfo pane = PaneInfoCoder.INSTANCE.decode(inStream);\n+      return Timer.of(\n+          userKey, dynamicTimerTag, clearBit, fireTimestamp, holeTimestamp, windows, pane);\n     }\n \n     @Override\n     public List<? extends org.apache.beam.sdk.coders.Coder<?>> getCoderArguments() {\n-      return Collections.singletonList(payloadCoder);\n-    }\n-\n-    @Override\n-    public void verifyDeterministic() throws NonDeterministicException {\n-      verifyDeterministic(this, \"Payload coder must be deterministic\", payloadCoder);\n+      return Collections.singletonList(keyCoder);\n     }\n \n     @Override\n-    public boolean consistentWithEquals() {\n-      return payloadCoder.consistentWithEquals();\n+    public List<? extends org.apache.beam.sdk.coders.Coder<?>> getComponents() {\n+      return Arrays.asList(keyCoder, windowsCoder);\n     }\n \n     @Override\n-    public Object structuralValue(Timer<T> value) {\n-      return Timer.of(value.getTimestamp(), payloadCoder.structuralValue(value.getPayload()));\n-    }\n-\n-    @Override\n-    public boolean isRegisterByteSizeObserverCheap(Timer<T> value) {\n-      return payloadCoder.isRegisterByteSizeObserverCheap(value.getPayload());\n+    public void verifyDeterministic() throws NonDeterministicException {\n+      verifyDeterministic(this, \"UserKey coder must be deterministic\", keyCoder);\n+      verifyDeterministic(this, \"Windows coder must be deterministic\", windowsCoder);", "originalCommit": "e2fee34918537de1a553d298da1d7a8e08a10b05", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e1cbcce5c3a33f7a7c50ccb7418ec10fa342d686", "url": "https://github.com/apache/beam/commit/e1cbcce5c3a33f7a7c50ccb7418ec10fa342d686", "message": "Update standard_coders.yaml", "committedDate": "2020-04-01T21:59:45Z", "type": "forcePushed"}, {"oid": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "url": "https://github.com/apache/beam/commit/d63f9cf3ce5b9683505582e4e47554ca5376405e", "message": "Update standard_coders.yaml", "committedDate": "2020-04-01T22:00:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxMzk4Mg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402413982", "body": "```suggestion\r\n * A timer consists of a user key, a dynamic timer tag and either a bit that says that this timer should be cleared or data representing the firing timestamp, hold timestamp and a list of windows and pane information that should be used when producing output.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A timer consists of a userKey, a dynamicTimerTag, a clearBit, a fireTimestamp, a holdTimestamp a\n          \n          \n            \n             * list of window and pane.\n          \n          \n            \n             * A timer consists of a user key, a dynamic timer tag and either a bit that says that this timer should be cleared or data representing the firing timestamp, hold timestamp and a list of windows and pane information that should be used when producing output.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> timer consists of a userKey, a dynamicTimerTag, a clearBit, a fireTimestamp, a holdTimestamp a</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> list of window and pane.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> timer consists of a user key, a dynamic timer tag and either a bit that says that <span class=\"pl-c1\">this</span> timer should be cleared or data representing the firing timestamp, hold timestamp and a list of windows and pane information that should be used when producing output.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T15:41:35Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -21,17 +21,27 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Objects;\n import javax.annotation.Nullable;\n+import org.apache.beam.sdk.coders.BooleanCoder;\n import org.apache.beam.sdk.coders.CoderException;\n+import org.apache.beam.sdk.coders.CollectionCoder;\n import org.apache.beam.sdk.coders.InstantCoder;\n+import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.coders.StructuredCoder;\n+import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo.PaneInfoCoder;\n import org.apache.beam.sdk.util.common.ElementByteSizeObserver;\n import org.joda.time.Instant;\n \n /**\n- * A timer consists of a timestamp and a corresponding user supplied payload.\n+ * A timer consists of a userKey, a dynamicTimerTag, a clearBit, a fireTimestamp, a holdTimestamp a\n+ * list of window and pane.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxNDczMw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402414733", "body": "```suggestion\r\n   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code fireTimestamp},\r\n   * {@code holdTimestamp}, {@code windows} and {@code pane}.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n          \n          \n            \n               * holdTimestamp, windows and pane.\n          \n          \n            \n               * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code fireTimestamp},\n          \n          \n            \n               * {@code holdTimestamp}, {@code windows} and {@code pane}.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a non<span class=\"pl-k\">-</span>cleared timer <span class=\"pl-k\">for</span> the given userKey<span class=\"x x-first x-last\">, </span>dynamicTimerTag<span class=\"x x-first x-last\">, </span>fireTimestamp,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> holdTimestamp<span class=\"x x-first x-last\">, </span>windows and pane.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> a non<span class=\"pl-k\">-</span>cleared timer <span class=\"pl-k\">for</span> the given <span class=\"x x-first\">{</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>userKey<span class=\"x x-first\">}, {</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>dynamicTimerTag<span class=\"x x-first\">}, {</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>fireTimestamp<span class=\"x x-first x-last\">}</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"x x-first\">{</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>holdTimestamp<span class=\"x x-first\">}, {</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>windows<span class=\"x x-first x-last\">}</span> and <span class=\"x x-first\">{</span><span class=\"pl-k x\">@code</span><span class=\"x x-last\"> </span>pane<span class=\"x x-first x-last\">}</span><span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T15:42:39Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxNjU5NA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402416594", "body": "```suggestion\r\n   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link TimerSpec}.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n          \n          \n            \n               * from TimerSpec.\n          \n          \n            \n               * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link TimerSpec}.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the tag that the timer is set on. <span class=\"pl-smi\">This</span> tag is empty string only when the timer is set</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> from <span class=\"pl-smi\">TimerSpec</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the tag that the timer is set on. <span class=\"pl-smi\">This</span> tag is {<span class=\"pl-k\">@code</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>} when the timer is <span class=\"pl-k\">for</span> a {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">TimerSpec</span>}<span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T15:45:14Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxNzY0OQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402417649", "body": "fire timestamp and hold timestamp can be null when the clear is set.", "bodyText": "fire timestamp and hold timestamp can be null when the clear is set.", "bodyHTML": "<p dir=\"auto\">fire timestamp and hold timestamp can be null when the clear is set.</p>", "author": "lukecwik", "createdAt": "2020-04-02T15:46:43Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the clearBit is true.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the windows which is associated with the timer. This field is nullable only when the\n+   * clearBit is true.\n+   */\n+  @Nullable\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * clearBit is true.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    } else {\n+      Timer<?> that = (Timer<?>) other;\n+\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && this.getFireTimestamp().equals(that.getFireTimestamp())\n+          && this.getHoldTimestamp().equals(that.getHoldTimestamp())", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxODIzNw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402418237", "body": "```suggestion\r\n  /** Returns whether the timer is going to be cleared. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Returns a boolean which indicate whether the timer is going to be cleared. */\n          \n          \n            \n              /** Returns whether the timer is going to be cleared. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns <span class=\"x x-first x-last\">a boolean which indicate </span>whether the timer is going to be cleared. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns whether the timer is going to be cleared. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T15:47:34Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxODU0Nw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402418547", "body": "```suggestion\r\n   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\r\n   * the timer is being cleared.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n          \n          \n            \n               * the clearBit is true.\n          \n          \n            \n               * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n          \n          \n            \n               * the timer is being cleared.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the timestamp of when the timer is scheduled to fire. <span class=\"pl-smi\">This</span> field is nullable only when</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> the <span class=\"x x-first x-last\">clearBit</span> is <span class=\"pl-c1 x x-first x-last\">true</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the timestamp of when the timer is scheduled to fire. <span class=\"pl-smi\">This</span> field is nullable only when</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> the <span class=\"x x-first x-last\">timer</span> is <span class=\"x x-first x-last\">being cleared</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T15:47:56Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNTQxNQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402425415", "body": "CC: @robertwb @reuvenlax \r\n\r\nOriginally I was thinking that timers should always be relative but now that I think about it more I think we should make this field absolute. When timers are created during normal element processing within an SDK then watermark timer should be computed based upon the input elements timestamp and processing time timers can be computed using the system's clock. For timers created during timer callbacks, the timers should always be relative to the fire timestamp of that timer.\r\n\r\nHold timestamps by default should be the input elements timestamp plus an optional positive offset during normal element processing and they should be the hold timestamp of the fired timer plus an optional positive offset during timer callbacks.", "bodyText": "CC: @robertwb @reuvenlax\nOriginally I was thinking that timers should always be relative but now that I think about it more I think we should make this field absolute. When timers are created during normal element processing within an SDK then watermark timer should be computed based upon the input elements timestamp and processing time timers can be computed using the system's clock. For timers created during timer callbacks, the timers should always be relative to the fire timestamp of that timer.\nHold timestamps by default should be the input elements timestamp plus an optional positive offset during normal element processing and they should be the hold timestamp of the fired timer plus an optional positive offset during timer callbacks.", "bodyHTML": "<p dir=\"auto\">CC: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/robertwb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/robertwb\">@robertwb</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/reuvenlax/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reuvenlax\">@reuvenlax</a></p>\n<p dir=\"auto\">Originally I was thinking that timers should always be relative but now that I think about it more I think we should make this field absolute. When timers are created during normal element processing within an SDK then watermark timer should be computed based upon the input elements timestamp and processing time timers can be computed using the system's clock. For timers created during timer callbacks, the timers should always be relative to the fire timestamp of that timer.</p>\n<p dir=\"auto\">Hold timestamps by default should be the input elements timestamp plus an optional positive offset during normal element processing and they should be the hold timestamp of the fired timer plus an optional positive offset during timer callbacks.</p>", "author": "lukecwik", "createdAt": "2020-04-02T15:57:10Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NTMxOQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402495319", "bodyText": "Agree on always using absolute timestamp here.\nOne question about computing hold timestamp. Why do we need an  optional positive offset besides input timestamp? I thought the watermark hold should be set as the input element timestamp.", "author": "boyuanzz", "createdAt": "2020-04-02T17:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNTQxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUwNTIxNQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402505215", "bodyText": "The default should be the input timestamp but we should allow people to set it to any value greater then that. For example, consider a person writing a simple polling function where they check the status of something using a timer and they would like to be able to advance the hold based upon what the current system time is. The input to this transform is the output of impulse (+ a dummy key) so the input timestamp would be MIN_TIMESTAMP initially.", "author": "lukecwik", "createdAt": "2020-04-02T17:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNTQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNjkzMg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402426932", "body": "This was missed during the doc review but the timer will always need to encode the windowing information otherwise we won't know what windows the timer is in to clear.\r\n\r\nWe'll need to update the documentation for this as well.", "bodyText": "This was missed during the doc review but the timer will always need to encode the windowing information otherwise we won't know what windows the timer is in to clear.\nWe'll need to update the documentation for this as well.", "bodyHTML": "<p dir=\"auto\">This was missed during the doc review but the timer will always need to encode the windowing information otherwise we won't know what windows the timer is in to clear.</p>\n<p dir=\"auto\">We'll need to update the documentation for this as well.</p>", "author": "lukecwik", "createdAt": "2020-04-02T15:59:12Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the clearBit is true.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the windows which is associated with the timer. This field is nullable only when the\n+   * clearBit is true.\n+   */\n+  @Nullable\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * clearBit is true.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    } else {\n+      Timer<?> that = (Timer<?>) other;\n+\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && this.getFireTimestamp().equals(that.getFireTimestamp())\n+          && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n+          && Objects.equals(this.getWindows(), that.getWindows())\n+          && Objects.equals(this.getPane(), that.getPane());\n+    }\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    // Hash only the millis of the timestamp to be consistent with equals\n+    return Objects.hash(\n+        getUserKey(),\n+        getDynamicTimerTag(),\n+        getClearBit(),\n+        getFireTimestamp().getMillis(),\n+        getHoldTimestamp().getMillis(),\n+        getWindows(),\n+        getPane());\n+  }\n \n   /**\n    * A {@link org.apache.beam.sdk.coders.Coder} for timers.\n    *\n-   * <p>This coder is deterministic if the payload coder is deterministic.\n+   * <p>This coder is deterministic if both the key coder and window coder are deterministic.\n    *\n-   * <p>This coder is inexpensive for size estimation of elements if the payload coder is\n-   * inexpensive for size estimation.\n+   * <p>This coder is inexpensive for size estimation of elements if the key coder is inexpensive\n+   * for size estimation.\n    */\n   public static class Coder<T> extends StructuredCoder<Timer<T>> {\n \n-    public static <T> Coder of(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      return new Coder(payloadCoder);\n+    public static <T> Coder<T> of(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      return new Coder<>(keyCoder, windowCoder);\n     }\n \n-    private final org.apache.beam.sdk.coders.Coder<T> payloadCoder;\n-\n-    private Coder(org.apache.beam.sdk.coders.Coder<T> payloadCoder) {\n-      this.payloadCoder = payloadCoder;\n+    private final org.apache.beam.sdk.coders.Coder<T> keyCoder;\n+    private final org.apache.beam.sdk.coders.Coder<Collection<? extends BoundedWindow>>\n+        windowsCoder;\n+    private final org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder;\n+\n+    private Coder(\n+        org.apache.beam.sdk.coders.Coder<T> keyCoder,\n+        org.apache.beam.sdk.coders.Coder<? extends BoundedWindow> windowCoder) {\n+      this.windowCoder = windowCoder;\n+      this.keyCoder = keyCoder;\n+      this.windowsCoder = (org.apache.beam.sdk.coders.Coder) CollectionCoder.of(windowCoder);\n     }\n \n     @Override\n     public void encode(Timer<T> timer, OutputStream outStream) throws CoderException, IOException {\n-      InstantCoder.of().encode(timer.getTimestamp(), outStream);\n-      payloadCoder.encode(timer.getPayload(), outStream);\n+      keyCoder.encode(timer.getUserKey(), outStream);\n+      StringUtf8Coder.of().encode(timer.getDynamicTimerTag(), outStream);\n+      BooleanCoder.of().encode(timer.getClearBit(), outStream);\n+      if (!timer.getClearBit()) {\n+        InstantCoder.of().encode(timer.getFireTimestamp(), outStream);\n+        InstantCoder.of().encode(timer.getHoldTimestamp(), outStream);\n+        windowsCoder.encode(timer.getWindows(), outStream);\n+        PaneInfoCoder.INSTANCE.encode(timer.getPane(), outStream);\n+      }", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyODcyMg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402428722", "body": "```suggestion\r\n   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\r\n   * the timer is being cleared.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n          \n          \n            \n               * the clearBit is true.\n          \n          \n            \n               * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n          \n          \n            \n               * the timer is being cleared.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the watermark that the timer is supposed to be held. <span class=\"pl-smi\">This</span> field is nullable only when</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> the <span class=\"x x-first x-last\">clearBit</span> is <span class=\"pl-c1 x x-first x-last\">true</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the watermark that the timer is supposed to be held. <span class=\"pl-smi\">This</span> field is nullable only when</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> the <span class=\"x x-first x-last\">timer</span> is <span class=\"x x-first x-last\">being cleared</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T16:01:47Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the clearBit is true.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyODg5Mw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402428893", "body": "```suggestion\r\n   * Returns the windows which is associated with the timer.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the windows which is associated with the timer. This field is nullable only when the\n          \n          \n            \n               * clearBit is true.\n          \n          \n            \n               * Returns the windows which is associated with the timer.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the windows which is associated with the timer. <span class=\"pl-smi\">This</span> field is nullable only when the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> clearBit is <span class=\"pl-c1\">true</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the windows which is associated with the timer.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T16:02:02Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the clearBit is true.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the windows which is associated with the timer. This field is nullable only when the\n+   * clearBit is true.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyOTA0Mw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402429043", "body": "```suggestion\r\n   * Returns the paneinfo that is related to the timer. This field is nullable only when the\r\n   * timer is being cleared.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the paneinfo that is related to the timer. This field is nullable only when the\n          \n          \n            \n               * clearBit is true.\n          \n          \n            \n               * Returns the paneinfo that is related to the timer. This field is nullable only when the\n          \n          \n            \n               * timer is being cleared.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the paneinfo that is related to the timer. <span class=\"pl-smi\">This</span> field is nullable only when the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">clearBit</span> is <span class=\"pl-c1 x x-first x-last\">true</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the paneinfo that is related to the timer. <span class=\"pl-smi\">This</span> field is nullable only when the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">timer</span> is <span class=\"x x-first x-last\">being cleared</span>.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-02T16:02:16Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +50,197 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given userKey, dynamicTimerTag, fireTimestamp,\n+   * holdTimestamp, windows and pane.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      Collection<? extends BoundedWindow> windows,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, false, fireTimestamp, holdTimestamp, windows, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag. */\n+  public static <T> Timer<T> cleared(T userKey, String dynamicTimerTag) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, true, null, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is empty string only when the timer is set\n+   * from TimerSpec.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns a boolean which indicate whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the clearBit is true.\n    *\n    * <p>The time is relative to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the clearBit is true.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the windows which is associated with the timer. This field is nullable only when the\n+   * clearBit is true.\n+   */\n+  @Nullable\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * clearBit is true.", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMDUxNA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402430514", "body": "check that `clear` is equal", "bodyText": "check that clear is equal", "bodyHTML": "<p dir=\"auto\">check that <code>clear</code> is equal</p>", "author": "lukecwik", "createdAt": "2020-04-02T16:04:25Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/CommonCoderTest.java", "diffHunk": "@@ -434,8 +452,16 @@ private void verifyDecodedValue(CommonCoder coder, Object expectedValue, Object\n       assertFalse(expectedValueIterator.hasNext());\n \n     } else if (s.equals(getUrn(StandardCoders.Enum.TIMER))) {\n-      assertEquals(((Timer) expectedValue).getTimestamp(), ((Timer) actualValue).getTimestamp());\n-      assertThat(((Timer) expectedValue).getPayload(), equalTo(((Timer) actualValue).getPayload()));\n+      assertEquals(((Timer) expectedValue).getUserKey(), ((Timer) actualValue).getUserKey());\n+      assertEquals(", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMTE1MA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402431150", "body": "use two different instant objects otherwise you can't tell if they get swapped accidentally", "bodyText": "use two different instant objects otherwise you can't tell if they get swapped accidentally", "bodyHTML": "<p dir=\"auto\">use two different instant objects otherwise you can't tell if they get swapped accidentally</p>", "author": "lukecwik", "createdAt": "2020-04-02T16:05:24Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/TimerTest.java", "diffHunk": "@@ -36,39 +38,121 @@\n   private static final Instant INSTANT = Instant.now();\n \n   @Test\n-  public void testTimer() {\n-    Timer<Void> timerA = Timer.of(INSTANT);\n-    assertEquals(INSTANT, timerA.getTimestamp());\n-    assertNull(timerA.getPayload());\n+  public void testClearTimer() {\n+    Timer<String> clearedTimer = Timer.cleared(\"timer\", \"tag\");\n+    assertTrue(clearedTimer.getClearBit());\n+    assertEquals(\"timer\", clearedTimer.getUserKey());\n+    assertEquals(\"tag\", clearedTimer.getDynamicTimerTag());\n+  }\n \n-    Timer<String> timerB = Timer.of(INSTANT, \"ABC\");\n-    assertEquals(INSTANT, timerB.getTimestamp());\n-    assertEquals(\"ABC\", timerB.getPayload());\n+  @Test\n+  public void testTimer() {\n+    Timer<String> timer =\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMjk2Ng==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402432966", "body": "Add a cleared timer for this case.", "bodyText": "Add a cleared timer for this case.", "bodyHTML": "<p dir=\"auto\">Add a cleared timer for this case.</p>", "author": "lukecwik", "createdAt": "2020-04-02T16:07:53Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/TimerTest.java", "diffHunk": "@@ -36,39 +38,121 @@\n   private static final Instant INSTANT = Instant.now();\n \n   @Test\n-  public void testTimer() {\n-    Timer<Void> timerA = Timer.of(INSTANT);\n-    assertEquals(INSTANT, timerA.getTimestamp());\n-    assertNull(timerA.getPayload());\n+  public void testClearTimer() {\n+    Timer<String> clearedTimer = Timer.cleared(\"timer\", \"tag\");\n+    assertTrue(clearedTimer.getClearBit());\n+    assertEquals(\"timer\", clearedTimer.getUserKey());\n+    assertEquals(\"tag\", clearedTimer.getDynamicTimerTag());\n+  }\n \n-    Timer<String> timerB = Timer.of(INSTANT, \"ABC\");\n-    assertEquals(INSTANT, timerB.getTimestamp());\n-    assertEquals(\"ABC\", timerB.getPayload());\n+  @Test\n+  public void testTimer() {\n+    Timer<String> timer =\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING);\n+    assertEquals(\"key\", timer.getUserKey());\n+    assertEquals(\"tag\", timer.getDynamicTimerTag());\n+    assertEquals(INSTANT, timer.getFireTimestamp());\n+    assertEquals(INSTANT, timer.getHoldTimestamp());\n+    assertEquals(Collections.singleton(GlobalWindow.INSTANCE), timer.getWindows());\n+    assertEquals(PaneInfo.NO_FIRING, timer.getPane());\n+    assertFalse(timer.getClearBit());\n   }\n \n   @Test\n-  public void testTimerCoderWithInconsistentWithEqualsPayloadCoder() throws Exception {\n-    Coder<Timer<byte[]>> coder = Timer.Coder.of(ByteArrayCoder.of());\n+  public void testTimerCoderWithInconsistentWithEqualsComponentCoders() throws Exception {\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);\n     CoderProperties.coderSerializable(coder);\n     CoderProperties.structuralValueDecodeEncodeEqual(", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMzEzNw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402433137", "body": "Add a cleared timer for this case.", "bodyText": "Add a cleared timer for this case.", "bodyHTML": "<p dir=\"auto\">Add a cleared timer for this case.</p>", "author": "lukecwik", "createdAt": "2020-04-02T16:08:10Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/TimerTest.java", "diffHunk": "@@ -36,39 +38,121 @@\n   private static final Instant INSTANT = Instant.now();\n \n   @Test\n-  public void testTimer() {\n-    Timer<Void> timerA = Timer.of(INSTANT);\n-    assertEquals(INSTANT, timerA.getTimestamp());\n-    assertNull(timerA.getPayload());\n+  public void testClearTimer() {\n+    Timer<String> clearedTimer = Timer.cleared(\"timer\", \"tag\");\n+    assertTrue(clearedTimer.getClearBit());\n+    assertEquals(\"timer\", clearedTimer.getUserKey());\n+    assertEquals(\"tag\", clearedTimer.getDynamicTimerTag());\n+  }\n \n-    Timer<String> timerB = Timer.of(INSTANT, \"ABC\");\n-    assertEquals(INSTANT, timerB.getTimestamp());\n-    assertEquals(\"ABC\", timerB.getPayload());\n+  @Test\n+  public void testTimer() {\n+    Timer<String> timer =\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING);\n+    assertEquals(\"key\", timer.getUserKey());\n+    assertEquals(\"tag\", timer.getDynamicTimerTag());\n+    assertEquals(INSTANT, timer.getFireTimestamp());\n+    assertEquals(INSTANT, timer.getHoldTimestamp());\n+    assertEquals(Collections.singleton(GlobalWindow.INSTANCE), timer.getWindows());\n+    assertEquals(PaneInfo.NO_FIRING, timer.getPane());\n+    assertFalse(timer.getClearBit());\n   }\n \n   @Test\n-  public void testTimerCoderWithInconsistentWithEqualsPayloadCoder() throws Exception {\n-    Coder<Timer<byte[]>> coder = Timer.Coder.of(ByteArrayCoder.of());\n+  public void testTimerCoderWithInconsistentWithEqualsComponentCoders() throws Exception {\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);\n     CoderProperties.coderSerializable(coder);\n     CoderProperties.structuralValueDecodeEncodeEqual(\n-        coder, Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)));\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n     CoderProperties.structuralValueConsistentWithEquals(\n-        coder, Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)), Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)));\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING),\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n   }\n \n   @Test\n-  public void testTimerCoderWithConsistentWithEqualsPayloadCoder() throws Exception {\n-    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of());\n-    CoderProperties.coderDecodeEncodeEqual(coder, Timer.of(INSTANT, \"ABC\"));\n+  public void testTimerCoderWithConsistentWithEqualsComponentCoders() throws Exception {\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMzg3MQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402433871", "body": "We can get rid of this test since standard_coders.yaml covers it.", "bodyText": "We can get rid of this test since standard_coders.yaml covers it.", "bodyHTML": "<p dir=\"auto\">We can get rid of this test since standard_coders.yaml covers it.</p>", "author": "lukecwik", "createdAt": "2020-04-02T16:09:13Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/TimerTest.java", "diffHunk": "@@ -36,39 +38,121 @@\n   private static final Instant INSTANT = Instant.now();\n \n   @Test\n-  public void testTimer() {\n-    Timer<Void> timerA = Timer.of(INSTANT);\n-    assertEquals(INSTANT, timerA.getTimestamp());\n-    assertNull(timerA.getPayload());\n+  public void testClearTimer() {\n+    Timer<String> clearedTimer = Timer.cleared(\"timer\", \"tag\");\n+    assertTrue(clearedTimer.getClearBit());\n+    assertEquals(\"timer\", clearedTimer.getUserKey());\n+    assertEquals(\"tag\", clearedTimer.getDynamicTimerTag());\n+  }\n \n-    Timer<String> timerB = Timer.of(INSTANT, \"ABC\");\n-    assertEquals(INSTANT, timerB.getTimestamp());\n-    assertEquals(\"ABC\", timerB.getPayload());\n+  @Test\n+  public void testTimer() {\n+    Timer<String> timer =\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING);\n+    assertEquals(\"key\", timer.getUserKey());\n+    assertEquals(\"tag\", timer.getDynamicTimerTag());\n+    assertEquals(INSTANT, timer.getFireTimestamp());\n+    assertEquals(INSTANT, timer.getHoldTimestamp());\n+    assertEquals(Collections.singleton(GlobalWindow.INSTANCE), timer.getWindows());\n+    assertEquals(PaneInfo.NO_FIRING, timer.getPane());\n+    assertFalse(timer.getClearBit());\n   }\n \n   @Test\n-  public void testTimerCoderWithInconsistentWithEqualsPayloadCoder() throws Exception {\n-    Coder<Timer<byte[]>> coder = Timer.Coder.of(ByteArrayCoder.of());\n+  public void testTimerCoderWithInconsistentWithEqualsComponentCoders() throws Exception {\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);\n     CoderProperties.coderSerializable(coder);\n     CoderProperties.structuralValueDecodeEncodeEqual(\n-        coder, Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)));\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n     CoderProperties.structuralValueConsistentWithEquals(\n-        coder, Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)), Timer.of(INSTANT, \"ABC\".getBytes(UTF_8)));\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING),\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n   }\n \n   @Test\n-  public void testTimerCoderWithConsistentWithEqualsPayloadCoder() throws Exception {\n-    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of());\n-    CoderProperties.coderDecodeEncodeEqual(coder, Timer.of(INSTANT, \"ABC\"));\n+  public void testTimerCoderWithConsistentWithEqualsComponentCoders() throws Exception {\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);\n+    CoderProperties.coderDecodeEncodeEqual(\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singletonList(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n     CoderProperties.coderConsistentWithEquals(\n-        coder, Timer.of(INSTANT, \"ABC\"), Timer.of(INSTANT, \"ABC\"));\n-    CoderProperties.coderDeterministic(coder, Timer.of(INSTANT, \"ABC\"), Timer.of(INSTANT, \"ABC\"));\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singletonList(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING),\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singletonList(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n+    CoderProperties.coderDeterministic(\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singletonList(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING),\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            INSTANT,\n+            INSTANT,\n+            Collections.singletonList(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING));\n   }\n \n   @Test\n   public void testTimerCoderWireFormat() throws Exception {\n-    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of());\n+    Coder<Timer<String>> coder = Timer.Coder.of(StringUtf8Coder.of(), GlobalWindow.Coder.INSTANCE);\n     CoderProperties.coderEncodesBase64(\n-        coder, Timer.of(new Instant(255L), \"ABC\"), \"gAAAAAAAAP8DQUJD\");\n+        coder,\n+        Timer.of(\n+            \"key\",\n+            \"tag\",\n+            new Instant(225L),\n+            new Instant(225L),\n+            Collections.singleton(GlobalWindow.INSTANCE),\n+            PaneInfo.NO_FIRING),\n+        \"A2tleQN0YWcAgAAAAAAAAOGAAAAAAAAA4QAAAAEP\");\n   }", "originalCommit": "d63f9cf3ce5b9683505582e4e47554ca5376405e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NzYwNw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402687607", "body": "```suggestion\r\n  /** Returns a cleared timer for the given {@code userKey}, {@code dynamicTimerTag} and {@code windows}. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n          \n          \n            \n              /** Returns a cleared timer for the given {@code userKey}, {@code dynamicTimerTag} and {@code windows}. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns a cleared timer for the given userKey<span class=\"x x-first x-last\">, </span>dynamicTimerTag and windows. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns a cleared timer for the given <span class=\"x x-first x-last\">{@code </span>userKey<span class=\"x x-first x-last\">}, {@code </span>dynamicTimerTag<span class=\"x x-first x-last\">}</span> and <span class=\"x x-first x-last\">{@code </span>windows<span class=\"x x-first x-last\">}</span>. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:30:07Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NzcxMg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402687712", "body": "```suggestion\r\n * A timer consists of a user key, a dynamic timer tag, a set of windows and either a bit that says that this timer\r\n * should be cleared or data representing the firing timestamp, hold timestamp and pane information that should be used when producing output.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A timer consists of a user key, a dynamic timer tag and either a bit that says that this timer\n          \n          \n            \n             * should be cleared or data representing the firing timestamp, hold timestamp and a list of windows\n          \n          \n            \n             * and pane information that should be used when producing output.\n          \n          \n            \n             * A timer consists of a user key, a dynamic timer tag, a set of windows and either a bit that says that this timer\n          \n          \n            \n             * should be cleared or data representing the firing timestamp, hold timestamp and pane information that should be used when producing output.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> timer consists of a user key, a dynamic timer tag and either a bit that says that <span class=\"pl-c1\">this</span> timer</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> should be cleared or data representing the firing timestamp, hold timestamp and a list of windows</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> and pane information that should be used when producing output.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">A</span> timer consists of a user key, a dynamic timer tag, a set of windows and either a bit that says that <span class=\"pl-c1\">this</span> timer</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> should be cleared or data representing the firing timestamp, hold timestamp and pane information that should be used when producing output.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:30:34Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -21,17 +21,29 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Objects;\n import javax.annotation.Nullable;\n+import org.apache.beam.sdk.coders.BooleanCoder;\n import org.apache.beam.sdk.coders.CoderException;\n+import org.apache.beam.sdk.coders.CollectionCoder;\n import org.apache.beam.sdk.coders.InstantCoder;\n+import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.coders.StructuredCoder;\n+import org.apache.beam.sdk.state.TimerSpec;\n+import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo.PaneInfoCoder;\n import org.apache.beam.sdk.util.common.ElementByteSizeObserver;\n import org.joda.time.Instant;\n \n /**\n- * A timer consists of a timestamp and a corresponding user supplied payload.\n+ * A timer consists of a user key, a dynamic timer tag and either a bit that says that this timer\n+ * should be cleared or data representing the firing timestamp, hold timestamp and a list of windows\n+ * and pane information that should be used when producing output.", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4NzgyMg==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402687822", "body": "```suggestion\r\n   * Returns the tag that the timer is set on. The tag is {@code \"\"} when the timer is for a {@link\r\n   * TimerSpec}.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n          \n          \n            \n               * TimerSpec}.\n          \n          \n            \n               * Returns the tag that the timer is set on. The tag is {@code \"\"} when the timer is for a {@link\n          \n          \n            \n               * TimerSpec}.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the tag that the timer is set on. <span class=\"pl-smi x x-first x-last\">This</span> tag is {<span class=\"pl-k\">@code</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>} when the timer is <span class=\"pl-k\">for</span> a {<span class=\"pl-k\">@link</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">TimerSpec</span>}<span class=\"pl-c1\">.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the tag that the timer is set on. <span class=\"pl-smi x x-first x-last\">The</span> tag is {<span class=\"pl-k\">@code</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>} when the timer is <span class=\"pl-k\">for</span> a {<span class=\"pl-k\">@link</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">TimerSpec</span>}<span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:31:01Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4ODA4OQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402688089", "body": "```suggestion\r\n   * Returns the {@link PaneInfo} that is related to the timer. This field is nullable only when the\r\n   * timer is being cleared.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns the paneinfo that is related to the timer. This field is nullable only when the\n          \n          \n            \n               * timer is being cleared.\n          \n          \n            \n               * Returns the {@link PaneInfo} that is related to the timer. This field is nullable only when the\n          \n          \n            \n               * timer is being cleared.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the <span class=\"x x-first x-last\">paneinfo</span> that is related to the timer. <span class=\"pl-smi\">This</span> field is nullable only when the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"115\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> timer is being cleared.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the <span class=\"x x-first\">{</span><span class=\"pl-k x\">@link</span><span class=\"x\"> </span><span class=\"pl-smi x\">PaneInfo</span><span class=\"x x-last\">}</span> that is related to the timer. <span class=\"pl-smi\">This</span> field is nullable only when the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"115\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> timer is being cleared.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:32:03Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /** Returns whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the timer is being cleared.\n    *\n-   * <p>The time is relative to the time domain defined in the {@link\n+   * <p>The time is absolute to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the timer is being cleared.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * timer is being cleared.", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4ODc2OQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402688769", "body": "This will make the method less error prone in case the contract changes.\r\n```suggestion\r\n    return Objects.equals(this.getUserKey(), that.getUserKey())\r\n        && Objects.equals(this.getDynamicTimerTag(), that.getDynamicTimerTag())\r\n        && Objects.equals(this.getWindows(), that.getWindows())\r\n        && (this.getClearBit() == that.getClearBit())\r\n        && Objects.equals(this.getFireTimestamp(), that.getFireTimestamp())\r\n        && Objects.equals(this.getHoldTimestamp(), that.getHoldTimestamp())\r\n        && Objects.equals(this.getPane(), that.getPane());\r\n  }\r\n```", "bodyText": "This will make the method less error prone in case the contract changes.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (this.getClearBit()) {\n          \n          \n            \n                  return Objects.equals(this.getUserKey(), that.getUserKey())\n          \n          \n            \n                      && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n          \n          \n            \n                      && (this.getClearBit() == that.getClearBit())\n          \n          \n            \n                      && Objects.equals(this.getWindows(), that.getWindows());\n          \n          \n            \n                }\n          \n          \n            \n                return Objects.equals(this.getUserKey(), that.getUserKey())\n          \n          \n            \n                    && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n          \n          \n            \n                    && (this.getClearBit() == that.getClearBit())\n          \n          \n            \n                    && this.getFireTimestamp().equals(that.getFireTimestamp())\n          \n          \n            \n                    && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n          \n          \n            \n                    && Objects.equals(this.getWindows(), that.getWindows())\n          \n          \n            \n                    && Objects.equals(this.getPane(), that.getPane());\n          \n          \n            \n              }\n          \n          \n            \n                return Objects.equals(this.getUserKey(), that.getUserKey())\n          \n          \n            \n                    && Objects.equals(this.getDynamicTimerTag(), that.getDynamicTimerTag())\n          \n          \n            \n                    && Objects.equals(this.getWindows(), that.getWindows())\n          \n          \n            \n                    && (this.getClearBit() == that.getClearBit())\n          \n          \n            \n                    && Objects.equals(this.getFireTimestamp(), that.getFireTimestamp())\n          \n          \n            \n                    && Objects.equals(this.getHoldTimestamp(), that.getHoldTimestamp())\n          \n          \n            \n                    && Objects.equals(this.getPane(), that.getPane());\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">This will make the method less error prone in case the contract changes.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"132\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getClearBit()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"133\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getUserKey(), that<span class=\"pl-k\">.</span>getUserKey())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"134\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getDynamicTimerTag()<span class=\"pl-k\">.</span>equals(that<span class=\"pl-k\">.</span>getDynamicTimerTag())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"135\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">&amp;&amp;</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getClearBit() <span class=\"pl-k\">==</span> that<span class=\"pl-k\">.</span>getClearBit())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"136\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getWindows(), that<span class=\"pl-k\">.</span>getWindows());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"137\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"138\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getUserKey(), that<span class=\"pl-k\">.</span>getUserKey())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"139\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getDynamicTimerTag()<span class=\"pl-k\">.</span>equals(that<span class=\"pl-k\">.</span>getDynamicTimerTag())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"140\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getClearBit() <span class=\"pl-k\">==</span> that<span class=\"pl-k\">.</span>getClearBit())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"141\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getFireTimestamp()<span class=\"pl-k\">.</span>equals(that<span class=\"pl-k\">.</span>getFireTimestamp())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"142\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getHoldTimestamp()<span class=\"pl-k\">.</span>equals(that<span class=\"pl-k\">.</span>getHoldTimestamp())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"143\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getWindows(), that<span class=\"pl-k\">.</span>getWindows())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getPane(), that<span class=\"pl-k\">.</span>getPane());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"132\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getUserKey(), that<span class=\"pl-k\">.</span>getUserKey())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"133\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getDynamicTimerTag(), that<span class=\"pl-k\">.</span>getDynamicTimerTag())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"134\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getWindows(), that<span class=\"pl-k\">.</span>getWindows())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"135\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getClearBit() <span class=\"pl-k\">==</span> that<span class=\"pl-k\">.</span>getClearBit())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"136\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getFireTimestamp(), that<span class=\"pl-k\">.</span>getFireTimestamp())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"137\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getHoldTimestamp(), that<span class=\"pl-k\">.</span>getHoldTimestamp())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"138\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>getPane(), that<span class=\"pl-k\">.</span>getPane());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"139\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:34:41Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /** Returns whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the timer is being cleared.\n    *\n-   * <p>The time is relative to the time domain defined in the {@link\n+   * <p>The time is absolute to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the timer is being cleared.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * timer is being cleared.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    }\n+    Timer<?> that = (Timer<?>) other;\n+    if (this.getClearBit()) {\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && Objects.equals(this.getWindows(), that.getWindows());\n+    }\n+    return Objects.equals(this.getUserKey(), that.getUserKey())\n+        && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+        && (this.getClearBit() == that.getClearBit())\n+        && this.getFireTimestamp().equals(that.getFireTimestamp())\n+        && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n+        && Objects.equals(this.getWindows(), that.getWindows())\n+        && Objects.equals(this.getPane(), that.getPane());\n+  }", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4ODk3Nw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402688977", "body": "The hash is still stable will null objects.\r\n```suggestion\r\n```", "bodyText": "The hash is still stable will null objects.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (getClearBit()) {\n          \n          \n            \n                  return Objects.hash(getUserKey(), getDynamicTimerTag(), getClearBit(), getWindows());\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\">The hash is still stable will null objects.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"137\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (getClearBit()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"138\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>hash(getUserKey(), getDynamicTimerTag(), getClearBit(), getWindows());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"139\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:35:30Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /** Returns whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the timer is being cleared.\n    *\n-   * <p>The time is relative to the time domain defined in the {@link\n+   * <p>The time is absolute to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the timer is being cleared.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * timer is being cleared.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    }\n+    Timer<?> that = (Timer<?>) other;\n+    if (this.getClearBit()) {\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && Objects.equals(this.getWindows(), that.getWindows());\n+    }\n+    return Objects.equals(this.getUserKey(), that.getUserKey())\n+        && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+        && (this.getClearBit() == that.getClearBit())\n+        && this.getFireTimestamp().equals(that.getFireTimestamp())\n+        && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n+        && Objects.equals(this.getWindows(), that.getWindows())\n+        && Objects.equals(this.getPane(), that.getPane());\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    // Hash only the millis of the timestamp to be consistent with equals\n+    if (getClearBit()) {\n+      return Objects.hash(getUserKey(), getDynamicTimerTag(), getClearBit(), getWindows());\n+    }", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4OTAzMA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402689030", "body": "```suggestion\r\n    return Objects.hash(\r\n        getUserKey(),\r\n        getDynamicTimerTag(),\r\n        getWindows(),\r\n        getClearBit(),\r\n        getFireTimestamp().getMillis(),\r\n        getHoldTimestamp().getMillis(),\r\n        getPane());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return Objects.hash(\n          \n          \n            \n                    getUserKey(),\n          \n          \n            \n                    getDynamicTimerTag(),\n          \n          \n            \n                    getClearBit(),\n          \n          \n            \n                    getFireTimestamp().getMillis(),\n          \n          \n            \n                    getHoldTimestamp().getMillis(),\n          \n          \n            \n                    getWindows(),\n          \n          \n            \n                    getPane());\n          \n          \n            \n                return Objects.hash(\n          \n          \n            \n                    getUserKey(),\n          \n          \n            \n                    getDynamicTimerTag(),\n          \n          \n            \n                    getWindows(),\n          \n          \n            \n                    getClearBit(),\n          \n          \n            \n                    getFireTimestamp().getMillis(),\n          \n          \n            \n                    getHoldTimestamp().getMillis(),\n          \n          \n            \n                    getPane());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"140\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>hash(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"141\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        getUserKey(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"142\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        getDynamicTimerTag(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"143\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">getClearBit</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">getFireTimestamp()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMillis</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">getHoldTimestamp</span>()<span class=\"pl-k\">.</span>getMillis(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"146\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">getWindows</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"147\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        getPane());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"140\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>hash(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"141\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        getUserKey(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"142\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        getDynamicTimerTag(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"143\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">getWindows</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">getClearBit</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">getFireTimestamp</span>()<span class=\"pl-k\">.</span>getMillis(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"146\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">getHoldTimestamp()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMillis</span>(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"147\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        getPane());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:35:45Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /** Returns whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the timer is being cleared.\n    *\n-   * <p>The time is relative to the time domain defined in the {@link\n+   * <p>The time is absolute to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the timer is being cleared.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * timer is being cleared.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    }\n+    Timer<?> that = (Timer<?>) other;\n+    if (this.getClearBit()) {\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && Objects.equals(this.getWindows(), that.getWindows());\n+    }\n+    return Objects.equals(this.getUserKey(), that.getUserKey())\n+        && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+        && (this.getClearBit() == that.getClearBit())\n+        && this.getFireTimestamp().equals(that.getFireTimestamp())\n+        && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n+        && Objects.equals(this.getWindows(), that.getWindows())\n+        && Objects.equals(this.getPane(), that.getPane());\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    // Hash only the millis of the timestamp to be consistent with equals\n+    if (getClearBit()) {\n+      return Objects.hash(getUserKey(), getDynamicTimerTag(), getClearBit(), getWindows());\n+    }\n+    return Objects.hash(\n+        getUserKey(),\n+        getDynamicTimerTag(),\n+        getClearBit(),\n+        getFireTimestamp().getMillis(),\n+        getHoldTimestamp().getMillis(),\n+        getWindows(),\n+        getPane());", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxMzY5Nw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402713697", "bodyText": "getFireTimestamp() returns null when clearBit is true. I think we still need to check  clearBit in order to hash the timestamp with milliseconds.", "author": "boyuanzz", "createdAt": "2020-04-03T03:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4OTAzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5OTYwOQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r403099609", "bodyText": "good point", "author": "lukecwik", "createdAt": "2020-04-03T15:48:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4OTAzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4OTE4Mw==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402689183", "body": "```suggestion\r\n   * <p>This coder is inexpensive for size estimation of elements if the key coder and window coder are inexpensive\r\n   * for size estimation.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p>This coder is inexpensive for size estimation of elements if the key coder is inexpensive\n          \n          \n            \n               * for size estimation.\n          \n          \n            \n               * <p>This coder is inexpensive for size estimation of elements if the key coder and window coder are inexpensive\n          \n          \n            \n               * for size estimation.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">This</span> coder is inexpensive <span class=\"pl-k\">for</span> size estimation of elements <span class=\"pl-k\">if</span> the key coder <span class=\"x x-first x-last\">is</span> inexpensive</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">for</span> size estimation.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">This</span> coder is inexpensive <span class=\"pl-k\">for</span> size estimation of elements <span class=\"pl-k\">if</span> the key coder <span class=\"x x-first x-last\">and window coder are</span> inexpensive</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">for</span> size estimation.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:36:25Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */\n+  public abstract Collection<? extends BoundedWindow> getWindows();\n+\n+  /** Returns whether the timer is going to be cleared. */\n+  public abstract boolean getClearBit();\n+\n   /**\n-   * Returns the timestamp of when the timer is scheduled to fire.\n+   * Returns the timestamp of when the timer is scheduled to fire. This field is nullable only when\n+   * the timer is being cleared.\n    *\n-   * <p>The time is relative to the time domain defined in the {@link\n+   * <p>The time is absolute to the time domain defined in the {@link\n    * org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec} that is associated with this\n    * timer.\n    */\n-  public abstract Instant getTimestamp();\n+  @Nullable\n+  public abstract Instant getFireTimestamp();\n \n-  /** A user supplied payload. */\n+  /**\n+   * Returns the watermark that the timer is supposed to be held. This field is nullable only when\n+   * the timer is being cleared.\n+   */\n   @Nullable\n-  public abstract T getPayload();\n+  public abstract Instant getHoldTimestamp();\n+\n+  /**\n+   * Returns the paneinfo that is related to the timer. This field is nullable only when the\n+   * timer is being cleared.\n+   */\n+  @Nullable\n+  public abstract PaneInfo getPane();\n+\n+  @Override\n+  public boolean equals(Object other) {\n+    if (!(other instanceof Timer)) {\n+      return false;\n+    }\n+    Timer<?> that = (Timer<?>) other;\n+    if (this.getClearBit()) {\n+      return Objects.equals(this.getUserKey(), that.getUserKey())\n+          && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+          && (this.getClearBit() == that.getClearBit())\n+          && Objects.equals(this.getWindows(), that.getWindows());\n+    }\n+    return Objects.equals(this.getUserKey(), that.getUserKey())\n+        && this.getDynamicTimerTag().equals(that.getDynamicTimerTag())\n+        && (this.getClearBit() == that.getClearBit())\n+        && this.getFireTimestamp().equals(that.getFireTimestamp())\n+        && this.getHoldTimestamp().equals(that.getHoldTimestamp())\n+        && Objects.equals(this.getWindows(), that.getWindows())\n+        && Objects.equals(this.getPane(), that.getPane());\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    // Hash only the millis of the timestamp to be consistent with equals\n+    if (getClearBit()) {\n+      return Objects.hash(getUserKey(), getDynamicTimerTag(), getClearBit(), getWindows());\n+    }\n+    return Objects.hash(\n+        getUserKey(),\n+        getDynamicTimerTag(),\n+        getClearBit(),\n+        getFireTimestamp().getMillis(),\n+        getHoldTimestamp().getMillis(),\n+        getWindows(),\n+        getPane());\n+  }\n \n   /**\n    * A {@link org.apache.beam.sdk.coders.Coder} for timers.\n    *\n-   * <p>This coder is deterministic if the payload coder is deterministic.\n+   * <p>This coder is deterministic if both the key coder and window coder are deterministic.\n    *\n-   * <p>This coder is inexpensive for size estimation of elements if the payload coder is\n-   * inexpensive for size estimation.\n+   * <p>This coder is inexpensive for size estimation of elements if the key coder is inexpensive\n+   * for size estimation.", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MjIxMA==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402692210", "body": "```suggestion\r\n  /** Returns the windows which are associated with the timer. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Returns the windows which is associated with the timer. */\n          \n          \n            \n              /** Returns the windows which are associated with the timer. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns the windows which <span class=\"x x-first x-last\">is</span> associated with the timer. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Returns the windows which <span class=\"x x-first x-last\">are</span> associated with the timer. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:47:52Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/Timer.java", "diffHunk": "@@ -40,92 +52,201 @@\n @AutoValue\n public abstract class Timer<T> {\n \n-  /** Returns a timer for the given timestamp with a {@code null} payload. */\n-  public static Timer<Void> of(Instant time) {\n-    return of(time, (Void) null);\n+  /**\n+   * Returns a non-cleared timer for the given {@code userKey}, {@code dynamicTimerTag}, {@code\n+   * fireTimestamp}, {@code holdTimestamp}, {@code windows} and {@code pane}.\n+   */\n+  public static <T> Timer<T> of(\n+      T userKey,\n+      String dynamicTimerTag,\n+      Collection<? extends BoundedWindow> windows,\n+      Instant fireTimestamp,\n+      Instant holdTimestamp,\n+      PaneInfo pane) {\n+    return new AutoValue_Timer(\n+        userKey, dynamicTimerTag, windows, false, fireTimestamp, holdTimestamp, pane);\n   }\n \n-  /** Returns a timer for the given timestamp with a user specified payload. */\n-  public static <T> Timer<T> of(Instant timestamp, @Nullable T payload) {\n-    return new AutoValue_Timer(timestamp, payload);\n+  /** Returns a cleared timer for the given userKey, dynamicTimerTag and windows. */\n+  public static <T> Timer<T> cleared(\n+      T userKey, String dynamicTimerTag, Collection<? extends BoundedWindow> windows) {\n+    return new AutoValue_Timer(userKey, dynamicTimerTag, windows, true, null, null, null);\n   }\n \n+  /** Returns the key that the timer is set on. */\n+  public abstract T getUserKey();\n+\n+  /**\n+   * Returns the tag that the timer is set on. This tag is {@code \"\"} when the timer is for a {@link\n+   * TimerSpec}.\n+   */\n+  public abstract String getDynamicTimerTag();\n+\n+  /** Returns the windows which is associated with the timer. */", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MjU1MQ==", "url": "https://github.com/apache/beam/pull/11199#discussion_r402692551", "body": "```suggestion\r\n  private static final Instant FIRE_TIME = new Instant(123L);\r\n  private static final Instant HOLD_TIME = new Instant(456L);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final Instant FIREINSTANT = new Instant(123L);\n          \n          \n            \n              private static final Instant HOLDINSTANT = new Instant(456L);\n          \n          \n            \n              private static final Instant FIRE_TIME = new Instant(123L);\n          \n          \n            \n              private static final Instant HOLD_TIME = new Instant(456L);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-c1 x x-first x-last\">FIREINSTANT</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Instant</span>(<span class=\"pl-c1\">123L</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-c1 x x-first x-last\">HOLDINSTANT</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Instant</span>(<span class=\"pl-c1\">456L</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-c1 x x-first x-last\">FIRE_TIME</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Instant</span>(<span class=\"pl-c1\">123L</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-c1 x x-first x-last\">HOLD_TIME</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Instant</span>(<span class=\"pl-c1\">456L</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-04-03T01:49:09Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/TimerTest.java", "diffHunk": "@@ -33,42 +35,128 @@\n /** Tests for {@link Timer}. */\n @RunWith(JUnit4.class)\n public class TimerTest {\n-  private static final Instant INSTANT = Instant.now();\n+  private static final Instant FIREINSTANT = new Instant(123L);\n+  private static final Instant HOLDINSTANT = new Instant(456L);", "originalCommit": "3ca7a1239ccead1a04fc6d42c1533bb11ea3012b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "151b2f80997810ed9311124d2831b70a51d1c07a", "url": "https://github.com/apache/beam/commit/151b2f80997810ed9311124d2831b70a51d1c07a", "message": "Update Timer encoding", "committedDate": "2020-04-03T05:18:35Z", "type": "commit"}, {"oid": "151b2f80997810ed9311124d2831b70a51d1c07a", "url": "https://github.com/apache/beam/commit/151b2f80997810ed9311124d2831b70a51d1c07a", "message": "Update Timer encoding", "committedDate": "2020-04-03T05:18:35Z", "type": "forcePushed"}]}