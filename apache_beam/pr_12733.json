{"pr_number": 12733, "pr_title": "[BEAM-10760] Optimize state cleanup for global window in portable Flink runner", "pr_author": "tweise", "pr_createdAt": "2020-08-31T02:11:27Z", "pr_url": "https://github.com/apache/beam/pull/12733", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxNTY3NQ==", "url": "https://github.com/apache/beam/pull/12733#discussion_r480015675", "body": "```suggestion\r\n      // Check if the final watermark was triggered to perform state cleanup for global window\r\n      if (potentialOutputWatermark > BoundedWindow.maxTimestamp().getMillis()\r\n          && currentOutputWatermark <= BoundedWindow.maxTimestamp().getMillis()) {\r\n        cleanupGlobalWindowState();\r\n      }\r\n```\r\n\r\nWould change the condition to specifically target the end of the global window. There is also no need to include the statefulness in the condition because if there is no state, it also won't be cleaned up.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // Check if the final watermark was triggered to perform state cleanup for global window\n          \n          \n            \n                  if (potentialOutputWatermark == Long.MAX_VALUE\n          \n          \n            \n                      && currentOutputWatermark < Long.MAX_VALUE\n          \n          \n            \n                      && isStateful) {\n          \n          \n            \n                    cleanupGlobalWindowState();\n          \n          \n            \n                  }\n          \n          \n            \n                  // Check if the final watermark was triggered to perform state cleanup for global window\n          \n          \n            \n                  if (potentialOutputWatermark > BoundedWindow.maxTimestamp().getMillis()\n          \n          \n            \n                      && currentOutputWatermark <= BoundedWindow.maxTimestamp().getMillis()) {\n          \n          \n            \n                    cleanupGlobalWindowState();\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nWould change the condition to specifically target the end of the global window. There is also no need to include the statefulness in the condition because if there is no state, it also won't be cleaned up.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"600\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> Check if the final watermark was triggered to perform state cleanup for global window</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"601\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (potentialOutputWatermark <span class=\"pl-k\">==</span> <span class=\"pl-smi\">Long</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MAX_VALUE</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"602\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">&amp;&amp;</span> currentOutputWatermark <span class=\"pl-k\">&lt;</span> <span class=\"pl-smi\">Long</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MAX_VALUE</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"603\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">&amp;&amp;</span> isStateful) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"604\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        cleanupGlobalWindowState();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"605\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"600\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> Check if the final watermark was triggered to perform state cleanup for global window</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"601\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (potentialOutputWatermark <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">BoundedWindow</span><span class=\"pl-k\">.</span>maxTimestamp()<span class=\"pl-k\">.</span>getMillis()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"602\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">&amp;&amp;</span> currentOutputWatermark <span class=\"pl-k\">&lt;=</span> <span class=\"pl-smi\">BoundedWindow</span><span class=\"pl-k\">.</span>maxTimestamp()<span class=\"pl-k\">.</span>getMillis()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"603\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        cleanupGlobalWindowState();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"604\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Would change the condition to specifically target the end of the global window. There is also no need to include the statefulness in the condition because if there is no state, it also won't be cleaned up.</p>", "author": "mxm", "createdAt": "2020-08-31T09:44:47Z", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "diffHunk": "@@ -592,12 +593,37 @@ public long applyOutputWatermarkHold(long currentOutputWatermark, long potential\n         return currentOutputWatermark;\n       }\n     } else {\n+      // Check if the final watermark was triggered to perform state cleanup for global window\n+      if (potentialOutputWatermark == Long.MAX_VALUE\n+          && currentOutputWatermark < Long.MAX_VALUE\n+          && isStateful) {\n+        cleanupGlobalWindowState();\n+      }", "originalCommit": "5659941cbd6cc46748450fb08bf3491c7fc5ae67", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6e169f108af04572a0956b54fff1dfe7f8cae03d", "url": "https://github.com/apache/beam/commit/6e169f108af04572a0956b54fff1dfe7f8cae03d", "message": "spotless", "committedDate": "2020-09-01T03:35:28Z", "type": "forcePushed"}, {"oid": "a6f4a60edd3ed02839b5b37cdbb29ed137517fae", "url": "https://github.com/apache/beam/commit/a6f4a60edd3ed02839b5b37cdbb29ed137517fae", "message": "[BEAM-10760] Optimize state cleanup for global window in portable Flink runner\n\nCleanup timers per key lead to potentially unbounded state/checkpoint size growth with a global window in streaming mode.\nInstead of timers, we can use the final watermark as the barrier to perform state cleanup.", "committedDate": "2020-09-01T20:48:20Z", "type": "commit"}, {"oid": "a6f4a60edd3ed02839b5b37cdbb29ed137517fae", "url": "https://github.com/apache/beam/commit/a6f4a60edd3ed02839b5b37cdbb29ed137517fae", "message": "[BEAM-10760] Optimize state cleanup for global window in portable Flink runner\n\nCleanup timers per key lead to potentially unbounded state/checkpoint size growth with a global window in streaming mode.\nInstead of timers, we can use the final watermark as the barrier to perform state cleanup.", "committedDate": "2020-09-01T20:48:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzODk4NA==", "url": "https://github.com/apache/beam/pull/12733#discussion_r481938984", "body": "This logic should be moved to `DoFnOperator#emitWatermark`. It can then also be simplified.", "bodyText": "This logic should be moved to DoFnOperator#emitWatermark. It can then also be simplified.", "bodyHTML": "<p dir=\"auto\">This logic should be moved to <code>DoFnOperator#emitWatermark</code>. It can then also be simplified.</p>", "author": "mxm", "createdAt": "2020-09-02T09:39:23Z", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/ExecutableStageDoFnOperator.java", "diffHunk": "@@ -592,12 +593,35 @@ public long applyOutputWatermarkHold(long currentOutputWatermark, long potential\n         return currentOutputWatermark;\n       }\n     } else {\n+      // Check if the final watermark was triggered to perform state cleanup for global window\n+      if (potentialOutputWatermark > BoundedWindow.TIMESTAMP_MAX_VALUE.getMillis()\n+          && currentOutputWatermark <= BoundedWindow.TIMESTAMP_MAX_VALUE.getMillis()) {\n+        cleanupGlobalWindowState();\n+      }", "originalCommit": "a6f4a60edd3ed02839b5b37cdbb29ed137517fae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}