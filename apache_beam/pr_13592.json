{"pr_number": 13592, "pr_title": "[BEAM-11403] Cache UnboundedReader per UnboundedSourceRestriction in SDF Wrapper DoFn.", "pr_author": "boyuanzz", "pr_createdAt": "2020-12-21T23:18:16Z", "pr_url": "https://github.com/apache/beam/pull/13592", "timeline": [{"oid": "f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "url": "https://github.com/apache/beam/commit/f8d762e9a7b12ac5cebd8ef8a402e53856c6294f", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-22T00:51:06Z", "type": "forcePushed"}, {"oid": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "url": "https://github.com/apache/beam/commit/3d0a8185a0e4937132c38d3acac7ac8356caf25d", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-22T03:56:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1MzY3MQ==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547153671", "body": "```suggestion\r\n        return new UnboundedSourceAsSDFRestrictionTracker<>(restriction, pipelineOptions, reader);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions, reader);\n          \n          \n            \n                    return new UnboundedSourceAsSDFRestrictionTracker<>(restriction, pipelineOptions, reader);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UnboundedSourceAsSDFRestrictionTracker</span>(restriction, pipelineOptions, reader);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">UnboundedSourceAsSDFRestrictionTracker<span class=\"x x-first x-last\">&lt;&gt;</span></span>(restriction, pipelineOptions, reader);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "je-ik", "createdAt": "2020-12-22T09:03:23Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -488,7 +519,20 @@ public void splitRestriction(\n         restrictionTracker(\n             @Restriction UnboundedSourceRestriction<OutputT, CheckpointT> restriction,\n             PipelineOptions pipelineOptions) {\n-      return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions);\n+      try {\n+        UnboundedReader reader =\n+            cachedReaders.getIfPresent(\n+                createCacheKey(restriction.getSource(), restriction.getCheckpoint()));\n+        if (reader == null) {\n+          reader =\n+              restriction.getSource().createReader(pipelineOptions, restriction.getCheckpoint());\n+          cachedReaders.put(\n+              createCacheKey(restriction.getSource(), restriction.getCheckpoint()), reader);\n+        }\n+        return new UnboundedSourceAsSDFRestrictionTracker(restriction, pipelineOptions, reader);", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NDcyMg==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547154722", "body": "```suggestion\r\n      UnboundedReader<OutputT> currentReader =\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  UnboundedReader currentReader =\n          \n          \n            \n                  UnboundedReader<OutputT> currentReader =", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">UnboundedReader</span> currentReader <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">UnboundedReader<span class=\"x x-first\">&lt;</span><span class=\"pl-smi x\">OutputT</span><span class=\"x x-last\">&gt;</span></span> currentReader <span class=\"pl-k\">=</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "je-ik", "createdAt": "2020-12-22T09:05:34Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -501,6 +545,10 @@ public ProcessContinuation processElement(\n         throws IOException {\n       UnboundedSourceRestriction<OutputT, CheckpointT> initialRestriction =\n           tracker.currentRestriction();\n+      UnboundedReader currentReader =", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NTI0Mw==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547155243", "body": "```suggestion\r\n    private Cache<UnboundedSourceRestriction<OutputT, CheckointT>, UnboundedReader> cachedReaders;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n          \n          \n            \n                private Cache<UnboundedSourceRestriction<OutputT, CheckointT>, UnboundedReader> cachedReaders;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">Cache&lt;<span class=\"pl-smi\">UnboundedSourceRestriction</span>, <span class=\"pl-smi\">UnboundedReader</span>&gt;</span> cachedReaders;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">Cache&lt;<span class=\"pl-k\">UnboundedSourceRestriction<span class=\"x x-first\">&lt;</span><span class=\"pl-smi x\">OutputT</span><span class=\"x\">, </span><span class=\"pl-smi x\">CheckointT</span><span class=\"x x-last\">&gt;</span></span>, <span class=\"pl-smi\">UnboundedReader</span>&gt;</span> cachedReaders;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "je-ik", "createdAt": "2020-12-22T09:06:35Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NzMzMg==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547157332", "body": ":+1:", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "je-ik", "createdAt": "2020-12-22T09:10:51Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -756,23 +810,20 @@ public CheckpointMark getCheckpointMark() {\n       private final PipelineOptions pipelineOptions;\n       private UnboundedSource.UnboundedReader<OutputT> currentReader;\n       private boolean readerHasBeenStarted;\n+      private boolean isDone;", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NzcxMA==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547157710", "body": "```suggestion\r\n          UnboundedReader<OutputT> cachedUnboundedReader) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      UnboundedReader cachedUnboundedReader) {\n          \n          \n            \n                      UnboundedReader<OutputT> cachedUnboundedReader) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">UnboundedReader</span> cachedUnboundedReader) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">UnboundedReader<span class=\"x x-first\">&lt;</span><span class=\"pl-smi x\">OutputT</span><span class=\"x x-last\">&gt;</span></span> cachedUnboundedReader) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "je-ik", "createdAt": "2020-12-22T09:11:35Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -756,23 +810,20 @@ public CheckpointMark getCheckpointMark() {\n       private final PipelineOptions pipelineOptions;\n       private UnboundedSource.UnboundedReader<OutputT> currentReader;\n       private boolean readerHasBeenStarted;\n+      private boolean isDone;\n \n       UnboundedSourceAsSDFRestrictionTracker(\n           UnboundedSourceRestriction<OutputT, CheckpointT> initialRestriction,\n-          PipelineOptions pipelineOptions) {\n+          PipelineOptions pipelineOptions,\n+          UnboundedReader cachedUnboundedReader) {", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTQ2MA==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547159460", "body": "```suggestion\r\n              (UnboundedSource<OutputT, CheckpointT>) currentReader.getCurrentSource(),\r\n              (CheckpointT) currentReader.getCheckpointMark()),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          currentReader.getCurrentSource(), (CheckpointT) currentReader.getCheckpointMark()),\n          \n          \n            \n                          (UnboundedSource<OutputT, CheckpointT>) currentReader.getCurrentSource(),\n          \n          \n            \n                          (CheckpointT) currentReader.getCheckpointMark()),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"x x-first\">currentReader</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getCurrentSource(), (</span><span class=\"pl-smi\">CheckpointT</span>) currentReader<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getCheckpointMark()</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"x x-first\">(</span><span class=\"pl-k\"><span class=\"x\">UnboundedSource&lt;</span><span class=\"pl-smi x\">OutputT</span><span class=\"x x-last\">, </span><span class=\"pl-smi\">CheckpointT</span><span class=\"x x-first x-last\">&gt;</span></span>) currentReader<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getCurrentSource(</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              (<span class=\"pl-smi\">CheckpointT</span>) currentReader<span class=\"pl-k\">.</span>getCheckpointMark()),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "je-ik", "createdAt": "2020-12-22T09:15:07Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -527,6 +575,12 @@ public ProcessContinuation processElement(\n             currentRestriction.getCheckpoint()::finalizeCheckpoint);\n       }\n \n+      // Update the readers cache with latest CheckpointMark.\n+      cachedReaders.put(\n+          createCacheKey(\n+              currentReader.getCurrentSource(), (CheckpointT) currentReader.getCheckpointMark()),", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjU0MQ==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547162541", "body": "I think this could be way lower. We insert the reader back to the cache after checkpoint, so if it is not reused after few seconds, it is likely not be reused at all. Maybe 10 seconds might be enough?", "bodyText": "I think this could be way lower. We insert the reader back to the cache after checkpoint, so if it is not reused after few seconds, it is likely not be reused at all. Maybe 10 seconds might be enough?", "bodyHTML": "<p dir=\"auto\">I think this could be way lower. We insert the reader back to the cache after checkpoint, so if it is not reused after few seconds, it is likely not be reused at all. Maybe 10 seconds might be enough?</p>", "author": "je-ik", "createdAt": "2020-12-22T09:21:11Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n \n     private UnboundedSourceAsSDFWrapperFn(Coder<CheckpointT> checkpointCoder) {\n       this.checkpointCoder = checkpointCoder;\n     }\n \n+    private UnboundedSourceRestriction createCacheKey(\n+        UnboundedSource<OutputT, CheckpointT> source, CheckpointT checkpoint) {\n+      // For caching reader, we don't care about the watermark.\n+      return UnboundedSourceRestriction.create(\n+          source, checkpoint, BoundedWindow.TIMESTAMP_MIN_VALUE);\n+    }\n+\n+    @Setup\n+    public void setUp() throws Exception {\n+      cachedReaders =\n+          CacheBuilder.newBuilder()\n+              .expireAfterWrite(5, TimeUnit.MINUTES)", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0NTM2OQ==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547445369", "bodyText": "5 mins might be high for DirectRunner but I feel like a few seconds might be too small for a distributed system like Dataflow, especially for a long run streaming application. How about we start from 1min?", "author": "boyuanzz", "createdAt": "2020-12-22T18:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MjU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MzM1Mw==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547163353", "body": "This looks dangerous. What if we are still using the reader inside `processElement`? This is likely to be called from different thread, so we need a synchronization there and not close the reader if being used.", "bodyText": "This looks dangerous. What if we are still using the reader inside processElement? This is likely to be called from different thread, so we need a synchronization there and not close the reader if being used.", "bodyHTML": "<p dir=\"auto\">This looks dangerous. What if we are still using the reader inside <code>processElement</code>? This is likely to be called from different thread, so we need a synchronization there and not close the reader if being used.</p>", "author": "je-ik", "createdAt": "2020-12-22T09:22:48Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java", "diffHunk": "@@ -439,11 +444,37 @@ public IsBounded isBounded() {\n     private static final Logger LOG = LoggerFactory.getLogger(UnboundedSourceAsSDFWrapperFn.class);\n     private static final int DEFAULT_BUNDLE_FINALIZATION_LIMIT_MINS = 10;\n     private final Coder<CheckpointT> checkpointCoder;\n+    private Cache<UnboundedSourceRestriction, UnboundedReader> cachedReaders;\n \n     private UnboundedSourceAsSDFWrapperFn(Coder<CheckpointT> checkpointCoder) {\n       this.checkpointCoder = checkpointCoder;\n     }\n \n+    private UnboundedSourceRestriction createCacheKey(\n+        UnboundedSource<OutputT, CheckpointT> source, CheckpointT checkpoint) {\n+      // For caching reader, we don't care about the watermark.\n+      return UnboundedSourceRestriction.create(\n+          source, checkpoint, BoundedWindow.TIMESTAMP_MIN_VALUE);\n+    }\n+\n+    @Setup\n+    public void setUp() throws Exception {\n+      cachedReaders =\n+          CacheBuilder.newBuilder()\n+              .expireAfterWrite(5, TimeUnit.MINUTES)\n+              .maximumSize(100)\n+              .removalListener(\n+                  (RemovalListener<UnboundedSourceRestriction, UnboundedReader>)\n+                      removalNotification -> {\n+                        try {\n+                          removalNotification.getValue().close();", "originalCommit": "3d0a8185a0e4937132c38d3acac7ac8356caf25d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0MDM2Nw==", "url": "https://github.com/apache/beam/pull/13592#discussion_r547440367", "bodyText": "That's a very good point. Thanks for catching this! I should remove the entry from cache when I obtain the reader from the cache to avoid eviction during processing and we will cache the reader after we finish.", "author": "boyuanzz", "createdAt": "2020-12-22T18:36:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MzM1Mw=="}], "type": "inlineReview"}, {"oid": "2d7e6b9ae68f9e13ae48e47c3b372707c9844d57", "url": "https://github.com/apache/beam/commit/2d7e6b9ae68f9e13ae48e47c3b372707c9844d57", "message": "Address comments", "committedDate": "2020-12-22T20:43:13Z", "type": "forcePushed"}, {"oid": "58da8b3d171f7493fbf9275becf679936e518947", "url": "https://github.com/apache/beam/commit/58da8b3d171f7493fbf9275becf679936e518947", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-23T04:34:18Z", "type": "forcePushed"}, {"oid": "e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "url": "https://github.com/apache/beam/commit/e0b4bfc60d4cad8d61693243da1d2e19615a2f7c", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-23T23:39:51Z", "type": "forcePushed"}, {"oid": "98ee1f178a9e80f4694f86775c06a54ecf82abb8", "url": "https://github.com/apache/beam/commit/98ee1f178a9e80f4694f86775c06a54ecf82abb8", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-24T01:45:49Z", "type": "commit"}, {"oid": "98ee1f178a9e80f4694f86775c06a54ecf82abb8", "url": "https://github.com/apache/beam/commit/98ee1f178a9e80f4694f86775c06a54ecf82abb8", "message": "Cache UnboundedReader per CheckpointMark in SDF Wrapper DoFn.", "committedDate": "2020-12-24T01:45:49Z", "type": "forcePushed"}]}