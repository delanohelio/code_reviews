{"pr_number": 12371, "pr_title": "[BEAM-10341] Refactor SplittableParDoExpander.", "pr_author": "boyuanzz", "pr_createdAt": "2020-07-24T20:25:33Z", "pr_url": "https://github.com/apache/beam/pull/12371", "timeline": [{"oid": "990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "url": "https://github.com/apache/beam/commit/990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "message": "Refactor SplittableParDoExpander.", "committedDate": "2020-07-27T17:29:09Z", "type": "commit"}, {"oid": "990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "url": "https://github.com/apache/beam/commit/990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "message": "Refactor SplittableParDoExpander.", "committedDate": "2020-07-27T17:29:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3NTUzMQ==", "url": "https://github.com/apache/beam/pull/12371#discussion_r464575531", "body": "It would be nice if we could make this final by using `@AutoBuilder` allowing for:\r\n```suggestion\r\n    private final boolean isDrain;\r\n```", "bodyText": "It would be nice if we could make this final by using @AutoBuilder allowing for:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean isDrain = false;\n          \n          \n            \n                private final boolean isDrain;", "bodyHTML": "<p dir=\"auto\">It would be nice if we could make this final by using <code>@AutoBuilder</code> allowing for:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> isDrain<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">boolean</span> isDrain;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-03T18:01:34Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/graph/SplittableParDoExpander.java", "diffHunk": "@@ -91,13 +91,21 @@ public static TransformReplacement createSizedReplacement() {\n    * .\n    */\n   public static TransformReplacement createTruncateReplacement() {\n-    return TruncateReplacement.INSTANCE;\n+    return SizedReplacement.DRAIN_INSTANCE;\n   }\n \n   /** See {@link #createSizedReplacement()} for details. */\n   private static class SizedReplacement implements TransformReplacement {\n \n     private static final SizedReplacement INSTANCE = new SizedReplacement();\n+    private static final SizedReplacement DRAIN_INSTANCE = new SizedReplacement().withDrain();\n+\n+    private boolean isDrain = false;", "originalCommit": "990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MDMzNA==", "url": "https://github.com/apache/beam/pull/12371#discussion_r464580334", "body": "Should we able to simplify this more with?\r\n```\r\nPTransform.Builder newCompositeRoot = ... add pair w/ restriction and split and size ...\r\nString processSizedElementsInputPCollectionId = splitAndSizeOutId;\r\nif (isDrain) {\r\n  ... add drain transform ...\r\n  newCompositeRoot.add drain transform\r\n  String processSizedElementsInputPCollectionId = truncateAndSizeOutId;\r\n}\r\n... add process sized elements transform ...\r\nnewCompositeRoot.add process sized transform\r\n```\r\n\r\nI don't think we should need two copies of adding `ProcessSizedElementsAndRestrictions`\r\n", "bodyText": "Should we able to simplify this more with?\nPTransform.Builder newCompositeRoot = ... add pair w/ restriction and split and size ...\nString processSizedElementsInputPCollectionId = splitAndSizeOutId;\nif (isDrain) {\n  ... add drain transform ...\n  newCompositeRoot.add drain transform\n  String processSizedElementsInputPCollectionId = truncateAndSizeOutId;\n}\n... add process sized elements transform ...\nnewCompositeRoot.add process sized transform\n\nI don't think we should need two copies of adding ProcessSizedElementsAndRestrictions", "bodyHTML": "<p dir=\"auto\">Should we able to simplify this more with?</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"PTransform.Builder newCompositeRoot = ... add pair w/ restriction and split and size ...\nString processSizedElementsInputPCollectionId = splitAndSizeOutId;\nif (isDrain) {\n  ... add drain transform ...\n  newCompositeRoot.add drain transform\n  String processSizedElementsInputPCollectionId = truncateAndSizeOutId;\n}\n... add process sized elements transform ...\nnewCompositeRoot.add process sized transform\n\"><pre><code>PTransform.Builder newCompositeRoot = ... add pair w/ restriction and split and size ...\nString processSizedElementsInputPCollectionId = splitAndSizeOutId;\nif (isDrain) {\n  ... add drain transform ...\n  newCompositeRoot.add drain transform\n  String processSizedElementsInputPCollectionId = truncateAndSizeOutId;\n}\n... add process sized elements transform ...\nnewCompositeRoot.add process sized transform\n</code></pre></div>\n<p dir=\"auto\">I don't think we should need two copies of adding <code>ProcessSizedElementsAndRestrictions</code></p>", "author": "lukecwik", "createdAt": "2020-08-03T18:11:11Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/graph/SplittableParDoExpander.java", "diffHunk": "@@ -214,39 +222,124 @@ public MessageWithComponents getReplacement(\n             generateUniqueId(\n                 transformId + \"/ProcessSizedElementsAndRestrictions\",\n                 existingComponents::containsTransforms);\n-        {\n-          PTransform.Builder processSizedElementsAndRestrictions = PTransform.newBuilder();\n-          processSizedElementsAndRestrictions.putInputs(mainInputName, splitAndSizeOutId);\n-          processSizedElementsAndRestrictions.putAllInputs(sideInputs);\n-          processSizedElementsAndRestrictions.putAllOutputs(splittableParDo.getOutputsMap());\n-          processSizedElementsAndRestrictions.setUniqueName(\n-              generateUniquePCollectonName(\n-                  splittableParDo.getUniqueName() + \"/ProcessSizedElementsAndRestrictions\",\n-                  existingComponents));\n-          processSizedElementsAndRestrictions.setSpec(\n-              FunctionSpec.newBuilder()\n-                  .setUrn(\n-                      PTransformTranslation.SPLITTABLE_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_URN)\n-                  .setPayload(splittableParDo.getSpec().getPayload()));\n-          processSizedElementsAndRestrictions.setEnvironmentId(splittableParDo.getEnvironmentId());\n+        if (!isDrain) {", "originalCommit": "990067489b90f0c128f29fcfdb8b153ba3f0a5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46729bc27db20708fb5d8d14cf63e47e5d7d3192", "url": "https://github.com/apache/beam/commit/46729bc27db20708fb5d8d14cf63e47e5d7d3192", "message": "Address comments.", "committedDate": "2020-08-03T20:26:32Z", "type": "commit"}, {"oid": "ab05adfac1b199a92a1adf991b5d6a442cba71e6", "url": "https://github.com/apache/beam/commit/ab05adfac1b199a92a1adf991b5d6a442cba71e6", "message": "Fix SDF/Process input id.", "committedDate": "2020-08-03T20:54:29Z", "type": "commit"}]}