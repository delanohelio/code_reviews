{"pr_number": 12578, "pr_title": "[BEAM-10703] Prepare Dataflow Java runner for shardable states", "pr_author": "nehsyc", "pr_createdAt": "2020-08-14T00:07:07Z", "pr_url": "https://github.com/apache/beam/pull/12578", "timeline": [{"oid": "8c0490fd1f4764fe469bd86a330b6cde161a975a", "url": "https://github.com/apache/beam/commit/8c0490fd1f4764fe469bd86a330b6cde161a975a", "message": "Initial draft for Java worker changes", "committedDate": "2020-08-04T20:13:25Z", "type": "commit"}, {"oid": "7a823af335ccc0ea6b7d24e0118b499e13b50fd6", "url": "https://github.com/apache/beam/commit/7a823af335ccc0ea6b7d24e0118b499e13b50fd6", "message": "Resolve merge conflicts", "committedDate": "2020-08-04T20:26:14Z", "type": "commit"}, {"oid": "4af11bc0fb35ff4f6fc6c067a1bf8b69bac13d52", "url": "https://github.com/apache/beam/commit/4af11bc0fb35ff4f6fc6c067a1bf8b69bac13d52", "message": "Fix merge conflicts and format", "committedDate": "2020-08-13T18:15:59Z", "type": "commit"}, {"oid": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe", "url": "https://github.com/apache/beam/commit/73de8133f0a83ee6ff5052cc39480ea6442fa6fe", "message": "Minor fixes", "committedDate": "2020-08-13T23:23:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODM3OQ==", "url": "https://github.com/apache/beam/pull/12578#discussion_r471788379", "body": "`shardedKey`?  ", "bodyText": "shardedKey?", "bodyHTML": "<p dir=\"auto\"><code>shardedKey</code>?</p>", "author": "boyuanzz", "createdAt": "2020-08-17T21:35:55Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2167,7 +2209,7 @@ public MapTask getMapTask() {\n     }\n \n     /** Mark the given key and work as active. */\n-    public boolean activateWork(ByteString key, Work work) {\n+    public boolean activateWork(ShardedKey key, Work work) {", "originalCommit": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTM4Ng==", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389386", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-18T18:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODM3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODQ3Ng==", "url": "https://github.com/apache/beam/pull/12578#discussion_r471788476", "body": "`sharedKey`?", "bodyText": "sharedKey?", "bodyHTML": "<p dir=\"auto\"><code>sharedKey</code>?</p>", "author": "boyuanzz", "createdAt": "2020-08-17T21:36:09Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2193,7 +2235,7 @@ public boolean activateWork(ByteString key, Work work) {\n     }\n \n     /** Marks the work for a the given key as complete. Schedules queued work for the key if any. */\n-    public void completeWork(ByteString key, long workToken) {\n+    public void completeWork(ShardedKey key, long workToken) {", "originalCommit": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTM1Mw==", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389353", "bodyText": "Done", "author": "nehsyc", "createdAt": "2020-08-18T18:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc4ODQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgwNTEzMg==", "url": "https://github.com/apache/beam/pull/12578#discussion_r471805132", "body": "the cachedReader is also keyed: https://github.com/apache/beam/blob/88acc5267f759d81e9836a9db17b9e0ee521c785/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java#L338-L340\r\nShould it also be keyed by sharedKey?", "bodyText": "the cachedReader is also keyed: \n  \n    \n      beam/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java\n    \n    \n        Lines 338 to 340\n      in\n      88acc52\n    \n    \n    \n    \n\n        \n          \n           public UnboundedSource.UnboundedReader<?> getCachedReader() { \n        \n\n        \n          \n             return readerCache.acquireReader(computationId, getSerializedKey(), getWork().getCacheToken()); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nShould it also be keyed by sharedKey?", "bodyHTML": "<p dir=\"auto\">the cachedReader is also keyed: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/apache/beam/blob/88acc5267f759d81e9836a9db17b9e0ee521c785/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java#L338-L340\">beam/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 338 to 340\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/apache/beam/commit/88acc5267f759d81e9836a9db17b9e0ee521c785\">88acc52</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L338\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"338\"></td>\n          <td id=\"LC338\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">UnboundedSource</span>.<span class=\"pl-k\">UnboundedReader&lt;?&gt;</span> <span class=\"pl-en\">getCachedReader</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L339\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"339\"></td>\n          <td id=\"LC339\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> readerCache<span class=\"pl-k\">.</span>acquireReader(computationId, getSerializedKey(), getWork()<span class=\"pl-k\">.</span>getCacheToken()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L340\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"340\"></td>\n          <td id=\"LC340\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nShould it also be keyed by sharedKey?</p>", "author": "boyuanzz", "createdAt": "2020-08-17T22:17:06Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingModeExecutionContext.java", "diffHunk": "@@ -357,7 +358,7 @@ public void invalidateCache() {\n         }\n       }\n       activeReader = null;\n-      stateCache.invalidate(key);\n+      stateCache.invalidate(key, getWork().getShardingKey());", "originalCommit": "73de8133f0a83ee6ff5052cc39480ea6442fa6fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4OTMzMg==", "url": "https://github.com/apache/beam/pull/12578#discussion_r472389332", "bodyText": "Good catch! Fixed.", "author": "nehsyc", "createdAt": "2020-08-18T18:13:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgwNTEzMg=="}], "type": "inlineReview"}, {"oid": "f971b077eeea63b57f18501116952494b58e8c51", "url": "https://github.com/apache/beam/commit/f971b077eeea63b57f18501116952494b58e8c51", "message": "Fixed ReaderCache to include sharding key in the cache key. Renamed a few local variables.", "committedDate": "2020-08-18T18:10:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5Njk0Nw==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473396947", "body": "Use `@AutoValue`", "bodyText": "Use @AutoValue", "bodyHTML": "<p dir=\"auto\">Use <code>@AutoValue</code></p>", "author": "lukecwik", "createdAt": "2020-08-19T22:40:42Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -59,7 +59,41 @@\n     }\n   }\n \n-  private final Cache<KV<String, ByteString>, CacheEntry> cache;\n+  private static class CacheKey {", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMzI3NA==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474233274", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-20T19:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5Njk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODQ2MQ==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473398461", "body": "no need for `toString` since `{}` does type conversions for you already\r\n```suggestion\r\n                    LOG.info(\"Closing idle reader for {}\", notification.getKey());\r\n```", "bodyText": "no need for toString since {} does type conversions for you already\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());\n          \n          \n            \n                                LOG.info(\"Closing idle reader for {}\", notification.getKey());", "bodyHTML": "<p dir=\"auto\">no need for <code>toString</code> since <code>{}</code> does type conversions for you already</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Closing idle reader for {}<span class=\"pl-pds\">\"</span></span>, notification<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">toString()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Closing idle reader for {}<span class=\"pl-pds\">\"</span></span>, notification<span class=\"pl-k\">.</span>getKey());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-19T22:42:50Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -72,25 +106,21 @@\n         CacheBuilder.newBuilder()\n             .expireAfterWrite(cacheDuration.getMillis(), TimeUnit.MILLISECONDS)\n             .removalListener(\n-                (RemovalNotification<KV<String, ByteString>, CacheEntry> notification) -> {\n+                (RemovalNotification<CacheKey, CacheEntry> notification) -> {\n                   if (notification.getCause() != RemovalCause.EXPLICIT) {\n-                    LOG.info(\"Closing idle reader for {}\", keyToString(notification.getKey()));\n+                    LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDU5NA==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234594", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-20T19:49:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODQ2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM5ODY3Nw==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473398677", "body": "```suggestion\r\n      LOG.warn(\"Failed to close UnboundedReader for {}\", key, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.warn(\"Failed to close UnboundedReader for {}\", key.toString(), e);\n          \n          \n            \n                  LOG.warn(\"Failed to close UnboundedReader for {}\", key, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to close UnboundedReader for {}<span class=\"pl-pds\">\"</span></span>, key<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">toString()</span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to close UnboundedReader for {}<span class=\"pl-pds\">\"</span></span>, key, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-19T22:43:04Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/ReaderCache.java", "diffHunk": "@@ -72,25 +106,21 @@\n         CacheBuilder.newBuilder()\n             .expireAfterWrite(cacheDuration.getMillis(), TimeUnit.MILLISECONDS)\n             .removalListener(\n-                (RemovalNotification<KV<String, ByteString>, CacheEntry> notification) -> {\n+                (RemovalNotification<CacheKey, CacheEntry> notification) -> {\n                   if (notification.getCause() != RemovalCause.EXPLICIT) {\n-                    LOG.info(\"Closing idle reader for {}\", keyToString(notification.getKey()));\n+                    LOG.info(\"Closing idle reader for {}\", notification.getKey().toString());\n                     closeReader(notification.getKey(), notification.getValue());\n                   }\n                 })\n             .build();\n   }\n \n-  private static String keyToString(KV<String, ByteString> key) {\n-    return key.getKey() + \"-\" + key.getValue().toStringUtf8();\n-  }\n-\n   /** Close the reader and log a warning if close fails. */\n-  private void closeReader(KV<String, ByteString> key, CacheEntry entry) {\n+  private void closeReader(CacheKey key, CacheEntry entry) {\n     try {\n       entry.reader.close();\n     } catch (IOException e) {\n-      LOG.warn(\"Failed to close UnboundedReader for {}\", keyToString(key), e);\n+      LOG.warn(\"Failed to close UnboundedReader for {}\", key.toString(), e);", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjc2Ng==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473402766", "body": "```suggestion\r\n    ShardedKey key1Shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\n          \n          \n            \n                ShardedKey key1Shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">ShardedKey</span> <span class=\"x x-first x-last\">key1_shard1</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ShardedKey</span>(<span class=\"pl-smi\">ByteString</span><span class=\"pl-k\">.</span>copyFromUtf8(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key1<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">ShardedKey</span> <span class=\"x x-first x-last\">key1Shard1</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ShardedKey</span>(<span class=\"pl-smi\">ByteString</span><span class=\"pl-k\">.</span>copyFromUtf8(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key1<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">1</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-19T22:48:26Z", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDY4Mg==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234682", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-20T19:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjkwNg==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473402906", "body": "```suggestion\r\n    ShardedKey key1Shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ShardedKey key1_shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);\n          \n          \n            \n                ShardedKey key1Shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">ShardedKey</span> <span class=\"x x-first x-last\">key1_shard2</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ShardedKey</span>(<span class=\"pl-smi\">ByteString</span><span class=\"pl-k\">.</span>copyFromUtf8(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key1<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">2</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">ShardedKey</span> <span class=\"x x-first x-last\">key1Shard2</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ShardedKey</span>(<span class=\"pl-smi\">ByteString</span><span class=\"pl-k\">.</span>copyFromUtf8(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key1<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">2</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-19T22:48:36Z", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorkerTest.java", "diffHunk": "@@ -2131,8 +2215,50 @@ public void testActiveWork() throws Exception {\n     Mockito.verifyNoMoreInteractions(mockExecutor);\n   }\n \n+  @Test\n+  public void testActiveWorkForShardedKeys() throws Exception {\n+    BoundedQueueExecutor mockExecutor = Mockito.mock(BoundedQueueExecutor.class);\n+    StreamingDataflowWorker.ComputationState computationState =\n+        new StreamingDataflowWorker.ComputationState(\n+            \"computation\",\n+            defaultMapTask(Arrays.asList(makeSourceInstruction(StringUtf8Coder.of()))),\n+            mockExecutor,\n+            ImmutableMap.of(),\n+            null);\n+\n+    ShardedKey key1_shard1 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 1);\n+    ShardedKey key1_shard2 = new ShardedKey(ByteString.copyFromUtf8(\"key1\"), 2);", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDcyNw==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234727", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-20T19:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwMjkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwNDE5Mw==", "url": "https://github.com/apache/beam/pull/12578#discussion_r473404193", "body": "Use `@AutoValue`", "bodyText": "Use @AutoValue", "bodyHTML": "<p dir=\"auto\">Use <code>@AutoValue</code></p>", "author": "lukecwik", "createdAt": "2020-08-19T22:50:16Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -1095,14 +1098,46 @@ public void run() {\n             }\n           }\n         };\n-    if (!computationState.activateWork(workItem.getKey(), work)) {\n+    if (!computationState.activateWork(\n+        new ShardedKey(workItem.getKey(), workItem.getShardingKey()), work)) {\n       // Free worker if the work was not activated.\n       // This can happen if it's duplicate work or some other reason.\n       sdkHarnessRegistry.completeWork(worker);\n     }\n   }\n \n+  static class ShardedKey {", "originalCommit": "f971b077eeea63b57f18501116952494b58e8c51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDc3MQ==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474234771", "bodyText": "Done.", "author": "nehsyc", "createdAt": "2020-08-20T19:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQwNDE5Mw=="}], "type": "inlineReview"}, {"oid": "f203e9b48a44135065cce919607347c0b3fe345e", "url": "https://github.com/apache/beam/commit/f203e9b48a44135065cce919607347c0b3fe345e", "message": "Addressed comments", "committedDate": "2020-08-20T19:46:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0NDc1MA==", "url": "https://github.com/apache/beam/pull/12578#discussion_r474844750", "body": "```suggestion\r\n                  shardedKey, completedWork.getWorkItem().getWorkToken(), workToken));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              shardedKey.toString(), completedWork.getWorkItem().getWorkToken(), workToken));\n          \n          \n            \n                              shardedKey, completedWork.getWorkItem().getWorkToken(), workToken));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  shardedKey<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">toString()</span>, completedWork<span class=\"pl-k\">.</span>getWorkItem()<span class=\"pl-k\">.</span>getWorkToken(), workToken));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  shardedKey, completedWork<span class=\"pl-k\">.</span>getWorkItem()<span class=\"pl-k\">.</span>getWorkToken(), workToken));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-21T17:55:59Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "diffHunk": "@@ -2205,20 +2238,18 @@ public void completeWork(ByteString key, long workToken) {\n           throw new NullPointerException(\n               String.format(\n                   \"No active state for key %s, expected token %s\",\n-                  TextFormat.escapeBytes(key), workToken));\n+                  shardedKey.toString(), workToken));\n         }\n         if (completedWork.getWorkItem().getWorkToken() != workToken) {\n           throw new IllegalStateException(\n               String.format(\n                   \"Token mismatch for key %s: %s and %s\",\n-                  TextFormat.escapeBytes(key),\n-                  completedWork.getWorkItem().getWorkToken(),\n-                  workToken));\n+                  shardedKey.toString(), completedWork.getWorkItem().getWorkToken(), workToken));", "originalCommit": "f203e9b48a44135065cce919607347c0b3fe345e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b0a53b777882b872bfafda8d52a8d5574ddcfd68", "url": "https://github.com/apache/beam/commit/b0a53b777882b872bfafda8d52a8d5574ddcfd68", "message": "Update runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/StreamingDataflowWorker.java", "committedDate": "2020-08-21T17:56:49Z", "type": "commit"}, {"oid": "43456607cc77b81721a9b398c7d44e199e579d9f", "url": "https://github.com/apache/beam/commit/43456607cc77b81721a9b398c7d44e199e579d9f", "message": "Update StreamingDataflowWorker.java", "committedDate": "2020-08-21T19:41:53Z", "type": "commit"}, {"oid": "20ea6e4e244627d421b9a9be653f2cca72c37995", "url": "https://github.com/apache/beam/commit/20ea6e4e244627d421b9a9be653f2cca72c37995", "message": "Run spotlessApply", "committedDate": "2020-08-21T19:50:19Z", "type": "commit"}]}