{"pr_number": 12367, "pr_title": "[BEAM-10564] Support more Avro field name formats when mapping to Java fields", "pr_author": "rworley-monster", "pr_createdAt": "2020-07-24T13:09:00Z", "pr_url": "https://github.com/apache/beam/pull/12367", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDE3Mg==", "url": "https://github.com/apache/beam/pull/12367#discussion_r465884172", "body": "```suggestion\r\n            getter = CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, fieldName.replace(\"_\", \"\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        getter = CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_CAMEL, fieldName.replace(\"_\", \"\"));\n          \n          \n            \n                        getter = CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, fieldName.replace(\"_\", \"\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"613\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            getter <span class=\"pl-k\">=</span> <span class=\"pl-smi\">CaseFormat</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">UPPER_CAMEL</span></span><span class=\"pl-k\">.</span>to(<span class=\"pl-smi\">CaseFormat</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LOWER_CAMEL</span>, fieldName<span class=\"pl-k\">.</span>replace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"613\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            getter <span class=\"pl-k\">=</span> <span class=\"pl-smi\">CaseFormat</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">UPPER_UNDERSCORE</span></span><span class=\"pl-k\">.</span>to(<span class=\"pl-smi\">CaseFormat</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LOWER_CAMEL</span>, fieldName<span class=\"pl-k\">.</span>replace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-08-05T17:21:15Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java", "diffHunk": "@@ -601,12 +601,26 @@ private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundE\n     private Map<String, String> getMapping(Schema schema) {\n       Map<String, String> mapping = Maps.newHashMap();\n       for (Field field : schema.getFields()) {\n-        String underscore = CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, field.getName());\n-        mapping.put(underscore, field.getName());\n+        String fieldName = field.getName();\n+        String getter;\n+        if (fieldName.contains(\"_\")) {\n+          if (Character.isLowerCase(fieldName.charAt(0))) {\n+            // field_name -> fieldName\n+            getter = CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, fieldName);\n+          } else {\n+            // FIELD_NAME -> fIELDNAME\n+            getter = CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_CAMEL, fieldName.replace(\"_\", \"\"));", "originalCommit": "09041ce7f45bc9fb666a433412873b5515463676", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1NjgwMA==", "url": "https://github.com/apache/beam/pull/12367#discussion_r472156800", "bodyText": "When Avro compiles a schema to a Java class, it will take a field named FIELD_NAME and create a getter named getFIELDNAME.  So this method needs to produce getter field name fIELDNAME.\nAfter some trial and error, I found I could produce this if I remove the underscore and convert it from UPPER_CAMEL.  When I use UPPER_UNDERSCORE (with or without the underscore in the field name), it produces a getter field name of fieldName or fieldname, which won't map to the getFIELDNAME method.", "author": "rworley-monster", "createdAt": "2020-08-18T12:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5NDAxNA==", "url": "https://github.com/apache/beam/pull/12367#discussion_r474994014", "bodyText": "Ok, please update the comment to reflect that and add some tests to prevent a regression.", "author": "lukecwik", "createdAt": "2020-08-21T22:21:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIwMDg1MQ==", "url": "https://github.com/apache/beam/pull/12367#discussion_r481200851", "bodyText": "Sure, I will add tests for all of the cases as soon as I have time.  Hopefully within one or two weeks.", "author": "rworley-monster", "createdAt": "2020-09-01T14:55:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxOTgwNg==", "url": "https://github.com/apache/beam/pull/12367#discussion_r487819806", "bodyText": "I have added an extended comment for this conversion and updated the existing test Avro schema to cover the new mappable field name styles.  Can you please confirm that this is acceptable?", "author": "rworley-monster", "createdAt": "2020-09-14T10:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NDE3Mg=="}], "type": "inlineReview"}, {"oid": "c2a32fc4dead3bbaa1148081a95022de2615835e", "url": "https://github.com/apache/beam/commit/c2a32fc4dead3bbaa1148081a95022de2615835e", "message": "[BEAM-10564] Support more Avro field name formats when mapping to Java fields", "committedDate": "2020-08-18T12:22:32Z", "type": "commit"}, {"oid": "55b22ce15ad434ae7244cd6edb8821309c02ff70", "url": "https://github.com/apache/beam/commit/55b22ce15ad434ae7244cd6edb8821309c02ff70", "message": "Merge branch 'master' of https://github.com/apache/beam into avro-field-name-mappings", "committedDate": "2020-09-14T08:23:08Z", "type": "commit"}, {"oid": "532b00f33b84633aa6df3f5e3cced9c8ae914112", "url": "https://github.com/apache/beam/commit/532b00f33b84633aa6df3f5e3cced9c8ae914112", "message": "Test new mappable field names", "committedDate": "2020-09-14T10:25:36Z", "type": "commit"}]}