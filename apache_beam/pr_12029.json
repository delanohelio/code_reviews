{"pr_number": 12029, "pr_title": "[BEAM-10153] Fix VoidCoder with FnApiDoFnRunner", "pr_author": "y1chi", "pr_createdAt": "2020-06-18T04:20:48Z", "pr_url": "https://github.com/apache/beam/pull/12029", "timeline": [{"oid": "3b67e9eb60286009b3298a53942c55853b979a79", "url": "https://github.com/apache/beam/commit/3b67e9eb60286009b3298a53942c55853b979a79", "message": "[BEAM-10153] Fix VoidCoder with FnApiDoFnRunner", "committedDate": "2020-06-18T04:15:51Z", "type": "commit"}, {"oid": "9a86810434c09c4f79296c03874f03092d325776", "url": "https://github.com/apache/beam/commit/9a86810434c09c4f79296c03874f03092d325776", "message": "Add @Nullable to Timer getUserKey()", "committedDate": "2020-06-18T04:25:57Z", "type": "commit"}, {"oid": "e96646e04350b537df0e90941bd75b717e810875", "url": "https://github.com/apache/beam/commit/e96646e04350b537df0e90941bd75b717e810875", "message": "revert VoidCoder changes", "committedDate": "2020-06-18T04:53:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw==", "url": "https://github.com/apache/beam/pull/12029#discussion_r442337367", "body": "This will require calling the function everytime when it is null.\r\nYou should use a boolean and update the check to be something like: `(currentArg != memoizedArg || !initialized)`.", "bodyText": "This will require calling the function everytime when it is null.\nYou should use a boolean and update the check to be something like: (currentArg != memoizedArg || !initialized).", "bodyHTML": "<p dir=\"auto\">This will require calling the function everytime when it is null.<br>\nYou should use a boolean and update the check to be something like: <code>(currentArg != memoizedArg || !initialized)</code>.</p>", "author": "lukecwik", "createdAt": "2020-06-18T16:03:31Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -128,7 +128,7 @@ public FnApiStateAccessor(\n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || currentArg == null) {", "originalCommit": "e96646e04350b537df0e90941bd75b717e810875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzOTk0OA==", "url": "https://github.com/apache/beam/pull/12029#discussion_r442339948", "bodyText": "For VoidCoder the arg.get() returns null, which means the currentArg != memoizedArg will evaluate to false.\nThis leaves the memoizedResult to null(underneath function never applied), and for VoidCoder key coder we need to set the key to ByteString.EMPTY instead of null(generated proto class doesn't allow setting to null) I believe.", "author": "y1chi", "createdAt": "2020-06-18T16:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MjY4OA==", "url": "https://github.com/apache/beam/pull/12029#discussion_r442342688", "bodyText": "I realized this and updated my comment just after posting to use a boolean.", "author": "lukecwik", "createdAt": "2020-06-18T16:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzNzM2Nw=="}], "type": "inlineReview"}, {"oid": "d4f17617e6cb17f014bb7a16bc831813b670ed15", "url": "https://github.com/apache/beam/commit/d4f17617e6cb17f014bb7a16bc831813b670ed15", "message": "Add initialized flag", "committedDate": "2020-06-18T16:38:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MzI3Mg==", "url": "https://github.com/apache/beam/pull/12029#discussion_r442363272", "body": "The initialized will become true and will stay true so checking `currentArg == null` won't do anything.\r\n```suggestion\r\n        if (currentArg != memoizedArg || !initialized) {\r\n```", "bodyText": "The initialized will become true and will stay true so checking currentArg == null won't do anything.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (currentArg != memoizedArg || (currentArg == null && !initialized)) {\n          \n          \n            \n                    if (currentArg != memoizedArg || !initialized) {", "bodyHTML": "<p dir=\"auto\">The initialized will become true and will stay true so checking <code>currentArg == null</code> won't do anything.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (currentArg <span class=\"pl-k\">!=</span> memoizedArg <span class=\"pl-k\">||</span> <span class=\"x x-first\">(currentArg </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span><span class=\"pl-k\">!</span>initialized<span class=\"x x-first x-last\">)</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (currentArg <span class=\"pl-k\">!=</span> memoizedArg <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>initialized) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lukecwik", "createdAt": "2020-06-18T16:44:22Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java", "diffHunk": "@@ -124,12 +124,14 @@ public FnApiStateAccessor(\n     return new Supplier<ResultT>() {\n       private ArgT memoizedArg;\n       private ResultT memoizedResult;\n+      private boolean initialized;\n \n       @Override\n       public ResultT get() {\n         ArgT currentArg = arg.get();\n-        if (currentArg != memoizedArg) {\n+        if (currentArg != memoizedArg || (currentArg == null && !initialized)) {", "originalCommit": "d4f17617e6cb17f014bb7a16bc831813b670ed15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b4de32148edb81ffee9f5493fd8f6e44ff23a32c", "url": "https://github.com/apache/beam/commit/b4de32148edb81ffee9f5493fd8f6e44ff23a32c", "message": "Update sdks/java/harness/src/main/java/org/apache/beam/fn/harness/state/FnApiStateAccessor.java\n\nCo-authored-by: Lukasz Cwik <lcwik@google.com>", "committedDate": "2020-06-18T16:48:08Z", "type": "commit"}]}