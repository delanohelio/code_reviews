{"pr_number": 12400, "pr_title": "[BEAM-10595] Remove rules that not work well with Java UDF", "pr_author": "amaliujia", "pr_createdAt": "2020-07-28T23:05:12Z", "pr_url": "https://github.com/apache/beam/pull/12400", "timeline": [{"oid": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "url": "https://github.com/apache/beam/commit/6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "message": "[BEAM-10595] Remove rules that not work well with Java UDF.", "committedDate": "2020-07-28T23:04:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTEzOQ==", "url": "https://github.com/apache/beam/pull/12400#discussion_r461959139", "body": "Nit: spelling/grammar\r\n\r\n```suggestion\r\n          // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not add\r\n```", "bodyText": "Nit: spelling/grammar\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add\n          \n          \n            \n                      // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not add", "bodyHTML": "<p dir=\"auto\">Nit: spelling/grammar</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-c\"><span class=\"pl-c\">//</span> to <span class=\"x x-first x-last\">a </span>Calc before merging with other <span class=\"x x-first x-last\">Projec</span>/Filter/Calc. Thus we should not add</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-c\"><span class=\"pl-c\">//</span> to Calc <span class=\"x x-first x-last\">nodes </span>before merging with other <span class=\"x x-first x-last\">Project</span>/Filter/Calc<span class=\"x x-first x-last\"> nodes</span>. Thus we should not add</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ibzib", "createdAt": "2020-07-28T23:55:00Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,13 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add", "originalCommit": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2NjkwOA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462466908", "bodyText": "Done.", "author": "amaliujia", "createdAt": "2020-07-29T17:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1NTg4NA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462455884", "body": "It'd be helpful to specifically mention `CalcMergeRule` here.", "bodyText": "It'd be helpful to specifically mention CalcMergeRule here.", "bodyHTML": "<p dir=\"auto\">It'd be helpful to specifically mention <code>CalcMergeRule</code> here.</p>", "author": "ibzib", "createdAt": "2020-07-29T17:11:23Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,13 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add", "originalCommit": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2NjgxOA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462466818", "bodyText": "Tried to add something about CalcMergeRule", "author": "amaliujia", "createdAt": "2020-07-29T17:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1NTg4NA=="}], "type": "inlineReview"}, {"oid": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "url": "https://github.com/apache/beam/commit/ebcf25bd0d6dd9698353656528e176ae7029f3ae", "message": "fixup! address comments.", "committedDate": "2020-07-29T17:28:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4Njc0MQ==", "url": "https://github.com/apache/beam/pull/12400#discussion_r465286741", "body": "Shouldn't we just disable these rules all together (in `BeamRuleSets.java`) if they are redundant instead of special casing them for ZetaSQL?", "bodyText": "Shouldn't we just disable these rules all together (in BeamRuleSets.java) if they are redundant instead of special casing them for ZetaSQL?", "bodyHTML": "<p dir=\"auto\">Shouldn't we just disable these rules all together (in <code>BeamRuleSets.java</code>) if they are redundant instead of special casing them for ZetaSQL?</p>", "author": "apilloud", "createdAt": "2020-08-04T19:40:04Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,14 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not\n+          // add FilterCalcMergeRule and ProjectCalcMergeRule. CalcMergeRule will achieve equivalent\n+          // planning result eventually.", "originalCommit": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}