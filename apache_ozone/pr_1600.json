{"pr_number": 1600, "pr_title": "HDDS-4475.Extend DatanodeChunkGenerator to write all on all pipelines\u2026", "pr_author": "sadanand48", "pr_createdAt": "2020-11-18T14:46:45Z", "pr_url": "https://github.com/apache/ozone/pull/1600", "timeline": [{"oid": "603e3e8e50cd15b8489c3077ecfbad2ebd4244ef", "url": "https://github.com/apache/ozone/commit/603e3e8e50cd15b8489c3077ecfbad2ebd4244ef", "message": "HDDS-4475.Extend DatanodeChunkGenerator to write all on all pipelines of a set of dns", "committedDate": "2020-11-18T14:43:54Z", "type": "commit"}, {"oid": "e8224b05dea7e8f53ece0bbd03275c241d155ebe", "url": "https://github.com/apache/ozone/commit/e8224b05dea7e8f53ece0bbd03275c241d155ebe", "message": "Addressed review comments. added datanodes argument", "committedDate": "2020-11-30T14:02:28Z", "type": "commit"}, {"oid": "8b0870365d8a1fa02ba4adb8abaf05a1d50d80b2", "url": "https://github.com/apache/ozone/commit/8b0870365d8a1fa02ba4adb8abaf05a1d50d80b2", "message": "addressed comments", "committedDate": "2020-12-23T21:04:07Z", "type": "commit"}, {"oid": "9e084ee6c4e1bf32a0ff03a4fb18ffcbd2b3eabf", "url": "https://github.com/apache/ozone/commit/9e084ee6c4e1bf32a0ff03a4fb18ffcbd2b3eabf", "message": "addressed comments", "committedDate": "2021-01-07T12:55:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzNzQxNg==", "url": "https://github.com/apache/ozone/pull/1600#discussion_r555137416", "body": "```suggestion\r\n              \"Couldn't find the any/the selected pipeline\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          \"Coudln't find the any/the selected pipeline\");\n          \n          \n            \n                          \"Couldn't find the any/the selected pipeline\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Coudln</span>'t find the any/the selected pipeline<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Couldn</span>'t find the any/the selected pipeline<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "elek", "createdAt": "2021-01-11T15:43:20Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/DatanodeChunkGenerator.java", "diffHunk": "@@ -75,70 +82,120 @@\n       description = \"Pipeline to use. By default the first RATIS/THREE \"\n           + \"pipeline will be used.\",\n       defaultValue = \"\")\n-  private String pipelineId;\n+  private String pipelineIds;\n \n-  private XceiverClientSpi xceiverClientSpi;\n+  @Option(names = {\"-d\", \"--datanodes\"},\n+      description = \"Datanodes to use. \",\n+      defaultValue = \"\")\n+  private String datanodes;\n+\n+  private XceiverClientManager xceiverClientManager;\n+  private List<XceiverClientSpi> xceiverClients;\n \n   private Timer timer;\n \n   private ByteString dataToWrite;\n   private ChecksumData checksumProtobuf;\n \n+\n   @Override\n   public Void call() throws Exception {\n \n-    init();\n \n     OzoneConfiguration ozoneConf = createOzoneConfiguration();\n+    xceiverClientManager =\n+        new XceiverClientManager(ozoneConf);\n     if (OzoneSecurityUtil.isSecurityEnabled(ozoneConf)) {\n       throw new IllegalArgumentException(\n           \"Datanode chunk generator is not supported in secure environment\");\n     }\n \n-    try (StorageContainerLocationProtocol scmLocationClient =\n-        createStorageContainerLocationClient(ozoneConf)) {\n-      List<Pipeline> pipelines = scmLocationClient.listPipelines();\n-      Pipeline pipeline;\n-      if (pipelineId != null && pipelineId.length() > 0) {\n-        pipeline = pipelines.stream()\n-            .filter(p -> p.getId().toString().equals(pipelineId))\n-            .findFirst()\n-            .orElseThrow(() -> new IllegalArgumentException(\n-                \"Pipeline ID is defined, but there is no such pipeline: \"\n-                    + pipelineId));\n+    List<String> pipelinesFromCmd = Arrays.asList(pipelineIds.split(\",\"));\n \n+    List<String> datanodeHosts = Arrays.asList(this.datanodes.split(\",\"));\n+\n+    Set<Pipeline> pipelines;\n+\n+    try (StorageContainerLocationProtocol scmLocationClient =\n+               createStorageContainerLocationClient(ozoneConf)) {\n+      List<Pipeline> pipelinesFromSCM = scmLocationClient.listPipelines();\n+      Pipeline firstPipeline;\n+      init();\n+      if (!arePipelinesOrDatanodesProvided()) {\n+        //default behaviour if no arguments provided\n+        firstPipeline = pipelinesFromSCM.stream()\n+              .filter(p -> p.getFactor() == ReplicationFactor.THREE)\n+              .findFirst()\n+              .orElseThrow(() -> new IllegalArgumentException(\n+                  \"Pipeline ID is NOT defined, and no pipeline \" +\n+                      \"has been found with factor=THREE\"));\n+        XceiverClientSpi xceiverClientSpi = xceiverClientManager\n+            .acquireClient(firstPipeline);\n+        xceiverClients = new ArrayList<>();\n+        xceiverClients.add(xceiverClientSpi);\n+        LOG.info(\"Using pipeline {}\", firstPipeline.getId());\n+        runTest();\n       } else {\n-        pipeline = pipelines.stream()\n-            .filter(p -> p.getFactor() == ReplicationFactor.THREE)\n-            .findFirst()\n-            .orElseThrow(() -> new IllegalArgumentException(\n-                \"Pipeline ID is NOT defined, and no pipeline \" +\n-                    \"has been found with factor=THREE\"));\n-        LOG.info(\"Using pipeline {}\", pipeline.getId());\n+        xceiverClients = new ArrayList<>();\n+        pipelines = new HashSet<>();\n+        for(String pipelineId:pipelinesFromCmd){\n+          List<Pipeline> selectedPipelines =  pipelinesFromSCM.stream()\n+              .filter((p -> p.getId().toString()\n+                  .equals(\"PipelineID=\" + pipelineId)\n+                  || pipelineContainsDatanode(p, datanodeHosts)))\n+               .collect(Collectors.toList());\n+          pipelines.addAll(selectedPipelines);\n+        }\n+        for (Pipeline p:pipelines){\n+          LOG.info(\"Writing to pipeline: \" + p.getId());\n+          xceiverClients.add(xceiverClientManager.acquireClient(p));\n+        }\n+        if (pipelines.isEmpty()){\n+          throw new IllegalArgumentException(\n+              \"Coudln't find the any/the selected pipeline\");", "originalCommit": "9e084ee6c4e1bf32a0ff03a4fb18ffcbd2b3eabf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzODAxMA==", "url": "https://github.com/apache/ozone/pull/1600#discussion_r555138010", "body": "```suggestion\r\n```\r\n\r\nYou don't need this line as you log the same information in the loop bellow.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.info(\"Using pipeline {}\", firstPipeline.getId());\n          \n      \n    \n    \n  \n\nYou don't need this line as you log the same information in the loop bellow.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        </span><span class=\"pl-c1 x\">LOG</span><span class=\"pl-k x\">.</span><span class=\"x\">info(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Using pipeline {}</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, firstPipeline</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getId());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">You don't need this line as you log the same information in the loop bellow.</p>", "author": "elek", "createdAt": "2021-01-11T15:44:07Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/DatanodeChunkGenerator.java", "diffHunk": "@@ -75,70 +82,120 @@\n       description = \"Pipeline to use. By default the first RATIS/THREE \"\n           + \"pipeline will be used.\",\n       defaultValue = \"\")\n-  private String pipelineId;\n+  private String pipelineIds;\n \n-  private XceiverClientSpi xceiverClientSpi;\n+  @Option(names = {\"-d\", \"--datanodes\"},\n+      description = \"Datanodes to use. \",\n+      defaultValue = \"\")\n+  private String datanodes;\n+\n+  private XceiverClientManager xceiverClientManager;\n+  private List<XceiverClientSpi> xceiverClients;\n \n   private Timer timer;\n \n   private ByteString dataToWrite;\n   private ChecksumData checksumProtobuf;\n \n+\n   @Override\n   public Void call() throws Exception {\n \n-    init();\n \n     OzoneConfiguration ozoneConf = createOzoneConfiguration();\n+    xceiverClientManager =\n+        new XceiverClientManager(ozoneConf);\n     if (OzoneSecurityUtil.isSecurityEnabled(ozoneConf)) {\n       throw new IllegalArgumentException(\n           \"Datanode chunk generator is not supported in secure environment\");\n     }\n \n-    try (StorageContainerLocationProtocol scmLocationClient =\n-        createStorageContainerLocationClient(ozoneConf)) {\n-      List<Pipeline> pipelines = scmLocationClient.listPipelines();\n-      Pipeline pipeline;\n-      if (pipelineId != null && pipelineId.length() > 0) {\n-        pipeline = pipelines.stream()\n-            .filter(p -> p.getId().toString().equals(pipelineId))\n-            .findFirst()\n-            .orElseThrow(() -> new IllegalArgumentException(\n-                \"Pipeline ID is defined, but there is no such pipeline: \"\n-                    + pipelineId));\n+    List<String> pipelinesFromCmd = Arrays.asList(pipelineIds.split(\",\"));\n \n+    List<String> datanodeHosts = Arrays.asList(this.datanodes.split(\",\"));\n+\n+    Set<Pipeline> pipelines;\n+\n+    try (StorageContainerLocationProtocol scmLocationClient =\n+               createStorageContainerLocationClient(ozoneConf)) {\n+      List<Pipeline> pipelinesFromSCM = scmLocationClient.listPipelines();\n+      Pipeline firstPipeline;\n+      init();\n+      if (!arePipelinesOrDatanodesProvided()) {\n+        //default behaviour if no arguments provided\n+        firstPipeline = pipelinesFromSCM.stream()\n+              .filter(p -> p.getFactor() == ReplicationFactor.THREE)\n+              .findFirst()\n+              .orElseThrow(() -> new IllegalArgumentException(\n+                  \"Pipeline ID is NOT defined, and no pipeline \" +\n+                      \"has been found with factor=THREE\"));\n+        XceiverClientSpi xceiverClientSpi = xceiverClientManager\n+            .acquireClient(firstPipeline);\n+        xceiverClients = new ArrayList<>();\n+        xceiverClients.add(xceiverClientSpi);\n+        LOG.info(\"Using pipeline {}\", firstPipeline.getId());", "originalCommit": "9e084ee6c4e1bf32a0ff03a4fb18ffcbd2b3eabf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTEzOTc3NQ==", "url": "https://github.com/apache/ozone/pull/1600#discussion_r555139775", "body": "```suggestion\r\n      description = \"Datanodes to use. Test will write to all the existing pipelines which this datanode is member of.\",\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  description = \"Datanodes to use. \",\n          \n          \n            \n                  description = \"Datanodes to use. Test will write to all the existing pipelines which this datanode is member of.\",", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      description <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Datanodes to use. <span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      description <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Datanodes to use. <span class=\"x x-first x-last\">Test will write to all the existing pipelines which this datanode is member of.</span><span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "elek", "createdAt": "2021-01-11T15:46:29Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/freon/DatanodeChunkGenerator.java", "diffHunk": "@@ -75,70 +82,120 @@\n       description = \"Pipeline to use. By default the first RATIS/THREE \"\n           + \"pipeline will be used.\",\n       defaultValue = \"\")\n-  private String pipelineId;\n+  private String pipelineIds;\n \n-  private XceiverClientSpi xceiverClientSpi;\n+  @Option(names = {\"-d\", \"--datanodes\"},\n+      description = \"Datanodes to use. \",", "originalCommit": "9e084ee6c4e1bf32a0ff03a4fb18ffcbd2b3eabf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8a0d7970269d8300f86f11ee9dd318411b1482e5", "url": "https://github.com/apache/ozone/commit/8a0d7970269d8300f86f11ee9dd318411b1482e5", "message": "fixed typos & addressed comment", "committedDate": "2021-01-12T04:58:42Z", "type": "commit"}]}