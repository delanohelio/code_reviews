{"pr_number": 886, "pr_title": "HDDS-3473. Ozone chunkinfo CLI should display block file path info", "pr_author": "sadanand48", "pr_createdAt": "2020-04-30T07:57:30Z", "pr_url": "https://github.com/apache/ozone/pull/886", "timeline": [{"oid": "8eeb17470661372bc0a26305041735ba9626590a", "url": "https://github.com/apache/ozone/commit/8eeb17470661372bc0a26305041735ba9626590a", "message": "HDDS-3473.ozone chunkinfo CLI should display block file path info", "committedDate": "2020-04-30T07:53:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgyNzUwOA==", "url": "https://github.com/apache/ozone/pull/886#discussion_r417827508", "body": "lets convert this if into a switch case, in case new CHunkLayoutVersions are added later, there should be an option of adding it later. Also for default case lets throw an exception.", "bodyText": "lets convert this if into a switch case, in case new CHunkLayoutVersions are added later, there should be an option of adding it later. Also for default case lets throw an exception.", "bodyHTML": "<p dir=\"auto\">lets convert this if into a switch case, in case new CHunkLayoutVersions are added later, there should be an option of adding it later. Also for default case lets throw an exception.</p>", "author": "mukul1987", "createdAt": "2020-04-30T08:01:39Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "diffHunk": "@@ -128,17 +131,23 @@ protected void execute(OzoneClient client, OzoneAddress address)\n         chunkDetails.setChunkName(chunkInfo.getChunkName());\n         chunkDetails.setChunkOffset(chunkInfo.getOffset());\n         chunkDetailsList.add(chunkDetails);\n-        chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n-              + File.separator\n-              + chunkInfo.getChunkName());\n+        if (chunkLayOutVersion == ChunkLayOutVersion.FILE_PER_CHUNK) {\n+          chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName());\n+        } else {", "originalCommit": "8eeb17470661372bc0a26305041735ba9626590a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9946fb165af8c4615fe70a03c9d279e9251cc42f", "url": "https://github.com/apache/ozone/commit/9946fb165af8c4615fe70a03c9d279e9251cc42f", "message": "addressed review comments", "committedDate": "2020-04-30T17:44:31Z", "type": "commit"}, {"oid": "cdd21677fef1fe606eca885a58a32e15dad0f472", "url": "https://github.com/apache/ozone/commit/cdd21677fef1fe606eca885a58a32e15dad0f472", "message": "fix checkstyle", "committedDate": "2020-05-04T10:23:21Z", "type": "commit"}, {"oid": "5648c467e864671543fbe43b5a5a774eeda4490e", "url": "https://github.com/apache/ozone/commit/5648c467e864671543fbe43b5a5a774eeda4490e", "message": "fix checkstyle", "committedDate": "2020-05-04T10:31:27Z", "type": "commit"}, {"oid": "14e7103a3286df0b5d75f705eebffb024de479d3", "url": "https://github.com/apache/ozone/commit/14e7103a3286df0b5d75f705eebffb024de479d3", "message": "fix smoketest", "committedDate": "2020-05-04T12:03:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MDA0NQ==", "url": "https://github.com/apache/ozone/pull/886#discussion_r419880045", "body": "I think we should move the code to give the chunk file path given the containerID/ContainerData into some common utilities class and use it across client/server so that any further changes won't break it..", "bodyText": "I think we should move the code to give the chunk file path given the containerID/ContainerData into some common utilities class and use it across client/server so that any further changes won't break it..", "bodyHTML": "<p dir=\"auto\">I think we should move the code to give the chunk file path given the containerID/ContainerData into some common utilities class and use it across client/server so that any further changes won't break it..</p>", "author": "bshashikant", "createdAt": "2020-05-05T06:02:11Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkKeyHandler.java", "diffHunk": "@@ -128,17 +132,31 @@ protected void execute(OzoneClient client, OzoneAddress address)\n         chunkDetails.setChunkName(chunkInfo.getChunkName());\n         chunkDetails.setChunkOffset(chunkInfo.getOffset());\n         chunkDetailsList.add(chunkDetails);\n-        chunkPaths.add(getChunkLocationPath(containerData.getContainerPath())\n-              + File.separator\n-              + chunkInfo.getChunkName());\n+        switch (chunkLayOutVersion) {\n+        case FILE_PER_CHUNK:\n+          chunkPaths.add(getChunkLocationPath(containerData\n+                  .getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName());\n+          break;\n+        case FILE_PER_BLOCK:\n+          chunkPaths.add(getChunkLocationPath(containerData\n+                  .getContainerPath())\n+                  + File.separator\n+                  + keyLocation.getLocalID() + \".block\");\n+          break;\n+        default:\n+          throw new StorageContainerException(\"chunk strategy does not exist\",\n+                  ContainerProtos.Result.UNABLE_TO_FIND_CHUNK);\n+        }", "originalCommit": "14e7103a3286df0b5d75f705eebffb024de479d3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7b9c097cdc240ea63d35cb2964945d26970ac4d6", "url": "https://github.com/apache/ozone/commit/7b9c097cdc240ea63d35cb2964945d26970ac4d6", "message": "addressed review comments", "committedDate": "2020-05-05T07:07:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTI3MA==", "url": "https://github.com/apache/ozone/pull/886#discussion_r419915270", "body": "I'd prefer taking chunk file path directly from `ChunkLayOutVersion.getChunkFile()` instead of the `switch`.  This way if a new enum constant is introduced, this code will work without any changes.\r\n\r\nThis needs a minor refactoring in `ChunkLayOutVersion`, which accepts a `ContainerData` object, to work directly with the chunk dir:\r\n\r\n```diff\r\n--- hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\r\n+++ hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\r\n@@ -40,17 +40,15 @@\r\n\r\n   FILE_PER_CHUNK(1, \"One file per chunk\") {\r\n     @Override\r\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\r\n-        ChunkInfo info) throws StorageContainerException {\r\n-      File chunksLoc = verifyChunkDirExists(containerData);\r\n-      return chunksLoc.toPath().resolve(info.getChunkName()).toFile();\r\n+    public File getChunkFile(File chunkDir, BlockID blockID,\r\n+        ChunkInfo info) {\r\n+      return chunkDir.toPath().resolve(info.getChunkName()).toFile();\r\n     }\r\n   },\r\n   FILE_PER_BLOCK(2, \"One file per block\") {\r\n     @Override\r\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\r\n-        ChunkInfo info) throws StorageContainerException {\r\n-      File chunkDir = verifyChunkDirExists(containerData);\r\n+    public File getChunkFile(File chunkDir, BlockID blockID,\r\n+        ChunkInfo info) {\r\n       return new File(chunkDir, blockID.getLocalID() + \".block\");\r\n     }\r\n   };\r\n@@ -118,8 +116,14 @@ public String getDescription() {\r\n     return description;\r\n   }\r\n\r\n-  public abstract File getChunkFile(ContainerData containerData,\r\n-      BlockID blockID, ChunkInfo info) throws StorageContainerException;\r\n+  public abstract File getChunkFile(File chunksDir,\r\n+      BlockID blockID, ChunkInfo info);\r\n+\r\n+  public File getChunkFile(ContainerData containerData,\r\n+      BlockID blockID, ChunkInfo info) throws StorageContainerException {\r\n+    File chunksLoc = verifyChunkDirExists(containerData);\r\n+    return getChunkFile(chunksLoc, blockID, info);\r\n+  }\r\n\r\n   @Override\r\n   public String toString() {\r\n```", "bodyText": "I'd prefer taking chunk file path directly from ChunkLayOutVersion.getChunkFile() instead of the switch.  This way if a new enum constant is introduced, this code will work without any changes.\nThis needs a minor refactoring in ChunkLayOutVersion, which accepts a ContainerData object, to work directly with the chunk dir:\n--- hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n+++ hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n@@ -40,17 +40,15 @@\n\n   FILE_PER_CHUNK(1, \"One file per chunk\") {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunksLoc = verifyChunkDirExists(containerData);\n-      return chunksLoc.toPath().resolve(info.getChunkName()).toFile();\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n+      return chunkDir.toPath().resolve(info.getChunkName()).toFile();\n     }\n   },\n   FILE_PER_BLOCK(2, \"One file per block\") {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunkDir = verifyChunkDirExists(containerData);\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n       return new File(chunkDir, blockID.getLocalID() + \".block\");\n     }\n   };\n@@ -118,8 +116,14 @@ public String getDescription() {\n     return description;\n   }\n\n-  public abstract File getChunkFile(ContainerData containerData,\n-      BlockID blockID, ChunkInfo info) throws StorageContainerException;\n+  public abstract File getChunkFile(File chunksDir,\n+      BlockID blockID, ChunkInfo info);\n+\n+  public File getChunkFile(ContainerData containerData,\n+      BlockID blockID, ChunkInfo info) throws StorageContainerException {\n+    File chunksLoc = verifyChunkDirExists(containerData);\n+    return getChunkFile(chunksLoc, blockID, info);\n+  }\n\n   @Override\n   public String toString() {", "bodyHTML": "<p dir=\"auto\">I'd prefer taking chunk file path directly from <code>ChunkLayOutVersion.getChunkFile()</code> instead of the <code>switch</code>.  This way if a new enum constant is introduced, this code will work without any changes.</p>\n<p dir=\"auto\">This needs a minor refactoring in <code>ChunkLayOutVersion</code>, which accepts a <code>ContainerData</code> object, to work directly with the chunk dir:</p>\n<div class=\"highlight highlight-source-diff position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"--- hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n+++ hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java\n@@ -40,17 +40,15 @@\n\n   FILE_PER_CHUNK(1, &quot;One file per chunk&quot;) {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunksLoc = verifyChunkDirExists(containerData);\n-      return chunksLoc.toPath().resolve(info.getChunkName()).toFile();\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n+      return chunkDir.toPath().resolve(info.getChunkName()).toFile();\n     }\n   },\n   FILE_PER_BLOCK(2, &quot;One file per block&quot;) {\n     @Override\n-    public File getChunkFile(ContainerData containerData, BlockID blockID,\n-        ChunkInfo info) throws StorageContainerException {\n-      File chunkDir = verifyChunkDirExists(containerData);\n+    public File getChunkFile(File chunkDir, BlockID blockID,\n+        ChunkInfo info) {\n       return new File(chunkDir, blockID.getLocalID() + &quot;.block&quot;);\n     }\n   };\n@@ -118,8 +116,14 @@ public String getDescription() {\n     return description;\n   }\n\n-  public abstract File getChunkFile(ContainerData containerData,\n-      BlockID blockID, ChunkInfo info) throws StorageContainerException;\n+  public abstract File getChunkFile(File chunksDir,\n+      BlockID blockID, ChunkInfo info);\n+\n+  public File getChunkFile(ContainerData containerData,\n+      BlockID blockID, ChunkInfo info) throws StorageContainerException {\n+    File chunksLoc = verifyChunkDirExists(containerData);\n+    return getChunkFile(chunksLoc, blockID, info);\n+  }\n\n   @Override\n   public String toString() {\n\"><pre><span class=\"pl-md\">--- hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java</span>\n<span class=\"pl-mi1\">+++ hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/common/impl/ChunkLayOutVersion.java</span>\n<span class=\"pl-mdr\">@@ -40,17 +40,15 @@</span>\n\n   FILE_PER_CHUNK(1, \"One file per chunk\") {\n     @Override\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    public File getChunkFile(ContainerData containerData, BlockID blockID,</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        ChunkInfo info) throws StorageContainerException {</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>      File chunksLoc = verifyChunkDirExists(containerData);</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>      return chunksLoc.toPath().resolve(info.getChunkName()).toFile();</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    public File getChunkFile(File chunkDir, BlockID blockID,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        ChunkInfo info) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>      return chunkDir.toPath().resolve(info.getChunkName()).toFile();</span>\n     }\n   },\n   FILE_PER_BLOCK(2, \"One file per block\") {\n     @Override\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    public File getChunkFile(ContainerData containerData, BlockID blockID,</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        ChunkInfo info) throws StorageContainerException {</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>      File chunkDir = verifyChunkDirExists(containerData);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    public File getChunkFile(File chunkDir, BlockID blockID,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        ChunkInfo info) {</span>\n       return new File(chunkDir, blockID.getLocalID() + \".block\");\n     }\n   };\n<span class=\"pl-mdr\">@@ -118,8 +116,14 @@</span> public String getDescription() {\n     return description;\n   }\n\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  public abstract File getChunkFile(ContainerData containerData,</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>      BlockID blockID, ChunkInfo info) throws StorageContainerException;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  public abstract File getChunkFile(File chunksDir,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>      BlockID blockID, ChunkInfo info);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  public File getChunkFile(ContainerData containerData,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>      BlockID blockID, ChunkInfo info) throws StorageContainerException {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    File chunksLoc = verifyChunkDirExists(containerData);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    return getChunkFile(chunksLoc, blockID, info);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  }</span>\n\n   @Override\n   public String toString() {</pre></div>", "author": "adoroszlai", "createdAt": "2020-05-05T07:32:34Z", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/debug/ChunkFileUtility.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.hadoop.ozone.debug;\n+\n+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;\n+import org.apache.hadoop.hdds.scm.container.common.helpers.StorageContainerException;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.container.common.impl.ChunkLayOutVersion;\n+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfo;\n+\n+import java.io.File;\n+\n+\n+public final class ChunkFileUtility {\n+\n+    static String getChunkLocationPath(String containerLocation) {\n+        return containerLocation + File.separator + OzoneConsts.STORAGE_DIR_CHUNKS;\n+    }\n+\n+    public static String getChunkFilePath(ContainerProtos.ChunkInfo\n+      chunkInfo, OmKeyLocationInfo keyLocation,\n+      ContainerProtos.ContainerDataProto data,\n+      ChunkLayOutVersion layOutVersion)\n+      throws StorageContainerException {\n+        switch (layOutVersion) {\n+        case FILE_PER_CHUNK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + chunkInfo.getChunkName();\n+        case FILE_PER_BLOCK:\n+          return  getChunkLocationPath(data\n+                  .getContainerPath())\n+                  + File.separator\n+                  + keyLocation.getLocalID() + \".block\";\n+        default:\n+          throw new StorageContainerException(\"chunk strategy does not exist\",\n+                  ContainerProtos.Result.UNABLE_TO_FIND_CHUNK);\n+        }", "originalCommit": "7b9c097cdc240ea63d35cb2964945d26970ac4d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAxNTI1Nw==", "url": "https://github.com/apache/ozone/pull/886#discussion_r420015257", "bodyText": "Thankyou @adoroszlai for the review. Addressed review comments .", "author": "sadanand48", "createdAt": "2020-05-05T10:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTI3MA=="}], "type": "inlineReview"}, {"oid": "9d22f2aa1ff4b3994dada72ffe09b50f2cfc7a2e", "url": "https://github.com/apache/ozone/commit/9d22f2aa1ff4b3994dada72ffe09b50f2cfc7a2e", "message": "fix rat", "committedDate": "2020-05-05T07:45:19Z", "type": "commit"}, {"oid": "3758b77e7ccf1e99511cfc92405e6ac4d85a0e31", "url": "https://github.com/apache/ozone/commit/3758b77e7ccf1e99511cfc92405e6ac4d85a0e31", "message": "addressed review comments", "committedDate": "2020-05-05T10:10:25Z", "type": "commit"}, {"oid": "4b27b51a4090c8aedfdfc9e632ea9c8fefa0da73", "url": "https://github.com/apache/ozone/commit/4b27b51a4090c8aedfdfc9e632ea9c8fefa0da73", "message": "Update hadoop-ozone/dist/src/main/smoketest/debug/ozone-debug.robot\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>", "committedDate": "2020-05-14T17:01:38Z", "type": "commit"}, {"oid": "3e16600c6b5813c19dddc0edc7635e7c6b4a3bbc", "url": "https://github.com/apache/ozone/commit/3e16600c6b5813c19dddc0edc7635e7c6b4a3bbc", "message": "addressed review comments", "committedDate": "2020-05-14T17:26:31Z", "type": "commit"}, {"oid": "36fb6a654b0ba19bcd82aae9f6516ce486cdc4e0", "url": "https://github.com/apache/ozone/commit/36fb6a654b0ba19bcd82aae9f6516ce486cdc4e0", "message": "addressed review comments", "committedDate": "2020-05-14T17:28:13Z", "type": "commit"}]}