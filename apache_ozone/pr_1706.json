{"pr_number": 1706, "pr_title": "HDDS-4277.  Support Bucket Namespace Quota Updates", "pr_author": "amaliujia", "pr_createdAt": "2020-12-16T00:31:58Z", "pr_url": "https://github.com/apache/ozone/pull/1706", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTAxNA==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545145014", "body": "countException is not actually needed, we could add fail() after writeKey and ensure this exception should be happened.\r\n```java\r\n try {\r\n      writeKey(bucket, key3, ONE, value, value.length());\r\n      Assert.fail(\"Write key should be failed\")\r\n    } catch (IOException ex) {\r\n```", "bodyText": "countException is not actually needed, we could add fail() after writeKey and ensure this exception should be happened.\n try {\n      writeKey(bucket, key3, ONE, value, value.length());\n      Assert.fail(\"Write key should be failed\")\n    } catch (IOException ex) {", "bodyHTML": "<p dir=\"auto\">countException is not actually needed, we could add fail() after writeKey and ensure this exception should be happened.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" try {\n      writeKey(bucket, key3, ONE, value, value.length());\n      Assert.fail(&quot;Write key should be failed&quot;)\n    } catch (IOException ex) {\n\"><pre> <span class=\"pl-k\">try</span> {\n      writeKey(bucket, key3, <span class=\"pl-c1\">ONE</span>, value, value<span class=\"pl-k\">.</span>length());\n      <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>fail(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Write key should be failed<span class=\"pl-pds\">\"</span></span>)\n    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">IOException</span> ex) {</pre></div>", "author": "linyiqun", "createdAt": "2020-12-17T14:46:21Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -932,6 +932,50 @@ public void testVolumeUsedNamespace() throws IOException {\n     Assert.assertEquals(0L, volume.getUsedNamespace());\n   }\n \n+  @Test\n+  public void testBucketUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String key1 = UUID.randomUUID().toString();\n+    String key2 = UUID.randomUUID().toString();\n+    String key3 = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+    OzoneBucket bucket = null;\n+\n+    String value = \"sample value\";\n+    int countException = 0;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    bucket = volume.getBucket(bucketName);\n+    bucket.setQuota(OzoneQuota.parseQuota(Long.MAX_VALUE + \" Bytes\", 2));\n+\n+    writeKey(bucket, key1, ONE, value, value.length());\n+    Assert.assertEquals(1L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    writeKey(bucket, key2, ONE, value, value.length());\n+    Assert.assertEquals(2L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    try {\n+      writeKey(bucket, key3, ONE, value, value.length());\n+    } catch (IOException ex) {\n+      countException++;", "originalCommit": "926e30ec6b98747c39160fed547ab60cb520c54d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTM4Nw==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545145387", "body": "This comment should be updated", "bodyText": "This comment should be updated", "bodyHTML": "<p dir=\"auto\">This comment should be updated</p>", "author": "linyiqun", "createdAt": "2020-12-17T14:46:49Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -932,6 +932,50 @@ public void testVolumeUsedNamespace() throws IOException {\n     Assert.assertEquals(0L, volume.getUsedNamespace());\n   }\n \n+  @Test\n+  public void testBucketUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    String key1 = UUID.randomUUID().toString();\n+    String key2 = UUID.randomUUID().toString();\n+    String key3 = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+    OzoneBucket bucket = null;\n+\n+    String value = \"sample value\";\n+    int countException = 0;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    volume.createBucket(bucketName);\n+    bucket = volume.getBucket(bucketName);\n+    bucket.setQuota(OzoneQuota.parseQuota(Long.MAX_VALUE + \" Bytes\", 2));\n+\n+    writeKey(bucket, key1, ONE, value, value.length());\n+    Assert.assertEquals(1L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    writeKey(bucket, key2, ONE, value, value.length());\n+    Assert.assertEquals(2L,\n+        store.getVolume(volumeName).getBucket(bucketName).getUsedNamespace());\n+\n+    try {\n+      writeKey(bucket, key3, ONE, value, value.length());\n+    } catch (IOException ex) {\n+      countException++;\n+      GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n+    }\n+\n+    // Write failed, bucket usedBytes should remain as 1\n+    Assert.assertEquals(2L,", "originalCommit": "926e30ec6b98747c39160fed547ab60cb520c54d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0ODkwMA==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545148900", "body": "We should move checkBucketQuotaInNamespace check after checkBucketQuotaInBytes. Here we add cache entry before quota check, this will lead the dirty data.", "bodyText": "We should move checkBucketQuotaInNamespace check after checkBucketQuotaInBytes. Here we add cache entry before quota check, this will lead the dirty data.", "bodyHTML": "<p dir=\"auto\">We should move checkBucketQuotaInNamespace check after checkBucketQuotaInBytes. Here we add cache entry before quota check, this will lead the dirty data.</p>", "author": "linyiqun", "createdAt": "2020-12-17T14:51:14Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/file/OMFileCreateRequest.java", "diffHunk": "@@ -299,6 +299,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n \n+      // Update namespace quota\n+      checkBucketQuotaInNamespace(omBucketInfo, 1L);\n+      omBucketInfo.incrUsedNamespace(1L);", "originalCommit": "926e30ec6b98747c39160fed547ab60cb520c54d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2OTQ0NQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545469445", "bodyText": "O I see.", "author": "amaliujia", "createdAt": "2020-12-17T23:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0ODkwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTgwNQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545149805", "body": "Same comment like above.", "bodyText": "Same comment like above.", "bodyHTML": "<p dir=\"auto\">Same comment like above.</p>", "author": "linyiqun", "createdAt": "2020-12-17T14:52:19Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -309,6 +309,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n \n+      // Update namespace quota\n+      checkBucketQuotaInNamespace(omBucketInfo, 1L);", "originalCommit": "926e30ec6b98747c39160fed547ab60cb520c54d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMzY1Nw==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545533657", "body": "Nit: usedBytes -> usedNamespace", "bodyText": "Nit: usedBytes -> usedNamespace", "bodyHTML": "<p dir=\"auto\">Nit: usedBytes -&gt; usedNamespace</p>", "author": "linyiqun", "createdAt": "2020-12-18T02:32:07Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -961,19 +960,18 @@ public void testBucketUsedNamespace() throws IOException {\n \n     try {\n       writeKey(bucket, key3, ONE, value, value.length());\n+      Assert.fail(\"Write key should be failed\");\n     } catch (IOException ex) {\n-      countException++;\n       GenericTestUtils.assertExceptionContains(\"QUOTA_EXCEEDED\", ex);\n     }\n \n-    // Write failed, bucket usedBytes should remain as 1\n+    // Write failed, bucket usedBytes should remain as 2", "originalCommit": "a57c74b558aa3905849302312c14d03bc073c816", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545616686", "body": "If the key is created successfully, but write failed before the commit key (for example, client crashes), then the key should not be counted. \r\nWe'd better  incrUsedNamespace(-1L), when we clean up this key in the background.", "bodyText": "If the key is created successfully, but write failed before the commit key (for example, client crashes), then the key should not be counted.\nWe'd better  incrUsedNamespace(-1L), when we clean up this key in the background.", "bodyHTML": "<p dir=\"auto\">If the key is created successfully, but write failed before the commit key (for example, client crashes), then the key should not be counted.<br>\nWe'd better  incrUsedNamespace(-1L), when we clean up this key in the background.</p>", "author": "captainzmc", "createdAt": "2020-12-18T07:21:50Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCreateRequest.java", "diffHunk": "@@ -308,6 +309,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n           new CacheValue<>(Optional.of(omKeyInfo), trxnLogIndex));\n \n       omBucketInfo.incrUsedBytes(preAllocatedSpace);\n+      // Update namespace quota\n+      omBucketInfo.incrUsedNamespace(1L);", "originalCommit": "10762abbbb48fe396c17f6ab7bf2cda728e5e6f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3NDk3OQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r546174979", "bodyText": "I see.\nDo you know where is the place that does such failed key cleanup?", "author": "amaliujia", "createdAt": "2020-12-19T02:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk3NTE5OQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r546975199", "bodyText": "@captainzmc  do you have an idea how does the background cleanup happen on keys that failed to commit?", "author": "amaliujia", "createdAt": "2020-12-21T23:06:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE0ODU1MA==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r547148550", "bodyText": "There is a PR #1511 currently cleaning open key. I think we can use this. Update quota during cleanup.\nBut this PR is not merged yet, and we do not need to block here. We can fix this after #1511 is merged.", "author": "captainzmc", "createdAt": "2020-12-22T08:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNzY3OQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r547437679", "bodyText": "Got it. Have filed a jira to track it: https://issues.apache.org/jira/browse/HDDS-4620", "author": "amaliujia", "createdAt": "2020-12-22T18:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxNjY4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxODIwOA==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r545618208", "body": "```suggestion\r\n    if (omBucketInfo.getQuotaInNamespace() > OzoneConsts.QUOTA_RESET) {\r\n```\r\nThis unity has been changed: https://github.com/apache/ozone/pull/1677#discussion_r545536353", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (omBucketInfo.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {\n          \n          \n            \n                if (omBucketInfo.getQuotaInNamespace() > OzoneConsts.QUOTA_RESET) {\n          \n      \n    \n    \n  \n\nThis unity has been changed: #1677 (comment)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (omBucketInfo<span class=\"pl-k\">.</span>getQuotaInNamespace() <span class=\"pl-k x x-first x-last\">!=</span> <span class=\"pl-smi\">OzoneConsts</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>QUOTA_RESET</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (omBucketInfo<span class=\"pl-k\">.</span>getQuotaInNamespace() <span class=\"pl-k x x-first x-last\">&gt;</span> <span class=\"pl-smi\">OzoneConsts</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>QUOTA_RESET</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This unity has been changed: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"759940109\" data-permission-text=\"Title is private\" data-url=\"https://github.com/apache/ozone/issues/1677\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/apache/ozone/pull/1677/hovercard?comment_id=545536353&amp;comment_type=review_comment\" href=\"https://github.com/apache/ozone/pull/1677#discussion_r545536353\">#1677 (comment)</a></p>", "author": "captainzmc", "createdAt": "2020-12-18T07:25:55Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyRequest.java", "diffHunk": "@@ -589,6 +589,25 @@ protected void checkBucketQuotaInBytes(OmBucketInfo omBucketInfo,\n     }\n   }\n \n+  /**\n+   * Check namespace quota.\n+   */\n+  protected void checkBucketQuotaInNamespace(OmBucketInfo omBucketInfo,\n+      long allocatedNamespace) throws IOException {\n+    if (omBucketInfo.getQuotaInNamespace() != OzoneConsts.QUOTA_RESET) {", "originalCommit": "13f3daa5d8a566a60823884ea5c8b29cdc231593", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQzNzc4OQ==", "url": "https://github.com/apache/ozone/pull/1706#discussion_r547437789", "bodyText": "Done!", "author": "amaliujia", "createdAt": "2020-12-22T18:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYxODIwOA=="}], "type": "inlineReview"}, {"oid": "3453adba3fda4f06b0640de2513fa9fe4074772a", "url": "https://github.com/apache/ozone/commit/3453adba3fda4f06b0640de2513fa9fe4074772a", "message": "HDDS-4277. Bucket Namespace: add namespaceQuotaUsage and update it when create and delete key in a bucket", "committedDate": "2020-12-23T18:35:35Z", "type": "commit"}, {"oid": "d55d1da93163eceb5ad9ec9f20bbc763f29d33eb", "url": "https://github.com/apache/ozone/commit/d55d1da93163eceb5ad9ec9f20bbc763f29d33eb", "message": "fixup! fix wrong comment", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "8a8dafd979676816893b41b0112bbdd104dfa0de", "url": "https://github.com/apache/ozone/commit/8a8dafd979676816893b41b0112bbdd104dfa0de", "message": "fixup! address comments", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "eb0609478f64842d7202ec22bac97ebf43045da0", "url": "https://github.com/apache/ozone/commit/eb0609478f64842d7202ec22bac97ebf43045da0", "message": "fixup! fix typo", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "63d6ea6975d0995c1558ef4660a4ca51de3139a3", "url": "https://github.com/apache/ozone/commit/63d6ea6975d0995c1558ef4660a4ca51de3139a3", "message": "trigger new CI check", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "65a68b1f36f8f766840fb10fbe1e385063d7d054", "url": "https://github.com/apache/ozone/commit/65a68b1f36f8f766840fb10fbe1e385063d7d054", "message": "fixup! address comments", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "37a632dc8f02df1049858c2e88870d2bfccf6cdd", "url": "https://github.com/apache/ozone/commit/37a632dc8f02df1049858c2e88870d2bfccf6cdd", "message": "trigger new CI check", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "url": "https://github.com/apache/ozone/commit/0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "message": "trigger new CI check", "committedDate": "2020-12-23T18:35:37Z", "type": "commit"}, {"oid": "0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "url": "https://github.com/apache/ozone/commit/0eb571b2dff0e8d52a6040d8f23d89d547ec69af", "message": "trigger new CI check", "committedDate": "2020-12-23T18:35:37Z", "type": "forcePushed"}, {"oid": "0ffa7f6eb2b103011a63a0ed0bb9ed5b93ef1d83", "url": "https://github.com/apache/ozone/commit/0ffa7f6eb2b103011a63a0ed0bb9ed5b93ef1d83", "message": "trigger new CI check", "committedDate": "2020-12-23T20:33:05Z", "type": "commit"}]}