{"pr_number": 692, "pr_title": "HDDS-3168. Improve read efficiency by merging a lot of RPC call getContainerWithPipeline into one", "pr_author": "runzhiwang", "pr_createdAt": "2020-03-18T01:22:41Z", "pr_url": "https://github.com/apache/ozone/pull/692", "timeline": [{"oid": "de04499af4466e71ce1522e73fd860e798a47625", "url": "https://github.com/apache/ozone/commit/de04499af4466e71ce1522e73fd860e798a47625", "message": "HDDS-3168. Improve read efficiency by merging a lot of RPC call getContainerWithPipeline into one", "committedDate": "2020-03-18T01:32:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0NTk4Mw==", "url": "https://github.com/apache/ozone/pull/692#discussion_r394545983", "body": "Can we use a set instead of a list to avoid the overhead of contains call for large Key? You can convert to a list at the end if that is easier to pass over RPC. ", "bodyText": "Can we use a set instead of a list to avoid the overhead of contains call for large Key? You can convert to a list at the end if that is easier to pass over RPC.", "bodyHTML": "<p dir=\"auto\">Can we use a set instead of a list to avoid the overhead of contains call for large Key? You can convert to a list at the end if that is easier to pass over RPC.</p>", "author": "xiaoyuyao", "createdAt": "2020-03-18T18:10:56Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -687,36 +687,49 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n    */\n   @VisibleForTesting\n   protected void refreshPipeline(OmKeyInfo value) throws IOException {\n-    if (value != null &&\n-        CollectionUtils.isNotEmpty(value.getKeyLocationVersions())) {\n-      Map<Long, ContainerWithPipeline> containerWithPipelineMap =\n-          new HashMap<>();\n-      for (OmKeyLocationInfoGroup key : value.getKeyLocationVersions()) {\n-        for (OmKeyLocationInfo k : key.getLocationList()) {\n-          // TODO: fix Some tests that may not initialize container client\n-          // The production should always have containerClient initialized.\n-          if (scmClient.getContainerClient() != null) {\n-            try {\n-              if (!containerWithPipelineMap.containsKey(k.getContainerID())) {\n-                ContainerWithPipeline containerWithPipeline = scmClient\n-                    .getContainerClient()\n-                    .getContainerWithPipeline(k.getContainerID());\n-                containerWithPipelineMap.put(k.getContainerID(),\n-                    containerWithPipeline);\n-              }\n-            } catch (IOException ioEx) {\n-              LOG.debug(\"Get containerPipeline failed for volume:{} bucket:{} \"\n+    // TODO: fix Some tests that may not initialize container client\n+    // The production should always have containerClient initialized.\n+    if (scmClient.getContainerClient() == null) {\n+      return;\n+    }\n+\n+    if (value == null\n+            || CollectionUtils.isEmpty(value.getKeyLocationVersions())) {\n+      return;\n+    }\n+\n+    List<Long> containerIDs = new ArrayList<>();", "originalCommit": "de04499af4466e71ce1522e73fd860e798a47625", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MDgzNQ==", "url": "https://github.com/apache/ozone/pull/692#discussion_r395250835", "body": "```suggestion\r\n    final List<OmKeyLocationInfoGroup> locationGroups = value == null ?\r\n        null : value.getKeyLocationVersions();\r\n\r\n    if (scmClient.getContainerClient() == null ||\r\n        CollectionUtils.isEmpty(locationGroups)) {\r\n      return;\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (scmClient.getContainerClient() == null) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                if (value == null\n          \n          \n            \n                        || CollectionUtils.isEmpty(value.getKeyLocationVersions())) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n                final List<OmKeyLocationInfoGroup> locationGroups = value == null ?\n          \n          \n            \n                    null : value.getKeyLocationVersions();\n          \n          \n            \n            \n          \n          \n            \n                if (scmClient.getContainerClient() == null ||\n          \n          \n            \n                    CollectionUtils.isEmpty(locationGroups)) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"699\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (scmClient<span class=\"pl-k\">.</span>getContainerClient() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"700\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"701\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (value <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">||</span> <span class=\"pl-smi\">CollectionUtils</span><span class=\"pl-k\">.</span>isEmpty(value<span class=\"pl-k\">.</span>getKeyLocationVersions())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"706\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"699\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">OmKeyLocationInfoGroup</span>&gt;</span> locationGroups <span class=\"pl-k\">=</span> value <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">?</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"700\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">null</span> <span class=\"pl-k\">:</span> value<span class=\"pl-k\">.</span>getKeyLocationVersions();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"701\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (scmClient<span class=\"pl-k\">.</span>getContainerClient() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">CollectionUtils</span><span class=\"pl-k\">.</span>isEmpty(locationGroups)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "nandakumar131", "createdAt": "2020-03-19T18:55:54Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -687,36 +688,46 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n    */\n   @VisibleForTesting\n   protected void refreshPipeline(OmKeyInfo value) throws IOException {\n-    if (value != null &&\n-        CollectionUtils.isNotEmpty(value.getKeyLocationVersions())) {\n-      Map<Long, ContainerWithPipeline> containerWithPipelineMap =\n-          new HashMap<>();\n-      for (OmKeyLocationInfoGroup key : value.getKeyLocationVersions()) {\n-        for (OmKeyLocationInfo k : key.getLocationList()) {\n-          // TODO: fix Some tests that may not initialize container client\n-          // The production should always have containerClient initialized.\n-          if (scmClient.getContainerClient() != null) {\n-            try {\n-              if (!containerWithPipelineMap.containsKey(k.getContainerID())) {\n-                ContainerWithPipeline containerWithPipeline = scmClient\n-                    .getContainerClient()\n-                    .getContainerWithPipeline(k.getContainerID());\n-                containerWithPipelineMap.put(k.getContainerID(),\n-                    containerWithPipeline);\n-              }\n-            } catch (IOException ioEx) {\n-              LOG.debug(\"Get containerPipeline failed for volume:{} bucket:{} \"\n+    // TODO: fix Some tests that may not initialize container client\n+    // The production should always have containerClient initialized.\n+    if (scmClient.getContainerClient() == null) {\n+      return;\n+    }\n+\n+    if (value == null\n+            || CollectionUtils.isEmpty(value.getKeyLocationVersions())) {\n+      return;\n+    }", "originalCommit": "7c43beed00ded7c1c859904f70b0c70534ed991c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI1MTIxOQ==", "url": "https://github.com/apache/ozone/pull/692#discussion_r395251219", "body": "No need to call `value.getKeyLocationVersions()` again, we can use `locationGroups` here.", "bodyText": "No need to call value.getKeyLocationVersions() again, we can use locationGroups here.", "bodyHTML": "<p dir=\"auto\">No need to call <code>value.getKeyLocationVersions()</code> again, we can use <code>locationGroups</code> here.</p>", "author": "nandakumar131", "createdAt": "2020-03-19T18:56:33Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/KeyManagerImpl.java", "diffHunk": "@@ -687,36 +688,46 @@ public OmKeyInfo lookupKey(OmKeyArgs args, String clientAddress)\n    */\n   @VisibleForTesting\n   protected void refreshPipeline(OmKeyInfo value) throws IOException {\n-    if (value != null &&\n-        CollectionUtils.isNotEmpty(value.getKeyLocationVersions())) {\n-      Map<Long, ContainerWithPipeline> containerWithPipelineMap =\n-          new HashMap<>();\n-      for (OmKeyLocationInfoGroup key : value.getKeyLocationVersions()) {\n-        for (OmKeyLocationInfo k : key.getLocationList()) {\n-          // TODO: fix Some tests that may not initialize container client\n-          // The production should always have containerClient initialized.\n-          if (scmClient.getContainerClient() != null) {\n-            try {\n-              if (!containerWithPipelineMap.containsKey(k.getContainerID())) {\n-                ContainerWithPipeline containerWithPipeline = scmClient\n-                    .getContainerClient()\n-                    .getContainerWithPipeline(k.getContainerID());\n-                containerWithPipelineMap.put(k.getContainerID(),\n-                    containerWithPipeline);\n-              }\n-            } catch (IOException ioEx) {\n-              LOG.debug(\"Get containerPipeline failed for volume:{} bucket:{} \"\n+    // TODO: fix Some tests that may not initialize container client\n+    // The production should always have containerClient initialized.\n+    if (scmClient.getContainerClient() == null) {\n+      return;\n+    }\n+\n+    if (value == null\n+            || CollectionUtils.isEmpty(value.getKeyLocationVersions())) {\n+      return;\n+    }\n+\n+    Set<Long> containerIDs = new HashSet<>();\n+    for (OmKeyLocationInfoGroup key : value.getKeyLocationVersions()) {", "originalCommit": "7c43beed00ded7c1c859904f70b0c70534ed991c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI2MTYxMw==", "url": "https://github.com/apache/ozone/pull/692#discussion_r395261613", "body": "This logic can be extracted into a separate method and can be reused by `getContainerWithPipeline` and `getContainerWithPipelineBatch`", "bodyText": "This logic can be extracted into a separate method and can be reused by getContainerWithPipeline and getContainerWithPipelineBatch", "bodyHTML": "<p dir=\"auto\">This logic can be extracted into a separate method and can be reused by <code>getContainerWithPipeline</code> and <code>getContainerWithPipelineBatch</code></p>", "author": "nandakumar131", "createdAt": "2020-03-19T19:15:32Z", "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/SCMClientProtocolServer.java", "diffHunk": "@@ -275,6 +275,66 @@ public ContainerWithPipeline getContainerWithPipeline(long containerID)\n     }\n   }\n \n+  @Override\n+  public List<ContainerWithPipeline> getContainerWithPipelineBatch(\n+      List<Long> containerIDs) throws IOException {\n+    getScm().checkAdminAccess(null);\n+\n+    List<ContainerWithPipeline> cpList = new ArrayList<>();\n+\n+    for (Long containerID : containerIDs) {\n+      final ContainerID cid = ContainerID.valueof(containerID);\n+      try {\n+        final ContainerInfo container = scm.getContainerManager()\n+                .getContainer(cid);\n+\n+        if (safeModePrecheck.isInSafeMode()) {\n+          if (container.isOpen()) {\n+            if (!hasRequiredReplicas(container)) {\n+              throw new SCMException(\"Open container \" + containerID\n+                      + \" doesn't have enough replicas to service this\"\n+                      + \" operation in Safe mode.\",\n+                      ResultCodes.SAFE_MODE_EXCEPTION);\n+            }\n+          }\n+        }\n+\n+        Pipeline pipeline;\n+        try {\n+          pipeline = container.isOpen() ? scm.getPipelineManager()\n+                  .getPipeline(container.getPipelineID()) : null;\n+        } catch (PipelineNotFoundException ex) {\n+          // The pipeline is destroyed.\n+          pipeline = null;\n+        }\n+\n+        if (pipeline == null) {\n+          pipeline = scm.getPipelineManager().createPipeline(\n+                  HddsProtos.ReplicationType.STAND_ALONE,\n+                  container.getReplicationFactor(),\n+                  scm.getContainerManager()\n+                          .getContainerReplicas(cid).stream()\n+                          .map(ContainerReplica::getDatanodeDetails)\n+                          .collect(Collectors.toList()));\n+        }", "originalCommit": "7c43beed00ded7c1c859904f70b0c70534ed991c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7c43beed00ded7c1c859904f70b0c70534ed991c", "url": "https://github.com/apache/ozone/commit/7c43beed00ded7c1c859904f70b0c70534ed991c", "message": "convert list to set", "committedDate": "2020-03-19T00:24:38Z", "type": "forcePushed"}, {"oid": "cc2ba5830ced31809806c35c7318271d020aae9e", "url": "https://github.com/apache/ozone/commit/cc2ba5830ced31809806c35c7318271d020aae9e", "message": "fix code style", "committedDate": "2020-03-20T02:38:39Z", "type": "forcePushed"}, {"oid": "29a71dd90ecc7cf3c96fa20fb7834a23256fca37", "url": "https://github.com/apache/ozone/commit/29a71dd90ecc7cf3c96fa20fb7834a23256fca37", "message": "fix code style", "committedDate": "2020-03-20T03:43:31Z", "type": "forcePushed"}, {"oid": "4b4e04ec29d81db2048dd091f9fb96c3f1783f09", "url": "https://github.com/apache/ozone/commit/4b4e04ec29d81db2048dd091f9fb96c3f1783f09", "message": "fix code style", "committedDate": "2020-04-16T23:45:33Z", "type": "forcePushed"}, {"oid": "1281a49e1b606685e14c3fd2f532ddadb086b104", "url": "https://github.com/apache/ozone/commit/1281a49e1b606685e14c3fd2f532ddadb086b104", "message": "HDDS-3168. Improve read efficiency by merging a lot of RPC call getContainerWithPipeline into one", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}, {"oid": "d749c605fd8988beae66badc4bfb341f342cc3f4", "url": "https://github.com/apache/ozone/commit/d749c605fd8988beae66badc4bfb341f342cc3f4", "message": "convert list to set", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}, {"oid": "fcee28edb5e7d1306c0eef75fbb5c9d78e75d8bd", "url": "https://github.com/apache/ozone/commit/fcee28edb5e7d1306c0eef75fbb5c9d78e75d8bd", "message": "fix code review", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}, {"oid": "dfb12b0a821d5f01d10cab283a0b33c658c1b61e", "url": "https://github.com/apache/ozone/commit/dfb12b0a821d5f01d10cab283a0b33c658c1b61e", "message": "fix code style", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}, {"oid": "6b046c1cfda666a86d5d540bcd5892e303fc4de8", "url": "https://github.com/apache/ozone/commit/6b046c1cfda666a86d5d540bcd5892e303fc4de8", "message": "fix code style", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}, {"oid": "4b4e04ec29d81db2048dd091f9fb96c3f1783f09", "url": "https://github.com/apache/ozone/commit/4b4e04ec29d81db2048dd091f9fb96c3f1783f09", "message": "fix code style", "committedDate": "2020-04-16T23:45:33Z", "type": "commit"}]}