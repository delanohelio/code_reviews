{"pr_number": 1425, "pr_title": "HDDS-2981 Add unit tests for Proto [de]serialization", "pr_author": "llemec", "pr_createdAt": "2020-09-15T08:55:50Z", "pr_url": "https://github.com/apache/ozone/pull/1425", "timeline": [{"oid": "171664409bdd266c0ec9bc5753011e470ebd646e", "url": "https://github.com/apache/ozone/commit/171664409bdd266c0ec9bc5753011e470ebd646e", "message": "added OmPrefixInfoSerialization test v1", "committedDate": "2020-09-08T16:00:01Z", "type": "commit"}, {"oid": "4aba9effb8ed3f28d5dc45c14a2cd6f4e14dcc30", "url": "https://github.com/apache/ozone/commit/4aba9effb8ed3f28d5dc45c14a2cd6f4e14dcc30", "message": "moved OmPrefixInfo serialization tests to the TestOmPrefixInfo class. Extracted helper class to get test instances", "committedDate": "2020-09-09T10:49:53Z", "type": "commit"}, {"oid": "96cb1c3d05cb121344dadffff4b6b3a0372392bc", "url": "https://github.com/apache/ozone/commit/96cb1c3d05cb121344dadffff4b6b3a0372392bc", "message": "removed newlines", "committedDate": "2020-09-09T11:32:01Z", "type": "commit"}, {"oid": "368dfa54d728522679ee850b43ea1eef6d615f49", "url": "https://github.com/apache/ozone/commit/368dfa54d728522679ee850b43ea1eef6d615f49", "message": "cleaned up TestOMPrefixInfo - intermediate commit to save progress", "committedDate": "2020-09-09T15:37:46Z", "type": "commit"}, {"oid": "23448fea94e94691165a298aa92c5a3e281da499", "url": "https://github.com/apache/ozone/commit/23448fea94e94691165a298aa92c5a3e281da499", "message": "Merge branch 'master' of https://github.com/apache/hadoop-ozone into HDDS-2981", "committedDate": "2020-09-10T09:26:54Z", "type": "commit"}, {"oid": "ffa963080d05bbfc96ccec17ceee110d1e0b073f", "url": "https://github.com/apache/ozone/commit/ffa963080d05bbfc96ccec17ceee110d1e0b073f", "message": "added testgetFromProtobufOneMetadataOneAcl", "committedDate": "2020-09-14T16:04:11Z", "type": "commit"}, {"oid": "0e67a2d4b163860479fd9f47656cdb75d43356dc", "url": "https://github.com/apache/ozone/commit/0e67a2d4b163860479fd9f47656cdb75d43356dc", "message": "removed unused imports", "committedDate": "2020-09-15T09:40:37Z", "type": "commit"}, {"oid": "c074828f84c2c62067c3381d6847df149672a587", "url": "https://github.com/apache/ozone/commit/c074828f84c2c62067c3381d6847df149672a587", "message": "checkstyle fixes", "committedDate": "2020-09-15T15:07:22Z", "type": "commit"}, {"oid": "38932140824122572c6c60c6a04709300f947451", "url": "https://github.com/apache/ozone/commit/38932140824122572c6c60c6a04709300f947451", "message": "added license header to file as per RAT report", "committedDate": "2020-09-15T16:15:22Z", "type": "commit"}, {"oid": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "url": "https://github.com/apache/ozone/commit/a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "message": "removing unnecessary empty lines", "committedDate": "2020-09-17T11:09:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzM5NQ==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493263395", "body": "```suggestion\r\n  private TestInstanceHelper() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private  TestInstanceHelper(){\n          \n          \n            \n              private TestInstanceHelper() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"x x-first x-last\"> </span>TestInstanceHelper(){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> TestInstanceHelper()<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:39:15Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private  TestInstanceHelper(){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2OTU0NA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493369544", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzM5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NzM4OA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493277388", "body": "```suggestion\r\n      OzoneAcl.AclScope scope) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  OzoneAcl.AclScope scope){\n          \n          \n            \n                  OzoneAcl.AclScope scope) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">OzoneAcl</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AclScope</span> scope){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">OzoneAcl</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">AclScope</span> scope)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:57:44Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmPrefixInfo.java", "diffHunk": "@@ -18,39 +18,91 @@\n \n package org.apache.hadoop.ozone.om.helpers;\n \n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;\n import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Collections;\n import java.util.HashMap;\n \n+\n import static org.apache.hadoop.ozone.OzoneAcl.AclScope.ACCESS;\n \n /**\n  * Class to test OmPrefixInfo.\n  */\n public class TestOmPrefixInfo {\n \n-  @Test\n-  public void testCopyObject() {\n-    OmPrefixInfo omPrefixInfo = new OmPrefixInfo(\"/path\",\n+  public OmPrefixInfo getOmPrefixInfoForTest(String path,\n+      IAccessAuthorizer.ACLIdentityType identityType,\n+      String identityString,\n+      IAccessAuthorizer.ACLType aclType,\n+      OzoneAcl.AclScope scope){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2OTY1NA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493369654", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NzM4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NzYxNg==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493277616", "body": "```suggestion\r\n  public void testgetFromProtobufOneMetadataOneAcl() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testgetFromProtobufOneMetadataOneAcl(){\n          \n          \n            \n              public void testgetFromProtobufOneMetadataOneAcl() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testgetFromProtobufOneMetadataOneAcl(){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testgetFromProtobufOneMetadataOneAcl()<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:57:58Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmPrefixInfo.java", "diffHunk": "@@ -18,39 +18,91 @@\n \n package org.apache.hadoop.ozone.om.helpers;\n \n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;\n import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Collections;\n import java.util.HashMap;\n \n+\n import static org.apache.hadoop.ozone.OzoneAcl.AclScope.ACCESS;\n \n /**\n  * Class to test OmPrefixInfo.\n  */\n public class TestOmPrefixInfo {\n \n-  @Test\n-  public void testCopyObject() {\n-    OmPrefixInfo omPrefixInfo = new OmPrefixInfo(\"/path\",\n+  public OmPrefixInfo getOmPrefixInfoForTest(String path,\n+      IAccessAuthorizer.ACLIdentityType identityType,\n+      String identityString,\n+      IAccessAuthorizer.ACLType aclType,\n+      OzoneAcl.AclScope scope){\n+    return new OmPrefixInfo(path,\n         Collections.singletonList(new OzoneAcl(\n-        IAccessAuthorizer.ACLIdentityType.USER, \"user1\",\n-        IAccessAuthorizer.ACLType.WRITE, ACCESS)), new HashMap<>(), 10, 100);\n+            identityType, identityString,\n+            aclType, scope)), new HashMap<>(), 10, 100);\n+  }\n \n+\n+  @Test\n+  public void testCopyObject() {\n+    String testPath = \"/my/custom/path\";\n+    String username = \"myuser\";\n+    OmPrefixInfo omPrefixInfo = getOmPrefixInfoForTest(testPath,\n+        IAccessAuthorizer.ACLIdentityType.USER,\n+        username,\n+        IAccessAuthorizer.ACLType.WRITE,\n+        ACCESS);\n     OmPrefixInfo clonePrefixInfo = omPrefixInfo.copyObject();\n \n     Assert.assertEquals(omPrefixInfo, clonePrefixInfo);\n \n \n     // Change acls and check.\n     omPrefixInfo.addAcl(new OzoneAcl(\n-        IAccessAuthorizer.ACLIdentityType.USER, \"user1\",\n+        IAccessAuthorizer.ACLIdentityType.USER, username,\n         IAccessAuthorizer.ACLType.READ, ACCESS));\n \n     Assert.assertNotEquals(omPrefixInfo, clonePrefixInfo);\n \n   }\n+\n+  @Test\n+  public void testgetFromProtobufOneMetadataOneAcl(){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2OTc2MQ==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493369761", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:31:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NzYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3Nzc2NQ==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493277765", "body": "```suggestion\r\n  public void testGetProtobuf() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testGetProtobuf(){\n          \n          \n            \n              public void testGetProtobuf() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testGetProtobuf(){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testGetProtobuf()<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:58:08Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmPrefixInfo.java", "diffHunk": "@@ -18,39 +18,91 @@\n \n package org.apache.hadoop.ozone.om.helpers;\n \n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;\n import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Collections;\n import java.util.HashMap;\n \n+\n import static org.apache.hadoop.ozone.OzoneAcl.AclScope.ACCESS;\n \n /**\n  * Class to test OmPrefixInfo.\n  */\n public class TestOmPrefixInfo {\n \n-  @Test\n-  public void testCopyObject() {\n-    OmPrefixInfo omPrefixInfo = new OmPrefixInfo(\"/path\",\n+  public OmPrefixInfo getOmPrefixInfoForTest(String path,\n+      IAccessAuthorizer.ACLIdentityType identityType,\n+      String identityString,\n+      IAccessAuthorizer.ACLType aclType,\n+      OzoneAcl.AclScope scope){\n+    return new OmPrefixInfo(path,\n         Collections.singletonList(new OzoneAcl(\n-        IAccessAuthorizer.ACLIdentityType.USER, \"user1\",\n-        IAccessAuthorizer.ACLType.WRITE, ACCESS)), new HashMap<>(), 10, 100);\n+            identityType, identityString,\n+            aclType, scope)), new HashMap<>(), 10, 100);\n+  }\n \n+\n+  @Test\n+  public void testCopyObject() {\n+    String testPath = \"/my/custom/path\";\n+    String username = \"myuser\";\n+    OmPrefixInfo omPrefixInfo = getOmPrefixInfoForTest(testPath,\n+        IAccessAuthorizer.ACLIdentityType.USER,\n+        username,\n+        IAccessAuthorizer.ACLType.WRITE,\n+        ACCESS);\n     OmPrefixInfo clonePrefixInfo = omPrefixInfo.copyObject();\n \n     Assert.assertEquals(omPrefixInfo, clonePrefixInfo);\n \n \n     // Change acls and check.\n     omPrefixInfo.addAcl(new OzoneAcl(\n-        IAccessAuthorizer.ACLIdentityType.USER, \"user1\",\n+        IAccessAuthorizer.ACLIdentityType.USER, username,\n         IAccessAuthorizer.ACLType.READ, ACCESS));\n \n     Assert.assertNotEquals(omPrefixInfo, clonePrefixInfo);\n \n   }\n+\n+  @Test\n+  public void testgetFromProtobufOneMetadataOneAcl(){\n+    String prefixInfoPath = \"/mypath/path\";\n+    String aclString = \"user:myuser:rw\";\n+    String metakey = \"metakey\";\n+    String metaval = \"metaval\";\n+    HddsProtos.KeyValue metadata = TestInstanceHelper\n+        .getDefaultTestMetadata(metakey, metaval);\n+    OzoneManagerProtocolProtos.PrefixInfo prefixInfo =\n+        TestInstanceHelper.getDefaultTestPrefixInfo(prefixInfoPath,\n+            aclString, metadata);\n+\n+    OmPrefixInfo ompri = OmPrefixInfo.getFromProtobuf(prefixInfo);\n+\n+    Assert.assertEquals(prefixInfoPath, ompri.getName());\n+    Assert.assertEquals(1, ompri.getMetadata().size());\n+    Assert.assertEquals(metaval, ompri.getMetadata().get(metakey));\n+    Assert.assertEquals(1, ompri.getAcls().size());\n+  }\n+\n+  @Test\n+  public void testGetProtobuf(){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODA2NQ==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493278065", "body": "```suggestion\r\n      String name, String aclString, HddsProtos.KeyValue metadata) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  String name, String aclString, HddsProtos.KeyValue metadata){\n          \n          \n            \n                  String name, String aclString, HddsProtos.KeyValue metadata) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">String</span> name, <span class=\"pl-smi\">String</span> aclString, <span class=\"pl-smi\">HddsProtos</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">KeyValue</span> metadata){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> name, <span class=\"pl-smi\">String</span> aclString, <span class=\"pl-smi\">HddsProtos</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">KeyValue</span> metadata)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:58:27Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private  TestInstanceHelper(){\n+    super();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.OzoneAclInfo buildTestOzoneAclInfo(\n+      String aclString){\n+    OzoneAcl oacl = OzoneAcl.parseAcl(aclString);\n+    ByteString rights = ByteString.copyFrom(oacl.getAclBitSet().toByteArray());\n+    return OzoneManagerProtocolProtos.OzoneAclInfo.newBuilder()\n+        .setType(OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType.USER)\n+        .setName(oacl.getName())\n+        .setRights(rights)\n+        .setAclScope(OzoneManagerProtocolProtos.\n+            OzoneAclInfo.OzoneAclScope.ACCESS)\n+        .build();\n+  }\n+\n+  public static HddsProtos.KeyValue getDefaultTestMetadata(\n+      String key, String value){\n+    return HddsProtos.KeyValue.newBuilder()\n+        .setKey(key)\n+        .setValue(value)\n+        .build();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.PrefixInfo getDefaultTestPrefixInfo(\n+      String name, String aclString, HddsProtos.KeyValue metadata){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM2OTkzNQ==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493369935", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODE3OA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493278178", "body": "```suggestion\r\n      String key, String value) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  String key, String value){\n          \n          \n            \n                  String key, String value) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">String</span> key, <span class=\"pl-smi\">String</span> value){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> key, <span class=\"pl-smi\">String</span> value)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:58:33Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private  TestInstanceHelper(){\n+    super();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.OzoneAclInfo buildTestOzoneAclInfo(\n+      String aclString){\n+    OzoneAcl oacl = OzoneAcl.parseAcl(aclString);\n+    ByteString rights = ByteString.copyFrom(oacl.getAclBitSet().toByteArray());\n+    return OzoneManagerProtocolProtos.OzoneAclInfo.newBuilder()\n+        .setType(OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType.USER)\n+        .setName(oacl.getName())\n+        .setRights(rights)\n+        .setAclScope(OzoneManagerProtocolProtos.\n+            OzoneAclInfo.OzoneAclScope.ACCESS)\n+        .build();\n+  }\n+\n+  public static HddsProtos.KeyValue getDefaultTestMetadata(\n+      String key, String value){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM3MDAxNw==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493370017", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODE3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODMwNA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493278304", "body": "```suggestion\r\n      String aclString) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  String aclString){\n          \n          \n            \n                  String aclString) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">String</span> aclString){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> aclString)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cxorm", "createdAt": "2020-09-23T07:58:40Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private  TestInstanceHelper(){\n+    super();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.OzoneAclInfo buildTestOzoneAclInfo(\n+      String aclString){", "originalCommit": "a01af2e66f81c1e26eeadfd7354e8ef37cde075f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM3MDA5Mg==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r493370092", "bodyText": "done", "author": "llemec", "createdAt": "2020-09-23T09:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3ODMwNA=="}], "type": "inlineReview"}, {"oid": "c95bc0b6a069cf92dff5283421fa7504c1f39208", "url": "https://github.com/apache/ozone/commit/c95bc0b6a069cf92dff5283421fa7504c1f39208", "message": "correct formatting as suggested in pr review by cxorm", "committedDate": "2020-09-23T09:31:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk5NjA1Mg==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r498996052", "body": "I think using `OzoneAcl.toProtobuf` for testing protobuf conversion of objects other than `OzoneAcl` is valid.  `TestOzoneAcl` of course needs to avoid that.\r\n\r\nNote: this would also fix the problem that `buildTestOzoneAclInfo` currently ignores identity type (user/group) in the input and returns a user ACL even for `\"group:...\"`.\r\n\r\n```suggestion\r\n    return OzoneAcl.toProtobuf(oacl);\r\n```", "bodyText": "I think using OzoneAcl.toProtobuf for testing protobuf conversion of objects other than OzoneAcl is valid.  TestOzoneAcl of course needs to avoid that.\nNote: this would also fix the problem that buildTestOzoneAclInfo currently ignores identity type (user/group) in the input and returns a user ACL even for \"group:...\".\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ByteString rights = ByteString.copyFrom(oacl.getAclBitSet().toByteArray());\n          \n          \n            \n                return OzoneManagerProtocolProtos.OzoneAclInfo.newBuilder()\n          \n          \n            \n                    .setType(OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType.USER)\n          \n          \n            \n                    .setName(oacl.getName())\n          \n          \n            \n                    .setRights(rights)\n          \n          \n            \n                    .setAclScope(OzoneManagerProtocolProtos.\n          \n          \n            \n                        OzoneAclInfo.OzoneAclScope.ACCESS)\n          \n          \n            \n                    .build();\n          \n          \n            \n                return OzoneAcl.toProtobuf(oacl);", "bodyHTML": "<p dir=\"auto\">I think using <code>OzoneAcl.toProtobuf</code> for testing protobuf conversion of objects other than <code>OzoneAcl</code> is valid.  <code>TestOzoneAcl</code> of course needs to avoid that.</p>\n<p dir=\"auto\">Note: this would also fix the problem that <code>buildTestOzoneAclInfo</code> currently ignores identity type (user/group) in the input and returns a user ACL even for <code>\"group:...\"</code>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">ByteString</span> rights <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ByteString</span><span class=\"pl-k\">.</span>copyFrom(oacl<span class=\"pl-k\">.</span>getAclBitSet()<span class=\"pl-k\">.</span>toByteArray());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">OzoneManagerProtocolProtos</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">OzoneAclInfo</span><span class=\"pl-k\">.</span>newBuilder()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .setType(<span class=\"pl-smi\">OzoneManagerProtocolProtos</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">OzoneAclInfo</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">OzoneAclType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>USER</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .setName(oacl<span class=\"pl-k\">.</span>getName())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .setRights(rights)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .setAclScope(<span class=\"pl-smi\">OzoneManagerProtocolProtos</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">OzoneAclInfo</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">OzoneAclScope</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ACCESS</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .build();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">OzoneAcl</span><span class=\"pl-k\">.</span>toProtobuf(oacl);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "adoroszlai", "createdAt": "2020-10-02T18:53:45Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private TestInstanceHelper(){\n+    super();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.OzoneAclInfo buildTestOzoneAclInfo(\n+      String aclString){\n+    OzoneAcl oacl = OzoneAcl.parseAcl(aclString);\n+    ByteString rights = ByteString.copyFrom(oacl.getAclBitSet().toByteArray());\n+    return OzoneManagerProtocolProtos.OzoneAclInfo.newBuilder()\n+        .setType(OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType.USER)\n+        .setName(oacl.getName())\n+        .setRights(rights)\n+        .setAclScope(OzoneManagerProtocolProtos.\n+            OzoneAclInfo.OzoneAclScope.ACCESS)\n+        .build();", "originalCommit": "c95bc0b6a069cf92dff5283421fa7504c1f39208", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAwNzU0Ng==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r499007546", "body": "I don't think there is much \"default\" in these `getDefaultTest...` methods, as (most) data still has to be provided.  They are just factory methods wrapping the builders, trading flexibility and readability for slightly shorter code.  (Builder is more flexible since it can accept eg. multiple ACLs, and more readable because each argument is passed to a named method instead of a bunch of arguments to a single constructor.)\r\n\r\nInstead of such generic factory methods, I suggest adding:\r\n\r\n * ones that create objects with specific properties relevant for the tests \r\n * ones that fill irrelevant properties with random data (eg. for the metadata key-value pair)", "bodyText": "I don't think there is much \"default\" in these getDefaultTest... methods, as (most) data still has to be provided.  They are just factory methods wrapping the builders, trading flexibility and readability for slightly shorter code.  (Builder is more flexible since it can accept eg. multiple ACLs, and more readable because each argument is passed to a named method instead of a bunch of arguments to a single constructor.)\nInstead of such generic factory methods, I suggest adding:\n\nones that create objects with specific properties relevant for the tests\nones that fill irrelevant properties with random data (eg. for the metadata key-value pair)", "bodyHTML": "<p dir=\"auto\">I don't think there is much \"default\" in these <code>getDefaultTest...</code> methods, as (most) data still has to be provided.  They are just factory methods wrapping the builders, trading flexibility and readability for slightly shorter code.  (Builder is more flexible since it can accept eg. multiple ACLs, and more readable because each argument is passed to a named method instead of a bunch of arguments to a single constructor.)</p>\n<p dir=\"auto\">Instead of such generic factory methods, I suggest adding:</p>\n<ul dir=\"auto\">\n<li>ones that create objects with specific properties relevant for the tests</li>\n<li>ones that fill irrelevant properties with random data (eg. for the metadata key-value pair)</li>\n</ul>", "author": "adoroszlai", "createdAt": "2020-10-02T19:20:22Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestInstanceHelper.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.om.helpers;\n+\n+import com.google.protobuf.ByteString;\n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n+import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n+\n+\n+/**\n+ * Test TestInstanceHelper.\n+ *\n+ * Utility methods to create test instances of protobuf related classes\n+ */\n+public final class TestInstanceHelper {\n+\n+  private TestInstanceHelper(){\n+    super();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.OzoneAclInfo buildTestOzoneAclInfo(\n+      String aclString){\n+    OzoneAcl oacl = OzoneAcl.parseAcl(aclString);\n+    ByteString rights = ByteString.copyFrom(oacl.getAclBitSet().toByteArray());\n+    return OzoneManagerProtocolProtos.OzoneAclInfo.newBuilder()\n+        .setType(OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType.USER)\n+        .setName(oacl.getName())\n+        .setRights(rights)\n+        .setAclScope(OzoneManagerProtocolProtos.\n+            OzoneAclInfo.OzoneAclScope.ACCESS)\n+        .build();\n+  }\n+\n+  public static HddsProtos.KeyValue getDefaultTestMetadata(\n+      String key, String value) {\n+    return HddsProtos.KeyValue.newBuilder()\n+        .setKey(key)\n+        .setValue(value)\n+        .build();\n+  }\n+\n+  public static OzoneManagerProtocolProtos.PrefixInfo getDefaultTestPrefixInfo(", "originalCommit": "c95bc0b6a069cf92dff5283421fa7504c1f39208", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMTIwNA==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r499011204", "body": "Nit: unnecessary new empty line.", "bodyText": "Nit: unnecessary new empty line.", "bodyHTML": "<p dir=\"auto\">Nit: unnecessary new empty line.</p>", "author": "adoroszlai", "createdAt": "2020-10-02T19:28:52Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmPrefixInfo.java", "diffHunk": "@@ -18,39 +18,91 @@\n \n package org.apache.hadoop.ozone.om.helpers;\n \n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;\n import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Collections;\n import java.util.HashMap;\n \n+", "originalCommit": "c95bc0b6a069cf92dff5283421fa7504c1f39208", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0NTE1Nw==", "url": "https://github.com/apache/ozone/pull/1425#discussion_r500745157", "body": "It could be improved by accepting an `OzoneAcl` instead of a group ACL-related parameters.", "bodyText": "It could be improved by accepting an OzoneAcl instead of a group ACL-related parameters.", "bodyHTML": "<p dir=\"auto\">It could be improved by accepting an <code>OzoneAcl</code> instead of a group ACL-related parameters.</p>", "author": "adoroszlai", "createdAt": "2020-10-07T05:26:29Z", "path": "hadoop-ozone/common/src/test/java/org/apache/hadoop/ozone/om/helpers/TestOmPrefixInfo.java", "diffHunk": "@@ -18,39 +18,91 @@\n \n package org.apache.hadoop.ozone.om.helpers;\n \n+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;\n import org.apache.hadoop.ozone.OzoneAcl;\n+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;\n import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;\n import org.junit.Assert;\n import org.junit.Test;\n \n import java.util.Collections;\n import java.util.HashMap;\n \n+\n import static org.apache.hadoop.ozone.OzoneAcl.AclScope.ACCESS;\n \n /**\n  * Class to test OmPrefixInfo.\n  */\n public class TestOmPrefixInfo {\n \n-  @Test\n-  public void testCopyObject() {\n-    OmPrefixInfo omPrefixInfo = new OmPrefixInfo(\"/path\",\n+  public OmPrefixInfo getOmPrefixInfoForTest(String path,\n+      IAccessAuthorizer.ACLIdentityType identityType,\n+      String identityString,\n+      IAccessAuthorizer.ACLType aclType,\n+      OzoneAcl.AclScope scope) {", "originalCommit": "c95bc0b6a069cf92dff5283421fa7504c1f39208", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4ab111d165b9f78500b035bf85bdee45d6bfd80f", "url": "https://github.com/apache/ozone/commit/4ab111d165b9f78500b035bf85bdee45d6bfd80f", "message": "Merge remote-tracking branch 'origin/master' into HDDS-2981", "committedDate": "2021-01-07T17:49:26Z", "type": "commit"}, {"oid": "8aaa6c46538047ec97a66bf844ca490290366ee8", "url": "https://github.com/apache/ozone/commit/8aaa6c46538047ec97a66bf844ca490290366ee8", "message": "Resolve merge conflicts", "committedDate": "2021-01-07T19:45:17Z", "type": "commit"}, {"oid": "5607dcd17de8b28bc2599fe8e77b4514323875e9", "url": "https://github.com/apache/ozone/commit/5607dcd17de8b28bc2599fe8e77b4514323875e9", "message": "Fix checkstyle", "committedDate": "2021-01-07T21:41:27Z", "type": "commit"}, {"oid": "75a0990331588ca6d0f7d839c53303ccfea5be33", "url": "https://github.com/apache/ozone/commit/75a0990331588ca6d0f7d839c53303ccfea5be33", "message": "trigger new CI check", "committedDate": "2021-01-08T07:28:07Z", "type": "commit"}, {"oid": "ef68d6757b284af4d8c8bb16fe0536e2d9d9488b", "url": "https://github.com/apache/ozone/commit/ef68d6757b284af4d8c8bb16fe0536e2d9d9488b", "message": "Merge remote-tracking branch 'origin/master' into HDDS-2981", "committedDate": "2021-03-15T07:14:07Z", "type": "commit"}]}