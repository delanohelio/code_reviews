{"pr_number": 1398, "pr_title": "HDDS-4210. ResolveBucket during checkAcls fails.", "pr_author": "bharatviswa504", "pr_createdAt": "2020-09-04T21:21:33Z", "pr_url": "https://github.com/apache/ozone/pull/1398", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyOTk5NQ==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r483929995", "body": "We already have acceptance test for links, but currently it is only run in non-HA setup.  Instead of adding integration test, I think we should run the existing test in HA setup, too:\r\n\r\n```\r\nexecute_robot_test scm basic/links.robot\r\n```\r\n\r\ncould be added to `hadoop-ozone/dist/src/main/compose/ozonesecure-om-ha/test.sh` and maybe `hadoop-ozone/dist/src/main/compose/ozone-om-ha-s3/test.sh`.\r\n\r\nThis confirms the bug and the fix.\r\n\r\nHowever, I also see two of the test cases failing with the fix:\r\n\r\n```\r\nCannot follow link without read access                                | FAIL |\r\nACL verified on source bucket                                         | FAIL |\r\n```", "bodyText": "We already have acceptance test for links, but currently it is only run in non-HA setup.  Instead of adding integration test, I think we should run the existing test in HA setup, too:\nexecute_robot_test scm basic/links.robot\n\ncould be added to hadoop-ozone/dist/src/main/compose/ozonesecure-om-ha/test.sh and maybe hadoop-ozone/dist/src/main/compose/ozone-om-ha-s3/test.sh.\nThis confirms the bug and the fix.\nHowever, I also see two of the test cases failing with the fix:\nCannot follow link without read access                                | FAIL |\nACL verified on source bucket                                         | FAIL |", "bodyHTML": "<p dir=\"auto\">We already have acceptance test for links, but currently it is only run in non-HA setup.  Instead of adding integration test, I think we should run the existing test in HA setup, too:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"execute_robot_test scm basic/links.robot\n\"><pre><code>execute_robot_test scm basic/links.robot\n</code></pre></div>\n<p dir=\"auto\">could be added to <code>hadoop-ozone/dist/src/main/compose/ozonesecure-om-ha/test.sh</code> and maybe <code>hadoop-ozone/dist/src/main/compose/ozone-om-ha-s3/test.sh</code>.</p>\n<p dir=\"auto\">This confirms the bug and the fix.</p>\n<p dir=\"auto\">However, I also see two of the test cases failing with the fix:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Cannot follow link without read access                                | FAIL |\nACL verified on source bucket                                         | FAIL |\n\"><pre><code>Cannot follow link without read access                                | FAIL |\nACL verified on source bucket                                         | FAIL |\n</code></pre></div>", "author": "adoroszlai", "createdAt": "2020-09-05T09:01:24Z", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/om/TestOzoneManagerHAWithData.java", "diffHunk": "@@ -69,6 +70,38 @@ public void testAllOMNodesRunning() throws Exception {\n     createKeyTest(true);\n   }\n \n+  @Test\n+  public void testBucketLinkOps() throws Exception {", "originalCommit": "e966ddf5c91376f8bd7f6b2d4a396d8c55a2afab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE4MTk3Nw==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r487181977", "bodyText": "Thanks for the tip. Enabled docker-compose tests.", "author": "bharatviswa504", "createdAt": "2020-09-11T17:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyOTk5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMDA5MQ==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r483930091", "body": "Would it be possible to replace the original `resolveBucketLink` method with this one, instead of duplicating it?", "bodyText": "Would it be possible to replace the original resolveBucketLink method with this one, instead of duplicating it?", "bodyHTML": "<p dir=\"auto\">Would it be possible to replace the original <code>resolveBucketLink</code> method with this one, instead of duplicating it?</p>", "author": "adoroszlai", "createdAt": "2020-09-05T09:02:33Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3523,6 +3533,47 @@ public ResolvedBucket resolveBucketLink(Pair<String, String> requested)\n         visited);\n   }\n \n+  /**\n+   * Resolves bucket symlinks. Read permission is required for following links.\n+   *\n+   * @param volumeAndBucket the bucket to be resolved (if it is a link)\n+   * @param {@link OMClientRequest}  which has information required to check\n+   * permission.\n+   * @param visited collects link buckets visited during the resolution to\n+   *   avoid infinite loops\n+   * @return bucket location possibly updated with its actual volume and bucket\n+   *   after following bucket links\n+   * @throws IOException (most likely OMException) if ACL check fails, bucket is\n+   *   not found, loop is detected in the links, etc.\n+   */\n+  private Pair<String, String> resolveBucketLink(\n+      Pair<String, String> volumeAndBucket,\n+      Set<Pair<String, String>> visited,\n+      OMClientRequest omClientRequest) throws IOException {", "originalCommit": "e966ddf5c91376f8bd7f6b2d4a396d8c55a2afab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEwMDU0MQ==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r485100541", "bodyText": "+1 for that. Also suggest separate related members from OMCleintRequest (HA) before passing them to OzoneManager (non-HA).", "author": "xiaoyuyao", "createdAt": "2020-09-08T17:59:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMDA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3ODI1OA==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r487178258", "bodyText": "Made few changes to not to duplicate code.", "author": "bharatviswa504", "createdAt": "2020-09-11T17:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMDA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNDc0OA==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r487834748", "bodyText": "Thanks!", "author": "adoroszlai", "createdAt": "2020-09-14T11:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMDA5MQ=="}], "type": "inlineReview"}, {"oid": "01e4e340ba3d0dba1314e1fbf55bc65ac6fff589", "url": "https://github.com/apache/ozone/commit/01e4e340ba3d0dba1314e1fbf55bc65ac6fff589", "message": "HDDS-4210. ResolveBucket during checkAcls fails.", "committedDate": "2020-09-10T21:15:22Z", "type": "commit"}, {"oid": "46478f56d09a2f7f3c757ffba744168af1190d1a", "url": "https://github.com/apache/ozone/commit/46478f56d09a2f7f3c757ffba744168af1190d1a", "message": "fix cs", "committedDate": "2020-09-10T21:15:22Z", "type": "commit"}, {"oid": "2f43ac91bb58ed0e480e9a92f0ee757572dce07d", "url": "https://github.com/apache/ozone/commit/2f43ac91bb58ed0e480e9a92f0ee757572dce07d", "message": "fix review comments and few more changes to create ugi and address only once", "committedDate": "2020-09-10T21:15:22Z", "type": "commit"}, {"oid": "8d15aca22d38a85335aadd04313267262a99310e", "url": "https://github.com/apache/ozone/commit/8d15aca22d38a85335aadd04313267262a99310e", "message": "few more changes to test", "committedDate": "2020-09-10T23:12:10Z", "type": "commit"}, {"oid": "759a912093c29a1f4d3d725b82601efee7379b16", "url": "https://github.com/apache/ozone/commit/759a912093c29a1f4d3d725b82601efee7379b16", "message": "fix fail test", "committedDate": "2020-09-11T17:09:31Z", "type": "commit"}, {"oid": "759a912093c29a1f4d3d725b82601efee7379b16", "url": "https://github.com/apache/ozone/commit/759a912093c29a1f4d3d725b82601efee7379b16", "message": "fix fail test", "committedDate": "2020-09-11T17:09:31Z", "type": "forcePushed"}, {"oid": "1a6d39b990b8c92b12e51de520500be397b17dc0", "url": "https://github.com/apache/ozone/commit/1a6d39b990b8c92b12e51de520500be397b17dc0", "message": "fix", "committedDate": "2020-09-11T17:12:59Z", "type": "commit"}, {"oid": "fdc8dff930b8a2c97e2b285ce2365414507976e3", "url": "https://github.com/apache/ozone/commit/fdc8dff930b8a2c97e2b285ce2365414507976e3", "message": "fix cs", "committedDate": "2020-09-11T17:53:47Z", "type": "commit"}, {"oid": "1f174a2583bffccfce85feec59f3a97704ae91d1", "url": "https://github.com/apache/ozone/commit/1f174a2583bffccfce85feec59f3a97704ae91d1", "message": "fix cs", "committedDate": "2020-09-11T18:11:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzMTUzNQ==", "url": "https://github.com/apache/ozone/pull/1398#discussion_r487831535", "body": "Nit: to avoid Sonar warning that _\"static\" base class members should not be accessed via derived types_.\r\n\r\n```suggestion\r\n              Server.getRemoteUser(),\r\n              Server.getRemoteIp(),\r\n              Server.getRemoteIp().getHostName());\r\n```", "bodyText": "Nit: to avoid Sonar warning that \"static\" base class members should not be accessed via derived types.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          ProtobufRpcEngine.Server.getRemoteUser(),\n          \n          \n            \n                          ProtobufRpcEngine.Server.getRemoteIp(),\n          \n          \n            \n                          ProtobufRpcEngine.Server.getRemoteIp().getHostName());\n          \n          \n            \n                          Server.getRemoteUser(),\n          \n          \n            \n                          Server.getRemoteIp(),\n          \n          \n            \n                          Server.getRemoteIp().getHostName());", "bodyHTML": "<p dir=\"auto\">Nit: to avoid Sonar warning that <em>\"static\" base class members should not be accessed via derived types</em>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi x x-first\">ProtobufRpcEngine</span><span class=\"pl-k x x-last\">.</span><span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteUser(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi x x-first\">ProtobufRpcEngine</span><span class=\"pl-k x x-last\">.</span><span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteIp(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi x x-first\">ProtobufRpcEngine</span><span class=\"pl-k x x-last\">.</span><span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteIp()<span class=\"pl-k\">.</span>getHostName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteUser(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteIp(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-smi\">Server</span><span class=\"pl-k\">.</span>getRemoteIp()<span class=\"pl-k\">.</span>getHostName());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "adoroszlai", "createdAt": "2020-09-14T11:10:01Z", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -3479,10 +3481,35 @@ public ResolvedBucket resolveBucketLink(OmKeyArgs args)\n         Pair.of(args.getVolumeName(), args.getBucketName()));\n   }\n \n+  public ResolvedBucket resolveBucketLink(Pair<String, String> requested,\n+      OMClientRequest omClientRequest)\n+      throws IOException {\n+    Pair<String, String> resolved;\n+    if (isAclEnabled) {\n+      resolved = resolveBucketLink(requested, new HashSet<>(),\n+              omClientRequest.createUGI(), omClientRequest.getRemoteAddress(),\n+              omClientRequest.getHostName());\n+    } else {\n+      resolved = resolveBucketLink(requested, new HashSet<>(),\n+          null, null, null);\n+    }\n+    return new ResolvedBucket(requested, resolved);\n+  }\n+\n+\n   public ResolvedBucket resolveBucketLink(Pair<String, String> requested)\n       throws IOException {\n-    Pair<String, String> resolved =\n-        resolveBucketLink(requested, new HashSet<>());\n+\n+    Pair<String, String> resolved;\n+    if (isAclEnabled) {\n+      resolved = resolveBucketLink(requested, new HashSet<>(),\n+              ProtobufRpcEngine.Server.getRemoteUser(),\n+              ProtobufRpcEngine.Server.getRemoteIp(),\n+              ProtobufRpcEngine.Server.getRemoteIp().getHostName());", "originalCommit": "1f174a2583bffccfce85feec59f3a97704ae91d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "830b2f7e613d5a73fb4b1c95c9d3a9e160417107", "url": "https://github.com/apache/ozone/commit/830b2f7e613d5a73fb4b1c95c9d3a9e160417107", "message": "Update hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>", "committedDate": "2020-09-14T21:41:24Z", "type": "commit"}]}