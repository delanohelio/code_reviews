{"pr_number": 772, "pr_title": "HDDS-3335. Recon unit tests cleanup.", "pr_author": "avijayanhwx", "pr_createdAt": "2020-04-05T05:37:11Z", "pr_url": "https://github.com/apache/ozone/pull/772", "timeline": [{"oid": "4b544d1de9f6bc9ab3db28072356c6ecf6c744ec", "url": "https://github.com/apache/ozone/commit/4b544d1de9f6bc9ab3db28072356c6ecf6c744ec", "message": "HDDS-3335. Recon unit tests cleanup.", "committedDate": "2020-04-05T05:31:53Z", "type": "commit"}, {"oid": "b2a68112ead6ba4c93aa86ec5d3baebb9d3c3b1f", "url": "https://github.com/apache/ozone/commit/b2a68112ead6ba4c93aa86ec5d3baebb9d3c3b1f", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3335-master", "committedDate": "2020-04-06T15:40:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzODMwMQ==", "url": "https://github.com/apache/ozone/pull/772#discussion_r404338301", "body": "```suggestion\r\n          \r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (reconOMMetadataManager != null) {\n          \n          \n            \n                        bind(ReconOMMetadataManager.class)\n          \n          \n            \n                            .toInstance(reconOMMetadataManager);\n          \n          \n            \n                      }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">if</span> (reconOMMetadataManager <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            bind(<span class=\"pl-smi\">ReconOMMetadataManager</span><span class=\"pl-k\">.</span>class)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .toInstance(reconOMMetadataManager);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          </td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vivekratnavel", "createdAt": "2020-04-06T19:34:15Z", "path": "hadoop-ozone/recon/src/test/java/org/apache/hadoop/ozone/recon/ReconTestInjector.java", "diffHunk": "@@ -0,0 +1,341 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon;\n+\n+import static org.apache.hadoop.hdds.recon.ReconConfigKeys.OZONE_RECON_DATANODE_ADDRESS_KEY;\n+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_DB_DIR;\n+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_OM_SNAPSHOT_DB_DIR;\n+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_SCM_DB_DIR;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.hadoop.hdds.conf.OzoneConfiguration;\n+import org.apache.hadoop.hdds.scm.server.OzoneStorageContainerManager;\n+import org.apache.hadoop.hdds.utils.db.DBStore;\n+import org.apache.hadoop.ozone.recon.persistence.AbstractReconSqlDBTest;\n+import org.apache.hadoop.ozone.recon.recovery.ReconOMMetadataManager;\n+import org.apache.hadoop.ozone.recon.spi.ContainerDBServiceProvider;\n+import org.apache.hadoop.ozone.recon.spi.OzoneManagerServiceProvider;\n+import org.apache.hadoop.ozone.recon.spi.impl.ContainerDBServiceProviderImpl;\n+import org.apache.hadoop.ozone.recon.spi.impl.ReconContainerDBProvider;\n+import org.junit.Assert;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.google.inject.AbstractModule;\n+import com.google.inject.Guice;\n+import com.google.inject.Injector;\n+import com.google.inject.Module;\n+import com.google.inject.Singleton;\n+\n+/**\n+ * Class to setup a recon test injector, with any combination of sub modules\n+ * that are specified. This Recon specific abstraction to Guice API has\n+ * been created to simplify the process of setting up a test environment for\n+ * unit testing.\n+ */\n+public class ReconTestInjector {\n+\n+  private Injector injector;\n+  private OzoneManagerServiceProvider ozoneManagerServiceProvider;\n+  private ReconOMMetadataManager reconOMMetadataManager;\n+  private OzoneStorageContainerManager reconScm;\n+  private AbstractReconSqlDBTest reconSqlDB;\n+  private boolean withContainerDB = false;\n+  private List<Module> additionalModules = new ArrayList<>();\n+  private boolean withReconSqlDb = false;\n+  private TemporaryFolder temporaryFolder;\n+  private Map<Class, Class> extraInheritedBindings = new HashMap<>();\n+  private Map<Class, Object> extraInstanceBindings = new HashMap<>();\n+  private Set<Class> extraClassBindings = new HashSet<>();\n+\n+  public ReconTestInjector(TemporaryFolder temporaryFolder) {\n+    this.temporaryFolder = temporaryFolder;\n+  }\n+\n+  public void setWithReconSqlDb(boolean withReconSqlDb) {\n+    this.withReconSqlDb = withReconSqlDb;\n+  }\n+\n+  public void setOzoneManagerServiceProvider(\n+      OzoneManagerServiceProvider ozoneManagerServiceProvider) {\n+    this.ozoneManagerServiceProvider = ozoneManagerServiceProvider;\n+  }\n+\n+  public void setReconOMMetadataManager(\n+      ReconOMMetadataManager reconOMMetadataManager) {\n+    this.reconOMMetadataManager = reconOMMetadataManager;\n+  }\n+\n+  public void setReconScm(OzoneStorageContainerManager reconScm) {\n+    this.reconScm = reconScm;\n+  }\n+\n+  public void withContainerDB(boolean containerDbIncluded) {\n+    this.withContainerDB = containerDbIncluded;\n+  }\n+\n+  public OzoneManagerServiceProvider getOzoneManagerServiceProvider() {\n+    return ozoneManagerServiceProvider;\n+  }\n+\n+  public ReconOMMetadataManager getReconOMMetadataManager() {\n+    return reconOMMetadataManager;\n+  }\n+\n+  public OzoneStorageContainerManager getReconScm() {\n+    return reconScm;\n+  }\n+\n+  public List<Module> getAdditionalModules() {\n+    return additionalModules;\n+  }\n+\n+  public Map<Class, Object> getExtraInstanceBindings() {\n+    return extraInstanceBindings;\n+  }\n+\n+  public Map<Class, Class> getExtraInheritedBindings() {\n+    return extraInheritedBindings;\n+  }\n+\n+  public Set<Class> getExtraClassBindings() {\n+    return extraClassBindings;\n+  }\n+\n+  /**\n+   * Wrapper to get the bound instance.\n+   * @param type type\n+   * @param <T> type\n+   * @return bound instance of type T.\n+   */\n+  public <T> T getInstance(Class<T> type) {\n+    return injector.getInstance(type);\n+  }\n+\n+  /**\n+   * The goal of the class is to discourage the use of injector to\n+   * create more child injectors explicitly.\n+   * Use this API wisely!\n+   * @return injector.\n+   */\n+  public Injector getInjector() {\n+    return injector;\n+  }\n+\n+  void setupInjector() throws IOException {\n+    List<Module> modules = new ArrayList<>();\n+\n+    modules.add(new AbstractModule() {\n+      @Override\n+      protected void configure() {\n+        try {\n+          bind(OzoneConfiguration.class).toInstance(\n+              getTestOzoneConfiguration(temporaryFolder.newFolder()));\n+\n+          if (reconOMMetadataManager != null) {\n+            bind(ReconOMMetadataManager.class)\n+                .toInstance(reconOMMetadataManager);\n+          }\n+          if (reconOMMetadataManager != null) {\n+            bind(ReconOMMetadataManager.class)\n+                .toInstance(reconOMMetadataManager);\n+          }", "originalCommit": "b2a68112ead6ba4c93aa86ec5d3baebb9d3c3b1f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f849ec2c35dd7b07db9d9bc7e1970c3ca8760d1", "url": "https://github.com/apache/ozone/commit/4f849ec2c35dd7b07db9d9bc7e1970c3ca8760d1", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3335-master", "committedDate": "2020-04-07T15:09:01Z", "type": "commit"}, {"oid": "4f849ec2c35dd7b07db9d9bc7e1970c3ca8760d1", "url": "https://github.com/apache/ozone/commit/4f849ec2c35dd7b07db9d9bc7e1970c3ca8760d1", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3335-master", "committedDate": "2020-04-07T15:09:01Z", "type": "forcePushed"}, {"oid": "9dfe4cb004bdd27a2d54f623d3445d9b3ccafc9c", "url": "https://github.com/apache/ozone/commit/9dfe4cb004bdd27a2d54f623d3445d9b3ccafc9c", "message": "HDDS-3335. Remove redundant lines.", "committedDate": "2020-04-07T15:23:43Z", "type": "commit"}, {"oid": "6354f7f7591300993c8f907b27f2c2c505eb3f37", "url": "https://github.com/apache/ozone/commit/6354f7f7591300993c8f907b27f2c2c505eb3f37", "message": "trigger new CI check", "committedDate": "2020-04-08T06:31:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MDE0MA==", "url": "https://github.com/apache/ozone/pull/772#discussion_r405350140", "body": "Do we need to get the dao again?  `missingContainersTableHandle` already has an instance.", "bodyText": "Do we need to get the dao again?  missingContainersTableHandle already has an instance.", "bodyHTML": "<p dir=\"auto\">Do we need to get the dao again?  <code>missingContainersTableHandle</code> already has an instance.</p>", "author": "adoroszlai", "createdAt": "2020-04-08T08:32:00Z", "path": "hadoop-ozone/recon/src/test/java/org/apache/hadoop/ozone/recon/fsck/TestMissingContainerTask.java", "diffHunk": "@@ -93,12 +82,13 @@ public void testRun() throws Exception {\n     when(containerManagerMock.getContainerReplicas(new ContainerID(3L)))\n         .thenReturn(Collections.emptySet());\n \n-    List<MissingContainers> all = missingContainersTableHandle.findAll();\n+    MissingContainersDao missingContainersDao =\n+        getDao(MissingContainersDao.class);\n+    List<MissingContainers> all = missingContainersDao.findAll();", "originalCommit": "6354f7f7591300993c8f907b27f2c2c505eb3f37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0Mjg4OA==", "url": "https://github.com/apache/ozone/pull/772#discussion_r405642888", "bodyText": "Thank you @adoroszlai. Fixed it.", "author": "avijayanhwx", "createdAt": "2020-04-08T16:10:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MDE0MA=="}], "type": "inlineReview"}, {"oid": "6b9b2d7caa6d55f047d1c9deb5dff80b4e581e1e", "url": "https://github.com/apache/ozone/commit/6b9b2d7caa6d55f047d1c9deb5dff80b4e581e1e", "message": "HDDS-3335. Remove redundant DAO object creation.", "committedDate": "2020-04-08T16:09:44Z", "type": "commit"}, {"oid": "6980371433e8cecb0a6808a03cbfde6392eec754", "url": "https://github.com/apache/ozone/commit/6980371433e8cecb0a6808a03cbfde6392eec754", "message": "Merge branch 'HDDS-3335-master' of github.com:avijayanhwx/hadoop-ozone into HDDS-3335-master", "committedDate": "2020-04-08T16:10:19Z", "type": "commit"}, {"oid": "0636414c3732c372612c83972f92e052d4815271", "url": "https://github.com/apache/ozone/commit/0636414c3732c372612c83972f92e052d4815271", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3335-master", "committedDate": "2020-04-08T17:12:52Z", "type": "commit"}]}