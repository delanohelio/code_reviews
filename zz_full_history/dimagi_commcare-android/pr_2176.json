{"pr_number": 2176, "pr_title": "Update app to target Android 10 ", "pr_author": "ShivamPokhriyal", "pr_createdAt": "2020-01-24T11:21:08Z", "pr_url": "https://github.com/dimagi/commcare-android/pull/2176", "merge_commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NDAzNQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371074035", "body": "Not Sure about the use-case of this particular method, but it won't work with android 10.\r\nAndroid best practices suggest [See 3rd option](https://developer.android.com/training/articles/user-data-ids#best-practices-android-identifiers) using either a random UUID(we'll have to save it in preferences to make sure it doesn't change) or Firebase Instance ID([read here](https://firebase.google.com/docs/reference/android/com/google/firebase/iid/FirebaseInstanceId)). \r\n\r\nThough both of them have a drawback: if application is reinstalled or user clears app data then the id will be lost and a new id will be generated. \r\n\r\nLet me know, if this is something important and should we use one of the above approaches to get a id. ", "bodyText": "Not Sure about the use-case of this particular method, but it won't work with android 10.\nAndroid best practices suggest See 3rd option using either a random UUID(we'll have to save it in preferences to make sure it doesn't change) or Firebase Instance ID(read here).\nThough both of them have a drawback: if application is reinstalled or user clears app data then the id will be lost and a new id will be generated.\nLet me know, if this is something important and should we use one of the above approaches to get a id.", "bodyHTML": "<p dir=\"auto\">Not Sure about the use-case of this particular method, but it won't work with android 10.<br>\nAndroid best practices suggest <a href=\"https://developer.android.com/training/articles/user-data-ids#best-practices-android-identifiers\" rel=\"nofollow\">See 3rd option</a> using either a random UUID(we'll have to save it in preferences to make sure it doesn't change) or Firebase Instance ID(<a href=\"https://firebase.google.com/docs/reference/android/com/google/firebase/iid/FirebaseInstanceId\" rel=\"nofollow\">read here</a>).</p>\n<p dir=\"auto\">Though both of them have a drawback: if application is reinstalled or user clears app data then the id will be lost and a new id will be generated.</p>\n<p dir=\"auto\">Let me know, if this is something important and should we use one of the above approaches to get a id.</p>", "author": "ShivamPokhriyal", "createdAt": "2020-01-27T06:09:06Z", "path": "app/src/org/commcare/CommCareApplication.java", "diffHunk": "@@ -410,20 +410,27 @@ public void initializeGlobalResources(CommCareApp app) {\n     }\r\n \r\n     @NonNull\r\n+    @Deprecated\r\n     public String getPhoneId() {\r", "originalCommit": "4de4064d9bc8a1df5eb88471faea6bb610933f6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0OTYzMw==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371749633", "bodyText": "So deviceId was useful to identify the 2 separate installations of the app. I think using Firebase Instance Id seems like a good workaround here to separate out the installations as we don't have any other id currently that we maintain that's unique per CC installation.", "author": "shubham1g5", "createdAt": "2020-01-28T11:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NDAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMjAyMQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r372932021", "bodyText": "That's annoying, although I suppose it makes sense against the backdrop of other changes.\nMy vote is for a random ID we set on first install (and probably/potentially prefix with an identifier that lets us see that it's different from other device ID's) rather than a Firebase ID. It's not clear to me that it's good practice for us to get dependent on firebase features for apps which we don't want communicating metadata up to us (like apps with analytics disabled) and I could imagine rules about using firebase features like that also evolving in ways that force changes.", "author": "ctsims", "createdAt": "2020-01-30T12:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA3NDAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "91a7ebebf14177c629a6e3025abf01b8c654047c", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex a7d306adc..d3d20e8a2 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -410,27 +410,20 @@ public class CommCareApplication extends MultiDexApplication {\n     }\n \n     @NonNull\n-    @Deprecated\n     public String getPhoneId() {\n-        /**\n-         * https://source.android.com/devices/tech/config/device-identifiers\n-         * https://issuetracker.google.com/issues/129583175#comment10\n-         * Starting from Android 10, apps cannot access non-resettable device ids unless they have special career permission.\n-         * If we still try to access it, SecurityException is thrown.\n-         */\n-//        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n-//            return \"000000000000000\";\n-//        }\n-//\n-//        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n-//        String imei = manager.getDeviceId();\n-//        if (imei == null) {\n-//            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n-//        }\n-//        if (imei == null) {\n-//            imei = \"----\";\n-//        }\n-        return \"----\";\n+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n+            return \"000000000000000\";\n+        }\n+\n+        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n+        String imei = manager.getDeviceId();\n+        if (imei == null) {\n+            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n+        }\n+        if (imei == null) {\n+            imei = \"----\";\n+        }\n+        return imei;\n     }\n \n     public void initializeDefaultLocalizerData() {\n", "next_change": {"commit": "765d2145c1cccd8783e54139123b2464c086425f", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex d3d20e8a2..a7d306adc 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -410,20 +410,27 @@ public class CommCareApplication extends MultiDexApplication {\n     }\n \n     @NonNull\n+    @Deprecated\n     public String getPhoneId() {\n-        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n-            return \"000000000000000\";\n-        }\n-\n-        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n-        String imei = manager.getDeviceId();\n-        if (imei == null) {\n-            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n-        }\n-        if (imei == null) {\n-            imei = \"----\";\n-        }\n-        return imei;\n+        /**\n+         * https://source.android.com/devices/tech/config/device-identifiers\n+         * https://issuetracker.google.com/issues/129583175#comment10\n+         * Starting from Android 10, apps cannot access non-resettable device ids unless they have special career permission.\n+         * If we still try to access it, SecurityException is thrown.\n+         */\n+//        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n+//            return \"000000000000000\";\n+//        }\n+//\n+//        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n+//        String imei = manager.getDeviceId();\n+//        if (imei == null) {\n+//            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n+//        }\n+//        if (imei == null) {\n+//            imei = \"----\";\n+//        }\n+        return \"----\";\n     }\n \n     public void initializeDefaultLocalizerData() {\n", "next_change": {"commit": "c8f22b98c4a8dd174f5a35ef5a843ce7f3acc76f", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex a7d306adc..f60c60342 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -418,19 +419,7 @@ public class CommCareApplication extends MultiDexApplication {\n          * Starting from Android 10, apps cannot access non-resettable device ids unless they have special career permission.\n          * If we still try to access it, SecurityException is thrown.\n          */\n-//        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n-//            return \"000000000000000\";\n-//        }\n-//\n-//        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n-//        String imei = manager.getDeviceId();\n-//        if (imei == null) {\n-//            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n-//        }\n-//        if (imei == null) {\n-//            imei = \"----\";\n-//        }\n-        return \"----\";\n+        return DeviceIdentifier.getDeviceIdentifier(this);\n     }\n \n     public void initializeDefaultLocalizerData() {\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex a7d306adc..117c0a8ca 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -410,7 +411,6 @@ public class CommCareApplication extends MultiDexApplication {\n     }\n \n     @NonNull\n-    @Deprecated\n     public String getPhoneId() {\n         /**\n          * https://source.android.com/devices/tech/config/device-identifiers\n", "next_change": {"commit": "6ff1202295c2dad88fb2cf985dd6f6f3f5bbf813", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex 117c0a8ca..b488c5c1e 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -412,13 +411,19 @@ public class CommCareApplication extends MultiDexApplication {\n \n     @NonNull\n     public String getPhoneId() {\n-        /**\n-         * https://source.android.com/devices/tech/config/device-identifiers\n-         * https://issuetracker.google.com/issues/129583175#comment10\n-         * Starting from Android 10, apps cannot access non-resettable device ids unless they have special career permission.\n-         * If we still try to access it, SecurityException is thrown.\n-         */\n-        return DeviceIdentifier.getDeviceIdentifier(this);\n+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n+            return \"000000000000000\";\n+        }\n+\n+        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n+        String imei = manager.getDeviceId();\n+        if (imei == null) {\n+            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n+        }\n+        if (imei == null) {\n+            imei = \"----\";\n+        }\n+        return imei;\n     }\n \n     public void initializeDefaultLocalizerData() {\n", "next_change": {"commit": "58b11115206038256d4af62a8549a09819ec9e00", "changed_code": [{"header": "diff --git a/app/src/org/commcare/CommCareApplication.java b/app/src/org/commcare/CommCareApplication.java\nindex b488c5c1e..f91ce098b 100644\n--- a/app/src/org/commcare/CommCareApplication.java\n+++ b/app/src/org/commcare/CommCareApplication.java\n", "chunk": "@@ -411,19 +425,13 @@ public class CommCareApplication extends MultiDexApplication {\n \n     @NonNull\n     public String getPhoneId() {\n-        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) == PackageManager.PERMISSION_DENIED) {\n-            return \"000000000000000\";\n-        }\n-\n-        TelephonyManager manager = (TelephonyManager)this.getSystemService(TELEPHONY_SERVICE);\n-        String imei = manager.getDeviceId();\n-        if (imei == null) {\n-            imei = Secure.getString(getContentResolver(), Secure.ANDROID_ID);\n-        }\n-        if (imei == null) {\n-            imei = \"----\";\n-        }\n-        return imei;\n+        /**\n+         * https://source.android.com/devices/tech/config/device-identifiers\n+         * https://issuetracker.google.com/issues/129583175#comment10\n+         * Starting from Android 10, apps cannot access non-resettable device ids unless they have special career permission.\n+         * If we still try to access it, SecurityException is thrown.\n+         */\n+        return DeviceIdentifier.getDeviceIdentifier(this);\n     }\n \n     public void initializeDefaultLocalizerData() {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "6ff1202295c2dad88fb2cf985dd6f6f3f5bbf813", "committedDate": "2020-01-12 01:48:55 +0530", "message": "Refactor to move UpdateTask implementation details to UpdateHelper"}, {"oid": "e75bf254f262afbd770f291b2c68bd6effe80511", "committedDate": "2020-01-17 16:49:48 +0530", "message": "Refining Update Worker"}, {"oid": "374d48858be21894b21b49ecd7d50f8a22e17d37", "committedDate": "2020-01-21 17:13:38 +0530", "message": "Removes old auto updates"}, {"oid": "4f2a2234b49fe03f9db5ac0bc25ab62a260992de", "committedDate": "2020-01-23 10:45:28 +0530", "message": "Removes userCancellationFlag as auto updates can never be cancelled by user"}, {"oid": "64a43cb747b0bf471120274dfa504948636daa84", "committedDate": "2020-01-30 17:44:44 +0530", "message": "Binds updateActivity UI with UpdateWorker, cancel workers on app lifecycle changes"}, {"oid": "902179a7ac968aebe78a09f14f6eba446cdc5eb5", "committedDate": "2020-02-04 17:49:02 +0530", "message": "repackaging updatewoker and updateTask in update module"}, {"oid": "bd2f30c878dfa77008e2e6efd536455e4f82c66f", "committedDate": "2020-02-10 13:43:52 +0530", "message": "PR feedback"}, {"oid": "1ecdf9960b59a5b9a53fb95bc06ff240a524b644", "committedDate": "2020-02-20 11:45:07 +0530", "message": "Schedules Form Submission Work Request"}, {"oid": "58b11115206038256d4af62a8549a09819ec9e00", "committedDate": "2020-03-05 18:07:06 +0530", "message": "Merge branch 'master' into formSubmissionsScheduling"}, {"oid": "ed89492e121dd2ca77f432614e652b408f49c934", "committedDate": "2020-03-05 18:10:45 +0530", "message": "removes syncPending var"}, {"oid": "abb135fa8163520d54ae0d848809c577b761169d", "committedDate": "2020-03-05 18:44:58 +0530", "message": "Merge branch 'master' into autoUpdateScheduling"}, {"oid": "8fc4466b53a74d54268d70109537c70b1e899cb3", "committedDate": "2020-03-05 18:45:51 +0530", "message": "Merge branch 'autoUpdateScheduling' into formSubmissionsScheduling"}, {"oid": "96c26ce226d5b1fdf448b9b23cb5d9e1e3917a58", "committedDate": "2020-03-08 11:45:31 +0530", "message": "Fix tests"}, {"oid": "7f85c618b7c43283aedd3e2e2795a14195f354d7", "committedDate": "2020-03-11 17:55:05 +0530", "message": "Adds flag to disable work manager tasks"}, {"oid": "3b928dd1acd5376fe7cbfd4cd99ca9b36b27b80a", "committedDate": "2020-03-20 12:50:23 +0530", "message": "Makes auto update periodicity dependent on app settings auto-update-frequency"}, {"oid": "6db06b2935d2b52b061e98f043db02223df6371d", "committedDate": "2020-03-20 12:55:53 +0530", "message": "Merge branch 'autoUpdateScheduling' into formSubmissionsScheduling"}, {"oid": "2a5a659e034698f083e50e264bb96ff865e4de4b", "committedDate": "2020-04-09 13:59:44 +0530", "message": "init kujaku"}, {"oid": "ac15c0b2726ad3555c9292130320e4ed6cda39e1", "committedDate": "2020-04-09 14:26:58 +0530", "message": "Skips Kujaku for test"}, {"oid": "c2adfc93857755e9ebfd281e97af623f97fd5423", "committedDate": "2020-04-09 17:25:10 +0530", "message": "Merge branch 'master' into formSubmissionsScheduling"}, {"oid": "d300f2049f7715f4d34becd72cf90f7dd1b7dc8a", "committedDate": "2020-04-12 23:35:22 +0530", "message": "Imports"}, {"oid": "457e56c4908a2ca6aa8b862cee4305714dfc367b", "committedDate": "2020-04-12 23:41:51 +0530", "message": "Merge branch 'formSubmissionsScheduling' into multimediaChanges"}, {"oid": "12b64a874f189b73e5f01fa44d0bb798f53318d8", "committedDate": "2020-04-15 12:38:39 +0530", "message": "Schedules download for missing media"}, {"oid": "961854a652c2df8e901db27c3af5b2457fbf1be5", "committedDate": "2020-04-21 17:09:16 +0530", "message": "Merge branch 'formSubmissionsScheduling' into kujaku"}, {"oid": "06cf3026b43502032b496b5e5221f70baf83bf9e", "committedDate": "2020-04-21 17:24:20 +0530", "message": "Remove init from Application"}, {"oid": "3528b6e2093ba209873e772463035d91488af79b", "committedDate": "2020-05-01 19:33:16 +0530", "message": "Adds structure to request individual media"}, {"oid": "3d9fb621787eac8de012b36d267da505a3d63e43", "committedDate": "2020-05-12 10:35:19 +0530", "message": "Upgrade to the Firebase Crashlytics SDK"}, {"oid": "91714f41fe9df33f7a21a610891442808c81fc06", "committedDate": "2020-05-19 15:50:27 -0400", "message": "allow tls 1.2 on Android 19"}, {"oid": "630647502a4fd3326742059335e015db374d1b4b", "committedDate": "2020-05-20 19:00:12 +0530", "message": "comments"}, {"oid": "cb2eaf9b04214fc24da5961b4d4d04c440e57204", "committedDate": "2020-05-20 17:02:45 -0400", "message": "Explore using Conscript explicitly for older platforms to allow for more robust cipher support"}, {"oid": "250cb5c3d3898121c11d9694e184b3964bd2879d", "committedDate": "2020-05-20 17:27:28 -0400", "message": "horrible hacky way to fix tests"}, {"oid": "db16896a3b918552db44191c4c55a9fe9c32b65a", "committedDate": "2020-05-21 01:25:40 -0400", "message": "Much cleaner method for preventing test issues"}, {"oid": "91e661619086b2d293329f01a1e20e8aabd38340", "committedDate": "2020-05-26 19:16:16 +0530", "message": "Merge pull request #2183 from dimagi/crashlytics-upgrade"}, {"oid": "e5d6ca967d843a32b9f342c51689f62c644fe91d", "committedDate": "2020-05-28 21:54:49 +0530", "message": "Merge branch 'master' into kujaku"}, {"oid": "bed4a6f7a6e795d5eebbc7688179775663027670", "committedDate": "2020-05-29 14:35:05 +0530", "message": "Merge branch 'master' into multimediaChanges"}, {"oid": "9865305a623cea4a4aa9125c70e960d46dbf16ce", "committedDate": "2020-05-29 14:41:47 +0530", "message": "Merge branch 'master' into multimediaChanges"}, {"oid": "a398369a989ae8ac04eef1b9a930b8dee68b302a", "committedDate": "2020-05-29 15:03:07 +0530", "message": "Cancellation on unseat"}, {"oid": "3a20d0ca8f965b9ee6aaac5c29f9a9ee56f3eb62", "committedDate": "2020-06-06 18:04:53 +0530", "message": "Loops over lazy resources to install missing media"}, {"oid": "2e5489fcb1044fd4b380630c14e246ffcd56a54c", "committedDate": "2020-06-08 11:17:13 +0530", "message": "Add table plugin to markwon"}, {"oid": "bd767b986f3d2ae5f3f597111920f7a84834d176", "committedDate": "2020-06-09 18:05:08 +0530", "message": "Supports strikethrough"}, {"oid": "e7a9d58d5bc83c75892a6032dd5c81819ef0ff9e", "committedDate": "2020-06-10 15:17:37 +0530", "message": "checks for null app while cacelling work"}, {"oid": "aa2f083daeea56b44369f467602aff34bf008a95", "committedDate": "2020-06-12 15:09:07 +0530", "message": "Merge branch 'master' into commcare_2.49"}, {"oid": "79a715ae29bd61bf78ead6e4fd35fcaab67c9f1e", "committedDate": "2020-07-08 16:53:32 +0530", "message": "Use custom application class in androidTests"}, {"oid": "6cc258f7554926f0427e3a17d2f146db53142fbe", "committedDate": "2020-08-04 00:56:18 +0530", "message": "removes the tls 1.2 okhttp settings as it seems to be handled well by conscrypt"}, {"oid": "5443e4bc7c047e61892df73b5a5c23fb7d4f2a0b", "committedDate": "2020-08-04 14:27:37 +0530", "message": "cleanup"}, {"oid": "353363f67337e1a9e2bc526af1ba519375135f90", "committedDate": "2020-08-13 23:59:42 +0530", "message": "removes custom instrumentation config"}, {"oid": "8ee492d386fd6d48dacc366d70af3b6d37e9acdf", "committedDate": "2020-09-11 14:50:18 +0530", "message": "Merge branch 'master' into tables"}, {"oid": "7a661d6773a56708826ca17db70600f8a9dd8eae", "committedDate": "2020-11-05 15:52:20 +0530", "message": "Add one time task to cleanup raw media"}, {"oid": "dca2258d886764bb38774e49885fc4f42417b3b1", "committedDate": "2020-11-16 12:37:39 +0530", "message": "Remove duplicate commcareVersion from strings.xml"}, {"oid": "c5979e389e8b5a48800e0f6d6dc1f019f7b69fc7", "committedDate": "2020-11-19 15:03:11 +0530", "message": "Adds Lets Encrypt ISG cert"}, {"oid": "f9c71434402b5923b34732c6562c79f74d929054", "committedDate": "2020-11-19 17:50:03 +0530", "message": "test for ISRG cert"}, {"oid": "989086896639bbbf6425052ce576a25d6e6c0e12", "committedDate": "2020-11-26 19:15:35 +0530", "message": "Initialize TLS1.2 before adding the isrg cert"}, {"oid": "19e92a8d0c1205194326b244a8fdf431079f7254", "committedDate": "2020-12-03 15:22:40 +0530", "message": "Merge branch 'master' into commcare_2.50"}, {"oid": "0e1d6fbf1dd6f620467fadafb4a3d443127bcc9b", "committedDate": "2020-12-09 17:28:17 -0500", "message": "Tests for query prompt default values"}, {"oid": "76505e611e647f864a8fe7a50d75815f57c10515", "committedDate": "2021-01-22 20:09:58 +0530", "message": "Fix linking to external files"}, {"oid": "ea200c9dff85b967b11ea835b3152b61ebb089b8", "committedDate": "2021-03-16 20:47:19 +0530", "message": "Rename SessionActivityRegistration -> SessionRegistrationHelper"}, {"oid": "0d352bb1799b3aad03259d0b8dbf168e6629d3c2", "committedDate": "2021-06-09 10:59:57 +0530", "message": "Rotate large x axis labels on UCRs"}, {"oid": "4de95f2d6eacae428f3fcba9540c3456676a4fd0", "committedDate": "2021-07-12 13:04:29 +0530", "message": "Remove setting height"}, {"oid": "5f2e8d1b0d0922a2006b192f8a71ae623f85b87e", "committedDate": "2021-07-12 13:46:22 +0530", "message": "Use character limit on graph label"}, {"oid": "691186a34c8578f40b326c61a80b7067b96405fe", "committedDate": "2022-03-07 11:38:24 +0530", "message": "Fixes bacground session starts by login broadcast"}, {"oid": "9d4d1c0a7975ab8d2eea4a7c1ba3c03bd4d5a87a", "committedDate": "2022-03-07 16:32:50 +0530", "message": "Shows notification even if the user is null to comply with always showing notification for foreground service"}, {"oid": "2eb62de9e60b7d6e84944ff2dd453dcf0777bebe", "committedDate": "2022-07-21 10:16:17 +0530", "message": "Implements AppDependenciesList UI"}, {"oid": "edbec8859bbf21373d7f20986c4e63fec91f7666", "committedDate": "2022-07-21 10:17:04 +0530", "message": "Revert \"Implements AppDependenciesList UI\""}, {"oid": "aa41b6fe283df9f94a4669c440269ca0d07489a2", "committedDate": "2022-08-03 18:52:11 +0530", "message": "show unsatisfied dependencies list in the dialog"}, {"oid": "4a87357e32347bbf228ed22e0ce2c83b4aa6d887", "committedDate": "2022-08-04 14:05:34 +0530", "message": "revert strict mode setting mistakenly committed"}, {"oid": "6a8d611cd2f8dcd5afd8edaa23c8aee7701a2581", "committedDate": "2022-08-10 16:53:36 +0530", "message": "mock manually as mockk is proving to be trouble in Instrumentation tests"}, {"oid": "4cae84b9b17968903a4d5cb6ca6d03db9dcff9eb", "committedDate": "2022-09-16 21:52:52 +0530", "message": "Adds support for adding multimap params to network requests"}, {"oid": "606ba82f290e818b90e9a10f4cfca5dfa87b796a", "committedDate": "2022-09-23 18:37:19 +0530", "message": "make query params for all requests as multimap"}, {"oid": "a2a750ee1cd0022954d299311787a25a2a38f610", "committedDate": "2022-11-02 17:49:06 +0400", "message": "Merge branch 'master' into formplayerUpdate"}, {"oid": "8ca3fae2cd483b704bc9dfad480bb892f8c01db2", "committedDate": "2023-03-09 13:55:41 +0530", "message": "disbaling death on strict mode violations"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNjIyNQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371736225", "body": "Though I'm not sure whether we should be adding all the files to the content provider. \r\nIMO, it makes sense for the video that are recorded using the record button in app, but for videos that are chosen from gallery, we just make a copy of that inside our app's directory so if we add it to content provider there'll be 2 copies of the same video shown to the user in the gallery app. ", "bodyText": "Though I'm not sure whether we should be adding all the files to the content provider.\nIMO, it makes sense for the video that are recorded using the record button in app, but for videos that are chosen from gallery, we just make a copy of that inside our app's directory so if we add it to content provider there'll be 2 copies of the same video shown to the user in the gallery app.", "bodyHTML": "<p dir=\"auto\">Though I'm not sure whether we should be adding all the files to the content provider.<br>\nIMO, it makes sense for the video that are recorded using the record button in app, but for videos that are chosen from gallery, we just make a copy of that inside our app's directory so if we add it to content provider there'll be 2 copies of the same video shown to the user in the gallery app.</p>", "author": "ShivamPokhriyal", "createdAt": "2020-01-28T11:01:14Z", "path": "app/src/org/commcare/views/widgets/MediaWidget.java", "diffHunk": "@@ -237,21 +235,12 @@ public void setBinaryData(Object binaryuri) {\n             }\n         }\n \n-        if (newMedia.exists()) {\n-            // Add the copy to the content provider", "originalCommit": "ce3eda49affec893200ab103d1affaeaf57f0c54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1OTYzMA==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371759630", "bodyText": "Agree that we should not save it to content Providers. @ctsims we did remove it for Images sometime back in here, so guessing no objections in removing them for audio and videos as well.", "author": "shubham1g5", "createdAt": "2020-01-28T11:57:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNjIyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkzMzA4Mw==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r372933083", "bodyText": "Totally agree that we should remove adding stuff to the content provider. That was old, weird ODK behavior that I think is harmful.", "author": "ctsims", "createdAt": "2020-01-30T12:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNjIyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "91a7ebebf14177c629a6e3025abf01b8c654047c", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..09532d7e9 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +237,21 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n+            // Add the copy to the content provider\n+            ContentValues values = new ContentValues(6);\n+            values.put(MediaStore.Audio.Media.TITLE, newMedia.getName());\n+            values.put(MediaStore.Audio.Media.DISPLAY_NAME, newMedia.getName());\n+            values.put(MediaStore.Audio.Media.DATE_ADDED, System.currentTimeMillis());\n+            values.put(MediaStore.Audio.Media.DATA, newMedia.getAbsolutePath());\n+\n+            Uri mediaUri =\n+                    getContext().getContentResolver().insert(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, values);\n+            String mediaUriString = mediaUri == null ? \"null\" : mediaUri.toString();\n+            Log.i(TAG, \"Inserting media returned uri = \" + mediaUriString);\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n+        } else {\n             Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "572ad9f18b9d3bd11802dec523136e57dd11e919", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 09532d7e9..7c3cf3a63 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -237,21 +235,12 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        if (newMedia.exists()) {\n-            // Add the copy to the content provider\n-            ContentValues values = new ContentValues(6);\n-            values.put(MediaStore.Audio.Media.TITLE, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DISPLAY_NAME, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DATE_ADDED, System.currentTimeMillis());\n-            values.put(MediaStore.Audio.Media.DATA, newMedia.getAbsolutePath());\n-\n-            Uri mediaUri =\n-                    getContext().getContentResolver().insert(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, values);\n-            String mediaUriString = mediaUri == null ? \"null\" : mediaUri.toString();\n-            Log.i(TAG, \"Inserting media returned uri = \" + mediaUriString);\n+        try {\n+            FileUtil.addMediaToGallery(getContext(), newMedia);\n             showToast(\"form.attachment.success\");\n-        } else {\n+        } catch (Exception e) {\n             Log.e(TAG, \"Inserting media file FAILED\");\n+            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "614e927891fab52212ee364e453fbc0548af9633", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..aeca8bf5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +235,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n-            Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..aeca8bf5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +235,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n-            Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "20388d5a2c6618e54b8fddc7da3bc87f0b52cff3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex aeca8bf5a..fed3e70ff 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -204,37 +235,13 @@ public abstract class MediaWidget extends QuestionWidget {\n \n         File newMedia;\n \n-        if (!destMediaPath.isEmpty()) {\n-            // we have already copied the file at newPath during createFilePath\n-            newMedia = new File(destMediaPath);\n-        } else {\n+        // otherwise we have already copied the file at newPath during createFilePath\n+        if (destMediaPath.isEmpty()) {\n             recordedFileName = FileUtil.getFileName(binaryPath);\n-            String extension = FileUtil.getExtension(binaryPath);\n-            if (!FormUploadUtil.isSupportedMultimediaFile(binaryPath)) {\n-                Toast.makeText(getContext(),\n-                        Localization.get(\"form.attachment.invalid\"),\n-                        Toast.LENGTH_LONG).show();\n-                Log.e(TAG, String.format(\n-                        \"Could not save file with URI %s because of bad extension %s.\",\n-                        binaryPath,\n-                        extension\n-                ));\n-                return;\n-            }\n-            destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n-\n-            // Copy to destMediaPath\n-            File source = new File(binaryPath);\n-            newMedia = new File(destMediaPath);\n-            try {\n-                FileUtil.copyFile(source, newMedia);\n-            } catch (IOException e) {\n-                showToast(\"form.attachment.copy.fail\");\n-                Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-                e.printStackTrace();\n-            }\n+            copyRecordedFileToDestination(binaryPath);\n         }\n \n+        newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "cff44436bd176560015512e30621257744983f92", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex fed3e70ff..e2386d8ef 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -225,21 +227,13 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        if(!ifMediaSizeChecks(binaryPath) && !ifMediaExtensionChecks(binaryPath)){\n-            // if file check fails and we have already copied the file to destMediaPath, delete it\n-            if (!destMediaPath.isEmpty()) {\n-                new File(destMediaPath).delete();\n-            }\n+        if (!ifMediaSizeChecks(binaryPath) && !ifMediaExtensionChecks(binaryPath)) {\n             return;\n         }\n \n         File newMedia;\n-\n-        // otherwise we have already copied the file at newPath during createFilePath\n-        if (destMediaPath.isEmpty()) {\n-            recordedFileName = FileUtil.getFileName(binaryPath);\n-            copyRecordedFileToDestination(binaryPath);\n-        }\n+        recordedFileName = FileUtil.getFileName(binaryPath);\n+        copyRecordedFileToDestination(binaryPath);\n \n         newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n", "next_change": {"commit": "b896b65c07cf2b4032b2b94be08e4d8281283ec1", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..809cb846b 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -233,7 +237,7 @@ public abstract class MediaWidget extends QuestionWidget {\n \n         File newMedia;\n         recordedFileName = FileUtil.getFileName(binaryPath);\n-        copyRecordedFileToDestination(binaryPath);\n+        encryptRecordedFileToDestination(binaryPath);\n \n         newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n", "next_change": {"commit": "7706cb2d21e585e7dd4612aa8e6bd7abad16c88a", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 809cb846b..4c1eff919 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,11 +230,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        File newMedia;\n-        recordedFileName = FileUtil.getFileName(binaryPath);\n-        encryptRecordedFileToDestination(binaryPath);\n-\n-        newMedia = new File(destMediaPath);\n+        copyRecordedFileToDestination(binaryPath);\n+        File newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "282c658957e3dbb61adf3fd4f306973bcfb66493", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4c1eff919..c46f4113f 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -230,8 +234,9 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        copyRecordedFileToDestination(binaryPath);\n+        encryptRecordedFileToDestination(binaryPath);\n         File newMedia = new File(destMediaPath);\n+\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex c46f4113f..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -241,13 +269,23 @@ public abstract class MediaWidget extends QuestionWidget {\n             showToast(\"form.attachment.success\");\n         }\n \n+        mTempBinaryPath = binaryPath;\n         mBinaryName = newMedia.getName();\n     }\n \n+    // removes \".aes\" from file name if exists\n+    public static String removeAESExtension(String fileName) {\n+        if (fileName.endsWith(AES_EXTENSION)) {\n+            return fileName.replace(AES_EXTENSION, \"\");\n+        }\n+        return fileName;\n+    }\n+\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n-        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n+                customFileTag + \".\" + extension + AES_EXTENSION;\n+        SecretKeySpec key = getSecretKey();\n         try {\n             EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n", "next_change": {"commit": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..cacd043c0 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -291,7 +290,6 @@ public abstract class MediaWidget extends QuestionWidget {\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-            e.printStackTrace();\n         }\n     }\n \n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex cacd043c0..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -283,10 +309,14 @@ public abstract class MediaWidget extends QuestionWidget {\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n         destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n-                customFileTag + \".\" + extension + AES_EXTENSION;\n-        SecretKeySpec key = getSecretKey();\n+                customFileTag + \".\" + extension;\n         try {\n-            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n+            if (HiddenPreferences.isMediaCaptureEncryptionEnabled()) {\n+                destMediaPath = destMediaPath + AES_EXTENSION;\n+                EncryptionIO.encryptFile(binaryPath, destMediaPath, getSecretKey());\n+            } else {\n+                FileUtil.copyFile(binaryPath, destMediaPath);\n+            }\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4c1eff919..c46f4113f 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -239,14 +244,12 @@ public abstract class MediaWidget extends QuestionWidget {\n         mBinaryName = newMedia.getName();\n     }\n \n-    private void copyRecordedFileToDestination(String binaryPath) {\n+    private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n-\n-        // Copy to destMediaPath\n-        File source = new File(binaryPath);\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n+        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n         try {\n-            FileUtil.copyFile(source, new File(destMediaPath));\n+            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex c46f4113f..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -241,13 +269,23 @@ public abstract class MediaWidget extends QuestionWidget {\n             showToast(\"form.attachment.success\");\n         }\n \n+        mTempBinaryPath = binaryPath;\n         mBinaryName = newMedia.getName();\n     }\n \n+    // removes \".aes\" from file name if exists\n+    public static String removeAESExtension(String fileName) {\n+        if (fileName.endsWith(AES_EXTENSION)) {\n+            return fileName.replace(AES_EXTENSION, \"\");\n+        }\n+        return fileName;\n+    }\n+\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n-        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n+                customFileTag + \".\" + extension + AES_EXTENSION;\n+        SecretKeySpec key = getSecretKey();\n         try {\n             EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n", "next_change": {"commit": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..cacd043c0 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -291,7 +290,6 @@ public abstract class MediaWidget extends QuestionWidget {\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-            e.printStackTrace();\n         }\n     }\n \n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex cacd043c0..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -283,10 +309,14 @@ public abstract class MediaWidget extends QuestionWidget {\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n         destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n-                customFileTag + \".\" + extension + AES_EXTENSION;\n-        SecretKeySpec key = getSecretKey();\n+                customFileTag + \".\" + extension;\n         try {\n-            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n+            if (HiddenPreferences.isMediaCaptureEncryptionEnabled()) {\n+                destMediaPath = destMediaPath + AES_EXTENSION;\n+                EncryptionIO.encryptFile(binaryPath, destMediaPath, getSecretKey());\n+            } else {\n+                FileUtil.copyFile(binaryPath, destMediaPath);\n+            }\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex aeca8bf5a..fed3e70ff 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -242,6 +249,21 @@ public abstract class MediaWidget extends QuestionWidget {\n         mBinaryName = newMedia.getName();\n     }\n \n+    private void copyRecordedFileToDestination(String binaryPath) {\n+        String extension = FileUtil.getExtension(recordedFileName);\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n+\n+        // Copy to destMediaPath\n+        File source = new File(binaryPath);\n+        try {\n+            FileUtil.copyFile(source, new File(destMediaPath));\n+        } catch (IOException e) {\n+            showToast(\"form.attachment.copy.fail\");\n+            Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n+            e.printStackTrace();\n+        }\n+    }\n+\n     /**\n      * If file is chosen by user, the file selection intent will return an URI\n      * If file is auto-selected after recording_fragment, then the recordingfragment will provide a string file path\n", "next_change": {"commit": "cff44436bd176560015512e30621257744983f92", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex fed3e70ff..e2386d8ef 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -270,15 +264,14 @@ public abstract class MediaWidget extends QuestionWidget {\n      * Set value of customFileTag if the file is a recent recording from the RecordingFragment\n      */\n     private String createFilePath(Object binaryuri) throws IOException {\n-        String path = \"\";\n-        destMediaPath = \"\";\n+        String path;\n         if (binaryuri instanceof Uri) {\n-            // Need to make a copy of file using uri, so might as well copy to final destination path directly\n+            // Make a copy to a temporary location\n             InputStream inputStream = getContext().getContentResolver().openInputStream((Uri)binaryuri);\n-            recordedFileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n-            destMediaPath = mInstanceFolder + System.currentTimeMillis() + \".\" + FileUtil.getExtension(recordedFileName);\n-            FileUtil.copyFile(inputStream, new File(destMediaPath));\n-            path = destMediaPath;\n+            String fileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n+            path = CommCareApplication.instance().getAndroidFsTemp() + System.currentTimeMillis() + \".\"\n+                    + FileUtil.getExtension(fileName);\n+            FileUtil.copyFile(inputStream, new File(path));\n             customFileTag = \"\";\n         } else {\n             path = (String)binaryuri;\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -269,8 +306,7 @@ public abstract class MediaWidget extends QuestionWidget {\n             // Make a copy to a temporary location\n             InputStream inputStream = getContext().getContentResolver().openInputStream((Uri)binaryuri);\n             String fileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n-            path = CommCareApplication.instance().getAndroidFsTemp() + System.currentTimeMillis() + \".\"\n-                    + FileUtil.getExtension(fileName);\n+            path = createTempMediaPath(FileUtil.getExtension(fileName));\n             FileUtil.copyFile(inputStream, new File(path));\n             customFileTag = \"\";\n         } else {\n", "next_change": null}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -280,9 +316,14 @@ public abstract class MediaWidget extends QuestionWidget {\n         return path;\n     }\n \n+    private String createTempMediaPath(String fileExtension) {\n+        return CommCareApplication.instance().getAndroidFsTemp() +\n+                System.currentTimeMillis() + \".\" + fileExtension;\n+    }\n+\n     protected void playMedia(String mediaType) {\n         Intent i = new Intent(\"android.intent.action.VIEW\");\n-        File mediaFile = new File(mInstanceFolder + mBinaryName);\n+        File mediaFile = new File(mTempBinaryPath);\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n \n", "next_change": {"commit": "06f3716a5aaf8c3bb51e5064378e3c64494366fa", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..4fbd8b06d 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -322,7 +322,7 @@ public abstract class MediaWidget extends QuestionWidget {\n     }\n \n     protected void playMedia(String mediaType) {\n-        Intent i = new Intent(\"android.intent.action.VIEW\");\n+        Intent i = new Intent(Intent.ACTION_VIEW);\n         File mediaFile = new File(mTempBinaryPath);\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4fbd8b06d..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -316,14 +344,14 @@ public abstract class MediaWidget extends QuestionWidget {\n         return path;\n     }\n \n-    private String createTempMediaPath(String fileExtension) {\n+    private static String createTempMediaPath(String fileExtension) {\n         return CommCareApplication.instance().getAndroidFsTemp() +\n                 System.currentTimeMillis() + \".\" + fileExtension;\n     }\n \n     protected void playMedia(String mediaType) {\n         Intent i = new Intent(Intent.ACTION_VIEW);\n-        File mediaFile = new File(mTempBinaryPath);\n+        File mediaFile = new File(getSourceFilePathToDisplay());\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n \n", "next_change": {"commit": "99db8b3bad279d2be1418690f8fef4356a9a1493", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 3e5e74d5a..d34a8a8e4 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -349,18 +348,18 @@ public abstract class MediaWidget extends QuestionWidget {\n                 System.currentTimeMillis() + \".\" + fileExtension;\n     }\n \n-    protected void playMedia(String mediaType) {\n+    // launches an ACTION_VIEW Intent for the given file\n+    public static void playMedia(Context context, String mediaType, String filePath) {\n         Intent i = new Intent(Intent.ACTION_VIEW);\n-        File mediaFile = new File(getSourceFilePathToDisplay());\n-        Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n+        File mediaFile = new File(filePath);\n+        Uri mediaUri = FileUtil.getUriForExternalFile(context, mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n-\n-        UriToFilePath.grantPermissionForUri(getContext(), i, mediaUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n         try {\n-            getContext().startActivity(i);\n+            context.startActivity(i);\n         } catch (ActivityNotFoundException e) {\n-            Toast.makeText(getContext(),\n-                    StringUtils.getStringSpannableRobust(getContext(),\n+            Toast.makeText(context,\n+                    StringUtils.getStringSpannableRobust(context,\n                             R.string.activity_not_found,\n                             \"play \" + mediaType.substring(0, mediaType.indexOf(\"/\"))),\n                     Toast.LENGTH_SHORT).show();\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "b2ed838434c895f42f8f34baedb5486c57f8427b", "committedDate": "2021-01-21 15:04:48 +0530", "message": "Fix EACCES permission denied while recording videos"}, {"oid": "67e24443aa98902fcaf2571dc1b1e524bf145c7c", "committedDate": "2021-01-24 16:18:30 +0530", "message": "Fix media file name"}, {"oid": "238faf3f5b3ae82f3319dabe95d95723acc5473a", "committedDate": "2021-01-25 20:46:15 +0530", "message": "PR suggestion"}, {"oid": "4acb34cf2c090ce30fde30b7f0ee0516865f4d53", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Handle file extension not found exception"}, {"oid": "e1cb92705e03a841ad74b6de475ad211d28a78c9", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Make FileExtensionNotFoundException extend IOException"}, {"oid": "a2253224aca56cd49f1d96277b904cbf9d734a6a", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Remove unused imports"}, {"oid": "d6f5e999672949805644a5b5a0b7017108432430", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Improve logger exception message"}, {"oid": "17b418a32802dbbc4e23386cfe73e4f3dce8c6d3", "committedDate": "2021-05-06 13:43:28 +0530", "message": "Improve toast message for missing extension"}, {"oid": "7c3957d638a69885fbe041cbc961411968e9921b", "committedDate": "2021-11-26 17:32:59 +0530", "message": "Fixes crash on playback after activity recreation"}, {"oid": "20388d5a2c6618e54b8fddc7da3bc87f0b52cff3", "committedDate": "2022-01-12 13:38:44 +0300", "message": "minor refactor to modularize some of the  mediaWidget"}, {"oid": "cff44436bd176560015512e30621257744983f92", "committedDate": "2022-01-13 18:12:15 +0300", "message": "follow the same pathway for the media with uri by copying it to a temp location first"}, {"oid": "b896b65c07cf2b4032b2b94be08e4d8281283ec1", "committedDate": "2022-01-14 15:51:59 +0300", "message": "Encrypt Media at destination"}, {"oid": "7706cb2d21e585e7dd4612aa8e6bd7abad16c88a", "committedDate": "2022-01-14 16:23:28 +0300", "message": "Remove redundant var for file name"}, {"oid": "282c658957e3dbb61adf3fd4f306973bcfb66493", "committedDate": "2022-01-14 16:28:51 +0300", "message": "Merge branch 'mediaWidgetRefactor' into mediaEncryption"}, {"oid": "6cf11fe981761db6331910153014429fb68d5b57", "committedDate": "2022-01-18 01:58:27 +0300", "message": "Decrypt encrypted media to facilitate play"}, {"oid": "06f3716a5aaf8c3bb51e5064378e3c64494366fa", "committedDate": "2022-01-19 13:15:59 +0300", "message": "minor lint"}, {"oid": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "committedDate": "2022-01-20 12:04:49 +0300", "message": "error handling and make decryptMedia public for access from Image widget"}, {"oid": "05a274f5cb8cbabdfd6529263b9786fe7ee8d863", "committedDate": "2022-01-21 10:50:33 +0300", "message": "Adds encryption for Signature widget"}, {"oid": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "committedDate": "2022-01-21 13:06:25 +0300", "message": "Makes encryption backward compatible, wraps it with a flag"}, {"oid": "b2c3eef73ef8d523b6faf05aea1b388b7d432463", "committedDate": "2022-01-21 15:39:26 +0300", "message": "Fix issue with tmp file using aes encryption"}, {"oid": "99db8b3bad279d2be1418690f8fef4356a9a1493", "committedDate": "2022-02-01 08:50:59 +0300", "message": "Fixes intent launch for viewing media files"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1MDI5OQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371750299", "body": "Thanks for looking at it as part of this work. Though if it isn't realted to Android 10 work, would be nice to separate this out in another PR so that it's easy to revert in case of any edge cases. ", "bodyText": "Thanks for looking at it as part of this work. Though if it isn't realted to Android 10 work, would be nice to separate this out in another PR so that it's easy to revert in case of any edge cases.", "bodyHTML": "<p dir=\"auto\">Thanks for looking at it as part of this work. Though if it isn't realted to Android 10 work, would be nice to separate this out in another PR so that it's easy to revert in case of any edge cases.</p>", "author": "shubham1g5", "createdAt": "2020-01-28T11:35:26Z", "path": "app/src/org/commcare/utils/MediaUtil.java", "diffHunk": "@@ -414,7 +414,7 @@ private static int getApproxScaleDownFactor(int newWidth, int originalWidth) {\n         double widthScaleDownFactor =  (double)boundingWidth / originalWidth;\r\n         // Choosing the larger of the scale down factors, so that the image still fills the entire\r\n         // container\r\n-        double dominantScaleDownFactor = Math.max(widthScaleDownFactor, heightScaleDownFactor);\r\n+        double dominantScaleDownFactor = Math.min(widthScaleDownFactor, heightScaleDownFactor);\r", "originalCommit": "0b0e3927dcc27eae881a90f5b96e993e208b4fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91a7ebebf14177c629a6e3025abf01b8c654047c", "changed_code": [{"header": "diff --git a/app/src/org/commcare/utils/MediaUtil.java b/app/src/org/commcare/utils/MediaUtil.java\nindex f2e5aa5a0..7c4674e39 100644\n--- a/app/src/org/commcare/utils/MediaUtil.java\n+++ b/app/src/org/commcare/utils/MediaUtil.java\n", "chunk": "@@ -414,7 +414,7 @@ public class MediaUtil {\n         double widthScaleDownFactor =  (double)boundingWidth / originalWidth;\n         // Choosing the larger of the scale down factors, so that the image still fills the entire\n         // container\n-        double dominantScaleDownFactor = Math.min(widthScaleDownFactor, heightScaleDownFactor);\n+        double dominantScaleDownFactor = Math.max(widthScaleDownFactor, heightScaleDownFactor);\n \n         int widthImposedByContainer = (int)Math.round(originalWidth * dominantScaleDownFactor);\n         int heightImposedByContainer = (int)Math.round(originalHeight * dominantScaleDownFactor);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/utils/MediaUtil.java b/app/src/org/commcare/utils/MediaUtil.java\nindex f2e5aa5a0..7c4674e39 100644\n--- a/app/src/org/commcare/utils/MediaUtil.java\n+++ b/app/src/org/commcare/utils/MediaUtil.java\n", "chunk": "@@ -414,7 +414,7 @@ public class MediaUtil {\n         double widthScaleDownFactor =  (double)boundingWidth / originalWidth;\n         // Choosing the larger of the scale down factors, so that the image still fills the entire\n         // container\n-        double dominantScaleDownFactor = Math.min(widthScaleDownFactor, heightScaleDownFactor);\n+        double dominantScaleDownFactor = Math.max(widthScaleDownFactor, heightScaleDownFactor);\n \n         int widthImposedByContainer = (int)Math.round(originalWidth * dominantScaleDownFactor);\n         int heightImposedByContainer = (int)Math.round(originalHeight * dominantScaleDownFactor);\n", "next_change": {"commit": "ec2e8fe3037a097911f878e30ff2add03c594e1b", "changed_code": [{"header": "diff --git a/app/src/org/commcare/utils/MediaUtil.java b/app/src/org/commcare/utils/MediaUtil.java\nindex 7c4674e39..0ecf489ed 100644\n--- a/app/src/org/commcare/utils/MediaUtil.java\n+++ b/app/src/org/commcare/utils/MediaUtil.java\n", "chunk": "@@ -419,7 +422,7 @@ public class MediaUtil {\n         int widthImposedByContainer = (int)Math.round(originalWidth * dominantScaleDownFactor);\n         int heightImposedByContainer = (int)Math.round(originalHeight * dominantScaleDownFactor);\n         return new Pair<>(widthImposedByContainer, heightImposedByContainer);\n-        \n+\n     }\n \n     /**\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "ec2e8fe3037a097911f878e30ff2add03c594e1b", "committedDate": "2020-04-26 14:42:50 +0530", "message": "Adds Kujaku Map View and shows cases over it"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc1OTg1Ng==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r371759856", "body": "We should let the app crash in case of exceptions here if we are going to retain this functionality. ", "bodyText": "We should let the app crash in case of exceptions here if we are going to retain this functionality.", "bodyHTML": "<p dir=\"auto\">We should let the app crash in case of exceptions here if we are going to retain this functionality.</p>", "author": "shubham1g5", "createdAt": "2020-01-28T11:57:51Z", "path": "app/src/org/commcare/views/widgets/MediaWidget.java", "diffHunk": "@@ -237,21 +235,12 @@ public void setBinaryData(Object binaryuri) {\n             }\n         }\n \n-        if (newMedia.exists()) {\n-            // Add the copy to the content provider\n-            ContentValues values = new ContentValues(6);\n-            values.put(MediaStore.Audio.Media.TITLE, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DISPLAY_NAME, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DATE_ADDED, System.currentTimeMillis());\n-            values.put(MediaStore.Audio.Media.DATA, newMedia.getAbsolutePath());\n-\n-            Uri mediaUri =\n-                    getContext().getContentResolver().insert(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, values);\n-            String mediaUriString = mediaUri == null ? \"null\" : mediaUri.toString();\n-            Log.i(TAG, \"Inserting media returned uri = \" + mediaUriString);\n+        try {\n+            FileUtil.addMediaToGallery(getContext(), newMedia);\n             showToast(\"form.attachment.success\");\n-        } else {\n+        } catch (Exception e) {", "originalCommit": "0b0e3927dcc27eae881a90f5b96e993e208b4fe4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91a7ebebf14177c629a6e3025abf01b8c654047c", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..09532d7e9 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +237,21 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n+            // Add the copy to the content provider\n+            ContentValues values = new ContentValues(6);\n+            values.put(MediaStore.Audio.Media.TITLE, newMedia.getName());\n+            values.put(MediaStore.Audio.Media.DISPLAY_NAME, newMedia.getName());\n+            values.put(MediaStore.Audio.Media.DATE_ADDED, System.currentTimeMillis());\n+            values.put(MediaStore.Audio.Media.DATA, newMedia.getAbsolutePath());\n+\n+            Uri mediaUri =\n+                    getContext().getContentResolver().insert(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, values);\n+            String mediaUriString = mediaUri == null ? \"null\" : mediaUri.toString();\n+            Log.i(TAG, \"Inserting media returned uri = \" + mediaUriString);\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n+        } else {\n             Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "572ad9f18b9d3bd11802dec523136e57dd11e919", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 09532d7e9..7c3cf3a63 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -237,21 +235,12 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        if (newMedia.exists()) {\n-            // Add the copy to the content provider\n-            ContentValues values = new ContentValues(6);\n-            values.put(MediaStore.Audio.Media.TITLE, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DISPLAY_NAME, newMedia.getName());\n-            values.put(MediaStore.Audio.Media.DATE_ADDED, System.currentTimeMillis());\n-            values.put(MediaStore.Audio.Media.DATA, newMedia.getAbsolutePath());\n-\n-            Uri mediaUri =\n-                    getContext().getContentResolver().insert(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, values);\n-            String mediaUriString = mediaUri == null ? \"null\" : mediaUri.toString();\n-            Log.i(TAG, \"Inserting media returned uri = \" + mediaUriString);\n+        try {\n+            FileUtil.addMediaToGallery(getContext(), newMedia);\n             showToast(\"form.attachment.success\");\n-        } else {\n+        } catch (Exception e) {\n             Log.e(TAG, \"Inserting media file FAILED\");\n+            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "614e927891fab52212ee364e453fbc0548af9633", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..aeca8bf5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +235,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n-            Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 7c3cf3a63..aeca8bf5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,12 +235,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             }\n         }\n \n-        try {\n-            FileUtil.addMediaToGallery(getContext(), newMedia);\n+        if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n-        } catch (Exception e) {\n-            Log.e(TAG, \"Inserting media file FAILED\");\n-            e.printStackTrace();\n         }\n \n         mBinaryName = newMedia.getName();\n", "next_change": {"commit": "20388d5a2c6618e54b8fddc7da3bc87f0b52cff3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex aeca8bf5a..fed3e70ff 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -204,37 +235,13 @@ public abstract class MediaWidget extends QuestionWidget {\n \n         File newMedia;\n \n-        if (!destMediaPath.isEmpty()) {\n-            // we have already copied the file at newPath during createFilePath\n-            newMedia = new File(destMediaPath);\n-        } else {\n+        // otherwise we have already copied the file at newPath during createFilePath\n+        if (destMediaPath.isEmpty()) {\n             recordedFileName = FileUtil.getFileName(binaryPath);\n-            String extension = FileUtil.getExtension(binaryPath);\n-            if (!FormUploadUtil.isSupportedMultimediaFile(binaryPath)) {\n-                Toast.makeText(getContext(),\n-                        Localization.get(\"form.attachment.invalid\"),\n-                        Toast.LENGTH_LONG).show();\n-                Log.e(TAG, String.format(\n-                        \"Could not save file with URI %s because of bad extension %s.\",\n-                        binaryPath,\n-                        extension\n-                ));\n-                return;\n-            }\n-            destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n-\n-            // Copy to destMediaPath\n-            File source = new File(binaryPath);\n-            newMedia = new File(destMediaPath);\n-            try {\n-                FileUtil.copyFile(source, newMedia);\n-            } catch (IOException e) {\n-                showToast(\"form.attachment.copy.fail\");\n-                Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-                e.printStackTrace();\n-            }\n+            copyRecordedFileToDestination(binaryPath);\n         }\n \n+        newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "cff44436bd176560015512e30621257744983f92", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex fed3e70ff..e2386d8ef 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -225,21 +227,13 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        if(!ifMediaSizeChecks(binaryPath) && !ifMediaExtensionChecks(binaryPath)){\n-            // if file check fails and we have already copied the file to destMediaPath, delete it\n-            if (!destMediaPath.isEmpty()) {\n-                new File(destMediaPath).delete();\n-            }\n+        if (!ifMediaSizeChecks(binaryPath) && !ifMediaExtensionChecks(binaryPath)) {\n             return;\n         }\n \n         File newMedia;\n-\n-        // otherwise we have already copied the file at newPath during createFilePath\n-        if (destMediaPath.isEmpty()) {\n-            recordedFileName = FileUtil.getFileName(binaryPath);\n-            copyRecordedFileToDestination(binaryPath);\n-        }\n+        recordedFileName = FileUtil.getFileName(binaryPath);\n+        copyRecordedFileToDestination(binaryPath);\n \n         newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n", "next_change": {"commit": "b896b65c07cf2b4032b2b94be08e4d8281283ec1", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..809cb846b 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -233,7 +237,7 @@ public abstract class MediaWidget extends QuestionWidget {\n \n         File newMedia;\n         recordedFileName = FileUtil.getFileName(binaryPath);\n-        copyRecordedFileToDestination(binaryPath);\n+        encryptRecordedFileToDestination(binaryPath);\n \n         newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n", "next_change": {"commit": "7706cb2d21e585e7dd4612aa8e6bd7abad16c88a", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 809cb846b..4c1eff919 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -235,11 +230,8 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        File newMedia;\n-        recordedFileName = FileUtil.getFileName(binaryPath);\n-        encryptRecordedFileToDestination(binaryPath);\n-\n-        newMedia = new File(destMediaPath);\n+        copyRecordedFileToDestination(binaryPath);\n+        File newMedia = new File(destMediaPath);\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "282c658957e3dbb61adf3fd4f306973bcfb66493", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4c1eff919..c46f4113f 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -230,8 +234,9 @@ public abstract class MediaWidget extends QuestionWidget {\n             return;\n         }\n \n-        copyRecordedFileToDestination(binaryPath);\n+        encryptRecordedFileToDestination(binaryPath);\n         File newMedia = new File(destMediaPath);\n+\n         if (newMedia.exists()) {\n             showToast(\"form.attachment.success\");\n         }\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex c46f4113f..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -241,13 +269,23 @@ public abstract class MediaWidget extends QuestionWidget {\n             showToast(\"form.attachment.success\");\n         }\n \n+        mTempBinaryPath = binaryPath;\n         mBinaryName = newMedia.getName();\n     }\n \n+    // removes \".aes\" from file name if exists\n+    public static String removeAESExtension(String fileName) {\n+        if (fileName.endsWith(AES_EXTENSION)) {\n+            return fileName.replace(AES_EXTENSION, \"\");\n+        }\n+        return fileName;\n+    }\n+\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n-        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n+                customFileTag + \".\" + extension + AES_EXTENSION;\n+        SecretKeySpec key = getSecretKey();\n         try {\n             EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n", "next_change": {"commit": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..cacd043c0 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -291,7 +290,6 @@ public abstract class MediaWidget extends QuestionWidget {\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-            e.printStackTrace();\n         }\n     }\n \n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex cacd043c0..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -283,10 +309,14 @@ public abstract class MediaWidget extends QuestionWidget {\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n         destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n-                customFileTag + \".\" + extension + AES_EXTENSION;\n-        SecretKeySpec key = getSecretKey();\n+                customFileTag + \".\" + extension;\n         try {\n-            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n+            if (HiddenPreferences.isMediaCaptureEncryptionEnabled()) {\n+                destMediaPath = destMediaPath + AES_EXTENSION;\n+                EncryptionIO.encryptFile(binaryPath, destMediaPath, getSecretKey());\n+            } else {\n+                FileUtil.copyFile(binaryPath, destMediaPath);\n+            }\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4c1eff919..c46f4113f 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -239,14 +244,12 @@ public abstract class MediaWidget extends QuestionWidget {\n         mBinaryName = newMedia.getName();\n     }\n \n-    private void copyRecordedFileToDestination(String binaryPath) {\n+    private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n-\n-        // Copy to destMediaPath\n-        File source = new File(binaryPath);\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n+        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n         try {\n-            FileUtil.copyFile(source, new File(destMediaPath));\n+            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex c46f4113f..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -241,13 +269,23 @@ public abstract class MediaWidget extends QuestionWidget {\n             showToast(\"form.attachment.success\");\n         }\n \n+        mTempBinaryPath = binaryPath;\n         mBinaryName = newMedia.getName();\n     }\n \n+    // removes \".aes\" from file name if exists\n+    public static String removeAESExtension(String fileName) {\n+        if (fileName.endsWith(AES_EXTENSION)) {\n+            return fileName.replace(AES_EXTENSION, \"\");\n+        }\n+        return fileName;\n+    }\n+\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n-        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension + \".aes\";\n-        SecretKeySpec key = ((FormEntryActivity)getContext()).getSymetricKey();\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n+                customFileTag + \".\" + extension + AES_EXTENSION;\n+        SecretKeySpec key = getSecretKey();\n         try {\n             EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n         } catch (IOException e) {\n", "next_change": {"commit": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..cacd043c0 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -291,7 +290,6 @@ public abstract class MediaWidget extends QuestionWidget {\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n-            e.printStackTrace();\n         }\n     }\n \n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex cacd043c0..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -283,10 +309,14 @@ public abstract class MediaWidget extends QuestionWidget {\n     private void encryptRecordedFileToDestination(String binaryPath) {\n         String extension = FileUtil.getExtension(binaryPath);\n         destMediaPath = mInstanceFolder + System.currentTimeMillis() +\n-                customFileTag + \".\" + extension + AES_EXTENSION;\n-        SecretKeySpec key = getSecretKey();\n+                customFileTag + \".\" + extension;\n         try {\n-            EncryptionIO.encryptFile(binaryPath, destMediaPath, key);\n+            if (HiddenPreferences.isMediaCaptureEncryptionEnabled()) {\n+                destMediaPath = destMediaPath + AES_EXTENSION;\n+                EncryptionIO.encryptFile(binaryPath, destMediaPath, getSecretKey());\n+            } else {\n+                FileUtil.copyFile(binaryPath, destMediaPath);\n+            }\n         } catch (IOException e) {\n             showToast(\"form.attachment.copy.fail\");\n             Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex aeca8bf5a..fed3e70ff 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -242,6 +249,21 @@ public abstract class MediaWidget extends QuestionWidget {\n         mBinaryName = newMedia.getName();\n     }\n \n+    private void copyRecordedFileToDestination(String binaryPath) {\n+        String extension = FileUtil.getExtension(recordedFileName);\n+        destMediaPath = mInstanceFolder + System.currentTimeMillis() + customFileTag + \".\" + extension;\n+\n+        // Copy to destMediaPath\n+        File source = new File(binaryPath);\n+        try {\n+            FileUtil.copyFile(source, new File(destMediaPath));\n+        } catch (IOException e) {\n+            showToast(\"form.attachment.copy.fail\");\n+            Logger.exception(LogTypes.TYPE_MAINTENANCE, e);\n+            e.printStackTrace();\n+        }\n+    }\n+\n     /**\n      * If file is chosen by user, the file selection intent will return an URI\n      * If file is auto-selected after recording_fragment, then the recordingfragment will provide a string file path\n", "next_change": {"commit": "cff44436bd176560015512e30621257744983f92", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex fed3e70ff..e2386d8ef 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -270,15 +264,14 @@ public abstract class MediaWidget extends QuestionWidget {\n      * Set value of customFileTag if the file is a recent recording from the RecordingFragment\n      */\n     private String createFilePath(Object binaryuri) throws IOException {\n-        String path = \"\";\n-        destMediaPath = \"\";\n+        String path;\n         if (binaryuri instanceof Uri) {\n-            // Need to make a copy of file using uri, so might as well copy to final destination path directly\n+            // Make a copy to a temporary location\n             InputStream inputStream = getContext().getContentResolver().openInputStream((Uri)binaryuri);\n-            recordedFileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n-            destMediaPath = mInstanceFolder + System.currentTimeMillis() + \".\" + FileUtil.getExtension(recordedFileName);\n-            FileUtil.copyFile(inputStream, new File(destMediaPath));\n-            path = destMediaPath;\n+            String fileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n+            path = CommCareApplication.instance().getAndroidFsTemp() + System.currentTimeMillis() + \".\"\n+                    + FileUtil.getExtension(fileName);\n+            FileUtil.copyFile(inputStream, new File(path));\n             customFileTag = \"\";\n         } else {\n             path = (String)binaryuri;\n", "next_change": {"commit": "6cf11fe981761db6331910153014429fb68d5b57", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -269,8 +306,7 @@ public abstract class MediaWidget extends QuestionWidget {\n             // Make a copy to a temporary location\n             InputStream inputStream = getContext().getContentResolver().openInputStream((Uri)binaryuri);\n             String fileName = FileUtil.getFileName(getContext(), (Uri)binaryuri);\n-            path = CommCareApplication.instance().getAndroidFsTemp() + System.currentTimeMillis() + \".\"\n-                    + FileUtil.getExtension(fileName);\n+            path = createTempMediaPath(FileUtil.getExtension(fileName));\n             FileUtil.copyFile(inputStream, new File(path));\n             customFileTag = \"\";\n         } else {\n", "next_change": null}, {"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex e2386d8ef..459ccf984 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -280,9 +316,14 @@ public abstract class MediaWidget extends QuestionWidget {\n         return path;\n     }\n \n+    private String createTempMediaPath(String fileExtension) {\n+        return CommCareApplication.instance().getAndroidFsTemp() +\n+                System.currentTimeMillis() + \".\" + fileExtension;\n+    }\n+\n     protected void playMedia(String mediaType) {\n         Intent i = new Intent(\"android.intent.action.VIEW\");\n-        File mediaFile = new File(mInstanceFolder + mBinaryName);\n+        File mediaFile = new File(mTempBinaryPath);\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n \n", "next_change": {"commit": "06f3716a5aaf8c3bb51e5064378e3c64494366fa", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 459ccf984..4fbd8b06d 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -322,7 +322,7 @@ public abstract class MediaWidget extends QuestionWidget {\n     }\n \n     protected void playMedia(String mediaType) {\n-        Intent i = new Intent(\"android.intent.action.VIEW\");\n+        Intent i = new Intent(Intent.ACTION_VIEW);\n         File mediaFile = new File(mTempBinaryPath);\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n", "next_change": {"commit": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 4fbd8b06d..3e5e74d5a 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -316,14 +344,14 @@ public abstract class MediaWidget extends QuestionWidget {\n         return path;\n     }\n \n-    private String createTempMediaPath(String fileExtension) {\n+    private static String createTempMediaPath(String fileExtension) {\n         return CommCareApplication.instance().getAndroidFsTemp() +\n                 System.currentTimeMillis() + \".\" + fileExtension;\n     }\n \n     protected void playMedia(String mediaType) {\n         Intent i = new Intent(Intent.ACTION_VIEW);\n-        File mediaFile = new File(mTempBinaryPath);\n+        File mediaFile = new File(getSourceFilePathToDisplay());\n         Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n \n", "next_change": {"commit": "99db8b3bad279d2be1418690f8fef4356a9a1493", "changed_code": [{"header": "diff --git a/app/src/org/commcare/views/widgets/MediaWidget.java b/app/src/org/commcare/views/widgets/MediaWidget.java\nindex 3e5e74d5a..d34a8a8e4 100644\n--- a/app/src/org/commcare/views/widgets/MediaWidget.java\n+++ b/app/src/org/commcare/views/widgets/MediaWidget.java\n", "chunk": "@@ -349,18 +348,18 @@ public abstract class MediaWidget extends QuestionWidget {\n                 System.currentTimeMillis() + \".\" + fileExtension;\n     }\n \n-    protected void playMedia(String mediaType) {\n+    // launches an ACTION_VIEW Intent for the given file\n+    public static void playMedia(Context context, String mediaType, String filePath) {\n         Intent i = new Intent(Intent.ACTION_VIEW);\n-        File mediaFile = new File(getSourceFilePathToDisplay());\n-        Uri mediaUri = FileUtil.getUriForExternalFile(getContext(), mediaFile);\n+        File mediaFile = new File(filePath);\n+        Uri mediaUri = FileUtil.getUriForExternalFile(context, mediaFile);\n         i.setDataAndType(mediaUri, mediaType);\n-\n-        UriToFilePath.grantPermissionForUri(getContext(), i, mediaUri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n         try {\n-            getContext().startActivity(i);\n+            context.startActivity(i);\n         } catch (ActivityNotFoundException e) {\n-            Toast.makeText(getContext(),\n-                    StringUtils.getStringSpannableRobust(getContext(),\n+            Toast.makeText(context,\n+                    StringUtils.getStringSpannableRobust(context,\n                             R.string.activity_not_found,\n                             \"play \" + mediaType.substring(0, mediaType.indexOf(\"/\"))),\n                     Toast.LENGTH_SHORT).show();\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "b2ed838434c895f42f8f34baedb5486c57f8427b", "committedDate": "2021-01-21 15:04:48 +0530", "message": "Fix EACCES permission denied while recording videos"}, {"oid": "67e24443aa98902fcaf2571dc1b1e524bf145c7c", "committedDate": "2021-01-24 16:18:30 +0530", "message": "Fix media file name"}, {"oid": "238faf3f5b3ae82f3319dabe95d95723acc5473a", "committedDate": "2021-01-25 20:46:15 +0530", "message": "PR suggestion"}, {"oid": "4acb34cf2c090ce30fde30b7f0ee0516865f4d53", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Handle file extension not found exception"}, {"oid": "e1cb92705e03a841ad74b6de475ad211d28a78c9", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Make FileExtensionNotFoundException extend IOException"}, {"oid": "a2253224aca56cd49f1d96277b904cbf9d734a6a", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Remove unused imports"}, {"oid": "d6f5e999672949805644a5b5a0b7017108432430", "committedDate": "2021-05-06 10:28:47 +0530", "message": "Improve logger exception message"}, {"oid": "17b418a32802dbbc4e23386cfe73e4f3dce8c6d3", "committedDate": "2021-05-06 13:43:28 +0530", "message": "Improve toast message for missing extension"}, {"oid": "7c3957d638a69885fbe041cbc961411968e9921b", "committedDate": "2021-11-26 17:32:59 +0530", "message": "Fixes crash on playback after activity recreation"}, {"oid": "20388d5a2c6618e54b8fddc7da3bc87f0b52cff3", "committedDate": "2022-01-12 13:38:44 +0300", "message": "minor refactor to modularize some of the  mediaWidget"}, {"oid": "cff44436bd176560015512e30621257744983f92", "committedDate": "2022-01-13 18:12:15 +0300", "message": "follow the same pathway for the media with uri by copying it to a temp location first"}, {"oid": "b896b65c07cf2b4032b2b94be08e4d8281283ec1", "committedDate": "2022-01-14 15:51:59 +0300", "message": "Encrypt Media at destination"}, {"oid": "7706cb2d21e585e7dd4612aa8e6bd7abad16c88a", "committedDate": "2022-01-14 16:23:28 +0300", "message": "Remove redundant var for file name"}, {"oid": "282c658957e3dbb61adf3fd4f306973bcfb66493", "committedDate": "2022-01-14 16:28:51 +0300", "message": "Merge branch 'mediaWidgetRefactor' into mediaEncryption"}, {"oid": "6cf11fe981761db6331910153014429fb68d5b57", "committedDate": "2022-01-18 01:58:27 +0300", "message": "Decrypt encrypted media to facilitate play"}, {"oid": "06f3716a5aaf8c3bb51e5064378e3c64494366fa", "committedDate": "2022-01-19 13:15:59 +0300", "message": "minor lint"}, {"oid": "41cbbe2a7f672197c2eccfb43337e52fdde1d3a3", "committedDate": "2022-01-20 12:04:49 +0300", "message": "error handling and make decryptMedia public for access from Image widget"}, {"oid": "05a274f5cb8cbabdfd6529263b9786fe7ee8d863", "committedDate": "2022-01-21 10:50:33 +0300", "message": "Adds encryption for Signature widget"}, {"oid": "4c5f068425ac0fbc9ad55bd5d33de52e579cf220", "committedDate": "2022-01-21 13:06:25 +0300", "message": "Makes encryption backward compatible, wraps it with a flag"}, {"oid": "b2c3eef73ef8d523b6faf05aea1b388b7d432463", "committedDate": "2022-01-21 15:39:26 +0300", "message": "Fix issue with tmp file using aes encryption"}, {"oid": "99db8b3bad279d2be1418690f8fef4356a9a1493", "committedDate": "2022-02-01 08:50:59 +0300", "message": "Fixes intent launch for viewing media files"}]}, {"oid": "ce3eda49affec893200ab103d1affaeaf57f0c54", "url": "https://github.com/dimagi/commcare-android/commit/ce3eda49affec893200ab103d1affaeaf57f0c54", "message": "Fix a crash where we added video using MediaStore.Audio contentValues", "committedDate": "2020-01-28T10:56:30Z", "type": "forcePushed"}, {"oid": "91a7ebebf14177c629a6e3025abf01b8c654047c", "url": "https://github.com/dimagi/commcare-android/commit/91a7ebebf14177c629a6e3025abf01b8c654047c", "message": "Update compile and target sdk version to 29", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "765d2145c1cccd8783e54139123b2464c086425f", "url": "https://github.com/dimagi/commcare-android/commit/765d2145c1cccd8783e54139123b2464c086425f", "message": "Deprecate getting phone IMEI since it gives SecurityException", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "c5c5930378fcaa656206daaaa79771760e2d4f95", "url": "https://github.com/dimagi/commcare-android/commit/c5c5930378fcaa656206daaaa79771760e2d4f95", "message": "Temporarily opt-out of scoped storage till we add full support", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "572ad9f18b9d3bd11802dec523136e57dd11e919", "url": "https://github.com/dimagi/commcare-android/commit/572ad9f18b9d3bd11802dec523136e57dd11e919", "message": "Fix a crash where we added video using MediaStore.Audio contentValues", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "c8f22b98c4a8dd174f5a35ef5a843ce7f3acc76f", "url": "https://github.com/dimagi/commcare-android/commit/c8f22b98c4a8dd174f5a35ef5a843ce7f3acc76f", "message": "Use random UUID as a unique device identifier", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "26a3e8cf05df4a52e6bd43463e33347537b5e742", "url": "https://github.com/dimagi/commcare-android/commit/26a3e8cf05df4a52e6bd43463e33347537b5e742", "message": "Use androidX PreferenceManager\n\nandroid.preference.PreferenceManager is deprecated in API level 29 so updating to the androidX implementation", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "a2907d6428e80be71c5ed65ded47a0ea412cd544", "url": "https://github.com/dimagi/commcare-android/commit/a2907d6428e80be71c5ed65ded47a0ea412cd544", "message": "Fix failing tests by hardcoding deviceId", "committedDate": "2020-02-14T12:43:45Z", "type": "commit"}, {"oid": "a2907d6428e80be71c5ed65ded47a0ea412cd544", "url": "https://github.com/dimagi/commcare-android/commit/a2907d6428e80be71c5ed65ded47a0ea412cd544", "message": "Fix failing tests by hardcoding deviceId", "committedDate": "2020-02-14T12:43:45Z", "type": "forcePushed"}, {"oid": "e204cda43f56302be8fb968e0f9f6528feaeb127", "url": "https://github.com/dimagi/commcare-android/commit/e204cda43f56302be8fb968e0f9f6528feaeb127", "message": "Add soft assert logs where external storage directory is used", "committedDate": "2020-02-16T13:42:35Z", "type": "commit"}, {"oid": "614e927891fab52212ee364e453fbc0548af9633", "url": "https://github.com/dimagi/commcare-android/commit/614e927891fab52212ee364e453fbc0548af9633", "message": "Remove saving redundant media to content providers", "committedDate": "2020-02-17T06:36:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjAzMA==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383726030", "body": "It seems like this path will definitely get hit if someone is using this functionality. So there is no point in adding soft assert here and we will likely need to disable this functionality in Android 11 if there is no other alternate provided in Android 11 for file searching. ", "bodyText": "It seems like this path will definitely get hit if someone is using this functionality. So there is no point in adding soft assert here and we will likely need to disable this functionality in Android 11 if there is no other alternate provided in Android 11 for file searching.", "bodyHTML": "<p dir=\"auto\">It seems like this path will definitely get hit if someone is using this functionality. So there is no point in adding soft assert here and we will likely need to disable this functionality in Android 11 if there is no other alternate provided in Android 11 for file searching.</p>", "author": "shubham1g5", "createdAt": "2020-02-25T08:35:59Z", "path": "app/src/org/commcare/activities/MultimediaInflaterActivity.java", "diffHunk": "@@ -162,6 +164,7 @@ private void searchForDefault() {\n \r\n         if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) ||\r\n                 Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState())) {\r\n+            Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in searching zip file\");\r", "originalCommit": "614e927891fab52212ee364e453fbc0548af9633", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0229a29967de8a0d643f48cb331ab80b5d1a3210", "changed_code": [{"header": "diff --git a/app/src/org/commcare/activities/MultimediaInflaterActivity.java b/app/src/org/commcare/activities/MultimediaInflaterActivity.java\nindex 5534acb5b..a995d383a 100644\n--- a/app/src/org/commcare/activities/MultimediaInflaterActivity.java\n+++ b/app/src/org/commcare/activities/MultimediaInflaterActivity.java\n", "chunk": "@@ -164,7 +164,6 @@ public class MultimediaInflaterActivity extends CommCareActivity<MultimediaInfla\n \n         if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) ||\n                 Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState())) {\n-            Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in searching zip file\");\n             roots.add(Environment.getExternalStorageDirectory());\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/activities/MultimediaInflaterActivity.java b/app/src/org/commcare/activities/MultimediaInflaterActivity.java\nindex 5534acb5b..a995d383a 100644\n--- a/app/src/org/commcare/activities/MultimediaInflaterActivity.java\n+++ b/app/src/org/commcare/activities/MultimediaInflaterActivity.java\n", "chunk": "@@ -164,7 +164,6 @@ public class MultimediaInflaterActivity extends CommCareActivity<MultimediaInfla\n \n         if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) ||\n                 Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState())) {\n-            Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in searching zip file\");\n             roots.add(Environment.getExternalStorageDirectory());\n         }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "65fafd4fbd3d01e77d26f6c70588f8f0af4a7474", "committedDate": "2017-11-20 12:52:29 +0530", "message": "Moves Activity references to AppCompatActivity for non list activities"}, {"oid": "8e5743284c0036eb371e7ffbcee91d1fa2248fc1", "committedDate": "2018-03-22 15:38:31 +0530", "message": "Merge branch 'master' into appCompat"}, {"oid": "cf31cee4a92d5398afae1662201dfec4af2a4607", "committedDate": "2020-08-24 18:32:41 +0530", "message": "Merge branch 'master' into appCompat"}, {"oid": "d883748f520b07c3caff836ff6f87e14e345e16d", "committedDate": "2021-01-22 11:45:51 +0530", "message": "PR suggestions"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjQzOA==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383726438", "body": "We can remove this soft assert as well as this path will definitely get hit for someone using this functionality,  ", "bodyText": "We can remove this soft assert as well as this path will definitely get hit for someone using this functionality,", "bodyHTML": "<p dir=\"auto\">We can remove this soft assert as well as this path will definitely get hit for someone using this functionality,</p>", "author": "shubham1g5", "createdAt": "2020-02-25T08:36:45Z", "path": "app/src/org/commcare/recovery/measures/ScanCczTask.java", "diffHunk": "@@ -94,6 +96,7 @@ private void locateAppCcz(File[] files, int depth) {\n         if (!StringUtils.isEmpty(lastKnownCczLocation)) {\n             filePathsToScan.add(new File(lastKnownCczLocation));\n         }\n+        Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in scanning cczs.\");", "originalCommit": "614e927891fab52212ee364e453fbc0548af9633", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0229a29967de8a0d643f48cb331ab80b5d1a3210", "changed_code": [{"header": "diff --git a/app/src/org/commcare/recovery/measures/ScanCczTask.java b/app/src/org/commcare/recovery/measures/ScanCczTask.java\nindex d70f7792f..de8788a4a 100644\n--- a/app/src/org/commcare/recovery/measures/ScanCczTask.java\n+++ b/app/src/org/commcare/recovery/measures/ScanCczTask.java\n", "chunk": "@@ -96,7 +96,6 @@ public class ScanCczTask extends CommCareTask<Void, File, File, ExecuteRecoveryM\n         if (!StringUtils.isEmpty(lastKnownCczLocation)) {\n             filePathsToScan.add(new File(lastKnownCczLocation));\n         }\n-        Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in scanning cczs.\");\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS));\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));\n         return filePathsToScan.toArray(new File[filePathsToScan.size()]);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "changed_code": [{"header": "diff --git a/app/src/org/commcare/recovery/measures/ScanCczTask.java b/app/src/org/commcare/recovery/measures/ScanCczTask.java\nindex d70f7792f..de8788a4a 100644\n--- a/app/src/org/commcare/recovery/measures/ScanCczTask.java\n+++ b/app/src/org/commcare/recovery/measures/ScanCczTask.java\n", "chunk": "@@ -96,7 +96,6 @@ public class ScanCczTask extends CommCareTask<Void, File, File, ExecuteRecoveryM\n         if (!StringUtils.isEmpty(lastKnownCczLocation)) {\n             filePathsToScan.add(new File(lastKnownCczLocation));\n         }\n-        Logger.log(LogTypes.SOFT_ASSERT, \"Access outside scoped storage in scanning cczs.\");\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS));\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));\n         return filePathsToScan.toArray(new File[filePathsToScan.size()]);\n", "next_change": {"commit": "bc9839204a84002ae5c9283d2d679afee1dd37f0", "changed_code": [{"header": "diff --git a/app/src/org/commcare/recovery/measures/ScanCczTask.java b/app/src/org/commcare/recovery/measures/ScanCczTask.java\nindex de8788a4a..498bd7d9a 100644\n--- a/app/src/org/commcare/recovery/measures/ScanCczTask.java\n+++ b/app/src/org/commcare/recovery/measures/ScanCczTask.java\n", "chunk": "@@ -94,7 +97,19 @@ public class ScanCczTask extends CommCareTask<Void, File, File, ExecuteRecoveryM\n         String lastKnownCczLocation = HiddenPreferences.getLastKnownCczLocation();\n         ArrayList<File> filePathsToScan = new ArrayList<>(3);\n         if (!StringUtils.isEmpty(lastKnownCczLocation)) {\n-            filePathsToScan.add(new File(lastKnownCczLocation));\n+            try {\n+                if (lastKnownCczLocation.startsWith(\"content://\")) {\n+                    InputStream inputStream = CommCareApplication.instance().getContentResolver().openInputStream(Uri.parse(lastKnownCczLocation));\n+                    File destination = new File(CczUtils.getCczTargetPath());\n+                    FileUtil.copyFile(inputStream, destination);\n+                    filePathsToScan.add(destination);\n+                } else {\n+                    filePathsToScan.add(new File(lastKnownCczLocation));\n+                }\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+                Logger.log(LogTypes.TYPE_ERROR_STORAGE, \"Last known ccz location failed with : \" + e.getMessage());\n+            }\n         }\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS));\n         filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));\n", "next_change": {"commit": "3ad598f35a7b200ee70193f8ac27de8bfda8c598", "changed_code": [{"header": "diff --git a/app/src/org/commcare/recovery/measures/ScanCczTask.java b/app/src/org/commcare/recovery/measures/ScanCczTask.java\ndeleted file mode 100644\nindex 498bd7d9a..000000000\n--- a/app/src/org/commcare/recovery/measures/ScanCczTask.java\n+++ /dev/null\n", "chunk": "@@ -1,133 +0,0 @@\n-package org.commcare.recovery.measures;\n-\n-import android.net.Uri;\n-import android.os.Environment;\n-import androidx.annotation.Nullable;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.commcare.CommCareApplication;\n-import org.commcare.modern.util.Pair;\n-import org.commcare.preferences.HiddenPreferences;\n-import org.commcare.tasks.templates.CommCareTask;\n-import org.commcare.util.LogTypes;\n-import org.commcare.utils.CczUtils;\n-import org.commcare.utils.FileUtil;\n-import org.javarosa.core.io.StreamsUtil;\n-import org.javarosa.core.services.Logger;\n-import org.javarosa.xml.ElementParser;\n-import org.javarosa.xml.util.InvalidStructureException;\n-import org.javarosa.xml.util.UnfullfilledRequirementsException;\n-import org.xmlpull.v1.XmlPullParserException;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.util.ArrayList;\n-import java.util.zip.ZipFile;\n-\n-public class ScanCczTask extends CommCareTask<Void, File, File, ExecuteRecoveryMeasuresActivity> {\n-\n-\n-    private static final String CCZ_EXTENSION = \".ccz\";\n-    private static final String PROFILE_FILE_NAME = \"profile.ccpr\";\n-    private static final int MAX_SCAN_DEPTH = 10;\n-\n-    private File latestProfileFile = null;\n-\n-    @Override\n-    protected File doTaskBackground(Void... voids) {\n-        locateAppCcz(getPathsToScan(), 0);\n-        return latestProfileFile;\n-    }\n-\n-    @Nullable\n-    private void locateAppCcz(File[] files, int depth) {\n-        int latestVersion = -1;\n-        for (File f : files) {\n-            if (f.isDirectory() && depth <= MAX_SCAN_DEPTH) {\n-                locateAppCcz(f.listFiles(), depth + 1);\n-            } else if (f.isFile() && f.getName().endsWith(CCZ_EXTENSION)) {\n-                try {\n-                    Pair<String, Integer> profileIdAndVersion = getProfileIdAndVersionFromCcz(f);\n-                    String currentAppId = CommCareApplication.instance().getCurrentApp().getUniqueId();\n-                    if (currentAppId.contentEquals(profileIdAndVersion.first)) {\n-                        // We have a match, if it's the latest version till now, return the ccz in update\n-                        if (profileIdAndVersion.second > latestVersion) {\n-                            latestVersion = profileIdAndVersion.second;\n-                            latestProfileFile = f;\n-                            publishProgress(latestProfileFile);\n-                        }\n-                    }\n-                } catch (IOException | InvalidStructureException | XmlPullParserException | UnfullfilledRequirementsException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-    }\n-\n-    // Unzip profile and parses id and version from it\n-    private Pair<String, Integer> getProfileIdAndVersionFromCcz(File cczFile) throws IOException, UnfullfilledRequirementsException, XmlPullParserException, InvalidStructureException {\n-        InputStream profileStream = null;\n-        ZipFile zipFile = null;\n-        try {\n-            zipFile = new ZipFile(cczFile);\n-            profileStream = zipFile.getInputStream(zipFile.getEntry(PROFILE_FILE_NAME));\n-            return getProfileParser(profileStream).parse();\n-        } finally {\n-            StreamsUtil.closeStream(profileStream);\n-            if (zipFile != null) {\n-                zipFile.close();\n-            }\n-        }\n-    }\n-\n-    private ElementParser<Pair<String, Integer>> getProfileParser(InputStream profileStream) throws IOException {\n-        return new ElementParser<Pair<String, Integer>>(ElementParser.instantiateParser(profileStream)) {\n-            @Override\n-            public Pair<String, Integer> parse() throws InvalidStructureException {\n-                int version = parseInt(parser.getAttributeValue(null, \"version\"));\n-                String uniqueId = parser.getAttributeValue(null, \"uniqueid\");\n-                return new Pair<>(uniqueId, version);\n-            }\n-        };\n-    }\n-\n-\n-    private File[] getPathsToScan() {\n-        String lastKnownCczLocation = HiddenPreferences.getLastKnownCczLocation();\n-        ArrayList<File> filePathsToScan = new ArrayList<>(3);\n-        if (!StringUtils.isEmpty(lastKnownCczLocation)) {\n-            try {\n-                if (lastKnownCczLocation.startsWith(\"content://\")) {\n-                    InputStream inputStream = CommCareApplication.instance().getContentResolver().openInputStream(Uri.parse(lastKnownCczLocation));\n-                    File destination = new File(CczUtils.getCczTargetPath());\n-                    FileUtil.copyFile(inputStream, destination);\n-                    filePathsToScan.add(destination);\n-                } else {\n-                    filePathsToScan.add(new File(lastKnownCczLocation));\n-                }\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-                Logger.log(LogTypes.TYPE_ERROR_STORAGE, \"Last known ccz location failed with : \" + e.getMessage());\n-            }\n-        }\n-        filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS));\n-        filePathsToScan.add(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS));\n-        return filePathsToScan.toArray(new File[filePathsToScan.size()]);\n-    }\n-\n-    @Override\n-    protected void deliverResult(ExecuteRecoveryMeasuresActivity activity, File archive) {\n-        activity.onCczScanComplete();\n-    }\n-\n-    @Override\n-    protected void deliverUpdate(ExecuteRecoveryMeasuresActivity activity, File... archive) {\n-        activity.updateCcz(archive[0]);\n-    }\n-\n-    @Override\n-    protected void deliverError(ExecuteRecoveryMeasuresActivity activity, Exception e) {\n-        activity.onCczScanFailed(e);\n-    }\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}, {"oid": "bc9839204a84002ae5c9283d2d679afee1dd37f0", "committedDate": "2021-01-25 11:26:05 +0530", "message": "Fix last known ccz location handling"}, {"oid": "3ad598f35a7b200ee70193f8ac27de8bfda8c598", "committedDate": "2021-01-25 15:33:10 +0530", "message": "Remove scan ccz task"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODE0Mg==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383728142", "body": "there are 2 nested if here with `uuid == null` check. Is there a particular reason behind that ?", "bodyText": "there are 2 nested if here with uuid == null check. Is there a particular reason behind that ?", "bodyHTML": "<p dir=\"auto\">there are 2 nested if here with <code>uuid == null</code> check. Is there a particular reason behind that ?</p>", "author": "shubham1g5", "createdAt": "2020-02-25T08:40:11Z", "path": "app/src/org/commcare/utils/DeviceIdentifier.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.commcare.utils;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+import androidx.preference.PreferenceManager;\n+import java.util.UUID;\n+\n+/**\n+ * A Utility to get a unique identifier for app's installation.\n+ * @author $|-|!\u02c5@M\n+ */\n+public final class DeviceIdentifier {\n+\n+    private static volatile String uuid;\n+    private static final String PREFIX = \"commcare_\";\n+    private static final String KEY_DEVICE_IDENTIFIER = \"commcare_device_id\";\n+\n+    /**\n+     * Returns a unique(very highly likely) identifier for this device.\n+     * This identifier is prefixed with \"commcare_\"\n+     *\n+     * This id may change when user re-installs the app or does a factory reset.\n+     */\n+    public static String getDeviceIdentifier(Context context) {\n+        if (uuid == null) {", "originalCommit": "614e927891fab52212ee364e453fbc0548af9633", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc2NDE0NQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383764145", "bodyText": "Yeah, this pattern is also popular as double-checked locking idiom, used to reduce the overhead of acquiring a lock by first testing the locking criterion without actually acquiring the lock.", "author": "ShivamPokhriyal", "createdAt": "2020-02-25T09:43:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODE0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3OTEyOQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383779129", "bodyText": "Interesting!", "author": "shubham1g5", "createdAt": "2020-02-25T10:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODE0Mg=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}]}, {"oid": "0229a29967de8a0d643f48cb331ab80b5d1a3210", "url": "https://github.com/dimagi/commcare-android/commit/0229a29967de8a0d643f48cb331ab80b5d1a3210", "message": "Remove soft asserts from paths that will definitely get hit", "committedDate": "2020-02-25T09:47:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4MTE3MQ==", "url": "https://github.com/dimagi/commcare-android/pull/2176#discussion_r383781171", "body": "@ctsims  Goint to merge this to go ahead with code freeze though can you review this class and see the device identifier makes sense to you. ", "bodyText": "@ctsims  Goint to merge this to go ahead with code freeze though can you review this class and see the device identifier makes sense to you.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ctsims/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ctsims\">@ctsims</a>  Goint to merge this to go ahead with code freeze though can you review this class and see the device identifier makes sense to you.</p>", "author": "shubham1g5", "createdAt": "2020-02-25T10:12:18Z", "path": "app/src/org/commcare/utils/DeviceIdentifier.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.commcare.utils;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+import androidx.preference.PreferenceManager;\n+import java.util.UUID;\n+\n+/**\n+ * A Utility to get a unique identifier for app's installation.\n+ * @author $|-|!\u02c5@M\n+ */\n+public final class DeviceIdentifier {", "originalCommit": "0229a29967de8a0d643f48cb331ab80b5d1a3210", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "761bbaafb1f4a1d40f8e76b07b37147c028cddae", "message": "Merge commit", "committedDate": null}]}]}