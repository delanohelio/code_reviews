{"pr_number": 1569, "pr_title": "Fixes #1464 - SimpleThreadPool for importtable", "pr_author": "arvindshmicrosoft", "pr_createdAt": "2020-03-23T23:36:07Z", "pr_url": "https://github.com/apache/accumulo/pull/1569", "timeline": [{"oid": "efb5aedcda621b2c1365840257a95684e0e274a0", "url": "https://github.com/apache/accumulo/commit/efb5aedcda621b2c1365840257a95684e0e274a0", "message": "Use SimpleThreadPool for importtable file renames\n\nFixes #1464 - importtable improved with parallel calls to fs.rename\nfrom multiple threads within a SimpleThreadPool. Thread pool size is\ncontrolled by new property master.importtable.rename.threadpool.size", "committedDate": "2020-03-23T23:38:08Z", "type": "commit"}, {"oid": "efb5aedcda621b2c1365840257a95684e0e274a0", "url": "https://github.com/apache/accumulo/commit/efb5aedcda621b2c1365840257a95684e0e274a0", "message": "Use SimpleThreadPool for importtable file renames\n\nFixes #1464 - importtable improved with parallel calls to fs.rename\nfrom multiple threads within a SimpleThreadPool. Thread pool size is\ncontrolled by new property master.importtable.rename.threadpool.size", "committedDate": "2020-03-23T23:38:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397131895", "body": "I wonder if we can combine this with ```MASTER_BULK_RENAME_THREADS``` and just have one common value for renames in the Master.", "bodyText": "I wonder if we can combine this with MASTER_BULK_RENAME_THREADS and just have one common value for renames in the Master.", "bodyHTML": "<p dir=\"auto\">I wonder if we can combine this with <code>MASTER_BULK_RENAME_THREADS</code> and just have one common value for renames in the Master.</p>", "author": "milleruntime", "createdAt": "2020-03-24T12:58:41Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -251,6 +251,9 @@\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n+  MASTER_IMPORTTABLE_RENAME_THREADS(\"master.importtable.rename.threadpool.size\", \"20\",\n+      PropertyType.COUNT,\n+      \"The number of threads to use when renaming user files when importing a table.\"),", "originalCommit": "efb5aedcda621b2c1365840257a95684e0e274a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4MjMzMA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397182330", "bodyText": "Could deprecate the bulk.rename prop and have a new master.import.rename.threadpool.size.   Could use the AccumuloConfiguration.resolve() method in the bulk import code to get the correct property.", "author": "keith-turner", "createdAt": "2020-03-24T14:11:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNDc4MA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397204780", "bodyText": "I was thinking deprecate master.bulk.rename.threadpool.size and create something more generic like master.rename.threadpool.size that could be used anywhere in the Master where we want to optimize renames.  Just doing a quick search for \"fs.rename\" the new and old Bulk imports could use this property as well.  My point is I don't think it need to have a property for each fate operation.  If a user is having issues with NN renames, they would benefit in the other operations as well.", "author": "milleruntime", "createdAt": "2020-03-24T14:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyNTAzMw==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397225033", "bodyText": "Thank you Mike and Keith - I'll lean on your experience to guide me accordingly. I conceptually agree having one property would be better.", "author": "arvindshmicrosoft", "createdAt": "2020-03-24T15:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1OTQ5Nw==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397259497", "bodyText": "Can I proceed to revise this PR with the following:\n\ndeprecate master.bulk.rename.threadpool.size and recommend master.rename.threadpool.size as the new property\nupdate the importdirectory (bulk) code with the appropriate code to resolve the new property and warn about deprecation\nupdate the changed importtable code to leverage the new property\n\nPlease let me know.", "author": "arvindshmicrosoft", "createdAt": "2020-03-24T15:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MzE4OA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397293188", "bodyText": "Sounds good.  After you finish this PR, I can create a follow on ticket to utilize the new property across the other FATE operations that perform renames.", "author": "milleruntime", "createdAt": "2020-03-24T16:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxOTM2OQ==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397619369", "bodyText": "The changes are implemented. Please take a look. I was also curious about what you meant by \"other FATE operations that perform renames\". I think bulk ingest (importdirectory) is one, which is addressed in this PR now, but would like to know where else (of course, I'll leave those changes to a later change as you suggested).", "author": "arvindshmicrosoft", "createdAt": "2020-03-25T05:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMTg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "994f1e1e473f5b005d5720bb640620c1bde7dc9e", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex bc17284136..fc83376d29 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -248,12 +248,13 @@ public enum Property {\n       \"The number of threads to use when coordinating a bulk import.\"),\n   MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n+  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+  @Deprecated\n+  @ReplacedBy(property = MASTER_RENAME_THREADS)\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when moving user files to bulk ingest \"\n+      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_IMPORTTABLE_RENAME_THREADS(\"master.importtable.rename.threadpool.size\", \"20\",\n-      PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files when importing a table.\"),\n   MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n", "next_change": {"commit": "352d2cd050411233148fd476531d93297b98d308", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex fc83376d29..585f7bed2e 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -259,6 +264,9 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+      PropertyType.BOOLEAN,\n+      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "4c7bd9f09351aa6f083542ce8c5b68e7cec0aec9", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 585f7bed2e..7d1db83382 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "909c275a07e8d79120449e15ab2a91bdef62b202", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 7d1db83382..4daf62c9e6 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "113ca49ae4a86a4066c97ace12b0d13bf5708c77", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 4daf62c9e6..2216ea0729 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -265,8 +264,7 @@ public enum Property {\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n   MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN,\n-      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n+      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "87da7a1b3d23599e429902e084e134c15af4c4d5", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 2216ea0729..1defd73e55 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "abc961a9c742dad47b54ee5d5b1932d26e6a991a", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 1defd73e55..a2f88c7383 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +261,6 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "b79c7f02d4ab788bfa914b9cbec0f87758003942", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex a2f88c7383..26c54af063 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -261,6 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "300c933baa5800fd3bdcee2793dd416aeb26a9e6", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 26c54af063..9525f34547 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -235,80 +245,88 @@ public enum Property {\n       PropertyType.TIMEDURATION,\n       \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n \n-  // properties that are specific to master server behavior\n+  // properties that are specific to manager server behavior\n+  MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n+      \"Properties in this category affect the behavior of the manager server.\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the master server\"),\n-  MASTER_CLIENTPORT(\"master.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the master\"),\n-  MASTER_TABLET_BALANCER(\"master.tablet.balancer\",\n+      \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n+          + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n+          + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+  MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n+      \"The port used for handling client connections on the manager\"),\n+  MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n       \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n           + \"migration decisions.\"),\n-  MASTER_BULK_RETRIES(\"master.bulk.retries\", \"3\", PropertyType.COUNT,\n+  MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n       \"The number of attempts to bulk import a RFile before giving up.\"),\n-  MASTER_BULK_THREADPOOL_SIZE(\"master.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n+  MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n       \"The number of threads to use when coordinating a bulk import.\"),\n-  MASTER_BULK_THREADPOOL_TIMEOUT(\"master.bulk.threadpool.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n+      PropertyType.TIMEDURATION,\n       \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n-  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n   @Deprecated(since = \"2.1.0\")\n-  @ReplacedBy(property = MASTER_RENAME_THREADS)\n-  MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  @ReplacedBy(property = MANAGER_RENAME_THREADS)\n+  MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n+  MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n-  MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n+  MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n       \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n+  MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n-  MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n+  MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n           + \"completely quit. This delay gives it time before log recoveries begin.\"),\n-  MASTER_LEASE_RECOVERY_WAITING_PERIOD(\"master.lease.recovery.interval\", \"5s\",\n+  MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n-  MASTER_WALOG_CLOSER_IMPLEMETATION(\"master.walog.closer.implementation\",\n+  MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n       \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n       \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n-  MASTER_FATE_METRICS_ENABLED(\"master.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n+  MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n-  MASTER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"master.fate.metrics.min.update.interval\", \"60s\",\n+  MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n       PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n-  MASTER_FATE_THREADPOOL_SIZE(\"master.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n+  MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n           + \" These are primarily table operations like merge.\"),\n-  MASTER_REPLICATION_SCAN_INTERVAL(\"master.replication.status.scan.interval\", \"30s\",\n+  MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n           + \"replication table for new data\"),\n-  MASTER_REPLICATION_COORDINATOR_PORT(\"master.replication.coordinator.port\", \"10001\",\n+  MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n       PropertyType.PORT, \"Port for the replication coordinator service\"),\n-  MASTER_REPLICATION_COORDINATOR_MINTHREADS(\"master.replication.coordinator.minthreads\", \"4\",\n+  MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n       PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n-  MASTER_REPLICATION_COORDINATOR_THREADCHECK(\"master.replication.coordinator.threadcheck.time\",\n+  MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the coordinator thread pool\"),\n-  MASTER_STATUS_THREAD_POOL_SIZE(\"master.status.threadpool.size\", \"0\", PropertyType.COUNT,\n+  MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n           + \"indicates an unlimited number of threads will be used.\"),\n-  MASTER_METADATA_SUSPENDABLE(\"master.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n+  MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n           + \" table to be suspended via table.suspend.duration.\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"master.startup.tserver.avail.min.count\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n-      \"Minimum number of tservers that need to be registered before master will \"\n-          + \"start tablet assignment - checked at master initialization, when master gets lock. \"\n+      \"Minimum number of tservers that need to be registered before manager will \"\n+          + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n           + \" behaviour. Added with version 1.10\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"master.startup.tserver.avail.max.wait\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n-      \"Maximum time master will wait for tserver available threshold \"\n+      \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n           + \"threshold is set greater than 0. Added with version 1.10\"),\n", "next_change": {"commit": "ff835f28445d2e0a1221da78e3656ba4c8c1240f", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 9525f34547..a9fd2a03ab 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -126,286 +131,377 @@ public enum Property {\n           + \"Replacements must be configured for use. To see which volumes are \"\n           + \"currently in use, run 'accumulo admin volumes -l'. To use a comma or \"\n           + \"other reserved characters in a URI use standard URI hex encoding. For \"\n-          + \"example replace commas with %2C.\"),\n+          + \"example replace commas with %2C.\",\n+      \"1.6.0\"),\n   INSTANCE_VOLUMES_UPGRADE_RELATIVE(\"instance.volumes.upgrade.relative\", \"\", PropertyType.STRING,\n       \"The volume dfs uri containing relative tablet file paths. Relative paths may exist in the metadata from \"\n           + \"versions prior to 1.6. This property is only required if a relative path is detected \"\n-          + \"during the upgrade process and will only be used once.\"),\n+          + \"during the upgrade process and will only be used once.\",\n+      \"2.1.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHENTICATOR(\"instance.security.authenticator\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthenticator\", PropertyType.CLASSNAME,\n       \"The authenticator class that accumulo will use to determine if a user \"\n-          + \"has privilege to perform an action\"),\n+          + \"has privilege to perform an action\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHORIZOR(\"instance.security.authorizor\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthorizor\", PropertyType.CLASSNAME,\n       \"The authorizor class that accumulo will use to determine what labels a \"\n-          + \"user has privilege to see\"),\n+          + \"user has privilege to see\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_PERMISSION_HANDLER(\"instance.security.permissionHandler\",\n       \"org.apache.accumulo.server.security.handler.ZKPermHandler\", PropertyType.CLASSNAME,\n       \"The permission handler class that accumulo will use to determine if a \"\n-          + \"user has privilege to perform an action\"),\n+          + \"user has privilege to perform an action\",\n+      \"1.5.0\"),\n   INSTANCE_RPC_SSL_ENABLED(\"instance.rpc.ssl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Use SSL for socket connections from clients and among accumulo services. \"\n-          + \"Mutually exclusive with SASL RPC configuration.\"),\n+          + \"Mutually exclusive with SASL RPC configuration.\",\n+      \"1.6.0\"),\n   INSTANCE_RPC_SSL_CLIENT_AUTH(\"instance.rpc.ssl.clientAuth\", \"false\", PropertyType.BOOLEAN,\n-      \"Require clients to present certs signed by a trusted root\"),\n-  /**\n-   * @since 1.7.0\n-   */\n+      \"Require clients to present certs signed by a trusted root\", \"1.6.0\"),\n   INSTANCE_RPC_SASL_ENABLED(\"instance.rpc.sasl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Configures Thrift RPCs to require SASL with GSSAPI which supports \"\n-          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\"),\n+          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\",\n+      \"1.7.0\"),\n   INSTANCE_RPC_SASL_ALLOWED_USER_IMPERSONATION(\"instance.rpc.sasl.allowed.user.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling what users are allowed to \"\n-          + \"impersonate other users\"),\n+          + \"impersonate other users\",\n+      \"1.7.1\"),\n   INSTANCE_RPC_SASL_ALLOWED_HOST_IMPERSONATION(\"instance.rpc.sasl.allowed.host.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling the network locations \"\n-          + \"(hostnames) that are allowed to impersonate other users\"),\n+          + \"(hostnames) that are allowed to impersonate other users\",\n+      \"1.7.1\"),\n   // Crypto-related properties\n   @Experimental\n   INSTANCE_CRYPTO_PREFIX(\"instance.crypto.opts.\", null, PropertyType.PREFIX,\n-      \"Properties related to on-disk file encryption.\"),\n+      \"Properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   @Sensitive\n   INSTANCE_CRYPTO_SENSITIVE_PREFIX(\"instance.crypto.opts.sensitive.\", null, PropertyType.PREFIX,\n-      \"Sensitive properties related to on-disk file encryption.\"),\n+      \"Sensitive properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   INSTANCE_CRYPTO_SERVICE(\"instance.crypto.service\",\n-      \"org.apache.accumulo.core.cryptoImpl.NoCryptoService\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.crypto.NoCryptoService\", PropertyType.CLASSNAME,\n       \"The class which executes on-disk file encryption. The default does nothing. To enable \"\n           + \"encryption, replace this classname with an implementation of the\"\n-          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\"),\n+          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\",\n+      \"2.0.0\"),\n \n   // general properties\n   GENERAL_PREFIX(\"general.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of accumulo overall, but\"\n-          + \" do not have to be consistent throughout a cloud.\"),\n+          + \" do not have to be consistent throughout a cloud.\",\n+      \"1.3.5\"),\n   @Deprecated(since = \"2.0.0\")\n   GENERAL_DYNAMIC_CLASSPATHS(\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DYNAMIC_CLASSPATH_PROPERTY_NAME,\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DEFAULT_DYNAMIC_CLASSPATH_VALUE,\n       PropertyType.STRING,\n-      \"This property is deprecated since 2.0.0. A list of all of the places where changes \"\n+      \"A list of all of the places where changes \"\n           + \"in jars or classes will force a reload of the classloader. Built-in dynamic class \"\n           + \"loading will be removed in a future version. If this is needed, consider overriding \"\n           + \"the Java system class loader with one that has this feature \"\n           + \"(https://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getSystemClassLoader--). \"\n           + \"Additionally, this property no longer does property interpolation of environment \"\n           + \"variables, such as '$ACCUMULO_HOME'. Use commons-configuration syntax,\"\n-          + \"'${env:ACCUMULO_HOME}' instead.\"),\n+          + \"'${env:ACCUMULO_HOME}' instead.\",\n+      \"1.3.5\"),\n   GENERAL_CONTEXT_CLASSLOADER_FACTORY(\"general.context.class.loader.factory\", \"\",\n       PropertyType.CLASSNAME,\n       \"Name of classloader factory to be used to create classloaders for named contexts,\"\n-          + \" such as per-table contexts set by `table.class.loader.context`.\"),\n+          + \" such as per-table contexts set by `table.class.loader.context`.\",\n+      \"2.1.0\"),\n   GENERAL_RPC_TIMEOUT(\"general.rpc.timeout\", \"120s\", PropertyType.TIMEDURATION,\n-      \"Time to wait on I/O for simple, short RPC calls\"),\n+      \"Time to wait on I/O for simple, short RPC calls\", \"1.3.5\"),\n   @Experimental\n   GENERAL_RPC_SERVER_TYPE(\"general.rpc.server.type\", \"\", PropertyType.STRING,\n       \"Type of Thrift server to instantiate, see \"\n           + \"org.apache.accumulo.server.rpc.ThriftServerType for more information. \"\n-          + \"Only useful for benchmarking thrift servers\"),\n+          + \"Only useful for benchmarking thrift servers\",\n+      \"1.7.0\"),\n   GENERAL_KERBEROS_KEYTAB(\"general.kerberos.keytab\", \"\", PropertyType.PATH,\n-      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\"),\n+      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\", \"1.4.1\"),\n   GENERAL_KERBEROS_PRINCIPAL(\"general.kerberos.principal\", \"\", PropertyType.STRING,\n       \"Name of the kerberos principal to use. _HOST will automatically be \"\n           + \"replaced by the machines hostname in the hostname portion of the \"\n-          + \"principal. Leave blank if not using kerberoized hdfs\"),\n+          + \"principal. Leave blank if not using kerberoized hdfs\",\n+      \"1.4.1\"),\n   GENERAL_KERBEROS_RENEWAL_PERIOD(\"general.kerberos.renewal.period\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time between attempts to perform Kerberos ticket renewals.\"\n           + \" This does not equate to how often tickets are actually renewed (which is\"\n-          + \" performed at 80% of the ticket lifetime).\"),\n+          + \" performed at 80% of the ticket lifetime).\",\n+      \"1.6.5\"),\n   GENERAL_MAX_MESSAGE_SIZE(\"general.server.message.size.max\", \"1G\", PropertyType.BYTES,\n-      \"The maximum size of a message that can be sent to a server.\"),\n+      \"The maximum size of a message that can be sent to a server.\", \"1.5.0\"),\n   GENERAL_SIMPLETIMER_THREADPOOL_SIZE(\"general.server.simpletimer.threadpool.size\", \"1\",\n-      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\"),\n+      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\",\n+      \"1.7.0\"),\n   // If you update the default type, be sure to update the default used for initialization failures\n   // in VolumeManagerImpl\n   @Experimental\n-  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\",\n-      \"org.apache.accumulo.server.fs.RandomVolumeChooser\", PropertyType.CLASSNAME,\n-      \"The class that will be used to select which volume will be used to create new files.\"),\n+  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\", RandomVolumeChooser.class.getName(),\n+      PropertyType.CLASSNAME,\n+      \"The class that will be used to select which volume will be used to create new files.\",\n+      \"1.6.0\"),\n   GENERAL_SECURITY_CREDENTIAL_PROVIDER_PATHS(\"general.security.credential.provider.paths\", \"\",\n-      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\"),\n+      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\", \"1.6.1\"),\n   GENERAL_ARBITRARY_PROP_PREFIX(\"general.custom.\", null, PropertyType.PREFIX,\n       \"Prefix to be used for user defined system-wide properties. This may be\"\n           + \" particularly useful for system-wide configuration for various\"\n           + \" user-implementations of pluggable Accumulo features, such as the balancer\"\n-          + \" or volume chooser.\"),\n+          + \" or volume chooser.\",\n+      \"2.0.0\"),\n   GENERAL_DELEGATION_TOKEN_LIFETIME(\"general.delegation.token.lifetime\", \"7d\",\n       PropertyType.TIMEDURATION,\n-      \"The length of time that delegation tokens and secret keys are valid\"),\n+      \"The length of time that delegation tokens and secret keys are valid\", \"1.7.0\"),\n   GENERAL_DELEGATION_TOKEN_UPDATE_INTERVAL(\"general.delegation.token.update.interval\", \"1d\",\n-      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\"),\n+      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\",\n+      \"1.7.0\"),\n   GENERAL_MAX_SCANNER_RETRY_PERIOD(\"general.max.scanner.retry.period\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n+      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\",\n+      \"1.7.3\"),\n \n   // properties that are specific to manager server behavior\n   MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the manager server.\"),\n+      \"Properties in this category affect the behavior of the manager server. \"\n+          + \"Since 2.1.0, all properties in this category replace the old `master.*` names.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n           + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n           + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n-          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\",\n+      \"1.3.5\"),\n   MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the manager\"),\n+      \"The port used for handling client connections on the manager\", \"1.3.5\"),\n   MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n-      \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n-          + \"migration decisions.\"),\n+          + \"migration decisions.\",\n+      \"1.3.5\"),\n   MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n-      \"The number of attempts to bulk import a RFile before giving up.\"),\n+      \"The number of attempts to bulk import a RFile before giving up.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n-      \"The number of threads to use when coordinating a bulk import.\"),\n+      \"The number of threads to use when coordinating a bulk import.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n       PropertyType.TIMEDURATION,\n-      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n-      \"The time to wait for a tablet server to process a bulk import request\"),\n+      \"The time to wait for a tablet server to process a bulk import request\", \"1.4.3\"),\n   MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = MANAGER_RENAME_THREADS)\n   MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n-          + \"directories under accumulo control\"),\n+      \"The number of threads to use when moving user files to bulk ingest \"\n+          + \"directories under accumulo control\",\n+      \"1.7.0\"),\n   MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n-      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n+      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\",\n+      \"2.0.0\"),\n   MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n-      \"The minimum number of threads to use to handle incoming requests.\"),\n+      \"The minimum number of threads to use to handle incoming requests.\", \"1.4.0\"),\n   MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the server thread pool.\"),\n+      \"The time between adjustments of the server thread pool.\", \"1.4.0\"),\n   MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n-          + \"completely quit. This delay gives it time before log recoveries begin.\"),\n+          + \"completely quit. This delay gives it time before log recoveries begin.\",\n+      \"1.5.0\"),\n   MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n+      \"The amount of time to wait after requesting a write-ahead log to be recovered\", \"1.5.0\"),\n+  MANAGER_WAL_CLOSER_IMPLEMENTATION(\"manager.wal.closer.implementation\",\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_WAL_CLOSER_IMPLEMENTATION)\n   MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n-      \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n-      \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"1.5.0\"),\n   MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n-      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n+      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\", \"1.9.3\"),\n   MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n-      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n+      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\",\n+      \"1.9.3\"),\n   MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n-          + \" These are primarily table operations like merge.\"),\n+          + \" These are primarily table operations like merge.\",\n+      \"1.4.3\"),\n   MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n-          + \"replication table for new data\"),\n+          + \"replication table for new data\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n-      PropertyType.PORT, \"Port for the replication coordinator service\"),\n+      PropertyType.PORT, \"Port for the replication coordinator service\", \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n-      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n+      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the coordinator thread pool\"),\n+      \"The time between adjustments of the coordinator thread pool\", \"1.7.0\"),\n   MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n-          + \"indicates an unlimited number of threads will be used.\"),\n+          + \"indicates an unlimited number of threads will be used.\",\n+      \"1.8.0\"),\n   MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n-          + \" table to be suspended via table.suspend.duration.\"),\n+          + \" table to be suspended via table.suspend.duration.\",\n+      \"1.8.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n       \"Minimum number of tservers that need to be registered before manager will \"\n           + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n-          + \" behaviour. Added with version 1.10\"),\n+          + \" behaviour. Added with version 1.10\",\n+      \"1.10.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n       \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n-          + \"threshold is set greater than 0. Added with version 1.10\"),\n+          + \"threshold is set greater than 0. Added with version 1.10\",\n+      \"1.10.0\"),\n   // properties that are specific to tablet server behavior\n   TSERV_PREFIX(\"tserver.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the tablet servers\"),\n+      \"Properties in this category affect the behavior of the tablet servers\", \"1.3.5\"),\n   TSERV_CLIENT_TIMEOUT(\"tserver.client.timeout\", \"3s\", PropertyType.TIMEDURATION,\n-      \"Time to wait for clients to continue scans before closing a session.\"),\n+      \"Time to wait for clients to continue scans before closing a session.\", \"1.3.5\"),\n   TSERV_DEFAULT_BLOCKSIZE(\"tserver.default.blocksize\", \"1M\", PropertyType.BYTES,\n-      \"Specifies a default blocksize for the tserver caches\"),\n+      \"Specifies a default blocksize for the tserver caches\", \"1.3.5\"),\n   TSERV_CACHE_MANAGER_IMPL(\"tserver.cache.manager.class\",\n       \"org.apache.accumulo.core.file.blockfile.cache.lru.LruBlockCacheManager\", PropertyType.STRING,\n       \"Specifies the class name of the block cache factory implementation.\"\n           + \" Alternative implementation is\"\n-          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\"),\n+          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\",\n+      \"2.0.0\"),\n   TSERV_DATACACHE_SIZE(\"tserver.cache.data.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile data blocks.\"),\n+      \"Specifies the size of the cache for RFile data blocks.\", \"1.3.5\"),\n   TSERV_INDEXCACHE_SIZE(\"tserver.cache.index.size\", \"25%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile index blocks.\"),\n+      \"Specifies the size of the cache for RFile index blocks.\", \"1.3.5\"),\n   TSERV_SUMMARYCACHE_SIZE(\"tserver.cache.summary.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for summary data on each tablet server.\"),\n+      \"Specifies the size of the cache for summary data on each tablet server.\", \"2.0.0\"),\n   TSERV_PORTSEARCH(\"tserver.port.search\", \"false\", PropertyType.BOOLEAN,\n-      \"if the ports above are in use, search higher ports until one is available\"),\n+      \"if the ports above are in use, search higher ports until one is available\", \"1.3.5\"),\n   TSERV_CLIENTPORT(\"tserver.port.client\", \"9997\", PropertyType.PORT,\n-      \"The port used for handling client connections on the tablet servers\"),\n+      \"The port used for handling client connections on the tablet servers\", \"1.3.5\"),\n   TSERV_TOTAL_MUTATION_QUEUE_MAX(\"tserver.total.mutation.queue.max\", \"5%\", PropertyType.MEMORY,\n-      \"The amount of memory used to store write-ahead-log mutations before flushing them.\"),\n+      \"The amount of memory used to store write-ahead-log mutations before flushing them.\",\n+      \"1.7.0\"),\n   TSERV_TABLET_SPLIT_FINDMIDPOINT_MAXOPEN(\"tserver.tablet.split.midpoint.files.max\", \"300\",\n       PropertyType.COUNT,\n       \"To find a tablets split points, all RFiles are opened and their indexes\"\n           + \" are read. This setting determines how many RFiles can be opened at once.\"\n           + \" When there are more RFiles than this setting multiple passes must be\"\n           + \" made, which is slower. However opening too many RFiles at once can cause\"\n-          + \" problems.\"),\n+          + \" problems.\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_REFERENCED(\"tserver.wal.max.referenced\", \"3\", PropertyType.COUNT,\n+      \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n+          + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n+          + \"logs or more will be compacted.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_REFERENCED)\n   TSERV_WALOG_MAX_REFERENCED(\"tserver.walog.max.referenced\", \"3\", PropertyType.COUNT,\n       \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n           + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n-          + \"logs or more will be compacted.\"),\n+          + \"logs or more will be compacted.\",\n+      \"2.0.0\"),\n+  TSERV_WAL_MAX_SIZE(\"tserver.wal.max.size\", \"1G\", PropertyType.BYTES,\n+      \"The maximum size for each write-ahead log. See comment for property\"\n+          + \" tserver.memory.maps.max\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_SIZE)\n   TSERV_WALOG_MAX_SIZE(\"tserver.walog.max.size\", \"1G\", PropertyType.BYTES,\n       \"The maximum size for each write-ahead log. See comment for property\"\n-          + \" tserver.memory.maps.max\"),\n+          + \" tserver.memory.maps.max\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_AGE(\"tserver.wal.max.age\", \"24h\", PropertyType.TIMEDURATION,\n+      \"The maximum age for each write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_AGE)\n   TSERV_WALOG_MAX_AGE(\"tserver.walog.max.age\", \"24h\", PropertyType.TIMEDURATION,\n-      \"The maximum age for each write-ahead log.\"),\n+      \"The maximum age for each write-ahead log.\", \"1.6.6\"),\n+  TSERV_WAL_TOLERATED_CREATION_FAILURES(\"tserver.wal.tolerated.creation.failures\", \"50\",\n+      PropertyType.COUNT,\n+      \"The maximum number of failures tolerated when creating a new write-ahead\"\n+          + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n+          + \" number of failures consecutively trying to create a new write-ahead log\"\n+          + \" causes the TabletServer to exit.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_CREATION_FAILURES)\n   TSERV_WALOG_TOLERATED_CREATION_FAILURES(\"tserver.walog.tolerated.creation.failures\", \"50\",\n       PropertyType.COUNT,\n       \"The maximum number of failures tolerated when creating a new write-ahead\"\n           + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n           + \" number of failures consecutively trying to create a new write-ahead log\"\n-          + \" causes the TabletServer to exit.\"),\n+          + \" causes the TabletServer to exit.\",\n+      \"1.7.1\"),\n+  TSERV_WAL_TOLERATED_WAIT_INCREMENT(\"tserver.wal.tolerated.wait.increment\", \"1000ms\",\n+      PropertyType.TIMEDURATION,\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_WAIT_INCREMENT)\n   TSERV_WALOG_TOLERATED_WAIT_INCREMENT(\"tserver.walog.tolerated.wait.increment\", \"1000ms\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait between failures to create or write a write-ahead log.\"),\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"1.7.1\"),\n+  // Never wait longer than 5 mins for a retry\n+  TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.wal.maximum.wait.duration\", \"5m\",\n+      PropertyType.TIMEDURATION,\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"2.1.0\"),\n   // Never wait longer than 5 mins for a retry\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION)\n   TSERV_WALOG_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.walog.maximum.wait.duration\", \"5m\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\"),\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"1.7.1\"),\n   TSERV_SCAN_MAX_OPENFILES(\"tserver.scan.files.open.max\", \"100\", PropertyType.COUNT,\n-      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \"),\n+      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \", \"1.4.0\"),\n   TSERV_MAX_IDLE(\"tserver.files.open.idle\", \"1m\", PropertyType.TIMEDURATION,\n       \"Tablet servers leave previously used RFiles open for future queries.\"\n           + \" This setting determines how much time an unused RFile should be kept open\"\n-          + \" until it is closed.\"),\n+          + \" until it is closed.\",\n+      \"1.3.5\"),\n   TSERV_NATIVEMAP_ENABLED(\"tserver.memory.maps.native.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"An in-memory data store for accumulo implemented in c++ that increases\"\n-          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\"),\n+          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\",\n+      \"1.3.5\"),\n   TSERV_MAXMEM(\"tserver.memory.maps.max\", \"33%\", PropertyType.MEMORY,\n       \"Maximum amount of memory that can be used to buffer data written to a\"\n           + \" tablet server. There are two other properties that can effectively limit\"\n           + \" memory usage table.compaction.minor.logs.threshold and\"\n-          + \" tserver.walog.max.size. Ensure that table.compaction.minor.logs.threshold\"\n-          + \" * tserver.walog.max.size >= this property.\"),\n+          + \" tserver.wal.max.size. Ensure that table.compaction.minor.logs.threshold\"\n+          + \" * tserver.wal.max.size >= this property.\",\n+      \"1.3.5\"),\n   TSERV_SESSION_MAXIDLE(\"tserver.session.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate scan sessions\"\n-          + \" to determine if they can be closed due to inactivity\"),\n+          + \" to determine if they can be closed due to inactivity\",\n+      \"1.3.5\"),\n   TSERV_UPDATE_SESSION_MAXIDLE(\"tserver.session.update.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate update\"\n-          + \" sessions to determine if they can be closed due to inactivity\"),\n+          + \" sessions to determine if they can be closed due to inactivity\",\n+      \"1.6.5\"),\n   TSERV_SCAN_EXECUTORS_PREFIX(\"tserver.scan.executors.\", null, PropertyType.PREFIX,\n       \"Prefix for defining executors to service scans. See \"\n           + \"[scan executors]({% durl administration/scan-executors %}) for an overview of why and\"\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"oid": "8b530e0598f9831b8e343c7a7f56703ffc45bd92", "url": "https://github.com/apache/accumulo/commit/8b530e0598f9831b8e343c7a7f56703ffc45bd92", "message": "Usee common property for file rename threadpools\n\n* deprecates master.bulk.rename.threadpool.size\n* master.rename.threadpool.size is a new common property shared across\n  import and bulk ingest\n* update importdirectory (bulk ingest) code to leverage new property", "committedDate": "2020-03-25T05:35:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMTYyMA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397901620", "body": "Can this be removed?", "bodyText": "Can this be removed?", "bodyHTML": "<p dir=\"auto\">Can this be removed?</p>", "author": "keith-turner", "createdAt": "2020-03-25T14:33:20Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -248,9 +248,16 @@\n       \"The number of threads to use when coordinating a bulk import.\"),\n   MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n+  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+  @Deprecated\n+  @ReplacedBy(property = MASTER_RENAME_THREADS)\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n+  MASTER_IMPORTTABLE_RENAME_THREADS(\"master.importtable.rename.threadpool.size\", \"20\",", "originalCommit": "8b530e0598f9831b8e343c7a7f56703ffc45bd92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxOTQ1Nw==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397919457", "bodyText": "So sorry, I could have sworn I took care of that. Will address. Sorry again!", "author": "arvindshmicrosoft", "createdAt": "2020-03-25T14:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMTYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4OTczNA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397989734", "bodyText": "Done.", "author": "arvindshmicrosoft", "createdAt": "2020-03-25T16:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMTYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "994f1e1e473f5b005d5720bb640620c1bde7dc9e", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 775d59a0f5..fc83376d29 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -253,11 +253,8 @@ public enum Property {\n   @Deprecated\n   @ReplacedBy(property = MASTER_RENAME_THREADS)\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when moving user files to bulk ingest \"\n+      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_IMPORTTABLE_RENAME_THREADS(\"master.importtable.rename.threadpool.size\", \"20\",\n-      PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files when importing a table.\"),\n   MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n", "next_change": {"commit": "352d2cd050411233148fd476531d93297b98d308", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex fc83376d29..585f7bed2e 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -259,6 +264,9 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+      PropertyType.BOOLEAN,\n+      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "4c7bd9f09351aa6f083542ce8c5b68e7cec0aec9", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 585f7bed2e..7d1db83382 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "909c275a07e8d79120449e15ab2a91bdef62b202", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 7d1db83382..4daf62c9e6 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "113ca49ae4a86a4066c97ace12b0d13bf5708c77", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 4daf62c9e6..2216ea0729 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -265,8 +264,7 @@ public enum Property {\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n   MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN,\n-      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n+      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "87da7a1b3d23599e429902e084e134c15af4c4d5", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 2216ea0729..1defd73e55 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "abc961a9c742dad47b54ee5d5b1932d26e6a991a", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 1defd73e55..a2f88c7383 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +261,6 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "b79c7f02d4ab788bfa914b9cbec0f87758003942", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex a2f88c7383..26c54af063 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -261,6 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "300c933baa5800fd3bdcee2793dd416aeb26a9e6", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 26c54af063..9525f34547 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -235,80 +245,88 @@ public enum Property {\n       PropertyType.TIMEDURATION,\n       \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n \n-  // properties that are specific to master server behavior\n+  // properties that are specific to manager server behavior\n+  MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n+      \"Properties in this category affect the behavior of the manager server.\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the master server\"),\n-  MASTER_CLIENTPORT(\"master.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the master\"),\n-  MASTER_TABLET_BALANCER(\"master.tablet.balancer\",\n+      \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n+          + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n+          + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+  MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n+      \"The port used for handling client connections on the manager\"),\n+  MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n       \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n           + \"migration decisions.\"),\n-  MASTER_BULK_RETRIES(\"master.bulk.retries\", \"3\", PropertyType.COUNT,\n+  MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n       \"The number of attempts to bulk import a RFile before giving up.\"),\n-  MASTER_BULK_THREADPOOL_SIZE(\"master.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n+  MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n       \"The number of threads to use when coordinating a bulk import.\"),\n-  MASTER_BULK_THREADPOOL_TIMEOUT(\"master.bulk.threadpool.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n+      PropertyType.TIMEDURATION,\n       \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n-  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n   @Deprecated(since = \"2.1.0\")\n-  @ReplacedBy(property = MASTER_RENAME_THREADS)\n-  MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  @ReplacedBy(property = MANAGER_RENAME_THREADS)\n+  MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n+  MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n-  MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n+  MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n       \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n+  MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n-  MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n+  MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n           + \"completely quit. This delay gives it time before log recoveries begin.\"),\n-  MASTER_LEASE_RECOVERY_WAITING_PERIOD(\"master.lease.recovery.interval\", \"5s\",\n+  MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n-  MASTER_WALOG_CLOSER_IMPLEMETATION(\"master.walog.closer.implementation\",\n+  MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n       \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n       \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n-  MASTER_FATE_METRICS_ENABLED(\"master.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n+  MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n-  MASTER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"master.fate.metrics.min.update.interval\", \"60s\",\n+  MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n       PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n-  MASTER_FATE_THREADPOOL_SIZE(\"master.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n+  MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n           + \" These are primarily table operations like merge.\"),\n-  MASTER_REPLICATION_SCAN_INTERVAL(\"master.replication.status.scan.interval\", \"30s\",\n+  MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n           + \"replication table for new data\"),\n-  MASTER_REPLICATION_COORDINATOR_PORT(\"master.replication.coordinator.port\", \"10001\",\n+  MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n       PropertyType.PORT, \"Port for the replication coordinator service\"),\n-  MASTER_REPLICATION_COORDINATOR_MINTHREADS(\"master.replication.coordinator.minthreads\", \"4\",\n+  MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n       PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n-  MASTER_REPLICATION_COORDINATOR_THREADCHECK(\"master.replication.coordinator.threadcheck.time\",\n+  MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the coordinator thread pool\"),\n-  MASTER_STATUS_THREAD_POOL_SIZE(\"master.status.threadpool.size\", \"0\", PropertyType.COUNT,\n+  MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n           + \"indicates an unlimited number of threads will be used.\"),\n-  MASTER_METADATA_SUSPENDABLE(\"master.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n+  MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n           + \" table to be suspended via table.suspend.duration.\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"master.startup.tserver.avail.min.count\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n-      \"Minimum number of tservers that need to be registered before master will \"\n-          + \"start tablet assignment - checked at master initialization, when master gets lock. \"\n+      \"Minimum number of tservers that need to be registered before manager will \"\n+          + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n           + \" behaviour. Added with version 1.10\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"master.startup.tserver.avail.max.wait\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n-      \"Maximum time master will wait for tserver available threshold \"\n+      \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n           + \"threshold is set greater than 0. Added with version 1.10\"),\n", "next_change": {"commit": "ff835f28445d2e0a1221da78e3656ba4c8c1240f", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 9525f34547..a9fd2a03ab 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -126,286 +131,377 @@ public enum Property {\n           + \"Replacements must be configured for use. To see which volumes are \"\n           + \"currently in use, run 'accumulo admin volumes -l'. To use a comma or \"\n           + \"other reserved characters in a URI use standard URI hex encoding. For \"\n-          + \"example replace commas with %2C.\"),\n+          + \"example replace commas with %2C.\",\n+      \"1.6.0\"),\n   INSTANCE_VOLUMES_UPGRADE_RELATIVE(\"instance.volumes.upgrade.relative\", \"\", PropertyType.STRING,\n       \"The volume dfs uri containing relative tablet file paths. Relative paths may exist in the metadata from \"\n           + \"versions prior to 1.6. This property is only required if a relative path is detected \"\n-          + \"during the upgrade process and will only be used once.\"),\n+          + \"during the upgrade process and will only be used once.\",\n+      \"2.1.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHENTICATOR(\"instance.security.authenticator\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthenticator\", PropertyType.CLASSNAME,\n       \"The authenticator class that accumulo will use to determine if a user \"\n-          + \"has privilege to perform an action\"),\n+          + \"has privilege to perform an action\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHORIZOR(\"instance.security.authorizor\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthorizor\", PropertyType.CLASSNAME,\n       \"The authorizor class that accumulo will use to determine what labels a \"\n-          + \"user has privilege to see\"),\n+          + \"user has privilege to see\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_PERMISSION_HANDLER(\"instance.security.permissionHandler\",\n       \"org.apache.accumulo.server.security.handler.ZKPermHandler\", PropertyType.CLASSNAME,\n       \"The permission handler class that accumulo will use to determine if a \"\n-          + \"user has privilege to perform an action\"),\n+          + \"user has privilege to perform an action\",\n+      \"1.5.0\"),\n   INSTANCE_RPC_SSL_ENABLED(\"instance.rpc.ssl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Use SSL for socket connections from clients and among accumulo services. \"\n-          + \"Mutually exclusive with SASL RPC configuration.\"),\n+          + \"Mutually exclusive with SASL RPC configuration.\",\n+      \"1.6.0\"),\n   INSTANCE_RPC_SSL_CLIENT_AUTH(\"instance.rpc.ssl.clientAuth\", \"false\", PropertyType.BOOLEAN,\n-      \"Require clients to present certs signed by a trusted root\"),\n-  /**\n-   * @since 1.7.0\n-   */\n+      \"Require clients to present certs signed by a trusted root\", \"1.6.0\"),\n   INSTANCE_RPC_SASL_ENABLED(\"instance.rpc.sasl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Configures Thrift RPCs to require SASL with GSSAPI which supports \"\n-          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\"),\n+          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\",\n+      \"1.7.0\"),\n   INSTANCE_RPC_SASL_ALLOWED_USER_IMPERSONATION(\"instance.rpc.sasl.allowed.user.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling what users are allowed to \"\n-          + \"impersonate other users\"),\n+          + \"impersonate other users\",\n+      \"1.7.1\"),\n   INSTANCE_RPC_SASL_ALLOWED_HOST_IMPERSONATION(\"instance.rpc.sasl.allowed.host.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling the network locations \"\n-          + \"(hostnames) that are allowed to impersonate other users\"),\n+          + \"(hostnames) that are allowed to impersonate other users\",\n+      \"1.7.1\"),\n   // Crypto-related properties\n   @Experimental\n   INSTANCE_CRYPTO_PREFIX(\"instance.crypto.opts.\", null, PropertyType.PREFIX,\n-      \"Properties related to on-disk file encryption.\"),\n+      \"Properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   @Sensitive\n   INSTANCE_CRYPTO_SENSITIVE_PREFIX(\"instance.crypto.opts.sensitive.\", null, PropertyType.PREFIX,\n-      \"Sensitive properties related to on-disk file encryption.\"),\n+      \"Sensitive properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   INSTANCE_CRYPTO_SERVICE(\"instance.crypto.service\",\n-      \"org.apache.accumulo.core.cryptoImpl.NoCryptoService\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.crypto.NoCryptoService\", PropertyType.CLASSNAME,\n       \"The class which executes on-disk file encryption. The default does nothing. To enable \"\n           + \"encryption, replace this classname with an implementation of the\"\n-          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\"),\n+          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\",\n+      \"2.0.0\"),\n \n   // general properties\n   GENERAL_PREFIX(\"general.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of accumulo overall, but\"\n-          + \" do not have to be consistent throughout a cloud.\"),\n+          + \" do not have to be consistent throughout a cloud.\",\n+      \"1.3.5\"),\n   @Deprecated(since = \"2.0.0\")\n   GENERAL_DYNAMIC_CLASSPATHS(\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DYNAMIC_CLASSPATH_PROPERTY_NAME,\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DEFAULT_DYNAMIC_CLASSPATH_VALUE,\n       PropertyType.STRING,\n-      \"This property is deprecated since 2.0.0. A list of all of the places where changes \"\n+      \"A list of all of the places where changes \"\n           + \"in jars or classes will force a reload of the classloader. Built-in dynamic class \"\n           + \"loading will be removed in a future version. If this is needed, consider overriding \"\n           + \"the Java system class loader with one that has this feature \"\n           + \"(https://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getSystemClassLoader--). \"\n           + \"Additionally, this property no longer does property interpolation of environment \"\n           + \"variables, such as '$ACCUMULO_HOME'. Use commons-configuration syntax,\"\n-          + \"'${env:ACCUMULO_HOME}' instead.\"),\n+          + \"'${env:ACCUMULO_HOME}' instead.\",\n+      \"1.3.5\"),\n   GENERAL_CONTEXT_CLASSLOADER_FACTORY(\"general.context.class.loader.factory\", \"\",\n       PropertyType.CLASSNAME,\n       \"Name of classloader factory to be used to create classloaders for named contexts,\"\n-          + \" such as per-table contexts set by `table.class.loader.context`.\"),\n+          + \" such as per-table contexts set by `table.class.loader.context`.\",\n+      \"2.1.0\"),\n   GENERAL_RPC_TIMEOUT(\"general.rpc.timeout\", \"120s\", PropertyType.TIMEDURATION,\n-      \"Time to wait on I/O for simple, short RPC calls\"),\n+      \"Time to wait on I/O for simple, short RPC calls\", \"1.3.5\"),\n   @Experimental\n   GENERAL_RPC_SERVER_TYPE(\"general.rpc.server.type\", \"\", PropertyType.STRING,\n       \"Type of Thrift server to instantiate, see \"\n           + \"org.apache.accumulo.server.rpc.ThriftServerType for more information. \"\n-          + \"Only useful for benchmarking thrift servers\"),\n+          + \"Only useful for benchmarking thrift servers\",\n+      \"1.7.0\"),\n   GENERAL_KERBEROS_KEYTAB(\"general.kerberos.keytab\", \"\", PropertyType.PATH,\n-      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\"),\n+      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\", \"1.4.1\"),\n   GENERAL_KERBEROS_PRINCIPAL(\"general.kerberos.principal\", \"\", PropertyType.STRING,\n       \"Name of the kerberos principal to use. _HOST will automatically be \"\n           + \"replaced by the machines hostname in the hostname portion of the \"\n-          + \"principal. Leave blank if not using kerberoized hdfs\"),\n+          + \"principal. Leave blank if not using kerberoized hdfs\",\n+      \"1.4.1\"),\n   GENERAL_KERBEROS_RENEWAL_PERIOD(\"general.kerberos.renewal.period\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time between attempts to perform Kerberos ticket renewals.\"\n           + \" This does not equate to how often tickets are actually renewed (which is\"\n-          + \" performed at 80% of the ticket lifetime).\"),\n+          + \" performed at 80% of the ticket lifetime).\",\n+      \"1.6.5\"),\n   GENERAL_MAX_MESSAGE_SIZE(\"general.server.message.size.max\", \"1G\", PropertyType.BYTES,\n-      \"The maximum size of a message that can be sent to a server.\"),\n+      \"The maximum size of a message that can be sent to a server.\", \"1.5.0\"),\n   GENERAL_SIMPLETIMER_THREADPOOL_SIZE(\"general.server.simpletimer.threadpool.size\", \"1\",\n-      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\"),\n+      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\",\n+      \"1.7.0\"),\n   // If you update the default type, be sure to update the default used for initialization failures\n   // in VolumeManagerImpl\n   @Experimental\n-  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\",\n-      \"org.apache.accumulo.server.fs.RandomVolumeChooser\", PropertyType.CLASSNAME,\n-      \"The class that will be used to select which volume will be used to create new files.\"),\n+  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\", RandomVolumeChooser.class.getName(),\n+      PropertyType.CLASSNAME,\n+      \"The class that will be used to select which volume will be used to create new files.\",\n+      \"1.6.0\"),\n   GENERAL_SECURITY_CREDENTIAL_PROVIDER_PATHS(\"general.security.credential.provider.paths\", \"\",\n-      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\"),\n+      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\", \"1.6.1\"),\n   GENERAL_ARBITRARY_PROP_PREFIX(\"general.custom.\", null, PropertyType.PREFIX,\n       \"Prefix to be used for user defined system-wide properties. This may be\"\n           + \" particularly useful for system-wide configuration for various\"\n           + \" user-implementations of pluggable Accumulo features, such as the balancer\"\n-          + \" or volume chooser.\"),\n+          + \" or volume chooser.\",\n+      \"2.0.0\"),\n   GENERAL_DELEGATION_TOKEN_LIFETIME(\"general.delegation.token.lifetime\", \"7d\",\n       PropertyType.TIMEDURATION,\n-      \"The length of time that delegation tokens and secret keys are valid\"),\n+      \"The length of time that delegation tokens and secret keys are valid\", \"1.7.0\"),\n   GENERAL_DELEGATION_TOKEN_UPDATE_INTERVAL(\"general.delegation.token.update.interval\", \"1d\",\n-      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\"),\n+      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\",\n+      \"1.7.0\"),\n   GENERAL_MAX_SCANNER_RETRY_PERIOD(\"general.max.scanner.retry.period\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n+      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\",\n+      \"1.7.3\"),\n \n   // properties that are specific to manager server behavior\n   MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the manager server.\"),\n+      \"Properties in this category affect the behavior of the manager server. \"\n+          + \"Since 2.1.0, all properties in this category replace the old `master.*` names.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n           + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n           + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n-          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\",\n+      \"1.3.5\"),\n   MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the manager\"),\n+      \"The port used for handling client connections on the manager\", \"1.3.5\"),\n   MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n-      \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n-          + \"migration decisions.\"),\n+          + \"migration decisions.\",\n+      \"1.3.5\"),\n   MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n-      \"The number of attempts to bulk import a RFile before giving up.\"),\n+      \"The number of attempts to bulk import a RFile before giving up.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n-      \"The number of threads to use when coordinating a bulk import.\"),\n+      \"The number of threads to use when coordinating a bulk import.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n       PropertyType.TIMEDURATION,\n-      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n-      \"The time to wait for a tablet server to process a bulk import request\"),\n+      \"The time to wait for a tablet server to process a bulk import request\", \"1.4.3\"),\n   MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = MANAGER_RENAME_THREADS)\n   MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n-          + \"directories under accumulo control\"),\n+      \"The number of threads to use when moving user files to bulk ingest \"\n+          + \"directories under accumulo control\",\n+      \"1.7.0\"),\n   MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n-      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n+      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\",\n+      \"2.0.0\"),\n   MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n-      \"The minimum number of threads to use to handle incoming requests.\"),\n+      \"The minimum number of threads to use to handle incoming requests.\", \"1.4.0\"),\n   MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the server thread pool.\"),\n+      \"The time between adjustments of the server thread pool.\", \"1.4.0\"),\n   MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n-          + \"completely quit. This delay gives it time before log recoveries begin.\"),\n+          + \"completely quit. This delay gives it time before log recoveries begin.\",\n+      \"1.5.0\"),\n   MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n+      \"The amount of time to wait after requesting a write-ahead log to be recovered\", \"1.5.0\"),\n+  MANAGER_WAL_CLOSER_IMPLEMENTATION(\"manager.wal.closer.implementation\",\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_WAL_CLOSER_IMPLEMENTATION)\n   MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n-      \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n-      \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"1.5.0\"),\n   MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n-      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n+      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\", \"1.9.3\"),\n   MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n-      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n+      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\",\n+      \"1.9.3\"),\n   MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n-          + \" These are primarily table operations like merge.\"),\n+          + \" These are primarily table operations like merge.\",\n+      \"1.4.3\"),\n   MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n-          + \"replication table for new data\"),\n+          + \"replication table for new data\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n-      PropertyType.PORT, \"Port for the replication coordinator service\"),\n+      PropertyType.PORT, \"Port for the replication coordinator service\", \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n-      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n+      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the coordinator thread pool\"),\n+      \"The time between adjustments of the coordinator thread pool\", \"1.7.0\"),\n   MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n-          + \"indicates an unlimited number of threads will be used.\"),\n+          + \"indicates an unlimited number of threads will be used.\",\n+      \"1.8.0\"),\n   MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n-          + \" table to be suspended via table.suspend.duration.\"),\n+          + \" table to be suspended via table.suspend.duration.\",\n+      \"1.8.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n       \"Minimum number of tservers that need to be registered before manager will \"\n           + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n-          + \" behaviour. Added with version 1.10\"),\n+          + \" behaviour. Added with version 1.10\",\n+      \"1.10.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n       \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n-          + \"threshold is set greater than 0. Added with version 1.10\"),\n+          + \"threshold is set greater than 0. Added with version 1.10\",\n+      \"1.10.0\"),\n   // properties that are specific to tablet server behavior\n   TSERV_PREFIX(\"tserver.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the tablet servers\"),\n+      \"Properties in this category affect the behavior of the tablet servers\", \"1.3.5\"),\n   TSERV_CLIENT_TIMEOUT(\"tserver.client.timeout\", \"3s\", PropertyType.TIMEDURATION,\n-      \"Time to wait for clients to continue scans before closing a session.\"),\n+      \"Time to wait for clients to continue scans before closing a session.\", \"1.3.5\"),\n   TSERV_DEFAULT_BLOCKSIZE(\"tserver.default.blocksize\", \"1M\", PropertyType.BYTES,\n-      \"Specifies a default blocksize for the tserver caches\"),\n+      \"Specifies a default blocksize for the tserver caches\", \"1.3.5\"),\n   TSERV_CACHE_MANAGER_IMPL(\"tserver.cache.manager.class\",\n       \"org.apache.accumulo.core.file.blockfile.cache.lru.LruBlockCacheManager\", PropertyType.STRING,\n       \"Specifies the class name of the block cache factory implementation.\"\n           + \" Alternative implementation is\"\n-          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\"),\n+          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\",\n+      \"2.0.0\"),\n   TSERV_DATACACHE_SIZE(\"tserver.cache.data.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile data blocks.\"),\n+      \"Specifies the size of the cache for RFile data blocks.\", \"1.3.5\"),\n   TSERV_INDEXCACHE_SIZE(\"tserver.cache.index.size\", \"25%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile index blocks.\"),\n+      \"Specifies the size of the cache for RFile index blocks.\", \"1.3.5\"),\n   TSERV_SUMMARYCACHE_SIZE(\"tserver.cache.summary.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for summary data on each tablet server.\"),\n+      \"Specifies the size of the cache for summary data on each tablet server.\", \"2.0.0\"),\n   TSERV_PORTSEARCH(\"tserver.port.search\", \"false\", PropertyType.BOOLEAN,\n-      \"if the ports above are in use, search higher ports until one is available\"),\n+      \"if the ports above are in use, search higher ports until one is available\", \"1.3.5\"),\n   TSERV_CLIENTPORT(\"tserver.port.client\", \"9997\", PropertyType.PORT,\n-      \"The port used for handling client connections on the tablet servers\"),\n+      \"The port used for handling client connections on the tablet servers\", \"1.3.5\"),\n   TSERV_TOTAL_MUTATION_QUEUE_MAX(\"tserver.total.mutation.queue.max\", \"5%\", PropertyType.MEMORY,\n-      \"The amount of memory used to store write-ahead-log mutations before flushing them.\"),\n+      \"The amount of memory used to store write-ahead-log mutations before flushing them.\",\n+      \"1.7.0\"),\n   TSERV_TABLET_SPLIT_FINDMIDPOINT_MAXOPEN(\"tserver.tablet.split.midpoint.files.max\", \"300\",\n       PropertyType.COUNT,\n       \"To find a tablets split points, all RFiles are opened and their indexes\"\n           + \" are read. This setting determines how many RFiles can be opened at once.\"\n           + \" When there are more RFiles than this setting multiple passes must be\"\n           + \" made, which is slower. However opening too many RFiles at once can cause\"\n-          + \" problems.\"),\n+          + \" problems.\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_REFERENCED(\"tserver.wal.max.referenced\", \"3\", PropertyType.COUNT,\n+      \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n+          + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n+          + \"logs or more will be compacted.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_REFERENCED)\n   TSERV_WALOG_MAX_REFERENCED(\"tserver.walog.max.referenced\", \"3\", PropertyType.COUNT,\n       \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n           + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n-          + \"logs or more will be compacted.\"),\n+          + \"logs or more will be compacted.\",\n+      \"2.0.0\"),\n+  TSERV_WAL_MAX_SIZE(\"tserver.wal.max.size\", \"1G\", PropertyType.BYTES,\n+      \"The maximum size for each write-ahead log. See comment for property\"\n+          + \" tserver.memory.maps.max\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_SIZE)\n   TSERV_WALOG_MAX_SIZE(\"tserver.walog.max.size\", \"1G\", PropertyType.BYTES,\n       \"The maximum size for each write-ahead log. See comment for property\"\n-          + \" tserver.memory.maps.max\"),\n+          + \" tserver.memory.maps.max\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_AGE(\"tserver.wal.max.age\", \"24h\", PropertyType.TIMEDURATION,\n+      \"The maximum age for each write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_AGE)\n   TSERV_WALOG_MAX_AGE(\"tserver.walog.max.age\", \"24h\", PropertyType.TIMEDURATION,\n-      \"The maximum age for each write-ahead log.\"),\n+      \"The maximum age for each write-ahead log.\", \"1.6.6\"),\n+  TSERV_WAL_TOLERATED_CREATION_FAILURES(\"tserver.wal.tolerated.creation.failures\", \"50\",\n+      PropertyType.COUNT,\n+      \"The maximum number of failures tolerated when creating a new write-ahead\"\n+          + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n+          + \" number of failures consecutively trying to create a new write-ahead log\"\n+          + \" causes the TabletServer to exit.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_CREATION_FAILURES)\n   TSERV_WALOG_TOLERATED_CREATION_FAILURES(\"tserver.walog.tolerated.creation.failures\", \"50\",\n       PropertyType.COUNT,\n       \"The maximum number of failures tolerated when creating a new write-ahead\"\n           + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n           + \" number of failures consecutively trying to create a new write-ahead log\"\n-          + \" causes the TabletServer to exit.\"),\n+          + \" causes the TabletServer to exit.\",\n+      \"1.7.1\"),\n+  TSERV_WAL_TOLERATED_WAIT_INCREMENT(\"tserver.wal.tolerated.wait.increment\", \"1000ms\",\n+      PropertyType.TIMEDURATION,\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_WAIT_INCREMENT)\n   TSERV_WALOG_TOLERATED_WAIT_INCREMENT(\"tserver.walog.tolerated.wait.increment\", \"1000ms\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait between failures to create or write a write-ahead log.\"),\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"1.7.1\"),\n+  // Never wait longer than 5 mins for a retry\n+  TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.wal.maximum.wait.duration\", \"5m\",\n+      PropertyType.TIMEDURATION,\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"2.1.0\"),\n   // Never wait longer than 5 mins for a retry\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION)\n   TSERV_WALOG_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.walog.maximum.wait.duration\", \"5m\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\"),\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"1.7.1\"),\n   TSERV_SCAN_MAX_OPENFILES(\"tserver.scan.files.open.max\", \"100\", PropertyType.COUNT,\n-      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \"),\n+      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \", \"1.4.0\"),\n   TSERV_MAX_IDLE(\"tserver.files.open.idle\", \"1m\", PropertyType.TIMEDURATION,\n       \"Tablet servers leave previously used RFiles open for future queries.\"\n           + \" This setting determines how much time an unused RFile should be kept open\"\n-          + \" until it is closed.\"),\n+          + \" until it is closed.\",\n+      \"1.3.5\"),\n   TSERV_NATIVEMAP_ENABLED(\"tserver.memory.maps.native.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"An in-memory data store for accumulo implemented in c++ that increases\"\n-          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\"),\n+          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\",\n+      \"1.3.5\"),\n   TSERV_MAXMEM(\"tserver.memory.maps.max\", \"33%\", PropertyType.MEMORY,\n       \"Maximum amount of memory that can be used to buffer data written to a\"\n           + \" tablet server. There are two other properties that can effectively limit\"\n           + \" memory usage table.compaction.minor.logs.threshold and\"\n-          + \" tserver.walog.max.size. Ensure that table.compaction.minor.logs.threshold\"\n-          + \" * tserver.walog.max.size >= this property.\"),\n+          + \" tserver.wal.max.size. Ensure that table.compaction.minor.logs.threshold\"\n+          + \" * tserver.wal.max.size >= this property.\",\n+      \"1.3.5\"),\n   TSERV_SESSION_MAXIDLE(\"tserver.session.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate scan sessions\"\n-          + \" to determine if they can be closed due to inactivity\"),\n+          + \" to determine if they can be closed due to inactivity\",\n+      \"1.3.5\"),\n   TSERV_UPDATE_SESSION_MAXIDLE(\"tserver.session.update.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate update\"\n-          + \" sessions to determine if they can be closed due to inactivity\"),\n+          + \" sessions to determine if they can be closed due to inactivity\",\n+      \"1.6.5\"),\n   TSERV_SCAN_EXECUTORS_PREFIX(\"tserver.scan.executors.\", null, PropertyType.PREFIX,\n       \"Prefix for defining executors to service scans. See \"\n           + \"[scan executors]({% durl administration/scan-executors %}) for an overview of why and\"\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMzU0OA==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397903548", "body": "Some of the deprecated properties have the following in their description.  I think this is nice for the generated documentation.\r\n\r\n```suggestion\r\n      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\r\n```", "bodyText": "Some of the deprecated properties have the following in their description.  I think this is nice for the generated documentation.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"The number of threads to use when moving user files to bulk ingest \"\n          \n          \n            \n                  \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"", "bodyHTML": "<p dir=\"auto\">Some of the deprecated properties have the following in their description.  I think this is nice for the generated documentation.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The number of threads to use when moving user files to bulk ingest <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">This property is deprecated since 2.1.0. </span>The number of threads to use when moving user files to bulk ingest <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "keith-turner", "createdAt": "2020-03-25T14:35:39Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -248,9 +248,16 @@\n       \"The number of threads to use when coordinating a bulk import.\"),\n   MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n+  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+  @Deprecated\n+  @ReplacedBy(property = MASTER_RENAME_THREADS)\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when moving user files to bulk ingest \"", "originalCommit": "8b530e0598f9831b8e343c7a7f56703ffc45bd92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5Mzg4Nw==", "url": "https://github.com/apache/accumulo/pull/1569#discussion_r397993887", "bodyText": "Done.", "author": "arvindshmicrosoft", "createdAt": "2020-03-25T16:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMzU0OA=="}], "type": "inlineReview", "revised_code": {"commit": "994f1e1e473f5b005d5720bb640620c1bde7dc9e", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 775d59a0f5..fc83376d29 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -253,11 +253,8 @@ public enum Property {\n   @Deprecated\n   @ReplacedBy(property = MASTER_RENAME_THREADS)\n   MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when moving user files to bulk ingest \"\n+      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_IMPORTTABLE_RENAME_THREADS(\"master.importtable.rename.threadpool.size\", \"20\",\n-      PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files when importing a table.\"),\n   MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n", "next_change": {"commit": "352d2cd050411233148fd476531d93297b98d308", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex fc83376d29..585f7bed2e 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -259,6 +264,9 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+      PropertyType.BOOLEAN,\n+      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "4c7bd9f09351aa6f083542ce8c5b68e7cec0aec9", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 585f7bed2e..7d1db83382 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"true\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "909c275a07e8d79120449e15ab2a91bdef62b202", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 7d1db83382..4daf62c9e6 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -264,7 +264,7 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n       PropertyType.BOOLEAN,\n       \"True if the incoming request threads are allowed to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "113ca49ae4a86a4066c97ace12b0d13bf5708c77", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 4daf62c9e6..2216ea0729 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -265,8 +264,7 @@ public enum Property {\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n   MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN,\n-      \"True if the incoming request threads are allowed to timeout with no work available.\"),\n+      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "87da7a1b3d23599e429902e084e134c15af4c4d5", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 2216ea0729..1defd73e55 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",\n-      PropertyType.BOOLEAN, \"Allow incoming request threads to timeout with no work available.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "abc961a9c742dad47b54ee5d5b1932d26e6a991a", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 1defd73e55..a2f88c7383 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -263,8 +261,6 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "b79c7f02d4ab788bfa914b9cbec0f87758003942", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex a2f88c7383..26c54af063 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -261,6 +263,8 @@ public enum Property {\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n   MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n   MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n", "next_change": {"commit": "300c933baa5800fd3bdcee2793dd416aeb26a9e6", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 26c54af063..9525f34547 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -235,80 +245,88 @@ public enum Property {\n       PropertyType.TIMEDURATION,\n       \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n \n-  // properties that are specific to master server behavior\n+  // properties that are specific to manager server behavior\n+  MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n+      \"Properties in this category affect the behavior of the manager server.\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the master server\"),\n-  MASTER_CLIENTPORT(\"master.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the master\"),\n-  MASTER_TABLET_BALANCER(\"master.tablet.balancer\",\n+      \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n+          + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n+          + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+  MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n+      \"The port used for handling client connections on the manager\"),\n+  MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n       \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n           + \"migration decisions.\"),\n-  MASTER_BULK_RETRIES(\"master.bulk.retries\", \"3\", PropertyType.COUNT,\n+  MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n       \"The number of attempts to bulk import a RFile before giving up.\"),\n-  MASTER_BULK_THREADPOOL_SIZE(\"master.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n+  MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n       \"The number of threads to use when coordinating a bulk import.\"),\n-  MASTER_BULK_THREADPOOL_TIMEOUT(\"master.bulk.threadpool.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n+      PropertyType.TIMEDURATION,\n       \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_BULK_TIMEOUT(\"master.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n+  MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n       \"The time to wait for a tablet server to process a bulk import request\"),\n-  MASTER_RENAME_THREADS(\"master.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n   @Deprecated(since = \"2.1.0\")\n-  @ReplacedBy(property = MASTER_RENAME_THREADS)\n-  MASTER_BULK_RENAME_THREADS(\"master.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n+  @ReplacedBy(property = MANAGER_RENAME_THREADS)\n+  MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n       \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n           + \"directories under accumulo control\"),\n-  MASTER_BULK_TSERVER_REGEX(\"master.bulk.tserver.regex\", \"\", PropertyType.STRING,\n+  MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n-  MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n+  MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n-  MASTER_MINTHREADS_TIMEOUT(\"master.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n+  MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n       \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n-  MASTER_THREADCHECK(\"master.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n+  MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the server thread pool.\"),\n-  MASTER_RECOVERY_DELAY(\"master.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n+  MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n           + \"completely quit. This delay gives it time before log recoveries begin.\"),\n-  MASTER_LEASE_RECOVERY_WAITING_PERIOD(\"master.lease.recovery.interval\", \"5s\",\n+  MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n-  MASTER_WALOG_CLOSER_IMPLEMETATION(\"master.walog.closer.implementation\",\n+  MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n       \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n       \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n-  MASTER_FATE_METRICS_ENABLED(\"master.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n+  MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n-  MASTER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"master.fate.metrics.min.update.interval\", \"60s\",\n+  MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n       PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n-  MASTER_FATE_THREADPOOL_SIZE(\"master.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n+  MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n           + \" These are primarily table operations like merge.\"),\n-  MASTER_REPLICATION_SCAN_INTERVAL(\"master.replication.status.scan.interval\", \"30s\",\n+  MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n           + \"replication table for new data\"),\n-  MASTER_REPLICATION_COORDINATOR_PORT(\"master.replication.coordinator.port\", \"10001\",\n+  MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n       PropertyType.PORT, \"Port for the replication coordinator service\"),\n-  MASTER_REPLICATION_COORDINATOR_MINTHREADS(\"master.replication.coordinator.minthreads\", \"4\",\n+  MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n       PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n-  MASTER_REPLICATION_COORDINATOR_THREADCHECK(\"master.replication.coordinator.threadcheck.time\",\n+  MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n       \"The time between adjustments of the coordinator thread pool\"),\n-  MASTER_STATUS_THREAD_POOL_SIZE(\"master.status.threadpool.size\", \"0\", PropertyType.COUNT,\n+  MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n           + \"indicates an unlimited number of threads will be used.\"),\n-  MASTER_METADATA_SUSPENDABLE(\"master.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n+  MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n           + \" table to be suspended via table.suspend.duration.\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"master.startup.tserver.avail.min.count\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n-      \"Minimum number of tservers that need to be registered before master will \"\n-          + \"start tablet assignment - checked at master initialization, when master gets lock. \"\n+      \"Minimum number of tservers that need to be registered before manager will \"\n+          + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n           + \" behaviour. Added with version 1.10\"),\n-  MASTER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"master.startup.tserver.avail.max.wait\", \"0\",\n+  MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n-      \"Maximum time master will wait for tserver available threshold \"\n+      \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n           + \"threshold is set greater than 0. Added with version 1.10\"),\n", "next_change": {"commit": "ff835f28445d2e0a1221da78e3656ba4c8c1240f", "changed_code": [{"header": "diff --git a/core/src/main/java/org/apache/accumulo/core/conf/Property.java b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\nindex 9525f34547..a9fd2a03ab 100644\n--- a/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n+++ b/core/src/main/java/org/apache/accumulo/core/conf/Property.java\n", "chunk": "@@ -126,286 +131,377 @@ public enum Property {\n           + \"Replacements must be configured for use. To see which volumes are \"\n           + \"currently in use, run 'accumulo admin volumes -l'. To use a comma or \"\n           + \"other reserved characters in a URI use standard URI hex encoding. For \"\n-          + \"example replace commas with %2C.\"),\n+          + \"example replace commas with %2C.\",\n+      \"1.6.0\"),\n   INSTANCE_VOLUMES_UPGRADE_RELATIVE(\"instance.volumes.upgrade.relative\", \"\", PropertyType.STRING,\n       \"The volume dfs uri containing relative tablet file paths. Relative paths may exist in the metadata from \"\n           + \"versions prior to 1.6. This property is only required if a relative path is detected \"\n-          + \"during the upgrade process and will only be used once.\"),\n+          + \"during the upgrade process and will only be used once.\",\n+      \"2.1.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHENTICATOR(\"instance.security.authenticator\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthenticator\", PropertyType.CLASSNAME,\n       \"The authenticator class that accumulo will use to determine if a user \"\n-          + \"has privilege to perform an action\"),\n+          + \"has privilege to perform an action\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_AUTHORIZOR(\"instance.security.authorizor\",\n       \"org.apache.accumulo.server.security.handler.ZKAuthorizor\", PropertyType.CLASSNAME,\n       \"The authorizor class that accumulo will use to determine what labels a \"\n-          + \"user has privilege to see\"),\n+          + \"user has privilege to see\",\n+      \"1.5.0\"),\n   @Experimental // interface uses unstable internal types, use with caution\n   INSTANCE_SECURITY_PERMISSION_HANDLER(\"instance.security.permissionHandler\",\n       \"org.apache.accumulo.server.security.handler.ZKPermHandler\", PropertyType.CLASSNAME,\n       \"The permission handler class that accumulo will use to determine if a \"\n-          + \"user has privilege to perform an action\"),\n+          + \"user has privilege to perform an action\",\n+      \"1.5.0\"),\n   INSTANCE_RPC_SSL_ENABLED(\"instance.rpc.ssl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Use SSL for socket connections from clients and among accumulo services. \"\n-          + \"Mutually exclusive with SASL RPC configuration.\"),\n+          + \"Mutually exclusive with SASL RPC configuration.\",\n+      \"1.6.0\"),\n   INSTANCE_RPC_SSL_CLIENT_AUTH(\"instance.rpc.ssl.clientAuth\", \"false\", PropertyType.BOOLEAN,\n-      \"Require clients to present certs signed by a trusted root\"),\n-  /**\n-   * @since 1.7.0\n-   */\n+      \"Require clients to present certs signed by a trusted root\", \"1.6.0\"),\n   INSTANCE_RPC_SASL_ENABLED(\"instance.rpc.sasl.enabled\", \"false\", PropertyType.BOOLEAN,\n       \"Configures Thrift RPCs to require SASL with GSSAPI which supports \"\n-          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\"),\n+          + \"Kerberos authentication. Mutually exclusive with SSL RPC configuration.\",\n+      \"1.7.0\"),\n   INSTANCE_RPC_SASL_ALLOWED_USER_IMPERSONATION(\"instance.rpc.sasl.allowed.user.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling what users are allowed to \"\n-          + \"impersonate other users\"),\n+          + \"impersonate other users\",\n+      \"1.7.1\"),\n   INSTANCE_RPC_SASL_ALLOWED_HOST_IMPERSONATION(\"instance.rpc.sasl.allowed.host.impersonation\", \"\",\n       PropertyType.STRING,\n       \"One-line configuration property controlling the network locations \"\n-          + \"(hostnames) that are allowed to impersonate other users\"),\n+          + \"(hostnames) that are allowed to impersonate other users\",\n+      \"1.7.1\"),\n   // Crypto-related properties\n   @Experimental\n   INSTANCE_CRYPTO_PREFIX(\"instance.crypto.opts.\", null, PropertyType.PREFIX,\n-      \"Properties related to on-disk file encryption.\"),\n+      \"Properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   @Sensitive\n   INSTANCE_CRYPTO_SENSITIVE_PREFIX(\"instance.crypto.opts.sensitive.\", null, PropertyType.PREFIX,\n-      \"Sensitive properties related to on-disk file encryption.\"),\n+      \"Sensitive properties related to on-disk file encryption.\", \"2.0.0\"),\n   @Experimental\n   INSTANCE_CRYPTO_SERVICE(\"instance.crypto.service\",\n-      \"org.apache.accumulo.core.cryptoImpl.NoCryptoService\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.crypto.NoCryptoService\", PropertyType.CLASSNAME,\n       \"The class which executes on-disk file encryption. The default does nothing. To enable \"\n           + \"encryption, replace this classname with an implementation of the\"\n-          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\"),\n+          + \"org.apache.accumulo.core.spi.crypto.CryptoService interface.\",\n+      \"2.0.0\"),\n \n   // general properties\n   GENERAL_PREFIX(\"general.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of accumulo overall, but\"\n-          + \" do not have to be consistent throughout a cloud.\"),\n+          + \" do not have to be consistent throughout a cloud.\",\n+      \"1.3.5\"),\n   @Deprecated(since = \"2.0.0\")\n   GENERAL_DYNAMIC_CLASSPATHS(\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DYNAMIC_CLASSPATH_PROPERTY_NAME,\n       org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.DEFAULT_DYNAMIC_CLASSPATH_VALUE,\n       PropertyType.STRING,\n-      \"This property is deprecated since 2.0.0. A list of all of the places where changes \"\n+      \"A list of all of the places where changes \"\n           + \"in jars or classes will force a reload of the classloader. Built-in dynamic class \"\n           + \"loading will be removed in a future version. If this is needed, consider overriding \"\n           + \"the Java system class loader with one that has this feature \"\n           + \"(https://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getSystemClassLoader--). \"\n           + \"Additionally, this property no longer does property interpolation of environment \"\n           + \"variables, such as '$ACCUMULO_HOME'. Use commons-configuration syntax,\"\n-          + \"'${env:ACCUMULO_HOME}' instead.\"),\n+          + \"'${env:ACCUMULO_HOME}' instead.\",\n+      \"1.3.5\"),\n   GENERAL_CONTEXT_CLASSLOADER_FACTORY(\"general.context.class.loader.factory\", \"\",\n       PropertyType.CLASSNAME,\n       \"Name of classloader factory to be used to create classloaders for named contexts,\"\n-          + \" such as per-table contexts set by `table.class.loader.context`.\"),\n+          + \" such as per-table contexts set by `table.class.loader.context`.\",\n+      \"2.1.0\"),\n   GENERAL_RPC_TIMEOUT(\"general.rpc.timeout\", \"120s\", PropertyType.TIMEDURATION,\n-      \"Time to wait on I/O for simple, short RPC calls\"),\n+      \"Time to wait on I/O for simple, short RPC calls\", \"1.3.5\"),\n   @Experimental\n   GENERAL_RPC_SERVER_TYPE(\"general.rpc.server.type\", \"\", PropertyType.STRING,\n       \"Type of Thrift server to instantiate, see \"\n           + \"org.apache.accumulo.server.rpc.ThriftServerType for more information. \"\n-          + \"Only useful for benchmarking thrift servers\"),\n+          + \"Only useful for benchmarking thrift servers\",\n+      \"1.7.0\"),\n   GENERAL_KERBEROS_KEYTAB(\"general.kerberos.keytab\", \"\", PropertyType.PATH,\n-      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\"),\n+      \"Path to the kerberos keytab to use. Leave blank if not using kerberoized hdfs\", \"1.4.1\"),\n   GENERAL_KERBEROS_PRINCIPAL(\"general.kerberos.principal\", \"\", PropertyType.STRING,\n       \"Name of the kerberos principal to use. _HOST will automatically be \"\n           + \"replaced by the machines hostname in the hostname portion of the \"\n-          + \"principal. Leave blank if not using kerberoized hdfs\"),\n+          + \"principal. Leave blank if not using kerberoized hdfs\",\n+      \"1.4.1\"),\n   GENERAL_KERBEROS_RENEWAL_PERIOD(\"general.kerberos.renewal.period\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"The amount of time between attempts to perform Kerberos ticket renewals.\"\n           + \" This does not equate to how often tickets are actually renewed (which is\"\n-          + \" performed at 80% of the ticket lifetime).\"),\n+          + \" performed at 80% of the ticket lifetime).\",\n+      \"1.6.5\"),\n   GENERAL_MAX_MESSAGE_SIZE(\"general.server.message.size.max\", \"1G\", PropertyType.BYTES,\n-      \"The maximum size of a message that can be sent to a server.\"),\n+      \"The maximum size of a message that can be sent to a server.\", \"1.5.0\"),\n   GENERAL_SIMPLETIMER_THREADPOOL_SIZE(\"general.server.simpletimer.threadpool.size\", \"1\",\n-      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\"),\n+      PropertyType.COUNT, \"The number of threads to use for \" + \"server-internal scheduled tasks\",\n+      \"1.7.0\"),\n   // If you update the default type, be sure to update the default used for initialization failures\n   // in VolumeManagerImpl\n   @Experimental\n-  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\",\n-      \"org.apache.accumulo.server.fs.RandomVolumeChooser\", PropertyType.CLASSNAME,\n-      \"The class that will be used to select which volume will be used to create new files.\"),\n+  GENERAL_VOLUME_CHOOSER(\"general.volume.chooser\", RandomVolumeChooser.class.getName(),\n+      PropertyType.CLASSNAME,\n+      \"The class that will be used to select which volume will be used to create new files.\",\n+      \"1.6.0\"),\n   GENERAL_SECURITY_CREDENTIAL_PROVIDER_PATHS(\"general.security.credential.provider.paths\", \"\",\n-      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\"),\n+      PropertyType.STRING, \"Comma-separated list of paths to CredentialProviders\", \"1.6.1\"),\n   GENERAL_ARBITRARY_PROP_PREFIX(\"general.custom.\", null, PropertyType.PREFIX,\n       \"Prefix to be used for user defined system-wide properties. This may be\"\n           + \" particularly useful for system-wide configuration for various\"\n           + \" user-implementations of pluggable Accumulo features, such as the balancer\"\n-          + \" or volume chooser.\"),\n+          + \" or volume chooser.\",\n+      \"2.0.0\"),\n   GENERAL_DELEGATION_TOKEN_LIFETIME(\"general.delegation.token.lifetime\", \"7d\",\n       PropertyType.TIMEDURATION,\n-      \"The length of time that delegation tokens and secret keys are valid\"),\n+      \"The length of time that delegation tokens and secret keys are valid\", \"1.7.0\"),\n   GENERAL_DELEGATION_TOKEN_UPDATE_INTERVAL(\"general.delegation.token.update.interval\", \"1d\",\n-      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\"),\n+      PropertyType.TIMEDURATION, \"The length of time between generation of new secret keys\",\n+      \"1.7.0\"),\n   GENERAL_MAX_SCANNER_RETRY_PERIOD(\"general.max.scanner.retry.period\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\"),\n+      \"The maximum amount of time that a Scanner should wait before retrying a failed RPC\",\n+      \"1.7.3\"),\n \n   // properties that are specific to manager server behavior\n   MANAGER_PREFIX(\"manager.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the manager server.\"),\n+      \"Properties in this category affect the behavior of the manager server. \"\n+          + \"Since 2.1.0, all properties in this category replace the old `master.*` names.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = Property.MANAGER_PREFIX)\n   MASTER_PREFIX(\"master.\", null, PropertyType.PREFIX,\n       \"Properties in this category affect the behavior of the manager (formerly named master) server. \"\n           + \"Since 2.1.0, all properties in this category are deprecated and replaced with corresponding \"\n           + \"`manager.*` properties. The old `master.*` names can still be used until at release 3.0, but a warning \"\n-          + \"will be emitted. Configuration files should be updated to use the new property names.\"),\n+          + \"will be emitted. Configuration files should be updated to use the new property names.\",\n+      \"1.3.5\"),\n   MANAGER_CLIENTPORT(\"manager.port.client\", \"9999\", PropertyType.PORT,\n-      \"The port used for handling client connections on the manager\"),\n+      \"The port used for handling client connections on the manager\", \"1.3.5\"),\n   MANAGER_TABLET_BALANCER(\"manager.tablet.balancer\",\n-      \"org.apache.accumulo.server.master.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n+      \"org.apache.accumulo.core.spi.balancer.TableLoadBalancer\", PropertyType.CLASSNAME,\n       \"The balancer class that accumulo will use to make tablet assignment and \"\n-          + \"migration decisions.\"),\n+          + \"migration decisions.\",\n+      \"1.3.5\"),\n   MANAGER_BULK_RETRIES(\"manager.bulk.retries\", \"3\", PropertyType.COUNT,\n-      \"The number of attempts to bulk import a RFile before giving up.\"),\n+      \"The number of attempts to bulk import a RFile before giving up.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_SIZE(\"manager.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n-      \"The number of threads to use when coordinating a bulk import.\"),\n+      \"The number of threads to use when coordinating a bulk import.\", \"1.4.0\"),\n   MANAGER_BULK_THREADPOOL_TIMEOUT(\"manager.bulk.threadpool.timeout\", \"0s\",\n       PropertyType.TIMEDURATION,\n-      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which bulk import threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_BULK_TIMEOUT(\"manager.bulk.timeout\", \"5m\", PropertyType.TIMEDURATION,\n-      \"The time to wait for a tablet server to process a bulk import request\"),\n+      \"The time to wait for a tablet server to process a bulk import request\", \"1.4.3\"),\n   MANAGER_RENAME_THREADS(\"manager.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"The number of threads to use when renaming user files during table import or bulk ingest.\"),\n+      \"The number of threads to use when renaming user files during table import or bulk ingest.\",\n+      \"2.1.0\"),\n   @Deprecated(since = \"2.1.0\")\n   @ReplacedBy(property = MANAGER_RENAME_THREADS)\n   MANAGER_BULK_RENAME_THREADS(\"manager.bulk.rename.threadpool.size\", \"20\", PropertyType.COUNT,\n-      \"This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest \"\n-          + \"directories under accumulo control\"),\n+      \"The number of threads to use when moving user files to bulk ingest \"\n+          + \"directories under accumulo control\",\n+      \"1.7.0\"),\n   MANAGER_BULK_TSERVER_REGEX(\"manager.bulk.tserver.regex\", \"\", PropertyType.STRING,\n-      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n+      \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\",\n+      \"2.0.0\"),\n   MANAGER_MINTHREADS(\"manager.server.threads.minimum\", \"20\", PropertyType.COUNT,\n-      \"The minimum number of threads to use to handle incoming requests.\"),\n+      \"The minimum number of threads to use to handle incoming requests.\", \"1.4.0\"),\n   MANAGER_MINTHREADS_TIMEOUT(\"manager.server.threads.timeout\", \"0s\", PropertyType.TIMEDURATION,\n-      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\"),\n+      \"The time after which incoming request threads terminate with no work available.  Zero (0) will keep the threads alive indefinitely.\",\n+      \"2.1.0\"),\n   MANAGER_THREADCHECK(\"manager.server.threadcheck.time\", \"1s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the server thread pool.\"),\n+      \"The time between adjustments of the server thread pool.\", \"1.4.0\"),\n   MANAGER_RECOVERY_DELAY(\"manager.recovery.delay\", \"10s\", PropertyType.TIMEDURATION,\n       \"When a tablet server's lock is deleted, it takes time for it to \"\n-          + \"completely quit. This delay gives it time before log recoveries begin.\"),\n+          + \"completely quit. This delay gives it time before log recoveries begin.\",\n+      \"1.5.0\"),\n   MANAGER_LEASE_RECOVERY_WAITING_PERIOD(\"manager.lease.recovery.interval\", \"5s\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait after requesting a write-ahead log to be recovered\"),\n+      \"The amount of time to wait after requesting a write-ahead log to be recovered\", \"1.5.0\"),\n+  MANAGER_WAL_CLOSER_IMPLEMENTATION(\"manager.wal.closer.implementation\",\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.MANAGER_WAL_CLOSER_IMPLEMENTATION)\n   MANAGER_WALOG_CLOSER_IMPLEMETATION(\"manager.walog.closer.implementation\",\n-      \"org.apache.accumulo.server.master.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n-      \"A class that implements a mechanism to steal write access to a write-ahead log\"),\n+      \"org.apache.accumulo.server.manager.recovery.HadoopLogCloser\", PropertyType.CLASSNAME,\n+      \"A class that implements a mechanism to steal write access to a write-ahead log\", \"1.5.0\"),\n   MANAGER_FATE_METRICS_ENABLED(\"manager.fate.metrics.enabled\", \"true\", PropertyType.BOOLEAN,\n-      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\"),\n+      \"Enable reporting of FATE metrics in JMX (and logging with Hadoop Metrics2\", \"1.9.3\"),\n   MANAGER_FATE_METRICS_MIN_UPDATE_INTERVAL(\"manager.fate.metrics.min.update.interval\", \"60s\",\n-      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\"),\n+      PropertyType.TIMEDURATION, \"Limit calls from metric sinks to zookeeper to update interval\",\n+      \"1.9.3\"),\n   MANAGER_FATE_THREADPOOL_SIZE(\"manager.fate.threadpool.size\", \"4\", PropertyType.COUNT,\n       \"The number of threads used to run fault-tolerant executions (FATE).\"\n-          + \" These are primarily table operations like merge.\"),\n+          + \" These are primarily table operations like merge.\",\n+      \"1.4.3\"),\n   MANAGER_REPLICATION_SCAN_INTERVAL(\"manager.replication.status.scan.interval\", \"30s\",\n       PropertyType.TIMEDURATION,\n       \"Amount of time to sleep before scanning the status section of the \"\n-          + \"replication table for new data\"),\n+          + \"replication table for new data\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_PORT(\"manager.replication.coordinator.port\", \"10001\",\n-      PropertyType.PORT, \"Port for the replication coordinator service\"),\n+      PropertyType.PORT, \"Port for the replication coordinator service\", \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_MINTHREADS(\"manager.replication.coordinator.minthreads\", \"4\",\n-      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\"),\n+      PropertyType.COUNT, \"Minimum number of threads dedicated to answering coordinator requests\",\n+      \"1.7.0\"),\n   MANAGER_REPLICATION_COORDINATOR_THREADCHECK(\"manager.replication.coordinator.threadcheck.time\",\n       \"5s\", PropertyType.TIMEDURATION,\n-      \"The time between adjustments of the coordinator thread pool\"),\n+      \"The time between adjustments of the coordinator thread pool\", \"1.7.0\"),\n   MANAGER_STATUS_THREAD_POOL_SIZE(\"manager.status.threadpool.size\", \"0\", PropertyType.COUNT,\n       \"The number of threads to use when fetching the tablet server status for balancing.  Zero \"\n-          + \"indicates an unlimited number of threads will be used.\"),\n+          + \"indicates an unlimited number of threads will be used.\",\n+      \"1.8.0\"),\n   MANAGER_METADATA_SUSPENDABLE(\"manager.metadata.suspendable\", \"false\", PropertyType.BOOLEAN,\n       \"Allow tablets for the \" + MetadataTable.NAME\n-          + \" table to be suspended via table.suspend.duration.\"),\n+          + \" table to be suspended via table.suspend.duration.\",\n+      \"1.8.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MIN_COUNT(\"manager.startup.tserver.avail.min.count\", \"0\",\n       PropertyType.COUNT,\n       \"Minimum number of tservers that need to be registered before manager will \"\n           + \"start tablet assignment - checked at manager initialization, when manager gets lock. \"\n           + \" When set to 0 or less, no blocking occurs. Default is 0 (disabled) to keep original \"\n-          + \" behaviour. Added with version 1.10\"),\n+          + \" behaviour. Added with version 1.10\",\n+      \"1.10.0\"),\n   MANAGER_STARTUP_TSERVER_AVAIL_MAX_WAIT(\"manager.startup.tserver.avail.max.wait\", \"0\",\n       PropertyType.TIMEDURATION,\n       \"Maximum time manager will wait for tserver available threshold \"\n           + \"to be reached before continuing. When set to 0 or less, will block \"\n           + \"indefinitely. Default is 0 to block indefinitely. Only valid when tserver available \"\n-          + \"threshold is set greater than 0. Added with version 1.10\"),\n+          + \"threshold is set greater than 0. Added with version 1.10\",\n+      \"1.10.0\"),\n   // properties that are specific to tablet server behavior\n   TSERV_PREFIX(\"tserver.\", null, PropertyType.PREFIX,\n-      \"Properties in this category affect the behavior of the tablet servers\"),\n+      \"Properties in this category affect the behavior of the tablet servers\", \"1.3.5\"),\n   TSERV_CLIENT_TIMEOUT(\"tserver.client.timeout\", \"3s\", PropertyType.TIMEDURATION,\n-      \"Time to wait for clients to continue scans before closing a session.\"),\n+      \"Time to wait for clients to continue scans before closing a session.\", \"1.3.5\"),\n   TSERV_DEFAULT_BLOCKSIZE(\"tserver.default.blocksize\", \"1M\", PropertyType.BYTES,\n-      \"Specifies a default blocksize for the tserver caches\"),\n+      \"Specifies a default blocksize for the tserver caches\", \"1.3.5\"),\n   TSERV_CACHE_MANAGER_IMPL(\"tserver.cache.manager.class\",\n       \"org.apache.accumulo.core.file.blockfile.cache.lru.LruBlockCacheManager\", PropertyType.STRING,\n       \"Specifies the class name of the block cache factory implementation.\"\n           + \" Alternative implementation is\"\n-          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\"),\n+          + \" org.apache.accumulo.core.file.blockfile.cache.tinylfu.TinyLfuBlockCacheManager\",\n+      \"2.0.0\"),\n   TSERV_DATACACHE_SIZE(\"tserver.cache.data.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile data blocks.\"),\n+      \"Specifies the size of the cache for RFile data blocks.\", \"1.3.5\"),\n   TSERV_INDEXCACHE_SIZE(\"tserver.cache.index.size\", \"25%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for RFile index blocks.\"),\n+      \"Specifies the size of the cache for RFile index blocks.\", \"1.3.5\"),\n   TSERV_SUMMARYCACHE_SIZE(\"tserver.cache.summary.size\", \"10%\", PropertyType.MEMORY,\n-      \"Specifies the size of the cache for summary data on each tablet server.\"),\n+      \"Specifies the size of the cache for summary data on each tablet server.\", \"2.0.0\"),\n   TSERV_PORTSEARCH(\"tserver.port.search\", \"false\", PropertyType.BOOLEAN,\n-      \"if the ports above are in use, search higher ports until one is available\"),\n+      \"if the ports above are in use, search higher ports until one is available\", \"1.3.5\"),\n   TSERV_CLIENTPORT(\"tserver.port.client\", \"9997\", PropertyType.PORT,\n-      \"The port used for handling client connections on the tablet servers\"),\n+      \"The port used for handling client connections on the tablet servers\", \"1.3.5\"),\n   TSERV_TOTAL_MUTATION_QUEUE_MAX(\"tserver.total.mutation.queue.max\", \"5%\", PropertyType.MEMORY,\n-      \"The amount of memory used to store write-ahead-log mutations before flushing them.\"),\n+      \"The amount of memory used to store write-ahead-log mutations before flushing them.\",\n+      \"1.7.0\"),\n   TSERV_TABLET_SPLIT_FINDMIDPOINT_MAXOPEN(\"tserver.tablet.split.midpoint.files.max\", \"300\",\n       PropertyType.COUNT,\n       \"To find a tablets split points, all RFiles are opened and their indexes\"\n           + \" are read. This setting determines how many RFiles can be opened at once.\"\n           + \" When there are more RFiles than this setting multiple passes must be\"\n           + \" made, which is slower. However opening too many RFiles at once can cause\"\n-          + \" problems.\"),\n+          + \" problems.\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_REFERENCED(\"tserver.wal.max.referenced\", \"3\", PropertyType.COUNT,\n+      \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n+          + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n+          + \"logs or more will be compacted.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_REFERENCED)\n   TSERV_WALOG_MAX_REFERENCED(\"tserver.walog.max.referenced\", \"3\", PropertyType.COUNT,\n       \"When a tablet server has more than this many write ahead logs, any tablet referencing older \"\n           + \"logs over this threshold is minor compacted.  Also any tablet referencing this many \"\n-          + \"logs or more will be compacted.\"),\n+          + \"logs or more will be compacted.\",\n+      \"2.0.0\"),\n+  TSERV_WAL_MAX_SIZE(\"tserver.wal.max.size\", \"1G\", PropertyType.BYTES,\n+      \"The maximum size for each write-ahead log. See comment for property\"\n+          + \" tserver.memory.maps.max\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_SIZE)\n   TSERV_WALOG_MAX_SIZE(\"tserver.walog.max.size\", \"1G\", PropertyType.BYTES,\n       \"The maximum size for each write-ahead log. See comment for property\"\n-          + \" tserver.memory.maps.max\"),\n+          + \" tserver.memory.maps.max\",\n+      \"1.3.5\"),\n+  TSERV_WAL_MAX_AGE(\"tserver.wal.max.age\", \"24h\", PropertyType.TIMEDURATION,\n+      \"The maximum age for each write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_MAX_AGE)\n   TSERV_WALOG_MAX_AGE(\"tserver.walog.max.age\", \"24h\", PropertyType.TIMEDURATION,\n-      \"The maximum age for each write-ahead log.\"),\n+      \"The maximum age for each write-ahead log.\", \"1.6.6\"),\n+  TSERV_WAL_TOLERATED_CREATION_FAILURES(\"tserver.wal.tolerated.creation.failures\", \"50\",\n+      PropertyType.COUNT,\n+      \"The maximum number of failures tolerated when creating a new write-ahead\"\n+          + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n+          + \" number of failures consecutively trying to create a new write-ahead log\"\n+          + \" causes the TabletServer to exit.\",\n+      \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_CREATION_FAILURES)\n   TSERV_WALOG_TOLERATED_CREATION_FAILURES(\"tserver.walog.tolerated.creation.failures\", \"50\",\n       PropertyType.COUNT,\n       \"The maximum number of failures tolerated when creating a new write-ahead\"\n           + \" log. Negative values will allow unlimited creation failures. Exceeding this\"\n           + \" number of failures consecutively trying to create a new write-ahead log\"\n-          + \" causes the TabletServer to exit.\"),\n+          + \" causes the TabletServer to exit.\",\n+      \"1.7.1\"),\n+  TSERV_WAL_TOLERATED_WAIT_INCREMENT(\"tserver.wal.tolerated.wait.increment\", \"1000ms\",\n+      PropertyType.TIMEDURATION,\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"2.1.0\"),\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_WAIT_INCREMENT)\n   TSERV_WALOG_TOLERATED_WAIT_INCREMENT(\"tserver.walog.tolerated.wait.increment\", \"1000ms\",\n       PropertyType.TIMEDURATION,\n-      \"The amount of time to wait between failures to create or write a write-ahead log.\"),\n+      \"The amount of time to wait between failures to create or write a write-ahead log.\", \"1.7.1\"),\n+  // Never wait longer than 5 mins for a retry\n+  TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.wal.maximum.wait.duration\", \"5m\",\n+      PropertyType.TIMEDURATION,\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"2.1.0\"),\n   // Never wait longer than 5 mins for a retry\n+  @Deprecated(since = \"2.1.0\")\n+  @ReplacedBy(property = Property.TSERV_WAL_TOLERATED_MAXIMUM_WAIT_DURATION)\n   TSERV_WALOG_TOLERATED_MAXIMUM_WAIT_DURATION(\"tserver.walog.maximum.wait.duration\", \"5m\",\n       PropertyType.TIMEDURATION,\n-      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\"),\n+      \"The maximum amount of time to wait after a failure to create or write a write-ahead log.\",\n+      \"1.7.1\"),\n   TSERV_SCAN_MAX_OPENFILES(\"tserver.scan.files.open.max\", \"100\", PropertyType.COUNT,\n-      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \"),\n+      \"Maximum total RFiles that all tablets in a tablet server can open for scans. \", \"1.4.0\"),\n   TSERV_MAX_IDLE(\"tserver.files.open.idle\", \"1m\", PropertyType.TIMEDURATION,\n       \"Tablet servers leave previously used RFiles open for future queries.\"\n           + \" This setting determines how much time an unused RFile should be kept open\"\n-          + \" until it is closed.\"),\n+          + \" until it is closed.\",\n+      \"1.3.5\"),\n   TSERV_NATIVEMAP_ENABLED(\"tserver.memory.maps.native.enabled\", \"true\", PropertyType.BOOLEAN,\n       \"An in-memory data store for accumulo implemented in c++ that increases\"\n-          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\"),\n+          + \" the amount of data accumulo can hold in memory and avoids Java GC\" + \" pauses.\",\n+      \"1.3.5\"),\n   TSERV_MAXMEM(\"tserver.memory.maps.max\", \"33%\", PropertyType.MEMORY,\n       \"Maximum amount of memory that can be used to buffer data written to a\"\n           + \" tablet server. There are two other properties that can effectively limit\"\n           + \" memory usage table.compaction.minor.logs.threshold and\"\n-          + \" tserver.walog.max.size. Ensure that table.compaction.minor.logs.threshold\"\n-          + \" * tserver.walog.max.size >= this property.\"),\n+          + \" tserver.wal.max.size. Ensure that table.compaction.minor.logs.threshold\"\n+          + \" * tserver.wal.max.size >= this property.\",\n+      \"1.3.5\"),\n   TSERV_SESSION_MAXIDLE(\"tserver.session.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate scan sessions\"\n-          + \" to determine if they can be closed due to inactivity\"),\n+          + \" to determine if they can be closed due to inactivity\",\n+      \"1.3.5\"),\n   TSERV_UPDATE_SESSION_MAXIDLE(\"tserver.session.update.idle.max\", \"1m\", PropertyType.TIMEDURATION,\n       \"When a tablet server's SimpleTimer thread triggers to check idle\"\n           + \" sessions, this configurable option will be used to evaluate update\"\n-          + \" sessions to determine if they can be closed due to inactivity\"),\n+          + \" sessions to determine if they can be closed due to inactivity\",\n+      \"1.6.5\"),\n   TSERV_SCAN_EXECUTORS_PREFIX(\"tserver.scan.executors.\", null, PropertyType.PREFIX,\n       \"Prefix for defining executors to service scans. See \"\n           + \"[scan executors]({% durl administration/scan-executors %}) for an overview of why and\"\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"oid": "595e735a074f6c05ddc4a4b8e969dd4702206572", "url": "https://github.com/apache/accumulo/commit/595e735a074f6c05ddc4a4b8e969dd4702206572", "message": "Remove unused property and add deprecation note", "committedDate": "2020-03-25T16:20:33Z", "type": "commit"}]}