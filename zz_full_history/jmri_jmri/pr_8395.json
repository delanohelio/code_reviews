{"pr_number": 8395, "pr_title": "LayoutEditor:QuickKeys", "pr_author": "geowar1", "pr_createdAt": "2020-04-21T01:09:02Z", "pr_url": "https://github.com/JMRI/JMRI/pull/8395", "timeline": [{"oid": "8a6e00b84eb56ea8e1a7a7ca5bcf5765b0719ecd", "url": "https://github.com/JMRI/JMRI/commit/8a6e00b84eb56ea8e1a7a7ca5bcf5765b0719ecd", "message": "LayoutEditor:QuickKeys", "committedDate": "2020-04-21T01:08:04Z", "type": "commit"}, {"oid": "2232b53717d9e9426559a4f0841e4a9852208059", "url": "https://github.com/JMRI/JMRI/commit/2232b53717d9e9426559a4f0841e4a9852208059", "message": "static maven fail fix", "committedDate": "2020-04-21T01:14:16Z", "type": "commit"}, {"oid": "8c77d070c3c27651dc0aea042ae3877bbb1940ba", "url": "https://github.com/JMRI/JMRI/commit/8c77d070c3c27651dc0aea042ae3877bbb1940ba", "message": "Disable (noisy) logging statements", "committedDate": "2020-04-21T01:26:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r411856201", "body": "@pabender @rhwood Do we have a convention for braces in try-catch structures?  I'm used to to t.he previous `} catch ().. {` form, but if we're going to switch over consistently.\r\n\r\n@geowar1 Is this an IDE setting that's changing these?", "bodyText": "@pabender @rhwood Do we have a convention for braces in try-catch structures?  I'm used to to t.he previous } catch ().. { form, but if we're going to switch over consistently.\n@geowar1 Is this an IDE setting that's changing these?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pabender/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pabender\">@pabender</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rhwood/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rhwood\">@rhwood</a> Do we have a convention for braces in try-catch structures?  I'm used to to t.he previous <code>} catch ().. {</code> form, but if we're going to switch over consistently.</p>\n<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/geowar1/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/geowar1\">@geowar1</a> Is this an IDE setting that's changing these?</p>", "author": "bobjacobsen", "createdAt": "2020-04-21T04:17:41Z", "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -1057,7 +1058,8 @@ private void initStringsToVTCodes() {\n                 int code = 0;\n                 try {\n                     code = field.getInt(null);\n-                } catch (IllegalAccessException | IllegalArgumentException e) {\n+                }", "originalCommit": "8c77d070c3c27651dc0aea042ae3877bbb1940ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg4NzAwNw==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r411887007", "bodyText": "@bobjacobsen I believe the old form is our standard.", "author": "pabender", "createdAt": "2020-04-21T05:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxODEwOQ==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r412018109", "bodyText": "Our standards and the standard we reference are the old form. I think the NetBeans and Eclipse IDEs default to the old form, but I\u2019ll double check that recent changes did not lead to NetBeans defaulting to this change here.", "author": "rhwood", "createdAt": "2020-04-21T09:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNzgwNQ==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r412307805", "bodyText": "Yeah, it's something that the NetBeans IDE is doing; I prefer the old form as well. I just haven't gone looking for the setting to change it back (for some reason this changed when I installed NetBeans 11). I'll fix these ASAP.", "author": "geowar1", "createdAt": "2020-04-21T16:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxODY1NQ==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r412318655", "bodyText": "Definitely a bug in NetBeans; The preference was off and it's still adding the newline. Toggling it on/off didn't make any difference (in the actual sources; the preference pane behaves as expected). I'll have to fix these using BBEdit (since NetBeans re-formats on save).", "author": "geowar1", "createdAt": "2020-04-21T16:46:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyOTYzOQ==", "url": "https://github.com/JMRI/JMRI/pull/8395#discussion_r412329639", "bodyText": "Fixed (new lines removed).", "author": "geowar1", "createdAt": "2020-04-21T16:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1ca821bce5f8d394b06467199245c1c80b5e70d3", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex f0d88f5cda..385b3eb983 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -1058,8 +1057,7 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {\n                 int code = 0;\n                 try {\n                     code = field.getInt(null);\n-                }\n-                catch (IllegalAccessException | IllegalArgumentException e) {\n+                } catch (IllegalAccessException | IllegalArgumentException e) {\n                     //exceptions make me throw up...\n                 }\n \n", "next_change": {"commit": "89b2e7fd3234bb9ccfbafc03c46f8955700d63d9", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex 385b3eb983..b2d951fd82 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -1058,12 +761,12 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {\n                 try {\n                     code = field.getInt(null);\n                 } catch (IllegalAccessException | IllegalArgumentException e) {\n-                    //exceptions make me throw up...\n+                    // exceptions make me throw up...\n                 }\n \n                 String key = name.substring(3);\n \n-                //log.debug(\"VTCode[{}]:'{}'\", key, code);\n+                // log.debug(\"VTCode[{}]:'{}'\", key, code);\n                 stringsToVTCodes.put(key, code);\n             }\n         }\n", "next_change": {"commit": "3c5469ec94ecd6b304f3846730a06911b0704e81", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex b2d951fd82..e5a3ba0022 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -761,12 +764,12 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {\n                 try {\n                     code = field.getInt(null);\n                 } catch (IllegalAccessException | IllegalArgumentException e) {\n-                    // exceptions make me throw up...\n+                    //exceptions make me throw up...\n                 }\n \n                 String key = name.substring(3);\n \n-                // log.debug(\"VTCode[{}]:'{}'\", key, code);\n+                //log.debug(\"VTCode[{}]:'{}'\", key, code);\n                 stringsToVTCodes.put(key, code);\n             }\n         }\n", "next_change": {"commit": "e3d61d7187920a9a04aa156a3090a76e85889ccb", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex e5a3ba0022..b354344783 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -764,12 +762,12 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {\n                 try {\n                     code = field.getInt(null);\n                 } catch (IllegalAccessException | IllegalArgumentException e) {\n-                    //exceptions make me throw up...\n+                    // exceptions make me throw up...\n                 }\n \n                 String key = name.substring(3);\n \n-                //log.debug(\"VTCode[{}]:'{}'\", key, code);\n+                // log.debug(\"VTCode[{}]:'{}'\", key, code);\n                 stringsToVTCodes.put(key, code);\n             }\n         }\n", "next_change": {"commit": "1de2483ad7dd992e42451b5e28e8a3eda55f5080", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex b354344783..3a4483b5b9 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -773,13 +772,46 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {\n         }\n     }\n \n+    /**\n+     * The Java run times for 11 and 12 running on macOS have a bug that causes double events for\n+     * JCheckBoxMenuItem when invoked by an accelerator key combination.\n+     * <p>\n+     * The java.version property is parsed to determine the run time version.  If the event occurs\n+     * on macOS and Java 11 or 12 and a modifier key was active, true is returned.  The five affected\n+     * action events will drop the event and process the second occurrence.\n+     * @aparam event The action event.\n+     * @return true if the event is affected, otherwise return false.\n+     */\n+    private boolean fixMacBugOn11(ActionEvent event) {\n+        boolean result = false;\n+        if (SystemType.isMacOSX()) {\n+            if (event.getModifiers() != 0) {\n+                // MacOSX and modifier key, test Java version\n+                String version = System.getProperty(\"java.version\");\n+                if (version.startsWith(\"1.\")) {\n+                    version = version.substring(2, 3);\n+                } else {\n+                    int dot = version.indexOf(\".\");\n+                    if (dot != -1) {\n+                        version = version.substring(0, dot);\n+                    }\n+                }\n+                int vers = Integer.parseInt(version);\n+                result = (vers == 11 || vers == 12);\n+            }\n+        }\n+        return result;\n+     }\n+\n     /**\n      * Set up the Option menu.\n      *\n      * @param menuBar to add the option menu to\n      * @return option menu that was added\n      */\n-    protected JMenu setupOptionMenu(@Nonnull JMenuBar menuBar) {\n+    private JMenu setupOptionMenu(@Nonnull JMenuBar menuBar) {\n+        assert menuBar != null;\n+\n         JMenu optionMenu = new JMenu(Bundle.getMessage(\"MenuOptions\"));\n \n         optionMenu.setMnemonic(stringsToVTCodes.get(Bundle.getMessage(\"OptionsMnemonic\")));\n", "next_change": {"commit": "5161cec49e8fb480b7543fa6e9d1bc6a7c479db1", "changed_code": [{"header": "diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\nindex 3a4483b5b9..f3cdda6512 100644\n--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java\n", "chunk": "@@ -809,6 +810,7 @@ final public class LayoutEditor extends PanelEditor implements MouseWheelListene\n      * @param menuBar to add the option menu to\n      * @return option menu that was added\n      */\n+    @SuppressWarnings(\"deprecation\")  // getMenuShortcutKeyMask()\n     private JMenu setupOptionMenu(@Nonnull JMenuBar menuBar) {\n         assert menuBar != null;\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"oid": "d3f0e7eeeb7611b81ca9fa6d12edc7a51de26c0c", "url": "https://github.com/JMRI/JMRI/commit/d3f0e7eeeb7611b81ca9fa6d12edc7a51de26c0c", "message": "Fix catch re-formatting (forced by NetBeans 11)", "committedDate": "2020-04-21T16:57:04Z", "type": "commit"}]}