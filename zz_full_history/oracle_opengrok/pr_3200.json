{"pr_number": 3200, "pr_title": "introduce command timeout types", "pr_author": "vladak", "pr_createdAt": "2020-08-31T19:18:31Z", "pr_url": "https://github.com/oracle/opengrok/pull/3200", "merge_commit": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "timeline": [{"oid": "de698c4e0851dd700b852933eaf5294549ce2f39", "url": "https://github.com/oracle/opengrok/commit/de698c4e0851dd700b852933eaf5294549ce2f39", "message": "introduce CommandTimeoutType\n\nfixes #3146", "committedDate": "2020-08-31T09:24:02Z", "type": "commit"}, {"oid": "2739a693d632219fc9847688d762477095113ba2", "url": "https://github.com/oracle/opengrok/commit/2739a693d632219fc9847688d762477095113ba2", "message": "report command duration via Statistics", "committedDate": "2020-08-31T18:46:18Z", "type": "commit"}, {"oid": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471", "url": "https://github.com/oracle/opengrok/commit/acb0e685834ecd54cd8e47e665d0b5dd7f0fc471", "message": "report index time of files with Level.FINEST", "committedDate": "2020-09-02T09:35:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjMwMA==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490236300", "body": "Would not `IllegalArgumentException` make more sense? `InvalidParameterException` is from `security` package and is not that commonly used.", "bodyText": "Would not IllegalArgumentException make more sense? InvalidParameterException is from security package and is not that commonly used.", "bodyHTML": "<p dir=\"auto\">Would not <code>IllegalArgumentException</code> make more sense? <code>InvalidParameterException</code> is from <code>security</code> package and is not that commonly used.</p>", "author": "ahornace", "createdAt": "2020-09-17T13:18:22Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java", "diffHunk": "@@ -227,29 +228,59 @@ public void setNestingMaximum(int nestingMaximum) {\n         syncWriteConfiguration(nestingMaximum, Configuration::setNestingMaximum);\n     }\n \n-    public int getCommandTimeout() {\n-        return syncReadConfiguration(Configuration::getCommandTimeout);\n+    public int getCommandTimeout(CommandTimeoutType cmdType) {\n+        switch (cmdType) {\n+            case INDEXER:\n+                return getIndexerCommandTimeout();\n+            case INTERACTIVE:\n+                return getInteractiveCommandTimeout();\n+            case WEBAPP_START:\n+                return getWebappStartCommandTimeout();\n+            case RESTFUL:\n+                return getRestfulCommandTimeout();\n+        }\n+\n+        throw new InvalidParameterException(\"invalid command timeout type\");", "originalCommit": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2MTM0OA==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490361348", "bodyText": "sounds reasonable, changed.", "author": "vladak", "createdAt": "2020-09-17T15:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNjMwMA=="}], "type": "inlineReview", "revised_code": {"commit": "e8c53d06676e666d0146465992e0d9111d9fbeb5", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\nindex 6514ba33e3..4c0fc77b01 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\n", "chunk": "@@ -240,7 +240,7 @@ public final class RuntimeEnvironment {\n                 return getRestfulCommandTimeout();\n         }\n \n-        throw new InvalidParameterException(\"invalid command timeout type\");\n+        throw new IllegalArgumentException(\"invalid command timeout type\");\n     }\n \n     public int getRestfulCommandTimeout() {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\nindex 6514ba33e3..652df3ca69 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java\n", "chunk": "@@ -240,7 +237,7 @@ public final class RuntimeEnvironment {\n                 return getRestfulCommandTimeout();\n         }\n \n-        throw new InvalidParameterException(\"invalid command timeout type\");\n+        throw new IllegalArgumentException(\"invalid command timeout type\");\n     }\n \n     public int getRestfulCommandTimeout() {\n", "next_change": null}]}, "commits_in_main": [{"oid": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "message": "Merge commit", "committedDate": null}, {"oid": "8df660a0b61410d62cf773196040be7b07c19d2d", "committedDate": "2020-10-06 19:45:50 +0200", "message": "detect repositories for each source root subdirectory in parallel"}, {"oid": "c2570779f2a6a79f5fd61f7e19372af4567e0fca", "committedDate": "2020-10-06 19:45:50 +0200", "message": "simplify"}, {"oid": "0d7ace53e3bf35d6e3f78d37ef6ea4b1a697fcbe", "committedDate": "2020-10-15 12:20:30 +0200", "message": "use statsd for indexer monitoring (#3279)"}, {"oid": "5d9f3aa0ca3da3a714233f987fa732f62c0965f6", "committedDate": "2020-10-26 17:11:42 +0100", "message": "Add copyright part to header check (#3311)"}, {"oid": "6d9d3df9426166f52ef9659c0471e331849351aa", "committedDate": "2020-11-05 13:30:15 +0100", "message": "Fix for #3306: Speed up HistoryGuru.getRepository(File) call for Opengrok installations with many Repositories    and deep file trees by caching previous lookup results for dir -> Repository.    Additional refactorings to make this new functionality testable against legacy implementation:       - Introduce Jimfs for testing which will allow testing Windows, MacOS or UNIX filesystem on any machine       - Refactor PathUtils to use Paths instead of Files (this is needed to use Jimfs)"}, {"oid": "814ddb49ae9655a92ae2b97f466ab9f5fe4001fb", "committedDate": "2020-11-24 10:28:18 +0100", "message": "initial stab at token authentication"}, {"oid": "f23b127fad72473c82efe003adee41ea0a42865d", "committedDate": "2020-11-24 10:28:18 +0100", "message": "merge LocalhostFilter and TokenFilter"}, {"oid": "b0a23e73b24667284e30bb8f1d854fbcd0efb978", "committedDate": "2020-11-24 10:28:18 +0100", "message": "add configuration"}, {"oid": "c7dfd2678093b44b6441adcedab8d60dabaaf4d1", "committedDate": "2020-11-24 10:28:18 +0100", "message": "the token set should not be modifiable"}, {"oid": "e9a23d1e5ae89cb4256e2680f5d62761ad9ee646", "committedDate": "2020-11-24 10:28:18 +0100", "message": "add registerListener()"}, {"oid": "fa80b070c206794693905a8e58b2da825a42d877", "committedDate": "2020-11-24 10:28:18 +0100", "message": "add docs"}, {"oid": "8d34347c089327ae6288c7cc510b929778e32835", "committedDate": "2021-02-17 16:53:26 +0100", "message": "add indexer option to specify bearer token for API calls"}, {"oid": "f1e34e105a161dd2bdfa9be15aa950019f80060e", "committedDate": "2021-02-17 16:53:26 +0100", "message": "rename getHeaders()"}, {"oid": "aa6abf429bacc2c0baa482bff3022e77ef23c183", "committedDate": "2021-02-24 17:17:34 +0100", "message": "Jakartify - update to Jersey 3, Tomcat 10"}, {"oid": "60e45c9f71f41ca0116d02df334e783504dae009", "committedDate": "2021-02-26 09:23:14 +0100", "message": "add tunable to allow tokens over insecure channel"}, {"oid": "8e5e10366bbb2786c230a0722e9cbb3ed9cf8863", "committedDate": "2021-03-24 17:18:18 +0100", "message": "Merge commits tunable (#3496)"}, {"oid": "c6f0939b1c668e9f8e1e276424439c3106b3a029", "committedDate": "2021-03-31 10:17:37 +0200", "message": "Code cleanup"}, {"oid": "dc607a846071229446ee562fcf3cd2274ad4aea8", "committedDate": "2021-06-17 17:20:26 -0400", "message": "finish rename of executor for individual files"}, {"oid": "a2f097956fe2e2dcba62fc5b59bd6b520db401cf", "committedDate": "2021-06-24 11:07:20 +0200", "message": "bump history cache chunk counts and make it tunable (#3647)"}, {"oid": "5a635a8e1cfb33c33101a6502a7e3b88c14ccff7", "committedDate": "2021-07-15 14:04:01 -0400", "message": "add option to turn off per partes history cache"}, {"oid": "0e4c55544f8ea0a68e8bae37b0e502097e008ec1", "committedDate": "2021-07-20 11:18:51 +0200", "message": "Add check for trailing spaces"}, {"oid": "e92cec67491a347b48a5429a882f72582e04165b", "committedDate": "2021-08-12 17:23:32 +0200", "message": "introduce timeout for generating xrefs"}, {"oid": "2123e367efe7f83c1a2d942961d318a57c18f630", "committedDate": "2021-11-22 16:30:33 +0100", "message": "add tunable for repository invalidation concurrency level"}, {"oid": "6068c59c638c442007554df632b1353bc2f8f2ae", "committedDate": "2021-11-24 08:21:46 -0500", "message": "record the time needed to refresh search managers (#3786)"}, {"oid": "fa055da04b842e82d0845be5633f879a7fc31fc3", "committedDate": "2021-11-25 11:25:45 -0500", "message": "sanitize list of projects in suggester query (#3793)"}, {"oid": "232872556f4cd21b8de0ade717b070045d911a5c", "committedDate": "2021-11-30 08:00:57 -0500", "message": "make watchDog private"}, {"oid": "0516dd21dfeb393bf975b3930bbbf13ecc1deed8", "committedDate": "2021-12-01 17:42:03 -0500", "message": "replace X-Forwarded-Host with configuration value"}, {"oid": "3434df09dd5fc8d99e2eb062befd83715e072cc3", "committedDate": "2021-12-03 08:17:39 -0500", "message": "log merged/written revisions in FileHistoryCache (#3826)"}, {"oid": "f0d57a0854ca7450c3fb851adbaf3bf97d5a898d", "committedDate": "2021-12-06 17:57:58 -0500", "message": "FileHistoryCache#get() should not modify history cache (#3828)"}, {"oid": "523d6b7bd0b4e366ff4474971c592aaf036fff73", "committedDate": "2021-12-23 10:23:37 +0100", "message": "suppress 'Use try-with-resources or close' Sonar warning"}, {"oid": "1c258122d17e56599843d69a69f1445a01e0cd68", "committedDate": "2021-12-29 20:50:35 +0100", "message": "asynchronous API"}, {"oid": "cce4eb5fdc725c6561a5e047584a06646e911023", "committedDate": "2022-01-19 09:59:58 +0100", "message": "make markIndexed() asynchronous"}, {"oid": "6bfa9427531aba249c4cbb0224702873fc6386d8", "committedDate": "2022-01-19 09:59:58 +0100", "message": "fix nits"}, {"oid": "ad8a45cd138bf0296d34e019a5fa2132eaa7fad6", "committedDate": "2022-01-31 23:13:04 +0100", "message": "rename to match the return type"}, {"oid": "1b93561956b1fb47c6797767615e69b0b4fefced", "committedDate": "2022-03-14 13:02:52 +0100", "message": "keep the subFiles in a Set"}, {"oid": "fd1c36302202d6894b97c7264c700f5855990ca5", "committedDate": "2022-04-22 09:41:18 +0200", "message": "remove /system/refresh API endpoint (#3940)"}, {"oid": "32b4cd63ed2607b1a2c5e04b2f2d52ebfc171740", "committedDate": "2022-05-24 18:20:18 +0200", "message": "next chunk of changes"}, {"oid": "7e740a877c95e26ff3b7a26252828d7d04fa2305", "committedDate": "2022-05-24 18:20:18 +0200", "message": "avoid NPE, fix test to be consistent"}, {"oid": "12365fb4573530f2de48294a6af76592ebcbeecf", "committedDate": "2022-05-24 18:20:18 +0200", "message": "add global tunable"}, {"oid": "f4571972af2bea1787c3c7fe25ebe37c89f396a4", "committedDate": "2022-05-24 18:20:18 +0200", "message": "truly incremental -> history based"}, {"oid": "fadf908097ad8422775b68533e012a3430e7f061", "committedDate": "2022-05-24 18:20:18 +0200", "message": "acquire the list of files during history cache generation"}, {"oid": "5650cf1579547c2f9158c047af5b8af27ab2e6d3", "committedDate": "2022-05-24 18:20:18 +0200", "message": "fix tests"}, {"oid": "3a9e53459235265a084a6ef0894301456fbce160", "committedDate": "2022-07-15 11:43:27 +0200", "message": "add API endpoint for project groups (#3991)"}, {"oid": "c3b0c926afeebb4d02f47d2d1fc694e9af676542", "committedDate": "2022-07-25 15:06:14 +0200", "message": "make index database \"optimization\" explicit operation (#3983)"}, {"oid": "4956def7ae5597398d5f580be4311a7501e771fd", "committedDate": "2022-07-26 09:26:44 +0200", "message": "make sure all IndexSearcher instances use an executor (#4008)"}, {"oid": "d594176da0a84eb7dd35656c5a37e79e62b4d79e", "committedDate": "2022-07-26 16:33:18 +0200", "message": "avoid re-opening index directory"}, {"oid": "09069e59933b73bfc0213d388b9475c19491e0cf", "committedDate": "2022-07-27 00:18:04 +0200", "message": "use dedicated method to shutdown search executor"}, {"oid": "73b37cd082e156c3df05778f9c531c552eac24c8", "committedDate": "2022-07-27 11:51:00 +0200", "message": "unify thread naming (#4015)"}, {"oid": "b91f0172879c6dac1ab738814410081502a3b7a8", "committedDate": "2022-09-18 22:07:29 +0200", "message": "fix some Javadoc warnings"}, {"oid": "e2f7528863dc2eccfe7204bba2a56a47df14f9f8", "committedDate": "2022-10-24 14:34:36 +0200", "message": "Annotation cache (#4059)"}, {"oid": "4e9d8bc05338843a01498e55036c0bba4643e122", "committedDate": "2023-01-03 08:45:23 +0100", "message": "more thorough ctags check"}, {"oid": "9840aef5ee6bcc8fc32872f7611fa688ebaa520e", "committedDate": "2023-01-06 10:55:02 +0100", "message": "normalize scan depth based on the number of path components"}, {"oid": "194fe7984c01b900295e6fe682b7eccd5dbd8938", "committedDate": "2023-03-10 14:12:02 +0100", "message": "Parallelism zero fix (#4207)"}, {"oid": "61b85758c63c0112ac7fa1cf41ba6ff6a44f10e3", "committedDate": "2023-03-13 11:20:49 +0100", "message": "use connectTimeout for all API calls"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490243142", "body": "I know it was like this but since you are touching it, could you please rename to `timeStr` to follow Java standard?", "bodyText": "I know it was like this but since you are touching it, could you please rename to timeStr to follow Java standard?", "bodyHTML": "<p dir=\"auto\">I know it was like this but since you are touching it, could you please rename to <code>timeStr</code> to follow Java standard?</p>", "author": "ahornace", "createdAt": "2020-09-17T13:26:34Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;\n+\n+    public Statistics() {\n       startTime = System.currentTimeMillis();    \n   }\n \n-  public void report(Logger log, String msg) {\n-      long stopTime = System.currentTimeMillis();\n-      String time_str = StringUtils.getReadableTime(stopTime - startTime);\n-      log.log(Level.INFO, msg + \" (took {0})\", time_str);\n-  }\n+    /**\n+     * log a message along with how much time it took since the constructor was called.\n+     * @param logger logger instance\n+     * @param logLevel log level\n+     * @param msg message string\n+     */\n+    public void report(Logger logger, Level logLevel, String msg) {\n+        long stopTime = System.currentTimeMillis();\n+        String time_str = StringUtils.getReadableTime(stopTime - startTime);", "originalCommit": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1OTkzMA==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490359930", "bodyText": "sure", "author": "vladak", "createdAt": "2020-09-17T15:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "187f4cd872c1fceca95551343bdb2b9a4df4fc52", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 97ec32f0d1..1949696d92 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -43,8 +43,8 @@ public class Statistics {\n      */\n     public void report(Logger logger, Level logLevel, String msg) {\n         long stopTime = System.currentTimeMillis();\n-        String time_str = StringUtils.getReadableTime(stopTime - startTime);\n-        logger.log(Level.INFO, msg + \" (took {0})\", time_str);\n+        String timeStr = StringUtils.getReadableTime(stopTime - startTime);\n+        logger.log(Level.INFO, msg + \" (took {0})\", timeStr);\n     }\n \n     /**\n", "next_change": {"commit": "b08ee2a79de4f1e6f076f2ba617f9aa077ad438f", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 1949696d92..37aafc2645 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -42,14 +44,13 @@ public class Statistics {\n      * @param msg message string\n      */\n     public void report(Logger logger, Level logLevel, String msg) {\n-        long stopTime = System.currentTimeMillis();\n-        String timeStr = StringUtils.getReadableTime(stopTime - startTime);\n-        logger.log(Level.INFO, msg + \" (took {0})\", timeStr);\n+        String timeStr = StringUtils.getReadableTime(Duration.between(startTime, Instant.now()).toMillis());\n+        logger.log(logLevel, msg + \" (took {0})\", timeStr);\n     }\n \n     /**\n      * log a message along with how much time it took since the constructor was called.\n-     * The log level is Level.INFO.\n+     * The log level is {@code INFO}.\n      * @param logger logger instance\n      * @param msg message string\n      */\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 97ec32f0d1..37aafc2645 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -42,14 +44,13 @@ public class Statistics {\n      * @param msg message string\n      */\n     public void report(Logger logger, Level logLevel, String msg) {\n-        long stopTime = System.currentTimeMillis();\n-        String time_str = StringUtils.getReadableTime(stopTime - startTime);\n-        logger.log(Level.INFO, msg + \" (took {0})\", time_str);\n+        String timeStr = StringUtils.getReadableTime(Duration.between(startTime, Instant.now()).toMillis());\n+        logger.log(logLevel, msg + \" (took {0})\", timeStr);\n     }\n \n     /**\n      * log a message along with how much time it took since the constructor was called.\n-     * The log level is Level.INFO.\n+     * The log level is {@code INFO}.\n      * @param logger logger instance\n      * @param msg message string\n      */\n", "next_change": {"commit": "0d7ace53e3bf35d6e3f78d37ef6ea4b1a697fcbe", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 37aafc2645..fb760e9a8a 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -53,24 +80,19 @@ public class Statistics {\n      * The log level is {@code INFO}.\n      * @param logger logger instance\n      * @param msg message string\n+     * @param meterName name of the meter\n      */\n-    public void report(Logger logger, String msg) {\n-        report(logger, Level.INFO, msg);\n+    public void report(Logger logger, String msg, String meterName) {\n+        report(logger, Level.INFO, msg, meterName);\n     }\n \n     /**\n-     * log a message along with how much time and memory it took since the constructor was called.\n-     * The message will be logged with the {@code INFO} level.\n+     * log a message along with how much time it took since the constructor was called.\n+     * The log level is {@code INFO}.\n      * @param logger logger instance\n+     * @param msg message string\n      */\n-    public void report(Logger logger) {\n-        logger.log(Level.INFO, \"Total time: {0}\",\n-                getReadableTime(Duration.between(startTime, Instant.now()).toMillis()));\n-\n-        System.gc();\n-        Runtime r = Runtime.getRuntime();\n-        long mb = 1024L * 1024;\n-        logger.log(Level.INFO, \"Final Memory: {0}M/{1}M\",\n-                new Object[]{(r.totalMemory() - r.freeMemory()) / mb, r.totalMemory() / mb});\n+    public void report(Logger logger, String msg) {\n+        report(logger, Level.INFO, msg);\n     }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "message": "Merge commit", "committedDate": null}, {"oid": "0d7ace53e3bf35d6e3f78d37ef6ea4b1a697fcbe", "committedDate": "2020-10-15 12:20:30 +0200", "message": "use statsd for indexer monitoring (#3279)"}, {"oid": "5d9f3aa0ca3da3a714233f987fa732f62c0965f6", "committedDate": "2020-10-26 17:11:42 +0100", "message": "Add copyright part to header check (#3311)"}, {"oid": "5752d8ba1f4fa1892ace5235ae48a63534fd24d3", "committedDate": "2021-02-27 09:01:26 -0500", "message": "report duration for file history cache updates"}, {"oid": "ef6b5de24264d979d0f4e0ef5515d20f1309837b", "committedDate": "2021-03-17 20:50:20 +0100", "message": "add more search.latency categories (#3485)"}, {"oid": "e2f7528863dc2eccfe7204bba2a56a47df14f9f8", "committedDate": "2022-10-24 14:34:36 +0200", "message": "Annotation cache (#4059)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTY2Nw==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490249667", "body": "I still prefer using `Instant` and `Duration` classes for computing the duration as it is more high level. If you do not, then feel free to ignore.", "bodyText": "I still prefer using Instant and Duration classes for computing the duration as it is more high level. If you do not, then feel free to ignore.", "bodyHTML": "<p dir=\"auto\">I still prefer using <code>Instant</code> and <code>Duration</code> classes for computing the duration as it is more high level. If you do not, then feel free to ignore.</p>", "author": "ahornace", "createdAt": "2020-09-17T13:33:46Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java", "diffHunk": "@@ -28,28 +28,47 @@\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n-        \n-  private final long startTime;  \n \n-  public Statistics() {\n+    private final long startTime;", "originalCommit": "acb0e685834ecd54cd8e47e665d0b5dd7f0fc471", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2NTAwOA==", "url": "https://github.com/oracle/opengrok/pull/3200#discussion_r490365008", "bodyText": "why not, changed. I like Duration.between().", "author": "vladak", "createdAt": "2020-09-17T15:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b08ee2a79de4f1e6f076f2ba617f9aa077ad438f", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 97ec32f0d1..37aafc2645 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -23,16 +23,18 @@\n \n package org.opengrok.indexer.util;\n \n+import java.time.Duration;\n+import java.time.Instant;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n \n-    private final long startTime;\n+    private final Instant startTime;\n \n     public Statistics() {\n-      startTime = System.currentTimeMillis();    \n+      startTime = Instant.now();\n   }\n \n     /**\n", "next_change": null}]}, "revised_code_in_main": {"commit": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 97ec32f0d1..37aafc2645 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -23,16 +23,18 @@\n \n package org.opengrok.indexer.util;\n \n+import java.time.Duration;\n+import java.time.Instant;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import static org.opengrok.indexer.util.StringUtils.getReadableTime;\n \n public class Statistics {\n \n-    private final long startTime;\n+    private final Instant startTime;\n \n     public Statistics() {\n-      startTime = System.currentTimeMillis();    \n+      startTime = Instant.now();\n   }\n \n     /**\n", "next_change": {"commit": "0d7ace53e3bf35d6e3f78d37ef6ea4b1a697fcbe", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 37aafc2645..fb760e9a8a 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -37,15 +40,39 @@ public class Statistics {\n       startTime = Instant.now();\n   }\n \n+    private void logIt(Logger logger, Level logLevel, String msg, Duration duration) {\n+        String timeStr = StringUtils.getReadableTime(duration.toMillis());\n+        logger.log(logLevel, msg + \" (took {0})\", timeStr);\n+    }\n+\n     /**\n-     * log a message along with how much time it took since the constructor was called.\n+     * Log a message along with how much time it took since the constructor was called.\n      * @param logger logger instance\n      * @param logLevel log level\n      * @param msg message string\n      */\n     public void report(Logger logger, Level logLevel, String msg) {\n-        String timeStr = StringUtils.getReadableTime(Duration.between(startTime, Instant.now()).toMillis());\n-        logger.log(logLevel, msg + \" (took {0})\", timeStr);\n+        logIt(logger, logLevel, msg, Duration.between(startTime, Instant.now()));\n+    }\n+\n+    /**\n+     * Log a message and trigger statsd message along with how much time it took since the constructor was called.\n+     * @param logger logger instance\n+     * @param logLevel log level\n+     * @param msg message string\n+     * @param meterName name of the meter\n+     */\n+    public void report(Logger logger, Level logLevel, String msg, String meterName) {\n+        Duration duration = Duration.between(startTime, Instant.now());\n+\n+        logIt(logger, logLevel, msg, duration);\n+\n+        MeterRegistry registry = Metrics.getRegistry();\n+        if (registry != null) {\n+            Timer.builder(meterName).\n+                    register(registry).\n+                    record(duration);\n+        }\n     }\n \n     /**\n", "next_change": {"commit": "5752d8ba1f4fa1892ace5235ae48a63534fd24d3", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex fb760e9a8a..269bd00dff 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -77,6 +82,7 @@ public class Statistics {\n \n     /**\n      * log a message along with how much time it took since the constructor was called.\n+     * If there is a metrics registry, it will update the timer specified by the meter name.\n      * The log level is {@code INFO}.\n      * @param logger logger instance\n      * @param msg message string\n", "next_change": {"commit": "e2f7528863dc2eccfe7204bba2a56a47df14f9f8", "changed_code": [{"header": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\nindex 269bd00dff..a11795988b 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/util/Statistics.java\n", "chunk": "@@ -75,13 +91,14 @@ public class Statistics {\n         MeterRegistry registry = Metrics.getRegistry();\n         if (registry != null) {\n             Timer.builder(meterName).\n+                    tags(tags).\n                     register(registry).\n                     record(duration);\n         }\n     }\n \n     /**\n-     * log a message along with how much time it took since the constructor was called.\n+     * Log a message along with how much time it took since the constructor was called.\n      * If there is a metrics registry, it will update the timer specified by the meter name.\n      * The log level is {@code INFO}.\n      * @param logger logger instance\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "e1b8a728de75efbcf65f25a7169ce99443c144ac", "message": "Merge commit", "committedDate": null}, {"oid": "0d7ace53e3bf35d6e3f78d37ef6ea4b1a697fcbe", "committedDate": "2020-10-15 12:20:30 +0200", "message": "use statsd for indexer monitoring (#3279)"}, {"oid": "5d9f3aa0ca3da3a714233f987fa732f62c0965f6", "committedDate": "2020-10-26 17:11:42 +0100", "message": "Add copyright part to header check (#3311)"}, {"oid": "5752d8ba1f4fa1892ace5235ae48a63534fd24d3", "committedDate": "2021-02-27 09:01:26 -0500", "message": "report duration for file history cache updates"}, {"oid": "ef6b5de24264d979d0f4e0ef5515d20f1309837b", "committedDate": "2021-03-17 20:50:20 +0100", "message": "add more search.latency categories (#3485)"}, {"oid": "e2f7528863dc2eccfe7204bba2a56a47df14f9f8", "committedDate": "2022-10-24 14:34:36 +0200", "message": "Annotation cache (#4059)"}]}, {"oid": "187f4cd872c1fceca95551343bdb2b9a4df4fc52", "url": "https://github.com/oracle/opengrok/commit/187f4cd872c1fceca95551343bdb2b9a4df4fc52", "message": "rename per review comment", "committedDate": "2020-09-17T15:51:13Z", "type": "commit"}, {"oid": "e8c53d06676e666d0146465992e0d9111d9fbeb5", "url": "https://github.com/oracle/opengrok/commit/e8c53d06676e666d0146465992e0d9111d9fbeb5", "message": "use IllegalArgumentException per review comment", "committedDate": "2020-09-17T15:53:14Z", "type": "commit"}, {"oid": "b08ee2a79de4f1e6f076f2ba617f9aa077ad438f", "url": "https://github.com/oracle/opengrok/commit/b08ee2a79de4f1e6f076f2ba617f9aa077ad438f", "message": "use Instant/Duration per review comment", "committedDate": "2020-09-17T15:58:18Z", "type": "commit"}, {"oid": "1a10c24c4b271ec1cf6bfeef17491acc61ce6e85", "url": "https://github.com/oracle/opengrok/commit/1a10c24c4b271ec1cf6bfeef17491acc61ce6e85", "message": "remove unused import", "committedDate": "2020-09-17T17:38:25Z", "type": "commit"}]}