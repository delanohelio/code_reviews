{"pr_number": 1843, "pr_title": "DBZ-2582 Updating LSN handling", "pr_author": "jgormley6", "pr_createdAt": "2020-09-25T12:43:57Z", "pr_url": "https://github.com/debezium/debezium/pull/1843", "merge_commit": "bea46a3059d3cf3d0c82c5ec2153440db35f1a31", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3MzE1MA==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497373150", "body": "```suggestion\r\n            LOGGER.trace(\"Current maximum LSN is {}\", ret);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.trace(\"Current maximum lsn is {}\", ret);\n          \n          \n            \n                        LOGGER.trace(\"Current maximum LSN is {}\", ret);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current maximum <span class=\"x x-first x-last\">lsn</span> is {}<span class=\"pl-pds\">\"</span></span>, ret);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current maximum <span class=\"x x-first x-last\">LSN</span> is {}<span class=\"pl-pds\">\"</span></span>, ret);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gunnarmorling", "createdAt": "2020-09-30T09:32:41Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java", "diffHunk": "@@ -150,6 +151,26 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n+    public MaxLsnResult getMaxLsnResult(String alternativeMaxTransactionalQuery) throws SQLException {\n+        Lsn maxLsn = queryAndMap(GET_MAX_LSN, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Current maximum lsn is {}\", ret);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3MzI4OQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497373289", "body": "```suggestion\r\n            LOGGER.trace(\"Current maximum transactional LSN is {}\", ret);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.trace(\"Current maximum transactional lsn is {}\", ret);\n          \n          \n            \n                        LOGGER.trace(\"Current maximum transactional LSN is {}\", ret);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current maximum transactional <span class=\"x x-first x-last\">lsn</span> is {}<span class=\"pl-pds\">\"</span></span>, ret);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Current maximum transactional <span class=\"x x-first x-last\">LSN</span> is {}<span class=\"pl-pds\">\"</span></span>, ret);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gunnarmorling", "createdAt": "2020-09-30T09:32:50Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java", "diffHunk": "@@ -150,6 +151,26 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n+    public MaxLsnResult getMaxLsnResult(String alternativeMaxTransactionalQuery) throws SQLException {\n+        Lsn maxLsn = queryAndMap(GET_MAX_LSN, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Current maximum lsn is {}\", ret);\n+            return ret;\n+        }, \"Maximum LSN query must return exactly one value\"));\n+\n+        if (StringUtils.isEmpty(alternativeMaxTransactionalQuery)) {\n+            // If not alternative query is provided, return the default for both.\n+            return new MaxLsnResult(maxLsn, maxLsn);\n+        }\n+\n+        // Else run the alternative query for getting the largest lsn related to a valid transaction.\n+        return new MaxLsnResult(maxLsn, queryAndMap(alternativeMaxTransactionalQuery, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Current maximum transactional lsn is {}\", ret);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4NDAwMw==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497384003", "body": "Would be better to use prepared statements to avoid the repeated parsing (see `preparedQueryAndMap()`), for that one and similar queries (I suppose this started off not using PS once and then similar methods followed that precedence).", "bodyText": "Would be better to use prepared statements to avoid the repeated parsing (see preparedQueryAndMap()), for that one and similar queries (I suppose this started off not using PS once and then similar methods followed that precedence).", "bodyHTML": "<p dir=\"auto\">Would be better to use prepared statements to avoid the repeated parsing (see <code>preparedQueryAndMap()</code>), for that one and similar queries (I suppose this started off not using PS once and then similar methods followed that precedence).</p>", "author": "gunnarmorling", "createdAt": "2020-09-30T09:50:35Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java", "diffHunk": "@@ -150,6 +151,26 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n+    public MaxLsnResult getMaxLsnResult(String alternativeMaxTransactionalQuery) throws SQLException {\n+        Lsn maxLsn = queryAndMap(GET_MAX_LSN, singleResultMapper(rs -> {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MDM0OQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497390349", "bodyText": "Btw. in the Jira statement you originally suggested a single statement to get both LSN values. Can we actually do this, avoiding one round-trip to the DB?", "author": "gunnarmorling", "createdAt": "2020-09-30T10:00:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4NDAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTE3NQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497391175", "bodyText": "Also, should the existing getMaxLsn() method be removed, and all callers be updated to use this one?", "author": "gunnarmorling", "createdAt": "2020-09-30T10:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4NDAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ2ODYwOQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497468609", "bodyText": "I can update to the prepared query.\nI'm not sure how we want to handle these sql statements. @jpechane made a valuable suggestion in that we have this feature defaulted, but still removable incase there are issues with it, so I was trying to minimize changing from the current flow. I could update the code to be more of a split between the current way we handle the lsn and the new way and have the new way utilize the query that contains both lsns.\ngetMaxLsn() still has its uses as the stored procs require a valid lsn, which the max transactional way may not be valid after a long period of inactivity. The idea is that one lsn can be utilize for comparison, and the other should be utilized for any queries", "author": "jgormley6", "createdAt": "2020-09-30T12:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4NDAwMw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTkzMQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497391931", "body": "Seems this would only be the case if someone set the statement explicitly to \"\"; is this what you're expecting here?", "bodyText": "Seems this would only be the case if someone set the statement explicitly to \"\"; is this what you're expecting here?", "bodyHTML": "<p dir=\"auto\">Seems this would only be the case if someone set the statement explicitly to \"\"; is this what you're expecting here?</p>", "author": "gunnarmorling", "createdAt": "2020-09-30T10:03:40Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java", "diffHunk": "@@ -150,6 +151,26 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n+    public MaxLsnResult getMaxLsnResult(String alternativeMaxTransactionalQuery) throws SQLException {\n+        Lsn maxLsn = queryAndMap(GET_MAX_LSN, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Current maximum lsn is {}\", ret);\n+            return ret;\n+        }, \"Maximum LSN query must return exactly one value\"));\n+\n+        if (StringUtils.isEmpty(alternativeMaxTransactionalQuery)) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ2MzA5NA==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497463094", "bodyText": "The original idea for the configuration was that if you put nothing, the current flow wouldn't change, but with this second go around where the query is defaulted, but still overridable, I'm not sure what exactly we want to do.\nMaybe we could make this as a sort of feature flag and just have a boolean for determining whether or not we utilize the new lsn handling?", "author": "jgormley6", "createdAt": "2020-09-30T12:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ2OTE0Mw==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497469143", "bodyText": "I think the question is whether there's a realistic chance for other statements really being used. If not (which I think is the case tbh.) then yes hard-coding the statement and instead having a feature-toggle for enabling/disabling this optimization seems more reasonable. It could remain an internal (undocumented one) as is right now, defaulting to enable this. Then this could be used to disable the optimization should it prove troublesome in production.", "author": "gunnarmorling", "createdAt": "2020-09-30T12:29:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTkzMQ=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MzYxOQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497393619", "body": "Do we actually need to expose both values to calling code? Wouldn't it suffice to expose only the lower of the two?", "bodyText": "Do we actually need to expose both values to calling code? Wouldn't it suffice to expose only the lower of the two?", "bodyHTML": "<p dir=\"auto\">Do we actually need to expose both values to calling code? Wouldn't it suffice to expose only the lower of the two?</p>", "author": "gunnarmorling", "createdAt": "2020-09-30T10:06:26Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/MaxLsnResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright Debezium Authors.\n+ *\n+ * Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.debezium.connector.sqlserver;\n+\n+/**\n+ * Stores the result from querying the lsn_time_mapping for the highest LSNs.\n+ */\n+public class MaxLsnResult {\n+\n+    /**\n+     * The highest lsn regardless of configuration. This should be utilized when querying the CDC tables as using an LSN that is no longer valid can lead to errors.\n+     */\n+    private final Lsn maxLsn;\n+\n+    /**\n+     * The highest lsn belonging to a valid change transaction as determined by {@link SqlServerConnectorConfig#STREAMING_MAX_LSN_SELECT_STATEMENT} or default to the same as maxLsn.\n+     */\n+    private final Lsn maxTransactionalLsn;\n+\n+    public MaxLsnResult(Lsn maxLsn, Lsn maxTransactionalLsn) {\n+        this.maxLsn = maxLsn;\n+        this.maxTransactionalLsn = maxTransactionalLsn;\n+    }\n+\n+    public Lsn getMaxLsn() {\n+        return maxLsn;\n+    }\n+\n+    public Lsn getMaxTransactionalLsn() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ2NDcyOA==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497464728", "bodyText": "We need both values because the stored proc later used to read the changes will fail if you give it an invalid lsn.\nWhen query the actual tables, we need to always give it the real maximum lsn (and not just the highest one related to changes) otherwise if a server is dormant for a while, you'll run into errors.\nI tried clarifying that through the comments, let me know what changes I can make to them as it's not an obvious thing and should be well documented in the code why.", "author": "jgormley6", "createdAt": "2020-09-30T12:21:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MzYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MjU1Nw==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497562557", "bodyText": "I think I got it overall, thanks for elaborating! One thing still unclear: when does an LSN become invalid exactly?", "author": "gunnarmorling", "createdAt": "2020-09-30T14:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MzYxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczNzc2Ng==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r497737766", "bodyText": "From my understanding, LSNs are cleaned up and removed from the lsn_time_mapping table. It happens automatically, but I believe this stored procedure also could trigger it manually if you wanted to see an example\nhttps://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sys-sp-cdc-cleanup-change-table-transact-sql?view=sql-server-ver15", "author": "jgormley6", "createdAt": "2020-09-30T19:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MzYxOQ=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": null}, {"oid": "203e73ab61c4e6a879a20916262516ae589699e0", "url": "https://github.com/debezium/debezium/commit/203e73ab61c4e6a879a20916262516ae589699e0", "message": "DBZ-2582 Updating LSN handling", "committedDate": "2020-10-08T13:01:54Z", "type": "commit"}, {"oid": "6e55c5c016ec0b0beaf7f10225d9f15589b2bf4b", "url": "https://github.com/debezium/debezium/commit/6e55c5c016ec0b0beaf7f10225d9f15589b2bf4b", "message": "DBZ-2582-lsn-changes revert log change", "committedDate": "2020-10-08T13:01:54Z", "type": "commit"}, {"oid": "05497e16cd3c998a8a17b28f67f2d166f197e05a", "url": "https://github.com/debezium/debezium/commit/05497e16cd3c998a8a17b28f67f2d166f197e05a", "message": "DBZ-2582 Fixing tests and adding pause back", "committedDate": "2020-10-08T13:01:54Z", "type": "commit"}, {"oid": "410f2d74b3c4378b065d3ea9464577475de26bb8", "url": "https://github.com/debezium/debezium/commit/410f2d74b3c4378b065d3ea9464577475de26bb8", "message": "DBZ-2582 Adding copyright", "committedDate": "2020-10-08T13:01:54Z", "type": "commit"}, {"oid": "e0339efe1cf12536c545f04f9d9e6f7658c30739", "url": "https://github.com/debezium/debezium/commit/e0339efe1cf12536c545f04f9d9e6f7658c30739", "message": "DBZ-2582 Apply suggestions from code review\n\nCo-authored-by: Gunnar Morling <gunnar.morling@googlemail.com>", "committedDate": "2020-10-08T13:01:54Z", "type": "commit"}, {"oid": "714edc7b4a61340fd5f19ced8dec95c0de96a561", "url": "https://github.com/debezium/debezium/commit/714edc7b4a61340fd5f19ced8dec95c0de96a561", "message": "DBZ-2582 Updating configuration to be feature flag and using prepared statements", "committedDate": "2020-10-08T13:01:55Z", "type": "commit"}, {"oid": "fcd7c5bf5f18eee77511ec7742a37f7282881e7f", "url": "https://github.com/debezium/debezium/commit/fcd7c5bf5f18eee77511ec7742a37f7282881e7f", "message": "DBZ-2582 Updating test for consistency", "committedDate": "2020-10-08T13:01:55Z", "type": "commit"}, {"oid": "38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "url": "https://github.com/debezium/debezium/commit/38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "message": "DBZ-2582 Adding boolean check and removing TODO as no changes are necessary", "committedDate": "2020-10-08T13:01:55Z", "type": "commit"}, {"oid": "38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "url": "https://github.com/debezium/debezium/commit/38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "message": "DBZ-2582 Adding boolean check and removing TODO as no changes are necessary", "committedDate": "2020-10-08T13:01:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0OTg5MA==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r502249890", "body": "Tiny nit: \"LSN\" -> \"Lsn\" (this isn't done consistently across the code base yet, but it's the casing we want to converge on eventually for abbreviations in type/method/variable names).", "bodyText": "Tiny nit: \"LSN\" -> \"Lsn\" (this isn't done consistently across the code base yet, but it's the casing we want to converge on eventually for abbreviations in type/method/variable names).", "bodyHTML": "<p dir=\"auto\">Tiny nit: \"LSN\" -&gt; \"Lsn\" (this isn't done consistently across the code base yet, but it's the casing we want to converge on eventually for abbreviations in type/method/variable names).</p>", "author": "gunnarmorling", "createdAt": "2020-10-09T07:51:17Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java", "diffHunk": "@@ -442,6 +452,10 @@ public boolean isReadOnlyDatabaseConnection() {\n         return readOnlyDatabaseConnection;\n     }\n \n+    public boolean isSkipLowActivityLSNsEnabled() {", "originalCommit": "38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd8db7979f407681554fcb71bc4fe659cf4da6ca", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 201ddb6a6..40854dd6a 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -452,8 +452,8 @@ public boolean isReadOnlyDatabaseConnection() {\n         return readOnlyDatabaseConnection;\n     }\n \n-    public boolean isSkipLowActivityLSNsEnabled() {\n-        return skipLowActivityLSNsEnabled;\n+    public boolean isSkipLowActivityLsnsEnabled() {\n+        return skipLowActivityLsnsEnabled;\n     }\n \n     @Override\n", "next_change": null}]}, "revised_code_in_main": {"commit": "bea46a3059d3cf3d0c82c5ec2153440db35f1a31", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 201ddb6a6..40854dd6a 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -452,8 +452,8 @@ public boolean isReadOnlyDatabaseConnection() {\n         return readOnlyDatabaseConnection;\n     }\n \n-    public boolean isSkipLowActivityLSNsEnabled() {\n-        return skipLowActivityLSNsEnabled;\n+    public boolean isSkipLowActivityLsnsEnabled() {\n+        return skipLowActivityLsnsEnabled;\n     }\n \n     @Override\n", "next_change": {"commit": "dd23e0faad7bc5e9dba648658703be4d17ae2f74", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 40854dd6a..3276d19d3 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -444,16 +390,12 @@ public SourceTimestampMode getSourceTimestampMode() {\n         return sourceTimestampMode;\n     }\n \n-    public ColumnNameFilter getColumnFilter() {\n-        return columnFilter;\n-    }\n-\n     public boolean isReadOnlyDatabaseConnection() {\n         return readOnlyDatabaseConnection;\n     }\n \n-    public boolean isSkipLowActivityLsnsEnabled() {\n-        return skipLowActivityLsnsEnabled;\n+    public int getMaxTransactionsPerIteration() {\n+        return maxTransactionsPerIteration;\n     }\n \n     @Override\n", "next_change": {"commit": "cbf2abaaf2e64995595f1b133002df237734effc", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 3276d19d3..7890c1c85 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -398,6 +398,11 @@ public int getMaxTransactionsPerIteration() {\n         return maxTransactionsPerIteration;\n     }\n \n+    @Override\n+    public boolean supportsOperationFiltering() {\n+        return true;\n+    }\n+\n     @Override\n     protected SourceInfoStructMaker<? extends AbstractSourceInfo> getSourceInfoStructMaker(Version version) {\n         switch (version) {\n", "next_change": {"commit": "44073cf7d89c17922476fffa226ec4497f493ad2", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 7890c1c85..990c61905 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -398,11 +455,20 @@ public int getMaxTransactionsPerIteration() {\n         return maxTransactionsPerIteration;\n     }\n \n+    public boolean getOptionRecompile() {\n+        return optionRecompile;\n+    }\n+\n     @Override\n     public boolean supportsOperationFiltering() {\n         return true;\n     }\n \n+    @Override\n+    protected boolean supportsSchemaChangesDuringIncrementalSnapshot() {\n+        return true;\n+    }\n+\n     @Override\n     protected SourceInfoStructMaker<? extends AbstractSourceInfo> getSourceInfoStructMaker(Version version) {\n         switch (version) {\n", "next_change": {"commit": "4a48eb33df3a4a9c0865271e1065a20d7e4a49bd", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\nindex 990c61905..29af6a07c 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnectorConfig.java\n", "chunk": "@@ -471,12 +446,7 @@ protected boolean supportsSchemaChangesDuringIncrementalSnapshot() {\n \n     @Override\n     protected SourceInfoStructMaker<? extends AbstractSourceInfo> getSourceInfoStructMaker(Version version) {\n-        switch (version) {\n-            case V1:\n-                return new LegacyV1SqlServerSourceInfoStructMaker(Module.name(), Module.version(), this);\n-            default:\n-                return new SqlServerSourceInfoStructMaker(Module.name(), Module.version(), this);\n-        }\n+        return new SqlServerSourceInfoStructMaker(Module.name(), Module.version(), this);\n     }\n \n     private static class SystemTablesPredicate implements TableFilter {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "bea46a3059d3cf3d0c82c5ec2153440db35f1a31", "message": "Merge commit", "committedDate": null}, {"oid": "fa1ad8065d2ced4ceba29c10f7b6e909ef38860e", "committedDate": "2021-01-16 10:58:06 +0100", "message": "DBZ-2912: Add support for binary.handling.mode to the SQL Server connector"}, {"oid": "d4003c9172aa76b6c54d46b7977ad3a701e8df2e", "committedDate": "2021-02-03 08:05:42 +0100", "message": "DBZ-2420 Define database configs under RelationalDatabaseConnectorConfig"}, {"oid": "d98488b37697ba9acb3a8bbe0ba165f99e5b6c72", "committedDate": "2021-02-16 12:34:06 +0100", "message": "DBZ-3056 Add validation for SQL Server connector."}, {"oid": "911b5e9a3b1a86825060d5e76d8162b0719df972", "committedDate": "2021-03-17 09:54:25 +0100", "message": "DBZ-3271 Unifying filter handling across relational connectors"}, {"oid": "ec252a787df5cb8704b3f201d5a53ab945fe2209", "committedDate": "2021-05-18 20:57:25 +0200", "message": "DBZ-3452: Deprecate source.timestamp.mode=processing"}, {"oid": "dd23e0faad7bc5e9dba648658703be4d17ae2f74", "committedDate": "2021-05-25 07:19:43 +0200", "message": "DBZ-3486: Limit number of processed transactions per iteration"}, {"oid": "cbf2abaaf2e64995595f1b133002df237734effc", "committedDate": "2021-06-21 15:52:35 +0200", "message": "DBZ-2697 Optimisation on SQLServer connector for skipped.operations"}, {"oid": "8252b19abc9090a68808eae8c17611e534fe631b", "committedDate": "2021-08-17 22:16:56 +0200", "message": "DBZ-3479: Rework handling timezones in SQL Server connector"}, {"oid": "b06b5aecbc4b4f2609fb1e335f835b369ddb627a", "committedDate": "2021-08-23 12:01:11 +0200", "message": "DBZ-2975: Introduce opt-in configuration for multi-partition mode"}, {"oid": "9a88011718167fc1afd82d5397a26ea5b8d26e92", "committedDate": "2021-08-23 12:01:11 +0200", "message": "DBZ-2975 Avoiding redundant log message"}, {"oid": "26d0e7802303b2c022038403d5edcdb6aaedcb3b", "committedDate": "2021-09-17 14:20:42 +0200", "message": "DBZ-4013 Skip invalid table"}, {"oid": "e041b599d82c29ac388997ae15d42a42aedce637", "committedDate": "2021-10-18 12:06:56 +0200", "message": "DBZ-3517 Making database.user optional for SQL Server."}, {"oid": "5ac93ac20e0ddc08c74fbd558f7c80dd0e6ede6c", "committedDate": "2021-10-18 12:06:56 +0200", "message": "DBZ-3517 Making database.user optional for SQL Server."}, {"oid": "346e0f3af2329fc3af73a2857420f023bf7034d8", "committedDate": "2021-10-18 12:06:56 +0200", "message": "DBZ-3517 Making database.user optional for SQL Server."}, {"oid": "63367c614af789246a107cd1b34e9e2a9f097311", "committedDate": "2021-11-02 14:48:51 +0100", "message": "DBZ-4231 Remove SqlServerConnector database.user Required Validator"}, {"oid": "39ecc4e732484f9fe6de6cfd9efd8174f7a3b063", "committedDate": "2021-11-12 11:56:06 +0100", "message": "DBZ-4249 Creates the incremental.snapshot.option.recompile connector configuration for SQL Server"}, {"oid": "44073cf7d89c17922476fffa226ec4497f493ad2", "committedDate": "2021-11-16 14:56:06 +0100", "message": "DBZ-4196 Support schema changes during incremental snapshot"}, {"oid": "b922e34b30a7211b973f395e34fe20ff5c3e0cb6", "committedDate": "2021-12-02 11:07:22 +0100", "message": "DBZ-3697 Adding metadata to fields for SQLServerConnector"}, {"oid": "2d14b5b09f4af68f6070fbfc4e4a62cd323290f6", "committedDate": "2022-02-16 11:31:38 +0100", "message": "DBZ-4478: Multi-partition metrics for SQL Server"}, {"oid": "cc11ac193a485bd27afc01d3e500ca77ee384c4f", "committedDate": "2022-03-01 14:21:39 +0100", "message": "DBZ-4783: Support for multiple databases and tasks in the SQL Server connector"}, {"oid": "d6e96a51081b1572d33ed081b05473d4391be420", "committedDate": "2022-03-01 14:21:39 +0100", "message": "DBZ-4783: Refactoring and cleanup"}, {"oid": "d20a6f00e77a490ac0b6e99a7bdabdb9b153d7e9", "committedDate": "2022-03-07 17:53:45 +0100", "message": "DBZ-4801 Using JdbcConfiguration in JdbcConnection"}, {"oid": "b2586747829990a20560bdab6380a4e7c5e2bd87", "committedDate": "2022-03-24 09:37:05 +0100", "message": "DBZ-3535: Introduce schema.name.adjustment.mode"}, {"oid": "acb743bd3424fdf4d1ff4b427b35849fedb37a67", "committedDate": "2022-06-07 16:13:29 -0400", "message": "DBZ-5206 Remove the deprecated monitored tables metrics"}, {"oid": "261188482f69a816ea02eb8830e0012069f9d152", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove deprecated SCHEMA_WHITELIST"}, {"oid": "f84893a8b4c3675bf2b5fcc9b05d8eba2659299e", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove deprecated SCHEMA_BLACKLIST"}, {"oid": "f40706eb256b8c46915a0392ffda483330f3887f", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove deprecated SQL server SERVER_TIMEZONE"}, {"oid": "6af67f33d3f0ae64e1b818ab7cf90907eb2e7548", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove deprecated SQL server SourceTimestampMode.PROCESSING option"}, {"oid": "4a48eb33df3a4a9c0865271e1065a20d7e4a49bd", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove legacy V1 source info"}, {"oid": "25eba9749d1c4a7c3b5775246be6f152e8a4f366", "committedDate": "2022-06-13 10:57:15 +0200", "message": "DBZ-5198 Add support for SQL server specific table delimiters"}, {"oid": "5ff71aa9923fc28a74796b1f0e640985fc897fc2", "committedDate": "2022-06-30 09:35:54 +0200", "message": "DBZ-5335 Fix formatting issues in the connectors configdefs"}, {"oid": "1ea02be9c27d2a3b5fd40007d8e1233f8f0a1e32", "committedDate": "2022-07-12 17:31:19 +0200", "message": "DBZ-5229 define centralized and modular aproach for debezium storage"}, {"oid": "d8baac7c46366a11d1c8a4d09461b259274f0091", "committedDate": "2022-07-12 17:31:19 +0200", "message": "DBZ-5229 Reorganize code for inheritance use"}, {"oid": "77f853f936635aca9e50c0f65a92f4ad944582c5", "committedDate": "2022-07-19 09:20:40 +0200", "message": "DBZ-4726: Remove SQL Server single-partition mode"}, {"oid": "8f0f9fe3ed5648b7e89ac926a986d822228ff7b1", "committedDate": "2022-08-05 12:26:39 -0400", "message": "DBZ-5477: Remove SQL Server connector SourceTimestampMode"}, {"oid": "161a7229b6bec9dce9e0c02863b75eedec4afa62", "committedDate": "2022-09-07 12:57:31 +0200", "message": "DBZ-5043 Use topic prefix as the logical name"}, {"oid": "0823cedf2541b276753c6754a5181ccf81ff8ae2", "committedDate": "2022-09-07 12:57:31 +0200", "message": "DBZ-5043 Replace database.server.name with topic.prefix"}, {"oid": "acc6be6df334081bb2d726463fc039847bb0770f", "committedDate": "2022-09-13 09:25:54 +0200", "message": "DBZ-5043 Move TOPIC_PREFIX into CommonConnectorConfig"}, {"oid": "39f33587473b733ec4a880cde5116af96e4a1edd", "committedDate": "2022-09-20 06:29:39 +0200", "message": "DBZ-5496: Improve compatibility with Azure SQL"}, {"oid": "f6b72f060c1a3cbcfb04b31a7a306c44c2506d5f", "committedDate": "2022-10-03 11:40:17 -0400", "message": "DBZ-5671 Remove logic name parameter from sub connector config"}, {"oid": "aba74a462fc5730f29679738d2be26cfdaaca4dd", "committedDate": "2022-12-15 11:41:58 +0100", "message": "DBZ-5924 refactor SQL-Server JDBC configuration for named instance config parameter"}, {"oid": "e5d16b14a65d25d0c0e23c9ee076b8d9c640f02e", "committedDate": "2023-01-11 06:44:53 +0100", "message": "DBZ-2439 Remove redundant modifiers"}, {"oid": "0a1862a5cf0bb5c1921c63c051a87c703d5d6162", "committedDate": "2023-02-07 13:11:23 +0100", "message": "DBZ-6084: Validate that database.names is not empty in the SQL server connector configuration."}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1MDEwOQ==", "url": "https://github.com/debezium/debezium/pull/1843#discussion_r502250109", "body": "Same comment as below.", "bodyText": "Same comment as below.", "bodyHTML": "<p dir=\"auto\">Same comment as below.</p>", "author": "gunnarmorling", "createdAt": "2020-10-09T07:51:39Z", "path": "debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java", "diffHunk": "@@ -153,6 +156,24 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n+    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLSNsEnabled) throws SQLException {\n+        if (skipLowActivityLSNsEnabled) {", "originalCommit": "38e6cc678169daf3518e6ab2be8c4f275bde4ac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd8db7979f407681554fcb71bc4fe659cf4da6ca", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\nindex 4adf5dabe..bd7158fe0 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n", "chunk": "@@ -156,8 +156,8 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n-    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLSNsEnabled) throws SQLException {\n-        if (skipLowActivityLSNsEnabled) {\n+    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLsnsEnabled) throws SQLException {\n+        if (skipLowActivityLsnsEnabled) {\n             return prepareQueryAndMap(GET_MAX_LSN_SKIP_LOW_ACTIVTY, statement -> {\n             }, singleResultMapper(rs -> {\n                 final MaxLsnResult ret = new MaxLsnResult(Lsn.valueOf(rs.getBytes(1)), Lsn.valueOf(rs.getBytes(2)));\n", "next_change": null}]}, "revised_code_in_main": {"commit": "bea46a3059d3cf3d0c82c5ec2153440db35f1a31", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\nindex 4adf5dabe..bd7158fe0 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n", "chunk": "@@ -156,8 +156,8 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n-    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLSNsEnabled) throws SQLException {\n-        if (skipLowActivityLSNsEnabled) {\n+    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLsnsEnabled) throws SQLException {\n+        if (skipLowActivityLsnsEnabled) {\n             return prepareQueryAndMap(GET_MAX_LSN_SKIP_LOW_ACTIVTY, statement -> {\n             }, singleResultMapper(rs -> {\n                 final MaxLsnResult ret = new MaxLsnResult(Lsn.valueOf(rs.getBytes(1)), Lsn.valueOf(rs.getBytes(2)));\n", "next_change": {"commit": "dd23e0faad7bc5e9dba648658703be4d17ae2f74", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\nindex bd7158fe0..2a11acd19 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n", "chunk": "@@ -156,22 +148,44 @@ public Lsn getMaxLsn() throws SQLException {\n         }, \"Maximum LSN query must return exactly one value\"));\n     }\n \n-    public MaxLsnResult getMaxLsnResult(boolean skipLowActivityLsnsEnabled) throws SQLException {\n-        if (skipLowActivityLsnsEnabled) {\n-            return prepareQueryAndMap(GET_MAX_LSN_SKIP_LOW_ACTIVTY, statement -> {\n-            }, singleResultMapper(rs -> {\n-                final MaxLsnResult ret = new MaxLsnResult(Lsn.valueOf(rs.getBytes(1)), Lsn.valueOf(rs.getBytes(2)));\n-                LOGGER.trace(\"Current maximum transactional LSN is {}\", ret);\n-                return ret;\n-            }, \"Maximum transactional LSN query must return exactly one value\"));\n-        }\n-        Lsn maxLsn = prepareQueryAndMap(GET_MAX_LSN, statement -> {\n+    /**\n+     * @return the log sequence number of the most recent transaction\n+     *         that isn't further than {@code maxOffset} from the beginning.\n+     */\n+    public Lsn getNthTransactionLsnFromBeginning(int maxOffset) throws SQLException {\n+        return prepareQueryAndMap(GET_NTH_TRANSACTION_LSN_FROM_BEGINNING, statement -> {\n+            statement.setInt(1, maxOffset);\n         }, singleResultMapper(rs -> {\n             final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n-            LOGGER.trace(\"Current maximum LSN is {}\", ret);\n+            LOGGER.trace(\"Nth lsn from beginning is {}\", ret);\n             return ret;\n-        }, \"Maximum LSN query must return exactly one value\"));\n-        return new MaxLsnResult(maxLsn, maxLsn);\n+        }, \"Nth LSN query must return exactly one value\"));\n+    }\n+\n+    /**\n+     * @return the log sequence number of the most recent transaction\n+     *         that isn't further than {@code maxOffset} from {@code lastLsn}.\n+     */\n+    public Lsn getNthTransactionLsnFromLast(Lsn lastLsn, int maxOffset) throws SQLException {\n+        return prepareQueryAndMap(GET_NTH_TRANSACTION_LSN_FROM_LAST, statement -> {\n+            statement.setInt(1, maxOffset);\n+            statement.setBytes(2, lastLsn.getBinary());\n+        }, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Nth lsn from last is {}\", ret);\n+            return ret;\n+        }, \"Nth LSN query must return exactly one value\"));\n+    }\n+\n+    /**\n+     * @return the log sequence number of the most recent transaction.\n+     */\n+    public Lsn getMaxTransactionLsn() throws SQLException {\n+        return queryAndMap(GET_MAX_TRANSACTION_LSN, singleResultMapper(rs -> {\n+            final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n+            LOGGER.trace(\"Max transaction lsn is {}\", ret);\n+            return ret;\n+        }, \"Max transaction LSN query must return exactly one value\"));\n     }\n \n     /**\n", "next_change": {"commit": "37a4523685253311d4e82950142f5da865ae5fcd", "changed_code": [{"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\nindex 2a11acd19..46a96844a 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n", "chunk": "@@ -180,8 +231,8 @@ public Lsn getNthTransactionLsnFromLast(Lsn lastLsn, int maxOffset) throws SQLEx\n     /**\n      * @return the log sequence number of the most recent transaction.\n      */\n-    public Lsn getMaxTransactionLsn() throws SQLException {\n-        return queryAndMap(GET_MAX_TRANSACTION_LSN, singleResultMapper(rs -> {\n+    public Lsn getMaxTransactionLsn(String databaseName) throws SQLException {\n+        return queryAndMap(replaceDatabaseNamePlaceholder(GET_MAX_TRANSACTION_LSN, databaseName), singleResultMapper(rs -> {\n             final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n             LOGGER.trace(\"Max transaction lsn is {}\", ret);\n             return ret;\n", "next_change": null}, {"header": "diff --git a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\nindex 2a11acd19..46a96844a 100644\n--- a/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n+++ b/debezium-connector-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerConnection.java\n", "chunk": "@@ -191,8 +242,9 @@ public Lsn getMaxTransactionLsn() throws SQLException {\n     /**\n      * @return the smallest log sequence number of table\n      */\n-    public Lsn getMinLsn(String changeTableName) throws SQLException {\n-        String query = GET_MIN_LSN.replace(STATEMENTS_PLACEHOLDER, changeTableName);\n+    public Lsn getMinLsn(String databaseName, String changeTableName) throws SQLException {\n+        String query = replaceDatabaseNamePlaceholder(GET_MIN_LSN, databaseName)\n+                .replace(STATEMENTS_PLACEHOLDER, changeTableName);\n         return queryAndMap(query, singleResultMapper(rs -> {\n             final Lsn ret = Lsn.valueOf(rs.getBytes(1));\n             LOGGER.trace(\"Current minimum lsn is {}\", ret);\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "bea46a3059d3cf3d0c82c5ec2153440db35f1a31", "message": "Merge commit", "committedDate": null}, {"oid": "ee5353ef6f010cb50425c37e43e4fcadbe3bcbae", "committedDate": "2020-10-20 10:42:10 +0200", "message": "DBZ-2653 Process commits even with tx monitoring"}, {"oid": "d98488b37697ba9acb3a8bbe0ba165f99e5b6c72", "committedDate": "2021-02-16 12:34:06 +0100", "message": "DBZ-3056 Add validation for SQL Server connector."}, {"oid": "85f7688527245d910d356b920da7bc709eb668c1", "committedDate": "2021-02-22 15:19:25 +0100", "message": "DBZ-3151 Add filter hook for table unique index resolution"}, {"oid": "9a5c605a7f86b8edf1b99862b57bf9397a0f336b", "committedDate": "2021-03-08 11:24:53 +0100", "message": "DBZ-2417 Order returned values for clustered index cases"}, {"oid": "8b0428404b182120ea26606111c119fe3734837b", "committedDate": "2021-05-06 05:37:36 +0200", "message": "DBZ-3473 SQL Server field moved reading to connection"}, {"oid": "7adfaba483433c4fe6299879398965a5a7db2349", "committedDate": "2021-05-18 20:57:25 +0200", "message": "DBZ-3452: source.timestamp.mode=commit imposes a significant performance penalty"}, {"oid": "90738f53a690d03cd9febdfb1c2e6d63952619e0", "committedDate": "2021-05-20 08:06:37 +0200", "message": "DBZ-3500 Incremental snapshots for SQL Server"}, {"oid": "dd23e0faad7bc5e9dba648658703be4d17ae2f74", "committedDate": "2021-05-25 07:19:43 +0200", "message": "DBZ-3486: Limit number of processed transactions per iteration"}, {"oid": "c2086d710446f58950f72b156de72cb9d0aff9ad", "committedDate": "2021-06-10 17:55:50 +0200", "message": "DBZ-3597 Remove non-captured colmuns from PK"}, {"oid": "cbf2abaaf2e64995595f1b133002df237734effc", "committedDate": "2021-06-21 15:52:35 +0200", "message": "DBZ-2697 Optimisation on SQLServer connector for skipped.operations"}, {"oid": "8252b19abc9090a68808eae8c17611e534fe631b", "committedDate": "2021-08-17 22:16:56 +0200", "message": "DBZ-3479: Rework handling timezones in SQL Server connector"}, {"oid": "680b6438f52523ca62cf9cd798f61bd69f448876", "committedDate": "2021-08-18 23:05:30 +0200", "message": "DBZ-3823 Avoid connectivity errors during task start in SQL Server connector;"}, {"oid": "3f9b5b5e173a15ab80bfe6a5c1f1f7cbd1f747bc", "committedDate": "2021-08-23 12:01:11 +0200", "message": "DBZ-2975: Remove unused SqlServerConnection methods"}, {"oid": "37a4523685253311d4e82950142f5da865ae5fcd", "committedDate": "2021-08-23 12:01:11 +0200", "message": "DBZ-2975: Use fully-qualified table and procedure names"}, {"oid": "153e0920e14c2e98ee6d8e8ed66fe2c395196450", "committedDate": "2021-08-30 12:20:56 +0200", "message": "DBZ-2525 Generifying exclusion of columns from snapshotting in all relational connectors;"}, {"oid": "18a23b19c3f786d451fae5267fd9320cafa5a06b", "committedDate": "2021-09-15 14:21:02 +0200", "message": "DBZ-4001 Removing constructor only required for tests"}, {"oid": "766139ab054511195c3b8ab006968b05916120e7", "committedDate": "2021-10-19 15:29:56 +0200", "message": "DBZ-4125 Fix sqlserver connection database name placeholder"}, {"oid": "24ead16c248566b020fef9f60c66f84cba0587e0", "committedDate": "2021-11-04 10:47:17 +0100", "message": "DBZ-3966 Remove defaultValue and keep defaultValueExpression"}, {"oid": "39ecc4e732484f9fe6de6cfd9efd8174f7a3b063", "committedDate": "2021-11-12 11:56:06 +0100", "message": "DBZ-4249 Creates the incremental.snapshot.option.recompile connector configuration for SQL Server"}, {"oid": "3d0cb2f6d180107f6a28162c48bd7092344a1cf1", "committedDate": "2021-11-24 22:08:31 +0100", "message": "DBZ-4273: Do not source stopLsn from end_lsn"}, {"oid": "56d77c9b7ae598975ae0186a73c79cb066e656be", "committedDate": "2021-11-24 22:08:31 +0100", "message": "DBZ-4273: Rename symbols related to change tables"}, {"oid": "860f0da19897f4bd41ccb4fb2272cd687cf66b73", "committedDate": "2021-11-24 22:08:31 +0100", "message": "DBZ-3992: Use a query for listing change tables"}, {"oid": "a7c573676fa208b54c5581f0bf6d9f6a07a5860c", "committedDate": "2021-11-24 22:08:31 +0100", "message": "DBZ-3992: List change tables within captured LSN interval"}, {"oid": "437fe0e7bf8a4b27b9355998d0e25e9f63ab731c", "committedDate": "2021-11-24 22:08:31 +0100", "message": "DBZ-4273: Filter out capture instances with the same start_lsn"}, {"oid": "d20a6f00e77a490ac0b6e99a7bdabdb9b153d7e9", "committedDate": "2022-03-07 17:53:45 +0100", "message": "DBZ-4801 Using JdbcConfiguration in JdbcConnection"}, {"oid": "e4b148635350a12617b5c6dffd0c3759b710e4e5", "committedDate": "2022-05-06 10:00:09 -0400", "message": "DBZ-4346 Adding validation to SQL Server connector to fail when a user not having access to CDC table is used with modes other than INITIAL_ONLY mode"}, {"oid": "f40706eb256b8c46915a0392ffda483330f3887f", "committedDate": "2022-06-08 09:11:00 +0200", "message": "DBZ-5045 Remove deprecated SQL server SERVER_TIMEZONE"}, {"oid": "77f853f936635aca9e50c0f65a92f4ad944582c5", "committedDate": "2022-07-19 09:20:40 +0200", "message": "DBZ-4726: Remove SQL Server single-partition mode"}, {"oid": "8f0f9fe3ed5648b7e89ac926a986d822228ff7b1", "committedDate": "2022-08-05 12:26:39 -0400", "message": "DBZ-5477: Remove SQL Server connector SourceTimestampMode"}, {"oid": "d89e71ebebba002b3fd2620bbe1de442c9e7ffad", "committedDate": "2022-08-17 10:05:55 +0200", "message": "DBZ-5327 Smart Backfills"}, {"oid": "b25dae6a0a8c1ee7214df5bfea218375baa7762a", "committedDate": "2022-08-19 11:05:29 +0200", "message": "DBZ-5497 Fix skipped operations logic for SQL Server"}, {"oid": "1c99437890fd81a56a7dc35a59f090e54517c9cd", "committedDate": "2022-08-19 11:06:59 +0200", "message": "DBZ-5470: Remove the dependency of JdbcConnection on DatabaseSchema"}, {"oid": "0181122274a0fe795686c61af89b7da88d4a0dd4", "committedDate": "2022-08-19 11:09:15 +0200", "message": "DBZ-4631 Fix \"No maximum LSN recorded\" log message can be spammed on low-activity databases"}, {"oid": "288c93434faa43d7fd6b07cd8fb8c313f297b27d", "committedDate": "2022-09-19 17:15:29 +0200", "message": "DBZ-5585 Remove classloader parameter from JdbcConnection"}, {"oid": "39f33587473b733ec4a880cde5116af96e4a1edd", "committedDate": "2022-09-20 06:29:39 +0200", "message": "DBZ-5496: Improve compatibility with Azure SQL"}, {"oid": "58eb77d7e41165be6d1bcfb764dab083d8828599", "committedDate": "2022-12-15 11:41:58 +0100", "message": "DBZ-5924 respect SQL-Server database.instance config option"}, {"oid": "aba74a462fc5730f29679738d2be26cfdaaca4dd", "committedDate": "2022-12-15 11:41:58 +0100", "message": "DBZ-5924 refactor SQL-Server JDBC configuration for named instance config parameter"}, {"oid": "9bc7b134c9cc6b83b8c049f41820249d57f785fc", "committedDate": "2022-12-15 11:41:58 +0100", "message": "DBZ-5924 add JDBC connection URL unit tests for SQL Server connector"}]}, {"oid": "bd8db7979f407681554fcb71bc4fe659cf4da6ca", "url": "https://github.com/debezium/debezium/commit/bd8db7979f407681554fcb71bc4fe659cf4da6ca", "message": "DBZ-2582 Fixing LSN casing", "committedDate": "2020-10-09T18:55:32Z", "type": "commit"}]}