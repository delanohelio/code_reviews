{"pr_number": 2202, "pr_title": "Inconsistent combat log sprites", "pr_author": "Krashner", "pr_createdAt": "2020-09-07T14:08:01Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2202", "merge_commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "timeline": [{"oid": "0ae73d3698b754a4e2dea0097a87cc224d71df80", "url": "https://github.com/MegaMek/megamek/commit/0ae73d3698b754a4e2dea0097a87cc224d71df80", "message": "Fixed bug that caused sprites to be disabled for all clients when one toggled option", "committedDate": "2020-09-07T13:06:42Z", "type": "commit"}, {"oid": "7c8668d723c44f186dc802f2c3b46dc9dc429beb", "url": "https://github.com/MegaMek/megamek/commit/7c8668d723c44f186dc802f2c3b46dc9dc429beb", "message": "Fixed a string index out of bounds error when inserting image code", "committedDate": "2020-09-07T13:24:57Z", "type": "commit"}, {"oid": "cf1e3add4d87fc05edc242089d412e9789011368", "url": "https://github.com/MegaMek/megamek/commit/cf1e3add4d87fc05edc242089d412e9789011368", "message": "Fixed a string index out of bounds error when inserting image code", "committedDate": "2020-09-07T14:01:33Z", "type": "commit"}, {"oid": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f", "url": "https://github.com/MegaMek/megamek/commit/3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f", "message": "Merge branch 'inconsistentCombatLogSprites' of https://github.com/Krashner/megamek into inconsistentCombatLogSprites", "committedDate": "2020-09-07T14:01:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjUxMw==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484506513", "body": "Is `text.startsWith(\"\\n\")` not an option? Simpler than a length check and first char check.", "bodyText": "Is text.startsWith(\"\\n\") not an option? Simpler than a length check and first char check.", "bodyHTML": "<p dir=\"auto\">Is <code>text.startsWith(\"\\n\")</code> not an option? Simpler than a length check and first char check.</p>", "author": "sixlettervariables", "createdAt": "2020-09-07T16:02:48Z", "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -489,7 +487,7 @@ public String getText() {\n             }\n             //draw the sprite at the beginning of the line\n             if(imageCode != null && imageCode.length() > 0){\n-                if(text.substring(0,1).equals(\"\\n\")){\n+                if(text.length() >= 2 && text.substring(0,1).equals(\"\\n\")){", "originalCommit": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMzU0Mg==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484823542", "bodyText": "Ah, good call. That flew right past me.", "author": "Krashner", "createdAt": "2020-09-08T10:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjUxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a8661baf39ba5132071a85163c54905b8a6ac856", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex c3bed89619..fa09cd5ba2 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -485,9 +485,9 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            //draw the sprite at the beginning of the line\n-            if(imageCode != null && imageCode.length() > 0){\n-                if(text.length() >= 2 && text.substring(0,1).equals(\"\\n\")){\n+            //add the sprite code at the beginning of the line\n+            if(!imageCode.isEmpty()){\n+                if(text.toString().startsWith(\"\\n\")){\n                     text.insert(1, imageCode);\n                 }\n                 else {\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex fa09cd5ba2..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -486,8 +486,8 @@ public class Report implements Serializable {\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if(!imageCode.isEmpty()){\n-                if(text.toString().startsWith(\"\\n\")){\n+            if (!imageCode.isEmpty()) {\n+                if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n                 else {\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex c3bed89619..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -485,9 +485,9 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            //draw the sprite at the beginning of the line\n-            if(imageCode != null && imageCode.length() > 0){\n-                if(text.length() >= 2 && text.substring(0,1).equals(\"\\n\")){\n+            //add the sprite code at the beginning of the line\n+            if (!imageCode.isEmpty()) {\n+                if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n                 else {\n", "next_change": {"commit": "6a950a5947b58f5b5a284a6130d6ccf54e6c7bbf", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 9b31b48b1a..1926865cb0 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -486,7 +486,7 @@ public class Report implements Serializable {\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if (!imageCode.isEmpty()) {\n+            if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 1926865cb0..39342e9fa3 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -473,19 +484,18 @@ public class Report implements Serializable {\n                                     raw.indexOf(',', i) + 1, endTagIdx)));\n                         }\n                         tagCounter++;\n-                    } else if (raw.substring(i + 1, endTagIdx)\n-                            .equals(\"newline\")) {\n+                    } else if (raw.substring(i + 1, endTagIdx).equals(\"newline\")) {\n                         text.append(\"\\n\");\n                     } else {\n                         // not a special tag, so treat as literal text\n-                        text.append(raw.substring(i, endTagIdx + 1));\n+                        text.append(raw, i, endTagIdx + 1);\n                     }\n                     mark = endTagIdx + 1;\n                     i = endTagIdx;\n                 }\n                 i++;\n             }\n-            //add the sprite code at the beginning of the line\n+            // add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": {"commit": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 39342e9fa3..0b5fedea85 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -495,7 +494,7 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            // add the sprite code at the beginning of the line\n+            //add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": {"commit": "83da84722acade26b94667d0e6e1007ae31ac978", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 0b5fedea85..58036819b7 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -494,7 +495,7 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            //add the sprite code at the beginning of the line\n+            // add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "6a950a5947b58f5b5a284a6130d6ccf54e6c7bbf", "committedDate": "2020-10-29 21:53:25 -0400", "message": "fleeing not illegal in tornado"}, {"oid": "444fc4eb49ba82071111ee113356d22eb378aed8", "committedDate": "2020-12-25 17:30:36 -0500", "message": "PlayerColours, Colour Camo Standardization, and standardizing camo selector"}, {"oid": "68a23ae3076d0f06f5f3667ecb1d35ee03f8a978", "committedDate": "2020-12-26 20:43:58 -0500", "message": "Bugfixing Player Colours implementation"}, {"oid": "a41945f49df93f9c8053b6e6588642944c0b2f55", "committedDate": "2021-03-18 13:26:26 -0500", "message": "Report accepts ToHitData which adds a hyperlink that pops up a message dialog showing the details."}, {"oid": "e02ab980e68ec00403b16f6d5d4ba680393c8ddc", "committedDate": "2021-03-18 21:25:43 -0500", "message": "Use named constants for report hyperlink prefixes"}, {"oid": "25092a721b28f0e2eeb0b26ddbd52833637a49a9", "committedDate": "2021-03-19 16:08:31 -0500", "message": "Use report tooltips for physical weapon attacks and PSR/control rolls"}, {"oid": "fbe6e0d9513f70bc178fa9c7b6a29e2d34ff2020", "committedDate": "2021-03-19 16:12:08 -0500", "message": "General method for adding a data field to the report with tooltip text"}, {"oid": "cc4bc0ba6395c4e8edec29fb6b74efa89fadd569", "committedDate": "2021-12-04 11:46:02 -0500", "message": "Removing IPlayer interface"}, {"oid": "cd93d149815865aef558382e7e8fc99f7e8411ef", "committedDate": "2021-12-07 17:02:26 -0500", "message": "General Code Cleanup - Focusing on Accessibility Problems"}, {"oid": "d8af82836f3ca9b3a71cb4908c92df8ee5d50535", "committedDate": "2021-12-15 21:05:03 -0500", "message": "Fixing all unnecessary collection specifications"}, {"oid": "6548524b4e863152c5aad95c12a72c7329750b79", "committedDate": "2021-12-19 14:23:28 -0500", "message": "Tons of spacing and copyright header fixes"}, {"oid": "ad1704ad54c3c58b97810a8473a3d6b33487952e", "committedDate": "2021-12-19 20:31:17 -0500", "message": "Removing useless boxing"}, {"oid": "8b4a028c02cf34de099b29dd2728f28bf39fbf1f", "committedDate": "2022-01-02 15:28:57 -0500", "message": "Handling more ,f and ,2 cases... there's a ton of these buggers"}, {"oid": "cb018781ac27c97f60e58b2018b9966b1721f9d4", "committedDate": "2022-02-11 17:15:01 -0500", "message": "3435: Check if the vector is empty before adding a new liine"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "committedDate": "2022-02-13 11:59:57 -0500", "message": "Fixing MegaMek's JavaDoc build"}, {"oid": "f547d15e031d4cc76a8142277b680c5aa952d0eb", "committedDate": "2022-02-24 20:49:57 -0500", "message": "Merge branch 'MegaMek:master' into dev_Windchild_Javadoc"}, {"oid": "83da84722acade26b94667d0e6e1007ae31ac978", "committedDate": "2022-02-24 20:51:36 -0500", "message": "Merge branch 'master' into dev_Windchild_InternalCleanupWave4"}, {"oid": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "committedDate": "2022-02-25 09:34:02 -0500", "message": "Fixing merge conflicts"}, {"oid": "3a244836dba3e9487ad957fb20a04cc762348743", "committedDate": "2022-04-21 20:31:02 -0400", "message": "Fixing MM's log pathing"}, {"oid": "ec4203d61c31b85d892ddc343e71817f1ee2998a", "committedDate": "2022-05-01 16:58:07 -0400", "message": "Modernizing a lot more of our logging"}, {"oid": "688a032d9ed3934a235722a20c3245dd3fec27f1", "committedDate": "2022-06-05 16:31:55 -0700", "message": "added nickname, if it exists, to reports"}, {"oid": "d47fb326d1a550ca9d7af4ea2f961ac6d8f29941", "committedDate": "2022-06-08 21:53:17 -0700", "message": "add advanced heat color options, centralize colors"}, {"oid": "4ae0f32329c38a54d71fb9321cfc83ae9ad1020f", "committedDate": "2022-06-09 13:12:39 -0700", "message": "adjust scale"}, {"oid": "88be1662b71c2d28377e719fcec7d80a50081a45", "committedDate": "2022-06-09 17:42:43 -0700", "message": "use span not font. use bold for heat"}, {"oid": "0750f3da1f297218ac3ad256eeacaedf36745eee", "committedDate": "2022-06-11 11:24:40 -0700", "message": "css href and warning spans"}, {"oid": "23ea32031919795fcfce540d73b2ac3731c0aef5", "committedDate": "2022-06-11 11:55:08 -0700", "message": "cleanup"}, {"oid": "cb97f4982cf176d56e5da8c45e2728ec8ddcc444", "committedDate": "2022-06-19 09:46:34 -0700", "message": "fix typos"}, {"oid": "00ce23d640a6a6359a979c6cb54eeee78354e0a6", "committedDate": "2022-06-23 16:48:12 -0400", "message": "Fixing hidden character build failure"}, {"oid": "b01034462604554060dde2f2b6581d97944835e9", "committedDate": "2022-07-15 20:18:35 -0700", "message": "heat and link color in advanced prefs"}, {"oid": "2fd0a028a93f34a6000c14ec62eb9eafdd7710c7", "committedDate": "2022-12-09 18:33:28 -0500", "message": "show game board in all the game phases"}, {"oid": "33a333c48e94ba8f4c01564ba937346e61baec60", "committedDate": "2023-02-06 18:14:56 -0500", "message": "issue 4158"}, {"oid": "cfb5bc8ba02e0a06816ba15c222272770d7134e7", "committedDate": "2023-02-07 10:33:26 -0500", "message": "issue 4158"}, {"oid": "32e47d1ef57ce582e62ffb5830093bd68665acb9", "committedDate": "2023-02-08 09:55:36 -0500", "message": "correct issues"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNzM1OA==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484507358", "body": "Are we leaking these BAIS? Or do we need them held open for the BufferedImage's.", "bodyText": "Are we leaking these BAIS? Or do we need them held open for the BufferedImage's.", "bodyHTML": "<p dir=\"auto\">Are we leaking these BAIS? Or do we need them held open for the BufferedImage's.</p>", "author": "sixlettervariables", "createdAt": "2020-09-07T16:05:12Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,31 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;", "originalCommit": "3dd662c2f7b48dc9e3b2cc07e7610ffb5cd56b1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMjEyMQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r484822121", "bodyText": "They should be closed, I'll fix that.", "author": "Krashner", "createdAt": "2020-09-08T10:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNzM1OA=="}], "type": "inlineReview", "revised_code": {"commit": "a8661baf39ba5132071a85163c54905b8a6ac856", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 0542b71ea2..1b28787742 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,6 +68,7 @@ public class BASE64ImageView extends ImageView {\n                 bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()));\n                 newImage = ImageIO.read(bais);\n+                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 0542b71ea2..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,20 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"oid": "a8661baf39ba5132071a85163c54905b8a6ac856", "url": "https://github.com/MegaMek/megamek/commit/a8661baf39ba5132071a85163c54905b8a6ac856", "message": "Cleaned up report text check and closed bais", "committedDate": "2020-09-08T10:57:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjQ5OQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232499", "body": "```suggestion\r\n        if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n          \n          \n            \n                    if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span><span class=\"pl-smi\">GUIPreferences</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>getBoolean(<span class=\"pl-smi\">GUIPreferences</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ADVANCED_ROUND_REPORT_SPRITES</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(<span class=\"pl-k\">!</span><span class=\"pl-smi\">GUIPreferences</span><span class=\"pl-k\">.</span>getInstance()<span class=\"pl-k\">.</span>getBoolean(<span class=\"pl-smi\">GUIPreferences</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ADVANCED_ROUND_REPORT_SPRITES</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:00:21Z", "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1139,7 +1140,8 @@ public String receiveReport(Vector<Report> v) {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(imgCache == null || !imgCache.containsKey(id)) {\n+        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 055fd093cf..bbf172513d 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1140,8 +1140,8 @@ public class Client implements IClientCommandHandler {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                || imgCache == null || !imgCache.containsKey(id)) {\n+        if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || (imgCache == null) || !imgCache.containsKey(id)) {\n             return null;\n         }\n         return imgCache.get(id);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 055fd093cf..bbf172513d 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1140,8 +1140,8 @@ public class Client implements IClientCommandHandler {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                || imgCache == null || !imgCache.containsKey(id)) {\n+        if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || (imgCache == null) || !imgCache.containsKey(id)) {\n             return null;\n         }\n         return imgCache.get(id);\n", "next_change": {"commit": "26025434b5fac88760e9cdcf0c6308f8a28ca3e3", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex bbf172513d..eb80630f71 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1150,10 +1262,8 @@ public class Client implements IClientCommandHandler {\n     /**\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n-    private void cacheImgTag(Entity entity){\n-\n+    private void cacheImgTag(Entity entity) {\n         if(entity == null) {\n-            MegaMek.getLogger().error(this, \"Null entity reference\");\n             return;\n         }\n \n", "next_change": {"commit": "bb37d25aaa03ac72413d007f9e827fd13c66a322", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex eb80630f71..567247237e 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1262,7 +1262,7 @@ public class Client implements IClientCommandHandler {\n     /**\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n-    private void cacheImgTag(Entity entity) {\n+    protected void cacheImgTag(Entity entity) {\n         if(entity == null) {\n             return;\n         }\n", "next_change": {"commit": "cd93d149815865aef558382e7e8fc99f7e8411ef", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 567247237e..27f16841dd 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1263,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if(entity == null) {\n+        if (entity == null) {\n             return;\n         }\n \n+        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be refreshed\n+        } else {\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to to <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "5a06c5f191be279f1152f475f7d1a77a1b5b1c31", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 27f16841dd..ee30168f33 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if (entity == null) {\n+        if(entity == null) {\n             return;\n         }\n \n-        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else {\n+        } else if (imgCache.containsKey(entity.getId())) {\n+            //remove images that should be refreshed\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            //convert image to base64, add to to <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "f304af7f7111e13d2177c65a0f76cf7533af12b3", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex ee30168f33..0122516e92 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if(entity == null) {\n+        if (entity == null) {\n             return;\n         }\n \n+        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be refreshed\n+        } else {\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to to <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 0122516e92..8e40eea15b 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1268,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            // convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 8e40eea15b..350108348c 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            // convert image to base64, add to the <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 350108348c..e2275628a2 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            // convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "444fc4eb49ba82071111ee113356d22eb378aed8", "committedDate": "2020-12-25 17:30:36 -0500", "message": "PlayerColours, Colour Camo Standardization, and standardizing camo selector"}, {"oid": "982946d2227440619ea9d37a40a46f761ab45547", "committedDate": "2021-01-04 07:27:33 +0100", "message": "Map Selection, BV Dialog"}, {"oid": "8b3e48a772bfa437e914de0d986170b35eccf777", "committedDate": "2021-01-10 11:31:22 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "668763b8490d132fe583b8d39f0770dcdf465100", "committedDate": "2021-02-06 21:59:49 -0500", "message": "Add thread safety to duplicate name hash"}, {"oid": "2a5ef9a49a485aeea1358a66ba012072ab56397b", "committedDate": "2021-02-13 16:57:41 -0500", "message": "Updated and added client commands and accesibility window based on input from users to make it more usefull."}, {"oid": "dca4589e26b78b1438a17b08d0396e89d6f24a45", "committedDate": "2021-02-14 17:10:29 -0500", "message": "AMade the Accesibility Window run commands by default, included new commands based on feedback."}, {"oid": "165e7cc69626c85edd216b3b13e62c027d430a81", "committedDate": "2021-02-15 12:16:13 -0500", "message": "Apply suggestions from code review"}, {"oid": "1216e4c476558d784a86f17cd4fcc9147cc9ae9d", "committedDate": "2021-02-27 10:22:08 -0500", "message": "Switch to a re-usable class to be shared with MHQ #2597"}, {"oid": "b8c7fb91fb94fb09cd5ac6025f335ac4bf6d5c1f", "committedDate": "2021-03-02 09:56:38 -0700", "message": "Implementing Skill Generator changes as part of a full enum swapover"}, {"oid": "26a146c45e4476f2406bbbc09948b36ac2dccbae", "committedDate": "2021-03-04 22:31:53 +0100", "message": "Force Tree display work"}, {"oid": "2691005927f62c748d1c60374ac5e2001625e7ad", "committedDate": "2021-03-16 18:20:08 +0100", "message": "More force tree and popup work, copy+paste Mek List, formatting"}, {"oid": "3960e014670ddad6430f691c9654a90a7ebf0582", "committedDate": "2021-03-16 19:29:06 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "7c57ed4818a340c2fe66375aae496dbb51b8b37a", "committedDate": "2021-03-17 12:26:33 -0400", "message": "Merge pull request #2632 from sixlettervariables/issue-2597-protect-duplicate-name-hash"}, {"oid": "a56ab4b43643589073b42261baf104360717dead", "committedDate": "2021-03-25 20:41:57 +0100", "message": "Forceupdates handling changes, advanced settings NPE"}, {"oid": "264c194af5d93ba40829a3bad34e83e1162a263b", "committedDate": "2021-03-25 20:48:33 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "dc1894d61ad0d7440c3318785c46e884157b0d64", "committedDate": "2021-04-05 09:26:05 +0200", "message": "Suggestions from Discord, Player Settings"}, {"oid": "e5ddcd9365c09d450d9beecde093c770fc773ec5", "committedDate": "2021-04-13 22:50:45 -0600", "message": "Fixing merge conflicts"}, {"oid": "1532a196c038a51c2252651ef02ed6e74f3b4a65", "committedDate": "2021-04-17 18:43:38 +0200", "message": "Review Changes pt. 1"}, {"oid": "609f3b8eb5c0b5daa863394b8e55a5b57eb94d1d", "committedDate": "2021-04-23 14:46:57 +0200", "message": "Windchild Review changes"}, {"oid": "26025434b5fac88760e9cdcf0c6308f8a28ca3e3", "committedDate": "2021-05-24 21:00:09 -0400", "message": "disable pointless error logging"}, {"oid": "bb37d25aaa03ac72413d007f9e827fd13c66a322", "committedDate": "2021-05-24 21:27:36 -0400", "message": "bot client optimization"}, {"oid": "4b55aa91c0d71857471d10b2ebe13134b9b4ccb2", "committedDate": "2021-07-04 22:43:24 -0400", "message": "megamek potato fixes, round 2"}, {"oid": "c4d4e7ebc2755e862104bb9077849958d7803583", "committedDate": "2021-08-02 16:28:20 +0200", "message": "Bot Config modernization and included in savegames"}, {"oid": "8793c633347c74314ec39ac1cd1a3955b6ff1646", "committedDate": "2021-08-02 16:46:59 +0200", "message": "Merge remote-tracking branch 'MM_Master/master' into botconfig"}, {"oid": "a1ae9735c0c1f2976e47f4f90dadb00b5225e724", "committedDate": "2021-08-08 12:13:14 +0930", "message": "Specify whether players are bots or not on connect"}, {"oid": "94d7072255c7af83317ca897aaa7180bec9af496", "committedDate": "2021-08-09 11:21:06 -0400", "message": "Merge pull request #3050 from mjog/email-round-reports"}, {"oid": "438b5fa2ecf16febd9d7c76d01ce4d31e5346661", "committedDate": "2021-08-13 13:28:10 -0400", "message": "Fixing merge conflicts"}, {"oid": "a039103e7554d9465bc56bf75c8a7f6513490372", "committedDate": "2021-08-13 16:10:53 -0400", "message": "Replacing the GUI with a modified version of Juliez' from the PlayerSettingsDialog"}, {"oid": "3e371f6e8ef8909f8df18fb91b420ce34f0d7f46", "committedDate": "2021-08-13 18:25:53 -0400", "message": "Finishing up the dialog work"}, {"oid": "93982d5c741d330ace17aad904f5b045bf999ac5", "committedDate": "2021-08-13 20:34:16 -0400", "message": "Standardizations and generator fixes, partially rule-based and partially so they handle the Ultra-Green and Heroic skill levels"}, {"oid": "960fd4758810d23378a6b3ea728b0f840b927732", "committedDate": "2021-09-22 13:11:08 -0400", "message": "Tearing out the version saved in MegaMek"}, {"oid": "7e0a2864da127e8cb04dee9250c698c5de6380cc", "committedDate": "2021-09-22 15:27:34 -0400", "message": "Server connections now cancel for old version"}, {"oid": "9ee36941323c78dc74b4dde218878fc244ba9323", "committedDate": "2021-09-22 16:43:35 -0400", "message": "Adding version protection on loading a game"}, {"oid": "df4c5cf1f92d48cc1c9a22cd74d995a50eab2db6", "committedDate": "2021-09-22 17:01:44 -0400", "message": "Applying changes from personal review"}, {"oid": "f707e0300c60d6adc1f9ebfe4ab7058a27ecb845", "committedDate": "2021-10-04 22:36:50 -0400", "message": "Bulk rename of IGame to Game"}, {"oid": "67eeff03ff3eb6af74da454968bc9a69d0d87271", "committedDate": "2021-10-28 12:59:03 -0400", "message": "Moving to using the renamed GamePhase, renamed GamePhase values, and moved methods"}, {"oid": "92f08487cd688957aa8264b23b71d1594b138841", "committedDate": "2021-10-28 13:10:31 -0400", "message": "Moving GamePhase to its own enum"}, {"oid": "f615db3be659a43d9b5ecf36aba546130be3d9f7", "committedDate": "2021-10-28 13:24:04 -0400", "message": "Bugfixing hidden unit NPE"}, {"oid": "f98f686817b274f5e16a641e295e975e0900013d", "committedDate": "2021-11-23 18:37:05 -0500", "message": "Removing IBoardView and renaming BoardView1 to BoardView"}, {"oid": "d26535d93a0b75e02c4dc7fbfb83de711bfbe517", "committedDate": "2021-11-30 19:05:34 -0500", "message": "Swapping to Hex from IHex"}, {"oid": "cc4bc0ba6395c4e8edec29fb6b74efa89fadd569", "committedDate": "2021-12-04 11:46:02 -0500", "message": "Removing IPlayer interface"}, {"oid": "a46e060162a7ac31e322421a7bdd592af9d74c33", "committedDate": "2021-12-04 12:21:07 -0500", "message": "Removing IConnection and ConnectionListener interfaces as unused"}, {"oid": "8490d3604d3a4e195d02a485c97046b2d7e125f0", "committedDate": "2021-12-05 12:36:51 -0500", "message": "Merge pull request #3284 from Windchild292/dev_Windchild_IHex"}, {"oid": "412053f7b83d357883fc50af1bdfc976084d0283", "committedDate": "2021-12-05 14:43:00 -0500", "message": "Fixing merge conflicts"}, {"oid": "5f8eae09c584a9d81e83539814cf2ed107c480f0", "committedDate": "2021-12-06 17:43:37 -0500", "message": "IBoard: Interface Removal"}, {"oid": "cd93d149815865aef558382e7e8fc99f7e8411ef", "committedDate": "2021-12-07 17:02:26 -0500", "message": "General Code Cleanup - Focusing on Accessibility Problems"}, {"oid": "26ba26411580be9fa7c98c124bbb6085d1729070", "committedDate": "2021-12-07 17:27:26 -0500", "message": "Fixing further code accessibility issues and doing more cleanup"}, {"oid": "5a06c5f191be279f1152f475f7d1a77a1b5b1c31", "committedDate": "2021-12-08 18:49:01 -0500", "message": "Quirk code cleanup"}, {"oid": "f304af7f7111e13d2177c65a0f76cf7533af12b3", "committedDate": "2021-12-11 09:06:02 -0500", "message": "Merge pull request #3301 from Windchild292/dev_Windchild_QuirkHandler"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "4ec35e9b518b1a9b4e24fdfc41dbf3cbbb39d449", "committedDate": "2021-12-11 15:56:20 -0500", "message": "Fixing merge conflicts and accidentally also fixing any missed files"}, {"oid": "c2d06d7f97d423bb727b8dddb8030660d102a24f", "committedDate": "2021-12-14 20:19:08 -0500", "message": "Second wave of LGTM fixes"}, {"oid": "138d76553119b8d5c978946c0331665234c128f2", "committedDate": "2021-12-15 19:27:30 -0500", "message": "Internal cleanup wave 2"}, {"oid": "7e86fe21d70103ecc2f70c8319de815cf85a7edc", "committedDate": "2021-12-15 20:54:35 -0500", "message": "Fixing missing overrides"}, {"oid": "2b2ae71f1a082ff738d264daa901cccab3d29354", "committedDate": "2021-12-15 20:59:34 -0500", "message": "Fixing C-style arrays"}, {"oid": "d8af82836f3ca9b3a71cb4908c92df8ee5d50535", "committedDate": "2021-12-15 21:05:03 -0500", "message": "Fixing all unnecessary collection specifications"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "bebc485070368796f9956923aee6390488ced22b", "committedDate": "2021-12-19 08:32:26 -0500", "message": "Merge pull request #3315 from Windchild292/dev_Windchild_LGTM2"}, {"oid": "ba559f957b9ae1b383e30d15abea155dc92ec2c4", "committedDate": "2021-12-19 10:15:45 -0500", "message": "Fixing merge conflicts"}, {"oid": "6548524b4e863152c5aad95c12a72c7329750b79", "committedDate": "2021-12-19 14:23:28 -0500", "message": "Tons of spacing and copyright header fixes"}, {"oid": "7daa13432a65398cbbcfd42d2a58529972ed1c75", "committedDate": "2021-12-19 17:27:44 -0500", "message": "Fixing the remaining numbers and lowercase letters outside of f and 2"}, {"oid": "ad1704ad54c3c58b97810a8473a3d6b33487952e", "committedDate": "2021-12-19 20:31:17 -0500", "message": "Removing useless boxing"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "51fefe22bc3f294f9108484ecf7e972ba068e0c8", "committedDate": "2022-01-02 14:31:16 -0500", "message": "Fixing merge conflicts"}, {"oid": "8b4a028c02cf34de099b29dd2728f28bf39fbf1f", "committedDate": "2022-01-02 15:28:57 -0500", "message": "Handling more ,f and ,2 cases... there's a ton of these buggers"}, {"oid": "04eb525ea5f7acf47de7772a0b08086ea43e5bac", "committedDate": "2022-01-21 19:02:20 -0500", "message": "SuiteOptions: Naming standardization and finishing initial setup"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "committedDate": "2022-02-13 11:59:57 -0500", "message": "Fixing MegaMek's JavaDoc build"}, {"oid": "96c4d6ed3b90ab524999f34486d6e920bdfb1a1b", "committedDate": "2022-02-23 14:02:02 -0800", "message": "generalize Client and Host startup"}, {"oid": "d9e2840cfff44651620244f1f43ab5ec0599f65a", "committedDate": "2022-02-24 13:22:31 -0800", "message": "cleanup"}, {"oid": "fb49618ba713643156ae1c479d358303397a5eb9", "committedDate": "2022-02-24 20:30:47 -0500", "message": "Creating three base code utilities for MegaMek"}, {"oid": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "committedDate": "2022-02-25 09:34:02 -0500", "message": "Fixing merge conflicts"}, {"oid": "e8c49af19ebf1a274d68f6789642d7e798fe0731", "committedDate": "2022-02-25 09:52:27 -0500", "message": "Merge pull request #3463 from Windchild292/dev_Windchild_CodeUtilities"}, {"oid": "ba0a65a8ce08c65bbf482407c7992846358a536d", "committedDate": "2022-02-25 13:35:32 -0800", "message": "Merge branch 'master' into cmdlineargs"}, {"oid": "2f372213de306ead355ac7993c728c012ff9be3b", "committedDate": "2022-02-25 14:08:03 -0800", "message": "cleanup, savegame constants"}, {"oid": "d5e4c79ce7cf317f94f5261d4a0ae93a4da4b57d", "committedDate": "2022-03-07 10:14:18 -0800", "message": "added new Premovement and Prefiring phases. PrephaseDisplay with \"reveal\" button"}, {"oid": "534cb30e07aacd69434fbc04f51030bf14a312a0", "committedDate": "2022-03-19 15:49:45 -0400", "message": "Handling a bunch of MegaMek's legacy logging"}, {"oid": "163909a8d9dd387210468c478e5cc2487f1b9c74", "committedDate": "2022-03-20 20:48:28 -0400", "message": "Applying changes from personal review, including fixing a resource leak"}, {"oid": "6d7b0848118385e9563878352a90108ce3e4e5ac", "committedDate": "2022-03-22 23:54:19 -0400", "message": "Modernize List::size to List::isEmpty and String::isEmpty to String::isBlank"}, {"oid": "eedaddf5c1f416835e7a16f55a0f32cb83cb17ce", "committedDate": "2022-03-28 21:32:51 -0400", "message": "Fixing case spacing issues"}, {"oid": "6fc0fd91cf4be151d7759db1d5d1f7ae83782c45", "committedDate": "2022-04-24 21:08:07 -0400", "message": "Creating Connection Event and Packet Command Enums, plus the net event setup"}, {"oid": "03580c4d13b26bd58c90172ec84449e2596325f6", "committedDate": "2022-04-30 19:08:42 -0400", "message": "Applying changes found while merging phase one into the original connection branch"}, {"oid": "70cf3356c8dcf1fd4a58699fd9a4cca0632ce668", "committedDate": "2022-04-30 19:26:47 -0400", "message": "Reorganizing the net setup"}, {"oid": "3f282d6e60fe59eb5cce9d62682eb7dcdfaaf6d2", "committedDate": "2022-04-30 19:48:58 -0400", "message": "Applying changes from comparing with the original rework"}, {"oid": "29636a2a0bb7f7196b7cdd28e6d960a74d730d5c", "committedDate": "2022-05-02 22:49:42 -0400", "message": "Fixing a bunch of Assert uses"}, {"oid": "1644073dbb76b607e34a3407f52dc9d17f3dfc47", "committedDate": "2022-05-03 20:02:09 -0400", "message": "Starting to move to tearing out when possible, given the spahgetti adding exceptions to methods calls"}, {"oid": "5a29f20f51111eb68ad41f7bba50fb0798c4e0d1", "committedDate": "2022-05-03 20:15:09 -0400", "message": "Tearing out a bunch of the changes after swapping to the removal unless necessary view"}, {"oid": "12b7f6c0dc356d9ed91328fa4eaef49b77880729", "committedDate": "2022-05-03 20:21:40 -0400", "message": "Finishing fixes from changing PR focus"}, {"oid": "f483a790f5875e49c50623fa46f57e07f08546c6", "committedDate": "2022-05-03 23:57:09 -0400", "message": "Fixing a bunch more typos"}, {"oid": "3123df6499d27a94e3a7bb96090ef26ec7cf5b86", "committedDate": "2022-05-06 18:47:49 -0400", "message": "Initial work isolating the Entity inline enums into the commons enums"}, {"oid": "e41d6383e415d916e7619acea6b6f98d9f031b1d", "committedDate": "2022-05-06 19:42:32 -0400", "message": "Handling most of the WeaponSortOrder Enum"}, {"oid": "08284d4ca3ec3aff41e9da530c2d812e4c4f0124", "committedDate": "2022-05-14 18:50:21 -0400", "message": "Merge branch 'master' into dev_Windchild_EntityInlineEnums"}, {"oid": "7fbe16048d0dfcc56bf271ef90c815359d732c07", "committedDate": "2022-05-14 18:59:51 -0400", "message": "Merge branch 'master' into dev_Windchild_SuiteCleanup2"}, {"oid": "5bb3f1873873988ddb5e38d676fa79257e992707", "committedDate": "2022-06-01 18:38:51 -0400", "message": "Fixing merge conflicts"}, {"oid": "016041c65e50ba385d38b76aa316236d71a6d49b", "committedDate": "2022-06-02 09:54:10 -0400", "message": "Fixing merge conflicts"}, {"oid": "4db71d48a61b1dc3752383dd27504e94eb8267d3", "committedDate": "2022-06-30 16:39:17 -0700", "message": "client mapsettings set"}, {"oid": "e2721037a40d6e03adf8fb6cd91ec06bbef6bb44", "committedDate": "2022-06-30 20:21:20 -0700", "message": "refresh client ui on map change\""}, {"oid": "6091f6494eb184a6da0d68e53d8dcd14c4fa0352", "committedDate": "2022-06-30 21:17:36 -0700", "message": "MapSettings always use Linux path sep for network compatability"}, {"oid": "549e85c273bb61f0fba6a9b4616d3fa0821acc20", "committedDate": "2022-12-03 16:39:51 +0100", "message": "Add interfaces to facilitate other types of game than TW"}, {"oid": "e2fe9983195311a5f0174607d858b57928c76894", "committedDate": "2022-12-13 12:34:01 -0500", "message": "Updating XStream to 1.4.19 from 1.4.14"}, {"oid": "3615e1d16027c12ca8e804d2f11080cf25147ffe", "committedDate": "2023-01-07 12:36:01 +0100", "message": "Add AbstractGame, extend IGame"}, {"oid": "81692e4fba27b9235ffb2ed22a0b17a2be77634b", "committedDate": "2023-01-08 12:36:52 +0100", "message": "Merge remote-tracking branch 'MegamekMaster/master' into ForceAssignable"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjYwNQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232605", "body": "```suggestion\r\n                || (imgCache == null) || !imgCache.containsKey(id)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            || imgCache == null || !imgCache.containsKey(id)) {\n          \n          \n            \n                            || (imgCache == null) || !imgCache.containsKey(id)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">||</span> imgCache <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>imgCache<span class=\"pl-k\">.</span>containsKey(id)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">||</span> <span class=\"x x-first x-last\">(</span>imgCache <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span><span class=\"x x-first x-last\">)</span> <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>imgCache<span class=\"pl-k\">.</span>containsKey(id)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:00:35Z", "path": "megamek/src/megamek/client/Client.java", "diffHunk": "@@ -1139,7 +1140,8 @@ public String receiveReport(Vector<Report> v) {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(imgCache == null || !imgCache.containsKey(id)) {\n+        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || imgCache == null || !imgCache.containsKey(id)) {", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 055fd093cf..bbf172513d 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1140,8 +1140,8 @@ public class Client implements IClientCommandHandler {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                || imgCache == null || !imgCache.containsKey(id)) {\n+        if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || (imgCache == null) || !imgCache.containsKey(id)) {\n             return null;\n         }\n         return imgCache.get(id);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 055fd093cf..bbf172513d 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1140,8 +1140,8 @@ public class Client implements IClientCommandHandler {\n      * returns the stored <img> tag for given unit id\n      */\n     private String getCachedImgTag(int id){\n-        if(!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                || imgCache == null || !imgCache.containsKey(id)) {\n+        if (!GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n+                || (imgCache == null) || !imgCache.containsKey(id)) {\n             return null;\n         }\n         return imgCache.get(id);\n", "next_change": {"commit": "26025434b5fac88760e9cdcf0c6308f8a28ca3e3", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex bbf172513d..eb80630f71 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1150,10 +1262,8 @@ public class Client implements IClientCommandHandler {\n     /**\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n-    private void cacheImgTag(Entity entity){\n-\n+    private void cacheImgTag(Entity entity) {\n         if(entity == null) {\n-            MegaMek.getLogger().error(this, \"Null entity reference\");\n             return;\n         }\n \n", "next_change": {"commit": "bb37d25aaa03ac72413d007f9e827fd13c66a322", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex eb80630f71..567247237e 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1262,7 +1262,7 @@ public class Client implements IClientCommandHandler {\n     /**\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n-    private void cacheImgTag(Entity entity) {\n+    protected void cacheImgTag(Entity entity) {\n         if(entity == null) {\n             return;\n         }\n", "next_change": {"commit": "cd93d149815865aef558382e7e8fc99f7e8411ef", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 567247237e..27f16841dd 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1263,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if(entity == null) {\n+        if (entity == null) {\n             return;\n         }\n \n+        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be refreshed\n+        } else {\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to to <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "5a06c5f191be279f1152f475f7d1a77a1b5b1c31", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 27f16841dd..ee30168f33 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if (entity == null) {\n+        if(entity == null) {\n             return;\n         }\n \n-        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else {\n+        } else if (imgCache.containsKey(entity.getId())) {\n+            //remove images that should be refreshed\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            //convert image to base64, add to to <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "f304af7f7111e13d2177c65a0f76cf7533af12b3", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex ee30168f33..0122516e92 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,19 +1256,19 @@ public class Client implements IClientCommandHandler {\n      * Hashtable for storing <img> tags containing base64Text src.\n      */\n     protected void cacheImgTag(Entity entity) {\n-        if(entity == null) {\n+        if (entity == null) {\n             return;\n         }\n \n+        // remove images that should be refreshed\n         if (imgCache == null) {\n             imgCache = new Hashtable<>();\n-        } else if (imgCache.containsKey(entity.getId())) {\n-            //remove images that should be refreshed\n+        } else {\n             imgCache.remove(entity.getId());\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to to <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 0122516e92..8e40eea15b 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1268,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            // convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 8e40eea15b..350108348c 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            // convert image to base64, add to the <img> tag and store in cache\n+            //convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": {"commit": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/Client.java b/megamek/src/megamek/client/Client.java\nindex 350108348c..e2275628a2 100644\n--- a/megamek/src/megamek/client/Client.java\n+++ b/megamek/src/megamek/client/Client.java\n", "chunk": "@@ -1256,7 +1256,7 @@ public class Client implements IClientCommandHandler {\n         }\n \n         if (getTargetImage(entity) != null) {\n-            //convert image to base64, add to the <img> tag and store in cache\n+            // convert image to base64, add to the <img> tag and store in cache\n             Image image = ImageUtil.getScaledImage(getTargetImage(entity), 56, 48);\n             try {\n                 String base64Text;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "444fc4eb49ba82071111ee113356d22eb378aed8", "committedDate": "2020-12-25 17:30:36 -0500", "message": "PlayerColours, Colour Camo Standardization, and standardizing camo selector"}, {"oid": "982946d2227440619ea9d37a40a46f761ab45547", "committedDate": "2021-01-04 07:27:33 +0100", "message": "Map Selection, BV Dialog"}, {"oid": "8b3e48a772bfa437e914de0d986170b35eccf777", "committedDate": "2021-01-10 11:31:22 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "668763b8490d132fe583b8d39f0770dcdf465100", "committedDate": "2021-02-06 21:59:49 -0500", "message": "Add thread safety to duplicate name hash"}, {"oid": "2a5ef9a49a485aeea1358a66ba012072ab56397b", "committedDate": "2021-02-13 16:57:41 -0500", "message": "Updated and added client commands and accesibility window based on input from users to make it more usefull."}, {"oid": "dca4589e26b78b1438a17b08d0396e89d6f24a45", "committedDate": "2021-02-14 17:10:29 -0500", "message": "AMade the Accesibility Window run commands by default, included new commands based on feedback."}, {"oid": "165e7cc69626c85edd216b3b13e62c027d430a81", "committedDate": "2021-02-15 12:16:13 -0500", "message": "Apply suggestions from code review"}, {"oid": "1216e4c476558d784a86f17cd4fcc9147cc9ae9d", "committedDate": "2021-02-27 10:22:08 -0500", "message": "Switch to a re-usable class to be shared with MHQ #2597"}, {"oid": "b8c7fb91fb94fb09cd5ac6025f335ac4bf6d5c1f", "committedDate": "2021-03-02 09:56:38 -0700", "message": "Implementing Skill Generator changes as part of a full enum swapover"}, {"oid": "26a146c45e4476f2406bbbc09948b36ac2dccbae", "committedDate": "2021-03-04 22:31:53 +0100", "message": "Force Tree display work"}, {"oid": "2691005927f62c748d1c60374ac5e2001625e7ad", "committedDate": "2021-03-16 18:20:08 +0100", "message": "More force tree and popup work, copy+paste Mek List, formatting"}, {"oid": "3960e014670ddad6430f691c9654a90a7ebf0582", "committedDate": "2021-03-16 19:29:06 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "7c57ed4818a340c2fe66375aae496dbb51b8b37a", "committedDate": "2021-03-17 12:26:33 -0400", "message": "Merge pull request #2632 from sixlettervariables/issue-2597-protect-duplicate-name-hash"}, {"oid": "a56ab4b43643589073b42261baf104360717dead", "committedDate": "2021-03-25 20:41:57 +0100", "message": "Forceupdates handling changes, advanced settings NPE"}, {"oid": "264c194af5d93ba40829a3bad34e83e1162a263b", "committedDate": "2021-03-25 20:48:33 +0100", "message": "Merge remote-tracking branch 'MM_Master/master' into TooltipReform"}, {"oid": "dc1894d61ad0d7440c3318785c46e884157b0d64", "committedDate": "2021-04-05 09:26:05 +0200", "message": "Suggestions from Discord, Player Settings"}, {"oid": "e5ddcd9365c09d450d9beecde093c770fc773ec5", "committedDate": "2021-04-13 22:50:45 -0600", "message": "Fixing merge conflicts"}, {"oid": "1532a196c038a51c2252651ef02ed6e74f3b4a65", "committedDate": "2021-04-17 18:43:38 +0200", "message": "Review Changes pt. 1"}, {"oid": "609f3b8eb5c0b5daa863394b8e55a5b57eb94d1d", "committedDate": "2021-04-23 14:46:57 +0200", "message": "Windchild Review changes"}, {"oid": "26025434b5fac88760e9cdcf0c6308f8a28ca3e3", "committedDate": "2021-05-24 21:00:09 -0400", "message": "disable pointless error logging"}, {"oid": "bb37d25aaa03ac72413d007f9e827fd13c66a322", "committedDate": "2021-05-24 21:27:36 -0400", "message": "bot client optimization"}, {"oid": "4b55aa91c0d71857471d10b2ebe13134b9b4ccb2", "committedDate": "2021-07-04 22:43:24 -0400", "message": "megamek potato fixes, round 2"}, {"oid": "c4d4e7ebc2755e862104bb9077849958d7803583", "committedDate": "2021-08-02 16:28:20 +0200", "message": "Bot Config modernization and included in savegames"}, {"oid": "8793c633347c74314ec39ac1cd1a3955b6ff1646", "committedDate": "2021-08-02 16:46:59 +0200", "message": "Merge remote-tracking branch 'MM_Master/master' into botconfig"}, {"oid": "a1ae9735c0c1f2976e47f4f90dadb00b5225e724", "committedDate": "2021-08-08 12:13:14 +0930", "message": "Specify whether players are bots or not on connect"}, {"oid": "94d7072255c7af83317ca897aaa7180bec9af496", "committedDate": "2021-08-09 11:21:06 -0400", "message": "Merge pull request #3050 from mjog/email-round-reports"}, {"oid": "438b5fa2ecf16febd9d7c76d01ce4d31e5346661", "committedDate": "2021-08-13 13:28:10 -0400", "message": "Fixing merge conflicts"}, {"oid": "a039103e7554d9465bc56bf75c8a7f6513490372", "committedDate": "2021-08-13 16:10:53 -0400", "message": "Replacing the GUI with a modified version of Juliez' from the PlayerSettingsDialog"}, {"oid": "3e371f6e8ef8909f8df18fb91b420ce34f0d7f46", "committedDate": "2021-08-13 18:25:53 -0400", "message": "Finishing up the dialog work"}, {"oid": "93982d5c741d330ace17aad904f5b045bf999ac5", "committedDate": "2021-08-13 20:34:16 -0400", "message": "Standardizations and generator fixes, partially rule-based and partially so they handle the Ultra-Green and Heroic skill levels"}, {"oid": "960fd4758810d23378a6b3ea728b0f840b927732", "committedDate": "2021-09-22 13:11:08 -0400", "message": "Tearing out the version saved in MegaMek"}, {"oid": "7e0a2864da127e8cb04dee9250c698c5de6380cc", "committedDate": "2021-09-22 15:27:34 -0400", "message": "Server connections now cancel for old version"}, {"oid": "9ee36941323c78dc74b4dde218878fc244ba9323", "committedDate": "2021-09-22 16:43:35 -0400", "message": "Adding version protection on loading a game"}, {"oid": "df4c5cf1f92d48cc1c9a22cd74d995a50eab2db6", "committedDate": "2021-09-22 17:01:44 -0400", "message": "Applying changes from personal review"}, {"oid": "f707e0300c60d6adc1f9ebfe4ab7058a27ecb845", "committedDate": "2021-10-04 22:36:50 -0400", "message": "Bulk rename of IGame to Game"}, {"oid": "67eeff03ff3eb6af74da454968bc9a69d0d87271", "committedDate": "2021-10-28 12:59:03 -0400", "message": "Moving to using the renamed GamePhase, renamed GamePhase values, and moved methods"}, {"oid": "92f08487cd688957aa8264b23b71d1594b138841", "committedDate": "2021-10-28 13:10:31 -0400", "message": "Moving GamePhase to its own enum"}, {"oid": "f615db3be659a43d9b5ecf36aba546130be3d9f7", "committedDate": "2021-10-28 13:24:04 -0400", "message": "Bugfixing hidden unit NPE"}, {"oid": "f98f686817b274f5e16a641e295e975e0900013d", "committedDate": "2021-11-23 18:37:05 -0500", "message": "Removing IBoardView and renaming BoardView1 to BoardView"}, {"oid": "d26535d93a0b75e02c4dc7fbfb83de711bfbe517", "committedDate": "2021-11-30 19:05:34 -0500", "message": "Swapping to Hex from IHex"}, {"oid": "cc4bc0ba6395c4e8edec29fb6b74efa89fadd569", "committedDate": "2021-12-04 11:46:02 -0500", "message": "Removing IPlayer interface"}, {"oid": "a46e060162a7ac31e322421a7bdd592af9d74c33", "committedDate": "2021-12-04 12:21:07 -0500", "message": "Removing IConnection and ConnectionListener interfaces as unused"}, {"oid": "8490d3604d3a4e195d02a485c97046b2d7e125f0", "committedDate": "2021-12-05 12:36:51 -0500", "message": "Merge pull request #3284 from Windchild292/dev_Windchild_IHex"}, {"oid": "412053f7b83d357883fc50af1bdfc976084d0283", "committedDate": "2021-12-05 14:43:00 -0500", "message": "Fixing merge conflicts"}, {"oid": "5f8eae09c584a9d81e83539814cf2ed107c480f0", "committedDate": "2021-12-06 17:43:37 -0500", "message": "IBoard: Interface Removal"}, {"oid": "cd93d149815865aef558382e7e8fc99f7e8411ef", "committedDate": "2021-12-07 17:02:26 -0500", "message": "General Code Cleanup - Focusing on Accessibility Problems"}, {"oid": "26ba26411580be9fa7c98c124bbb6085d1729070", "committedDate": "2021-12-07 17:27:26 -0500", "message": "Fixing further code accessibility issues and doing more cleanup"}, {"oid": "5a06c5f191be279f1152f475f7d1a77a1b5b1c31", "committedDate": "2021-12-08 18:49:01 -0500", "message": "Quirk code cleanup"}, {"oid": "f304af7f7111e13d2177c65a0f76cf7533af12b3", "committedDate": "2021-12-11 09:06:02 -0500", "message": "Merge pull request #3301 from Windchild292/dev_Windchild_QuirkHandler"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "4ec35e9b518b1a9b4e24fdfc41dbf3cbbb39d449", "committedDate": "2021-12-11 15:56:20 -0500", "message": "Fixing merge conflicts and accidentally also fixing any missed files"}, {"oid": "c2d06d7f97d423bb727b8dddb8030660d102a24f", "committedDate": "2021-12-14 20:19:08 -0500", "message": "Second wave of LGTM fixes"}, {"oid": "138d76553119b8d5c978946c0331665234c128f2", "committedDate": "2021-12-15 19:27:30 -0500", "message": "Internal cleanup wave 2"}, {"oid": "7e86fe21d70103ecc2f70c8319de815cf85a7edc", "committedDate": "2021-12-15 20:54:35 -0500", "message": "Fixing missing overrides"}, {"oid": "2b2ae71f1a082ff738d264daa901cccab3d29354", "committedDate": "2021-12-15 20:59:34 -0500", "message": "Fixing C-style arrays"}, {"oid": "d8af82836f3ca9b3a71cb4908c92df8ee5d50535", "committedDate": "2021-12-15 21:05:03 -0500", "message": "Fixing all unnecessary collection specifications"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "bebc485070368796f9956923aee6390488ced22b", "committedDate": "2021-12-19 08:32:26 -0500", "message": "Merge pull request #3315 from Windchild292/dev_Windchild_LGTM2"}, {"oid": "ba559f957b9ae1b383e30d15abea155dc92ec2c4", "committedDate": "2021-12-19 10:15:45 -0500", "message": "Fixing merge conflicts"}, {"oid": "6548524b4e863152c5aad95c12a72c7329750b79", "committedDate": "2021-12-19 14:23:28 -0500", "message": "Tons of spacing and copyright header fixes"}, {"oid": "7daa13432a65398cbbcfd42d2a58529972ed1c75", "committedDate": "2021-12-19 17:27:44 -0500", "message": "Fixing the remaining numbers and lowercase letters outside of f and 2"}, {"oid": "ad1704ad54c3c58b97810a8473a3d6b33487952e", "committedDate": "2021-12-19 20:31:17 -0500", "message": "Removing useless boxing"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "51fefe22bc3f294f9108484ecf7e972ba068e0c8", "committedDate": "2022-01-02 14:31:16 -0500", "message": "Fixing merge conflicts"}, {"oid": "8b4a028c02cf34de099b29dd2728f28bf39fbf1f", "committedDate": "2022-01-02 15:28:57 -0500", "message": "Handling more ,f and ,2 cases... there's a ton of these buggers"}, {"oid": "04eb525ea5f7acf47de7772a0b08086ea43e5bac", "committedDate": "2022-01-21 19:02:20 -0500", "message": "SuiteOptions: Naming standardization and finishing initial setup"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "committedDate": "2022-02-13 11:59:57 -0500", "message": "Fixing MegaMek's JavaDoc build"}, {"oid": "96c4d6ed3b90ab524999f34486d6e920bdfb1a1b", "committedDate": "2022-02-23 14:02:02 -0800", "message": "generalize Client and Host startup"}, {"oid": "d9e2840cfff44651620244f1f43ab5ec0599f65a", "committedDate": "2022-02-24 13:22:31 -0800", "message": "cleanup"}, {"oid": "fb49618ba713643156ae1c479d358303397a5eb9", "committedDate": "2022-02-24 20:30:47 -0500", "message": "Creating three base code utilities for MegaMek"}, {"oid": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "committedDate": "2022-02-25 09:34:02 -0500", "message": "Fixing merge conflicts"}, {"oid": "e8c49af19ebf1a274d68f6789642d7e798fe0731", "committedDate": "2022-02-25 09:52:27 -0500", "message": "Merge pull request #3463 from Windchild292/dev_Windchild_CodeUtilities"}, {"oid": "ba0a65a8ce08c65bbf482407c7992846358a536d", "committedDate": "2022-02-25 13:35:32 -0800", "message": "Merge branch 'master' into cmdlineargs"}, {"oid": "2f372213de306ead355ac7993c728c012ff9be3b", "committedDate": "2022-02-25 14:08:03 -0800", "message": "cleanup, savegame constants"}, {"oid": "d5e4c79ce7cf317f94f5261d4a0ae93a4da4b57d", "committedDate": "2022-03-07 10:14:18 -0800", "message": "added new Premovement and Prefiring phases. PrephaseDisplay with \"reveal\" button"}, {"oid": "534cb30e07aacd69434fbc04f51030bf14a312a0", "committedDate": "2022-03-19 15:49:45 -0400", "message": "Handling a bunch of MegaMek's legacy logging"}, {"oid": "163909a8d9dd387210468c478e5cc2487f1b9c74", "committedDate": "2022-03-20 20:48:28 -0400", "message": "Applying changes from personal review, including fixing a resource leak"}, {"oid": "6d7b0848118385e9563878352a90108ce3e4e5ac", "committedDate": "2022-03-22 23:54:19 -0400", "message": "Modernize List::size to List::isEmpty and String::isEmpty to String::isBlank"}, {"oid": "eedaddf5c1f416835e7a16f55a0f32cb83cb17ce", "committedDate": "2022-03-28 21:32:51 -0400", "message": "Fixing case spacing issues"}, {"oid": "6fc0fd91cf4be151d7759db1d5d1f7ae83782c45", "committedDate": "2022-04-24 21:08:07 -0400", "message": "Creating Connection Event and Packet Command Enums, plus the net event setup"}, {"oid": "03580c4d13b26bd58c90172ec84449e2596325f6", "committedDate": "2022-04-30 19:08:42 -0400", "message": "Applying changes found while merging phase one into the original connection branch"}, {"oid": "70cf3356c8dcf1fd4a58699fd9a4cca0632ce668", "committedDate": "2022-04-30 19:26:47 -0400", "message": "Reorganizing the net setup"}, {"oid": "3f282d6e60fe59eb5cce9d62682eb7dcdfaaf6d2", "committedDate": "2022-04-30 19:48:58 -0400", "message": "Applying changes from comparing with the original rework"}, {"oid": "29636a2a0bb7f7196b7cdd28e6d960a74d730d5c", "committedDate": "2022-05-02 22:49:42 -0400", "message": "Fixing a bunch of Assert uses"}, {"oid": "1644073dbb76b607e34a3407f52dc9d17f3dfc47", "committedDate": "2022-05-03 20:02:09 -0400", "message": "Starting to move to tearing out when possible, given the spahgetti adding exceptions to methods calls"}, {"oid": "5a29f20f51111eb68ad41f7bba50fb0798c4e0d1", "committedDate": "2022-05-03 20:15:09 -0400", "message": "Tearing out a bunch of the changes after swapping to the removal unless necessary view"}, {"oid": "12b7f6c0dc356d9ed91328fa4eaef49b77880729", "committedDate": "2022-05-03 20:21:40 -0400", "message": "Finishing fixes from changing PR focus"}, {"oid": "f483a790f5875e49c50623fa46f57e07f08546c6", "committedDate": "2022-05-03 23:57:09 -0400", "message": "Fixing a bunch more typos"}, {"oid": "3123df6499d27a94e3a7bb96090ef26ec7cf5b86", "committedDate": "2022-05-06 18:47:49 -0400", "message": "Initial work isolating the Entity inline enums into the commons enums"}, {"oid": "e41d6383e415d916e7619acea6b6f98d9f031b1d", "committedDate": "2022-05-06 19:42:32 -0400", "message": "Handling most of the WeaponSortOrder Enum"}, {"oid": "08284d4ca3ec3aff41e9da530c2d812e4c4f0124", "committedDate": "2022-05-14 18:50:21 -0400", "message": "Merge branch 'master' into dev_Windchild_EntityInlineEnums"}, {"oid": "7fbe16048d0dfcc56bf271ef90c815359d732c07", "committedDate": "2022-05-14 18:59:51 -0400", "message": "Merge branch 'master' into dev_Windchild_SuiteCleanup2"}, {"oid": "5bb3f1873873988ddb5e38d676fa79257e992707", "committedDate": "2022-06-01 18:38:51 -0400", "message": "Fixing merge conflicts"}, {"oid": "016041c65e50ba385d38b76aa316236d71a6d49b", "committedDate": "2022-06-02 09:54:10 -0400", "message": "Fixing merge conflicts"}, {"oid": "4db71d48a61b1dc3752383dd27504e94eb8267d3", "committedDate": "2022-06-30 16:39:17 -0700", "message": "client mapsettings set"}, {"oid": "e2721037a40d6e03adf8fb6cd91ec06bbef6bb44", "committedDate": "2022-06-30 20:21:20 -0700", "message": "refresh client ui on map change\""}, {"oid": "6091f6494eb184a6da0d68e53d8dcd14c4fa0352", "committedDate": "2022-06-30 21:17:36 -0700", "message": "MapSettings always use Linux path sep for network compatability"}, {"oid": "549e85c273bb61f0fba6a9b4616d3fa0821acc20", "committedDate": "2022-12-03 16:39:51 +0100", "message": "Add interfaces to facilitate other types of game than TW"}, {"oid": "e2fe9983195311a5f0174607d858b57928c76894", "committedDate": "2022-12-13 12:34:01 -0500", "message": "Updating XStream to 1.4.19 from 1.4.14"}, {"oid": "3615e1d16027c12ca8e804d2f11080cf25147ffe", "committedDate": "2023-01-07 12:36:01 +0100", "message": "Add AbstractGame, extend IGame"}, {"oid": "81692e4fba27b9235ffb2ed22a0b17a2be77634b", "committedDate": "2023-01-08 12:36:52 +0100", "message": "Merge remote-tracking branch 'MegamekMaster/master' into ForceAssignable"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjY4MQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232681", "body": "```suggestion\r\n        if (image != null) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(image != null) {\n          \n          \n            \n                    if (image != null) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span>(image <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(image <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:00:45Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -53,7 +53,7 @@ public class BASE64ImageView extends ImageView {\n         }\n         URL src = getImageURL();\n         Image image = loadImage();\n-        if(image != null) {\n+        if (image != null) {\n             cache.put(src, image);\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -53,7 +54,7 @@ public class BASE64ImageView extends ImageView {\n         }\n         URL src = getImageURL();\n         Image image = loadImage();\n-        if(image != null) {\n+        if (image != null) {\n             cache.put(src, image);\n         }\n     }\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..036bef0252 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -59,7 +59,7 @@ public class BASE64ImageView extends ImageView {\n         }\n     }\n \n-    //decodes the Base64 string into an image and returns it\n+    // decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n         if (b64 != null) {\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzMjc1Ng==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487232756", "body": "```suggestion\r\n        if (b64 != null) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(b64 != null) {\n          \n          \n            \n                    if (b64 != null) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span>(b64 <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(b64 <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:00:54Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -53,7 +54,7 @@ public class BASE64ImageView extends ImageView {\n         }\n         URL src = getImageURL();\n         Image image = loadImage();\n-        if(image != null) {\n+        if (image != null) {\n             cache.put(src, image);\n         }\n     }\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..036bef0252 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -59,7 +59,7 @@ public class BASE64ImageView extends ImageView {\n         }\n     }\n \n-    //decodes the Base64 string into an image and returns it\n+    // decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n         if (b64 != null) {\n", "next_change": null}]}}, {"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,21 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDQ5Nw==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234497", "body": "```suggestion\r\n            } catch (Exception ex) {\r\n                MegaMek.getLogger(getClass(), \"loadImage\", ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (Throwable ex) {\n          \n          \n            \n                            ex.printStackTrace();\n          \n          \n            \n                        } catch (Exception ex) {\n          \n          \n            \n                            MegaMek.getLogger(getClass(), \"loadImage\", ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi x x-first x-last\">Throwable</span> ex) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"x x-first\">ex</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">printStackTrace(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi x x-first x-last\">Exception</span> ex) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi x x-first\">MegaMek</span><span class=\"pl-k x\">.</span><span class=\"x\">getLogger(getClass(), </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">loadImage</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, ex</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:04:38Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,21 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDU2Nw==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234567", "body": "```suggestion\r\n        } else {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    else{\n          \n          \n            \n                    } else {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">else</span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:04:48Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+            return newImage;\n+        }\n+        else{", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,21 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNDYzNg==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487234636", "body": "```suggestion\r\n            return null;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return  null;\n          \n          \n            \n                        return null;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\"> </span><span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:04:54Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+            return newImage;\n+        }\n+        else{\n+            return  null;", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,21 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235145", "body": "Can this be done through try with properties?", "bodyText": "Can this be done through try with properties?", "bodyHTML": "<p dir=\"auto\">Can this be done through try with properties?</p>", "author": "Windchild292", "createdAt": "2020-09-11T19:06:00Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -51,25 +51,32 @@ private void populateImage() {\n             cache = new Hashtable<>();\n             getDocument().putProperty(\"imageCache\", cache);\n         }\n-\n         URL src = getImageURL();\n-        cache.put(src, loadImage());\n-\n+        Image image = loadImage();\n+        if(image != null) {\n+            cache.put(src, image);\n+        }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        BufferedImage newImage = null;\n-        ByteArrayInputStream bais = null;\n-        try {\n-            bais = new ByteArrayInputStream(\n-                    Base64.getDecoder().decode(b64.getBytes()));\n-            newImage = ImageIO.read(bais);\n-        } catch (Throwable ex) {\n-            ex.printStackTrace();\n+        if(b64 != null) {\n+            BufferedImage newImage = null;\n+            ByteArrayInputStream bais = null;\n+            try {\n+                bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()));\n+                newImage = ImageIO.read(bais);\n+                bais.close();", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyNTcyMA==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r488825720", "bodyText": "That's a good call, I'll write it in.", "author": "Krashner", "createdAt": "2020-09-15T17:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..a7fa0e71af 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -63,12 +63,9 @@ public class BASE64ImageView extends ImageView {\n         String b64 = getBASE64Image();\n         if(b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n             } catch (Throwable ex) {\n                 ex.printStackTrace();\n             }\n", "next_change": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex a7fa0e71af..8efa395cea 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,18 +61,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n             try (ByteArrayInputStream bais = new ByteArrayInputStream(\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "c6ca70022320199f2c8075cf223638273f363818", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 8efa395cea..1ec9fac414 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -67,7 +69,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger(getClass(), \"loadImage\", ex);\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1ec9fac414..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -69,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 1b28787742..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -61,21 +62,17 @@ public class BASE64ImageView extends ImageView {\n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n-        }\n-        else{\n-            return  null;\n+        } else {\n+            return null;\n         }\n     }\n \n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTQzNg==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235436", "body": "```suggestion\r\n            if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(indentation <= Report.DEFAULT_INDENTATION || showImage) {\n          \n          \n            \n                        if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span><span class=\"x x-first x-last\">(</span>indentation <span class=\"pl-k\">&lt;=</span> <span class=\"pl-smi\">Report</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_INDENTATION</span> <span class=\"pl-k\">||</span> showImage) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> ((</span>indentation <span class=\"pl-k\">&lt;=</span> <span class=\"pl-smi\">Report</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_INDENTATION</span><span class=\"x x-first x-last\">)</span> <span class=\"pl-k\">||</span> showImage) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:06:34Z", "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -314,9 +313,8 @@ public void choose(boolean choice) {\n      */\n     public void addDesc(Entity entity) {\n         if (entity != null) {\n-            if(GUIPreferences.getInstance().getBoolean(GUIPreferences.ADVANCED_ROUND_REPORT_SPRITES)\n-                    && (indentation <= Report.DEFAULT_INDENTATION || showImage)) {\n-                imageCode = \"<span id='\" +entity.getId() + \"'></span>\";\n+            if(indentation <= Report.DEFAULT_INDENTATION || showImage) {", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex fa09cd5ba2..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -313,7 +313,7 @@ public class Report implements Serializable {\n      */\n     public void addDesc(Entity entity) {\n         if (entity != null) {\n-            if(indentation <= Report.DEFAULT_INDENTATION || showImage) {\n+            if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\n                 imageCode = \"<span id='\" + entity.getId() + \"'></span>\";\n             }\n             add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex fa09cd5ba2..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -313,7 +313,7 @@ public class Report implements Serializable {\n      */\n     public void addDesc(Entity entity) {\n         if (entity != null) {\n-            if(indentation <= Report.DEFAULT_INDENTATION || showImage) {\n+            if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\n                 imageCode = \"<span id='\" + entity.getId() + \"'></span>\";\n             }\n             add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n", "next_change": {"commit": "444fc4eb49ba82071111ee113356d22eb378aed8", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 9b31b48b1a..7245c279a1 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -318,9 +315,7 @@ public class Report implements Serializable {\n             }\n             add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n                     + \"\\\">\" + entity.getShortName() + \"</a></font>\", true);\n-            String colorcode = Integer.toHexString(PlayerColors.getColor(\n-                    entity.getOwner().getColorIndex()).getRGB() & 0x00f0f0f0);\n-            add(\"<B><font color='\" + colorcode + \"'>\"\n+            add(\"<B><font color='\" + entity.getOwner().getColour().getHexString() + \"'>\"\n                     + entity.getOwner().getName() + \"</font></B>\");\n         }\n     }\n", "next_change": {"commit": "68a23ae3076d0f06f5f3667ecb1d35ee03f8a978", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 7245c279a1..c373ff825e 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -315,7 +315,7 @@ public class Report implements Serializable {\n             }\n             add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n                     + \"\\\">\" + entity.getShortName() + \"</a></font>\", true);\n-            add(\"<B><font color='\" + entity.getOwner().getColour().getHexString() + \"'>\"\n+            add(\"<B><font color='\" + entity.getOwner().getColour().getHexString(0x00F0F0F0) + \"'>\"\n                     + entity.getOwner().getName() + \"</font></B>\");\n         }\n     }\n", "next_change": {"commit": "e02ab980e68ec00403b16f6d5d4ba680393c8ddc", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex c373ff825e..2c940813c3 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -313,7 +323,7 @@ public class Report implements Serializable {\n             if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\n                 imageCode = \"<span id='\" + entity.getId() + \"'></span>\";\n             }\n-            add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n+            add(\"<font color='0xffffff'><a href=\\\"\" + ENTITY_LINK + entity.getId()\n                     + \"\\\">\" + entity.getShortName() + \"</a></font>\", true);\n             add(\"<B><font color='\" + entity.getOwner().getColour().getHexString(0x00F0F0F0) + \"'>\"\n                     + entity.getOwner().getName() + \"</font></B>\");\n", "next_change": {"commit": "688a032d9ed3934a235722a20c3245dd3fec27f1", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 2c940813c3..db832eb93b 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -323,17 +334,23 @@ public class Report implements Serializable {\n             if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\n                 imageCode = \"<span id='\" + entity.getId() + \"'></span>\";\n             }\n-            add(\"<font color='0xffffff'><a href=\\\"\" + ENTITY_LINK + entity.getId()\n-                    + \"\\\">\" + entity.getShortName() + \"</a></font>\", true);\n-            add(\"<B><font color='\" + entity.getOwner().getColour().getHexString(0x00F0F0F0) + \"'>\"\n-                    + entity.getOwner().getName() + \"</font></B>\");\n+            String name = \"<font color='0xffffff'><a href=\\\"\" + ENTITY_LINK + entity.getId()\n+                    + \"\\\">\" + entity.getShortName() + \"</a></font>\";\n+            String color = entity.getOwner().getColour().getHexString(0x00F0F0F0);\n+\n+            if ((entity.getCrew().getSize() >= 1) && !entity.getCrew().getNickname().isBlank()) {\n+                // pilot nickname, also known as callsign\n+                name += \" <font color='\"+color+\"'>\\\"\" + entity.getCrew().getNickname().toUpperCase() + \"\\\"</font>\";\n+            }\n+            add(name, true);\n+            add(\"<B><font color='\" + color + \"'>\" + entity.getOwner().getName() + \"</font></B>\");\n         }\n     }\n \n     /**\n      * Manually Toggle if the report should show an image of the entity\n     */\n-    public void setShowImage(boolean showImage){\n+    public void setShowImage(boolean showImage) {\n         this.showImage = showImage;\n     }\n \n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "6a950a5947b58f5b5a284a6130d6ccf54e6c7bbf", "committedDate": "2020-10-29 21:53:25 -0400", "message": "fleeing not illegal in tornado"}, {"oid": "444fc4eb49ba82071111ee113356d22eb378aed8", "committedDate": "2020-12-25 17:30:36 -0500", "message": "PlayerColours, Colour Camo Standardization, and standardizing camo selector"}, {"oid": "68a23ae3076d0f06f5f3667ecb1d35ee03f8a978", "committedDate": "2020-12-26 20:43:58 -0500", "message": "Bugfixing Player Colours implementation"}, {"oid": "a41945f49df93f9c8053b6e6588642944c0b2f55", "committedDate": "2021-03-18 13:26:26 -0500", "message": "Report accepts ToHitData which adds a hyperlink that pops up a message dialog showing the details."}, {"oid": "e02ab980e68ec00403b16f6d5d4ba680393c8ddc", "committedDate": "2021-03-18 21:25:43 -0500", "message": "Use named constants for report hyperlink prefixes"}, {"oid": "25092a721b28f0e2eeb0b26ddbd52833637a49a9", "committedDate": "2021-03-19 16:08:31 -0500", "message": "Use report tooltips for physical weapon attacks and PSR/control rolls"}, {"oid": "fbe6e0d9513f70bc178fa9c7b6a29e2d34ff2020", "committedDate": "2021-03-19 16:12:08 -0500", "message": "General method for adding a data field to the report with tooltip text"}, {"oid": "cc4bc0ba6395c4e8edec29fb6b74efa89fadd569", "committedDate": "2021-12-04 11:46:02 -0500", "message": "Removing IPlayer interface"}, {"oid": "cd93d149815865aef558382e7e8fc99f7e8411ef", "committedDate": "2021-12-07 17:02:26 -0500", "message": "General Code Cleanup - Focusing on Accessibility Problems"}, {"oid": "d8af82836f3ca9b3a71cb4908c92df8ee5d50535", "committedDate": "2021-12-15 21:05:03 -0500", "message": "Fixing all unnecessary collection specifications"}, {"oid": "6548524b4e863152c5aad95c12a72c7329750b79", "committedDate": "2021-12-19 14:23:28 -0500", "message": "Tons of spacing and copyright header fixes"}, {"oid": "ad1704ad54c3c58b97810a8473a3d6b33487952e", "committedDate": "2021-12-19 20:31:17 -0500", "message": "Removing useless boxing"}, {"oid": "8b4a028c02cf34de099b29dd2728f28bf39fbf1f", "committedDate": "2022-01-02 15:28:57 -0500", "message": "Handling more ,f and ,2 cases... there's a ton of these buggers"}, {"oid": "cb018781ac27c97f60e58b2018b9966b1721f9d4", "committedDate": "2022-02-11 17:15:01 -0500", "message": "3435: Check if the vector is empty before adding a new liine"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "committedDate": "2022-02-13 11:59:57 -0500", "message": "Fixing MegaMek's JavaDoc build"}, {"oid": "f547d15e031d4cc76a8142277b680c5aa952d0eb", "committedDate": "2022-02-24 20:49:57 -0500", "message": "Merge branch 'MegaMek:master' into dev_Windchild_Javadoc"}, {"oid": "83da84722acade26b94667d0e6e1007ae31ac978", "committedDate": "2022-02-24 20:51:36 -0500", "message": "Merge branch 'master' into dev_Windchild_InternalCleanupWave4"}, {"oid": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "committedDate": "2022-02-25 09:34:02 -0500", "message": "Fixing merge conflicts"}, {"oid": "3a244836dba3e9487ad957fb20a04cc762348743", "committedDate": "2022-04-21 20:31:02 -0400", "message": "Fixing MM's log pathing"}, {"oid": "ec4203d61c31b85d892ddc343e71817f1ee2998a", "committedDate": "2022-05-01 16:58:07 -0400", "message": "Modernizing a lot more of our logging"}, {"oid": "688a032d9ed3934a235722a20c3245dd3fec27f1", "committedDate": "2022-06-05 16:31:55 -0700", "message": "added nickname, if it exists, to reports"}, {"oid": "d47fb326d1a550ca9d7af4ea2f961ac6d8f29941", "committedDate": "2022-06-08 21:53:17 -0700", "message": "add advanced heat color options, centralize colors"}, {"oid": "4ae0f32329c38a54d71fb9321cfc83ae9ad1020f", "committedDate": "2022-06-09 13:12:39 -0700", "message": "adjust scale"}, {"oid": "88be1662b71c2d28377e719fcec7d80a50081a45", "committedDate": "2022-06-09 17:42:43 -0700", "message": "use span not font. use bold for heat"}, {"oid": "0750f3da1f297218ac3ad256eeacaedf36745eee", "committedDate": "2022-06-11 11:24:40 -0700", "message": "css href and warning spans"}, {"oid": "23ea32031919795fcfce540d73b2ac3731c0aef5", "committedDate": "2022-06-11 11:55:08 -0700", "message": "cleanup"}, {"oid": "cb97f4982cf176d56e5da8c45e2728ec8ddcc444", "committedDate": "2022-06-19 09:46:34 -0700", "message": "fix typos"}, {"oid": "00ce23d640a6a6359a979c6cb54eeee78354e0a6", "committedDate": "2022-06-23 16:48:12 -0400", "message": "Fixing hidden character build failure"}, {"oid": "b01034462604554060dde2f2b6581d97944835e9", "committedDate": "2022-07-15 20:18:35 -0700", "message": "heat and link color in advanced prefs"}, {"oid": "2fd0a028a93f34a6000c14ec62eb9eafdd7710c7", "committedDate": "2022-12-09 18:33:28 -0500", "message": "show game board in all the game phases"}, {"oid": "33a333c48e94ba8f4c01564ba937346e61baec60", "committedDate": "2023-02-06 18:14:56 -0500", "message": "issue 4158"}, {"oid": "cfb5bc8ba02e0a06816ba15c222272770d7134e7", "committedDate": "2023-02-07 10:33:26 -0500", "message": "issue 4158"}, {"oid": "32e47d1ef57ce582e62ffb5830093bd68665acb9", "committedDate": "2023-02-08 09:55:36 -0500", "message": "correct issues"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTY4MA==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r487235680", "body": "```suggestion\r\n            if (!imageCode.isEmpty()) {\r\n                if (text.toString().startsWith(\"\\n\")) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(!imageCode.isEmpty()){\n          \n          \n            \n                            if(text.toString().startsWith(\"\\n\")){\n          \n          \n            \n                        if (!imageCode.isEmpty()) {\n          \n          \n            \n                            if (text.toString().startsWith(\"\\n\")) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span>imageCode<span class=\"pl-k\">.</span>isEmpty()){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span>(text<span class=\"pl-k\">.</span>toString()<span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>)){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(<span class=\"pl-k\">!</span>imageCode<span class=\"pl-k\">.</span>isEmpty())<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(text<span class=\"pl-k\">.</span>toString()<span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>))<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-11T19:07:03Z", "path": "megamek/src/megamek/common/Report.java", "diffHunk": "@@ -487,9 +485,9 @@ public String getText() {\n                 }\n                 i++;\n             }\n-            //draw the sprite at the beginning of the line\n-            if(imageCode != null && imageCode.length() > 0){\n-                if(text.substring(0,1).equals(\"\\n\")){\n+            //add the sprite code at the beginning of the line\n+            if(!imageCode.isEmpty()){\n+                if(text.toString().startsWith(\"\\n\")){", "originalCommit": "a8661baf39ba5132071a85163c54905b8a6ac856", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex fa09cd5ba2..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -486,8 +486,8 @@ public class Report implements Serializable {\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if(!imageCode.isEmpty()){\n-                if(text.toString().startsWith(\"\\n\")){\n+            if (!imageCode.isEmpty()) {\n+                if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n                 else {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex fa09cd5ba2..9b31b48b1a 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -486,8 +486,8 @@ public class Report implements Serializable {\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if(!imageCode.isEmpty()){\n-                if(text.toString().startsWith(\"\\n\")){\n+            if (!imageCode.isEmpty()) {\n+                if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n                 else {\n", "next_change": {"commit": "6a950a5947b58f5b5a284a6130d6ccf54e6c7bbf", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 9b31b48b1a..1926865cb0 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -486,7 +486,7 @@ public class Report implements Serializable {\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if (!imageCode.isEmpty()) {\n+            if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n                 }\n", "next_change": {"commit": "2f31805840da3aec87ab248e781265acb449600a", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 1926865cb0..39342e9fa3 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -473,19 +484,18 @@ public class Report implements Serializable {\n                                     raw.indexOf(',', i) + 1, endTagIdx)));\n                         }\n                         tagCounter++;\n-                    } else if (raw.substring(i + 1, endTagIdx)\n-                            .equals(\"newline\")) {\n+                    } else if (raw.substring(i + 1, endTagIdx).equals(\"newline\")) {\n                         text.append(\"\\n\");\n                     } else {\n                         // not a special tag, so treat as literal text\n-                        text.append(raw.substring(i, endTagIdx + 1));\n+                        text.append(raw, i, endTagIdx + 1);\n                     }\n                     mark = endTagIdx + 1;\n                     i = endTagIdx;\n                 }\n                 i++;\n             }\n-            //add the sprite code at the beginning of the line\n+            // add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": {"commit": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 39342e9fa3..0b5fedea85 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -495,7 +494,7 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            // add the sprite code at the beginning of the line\n+            //add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": {"commit": "83da84722acade26b94667d0e6e1007ae31ac978", "changed_code": [{"header": "diff --git a/megamek/src/megamek/common/Report.java b/megamek/src/megamek/common/Report.java\nindex 0b5fedea85..58036819b7 100755\n--- a/megamek/src/megamek/common/Report.java\n+++ b/megamek/src/megamek/common/Report.java\n", "chunk": "@@ -494,7 +495,7 @@ public class Report implements Serializable {\n                 }\n                 i++;\n             }\n-            //add the sprite code at the beginning of the line\n+            // add the sprite code at the beginning of the line\n             if (imageCode != null && !imageCode.isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n                     text.insert(1, imageCode);\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "6a950a5947b58f5b5a284a6130d6ccf54e6c7bbf", "committedDate": "2020-10-29 21:53:25 -0400", "message": "fleeing not illegal in tornado"}, {"oid": "444fc4eb49ba82071111ee113356d22eb378aed8", "committedDate": "2020-12-25 17:30:36 -0500", "message": "PlayerColours, Colour Camo Standardization, and standardizing camo selector"}, {"oid": "68a23ae3076d0f06f5f3667ecb1d35ee03f8a978", "committedDate": "2020-12-26 20:43:58 -0500", "message": "Bugfixing Player Colours implementation"}, {"oid": "a41945f49df93f9c8053b6e6588642944c0b2f55", "committedDate": "2021-03-18 13:26:26 -0500", "message": "Report accepts ToHitData which adds a hyperlink that pops up a message dialog showing the details."}, {"oid": "e02ab980e68ec00403b16f6d5d4ba680393c8ddc", "committedDate": "2021-03-18 21:25:43 -0500", "message": "Use named constants for report hyperlink prefixes"}, {"oid": "25092a721b28f0e2eeb0b26ddbd52833637a49a9", "committedDate": "2021-03-19 16:08:31 -0500", "message": "Use report tooltips for physical weapon attacks and PSR/control rolls"}, {"oid": "fbe6e0d9513f70bc178fa9c7b6a29e2d34ff2020", "committedDate": "2021-03-19 16:12:08 -0500", "message": "General method for adding a data field to the report with tooltip text"}, {"oid": "cc4bc0ba6395c4e8edec29fb6b74efa89fadd569", "committedDate": "2021-12-04 11:46:02 -0500", "message": "Removing IPlayer interface"}, {"oid": "cd93d149815865aef558382e7e8fc99f7e8411ef", "committedDate": "2021-12-07 17:02:26 -0500", "message": "General Code Cleanup - Focusing on Accessibility Problems"}, {"oid": "d8af82836f3ca9b3a71cb4908c92df8ee5d50535", "committedDate": "2021-12-15 21:05:03 -0500", "message": "Fixing all unnecessary collection specifications"}, {"oid": "6548524b4e863152c5aad95c12a72c7329750b79", "committedDate": "2021-12-19 14:23:28 -0500", "message": "Tons of spacing and copyright header fixes"}, {"oid": "ad1704ad54c3c58b97810a8473a3d6b33487952e", "committedDate": "2021-12-19 20:31:17 -0500", "message": "Removing useless boxing"}, {"oid": "8b4a028c02cf34de099b29dd2728f28bf39fbf1f", "committedDate": "2022-01-02 15:28:57 -0500", "message": "Handling more ,f and ,2 cases... there's a ton of these buggers"}, {"oid": "cb018781ac27c97f60e58b2018b9966b1721f9d4", "committedDate": "2022-02-11 17:15:01 -0500", "message": "3435: Check if the vector is empty before adding a new liine"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "f25b35cf7a952d903500cab543aaa4d8f89e4b67", "committedDate": "2022-02-13 11:59:57 -0500", "message": "Fixing MegaMek's JavaDoc build"}, {"oid": "f547d15e031d4cc76a8142277b680c5aa952d0eb", "committedDate": "2022-02-24 20:49:57 -0500", "message": "Merge branch 'MegaMek:master' into dev_Windchild_Javadoc"}, {"oid": "83da84722acade26b94667d0e6e1007ae31ac978", "committedDate": "2022-02-24 20:51:36 -0500", "message": "Merge branch 'master' into dev_Windchild_InternalCleanupWave4"}, {"oid": "8e5d88919fee983ad68f8f1d8a30fa8a0dde12ca", "committedDate": "2022-02-25 09:34:02 -0500", "message": "Fixing merge conflicts"}, {"oid": "3a244836dba3e9487ad957fb20a04cc762348743", "committedDate": "2022-04-21 20:31:02 -0400", "message": "Fixing MM's log pathing"}, {"oid": "ec4203d61c31b85d892ddc343e71817f1ee2998a", "committedDate": "2022-05-01 16:58:07 -0400", "message": "Modernizing a lot more of our logging"}, {"oid": "688a032d9ed3934a235722a20c3245dd3fec27f1", "committedDate": "2022-06-05 16:31:55 -0700", "message": "added nickname, if it exists, to reports"}, {"oid": "d47fb326d1a550ca9d7af4ea2f961ac6d8f29941", "committedDate": "2022-06-08 21:53:17 -0700", "message": "add advanced heat color options, centralize colors"}, {"oid": "4ae0f32329c38a54d71fb9321cfc83ae9ad1020f", "committedDate": "2022-06-09 13:12:39 -0700", "message": "adjust scale"}, {"oid": "88be1662b71c2d28377e719fcec7d80a50081a45", "committedDate": "2022-06-09 17:42:43 -0700", "message": "use span not font. use bold for heat"}, {"oid": "0750f3da1f297218ac3ad256eeacaedf36745eee", "committedDate": "2022-06-11 11:24:40 -0700", "message": "css href and warning spans"}, {"oid": "23ea32031919795fcfce540d73b2ac3731c0aef5", "committedDate": "2022-06-11 11:55:08 -0700", "message": "cleanup"}, {"oid": "cb97f4982cf176d56e5da8c45e2728ec8ddcc444", "committedDate": "2022-06-19 09:46:34 -0700", "message": "fix typos"}, {"oid": "00ce23d640a6a6359a979c6cb54eeee78354e0a6", "committedDate": "2022-06-23 16:48:12 -0400", "message": "Fixing hidden character build failure"}, {"oid": "b01034462604554060dde2f2b6581d97944835e9", "committedDate": "2022-07-15 20:18:35 -0700", "message": "heat and link color in advanced prefs"}, {"oid": "2fd0a028a93f34a6000c14ec62eb9eafdd7710c7", "committedDate": "2022-12-09 18:33:28 -0500", "message": "show game board in all the game phases"}, {"oid": "33a333c48e94ba8f4c01564ba937346e61baec60", "committedDate": "2023-02-06 18:14:56 -0500", "message": "issue 4158"}, {"oid": "cfb5bc8ba02e0a06816ba15c222272770d7134e7", "committedDate": "2023-02-07 10:33:26 -0500", "message": "issue 4158"}, {"oid": "32e47d1ef57ce582e62ffb5830093bd68665acb9", "committedDate": "2023-02-08 09:55:36 -0500", "message": "correct issues"}]}, {"oid": "58b8c9cc3431375b3c8a877637fef5719c20e7c2", "url": "https://github.com/MegaMek/megamek/commit/58b8c9cc3431375b3c8a877637fef5719c20e7c2", "message": "Added requested change to loadImage", "committedDate": "2020-09-15T17:05:17Z", "type": "commit"}, {"oid": "df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "url": "https://github.com/MegaMek/megamek/commit/df19b0fd53cbd3f31123fa74f9ff85abdc26dfb2", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-09-15T17:06:01Z", "type": "commit"}, {"oid": "c6ca70022320199f2c8075cf223638273f363818", "url": "https://github.com/MegaMek/megamek/commit/c6ca70022320199f2c8075cf223638273f363818", "message": "Added missing reference and slight code change", "committedDate": "2020-09-15T17:14:08Z", "type": "commit"}, {"oid": "e50b4ae6a4f3d1be4d0375a63bbf116017f6d8b7", "url": "https://github.com/MegaMek/megamek/commit/e50b4ae6a4f3d1be4d0375a63bbf116017f6d8b7", "message": "Removed line", "committedDate": "2020-09-15T17:16:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzMjM4NQ==", "url": "https://github.com/MegaMek/megamek/pull/2202#discussion_r488832385", "body": "```suggestion\r\n                MegaMek.getLogger().error(this, ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n          \n          \n            \n                            MegaMek.getLogger().error(this, ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">MegaMek</span><span class=\"pl-k\">.</span>getLogger()<span class=\"pl-k\">.</span>error(<span class=\"pl-c1\">this</span><span class=\"pl-k x x-first\">.</span><span class=\"x\">getClass(), </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">loadImage()</span><span class=\"pl-pds x x-last\">\"</span></span>, ex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">MegaMek</span><span class=\"pl-k\">.</span>getLogger()<span class=\"pl-k\">.</span>error(<span class=\"pl-c1\">this</span>, ex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-09-15T17:19:41Z", "path": "megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java", "diffHunk": "@@ -53,29 +54,25 @@ private void populateImage() {\n         }\n         URL src = getImageURL();\n         Image image = loadImage();\n-        if(image != null) {\n+        if (image != null) {\n             cache.put(src, image);\n         }\n     }\n \n     //decodes the Base64 string into an image and returns it\n     private Image loadImage() {\n         String b64 = getBASE64Image();\n-        if(b64 != null) {\n+        if (b64 != null) {\n             BufferedImage newImage = null;\n-            ByteArrayInputStream bais = null;\n-            try {\n-                bais = new ByteArrayInputStream(\n-                        Base64.getDecoder().decode(b64.getBytes()));\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(\n+                        Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n-                bais.close();\n-            } catch (Throwable ex) {\n-                ex.printStackTrace();\n+            } catch (Exception ex) {\n+                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);", "originalCommit": "e50b4ae6a4f3d1be4d0375a63bbf116017f6d8b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60cb19974d8a2c3188151f1e06227c7484c4d333", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 45a353dea8..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 45a353dea8..416157868a 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this.getClass(), \"loadImage()\", ex);\n+                MegaMek.getLogger().error(this, ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "a3705404f7857df886e37a668af2234d7d48ef6e", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 416157868a..79e9f09bdd 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(this, ex);\n+                MegaMek.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "eaaefe2f38ec268d385ab361225b918182e0693d", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 79e9f09bdd..2f97254111 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                MegaMek.getLogger().error(ex);\n+                LogManager.getLogger().error(ex);\n             }\n             return newImage;\n         } else {\n", "next_change": {"commit": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "changed_code": [{"header": "diff --git a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\nindex 2f97254111..1e3be9cd9b 100644\n--- a/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n+++ b/megamek/src/megamek/client/ui/swing/util/BASE64ImageView.java\n", "chunk": "@@ -68,7 +68,7 @@ public class BASE64ImageView extends ImageView {\n                         Base64.getDecoder().decode(b64.getBytes()))) {\n                 newImage = ImageIO.read(bais);\n             } catch (Exception ex) {\n-                LogManager.getLogger().error(ex);\n+                LogManager.getLogger().error(\"\", ex);\n             }\n             return newImage;\n         } else {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f0bceb3490d21f1da6b6a7ac9e440c2252d8ebc7", "message": "Merge commit", "committedDate": null}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "committedDate": "2020-09-29 23:01:52 +0200", "message": "Removing deprecated logger method calls"}, {"oid": "eaaefe2f38ec268d385ab361225b918182e0693d", "committedDate": "2021-12-11 15:38:41 -0500", "message": "Initial push to fully converting to using Log4j 2 instead of Log4j 1"}, {"oid": "7cf0654f22498c81d937eb49ec5b0d82bd8061a8", "committedDate": "2021-12-17 16:40:31 -0500", "message": "Finishing internal cleanups"}, {"oid": "77c3784bc07718bf23af8fc439af5e467ec0fb04", "committedDate": "2021-12-20 15:28:48 -0500", "message": "Actually print the stacktrace for individual exceptions"}, {"oid": "2f31805840da3aec87ab248e781265acb449600a", "committedDate": "2022-02-11 19:37:47 -0500", "message": "Yet more spacing fixes... MegaMek needs a ton of these"}, {"oid": "0cf163bb479740835a53ee5c1af887819b34d1a0", "committedDate": "2022-03-28 22:35:11 -0400", "message": "Fixing unused imports"}]}, {"oid": "60cb19974d8a2c3188151f1e06227c7484c4d333", "url": "https://github.com/MegaMek/megamek/commit/60cb19974d8a2c3188151f1e06227c7484c4d333", "message": "Add suggested change\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-09-15T18:34:03Z", "type": "commit"}]}