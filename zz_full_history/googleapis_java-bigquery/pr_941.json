{"pr_number": 941, "pr_title": "fix: make sure to fall back to old query path when query job is incomplete", "pr_author": "stephaniewang526", "pr_createdAt": "2020-11-12T19:58:45Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/941", "merge_commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "timeline": [{"oid": "4231057ca98bf0c76d615630f0c0332cc349ff6b", "url": "https://github.com/googleapis/java-bigquery/commit/4231057ca98bf0c76d615630f0c0332cc349ff6b", "message": "fix: make sure to fall back to old query path when query job is incomplete (takes more than 10s)", "committedDate": "2020-11-12T19:58:05Z", "type": "commit"}, {"oid": "fd75e609c70208c04d79221c2188fbc564a739ec", "url": "https://github.com/googleapis/java-bigquery/commit/fd75e609c70208c04d79221c2188fbc564a739ec", "message": "nit", "committedDate": "2020-11-12T19:59:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407473", "body": "This block reads quite confusing now.\r\n\r\nconsider flipping it..\r\n\r\nif (results.getJobComplete() && results.getSchema() != null) {\r\n  schema = Schema.fromPb(results.getSchema());\r\n  // Your logic below for numRows, numDml...\r\n} else {\r\n  JobId jobId = ....\r\n....\r\n}", "bodyText": "This block reads quite confusing now.\nconsider flipping it..\nif (results.getJobComplete() && results.getSchema() != null) {\nschema = Schema.fromPb(results.getSchema());\n// Your logic below for numRows, numDml...\n} else {\nJobId jobId = ....\n....\n}", "bodyHTML": "<p dir=\"auto\">This block reads quite confusing now.</p>\n<p dir=\"auto\">consider flipping it..</p>\n<p dir=\"auto\">if (results.getJobComplete() &amp;&amp; results.getSchema() != null) {<br>\nschema = Schema.fromPb(results.getSchema());<br>\n// Your logic below for numRows, numDml...<br>\n} else {<br>\nJobId jobId = ....<br>\n....<br>\n}</p>", "author": "epavan123", "createdAt": "2020-11-12T20:30:35Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,7 +1268,7 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n+    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NTk4MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523075981", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex ae3a5480..fd5ec931 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1268,13 +1268,8 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n \n     long numRows;\n     Schema schema;\n-    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n", "next_change": {"commit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex fd5ec931..f1296086 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1278,6 +1278,9 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n         numRows = results.getTotalRows().longValue();\n       }\n     } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n       TableResult tableResult = job.getQueryResults();\n", "next_change": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f1296086..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex ae3a5480..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1268,13 +1268,8 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n \n     long numRows;\n     Schema schema;\n-    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n", "next_change": null}]}, "commits_in_main": [{"oid": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "message": "Merge commit", "committedDate": null}, {"oid": "1739d57c59cfb6b90ccf3fcc9c07d1449fc17238", "committedDate": "2020-11-25 09:26:53 -0500", "message": "fix: update listPartitions() to support tables from other projects (#974)"}, {"oid": "68808e9f47c07af598324f3f07dd996bc1e5297b", "committedDate": "2021-06-15 12:41:10 -0400", "message": "fix: handle specific exceptions (#1370)"}, {"oid": "95f1a6c2e3281d61d38660749cf31fa504ddf8e0", "committedDate": "2021-06-24 17:48:15 -0400", "message": "feat: add support for jobs.delete (#1387)"}, {"oid": "44d97953febac11c9167efe6781c779f486355d0", "committedDate": "2021-07-14 09:58:29 -0400", "message": "feat: Implemented BigQueryRetryAlgorithm to retry on the basis of the configured re-triable error messages (#1426)"}, {"oid": "ec68c1145a89753e7d42458bbea86737cad6090f", "committedDate": "2021-08-11 12:08:08 -0400", "message": "feat: Updated `BigQueryRetryAlgorithm` so that it can retry on RateLimit Errors using RegEx (#1499)"}, {"oid": "4251b19f5b240b907aa5fc6d0cc64026245714cf", "committedDate": "2021-09-20 22:58:51 +0000", "message": "fix: do not throw NPE from BigQueryImpl.testIamPermissions (#1596)"}, {"oid": "fd06ad2728e52eac2e8570b0ba15830ad79470ad", "committedDate": "2021-10-21 14:46:12 -0400", "message": "fix: allow retry on connection establishing exceptions (#1666)"}, {"oid": "97a61dc90fb701986a51a12c9c83b7138894307a", "committedDate": "2021-12-14 15:00:09 -0500", "message": "feat: create Job retry for rate limit exceeded with status code 200 (#1744)"}, {"oid": "73e829bad373279b13fb59a56b1dc60eac0835a0", "committedDate": "2022-03-11 02:40:23 +0000", "message": "feat: set Table.Schema for permanent external tables (#1701)"}, {"oid": "380427511b33938209241f3800bff05914957f2b", "committedDate": "2022-05-06 08:33:08 -0400", "message": "feat: add Connection interface (#1374)"}, {"oid": "460ef318297fe5562a983f64c407b7c0fa5a9a8b", "committedDate": "2022-10-17 23:28:13 +0000", "message": "fix: properly handle external table schema on table update (#2236)"}, {"oid": "42c083ac680c657bf3f648fbce81004ecac8be87", "committedDate": "2022-11-11 14:16:08 -0500", "message": "feat: add fast query path support when empty jobId object is passed (#2349)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407880", "body": "Please also add a mock test showing that the subsequent getQueryResults call gets made.", "bodyText": "Please also add a mock test showing that the subsequent getQueryResults call gets made.", "bodyHTML": "<p dir=\"auto\">Please also add a mock test showing that the subsequent getQueryResults call gets made.</p>", "author": "epavan123", "createdAt": "2020-11-12T20:31:18Z", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/it/ITBigQueryTest.java", "diffHunk": "@@ -1813,6 +1813,36 @@ public void testFastDDLQuery() throws InterruptedException {\n     }\n   }\n \n+  @Test\n+  public void testFastQuerySlowDDL() throws InterruptedException {\n+    String tableName =", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NjA0Mg==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523076042", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "message": "Merge commit", "committedDate": null}, {"oid": "718ec2ae25150dceef8fb9bc3e2fcf6238fc2220", "committedDate": "2020-11-19 20:58:07 +0000", "message": "feat: add BIGNUMERIC support (#703)"}, {"oid": "07ff507295495ea1b4612957dbe2c4fd80850e25", "committedDate": "2020-11-30 13:52:57 -0500", "message": "test: add IT for HivePartitioningOptions (#981)"}, {"oid": "e2cd4f63ccc543e144f90e06eaadb2e96ce94943", "committedDate": "2020-12-05 00:42:04 +0000", "message": "feat: set requestId for fast query path in QueryRequestInfo instead of QueryJobConfiguration (#987)"}, {"oid": "46708f73bc7f112b2cf3bf673d38188035b589bd", "committedDate": "2020-12-15 16:44:01 -0500", "message": "chore: add env var for changing cloud-samples-data bucket (#1021)"}, {"oid": "cf68d8dc6bf421ea9c82c27760af03dd64b24a29", "committedDate": "2021-02-09 20:50:06 +0000", "message": "feat: add support for javascript UDFs determinism level (#1094)"}, {"oid": "3ce49334478dc0905cdcb476c739a49d296de922", "committedDate": "2021-04-09 17:48:05 -0400", "message": "feat: add support for parameterMode in QueryJobConfiguration to unblock JDBC migration to the Java client library (#1223)"}, {"oid": "fc3059eaecde25932cf2154affa8cea80a7824ee", "committedDate": "2021-04-30 16:38:02 +0000", "message": "test: add integration test for Column ACLs (#1266)"}, {"oid": "89958e9b5e4330b31878aa31b90569d2fd0310f2", "committedDate": "2021-05-04 15:14:02 +0000", "message": "feat: add support for user defined TVFs (#1278)"}, {"oid": "72b17151c4f3c4a3d298d3791e58c3112a14b4f5", "committedDate": "2021-05-18 14:06:34 -0400", "message": "feat: add ParquetOptions support and expose it in LoadJobConfiguration and ExternalTableDefinition classes (#1318)"}, {"oid": "ba528df03def71907e2811cf267718f090605d95", "committedDate": "2021-06-08 12:49:07 -0400", "message": "feat: add support for DecimalTargetTypes (#1345)"}, {"oid": "95f1a6c2e3281d61d38660749cf31fa504ddf8e0", "committedDate": "2021-06-24 17:48:15 -0400", "message": "feat: add support for jobs.delete (#1387)"}, {"oid": "b1fb57c0b43f4bdc9e32b821b32e95bb1ca8df3b", "committedDate": "2021-06-25 00:36:30 +0000", "message": "feat: add support for parameterized type (#1390)"}, {"oid": "d783292f4bd2d971235d8afa6318976856529cb5", "committedDate": "2021-06-28 14:53:45 -0400", "message": "feat: add support for table snapshot (#1320)"}, {"oid": "9d67e05d2a6fab0c9e6017dec33b0d74ad821825", "committedDate": "2021-07-08 18:32:07 +0000", "message": "feat: add dmlStatistics support (#1431)"}, {"oid": "fea5eca733d501b72b8713e555f54dc86bbde85f", "committedDate": "2021-07-20 14:17:22 -0400", "message": "deps: update dependency com.google.cloud:google-cloud-bigtable to v1.27.3 (#1452)"}, {"oid": "3db013eeb01f255e1bc40af21370241761f2b519", "committedDate": "2021-08-05 17:52:17 +0000", "message": "feat!: update dependency com.google.cloud:google-cloud-shared-config to v1 (#1466)"}, {"oid": "4c3b2de16584b9079dd4afd5a33aa8c00bc75f20", "committedDate": "2021-08-11 16:20:36 +0000", "message": "feat: add support for transactioninfo in query statistics (#1497)"}, {"oid": "e60bdff9e196a618a59a0544ec93f87b2ec5fc82", "committedDate": "2021-10-11 11:22:36 -0400", "message": "fix: fix timestamp rounding issue (#1645)"}, {"oid": "acc6cb8ad318ae41a9a3a00a5942025c14cbe681", "committedDate": "2021-10-15 15:09:25 -0400", "message": "feat: add session support (#1652)"}, {"oid": "f8f2e5e17d6542c8a3e4c7e412f6d25c61678834", "committedDate": "2021-11-05 19:56:15 +0000", "message": "chore(test): add back test condition (#1693)"}, {"oid": "13cc6e608fd501067f7c5dcd2f5b9a03c078b065", "committedDate": "2021-12-01 19:02:18 +0000", "message": "feat: add support for BI Engine Statistics (#1723)"}, {"oid": "73c4a7330b717416fb0c9ce21215460f25faa930", "committedDate": "2022-01-27 20:50:16 +0000", "message": "feat: add JSON type support (#1799)"}, {"oid": "18a11e88c0be5c0d5cf89d498439d5f8347e589d", "committedDate": "2022-02-02 11:47:12 -0500", "message": "feat: add Dataset ACL support (#1763)"}, {"oid": "fd3751a44be8f6401ea4b13684f862177ee9e976", "committedDate": "2022-02-11 15:47:33 -0500", "message": "feat: add Interval type support (#1844)"}, {"oid": "3e82960f75ced489f9f0e72fe45165ab866f1d8b", "committedDate": "2022-02-14 11:00:32 -0500", "message": "fix(java): add additional configurations to fix native image tests (#1859)"}, {"oid": "73e829bad373279b13fb59a56b1dc60eac0835a0", "committedDate": "2022-03-11 02:40:23 +0000", "message": "feat: set Table.Schema for permanent external tables (#1701)"}, {"oid": "426f86e0c88128c12d5591567f24eabc2db17159", "committedDate": "2022-03-31 16:07:05 -0400", "message": "chore: comment out the portion that is causing the failure in testSnapshotTableCopyJob (#1957)"}, {"oid": "eb9eaea2bbe025ce68d96846c6f9b3b0bad52299", "committedDate": "2022-04-05 15:48:18 -0400", "message": "chore: make policy tag setup use unique display names (#1962)"}, {"oid": "a8eb755cda581157bfdd79538c4b256dc0db0238", "committedDate": "2022-04-28 18:44:40 +0000", "message": "chore: IT clean-up (#2012)"}, {"oid": "380427511b33938209241f3800bff05914957f2b", "committedDate": "2022-05-06 08:33:08 -0400", "message": "feat: add Connection interface (#1374)"}, {"oid": "9993717d546c4039cb8c846787fdd131cc0c113f", "committedDate": "2022-05-18 11:38:55 -0400", "message": "fix: Flaky connenction close issue (#2044)"}, {"oid": "3764b5967c694fa34aef75804333e5a6101d912e", "committedDate": "2022-05-24 14:56:21 +0000", "message": "fix: Flaky testPositionalQueryParameters (#2059)"}, {"oid": "51694d8e07f19a5203f613888a4dd1f907ddb382", "committedDate": "2022-05-26 11:31:34 -0400", "message": "chore: NPE in testConnectionClose (#2072)"}, {"oid": "9e0b35136aed6ed489bff4d4ac86c4d5d83274be", "committedDate": "2022-05-31 14:09:56 -0400", "message": "feat: add destinationExpirationTime to CopyJobConfiguration (#2031)"}, {"oid": "a30e741ab240746e4acd002b41d0437303e5a4d5", "committedDate": "2022-06-14 09:32:24 +0530", "message": "Disabling testReadAPIIterationAndOrder and testReadAPIConnectionMultiClose (#2118)"}, {"oid": "b19ad767a53a9bd5d14b4cb36716cbb1c7b44ed6", "committedDate": "2022-07-15 09:00:55 -0700", "message": "feat(bigquery): enable use of GEOGRAPHY query params (#2158)"}, {"oid": "ebbd8f52853d3c0ca918a47d826474cc5825a58a", "committedDate": "2022-07-20 10:08:30 +0530", "message": "feat: Add decimal target type (#2166)"}, {"oid": "c1ca09e41bb9d4b070e241437b46d717e66f4944", "committedDate": "2022-08-04 17:39:21 -0400", "message": "deps: update dependency com.google.apis:google-api-services-bigquery to v2-rev20220716-2.0.0 (#2202)"}, {"oid": "3b4bb67e0f3a3cd0885236015bcf29584fd2652f", "committedDate": "2022-08-24 13:03:54 -0400", "message": "chore: run modelUpdate tests (#2238)"}, {"oid": "fd3d3c57afed84b4d00aab438d79472a6afa001b", "committedDate": "2022-08-24 17:14:31 +0000", "message": "feat: add preview support for default values (#2244)"}, {"oid": "856893f4d8f1b419365d8f179ce9f9e571dec718", "committedDate": "2022-08-29 12:42:35 -0400", "message": "feat: Add preserveAsciiControlCharacters to CsvOptions (#2143)"}, {"oid": "8c488e64259bd67716342f48f96d2932c5e57c3e", "committedDate": "2022-09-12 15:48:52 -0400", "message": "feat: add reference file schema option for federated formats (#2269)"}, {"oid": "80fa47834f3ef536f553702dee3ddc80e18981bb", "committedDate": "2022-10-12 19:32:02 +0530", "message": "feat: Add executeSelectAsync and Refactor (#2294)"}, {"oid": "113303fb41ec4855bb81a5bd3c7f8984bc70da3e", "committedDate": "2022-11-04 12:51:22 -0400", "message": "feat: add getTimestampInstant() method to FieldValue (#2350)"}, {"oid": "42c083ac680c657bf3f648fbce81004ecac8be87", "committedDate": "2022-11-11 14:16:08 -0500", "message": "feat: add fast query path support when empty jobId object is passed (#2349)"}, {"oid": "2effed158af6db27344bc610e20f19e547f6b922", "committedDate": "2022-12-13 18:54:13 +0000", "message": "chore: fix BiEngineReason Message (#2443)"}, {"oid": "325773757e811172236eb3221926025b82f5db64", "committedDate": "2023-01-26 13:31:58 -0500", "message": "feat: add collation for Case sensitive string column (#2490)"}, {"oid": "9363f978d74912f12957e816708feeaf4776442b", "committedDate": "2023-01-27 10:32:50 -0500", "message": "chore: fix dataset deletion in test (#2494)"}, {"oid": "6b7c0a9780a72cff1250253b8d20ae889941a295", "committedDate": "2023-02-01 20:46:11 +0000", "message": "chore: fix named query parameter struct tests (#2504)"}, {"oid": "e431c17efe0f69d084f119463ca8bdb25047a7fe", "committedDate": "2023-02-14 14:02:53 -0500", "message": "feat: add support for session_id in load jobs (#2519)"}, {"oid": "2186c64e523e030a777eec447bc1f22802f56617", "committedDate": "2023-03-10 15:43:44 -0500", "message": "feat: add support for clone (#2553)"}]}, {"oid": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "url": "https://github.com/googleapis/java-bigquery/commit/e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "message": "address comments", "committedDate": "2020-11-13T16:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523163804", "body": "Please add a comment here.\r\n\r\n// Query is long running (> 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.", "bodyText": "Please add a comment here.\n// Query is long running (> 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.", "bodyHTML": "<p dir=\"auto\">Please add a comment here.</p>\n<p dir=\"auto\">// Query is long running (&gt; 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.</p>", "author": "epavan123", "createdAt": "2020-11-13T19:01:04Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,20 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {", "originalCommit": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NTA2MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523165061", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T19:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA=="}], "type": "inlineReview", "revised_code": {"commit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex fd5ec931..f1296086 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1278,6 +1278,9 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n         numRows = results.getTotalRows().longValue();\n       }\n     } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n       TableResult tableResult = job.getQueryResults();\n", "next_change": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f1296086..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex fd5ec931..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1278,10 +1278,12 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n         numRows = results.getTotalRows().longValue();\n       }\n     } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}, "commits_in_main": [{"oid": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "message": "Merge commit", "committedDate": null}, {"oid": "1739d57c59cfb6b90ccf3fcc9c07d1449fc17238", "committedDate": "2020-11-25 09:26:53 -0500", "message": "fix: update listPartitions() to support tables from other projects (#974)"}, {"oid": "68808e9f47c07af598324f3f07dd996bc1e5297b", "committedDate": "2021-06-15 12:41:10 -0400", "message": "fix: handle specific exceptions (#1370)"}, {"oid": "95f1a6c2e3281d61d38660749cf31fa504ddf8e0", "committedDate": "2021-06-24 17:48:15 -0400", "message": "feat: add support for jobs.delete (#1387)"}, {"oid": "44d97953febac11c9167efe6781c779f486355d0", "committedDate": "2021-07-14 09:58:29 -0400", "message": "feat: Implemented BigQueryRetryAlgorithm to retry on the basis of the configured re-triable error messages (#1426)"}, {"oid": "ec68c1145a89753e7d42458bbea86737cad6090f", "committedDate": "2021-08-11 12:08:08 -0400", "message": "feat: Updated `BigQueryRetryAlgorithm` so that it can retry on RateLimit Errors using RegEx (#1499)"}, {"oid": "4251b19f5b240b907aa5fc6d0cc64026245714cf", "committedDate": "2021-09-20 22:58:51 +0000", "message": "fix: do not throw NPE from BigQueryImpl.testIamPermissions (#1596)"}, {"oid": "fd06ad2728e52eac2e8570b0ba15830ad79470ad", "committedDate": "2021-10-21 14:46:12 -0400", "message": "fix: allow retry on connection establishing exceptions (#1666)"}, {"oid": "97a61dc90fb701986a51a12c9c83b7138894307a", "committedDate": "2021-12-14 15:00:09 -0500", "message": "feat: create Job retry for rate limit exceeded with status code 200 (#1744)"}, {"oid": "73e829bad373279b13fb59a56b1dc60eac0835a0", "committedDate": "2022-03-11 02:40:23 +0000", "message": "feat: set Table.Schema for permanent external tables (#1701)"}, {"oid": "380427511b33938209241f3800bff05914957f2b", "committedDate": "2022-05-06 08:33:08 -0400", "message": "feat: add Connection interface (#1374)"}, {"oid": "460ef318297fe5562a983f64c407b7c0fa5a9a8b", "committedDate": "2022-10-17 23:28:13 +0000", "message": "fix: properly handle external table schema on table update (#2236)"}, {"oid": "42c083ac680c657bf3f648fbce81004ecac8be87", "committedDate": "2022-11-11 14:16:08 -0500", "message": "feat: add fast query path support when empty jobId object is passed (#2349)"}]}, {"oid": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "url": "https://github.com/googleapis/java-bigquery/commit/6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "message": "add comment", "committedDate": "2020-11-13T19:03:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523166440", "body": "nit: simplify as `return job.getQueryResults();` ?", "bodyText": "nit: simplify as return job.getQueryResults(); ?", "bodyHTML": "<p dir=\"auto\">nit: simplify as <code>return job.getQueryResults();</code> ?</p>", "author": "shollyman", "createdAt": "2020-11-13T19:06:36Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,23 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n+      JobId jobId = JobId.fromPb(results.getJobReference());\n+      Job job = getJob(jobId, options);\n+      TableResult tableResult = job.getQueryResults();", "originalCommit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE4MzEwNQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523183105", "bodyText": "done - ty!", "author": "stephaniewang526", "createdAt": "2020-11-13T19:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f1296086..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f1296086..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}, "commits_in_main": [{"oid": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "message": "Merge commit", "committedDate": null}, {"oid": "1739d57c59cfb6b90ccf3fcc9c07d1449fc17238", "committedDate": "2020-11-25 09:26:53 -0500", "message": "fix: update listPartitions() to support tables from other projects (#974)"}, {"oid": "68808e9f47c07af598324f3f07dd996bc1e5297b", "committedDate": "2021-06-15 12:41:10 -0400", "message": "fix: handle specific exceptions (#1370)"}, {"oid": "95f1a6c2e3281d61d38660749cf31fa504ddf8e0", "committedDate": "2021-06-24 17:48:15 -0400", "message": "feat: add support for jobs.delete (#1387)"}, {"oid": "44d97953febac11c9167efe6781c779f486355d0", "committedDate": "2021-07-14 09:58:29 -0400", "message": "feat: Implemented BigQueryRetryAlgorithm to retry on the basis of the configured re-triable error messages (#1426)"}, {"oid": "ec68c1145a89753e7d42458bbea86737cad6090f", "committedDate": "2021-08-11 12:08:08 -0400", "message": "feat: Updated `BigQueryRetryAlgorithm` so that it can retry on RateLimit Errors using RegEx (#1499)"}, {"oid": "4251b19f5b240b907aa5fc6d0cc64026245714cf", "committedDate": "2021-09-20 22:58:51 +0000", "message": "fix: do not throw NPE from BigQueryImpl.testIamPermissions (#1596)"}, {"oid": "fd06ad2728e52eac2e8570b0ba15830ad79470ad", "committedDate": "2021-10-21 14:46:12 -0400", "message": "fix: allow retry on connection establishing exceptions (#1666)"}, {"oid": "97a61dc90fb701986a51a12c9c83b7138894307a", "committedDate": "2021-12-14 15:00:09 -0500", "message": "feat: create Job retry for rate limit exceeded with status code 200 (#1744)"}, {"oid": "73e829bad373279b13fb59a56b1dc60eac0835a0", "committedDate": "2022-03-11 02:40:23 +0000", "message": "feat: set Table.Schema for permanent external tables (#1701)"}, {"oid": "380427511b33938209241f3800bff05914957f2b", "committedDate": "2022-05-06 08:33:08 -0400", "message": "feat: add Connection interface (#1374)"}, {"oid": "460ef318297fe5562a983f64c407b7c0fa5a9a8b", "committedDate": "2022-10-17 23:28:13 +0000", "message": "fix: properly handle external table schema on table update (#2236)"}, {"oid": "42c083ac680c657bf3f648fbce81004ecac8be87", "committedDate": "2022-11-11 14:16:08 -0500", "message": "feat: add fast query path support when empty jobId object is passed (#2349)"}]}, {"oid": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "url": "https://github.com/googleapis/java-bigquery/commit/5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "message": "nit update", "committedDate": "2020-11-13T19:17:32Z", "type": "commit"}]}