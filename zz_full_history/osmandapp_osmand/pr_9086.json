{"pr_number": 9086, "pr_title": "Map source dialog 7658", "pr_author": "veliymolfar", "pr_createdAt": "2020-05-27T07:03:44Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/9086", "merge_commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "timeline": [{"oid": "d254de8598df7352f13de38ede23560631866cb1", "url": "https://github.com/osmandapp/OsmAnd/commit/d254de8598df7352f13de38ede23560631866cb1", "message": "add/edit map source dialog redesign", "committedDate": "2020-05-26T14:06:14Z", "type": "commit"}, {"oid": "6be3458ad3363a70a00138b61a11b2adc99f794c", "url": "https://github.com/osmandapp/OsmAnd/commit/6be3458ad3363a70a00138b61a11b2adc99f794c", "message": "Merge remote-tracking branch 'origin/master' into map_source_dialog_7658\n\n# Conflicts:\n#\tOsmAnd/res/values/strings.xml", "committedDate": "2020-05-27T06:59:47Z", "type": "commit"}, {"oid": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "url": "https://github.com/osmandapp/OsmAnd/commit/2151028d2db0c8ed079aaade2adad04966a0d2f8", "message": "small refactor", "committedDate": "2020-05-27T14:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYxNDUyNA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431614524", "body": "Wrong call", "bodyText": "Wrong call", "bodyHTML": "<p dir=\"auto\">Wrong call</p>", "author": "max-klaus", "createdAt": "2020-05-28T06:44:22Z", "path": "OsmAnd/src/net/osmand/plus/SQLiteTileSource.java", "diffHunk": "@@ -336,6 +338,8 @@ protected SQLiteConnection getDatabase(){\n \t}\n \n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n+\t\tdb = ctx.getSQLiteAPI().getOrCreateDatabase(", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88d3dc12eebfb84b4e3f5e8538222df2a1ca67cf", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\nindex 1f821d7921..c46af50212 100644\n--- a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n+++ b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n", "chunk": "@@ -338,9 +338,8 @@ public class SQLiteTileSource implements ITileSource {\n \t}\n \n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n-\t\tdb = ctx.getSQLiteAPI().getOrCreateDatabase(\n-\t\t\t\tctx.getAppPath(TILES_INDEX_DIR).getAbsolutePath() + \"/\" + name + SQLITE_EXT, false);\n-\t\tif (!onlyReadonlyAvailable) {\n+\t\tdb = getDatabase();\n+\t\tif (!onlyReadonlyAvailable && db != null) {\n \t\t\tint maxZoom = r.getMaximumZoomSupported();\n \t\t\tint minZoom = r.getMinimumZoomSupported();\n \t\t\tif (inversiveZoom) {\n", "next_change": {"commit": "fac931e801cbc9ebe19b30b01576c40135283e5f", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\nindex c46af50212..1c7d7d17c7 100644\n--- a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n+++ b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n", "chunk": "@@ -338,7 +337,7 @@ public class SQLiteTileSource implements ITileSource {\n \t}\n \n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n-\t\tdb = getDatabase();\n+\t\tSQLiteConnection db = getDatabase();\n \t\tif (!onlyReadonlyAvailable && db != null) {\n \t\t\tint maxZoom = r.getMaximumZoomSupported();\n \t\t\tint minZoom = r.getMinimumZoomSupported();\n", "next_change": {"commit": "848eb2cfbee61c2102d57773212ffb5600c7ea29", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\nindex 1c7d7d17c7..4ef77d76c7 100644\n--- a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n+++ b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n", "chunk": "@@ -337,6 +337,7 @@ public class SQLiteTileSource implements ITileSource {\n \t}\n \n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n+\t\tboolean openedBefore = isDbOpened();\n \t\tSQLiteConnection db = getDatabase();\n \t\tif (!onlyReadonlyAvailable && db != null) {\n \t\t\tint maxZoom = r.getMaximumZoomSupported();\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\nindex 1f821d7921..4ef77d76c7 100644\n--- a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n+++ b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n", "chunk": "@@ -338,9 +337,9 @@ public class SQLiteTileSource implements ITileSource {\n \t}\n \n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n-\t\tdb = ctx.getSQLiteAPI().getOrCreateDatabase(\n-\t\t\t\tctx.getAppPath(TILES_INDEX_DIR).getAbsolutePath() + \"/\" + name + SQLITE_EXT, false);\n-\t\tif (!onlyReadonlyAvailable) {\n+\t\tboolean openedBefore = isDbOpened();\n+\t\tSQLiteConnection db = getDatabase();\n+\t\tif (!onlyReadonlyAvailable && db != null) {\n \t\t\tint maxZoom = r.getMaximumZoomSupported();\n \t\t\tint minZoom = r.getMinimumZoomSupported();\n \t\t\tif (inversiveZoom) {\n", "next_change": {"commit": "1ecdc3ef83bce4c0d362c4051e30c37b3d914143", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\nindex 4ef77d76c7..863c2d0392 100644\n--- a/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n+++ b/OsmAnd/src/net/osmand/plus/SQLiteTileSource.java\n", "chunk": "@@ -339,6 +348,7 @@ public class SQLiteTileSource implements ITileSource {\n \tpublic void updateFromTileSourceTemplate(TileSourceTemplate r) {\n \t\tboolean openedBefore = isDbOpened();\n \t\tSQLiteConnection db = getDatabase();\n+\t\tboolean changed = false;\n \t\tif (!onlyReadonlyAvailable && db != null) {\n \t\t\tint maxZoom = r.getMaximumZoomSupported();\n \t\t\tint minZoom = r.getMinimumZoomSupported();\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "4406b60c6d0efe72f97914388007cddca8706311", "committedDate": "2020-08-17 18:35:12 +0200", "message": "Allow custom \"user-agent\" for tile download"}, {"oid": "1a9f9229cf17ad436b62cf4b5b1432f97e6bc940", "committedDate": "2020-10-29 15:51:25 +0200", "message": "Fix possible CursorWindowAllocationException"}, {"oid": "1ecdc3ef83bce4c0d362c4051e30c37b3d914143", "committedDate": "2021-07-22 18:23:00 +0300", "message": "Fix map sources backup"}, {"oid": "217668a84c57e19e498c5592f3e60bc935dd6755", "committedDate": "2021-11-14 12:23:33 +0300", "message": "Added min/max/step/value params for tile source"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYxNzI4NQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431617285", "body": "Extract renameSQLiteFile and renameGpxFile to FileUtilities", "bodyText": "Extract renameSQLiteFile and renameGpxFile to FileUtilities", "bodyHTML": "<p dir=\"auto\">Extract renameSQLiteFile and renameGpxFile to FileUtilities</p>", "author": "max-klaus", "createdAt": "2020-05-28T06:51:11Z", "path": "OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java", "diffHunk": "@@ -339,7 +328,7 @@ public void onClick(View v) {\n \t\t}\n \t}\n \n-\tprivate static File renameSQLiteFile(OsmandApplication ctx, File source, String newName,\n+\tpublic static File renameSQLiteFile(OsmandApplication ctx, File source, String newName,", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f69dc384dc4b7652540458e0a7604a97b60480d8", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\nindex 7de1aadcdd..6843e99a7c 100644\n--- a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n", "chunk": "@@ -266,134 +264,6 @@ public class LocalIndexesFragment extends OsmandExpandableListFragment implement\n \t\treturn true;\n \t}\n \n-\tpublic static void renameFile(final Activity a, final File f, final RenameCallback callback) {\n-\t\tAlertDialog.Builder b = new AlertDialog.Builder(a);\n-\t\tif (f.exists()) {\n-\t\t\tint xt = f.getName().lastIndexOf('.');\n-\t\t\tfinal String ext = xt == -1 ? \"\" : f.getName().substring(xt);\n-\t\t\tfinal String originalName = xt == -1 ? f.getName() : f.getName().substring(0, xt);\n-\t\t\tfinal EditText editText = new EditText(a);\n-\t\t\teditText.setText(originalName);\n-\t\t\teditText.addTextChangedListener(new TextWatcher() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n-\t\t\t\t}\n-\n-\t\t\t\t@Override\n-\t\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n-\t\t\t\t}\n-\n-\t\t\t\t@Override\n-\t\t\t\tpublic void afterTextChanged(Editable s) {\n-\t\t\t\t\tEditable text = editText.getText();\n-\t\t\t\t\tif (text.length() >= 1) {\n-\t\t\t\t\t\tif (ILLEGAL_FILE_NAME_CHARACTERS.matcher(text).find()) {\n-\t\t\t\t\t\t\teditText.setError(a.getString(R.string.file_name_containes_illegal_char));\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\tb.setTitle(R.string.shared_string_rename);\n-\t\t\tint leftPadding = AndroidUtils.dpToPx(a, 24f);\n-\t\t\tint topPadding = AndroidUtils.dpToPx(a, 4f);\n-\t\t\tb.setView(editText, leftPadding, topPadding, leftPadding, topPadding);\n-\t\t\t// Behaviour will be overwritten later;\n-\t\t\tb.setPositiveButton(R.string.shared_string_save, null);\n-\t\t\tb.setNegativeButton(R.string.shared_string_cancel, null);\n-\t\t\tfinal AlertDialog alertDialog = b.create();\n-\t\t\talertDialog.setOnShowListener(new DialogInterface.OnShowListener() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic void onShow(DialogInterface dialog) {\n-\t\t\t\t\talertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(\n-\t\t\t\t\t\t\tnew View.OnClickListener() {\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onClick(View v) {\n-\t\t\t\t\t\t\t\t\tOsmandApplication app = (OsmandApplication) a.getApplication();\n-\t\t\t\t\t\t\t\t\tif (ext.equals(SQLiteTileSource.EXT)) {\n-\t\t\t\t\t\t\t\t\t\tif (renameSQLiteFile(app, f, editText.getText().toString() + ext,\n-\t\t\t\t\t\t\t\t\t\t\t\tcallback) != null) {\n-\t\t\t\t\t\t\t\t\t\t\talertDialog.dismiss();\n-\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\tif (renameGpxFile(app, f, editText.getText().toString() + ext,\n-\t\t\t\t\t\t\t\t\t\t\t\tfalse, callback) != null) {\n-\t\t\t\t\t\t\t\t\t\t\talertDialog.dismiss();\n-\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\talertDialog.show();\n-\t\t}\n-\t}\n-\n-\tpublic static File renameSQLiteFile(OsmandApplication ctx, File source, String newName,\n-\t                                     RenameCallback callback) {\n-\t\tFile dest = checkRenamePossibility(ctx, source, newName, false);\n-\t\tif (dest == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tif (!dest.getParentFile().exists()) {\n-\t\t\tdest.getParentFile().mkdirs();\n-\t\t}\n-\t\tif (source.renameTo(dest)) {\n-\t\t\tfinal String[] suffixes = new String[]{\"-journal\", \"-wal\", \"-shm\"};\n-\t\t\tfor (String s : suffixes) {\n-\t\t\t\tFile file = new File(ctx.getDatabasePath(source + s).toString());\n-\t\t\t\tif (file.exists()) {\n-\t\t\t\t\tfile.renameTo(ctx.getDatabasePath(dest + s));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif (callback != null) {\n-\t\t\t\tcallback.renamedTo(dest);\n-\t\t\t}\n-\t\t\treturn dest;\n-\t\t} else {\n-\t\t\tToast.makeText(ctx, R.string.file_can_not_be_renamed, Toast.LENGTH_LONG).show();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static File renameGpxFile(OsmandApplication ctx, File source, String newName, boolean dirAllowed,\n-\t                                 RenameCallback callback) {\n-\t\tFile dest = checkRenamePossibility(ctx, source, newName, dirAllowed);\n-\t\tif (dest == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tif (!dest.getParentFile().exists()) {\n-\t\t\tdest.getParentFile().mkdirs();\n-\t\t}\n-\t\tif (source.renameTo(dest)) {\n-\t\t\tctx.getGpxDbHelper().rename(source, dest);\n-\t\t\tif (callback != null) {\n-\t\t\t\tcallback.renamedTo(dest);\n-\t\t\t}\n-\t\t\treturn dest;\n-\t\t} else {\n-\t\t\tToast.makeText(ctx, R.string.file_can_not_be_renamed, Toast.LENGTH_LONG).show();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static File checkRenamePossibility(OsmandApplication ctx, File source, String newName, boolean dirAllowed) {\n-\t\tif (Algorithms.isEmpty(newName)) {\n-\t\t\tToast.makeText(ctx, R.string.empty_filename, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\tPattern illegalCharactersPattern = dirAllowed ? ILLEGAL_PATH_NAME_CHARACTERS : ILLEGAL_FILE_NAME_CHARACTERS;\n-\t\tif (illegalCharactersPattern.matcher(newName).find()) {\n-\t\t\tToast.makeText(ctx, R.string.file_name_containes_illegal_char, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\tFile dest = new File(source.getParentFile(), newName);\n-\t\tif (dest.exists()) {\n-\t\t\tToast.makeText(ctx, R.string.file_with_name_already_exists, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn dest;\n-\t}\n-\n \t@Override\n \tpublic void onMapSourceUpdated() {\n \t\tgetDownloadActivity().reloadLocalIndexes();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\nindex 7de1aadcdd..89914c522c 100644\n--- a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n", "chunk": "@@ -266,134 +259,6 @@ public class LocalIndexesFragment extends OsmandExpandableListFragment implement\n \t\treturn true;\n \t}\n \n-\tpublic static void renameFile(final Activity a, final File f, final RenameCallback callback) {\n-\t\tAlertDialog.Builder b = new AlertDialog.Builder(a);\n-\t\tif (f.exists()) {\n-\t\t\tint xt = f.getName().lastIndexOf('.');\n-\t\t\tfinal String ext = xt == -1 ? \"\" : f.getName().substring(xt);\n-\t\t\tfinal String originalName = xt == -1 ? f.getName() : f.getName().substring(0, xt);\n-\t\t\tfinal EditText editText = new EditText(a);\n-\t\t\teditText.setText(originalName);\n-\t\t\teditText.addTextChangedListener(new TextWatcher() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n-\t\t\t\t}\n-\n-\t\t\t\t@Override\n-\t\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n-\t\t\t\t}\n-\n-\t\t\t\t@Override\n-\t\t\t\tpublic void afterTextChanged(Editable s) {\n-\t\t\t\t\tEditable text = editText.getText();\n-\t\t\t\t\tif (text.length() >= 1) {\n-\t\t\t\t\t\tif (ILLEGAL_FILE_NAME_CHARACTERS.matcher(text).find()) {\n-\t\t\t\t\t\t\teditText.setError(a.getString(R.string.file_name_containes_illegal_char));\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\tb.setTitle(R.string.shared_string_rename);\n-\t\t\tint leftPadding = AndroidUtils.dpToPx(a, 24f);\n-\t\t\tint topPadding = AndroidUtils.dpToPx(a, 4f);\n-\t\t\tb.setView(editText, leftPadding, topPadding, leftPadding, topPadding);\n-\t\t\t// Behaviour will be overwritten later;\n-\t\t\tb.setPositiveButton(R.string.shared_string_save, null);\n-\t\t\tb.setNegativeButton(R.string.shared_string_cancel, null);\n-\t\t\tfinal AlertDialog alertDialog = b.create();\n-\t\t\talertDialog.setOnShowListener(new DialogInterface.OnShowListener() {\n-\t\t\t\t@Override\n-\t\t\t\tpublic void onShow(DialogInterface dialog) {\n-\t\t\t\t\talertDialog.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(\n-\t\t\t\t\t\t\tnew View.OnClickListener() {\n-\t\t\t\t\t\t\t\t@Override\n-\t\t\t\t\t\t\t\tpublic void onClick(View v) {\n-\t\t\t\t\t\t\t\t\tOsmandApplication app = (OsmandApplication) a.getApplication();\n-\t\t\t\t\t\t\t\t\tif (ext.equals(SQLiteTileSource.EXT)) {\n-\t\t\t\t\t\t\t\t\t\tif (renameSQLiteFile(app, f, editText.getText().toString() + ext,\n-\t\t\t\t\t\t\t\t\t\t\t\tcallback) != null) {\n-\t\t\t\t\t\t\t\t\t\t\talertDialog.dismiss();\n-\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\tif (renameGpxFile(app, f, editText.getText().toString() + ext,\n-\t\t\t\t\t\t\t\t\t\t\t\tfalse, callback) != null) {\n-\t\t\t\t\t\t\t\t\t\t\talertDialog.dismiss();\n-\t\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t});\n-\t\t\t\t}\n-\t\t\t});\n-\t\t\talertDialog.show();\n-\t\t}\n-\t}\n-\n-\tpublic static File renameSQLiteFile(OsmandApplication ctx, File source, String newName,\n-\t                                     RenameCallback callback) {\n-\t\tFile dest = checkRenamePossibility(ctx, source, newName, false);\n-\t\tif (dest == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tif (!dest.getParentFile().exists()) {\n-\t\t\tdest.getParentFile().mkdirs();\n-\t\t}\n-\t\tif (source.renameTo(dest)) {\n-\t\t\tfinal String[] suffixes = new String[]{\"-journal\", \"-wal\", \"-shm\"};\n-\t\t\tfor (String s : suffixes) {\n-\t\t\t\tFile file = new File(ctx.getDatabasePath(source + s).toString());\n-\t\t\t\tif (file.exists()) {\n-\t\t\t\t\tfile.renameTo(ctx.getDatabasePath(dest + s));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif (callback != null) {\n-\t\t\t\tcallback.renamedTo(dest);\n-\t\t\t}\n-\t\t\treturn dest;\n-\t\t} else {\n-\t\t\tToast.makeText(ctx, R.string.file_can_not_be_renamed, Toast.LENGTH_LONG).show();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static File renameGpxFile(OsmandApplication ctx, File source, String newName, boolean dirAllowed,\n-\t                                 RenameCallback callback) {\n-\t\tFile dest = checkRenamePossibility(ctx, source, newName, dirAllowed);\n-\t\tif (dest == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\tif (!dest.getParentFile().exists()) {\n-\t\t\tdest.getParentFile().mkdirs();\n-\t\t}\n-\t\tif (source.renameTo(dest)) {\n-\t\t\tctx.getGpxDbHelper().rename(source, dest);\n-\t\t\tif (callback != null) {\n-\t\t\t\tcallback.renamedTo(dest);\n-\t\t\t}\n-\t\t\treturn dest;\n-\t\t} else {\n-\t\t\tToast.makeText(ctx, R.string.file_can_not_be_renamed, Toast.LENGTH_LONG).show();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static File checkRenamePossibility(OsmandApplication ctx, File source, String newName, boolean dirAllowed) {\n-\t\tif (Algorithms.isEmpty(newName)) {\n-\t\t\tToast.makeText(ctx, R.string.empty_filename, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\tPattern illegalCharactersPattern = dirAllowed ? ILLEGAL_PATH_NAME_CHARACTERS : ILLEGAL_FILE_NAME_CHARACTERS;\n-\t\tif (illegalCharactersPattern.matcher(newName).find()) {\n-\t\t\tToast.makeText(ctx, R.string.file_name_containes_illegal_char, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\tFile dest = new File(source.getParentFile(), newName);\n-\t\tif (dest.exists()) {\n-\t\t\tToast.makeText(ctx, R.string.file_with_name_already_exists, Toast.LENGTH_LONG).show();\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn dest;\n-\t}\n-\n \t@Override\n \tpublic void onMapSourceUpdated() {\n \t\tgetDownloadActivity().reloadLocalIndexes();\n", "next_change": {"commit": "643eaf3293105532bb0f1fd1034092774b7779b8", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\nindex 89914c522c..3081c0680b 100644\n--- a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n", "chunk": "@@ -261,7 +187,19 @@ public class LocalIndexesFragment extends OsmandExpandableListFragment implement\n \n \t@Override\n \tpublic void onMapSourceUpdated() {\n-\t\tgetDownloadActivity().reloadLocalIndexes();\n+\t\treloadLocalIndexes();\n+\t}\n+\n+\t@Override\n+\tpublic void renamedTo(File file) {\n+\t\treloadLocalIndexes();\n+\t}\n+\n+\tprivate void reloadLocalIndexes() {\n+\t\tDownloadActivity activity = getDownloadActivity();\n+\t\tif (activity != null) {\n+\t\t\tactivity.reloadLocalIndexes();\n+\t\t}\n \t}\n \n \tpublic class LoadLocalIndexTask extends AsyncTask<Void, LocalIndexInfo, List<LocalIndexInfo>>\n", "next_change": {"commit": "65a933ab95cb3680a2e1caba4abe8b3edfbf0ee9", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\nindex 3081c0680b..2c08c0e94e 100644\n--- a/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/download/ui/LocalIndexesFragment.java\n", "chunk": "@@ -205,12 +207,20 @@ public class LocalIndexesFragment extends OsmandExpandableListFragment implement\n \tpublic class LoadLocalIndexTask extends AsyncTask<Void, LocalIndexInfo, List<LocalIndexInfo>>\n \t\t\timplements AbstractLoadLocalIndexTask {\n \n+\t\tprivate boolean readFiles = true;\n \t\tprivate List<LocalIndexInfo> result;\n \n+\t\tpublic LoadLocalIndexTask() {\n+\t\t}\n+\n+\t\tpublic LoadLocalIndexTask(boolean readFiles) {\n+\t\t\tthis.readFiles = readFiles;\n+\t\t}\n+\n \t\t@Override\n \t\tprotected List<LocalIndexInfo> doInBackground(Void... params) {\n \t\t\tLocalIndexHelper helper = new LocalIndexHelper(getMyApplication());\n-\t\t\treturn helper.getLocalIndexData(this);\n+\t\t\treturn helper.getLocalIndexData(readFiles, true, this);\n \t\t}\n \n \t\t@Override\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "3d6131cd65aaa163255e81a1b2f966ce2c78d38c", "committedDate": "2020-06-09 14:15:09 +0300", "message": "not show rename btn for TILES_DATA"}, {"oid": "83c99e01b7d3270f8ae02d5589b9cc42c8c454c3", "committedDate": "2020-08-07 13:28:48 +0300", "message": "Material theme (2)"}, {"oid": "9bed3254b6a7b9d1fc664102c23ea4f6547d49b7", "committedDate": "2020-08-11 16:52:54 -0400", "message": "Fix a bunch of deprecations"}, {"oid": "9792ff3414bd7c0ebe536d1046c6ddbc0c15f7a9", "committedDate": "2020-08-20 17:12:12 +0300", "message": "Fix Material Theme"}, {"oid": "9b287b81b3c8d9bea162aa532030c617788e97a4", "committedDate": "2020-11-06 14:23:37 +0200", "message": "Fix #9627 Long press opens 2 menus (Local Maps)"}, {"oid": "270e7e873d52d9ae30b7889e2a967d10d96cc8cb", "committedDate": "2020-11-19 15:17:52 -0500", "message": "Performance: 'Collection.toArray()' call style"}, {"oid": "643eaf3293105532bb0f1fd1034092774b7779b8", "committedDate": "2021-01-11 07:21:16 +0200", "message": "Add RenameFileBottomSheet"}, {"oid": "4b93539c255e9c9f9b9e5de12c36f0541d3cade3", "committedDate": "2021-03-01 22:10:09 +0500", "message": "Clean up and refactoring"}, {"oid": "1813a99da1c9ce0d0d5fccfa364df53c3ae9f746", "committedDate": "2021-04-05 19:21:17 +0300", "message": "add srtmf map download option p2"}, {"oid": "b14f62822bc31763285469eef2fb3dc706fb1cf2", "committedDate": "2021-04-09 19:48:17 +0300", "message": "add srtm map download option, refactoring p1"}, {"oid": "9368b7383a5647e285748c63a9db65bdd8d04b5f", "committedDate": "2021-04-12 20:14:27 +0300", "message": "Refactoring SRTMf download ui, part 1"}, {"oid": "1ec3189a86ed1b5e0467b832558453d9c5b272c6", "committedDate": "2021-04-13 00:42:16 +0300", "message": "refactoring p.2"}, {"oid": "4a6ab0c6bbf0531fe6874b06bb6e17164a50f7db", "committedDate": "2021-04-15 21:55:52 +0300", "message": "refactoring p.3"}, {"oid": "45be6b1919d2b8894db70ab0673bc4f87a6e6c33", "committedDate": "2021-04-16 12:04:19 +0300", "message": "refactoring p.4: save SrtmDownloadItem elements in MultipleDownloadItem"}, {"oid": "a0927452337049d62698b59a310c3241132aeaa9", "committedDate": "2021-06-18 02:59:29 +0500", "message": "Better naming"}, {"oid": "65a933ab95cb3680a2e1caba4abe8b3edfbf0ee9", "committedDate": "2021-07-07 14:21:32 +0300", "message": "Speedup backup status"}, {"oid": "be5216cd8d38887ea8d84752b1d2621ee7290f5d", "committedDate": "2021-08-09 22:44:02 +0300", "message": "Move getColor methods to separate class"}, {"oid": "c4461ba956bb57904150864f28f30a8d2656bf18", "committedDate": "2021-09-21 17:46:08 +0500", "message": "Allow selection of all TTS and downloaded recorded voices"}, {"oid": "63e4990b6d4843439f1c967f879ffc37d27692c4", "committedDate": "2021-09-21 19:33:23 +0500", "message": "Small refactoring to reduce checks"}, {"oid": "c0ac4e58193b95be4361315f2974b0c13024ef73", "committedDate": "2021-09-24 18:28:14 +0500", "message": "Fix #10664"}, {"oid": "602c6a5809fa5260c9f527bc5e5b689f887ff659", "committedDate": "2021-11-16 15:13:20 +0600", "message": "Accessibility content labeling fixes"}, {"oid": "6cfe33b29d921a16cac3fbad4f7dff15746cd6a4", "committedDate": "2021-11-30 08:25:56 +0500", "message": "Fix #13055 Capitalize toast for all languages"}, {"oid": "d1d898aea3d8a7cf66557b4ca8cfb92d68d9dd9a", "committedDate": "2021-12-07 16:55:16 +0500", "message": "Move plugin-related packages and classes to `net.osmand.plus.plugins`"}, {"oid": "22ed1fe832b96bf6f447c44ee4ea4274fe6120be", "committedDate": "2021-12-07 17:00:40 +0500", "message": "Move OsmandBaseExpandableListAdapter, OsmandListActivity to `net.osmand.plus.base`"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}, {"oid": "7202eaf9cf3e387296eec396958050a15be9d171", "committedDate": "2021-12-07 17:16:43 +0500", "message": "Move CustomRegion, LocalIndexInfo, LocalIndexHelper to `net.osmand.plus.download`"}, {"oid": "47a19dc1880f4fae81f19d428df344ce9c3f19df", "committedDate": "2021-12-08 00:22:33 +0500", "message": "Move AndroidNetworkUtils, AndroidUtils, ColorUtilities, FileUtils, JsonUtils, OsmAndFormatter, PicassoUtils, UiUtilities to `net.osmand.plus.utils`"}, {"oid": "079c80827b03de60644b9b2083527258bd575ed3", "committedDate": "2022-03-11 11:07:28 +0300", "message": "removed TTS files from download maps menu"}, {"oid": "50a8b145c0a30b146fc818f3feb6bd1767ea7631", "committedDate": "2022-03-11 14:48:58 +0300", "message": " boolean check fix"}, {"oid": "ddbefc27f7219fc6249a2d2283c08d9cb040f760", "committedDate": "2022-03-11 18:30:37 +0200", "message": "Refactor and simplify ContextMenuAdapter and related classes"}, {"oid": "7596d4e71af9f1969f2a7d1140c96c5dca8e9e3f", "committedDate": "2022-03-12 16:16:27 +0200", "message": "Refactor and simplify ContextMenuAdapter and related classes p.2"}, {"oid": "22ffb162a5f035a4a6e6fb03d5db00f9e3e24057", "committedDate": "2022-03-12 16:20:50 +0200", "message": "Improve packaging"}, {"oid": "d39ca43583442d88f4c88342709e1aaccf4d36e1", "committedDate": "2022-03-21 14:54:22 +0200", "message": "Rename packages"}, {"oid": "e49fc0479bae7df6e6a80c849bb2b8e9a1a4bd77", "committedDate": "2022-03-23 17:45:43 +0200", "message": "Refactor and simplify ContextMenuAdapter and related classes p.3"}, {"oid": "8df8cd23a3ca87a8f0aaecdf55e67e86ee204e82", "committedDate": "2022-06-28 10:23:01 +0300", "message": "Fix \u211614661"}, {"oid": "17ce0223c5aef235645b92bd0430f721496b091f", "committedDate": "2022-06-28 12:15:39 +0300", "message": "Review fixes"}, {"oid": "f1dcc4d7206c501d152bced637217b65cc20ff84", "committedDate": "2022-07-15 22:09:41 +0300", "message": "Clean redundant fields initialisation"}, {"oid": "4e025d0ef6df0b52003b6aa39e6658b0a5dfa4a5", "committedDate": "2022-07-15 23:07:36 +0300", "message": "Remove unnecessary final modifier from local variables"}, {"oid": "eaca4a4b32a5445df654b1bbe8d2e3241eba01e3", "committedDate": "2022-07-29 15:58:38 +0300", "message": "Clear Mapillary cache"}, {"oid": "2034b9a6d304784f83fd8fa7cc3204e8519585d4", "committedDate": "2022-08-01 12:16:08 +0300", "message": "Fix on/off, filters, set limit for lines rendering"}, {"oid": "3f29fe541d8b6e554d7ccb79e16d96b594f4f246", "committedDate": "2022-08-01 18:06:41 +0300", "message": "Fix review"}, {"oid": "bd0d2d4180059122624e0fac64e8188f7c06d582", "committedDate": "2022-08-01 18:14:16 +0300", "message": "Merge pull request #14955 from osmandapp/issue_1398"}, {"oid": "c505ae7fd9fb7ffc4ba1048f7e0bd6f80aa691e3", "committedDate": "2022-08-17 17:02:19 +0300", "message": "Fix possible npe with deletion of heatmaps"}, {"oid": "3c1cdc46040eb25741d09be4632e4799282aefdd", "committedDate": "2022-08-17 18:21:44 +0300", "message": "Add heightmaps to local downloads"}, {"oid": "29c3d285fd9a440f6866e2fff15efdeb43341abb", "committedDate": "2022-09-26 17:48:08 +0300", "message": "Implement support for new Nautical Depth maps"}, {"oid": "6ead04964f0cea586f14c52e2d5d3032173727e8", "committedDate": "2022-09-30 14:46:08 +0300", "message": "Move static plugin methods to separate file PluginsHelper"}, {"oid": "6c680cd81f4f1627b8cd252976ef064c6509a340", "committedDate": "2023-01-31 15:57:49 +0500", "message": "Add .tif support to UI osmandapp/OsmAnd-Issues#1592"}, {"oid": "9867d5a6cc9ee1c5019cc4a091df95243b624698", "committedDate": "2023-02-20 16:48:06 +0300", "message": "Offline weather API refactoring"}, {"oid": "bdb5a7beca13c4324867d91d62188ea7afc00881", "committedDate": "2023-03-14 14:41:33 +0500", "message": "[OpenGL] Support slope/hillshade from 3D maps osmandapp/OsmAnd-Issues#1849"}, {"oid": "a75ae7bb9967f7ee7c0102e30804fa5b8d8f9e61", "committedDate": "2023-03-20 17:17:41 +0200", "message": "Merge branch 'master' into OfflineWeatherAndroid"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyNDA2OA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431624068", "body": "Import TileSourceManager", "bodyText": "Import TileSourceManager", "bodyHTML": "<p dir=\"auto\">Import TileSourceManager</p>", "author": "max-klaus", "createdAt": "2020-05-28T07:06:11Z", "path": "OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java", "diffHunk": "@@ -0,0 +1,453 @@\n+package net.osmand.plus.mapsource;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.graphics.drawable.Drawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.KeyEvent;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.ImageButton;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.android.material.textfield.TextInputLayout;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.map.TileSourceManager;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.SQLiteTileSource;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BaseOsmAndDialogFragment;\n+import net.osmand.plus.mapsource.InputZoomLevelsBottomSheet.OnZoomSetListener;\n+import net.osmand.plus.mapsource.ExpireTimeBottomSheet.OnExpireValueSetListener;\n+import net.osmand.plus.mapsource.MercatorProjectionBottomSheet.OnMercatorSelectedListener;\n+import net.osmand.plus.mapsource.TileStorageFormatBottomSheet.OnTileStorageFormatSelectedListener;\n+import net.osmand.util.Algorithms;\n+\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import static net.osmand.plus.download.ui.LocalIndexesFragment.renameSQLiteFile;\n+\n+public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n+\t\timplements OnZoomSetListener, OnExpireValueSetListener, OnMercatorSelectedListener,\n+\t\tOnTileStorageFormatSelectedListener {\n+\n+\tpublic static final String TAG = EditMapSourceDialogFragment.class.getName();\n+\tstatic final int EXPIRE_TIME_NEVER = -1;\n+\tprivate static final Log LOG = PlatformUtil.getLog(EditMapSourceDialogFragment.class);\n+\tprivate static final String MAPS_PLUGINS_URL = \"https://osmand.net/features/online-maps-plugin\";\n+\tprivate static final String PNG_EXT = \"png\";\n+\tprivate static final int MAX_ZOOM = 17;\n+\tprivate static final int MIN_ZOOM = 5;\n+\tprivate static final int TILE_SIZE = 256;\n+\tprivate static final int BIT_DENSITY = 16;\n+\tprivate static final int AVG_SIZE = 32000;\n+\tprivate static final String EDIT_LAYER_NAME_KEY = \"edit_layer_name_key\";\n+\tprivate static final String MIN_ZOOM_KEY = \"min_zoom_key\";\n+\tprivate static final String MAX_ZOOM_KEY = \"max_zoom_key\";\n+\tprivate static final String EXPIRE_TIME_KEY = \"expire_time_key\";\n+\tprivate static final String ELLIPTIC_KEY = \"elliptic_key\";\n+\tprivate static final String SQLITE_DB_KEY = \"sqlite_db_key\";\n+\tprivate OsmandApplication app;\n+\tprivate TextInputEditText nameEditText;\n+\tprivate TextInputEditText urlEditText;\n+\tprivate LinearLayout contentContainer;\n+\tprivate FrameLayout saveBtn;\n+\tprivate TextView saveBtnTitle;\n+\tprivate TileSourceManager.TileSourceTemplate template;", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88d3dc12eebfb84b4e3f5e8538222df2a1ca67cf", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..e3e2afd0a7 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -82,7 +84,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \tprivate LinearLayout contentContainer;\n \tprivate FrameLayout saveBtn;\n \tprivate TextView saveBtnTitle;\n-\tprivate TileSourceManager.TileSourceTemplate template;\n+\tprivate TileSourceTemplate template;\n \t@Nullable\n \tprivate String editedLayerName;\n \tprivate String urlToLoad = \"\";\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -82,7 +83,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \tprivate LinearLayout contentContainer;\n \tprivate FrameLayout saveBtn;\n \tprivate TextView saveBtnTitle;\n-\tprivate TileSourceManager.TileSourceTemplate template;\n+\tprivate TileSourceTemplate template;\n \t@Nullable\n \tprivate String editedLayerName;\n \tprivate String urlToLoad = \"\";\n", "next_change": {"commit": "f1dcc4d7206c501d152bced637217b65cc20ff84", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 528efff916..c139386dde 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -90,17 +97,33 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \tprivate int minZoom = MIN_ZOOM;\n \tprivate int maxZoom = MAX_ZOOM;\n \tprivate int expireTimeMinutes = EXPIRE_TIME_NEVER;\n-\tprivate boolean elliptic = false;\n-\tprivate boolean sqliteDB = false;\n+\tprivate boolean elliptic;\n+\tprivate boolean sqliteDB;\n \tprivate boolean nightMode;\n+\tprivate boolean fromTemplate;\n+\tprivate boolean wasChanged;\n \n-\tpublic static void showInstance(@NonNull FragmentManager fm,\n+\tpublic static void showInstance(@NonNull FragmentManager fragmentManager,\n \t\t\t\t\t\t\t\t\t@Nullable Fragment targetFragment,\n \t\t\t\t\t\t\t\t\t@Nullable String editedLayerName) {\n-\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n-\t\tfragment.setTargetFragment(targetFragment, 0);\n-\t\tfragment.setEditedLayerName(editedLayerName);\n-\t\tfragment.show(fm, TAG);\n+\t\tif (AndroidUtils.isFragmentCanBeAdded(fragmentManager, TAG)) {\n+\t\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n+\t\t\tfragment.setTargetFragment(targetFragment, 0);\n+\t\t\tfragment.setEditedLayerName(editedLayerName);\n+\t\t\tfragment.show(fragmentManager, TAG);\n+\t\t}\n+\t}\n+\n+\tpublic static void showInstance(@NonNull FragmentManager fragmentManager,\n+\t\t\t\t\t\t\t\t\t@NonNull TileSourceTemplate template) {\n+\t\tif (AndroidUtils.isFragmentCanBeAdded(fragmentManager, TAG)) {\n+\t\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n+\t\t\tfragment.setTemplate(template);\n+\t\t\tfragment.fromTemplate = true;\n+\t\t\tfragmentManager.beginTransaction()\n+\t\t\t\t\t.add(fragment, TAG)\n+\t\t\t\t\t.commitAllowingStateLoss();\n+\t\t}\n \t}\n \n \t@Override\n", "next_change": {"commit": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex c139386dde..4a70c3465c 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -129,7 +128,6 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t@Override\n \tpublic void onCreate(Bundle savedInstanceState) {\n \t\tsuper.onCreate(savedInstanceState);\n-\t\tapp = getMyApplication();\n \t\tnightMode = !app.getSettings().isLightContent();\n \t}\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "571ac59a0686b61fa454a2e3f280c5835d0e9b27", "committedDate": "2020-06-09 13:50:49 +0300", "message": "fix layouts on android 4"}, {"oid": "baec03ec1e395e243c6c77849426e33d444c7c63", "committedDate": "2020-06-09 14:30:34 +0300", "message": "add / edit toolbar title"}, {"oid": "690ddb52e7e71b09f4f52806c7e0297508fb9787", "committedDate": "2020-06-09 16:28:41 +0300", "message": "don`t save with empty name/url"}, {"oid": "765aafb4e7ce29c4561656da8143b5b6d731d0aa", "committedDate": "2020-06-09 16:51:56 +0300", "message": "warning dialog on zooms change for used source"}, {"oid": "0b9fe37de0ce952c37fd77593f77dc2aa989ac45", "committedDate": "2020-06-09 18:46:03 +0300", "message": "fix input layout on android 4"}, {"oid": "2fc466f546a5ed8fc34eb4aa38cb415328f30cfe", "committedDate": "2020-06-11 12:10:08 +0300", "message": "small refactor"}, {"oid": "b6c8ab7362755ab60e90c49c7510a4dc781e056b", "committedDate": "2020-06-11 18:06:48 +0300", "message": "add online source from url"}, {"oid": "8d83048dd2245c43d06a72752df2f8cf4844c276", "committedDate": "2020-06-11 18:32:02 +0300", "message": "open link in inner browser"}, {"oid": "f05effa1576b6e405ee52b08d906519359f83f19", "committedDate": "2020-06-12 11:35:45 +0300", "message": "fix exit dialog"}, {"oid": "404079888bbbb97372a6e83daf3464eb52ffb00b", "committedDate": "2020-06-12 12:13:37 +0300", "message": "show sqlite extension"}, {"oid": "9cc21370587a2facb1ff25a8b3b3b5704ecb13cf", "committedDate": "2020-06-12 13:12:08 +0300", "message": "remove duplicates on map storage change"}, {"oid": "a726955291a38a6b89c07d52cc94b2be29049457", "committedDate": "2020-06-12 13:32:11 +0300", "message": "hide keyboard on scroll"}, {"oid": "e27dc91a3b5499db12b34cc714351d3e505b3d25", "committedDate": "2020-06-12 13:36:27 +0300", "message": "save btn font"}, {"oid": "cdaa450de5f5316a8a96f8c06164e3014d2e7c87", "committedDate": "2020-06-12 13:41:43 +0300", "message": "fix text fields stroke color"}, {"oid": "a0c58cb624dc603d0e226ab0650ebe14d5f8e5e2", "committedDate": "2020-06-12 14:50:16 +0300", "message": "show errors on empty text fields"}, {"oid": "ab1050d43d0e39da59a008a4747f610e5c7e7c7c", "committedDate": "2020-06-12 15:20:46 +0300", "message": "fix text multiline in text fields"}, {"oid": "1e2f5e65816a8cb187d80cd172d290cdb078b112", "committedDate": "2020-06-12 15:23:38 +0300", "message": "set cursor at the end"}, {"oid": "73d7c93f679e24a8f5a766e6f96aab4ce970252a", "committedDate": "2020-06-12 17:01:03 +0300", "message": "showClearTilesWarningDialog for storage change"}, {"oid": "30674159e151a75a473b2746d47357afa84a8aba", "committedDate": "2020-06-12 17:15:46 +0300", "message": "Revert \"show sqlite extension\""}, {"oid": "30049f3cb3762045e4d6423eec305017fd56724d", "committedDate": "2020-06-15 14:13:27 +0300", "message": "refactor"}, {"oid": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "committedDate": "2020-06-15 14:39:59 +0300", "message": "refactor saving template"}, {"oid": "7f40160f0d920001fbb8977ee223fbe46334f5a2", "committedDate": "2020-06-16 18:30:25 +0300", "message": "small refactor"}, {"oid": "08bd2a8546e35489c4023b4460334fe48011bf9f", "committedDate": "2020-07-07 13:51:17 +0300", "message": "Material theme"}, {"oid": "c42838463247738da5f23e492ef9105919cb9428", "committedDate": "2020-08-18 00:10:57 +0200", "message": "Fix compilation"}, {"oid": "be5216cd8d38887ea8d84752b1d2621ee7290f5d", "committedDate": "2021-08-09 22:44:02 +0300", "message": "Move getColor methods to separate class"}, {"oid": "673d6a518b237ea5b8c014a83bfbff5871e9ad86", "committedDate": "2021-08-13 20:04:10 +0500", "message": "Fix possible `IllegalStateException` for Fragments"}, {"oid": "64e0ef58e85ba3c7716184154cf30e582d66ffaa", "committedDate": "2021-08-25 17:58:23 +0300", "message": "Add fragment manager check to AndroidUtils and remove some outdated screens"}, {"oid": "04acca615d803381b71b6a5a48bcecb86841bbff", "committedDate": "2021-08-25 18:18:33 +0300", "message": "Merge branch 'master' into colors_fixing"}, {"oid": "409161f7985fd3d3f55bc2436a75cc4e39037b66", "committedDate": "2021-09-20 13:05:00 +0300", "message": "Fix \"Edit online source - UI mistakes\""}, {"oid": "8fbdac8c8faabf4c407cdef19589bec3ae1d0b97", "committedDate": "2021-09-24 05:11:05 +0500", "message": "Delete Prolog lib completely and replace methods of its dependency"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}, {"oid": "47a19dc1880f4fae81f19d428df344ce9c3f19df", "committedDate": "2021-12-08 00:22:33 +0500", "message": "Move AndroidNetworkUtils, AndroidUtils, ColorUtilities, FileUtils, JsonUtils, OsmAndFormatter, PicassoUtils, UiUtilities to `net.osmand.plus.utils`"}, {"oid": "dcd96be76739562aea54b92f74d71b86aaa90b5a", "committedDate": "2022-03-16 19:43:34 +0200", "message": "Extract function \"showFullArticle\" to AndroidUtils as \"openUrl\""}, {"oid": "32bf60e2532f6555de264cb1b3b4deb7bec320c8", "committedDate": "2022-05-02 18:04:41 +0300", "message": "Fix Documentation links"}, {"oid": "635d042fe98149c1ac063a2d16554b1e23554e0f", "committedDate": "2022-05-13 12:06:15 +0200", "message": "Add links separate file"}, {"oid": "2b262759389f2e822b085b9e2b1cf4e7d7c0c3e5", "committedDate": "2022-05-31 14:21:05 +0500", "message": "Rename string resource"}, {"oid": "bef177c5d7a415b747e377b7ff2cda844bb6c05f", "committedDate": "2022-07-15 22:06:47 +0300", "message": "Update final fields"}, {"oid": "f1dcc4d7206c501d152bced637217b65cc20ff84", "committedDate": "2022-07-15 22:09:41 +0300", "message": "Clean redundant fields initialisation"}, {"oid": "4e025d0ef6df0b52003b6aa39e6658b0a5dfa4a5", "committedDate": "2022-07-15 23:07:36 +0300", "message": "Remove unnecessary final modifier from local variables"}, {"oid": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "committedDate": "2023-03-21 12:28:08 +0200", "message": "Review fixes"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyNjk1OA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431626958", "body": "Import View", "bodyText": "Import View", "bodyHTML": "<p dir=\"auto\">Import View</p>", "author": "max-klaus", "createdAt": "2020-05-28T07:12:16Z", "path": "OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java", "diffHunk": "@@ -0,0 +1,453 @@\n+package net.osmand.plus.mapsource;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.graphics.drawable.Drawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.KeyEvent;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.ImageButton;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.android.material.textfield.TextInputLayout;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.map.TileSourceManager;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.SQLiteTileSource;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BaseOsmAndDialogFragment;\n+import net.osmand.plus.mapsource.InputZoomLevelsBottomSheet.OnZoomSetListener;\n+import net.osmand.plus.mapsource.ExpireTimeBottomSheet.OnExpireValueSetListener;\n+import net.osmand.plus.mapsource.MercatorProjectionBottomSheet.OnMercatorSelectedListener;\n+import net.osmand.plus.mapsource.TileStorageFormatBottomSheet.OnTileStorageFormatSelectedListener;\n+import net.osmand.util.Algorithms;\n+\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import static net.osmand.plus.download.ui.LocalIndexesFragment.renameSQLiteFile;\n+\n+public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n+\t\timplements OnZoomSetListener, OnExpireValueSetListener, OnMercatorSelectedListener,\n+\t\tOnTileStorageFormatSelectedListener {\n+\n+\tpublic static final String TAG = EditMapSourceDialogFragment.class.getName();\n+\tstatic final int EXPIRE_TIME_NEVER = -1;\n+\tprivate static final Log LOG = PlatformUtil.getLog(EditMapSourceDialogFragment.class);\n+\tprivate static final String MAPS_PLUGINS_URL = \"https://osmand.net/features/online-maps-plugin\";\n+\tprivate static final String PNG_EXT = \"png\";\n+\tprivate static final int MAX_ZOOM = 17;\n+\tprivate static final int MIN_ZOOM = 5;\n+\tprivate static final int TILE_SIZE = 256;\n+\tprivate static final int BIT_DENSITY = 16;\n+\tprivate static final int AVG_SIZE = 32000;\n+\tprivate static final String EDIT_LAYER_NAME_KEY = \"edit_layer_name_key\";\n+\tprivate static final String MIN_ZOOM_KEY = \"min_zoom_key\";\n+\tprivate static final String MAX_ZOOM_KEY = \"max_zoom_key\";\n+\tprivate static final String EXPIRE_TIME_KEY = \"expire_time_key\";\n+\tprivate static final String ELLIPTIC_KEY = \"elliptic_key\";\n+\tprivate static final String SQLITE_DB_KEY = \"sqlite_db_key\";\n+\tprivate OsmandApplication app;\n+\tprivate TextInputEditText nameEditText;\n+\tprivate TextInputEditText urlEditText;\n+\tprivate LinearLayout contentContainer;\n+\tprivate FrameLayout saveBtn;\n+\tprivate TextView saveBtnTitle;\n+\tprivate TileSourceManager.TileSourceTemplate template;\n+\t@Nullable\n+\tprivate String editedLayerName;\n+\tprivate String urlToLoad = \"\";\n+\tprivate int minZoom = MIN_ZOOM;\n+\tprivate int maxZoom = MAX_ZOOM;\n+\tprivate int expireTimeMinutes = EXPIRE_TIME_NEVER;\n+\tprivate boolean elliptic = false;\n+\tprivate boolean sqliteDB = false;\n+\tprivate boolean nightMode;\n+\n+\tpublic static void showInstance(@NonNull FragmentManager fm,\n+\t\t\t\t\t\t\t\t\t@Nullable Fragment targetFragment,\n+\t\t\t\t\t\t\t\t\t@Nullable String editedLayerName) {\n+\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n+\t\tfragment.setTargetFragment(targetFragment, 0);\n+\t\tfragment.setEditedLayerName(editedLayerName);\n+\t\tfragment.show(fm, TAG);\n+\t}\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tapp = getMyApplication();\n+\t\tnightMode = !app.getSettings().isLightContent();\n+\t}\n+\n+\t@Override\n+\tpublic View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+\t\tif (savedInstanceState != null) {\n+\t\t\teditedLayerName = savedInstanceState.getString(EDIT_LAYER_NAME_KEY);\n+\t\t\tminZoom = savedInstanceState.getInt(MIN_ZOOM_KEY);\n+\t\t\tmaxZoom = savedInstanceState.getInt(MAX_ZOOM_KEY);\n+\t\t\texpireTimeMinutes = savedInstanceState.getInt(EXPIRE_TIME_KEY);\n+\t\t\telliptic = savedInstanceState.getBoolean(ELLIPTIC_KEY);\n+\t\t\tsqliteDB = savedInstanceState.getBoolean(SQLITE_DB_KEY);\n+\t\t}\n+\t\tView root = UiUtilities.getMaterialInflater(app, nightMode).inflate(R.layout.fragment_edit_map_source, container, false);\n+\t\tToolbar toolbar = root.findViewById(R.id.toolbar);\n+\t\tImageButton iconHelp = root.findViewById(R.id.toolbar_action);\n+\t\tDrawable closeDrawable = app.getUIUtilities().getIcon(AndroidUtils.getNavigationIconResId(app),\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\tDrawable helpDrawable = app.getUIUtilities().getIcon(R.drawable.ic_action_help,\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\ticonHelp.setImageDrawable(helpDrawable);\n+\t\ticonHelp.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tonHelpClick();\n+\t\t\t}\n+\t\t});\n+\t\ttoolbar.setNavigationIcon(closeDrawable);\n+\t\ttoolbar.setNavigationContentDescription(R.string.shared_string_close);\n+\t\ttoolbar.setNavigationOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tshowExitDialog();\n+\t\t\t}\n+\t\t});\n+\t\tint boxStrokeColor = nightMode\n+\t\t\t\t? ContextCompat.getColor(app, R.color.app_bar_color_light)\n+\t\t\t\t: ContextCompat.getColor(app, R.color.active_buttons_and_links_bg_pressed_dark);\n+\t\tTextInputLayout nameInputLayout = root.findViewById(R.id.name_input_layout);\n+\t\tnameInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\tnameEditText = root.findViewById(R.id.name_edit_text);\n+\t\tTextInputLayout urlInputLayout = root.findViewById(R.id.url_input_layout);\n+\t\turlInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\turlEditText = root.findViewById(R.id.url_edit_text);\n+\t\tnameEditText.addTextChangedListener(getTextWatcher());\n+\t\turlEditText.addTextChangedListener(getTextWatcher());\n+\t\tcontentContainer = root.findViewById(R.id.content_container);\n+\t\tsaveBtn = root.findViewById(R.id.save_button);\n+\t\tsaveBtnTitle = root.findViewById(R.id.save_button_title);\n+\t\tsaveBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tsaveTemplate();\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\ttemplate = new TileSourceManager.TileSourceTemplate(\"\", \"\", PNG_EXT, MAX_ZOOM, MIN_ZOOM, TILE_SIZE, BIT_DENSITY, AVG_SIZE);\n+\t\tif (editedLayerName != null) {\n+\t\t\tif (!editedLayerName.endsWith(IndexConstants.SQLITE_EXT)) {\n+\t\t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\t\ttemplate = TileSourceManager.createTileSourceTemplate(f);\n+\t\t\t\tsqliteDB = false;\n+\t\t\t} else {\n+\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\tFile tPath = app.getAppPath(IndexConstants.TILES_INDEX_DIR);\n+\t\t\t\tFile dir = new File(tPath, editedLayerName);\n+\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, dir, knownTemplates);\n+\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n+\t\t\t\ttemplate = new TileSourceManager.TileSourceTemplate(sqLiteTileSource.getName(),\n+\t\t\t\t\t\tsqLiteTileSource.getUrlTemplate(), PNG_EXT, sqLiteTileSource.getMaximumZoomSupported(),\n+\t\t\t\t\t\tsqLiteTileSource.getMinimumZoomSupported(), sqLiteTileSource.getTileSize(),\n+\t\t\t\t\t\tsqLiteTileSource.getBitDensity(), AVG_SIZE);\n+\t\t\t\ttemplate.setExpirationTimeMinutes(sqLiteTileSource.getExpirationTimeMinutes());\n+\t\t\t\ttemplate.setEllipticYTile(sqLiteTileSource.isEllipticYTile());\n+\t\t\t\tsqliteDB = true;\n+\t\t\t}\n+\t\t}\n+\t\tif (savedInstanceState == null) {\n+\t\t\turlToLoad = template.getUrlTemplate();\n+\t\t\texpireTimeMinutes = template.getExpirationTimeMinutes();\n+\t\t\tminZoom = template.getMinimumZoomSupported();\n+\t\t\tmaxZoom = template.getMaximumZoomSupported();\n+\t\t\telliptic = template.isEllipticYTile();\n+\t\t}\n+\t\tupdateUi();\n+\t\treturn root;\n+\t}\n+\n+\t@Override\n+\tpublic void onSaveInstanceState(@NonNull Bundle outState) {\n+\t\toutState.putString(EDIT_LAYER_NAME_KEY, editedLayerName);\n+\t\toutState.putInt(MIN_ZOOM_KEY, minZoom);\n+\t\toutState.putInt(MAX_ZOOM_KEY, maxZoom);\n+\t\toutState.putInt(EXPIRE_TIME_KEY, expireTimeMinutes);\n+\t\toutState.putBoolean(ELLIPTIC_KEY, elliptic);\n+\t\toutState.putBoolean(SQLITE_DB_KEY, sqliteDB);\n+\t\tsuper.onSaveInstanceState(outState);\n+\t}\n+\n+\t@Override\n+\tpublic void onResume() {\n+\t\tsuper.onResume();\n+\t\tDialog dialog = getDialog();\n+\t\tif (dialog != null) {\n+\t\t\tdialog.setOnKeyListener(new DialogInterface.OnKeyListener() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {\n+\t\t\t\t\tif (keyCode == android.view.KeyEvent.KEYCODE_BACK) {\n+\t\t\t\t\t\tif (event.getAction() == KeyEvent.ACTION_DOWN) {\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tshowExitDialog();\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onZoomSet(int min, int max) {\n+\t\t\tminZoom = min;\n+\t\t\tmaxZoom = max;\n+\t\t\tupdateDescription(ConfigurationItem.ZOOM_LEVELS);\n+\t}\n+\n+\t@Override\n+\tpublic void onExpireValueSet(int expireValue) {\n+\t\t\texpireTimeMinutes = expireValue;\n+\t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t}\n+\n+\t@Override\n+\tpublic void onMercatorSelected(boolean elliptic) {\n+\t\tif (isAdded()) {\n+\t\t\tthis.elliptic = elliptic;\n+\t\t\tupdateDescription(ConfigurationItem.MERCATOR_PROJECTION);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onStorageFormatSelected(boolean sqliteDb) {\n+\t\tif (isAdded()) {\n+\t\t\tthis.sqliteDB = sqliteDb;\n+\t\t\tupdateDescription(ConfigurationItem.STORAGE_FORMAT);\n+\t\t}\n+\t}\n+\n+\tprivate TextWatcher getTextWatcher() {\n+\t\treturn new TextWatcher() {\n+\t\t\t@Override\n+\t\t\tpublic void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n+\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n+\t\t\t\tString s = charSequence.toString();\n+\t\t\t\tif (Algorithms.isEmpty(s)) {\n+\t\t\t\t\tsaveBtn.setEnabled(false);\n+\t\t\t\t\tsaveBtnTitle.setEnabled(false);\n+\t\t\t\t} else {\n+\t\t\t\t\tsaveBtn.setEnabled(true);\n+\t\t\t\t\tsaveBtnTitle.setEnabled(true);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void afterTextChanged(Editable editable) {\n+\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\tprivate void saveTemplate() {\n+\t\ttry {\n+\t\t\tString newName = nameEditText.getText().toString();\n+\t\t\tString urlToLoad = urlEditText.getText().toString();\n+\t\t\ttemplate.setName(newName);\n+\t\t\ttemplate.setUrlToLoad(urlToLoad.isEmpty() ? null : urlToLoad.replace(\"{$x}\", \"{1}\").replace(\"{$y}\", \"{2}\").replace(\"{$z}\", \"{0}\"));\n+\t\t\ttemplate.setMinZoom(minZoom);\n+\t\t\ttemplate.setMaxZoom(maxZoom);\n+\t\t\ttemplate.setEllipticYTile(elliptic);\n+\t\t\ttemplate.setExpirationTimeMinutes(expireTimeMinutes);\n+\t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\tif (f.exists()) {\n+\t\t\t\tint extIndex = f.getName().lastIndexOf('.');\n+\t\t\t\tString ext = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n+\t\t\t\tString originalName = extIndex == -1 ? f.getName() : f.getName().substring(0, extIndex);\n+\t\t\t\tif (!Algorithms.objectEquals(newName, originalName)) {\n+\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(ext) && sqliteDB) {\n+\t\t\t\t\t\trenameSQLiteFile(app, f, newName, null);\n+\t\t\t\t\t} else if (!sqliteDB) {\n+\t\t\t\t\t\tf.renameTo(app.getAppPath(IndexConstants.TILES_INDEX_DIR + newName));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (sqliteDB) {\n+\t\t\t\tif (!f.exists() || f.isDirectory()) {\n+\t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n+\t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n+\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"0,1,2,3\",\n+\t\t\t\t\t\t\t\t\telliptic, false, \"\", expireTimeMinutes > 0,\n+\t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n+\t\t\t\t\t\t\t);\n+\t\t\t\t\tsqLiteTileSource.createDataBase();\n+\t\t\t\t} else {\n+\t\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, f, knownTemplates);\n+\t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n+\t\t\t\t\tsqLiteTileSource.updateFromTileSourceTemplate(template);\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tgetSettings().installTileSource(template);\n+\t\t\t}\n+\t\t\tFragment fragment = getTargetFragment();\n+\t\t\tif (fragment instanceof OnMapSourceUpdateListener) {\n+\t\t\t\t((OnMapSourceUpdateListener) fragment).onMapSourceUpdated();\n+\t\t\t}\n+\t\t} catch (RuntimeException e) {\n+\t\t\tLOG.error(\"Error on saving template \" + e);\n+\t\t}\n+\t}\n+\n+\tprivate void updateUi() {\n+\t\tnameEditText.setText(editedLayerName != null ? editedLayerName.replace(IndexConstants.SQLITE_EXT, \"\") : \"\");\n+\t\turlEditText.setText(urlToLoad);\n+\t\taddConfigurationItems(ConfigurationItem.values());\n+\t}\n+\n+\tprivate void onHelpClick() {\n+\t\tIntent i = new Intent(Intent.ACTION_VIEW);\n+\t\ti.setData(Uri.parse(MAPS_PLUGINS_URL));\n+\t\tif (AndroidUtils.isIntentSafe(app, i)) {\n+\t\t\tstartActivity(i);\n+\t\t}\n+\t}\n+\n+\tprivate void showExitDialog() {\n+\t\tContext themedContext = UiUtilities.getThemedContext(getActivity(), nightMode);\n+\t\tAlertDialog.Builder dismissDialog = new AlertDialog.Builder(themedContext);\n+\t\tdismissDialog.setTitle(getString(R.string.shared_string_dismiss));\n+\t\tdismissDialog.setMessage(getString(R.string.exit_without_saving));\n+\t\tdismissDialog.setNegativeButton(R.string.shared_string_cancel, null);\n+\t\tdismissDialog.setPositiveButton(R.string.shared_string_exit, new DialogInterface.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\tdismissDialog.show();\n+\t}\n+\n+\tprivate String getDescription(ConfigurationItem item) {\n+\t\tswitch (item) {\n+\t\t\tcase ZOOM_LEVELS:\n+\t\t\t\tString min = getString(R.string.ltr_or_rtl_combine_via_space, getString(R.string.shared_string_min), String.valueOf(minZoom));\n+\t\t\t\tString max = getString(R.string.ltr_or_rtl_combine_via_space, getString(R.string.shared_string_max), String.valueOf(maxZoom));\n+\t\t\t\treturn getString(R.string.ltr_or_rtl_combine_via_bold_point, min, max);\n+\t\t\tcase EXPIRE_TIME:\n+\t\t\t\treturn expireTimeMinutes == EXPIRE_TIME_NEVER\n+\t\t\t\t\t\t? getString(R.string.shared_string_never)\n+\t\t\t\t\t\t: getString(R.string.ltr_or_rtl_combine_via_space, String.valueOf(expireTimeMinutes), getString(R.string.osmand_parking_minute));\n+\t\t\tcase MERCATOR_PROJECTION:\n+\t\t\t\treturn elliptic ? getString(R.string.edit_tilesource_elliptic_tile) : getString(R.string.pseudo_mercator_projection);\n+\t\t\tcase STORAGE_FORMAT:\n+\t\t\t\treturn sqliteDB ? getString(R.string.sqlite_db_file) : getString(R.string.one_image_per_tile);\n+\t\t\tdefault:\n+\t\t\t\treturn \"\";\n+\t\t}\n+\t}\n+\n+\tprivate View.OnClickListener getClickListener(final ConfigurationItem item) {", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88d3dc12eebfb84b4e3f5e8538222df2a1ca67cf", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..e3e2afd0a7 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -380,7 +382,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t}\n \t}\n \n-\tprivate View.OnClickListener getClickListener(final ConfigurationItem item) {\n+\tprivate OnClickListener getClickListener(final ConfigurationItem item) {\n \t\treturn new View.OnClickListener() {\n \t\t\t@Override\n \t\t\tpublic void onClick(View view) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -380,7 +385,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t}\n \t}\n \n-\tprivate View.OnClickListener getClickListener(final ConfigurationItem item) {\n+\tprivate OnClickListener getClickListener(final ConfigurationItem item) {\n \t\treturn new View.OnClickListener() {\n \t\t\t@Override\n \t\t\tpublic void onClick(View view) {\n", "next_change": {"commit": "30049f3cb3762045e4d6423eec305017fd56724d", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 528efff916..32b53d627a 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -390,13 +464,14 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t@Override\n \t\t\tpublic void onClick(View view) {\n \t\t\t\tFragmentManager fm = getFragmentManager();\n+\t\t\t\tboolean newMapSource = Algorithms.isEmpty(editedLayerName) || fromTemplate;\n \t\t\t\tif (fm != null && !fm.isStateSaved()) {\n \t\t\t\t\tswitch (item) {\n \t\t\t\t\t\tcase ZOOM_LEVELS:\n \t\t\t\t\t\t\tInputZoomLevelsBottomSheet.showInstance(\n \t\t\t\t\t\t\t\t\tfm, EditMapSourceDialogFragment.this,\n \t\t\t\t\t\t\t\t\tR.string.map_source_zoom_levels, R.string.map_source_zoom_levels_descr,\n-\t\t\t\t\t\t\t\t\tminZoom, maxZoom\n+\t\t\t\t\t\t\t\t\tminZoom, maxZoom, newMapSource\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase EXPIRE_TIME:\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "571ac59a0686b61fa454a2e3f280c5835d0e9b27", "committedDate": "2020-06-09 13:50:49 +0300", "message": "fix layouts on android 4"}, {"oid": "baec03ec1e395e243c6c77849426e33d444c7c63", "committedDate": "2020-06-09 14:30:34 +0300", "message": "add / edit toolbar title"}, {"oid": "690ddb52e7e71b09f4f52806c7e0297508fb9787", "committedDate": "2020-06-09 16:28:41 +0300", "message": "don`t save with empty name/url"}, {"oid": "765aafb4e7ce29c4561656da8143b5b6d731d0aa", "committedDate": "2020-06-09 16:51:56 +0300", "message": "warning dialog on zooms change for used source"}, {"oid": "0b9fe37de0ce952c37fd77593f77dc2aa989ac45", "committedDate": "2020-06-09 18:46:03 +0300", "message": "fix input layout on android 4"}, {"oid": "2fc466f546a5ed8fc34eb4aa38cb415328f30cfe", "committedDate": "2020-06-11 12:10:08 +0300", "message": "small refactor"}, {"oid": "b6c8ab7362755ab60e90c49c7510a4dc781e056b", "committedDate": "2020-06-11 18:06:48 +0300", "message": "add online source from url"}, {"oid": "8d83048dd2245c43d06a72752df2f8cf4844c276", "committedDate": "2020-06-11 18:32:02 +0300", "message": "open link in inner browser"}, {"oid": "f05effa1576b6e405ee52b08d906519359f83f19", "committedDate": "2020-06-12 11:35:45 +0300", "message": "fix exit dialog"}, {"oid": "404079888bbbb97372a6e83daf3464eb52ffb00b", "committedDate": "2020-06-12 12:13:37 +0300", "message": "show sqlite extension"}, {"oid": "9cc21370587a2facb1ff25a8b3b3b5704ecb13cf", "committedDate": "2020-06-12 13:12:08 +0300", "message": "remove duplicates on map storage change"}, {"oid": "a726955291a38a6b89c07d52cc94b2be29049457", "committedDate": "2020-06-12 13:32:11 +0300", "message": "hide keyboard on scroll"}, {"oid": "e27dc91a3b5499db12b34cc714351d3e505b3d25", "committedDate": "2020-06-12 13:36:27 +0300", "message": "save btn font"}, {"oid": "cdaa450de5f5316a8a96f8c06164e3014d2e7c87", "committedDate": "2020-06-12 13:41:43 +0300", "message": "fix text fields stroke color"}, {"oid": "a0c58cb624dc603d0e226ab0650ebe14d5f8e5e2", "committedDate": "2020-06-12 14:50:16 +0300", "message": "show errors on empty text fields"}, {"oid": "ab1050d43d0e39da59a008a4747f610e5c7e7c7c", "committedDate": "2020-06-12 15:20:46 +0300", "message": "fix text multiline in text fields"}, {"oid": "1e2f5e65816a8cb187d80cd172d290cdb078b112", "committedDate": "2020-06-12 15:23:38 +0300", "message": "set cursor at the end"}, {"oid": "73d7c93f679e24a8f5a766e6f96aab4ce970252a", "committedDate": "2020-06-12 17:01:03 +0300", "message": "showClearTilesWarningDialog for storage change"}, {"oid": "30674159e151a75a473b2746d47357afa84a8aba", "committedDate": "2020-06-12 17:15:46 +0300", "message": "Revert \"show sqlite extension\""}, {"oid": "30049f3cb3762045e4d6423eec305017fd56724d", "committedDate": "2020-06-15 14:13:27 +0300", "message": "refactor"}, {"oid": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "committedDate": "2020-06-15 14:39:59 +0300", "message": "refactor saving template"}, {"oid": "7f40160f0d920001fbb8977ee223fbe46334f5a2", "committedDate": "2020-06-16 18:30:25 +0300", "message": "small refactor"}, {"oid": "08bd2a8546e35489c4023b4460334fe48011bf9f", "committedDate": "2020-07-07 13:51:17 +0300", "message": "Material theme"}, {"oid": "c42838463247738da5f23e492ef9105919cb9428", "committedDate": "2020-08-18 00:10:57 +0200", "message": "Fix compilation"}, {"oid": "be5216cd8d38887ea8d84752b1d2621ee7290f5d", "committedDate": "2021-08-09 22:44:02 +0300", "message": "Move getColor methods to separate class"}, {"oid": "673d6a518b237ea5b8c014a83bfbff5871e9ad86", "committedDate": "2021-08-13 20:04:10 +0500", "message": "Fix possible `IllegalStateException` for Fragments"}, {"oid": "64e0ef58e85ba3c7716184154cf30e582d66ffaa", "committedDate": "2021-08-25 17:58:23 +0300", "message": "Add fragment manager check to AndroidUtils and remove some outdated screens"}, {"oid": "04acca615d803381b71b6a5a48bcecb86841bbff", "committedDate": "2021-08-25 18:18:33 +0300", "message": "Merge branch 'master' into colors_fixing"}, {"oid": "409161f7985fd3d3f55bc2436a75cc4e39037b66", "committedDate": "2021-09-20 13:05:00 +0300", "message": "Fix \"Edit online source - UI mistakes\""}, {"oid": "8fbdac8c8faabf4c407cdef19589bec3ae1d0b97", "committedDate": "2021-09-24 05:11:05 +0500", "message": "Delete Prolog lib completely and replace methods of its dependency"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}, {"oid": "47a19dc1880f4fae81f19d428df344ce9c3f19df", "committedDate": "2021-12-08 00:22:33 +0500", "message": "Move AndroidNetworkUtils, AndroidUtils, ColorUtilities, FileUtils, JsonUtils, OsmAndFormatter, PicassoUtils, UiUtilities to `net.osmand.plus.utils`"}, {"oid": "dcd96be76739562aea54b92f74d71b86aaa90b5a", "committedDate": "2022-03-16 19:43:34 +0200", "message": "Extract function \"showFullArticle\" to AndroidUtils as \"openUrl\""}, {"oid": "32bf60e2532f6555de264cb1b3b4deb7bec320c8", "committedDate": "2022-05-02 18:04:41 +0300", "message": "Fix Documentation links"}, {"oid": "635d042fe98149c1ac063a2d16554b1e23554e0f", "committedDate": "2022-05-13 12:06:15 +0200", "message": "Add links separate file"}, {"oid": "2b262759389f2e822b085b9e2b1cf4e7d7c0c3e5", "committedDate": "2022-05-31 14:21:05 +0500", "message": "Rename string resource"}, {"oid": "bef177c5d7a415b747e377b7ff2cda844bb6c05f", "committedDate": "2022-07-15 22:06:47 +0300", "message": "Update final fields"}, {"oid": "f1dcc4d7206c501d152bced637217b65cc20ff84", "committedDate": "2022-07-15 22:09:41 +0300", "message": "Clean redundant fields initialisation"}, {"oid": "4e025d0ef6df0b52003b6aa39e6658b0a5dfa4a5", "committedDate": "2022-07-15 23:07:36 +0300", "message": "Remove unnecessary final modifier from local variables"}, {"oid": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "committedDate": "2023-03-21 12:28:08 +0200", "message": "Review fixes"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyODMyNw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431628327", "body": "Why onZoomSet and onExpireValueSet without isAdded() ?", "bodyText": "Why onZoomSet and onExpireValueSet without isAdded() ?", "bodyHTML": "<p dir=\"auto\">Why onZoomSet and onExpireValueSet without isAdded() ?</p>", "author": "max-klaus", "createdAt": "2020-05-28T07:15:03Z", "path": "OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java", "diffHunk": "@@ -0,0 +1,453 @@\n+package net.osmand.plus.mapsource;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.graphics.drawable.Drawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.KeyEvent;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.ImageButton;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.android.material.textfield.TextInputLayout;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.map.TileSourceManager;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.SQLiteTileSource;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BaseOsmAndDialogFragment;\n+import net.osmand.plus.mapsource.InputZoomLevelsBottomSheet.OnZoomSetListener;\n+import net.osmand.plus.mapsource.ExpireTimeBottomSheet.OnExpireValueSetListener;\n+import net.osmand.plus.mapsource.MercatorProjectionBottomSheet.OnMercatorSelectedListener;\n+import net.osmand.plus.mapsource.TileStorageFormatBottomSheet.OnTileStorageFormatSelectedListener;\n+import net.osmand.util.Algorithms;\n+\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import static net.osmand.plus.download.ui.LocalIndexesFragment.renameSQLiteFile;\n+\n+public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n+\t\timplements OnZoomSetListener, OnExpireValueSetListener, OnMercatorSelectedListener,\n+\t\tOnTileStorageFormatSelectedListener {\n+\n+\tpublic static final String TAG = EditMapSourceDialogFragment.class.getName();\n+\tstatic final int EXPIRE_TIME_NEVER = -1;\n+\tprivate static final Log LOG = PlatformUtil.getLog(EditMapSourceDialogFragment.class);\n+\tprivate static final String MAPS_PLUGINS_URL = \"https://osmand.net/features/online-maps-plugin\";\n+\tprivate static final String PNG_EXT = \"png\";\n+\tprivate static final int MAX_ZOOM = 17;\n+\tprivate static final int MIN_ZOOM = 5;\n+\tprivate static final int TILE_SIZE = 256;\n+\tprivate static final int BIT_DENSITY = 16;\n+\tprivate static final int AVG_SIZE = 32000;\n+\tprivate static final String EDIT_LAYER_NAME_KEY = \"edit_layer_name_key\";\n+\tprivate static final String MIN_ZOOM_KEY = \"min_zoom_key\";\n+\tprivate static final String MAX_ZOOM_KEY = \"max_zoom_key\";\n+\tprivate static final String EXPIRE_TIME_KEY = \"expire_time_key\";\n+\tprivate static final String ELLIPTIC_KEY = \"elliptic_key\";\n+\tprivate static final String SQLITE_DB_KEY = \"sqlite_db_key\";\n+\tprivate OsmandApplication app;\n+\tprivate TextInputEditText nameEditText;\n+\tprivate TextInputEditText urlEditText;\n+\tprivate LinearLayout contentContainer;\n+\tprivate FrameLayout saveBtn;\n+\tprivate TextView saveBtnTitle;\n+\tprivate TileSourceManager.TileSourceTemplate template;\n+\t@Nullable\n+\tprivate String editedLayerName;\n+\tprivate String urlToLoad = \"\";\n+\tprivate int minZoom = MIN_ZOOM;\n+\tprivate int maxZoom = MAX_ZOOM;\n+\tprivate int expireTimeMinutes = EXPIRE_TIME_NEVER;\n+\tprivate boolean elliptic = false;\n+\tprivate boolean sqliteDB = false;\n+\tprivate boolean nightMode;\n+\n+\tpublic static void showInstance(@NonNull FragmentManager fm,\n+\t\t\t\t\t\t\t\t\t@Nullable Fragment targetFragment,\n+\t\t\t\t\t\t\t\t\t@Nullable String editedLayerName) {\n+\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n+\t\tfragment.setTargetFragment(targetFragment, 0);\n+\t\tfragment.setEditedLayerName(editedLayerName);\n+\t\tfragment.show(fm, TAG);\n+\t}\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tapp = getMyApplication();\n+\t\tnightMode = !app.getSettings().isLightContent();\n+\t}\n+\n+\t@Override\n+\tpublic View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+\t\tif (savedInstanceState != null) {\n+\t\t\teditedLayerName = savedInstanceState.getString(EDIT_LAYER_NAME_KEY);\n+\t\t\tminZoom = savedInstanceState.getInt(MIN_ZOOM_KEY);\n+\t\t\tmaxZoom = savedInstanceState.getInt(MAX_ZOOM_KEY);\n+\t\t\texpireTimeMinutes = savedInstanceState.getInt(EXPIRE_TIME_KEY);\n+\t\t\telliptic = savedInstanceState.getBoolean(ELLIPTIC_KEY);\n+\t\t\tsqliteDB = savedInstanceState.getBoolean(SQLITE_DB_KEY);\n+\t\t}\n+\t\tView root = UiUtilities.getMaterialInflater(app, nightMode).inflate(R.layout.fragment_edit_map_source, container, false);\n+\t\tToolbar toolbar = root.findViewById(R.id.toolbar);\n+\t\tImageButton iconHelp = root.findViewById(R.id.toolbar_action);\n+\t\tDrawable closeDrawable = app.getUIUtilities().getIcon(AndroidUtils.getNavigationIconResId(app),\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\tDrawable helpDrawable = app.getUIUtilities().getIcon(R.drawable.ic_action_help,\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\ticonHelp.setImageDrawable(helpDrawable);\n+\t\ticonHelp.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tonHelpClick();\n+\t\t\t}\n+\t\t});\n+\t\ttoolbar.setNavigationIcon(closeDrawable);\n+\t\ttoolbar.setNavigationContentDescription(R.string.shared_string_close);\n+\t\ttoolbar.setNavigationOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tshowExitDialog();\n+\t\t\t}\n+\t\t});\n+\t\tint boxStrokeColor = nightMode\n+\t\t\t\t? ContextCompat.getColor(app, R.color.app_bar_color_light)\n+\t\t\t\t: ContextCompat.getColor(app, R.color.active_buttons_and_links_bg_pressed_dark);\n+\t\tTextInputLayout nameInputLayout = root.findViewById(R.id.name_input_layout);\n+\t\tnameInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\tnameEditText = root.findViewById(R.id.name_edit_text);\n+\t\tTextInputLayout urlInputLayout = root.findViewById(R.id.url_input_layout);\n+\t\turlInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\turlEditText = root.findViewById(R.id.url_edit_text);\n+\t\tnameEditText.addTextChangedListener(getTextWatcher());\n+\t\turlEditText.addTextChangedListener(getTextWatcher());\n+\t\tcontentContainer = root.findViewById(R.id.content_container);\n+\t\tsaveBtn = root.findViewById(R.id.save_button);\n+\t\tsaveBtnTitle = root.findViewById(R.id.save_button_title);\n+\t\tsaveBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tsaveTemplate();\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\ttemplate = new TileSourceManager.TileSourceTemplate(\"\", \"\", PNG_EXT, MAX_ZOOM, MIN_ZOOM, TILE_SIZE, BIT_DENSITY, AVG_SIZE);\n+\t\tif (editedLayerName != null) {\n+\t\t\tif (!editedLayerName.endsWith(IndexConstants.SQLITE_EXT)) {\n+\t\t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\t\ttemplate = TileSourceManager.createTileSourceTemplate(f);\n+\t\t\t\tsqliteDB = false;\n+\t\t\t} else {\n+\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\tFile tPath = app.getAppPath(IndexConstants.TILES_INDEX_DIR);\n+\t\t\t\tFile dir = new File(tPath, editedLayerName);\n+\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, dir, knownTemplates);\n+\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n+\t\t\t\ttemplate = new TileSourceManager.TileSourceTemplate(sqLiteTileSource.getName(),\n+\t\t\t\t\t\tsqLiteTileSource.getUrlTemplate(), PNG_EXT, sqLiteTileSource.getMaximumZoomSupported(),\n+\t\t\t\t\t\tsqLiteTileSource.getMinimumZoomSupported(), sqLiteTileSource.getTileSize(),\n+\t\t\t\t\t\tsqLiteTileSource.getBitDensity(), AVG_SIZE);\n+\t\t\t\ttemplate.setExpirationTimeMinutes(sqLiteTileSource.getExpirationTimeMinutes());\n+\t\t\t\ttemplate.setEllipticYTile(sqLiteTileSource.isEllipticYTile());\n+\t\t\t\tsqliteDB = true;\n+\t\t\t}\n+\t\t}\n+\t\tif (savedInstanceState == null) {\n+\t\t\turlToLoad = template.getUrlTemplate();\n+\t\t\texpireTimeMinutes = template.getExpirationTimeMinutes();\n+\t\t\tminZoom = template.getMinimumZoomSupported();\n+\t\t\tmaxZoom = template.getMaximumZoomSupported();\n+\t\t\telliptic = template.isEllipticYTile();\n+\t\t}\n+\t\tupdateUi();\n+\t\treturn root;\n+\t}\n+\n+\t@Override\n+\tpublic void onSaveInstanceState(@NonNull Bundle outState) {\n+\t\toutState.putString(EDIT_LAYER_NAME_KEY, editedLayerName);\n+\t\toutState.putInt(MIN_ZOOM_KEY, minZoom);\n+\t\toutState.putInt(MAX_ZOOM_KEY, maxZoom);\n+\t\toutState.putInt(EXPIRE_TIME_KEY, expireTimeMinutes);\n+\t\toutState.putBoolean(ELLIPTIC_KEY, elliptic);\n+\t\toutState.putBoolean(SQLITE_DB_KEY, sqliteDB);\n+\t\tsuper.onSaveInstanceState(outState);\n+\t}\n+\n+\t@Override\n+\tpublic void onResume() {\n+\t\tsuper.onResume();\n+\t\tDialog dialog = getDialog();\n+\t\tif (dialog != null) {\n+\t\t\tdialog.setOnKeyListener(new DialogInterface.OnKeyListener() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {\n+\t\t\t\t\tif (keyCode == android.view.KeyEvent.KEYCODE_BACK) {\n+\t\t\t\t\t\tif (event.getAction() == KeyEvent.ACTION_DOWN) {\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tshowExitDialog();\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onZoomSet(int min, int max) {\n+\t\t\tminZoom = min;\n+\t\t\tmaxZoom = max;\n+\t\t\tupdateDescription(ConfigurationItem.ZOOM_LEVELS);\n+\t}\n+\n+\t@Override\n+\tpublic void onExpireValueSet(int expireValue) {\n+\t\t\texpireTimeMinutes = expireValue;\n+\t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t}\n+\n+\t@Override\n+\tpublic void onMercatorSelected(boolean elliptic) {\n+\t\tif (isAdded()) {", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bb9aa16496fdcf48385361afc1670c323167eeb", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -229,15 +230,19 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \n \t@Override\n \tpublic void onZoomSet(int min, int max) {\n+\t\tif (isAdded()) {\n \t\t\tminZoom = min;\n \t\t\tmaxZoom = max;\n \t\t\tupdateDescription(ConfigurationItem.ZOOM_LEVELS);\n+\t\t}\n \t}\n \n \t@Override\n \tpublic void onExpireValueSet(int expireValue) {\n+\t\tif (isAdded()) {\n \t\t\texpireTimeMinutes = expireValue;\n \t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t\t}\n \t}\n \n \t@Override\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -229,15 +230,19 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \n \t@Override\n \tpublic void onZoomSet(int min, int max) {\n+\t\tif (isAdded()) {\n \t\t\tminZoom = min;\n \t\t\tmaxZoom = max;\n \t\t\tupdateDescription(ConfigurationItem.ZOOM_LEVELS);\n+\t\t}\n \t}\n \n \t@Override\n \tpublic void onExpireValueSet(int expireValue) {\n+\t\tif (isAdded()) {\n \t\t\texpireTimeMinutes = expireValue;\n \t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t\t}\n \t}\n \n \t@Override\n", "next_change": {"commit": "f05effa1576b6e405ee52b08d906519359f83f19", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 528efff916..4ee8c6925c 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -242,6 +273,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\tif (isAdded()) {\n \t\t\texpireTimeMinutes = expireValue;\n \t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t\t\twasChanged = true;\n \t\t}\n \t}\n \n", "next_change": null}, {"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 528efff916..4ee8c6925c 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -250,6 +282,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\tif (isAdded()) {\n \t\t\tthis.elliptic = elliptic;\n \t\t\tupdateDescription(ConfigurationItem.MERCATOR_PROJECTION);\n+\t\t\twasChanged = true;\n \t\t}\n \t}\n \n", "next_change": {"commit": "404079888bbbb97372a6e83daf3464eb52ffb00b", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 4ee8c6925c..7487d7e716 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -290,6 +294,13 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \tpublic void onStorageFormatSelected(boolean sqliteDb) {\n \t\tif (isAdded()) {\n \t\t\tthis.sqliteDB = sqliteDb;\n+\t\t\tString name = nameEditText.getText().toString();\n+\t\t\tif (sqliteDb && !name.contains(IndexConstants.SQLITE_EXT)) {\n+\t\t\t\tname += IndexConstants.SQLITE_EXT;\n+\t\t\t\tnameEditText.setText(name);\n+\t\t\t} else if (!sqliteDb) {\n+\t\t\t\tnameEditText.setText(name.replace(IndexConstants.SQLITE_EXT, \"\"));\n+\t\t\t}\n \t\t\tupdateDescription(ConfigurationItem.STORAGE_FORMAT);\n \t\t\twasChanged = true;\n \t\t}\n", "next_change": {"commit": "a0c58cb624dc603d0e226ab0650ebe14d5f8e5e2", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 7487d7e716..a5c7aa9c58 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -306,36 +325,18 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t}\n \t}\n \n-\tprivate TextWatcher getTextWatcher() {\n-\t\treturn new TextWatcher() {\n-\t\t\t@Override\n-\t\t\tpublic void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n-\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n-\n-\t\t\t}\n+\tprivate void setSaveBtnEnabled() {\n+\t\tboolean enabled = !nameEditText.getText().toString().isEmpty()\n+\t\t\t\t&& !urlEditText.getText().toString().isEmpty();\n+\t\tsaveBtn.setEnabled(enabled);\n+\t\tsaveBtnTitle.setEnabled(enabled);\n+\t}\n \n-\t\t\t@Override\n-\t\t\tpublic void afterTextChanged(Editable editable) {\n-\t\t\t\tif (nameEditText.getText() != null && urlEditText.getText() != null) {\n-\t\t\t\t\tString name = nameEditText.getText().toString().trim();\n-\t\t\t\t\tString url = urlEditText.getText().toString().trim();\n-\t\t\t\t\tif (Algorithms.isEmpty(name) || Algorithms.isEmpty(url)) {\n-\t\t\t\t\t\tsaveBtn.setEnabled(false);\n-\t\t\t\t\t\tsaveBtnTitle.setEnabled(false);\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tsaveBtn.setEnabled(true);\n-\t\t\t\t\t\tsaveBtnTitle.setEnabled(true);\n-\t\t\t\t\t}\n-\t\t\t\t\tif (Algorithms.objectEquals(editedLayerName, name) || Algorithms.objectEquals(urlToLoad, url)) {\n-\t\t\t\t\t\twasChanged = true;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t};\n+\tprivate void checkWasChanged() {\n+\t\tif (!Algorithms.objectEquals(editedLayerName, nameEditText.getText().toString())\n+\t\t\t\t|| !Algorithms.objectEquals(urlToLoad, urlEditText.getText().toString())) {\n+\t\t\twasChanged = true;\n+\t\t}\n \t}\n \n \tprivate void saveTemplate() {\n", "next_change": {"commit": "30674159e151a75a473b2746d47357afa84a8aba", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex a5c7aa9c58..10e9cae820 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -341,7 +352,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \n \tprivate void saveTemplate() {\n \t\ttry {\n-\t\t\tString newName = nameEditText.getText().toString().replace(IndexConstants.SQLITE_EXT, \"\");\n+\t\t\tString newName = nameEditText.getText().toString();\n \t\t\tString urlToLoad = urlEditText.getText().toString();\n \t\t\ttemplate.setName(newName);\n \t\t\ttemplate.setUrlToLoad(urlToLoad.isEmpty() ? null : urlToLoad.replace(\"{$x}\", \"{1}\").replace(\"{$y}\", \"{2}\").replace(\"{$z}\", \"{0}\"));\n", "next_change": {"commit": "30049f3cb3762045e4d6423eec305017fd56724d", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 10e9cae820..32b53d627a 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -361,12 +366,14 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\ttemplate.setEllipticYTile(elliptic);\n \t\t\ttemplate.setExpirationTimeMinutes(expireTimeMinutes);\n \t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\tString oldExt = null;\n+\t\t\tboolean storageChanged = false;\n \t\t\tif (f.exists()) {\n \t\t\t\tint extIndex = f.getName().lastIndexOf('.');\n-\t\t\t\tString ext = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n+\t\t\t\toldExt = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n \t\t\t\tString originalName = extIndex == -1 ? f.getName() : f.getName().substring(0, extIndex);\n \t\t\t\tif (!Algorithms.objectEquals(newName, originalName)) {\n-\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(ext) && sqliteDB) {\n+\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(oldExt) && sqliteDB) {\n \t\t\t\t\t\tFileUtils.renameSQLiteFile(app, f, newName, null);\n \t\t\t\t\t} else if (!sqliteDB) {\n \t\t\t\t\t\tf.renameTo(app.getAppPath(IndexConstants.TILES_INDEX_DIR + newName));\n", "next_change": {"commit": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 32b53d627a..94dc944cb1 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -366,22 +366,23 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\ttemplate.setEllipticYTile(elliptic);\n \t\t\ttemplate.setExpirationTimeMinutes(expireTimeMinutes);\n \t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n-\t\t\tString oldExt = null;\n+\t\t\tString ext = null;\n \t\t\tboolean storageChanged = false;\n \t\t\tif (f.exists()) {\n \t\t\t\tint extIndex = f.getName().lastIndexOf('.');\n-\t\t\t\toldExt = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n+\t\t\t\text = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n \t\t\t\tString originalName = extIndex == -1 ? f.getName() : f.getName().substring(0, extIndex);\n \t\t\t\tif (!Algorithms.objectEquals(newName, originalName)) {\n-\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(oldExt) && sqliteDB) {\n-\t\t\t\t\t\tFileUtils.renameSQLiteFile(app, f, newName, null);\n-\t\t\t\t\t} else if (!sqliteDB) {\n+\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(ext)) {\n+\t\t\t\t\t\tf = FileUtils.renameSQLiteFile(app, f, newName + ext, null);\n+\t\t\t\t\t} else {\n \t\t\t\t\t\tf.renameTo(app.getAppPath(IndexConstants.TILES_INDEX_DIR + newName));\n+\t\t\t\t\t\tf = app.getAppPath(IndexConstants.TILES_INDEX_DIR + newName);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (sqliteDB) {\n-\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(oldExt)) {\n+\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(ext)) {\n \t\t\t\t\tList<TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, f, knownTemplates);\n \t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n", "next_change": {"commit": "c42838463247738da5f23e492ef9105919cb9428", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 94dc944cb1..fcd6f86bb2 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -391,7 +392,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n \t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n \t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"\",\n-\t\t\t\t\t\t\t\t\telliptic, false, \"\", expireTimeMinutes > 0,\n+\t\t\t\t\t\t\t\t\telliptic, false, \"\", \"\", expireTimeMinutes > 0,\n \t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n \t\t\t\t\t\t\t);\n \t\t\t\t\tsqLiteTileSource.createDataBase();\n", "next_change": {"commit": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex fcd6f86bb2..4a70c3465c 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -399,7 +392,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t\tstorageChanged = f.exists();\n \t\t\t\t}\n \t\t\t} else {\n-\t\t\t\tgetSettings().installTileSource(template);\n+\t\t\t\tsettings.installTileSource(template);\n \t\t\t\tstorageChanged = f != null && f.exists() && IndexConstants.SQLITE_EXT.equals(ext);\n \t\t\t}\n \t\t\tif (storageChanged) {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "571ac59a0686b61fa454a2e3f280c5835d0e9b27", "committedDate": "2020-06-09 13:50:49 +0300", "message": "fix layouts on android 4"}, {"oid": "baec03ec1e395e243c6c77849426e33d444c7c63", "committedDate": "2020-06-09 14:30:34 +0300", "message": "add / edit toolbar title"}, {"oid": "690ddb52e7e71b09f4f52806c7e0297508fb9787", "committedDate": "2020-06-09 16:28:41 +0300", "message": "don`t save with empty name/url"}, {"oid": "765aafb4e7ce29c4561656da8143b5b6d731d0aa", "committedDate": "2020-06-09 16:51:56 +0300", "message": "warning dialog on zooms change for used source"}, {"oid": "0b9fe37de0ce952c37fd77593f77dc2aa989ac45", "committedDate": "2020-06-09 18:46:03 +0300", "message": "fix input layout on android 4"}, {"oid": "2fc466f546a5ed8fc34eb4aa38cb415328f30cfe", "committedDate": "2020-06-11 12:10:08 +0300", "message": "small refactor"}, {"oid": "b6c8ab7362755ab60e90c49c7510a4dc781e056b", "committedDate": "2020-06-11 18:06:48 +0300", "message": "add online source from url"}, {"oid": "8d83048dd2245c43d06a72752df2f8cf4844c276", "committedDate": "2020-06-11 18:32:02 +0300", "message": "open link in inner browser"}, {"oid": "f05effa1576b6e405ee52b08d906519359f83f19", "committedDate": "2020-06-12 11:35:45 +0300", "message": "fix exit dialog"}, {"oid": "404079888bbbb97372a6e83daf3464eb52ffb00b", "committedDate": "2020-06-12 12:13:37 +0300", "message": "show sqlite extension"}, {"oid": "9cc21370587a2facb1ff25a8b3b3b5704ecb13cf", "committedDate": "2020-06-12 13:12:08 +0300", "message": "remove duplicates on map storage change"}, {"oid": "a726955291a38a6b89c07d52cc94b2be29049457", "committedDate": "2020-06-12 13:32:11 +0300", "message": "hide keyboard on scroll"}, {"oid": "e27dc91a3b5499db12b34cc714351d3e505b3d25", "committedDate": "2020-06-12 13:36:27 +0300", "message": "save btn font"}, {"oid": "cdaa450de5f5316a8a96f8c06164e3014d2e7c87", "committedDate": "2020-06-12 13:41:43 +0300", "message": "fix text fields stroke color"}, {"oid": "a0c58cb624dc603d0e226ab0650ebe14d5f8e5e2", "committedDate": "2020-06-12 14:50:16 +0300", "message": "show errors on empty text fields"}, {"oid": "ab1050d43d0e39da59a008a4747f610e5c7e7c7c", "committedDate": "2020-06-12 15:20:46 +0300", "message": "fix text multiline in text fields"}, {"oid": "1e2f5e65816a8cb187d80cd172d290cdb078b112", "committedDate": "2020-06-12 15:23:38 +0300", "message": "set cursor at the end"}, {"oid": "73d7c93f679e24a8f5a766e6f96aab4ce970252a", "committedDate": "2020-06-12 17:01:03 +0300", "message": "showClearTilesWarningDialog for storage change"}, {"oid": "30674159e151a75a473b2746d47357afa84a8aba", "committedDate": "2020-06-12 17:15:46 +0300", "message": "Revert \"show sqlite extension\""}, {"oid": "30049f3cb3762045e4d6423eec305017fd56724d", "committedDate": "2020-06-15 14:13:27 +0300", "message": "refactor"}, {"oid": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "committedDate": "2020-06-15 14:39:59 +0300", "message": "refactor saving template"}, {"oid": "7f40160f0d920001fbb8977ee223fbe46334f5a2", "committedDate": "2020-06-16 18:30:25 +0300", "message": "small refactor"}, {"oid": "08bd2a8546e35489c4023b4460334fe48011bf9f", "committedDate": "2020-07-07 13:51:17 +0300", "message": "Material theme"}, {"oid": "c42838463247738da5f23e492ef9105919cb9428", "committedDate": "2020-08-18 00:10:57 +0200", "message": "Fix compilation"}, {"oid": "be5216cd8d38887ea8d84752b1d2621ee7290f5d", "committedDate": "2021-08-09 22:44:02 +0300", "message": "Move getColor methods to separate class"}, {"oid": "673d6a518b237ea5b8c014a83bfbff5871e9ad86", "committedDate": "2021-08-13 20:04:10 +0500", "message": "Fix possible `IllegalStateException` for Fragments"}, {"oid": "64e0ef58e85ba3c7716184154cf30e582d66ffaa", "committedDate": "2021-08-25 17:58:23 +0300", "message": "Add fragment manager check to AndroidUtils and remove some outdated screens"}, {"oid": "04acca615d803381b71b6a5a48bcecb86841bbff", "committedDate": "2021-08-25 18:18:33 +0300", "message": "Merge branch 'master' into colors_fixing"}, {"oid": "409161f7985fd3d3f55bc2436a75cc4e39037b66", "committedDate": "2021-09-20 13:05:00 +0300", "message": "Fix \"Edit online source - UI mistakes\""}, {"oid": "8fbdac8c8faabf4c407cdef19589bec3ae1d0b97", "committedDate": "2021-09-24 05:11:05 +0500", "message": "Delete Prolog lib completely and replace methods of its dependency"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}, {"oid": "47a19dc1880f4fae81f19d428df344ce9c3f19df", "committedDate": "2021-12-08 00:22:33 +0500", "message": "Move AndroidNetworkUtils, AndroidUtils, ColorUtilities, FileUtils, JsonUtils, OsmAndFormatter, PicassoUtils, UiUtilities to `net.osmand.plus.utils`"}, {"oid": "dcd96be76739562aea54b92f74d71b86aaa90b5a", "committedDate": "2022-03-16 19:43:34 +0200", "message": "Extract function \"showFullArticle\" to AndroidUtils as \"openUrl\""}, {"oid": "32bf60e2532f6555de264cb1b3b4deb7bec320c8", "committedDate": "2022-05-02 18:04:41 +0300", "message": "Fix Documentation links"}, {"oid": "635d042fe98149c1ac063a2d16554b1e23554e0f", "committedDate": "2022-05-13 12:06:15 +0200", "message": "Add links separate file"}, {"oid": "2b262759389f2e822b085b9e2b1cf4e7d7c0c3e5", "committedDate": "2022-05-31 14:21:05 +0500", "message": "Rename string resource"}, {"oid": "bef177c5d7a415b747e377b7ff2cda844bb6c05f", "committedDate": "2022-07-15 22:06:47 +0300", "message": "Update final fields"}, {"oid": "f1dcc4d7206c501d152bced637217b65cc20ff84", "committedDate": "2022-07-15 22:09:41 +0300", "message": "Clean redundant fields initialisation"}, {"oid": "4e025d0ef6df0b52003b6aa39e6658b0a5dfa4a5", "committedDate": "2022-07-15 23:07:36 +0300", "message": "Remove unnecessary final modifier from local variables"}, {"oid": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "committedDate": "2023-03-21 12:28:08 +0200", "message": "Review fixes"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyOTA0OQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/9086#discussion_r431629049", "body": "Why randoms and invertedY hardcoded?", "bodyText": "Why randoms and invertedY hardcoded?", "bodyHTML": "<p dir=\"auto\">Why randoms and invertedY hardcoded?</p>", "author": "max-klaus", "createdAt": "2020-05-28T07:16:32Z", "path": "OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java", "diffHunk": "@@ -0,0 +1,453 @@\n+package net.osmand.plus.mapsource;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.Intent;\n+import android.graphics.drawable.Drawable;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.KeyEvent;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.ImageButton;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.StringRes;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.android.material.textfield.TextInputLayout;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.map.TileSourceManager;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.SQLiteTileSource;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BaseOsmAndDialogFragment;\n+import net.osmand.plus.mapsource.InputZoomLevelsBottomSheet.OnZoomSetListener;\n+import net.osmand.plus.mapsource.ExpireTimeBottomSheet.OnExpireValueSetListener;\n+import net.osmand.plus.mapsource.MercatorProjectionBottomSheet.OnMercatorSelectedListener;\n+import net.osmand.plus.mapsource.TileStorageFormatBottomSheet.OnTileStorageFormatSelectedListener;\n+import net.osmand.util.Algorithms;\n+\n+\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import static net.osmand.plus.download.ui.LocalIndexesFragment.renameSQLiteFile;\n+\n+public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n+\t\timplements OnZoomSetListener, OnExpireValueSetListener, OnMercatorSelectedListener,\n+\t\tOnTileStorageFormatSelectedListener {\n+\n+\tpublic static final String TAG = EditMapSourceDialogFragment.class.getName();\n+\tstatic final int EXPIRE_TIME_NEVER = -1;\n+\tprivate static final Log LOG = PlatformUtil.getLog(EditMapSourceDialogFragment.class);\n+\tprivate static final String MAPS_PLUGINS_URL = \"https://osmand.net/features/online-maps-plugin\";\n+\tprivate static final String PNG_EXT = \"png\";\n+\tprivate static final int MAX_ZOOM = 17;\n+\tprivate static final int MIN_ZOOM = 5;\n+\tprivate static final int TILE_SIZE = 256;\n+\tprivate static final int BIT_DENSITY = 16;\n+\tprivate static final int AVG_SIZE = 32000;\n+\tprivate static final String EDIT_LAYER_NAME_KEY = \"edit_layer_name_key\";\n+\tprivate static final String MIN_ZOOM_KEY = \"min_zoom_key\";\n+\tprivate static final String MAX_ZOOM_KEY = \"max_zoom_key\";\n+\tprivate static final String EXPIRE_TIME_KEY = \"expire_time_key\";\n+\tprivate static final String ELLIPTIC_KEY = \"elliptic_key\";\n+\tprivate static final String SQLITE_DB_KEY = \"sqlite_db_key\";\n+\tprivate OsmandApplication app;\n+\tprivate TextInputEditText nameEditText;\n+\tprivate TextInputEditText urlEditText;\n+\tprivate LinearLayout contentContainer;\n+\tprivate FrameLayout saveBtn;\n+\tprivate TextView saveBtnTitle;\n+\tprivate TileSourceManager.TileSourceTemplate template;\n+\t@Nullable\n+\tprivate String editedLayerName;\n+\tprivate String urlToLoad = \"\";\n+\tprivate int minZoom = MIN_ZOOM;\n+\tprivate int maxZoom = MAX_ZOOM;\n+\tprivate int expireTimeMinutes = EXPIRE_TIME_NEVER;\n+\tprivate boolean elliptic = false;\n+\tprivate boolean sqliteDB = false;\n+\tprivate boolean nightMode;\n+\n+\tpublic static void showInstance(@NonNull FragmentManager fm,\n+\t\t\t\t\t\t\t\t\t@Nullable Fragment targetFragment,\n+\t\t\t\t\t\t\t\t\t@Nullable String editedLayerName) {\n+\t\tEditMapSourceDialogFragment fragment = new EditMapSourceDialogFragment();\n+\t\tfragment.setTargetFragment(targetFragment, 0);\n+\t\tfragment.setEditedLayerName(editedLayerName);\n+\t\tfragment.show(fm, TAG);\n+\t}\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tapp = getMyApplication();\n+\t\tnightMode = !app.getSettings().isLightContent();\n+\t}\n+\n+\t@Override\n+\tpublic View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+\t\tif (savedInstanceState != null) {\n+\t\t\teditedLayerName = savedInstanceState.getString(EDIT_LAYER_NAME_KEY);\n+\t\t\tminZoom = savedInstanceState.getInt(MIN_ZOOM_KEY);\n+\t\t\tmaxZoom = savedInstanceState.getInt(MAX_ZOOM_KEY);\n+\t\t\texpireTimeMinutes = savedInstanceState.getInt(EXPIRE_TIME_KEY);\n+\t\t\telliptic = savedInstanceState.getBoolean(ELLIPTIC_KEY);\n+\t\t\tsqliteDB = savedInstanceState.getBoolean(SQLITE_DB_KEY);\n+\t\t}\n+\t\tView root = UiUtilities.getMaterialInflater(app, nightMode).inflate(R.layout.fragment_edit_map_source, container, false);\n+\t\tToolbar toolbar = root.findViewById(R.id.toolbar);\n+\t\tImageButton iconHelp = root.findViewById(R.id.toolbar_action);\n+\t\tDrawable closeDrawable = app.getUIUtilities().getIcon(AndroidUtils.getNavigationIconResId(app),\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\tDrawable helpDrawable = app.getUIUtilities().getIcon(R.drawable.ic_action_help,\n+\t\t\t\tnightMode ? R.color.active_buttons_and_links_text_dark : R.color.active_buttons_and_links_text_light);\n+\t\ticonHelp.setImageDrawable(helpDrawable);\n+\t\ticonHelp.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tonHelpClick();\n+\t\t\t}\n+\t\t});\n+\t\ttoolbar.setNavigationIcon(closeDrawable);\n+\t\ttoolbar.setNavigationContentDescription(R.string.shared_string_close);\n+\t\ttoolbar.setNavigationOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tshowExitDialog();\n+\t\t\t}\n+\t\t});\n+\t\tint boxStrokeColor = nightMode\n+\t\t\t\t? ContextCompat.getColor(app, R.color.app_bar_color_light)\n+\t\t\t\t: ContextCompat.getColor(app, R.color.active_buttons_and_links_bg_pressed_dark);\n+\t\tTextInputLayout nameInputLayout = root.findViewById(R.id.name_input_layout);\n+\t\tnameInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\tnameEditText = root.findViewById(R.id.name_edit_text);\n+\t\tTextInputLayout urlInputLayout = root.findViewById(R.id.url_input_layout);\n+\t\turlInputLayout.setBoxStrokeColor(boxStrokeColor);\n+\t\turlEditText = root.findViewById(R.id.url_edit_text);\n+\t\tnameEditText.addTextChangedListener(getTextWatcher());\n+\t\turlEditText.addTextChangedListener(getTextWatcher());\n+\t\tcontentContainer = root.findViewById(R.id.content_container);\n+\t\tsaveBtn = root.findViewById(R.id.save_button);\n+\t\tsaveBtnTitle = root.findViewById(R.id.save_button_title);\n+\t\tsaveBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tsaveTemplate();\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\ttemplate = new TileSourceManager.TileSourceTemplate(\"\", \"\", PNG_EXT, MAX_ZOOM, MIN_ZOOM, TILE_SIZE, BIT_DENSITY, AVG_SIZE);\n+\t\tif (editedLayerName != null) {\n+\t\t\tif (!editedLayerName.endsWith(IndexConstants.SQLITE_EXT)) {\n+\t\t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\t\ttemplate = TileSourceManager.createTileSourceTemplate(f);\n+\t\t\t\tsqliteDB = false;\n+\t\t\t} else {\n+\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\tFile tPath = app.getAppPath(IndexConstants.TILES_INDEX_DIR);\n+\t\t\t\tFile dir = new File(tPath, editedLayerName);\n+\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, dir, knownTemplates);\n+\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n+\t\t\t\ttemplate = new TileSourceManager.TileSourceTemplate(sqLiteTileSource.getName(),\n+\t\t\t\t\t\tsqLiteTileSource.getUrlTemplate(), PNG_EXT, sqLiteTileSource.getMaximumZoomSupported(),\n+\t\t\t\t\t\tsqLiteTileSource.getMinimumZoomSupported(), sqLiteTileSource.getTileSize(),\n+\t\t\t\t\t\tsqLiteTileSource.getBitDensity(), AVG_SIZE);\n+\t\t\t\ttemplate.setExpirationTimeMinutes(sqLiteTileSource.getExpirationTimeMinutes());\n+\t\t\t\ttemplate.setEllipticYTile(sqLiteTileSource.isEllipticYTile());\n+\t\t\t\tsqliteDB = true;\n+\t\t\t}\n+\t\t}\n+\t\tif (savedInstanceState == null) {\n+\t\t\turlToLoad = template.getUrlTemplate();\n+\t\t\texpireTimeMinutes = template.getExpirationTimeMinutes();\n+\t\t\tminZoom = template.getMinimumZoomSupported();\n+\t\t\tmaxZoom = template.getMaximumZoomSupported();\n+\t\t\telliptic = template.isEllipticYTile();\n+\t\t}\n+\t\tupdateUi();\n+\t\treturn root;\n+\t}\n+\n+\t@Override\n+\tpublic void onSaveInstanceState(@NonNull Bundle outState) {\n+\t\toutState.putString(EDIT_LAYER_NAME_KEY, editedLayerName);\n+\t\toutState.putInt(MIN_ZOOM_KEY, minZoom);\n+\t\toutState.putInt(MAX_ZOOM_KEY, maxZoom);\n+\t\toutState.putInt(EXPIRE_TIME_KEY, expireTimeMinutes);\n+\t\toutState.putBoolean(ELLIPTIC_KEY, elliptic);\n+\t\toutState.putBoolean(SQLITE_DB_KEY, sqliteDB);\n+\t\tsuper.onSaveInstanceState(outState);\n+\t}\n+\n+\t@Override\n+\tpublic void onResume() {\n+\t\tsuper.onResume();\n+\t\tDialog dialog = getDialog();\n+\t\tif (dialog != null) {\n+\t\t\tdialog.setOnKeyListener(new DialogInterface.OnKeyListener() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {\n+\t\t\t\t\tif (keyCode == android.view.KeyEvent.KEYCODE_BACK) {\n+\t\t\t\t\t\tif (event.getAction() == KeyEvent.ACTION_DOWN) {\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tshowExitDialog();\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onZoomSet(int min, int max) {\n+\t\t\tminZoom = min;\n+\t\t\tmaxZoom = max;\n+\t\t\tupdateDescription(ConfigurationItem.ZOOM_LEVELS);\n+\t}\n+\n+\t@Override\n+\tpublic void onExpireValueSet(int expireValue) {\n+\t\t\texpireTimeMinutes = expireValue;\n+\t\t\tupdateDescription(ConfigurationItem.EXPIRE_TIME);\n+\t}\n+\n+\t@Override\n+\tpublic void onMercatorSelected(boolean elliptic) {\n+\t\tif (isAdded()) {\n+\t\t\tthis.elliptic = elliptic;\n+\t\t\tupdateDescription(ConfigurationItem.MERCATOR_PROJECTION);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onStorageFormatSelected(boolean sqliteDb) {\n+\t\tif (isAdded()) {\n+\t\t\tthis.sqliteDB = sqliteDb;\n+\t\t\tupdateDescription(ConfigurationItem.STORAGE_FORMAT);\n+\t\t}\n+\t}\n+\n+\tprivate TextWatcher getTextWatcher() {\n+\t\treturn new TextWatcher() {\n+\t\t\t@Override\n+\t\t\tpublic void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n+\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n+\t\t\t\tString s = charSequence.toString();\n+\t\t\t\tif (Algorithms.isEmpty(s)) {\n+\t\t\t\t\tsaveBtn.setEnabled(false);\n+\t\t\t\t\tsaveBtnTitle.setEnabled(false);\n+\t\t\t\t} else {\n+\t\t\t\t\tsaveBtn.setEnabled(true);\n+\t\t\t\t\tsaveBtnTitle.setEnabled(true);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void afterTextChanged(Editable editable) {\n+\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\tprivate void saveTemplate() {\n+\t\ttry {\n+\t\t\tString newName = nameEditText.getText().toString();\n+\t\t\tString urlToLoad = urlEditText.getText().toString();\n+\t\t\ttemplate.setName(newName);\n+\t\t\ttemplate.setUrlToLoad(urlToLoad.isEmpty() ? null : urlToLoad.replace(\"{$x}\", \"{1}\").replace(\"{$y}\", \"{2}\").replace(\"{$z}\", \"{0}\"));\n+\t\t\ttemplate.setMinZoom(minZoom);\n+\t\t\ttemplate.setMaxZoom(maxZoom);\n+\t\t\ttemplate.setEllipticYTile(elliptic);\n+\t\t\ttemplate.setExpirationTimeMinutes(expireTimeMinutes);\n+\t\t\tFile f = app.getAppPath(IndexConstants.TILES_INDEX_DIR + editedLayerName);\n+\t\t\tif (f.exists()) {\n+\t\t\t\tint extIndex = f.getName().lastIndexOf('.');\n+\t\t\t\tString ext = extIndex == -1 ? \"\" : f.getName().substring(extIndex);\n+\t\t\t\tString originalName = extIndex == -1 ? f.getName() : f.getName().substring(0, extIndex);\n+\t\t\t\tif (!Algorithms.objectEquals(newName, originalName)) {\n+\t\t\t\t\tif (IndexConstants.SQLITE_EXT.equals(ext) && sqliteDB) {\n+\t\t\t\t\t\trenameSQLiteFile(app, f, newName, null);\n+\t\t\t\t\t} else if (!sqliteDB) {\n+\t\t\t\t\t\tf.renameTo(app.getAppPath(IndexConstants.TILES_INDEX_DIR + newName));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (sqliteDB) {\n+\t\t\t\tif (!f.exists() || f.isDirectory()) {\n+\t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n+\t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n+\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"0,1,2,3\",", "originalCommit": "2151028d2db0c8ed079aaade2adad04966a0d2f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bb9aa16496fdcf48385361afc1670c323167eeb", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -309,13 +314,13 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\tif (!f.exists() || f.isDirectory()) {\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n \t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n-\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"0,1,2,3\",\n+\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"\",\n \t\t\t\t\t\t\t\t\telliptic, false, \"\", expireTimeMinutes > 0,\n \t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n \t\t\t\t\t\t\t);\n \t\t\t\t\tsqLiteTileSource.createDataBase();\n \t\t\t\t} else {\n-\t\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\t\tList<TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, f, knownTemplates);\n \t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n \t\t\t\t\tsqLiteTileSource.updateFromTileSourceTemplate(template);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 13a4313d62..528efff916 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -309,13 +314,13 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\tif (!f.exists() || f.isDirectory()) {\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n \t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n-\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"0,1,2,3\",\n+\t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"\",\n \t\t\t\t\t\t\t\t\telliptic, false, \"\", expireTimeMinutes > 0,\n \t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n \t\t\t\t\t\t\t);\n \t\t\t\t\tsqLiteTileSource.createDataBase();\n \t\t\t\t} else {\n-\t\t\t\t\tList<TileSourceManager.TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n+\t\t\t\t\tList<TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, f, knownTemplates);\n \t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n \t\t\t\t\tsqLiteTileSource.updateFromTileSourceTemplate(template);\n", "next_change": {"commit": "9cc21370587a2facb1ff25a8b3b3b5704ecb13cf", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 528efff916..859bb6dd42 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -325,8 +375,14 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n \t\t\t\t\tsqLiteTileSource.updateFromTileSourceTemplate(template);\n \t\t\t\t}\n+\t\t\t\tif (f.exists() && f.isDirectory()) {\n+\t\t\t\t\tAlgorithms.removeAllFiles(f);\n+\t\t\t\t}\n \t\t\t} else {\n \t\t\t\tgetSettings().installTileSource(template);\n+\t\t\t\tif (f.exists() && !f.isDirectory()) {\n+\t\t\t\t\tf.delete();\n+\t\t\t\t}\n \t\t\t}\n \t\t\tFragment fragment = getTargetFragment();\n \t\t\tif (fragment instanceof OnMapSourceUpdateListener) {\n", "next_change": {"commit": "30049f3cb3762045e4d6423eec305017fd56724d", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 859bb6dd42..32b53d627a 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -369,20 +394,14 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n \t\t\t\t\t\t\t);\n \t\t\t\t\tsqLiteTileSource.createDataBase();\n-\t\t\t\t} else {\n-\t\t\t\t\tList<TileSourceTemplate> knownTemplates = TileSourceManager.getKnownSourceTemplates();\n-\t\t\t\t\tSQLiteTileSource sqLiteTileSource = new SQLiteTileSource(app, f, knownTemplates);\n-\t\t\t\t\tsqLiteTileSource.couldBeDownloadedFromInternet();\n-\t\t\t\t\tsqLiteTileSource.updateFromTileSourceTemplate(template);\n-\t\t\t\t}\n-\t\t\t\tif (f.exists() && f.isDirectory()) {\n-\t\t\t\t\tAlgorithms.removeAllFiles(f);\n+\t\t\t\t\tstorageChanged = f.exists();\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tgetSettings().installTileSource(template);\n-\t\t\t\tif (f.exists() && !f.isDirectory()) {\n-\t\t\t\t\tf.delete();\n-\t\t\t\t}\n+\t\t\t\tstorageChanged = f.exists() && IndexConstants.SQLITE_EXT.equals(oldExt);\n+\t\t\t}\n+\t\t\tif (storageChanged) {\n+\t\t\t\tnew DeleteTilesTask(app).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, f);\n \t\t\t}\n \t\t\tFragment fragment = getTargetFragment();\n \t\t\tif (fragment instanceof OnMapSourceUpdateListener) {\n", "next_change": {"commit": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 32b53d627a..94dc944cb1 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -398,7 +399,7 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tgetSettings().installTileSource(template);\n-\t\t\t\tstorageChanged = f.exists() && IndexConstants.SQLITE_EXT.equals(oldExt);\n+\t\t\t\tstorageChanged = f != null && f.exists() && IndexConstants.SQLITE_EXT.equals(ext);\n \t\t\t}\n \t\t\tif (storageChanged) {\n \t\t\t\tnew DeleteTilesTask(app).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, f);\n", "next_change": {"commit": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "changed_code": [{"header": "diff --git a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\nindex 94dc944cb1..4a70c3465c 100644\n--- a/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/mapsource/EditMapSourceDialogFragment.java\n", "chunk": "@@ -391,14 +385,14 @@ public class EditMapSourceDialogFragment extends BaseOsmAndDialogFragment\n \t\t\t\t\tSQLiteTileSource sqLiteTileSource =\n \t\t\t\t\t\t\tnew SQLiteTileSource(app, newName, minZoom,\n \t\t\t\t\t\t\t\t\tmaxZoom, urlToLoad, \"\",\n-\t\t\t\t\t\t\t\t\telliptic, false, \"\", expireTimeMinutes > 0,\n+\t\t\t\t\t\t\t\t\telliptic, false, \"\", \"\", expireTimeMinutes > 0,\n \t\t\t\t\t\t\t\t\texpireTimeMinutes * 60 * 1000L, false, \"\"\n \t\t\t\t\t\t\t);\n \t\t\t\t\tsqLiteTileSource.createDataBase();\n \t\t\t\t\tstorageChanged = f.exists();\n \t\t\t\t}\n \t\t\t} else {\n-\t\t\t\tgetSettings().installTileSource(template);\n+\t\t\t\tsettings.installTileSource(template);\n \t\t\t\tstorageChanged = f != null && f.exists() && IndexConstants.SQLITE_EXT.equals(ext);\n \t\t\t}\n \t\t\tif (storageChanged) {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "0fe100e6091d2cbc2ba2eebc86814d461ac6552a", "message": "Merge commit", "committedDate": null}, {"oid": "571ac59a0686b61fa454a2e3f280c5835d0e9b27", "committedDate": "2020-06-09 13:50:49 +0300", "message": "fix layouts on android 4"}, {"oid": "baec03ec1e395e243c6c77849426e33d444c7c63", "committedDate": "2020-06-09 14:30:34 +0300", "message": "add / edit toolbar title"}, {"oid": "690ddb52e7e71b09f4f52806c7e0297508fb9787", "committedDate": "2020-06-09 16:28:41 +0300", "message": "don`t save with empty name/url"}, {"oid": "765aafb4e7ce29c4561656da8143b5b6d731d0aa", "committedDate": "2020-06-09 16:51:56 +0300", "message": "warning dialog on zooms change for used source"}, {"oid": "0b9fe37de0ce952c37fd77593f77dc2aa989ac45", "committedDate": "2020-06-09 18:46:03 +0300", "message": "fix input layout on android 4"}, {"oid": "2fc466f546a5ed8fc34eb4aa38cb415328f30cfe", "committedDate": "2020-06-11 12:10:08 +0300", "message": "small refactor"}, {"oid": "b6c8ab7362755ab60e90c49c7510a4dc781e056b", "committedDate": "2020-06-11 18:06:48 +0300", "message": "add online source from url"}, {"oid": "8d83048dd2245c43d06a72752df2f8cf4844c276", "committedDate": "2020-06-11 18:32:02 +0300", "message": "open link in inner browser"}, {"oid": "f05effa1576b6e405ee52b08d906519359f83f19", "committedDate": "2020-06-12 11:35:45 +0300", "message": "fix exit dialog"}, {"oid": "404079888bbbb97372a6e83daf3464eb52ffb00b", "committedDate": "2020-06-12 12:13:37 +0300", "message": "show sqlite extension"}, {"oid": "9cc21370587a2facb1ff25a8b3b3b5704ecb13cf", "committedDate": "2020-06-12 13:12:08 +0300", "message": "remove duplicates on map storage change"}, {"oid": "a726955291a38a6b89c07d52cc94b2be29049457", "committedDate": "2020-06-12 13:32:11 +0300", "message": "hide keyboard on scroll"}, {"oid": "e27dc91a3b5499db12b34cc714351d3e505b3d25", "committedDate": "2020-06-12 13:36:27 +0300", "message": "save btn font"}, {"oid": "cdaa450de5f5316a8a96f8c06164e3014d2e7c87", "committedDate": "2020-06-12 13:41:43 +0300", "message": "fix text fields stroke color"}, {"oid": "a0c58cb624dc603d0e226ab0650ebe14d5f8e5e2", "committedDate": "2020-06-12 14:50:16 +0300", "message": "show errors on empty text fields"}, {"oid": "ab1050d43d0e39da59a008a4747f610e5c7e7c7c", "committedDate": "2020-06-12 15:20:46 +0300", "message": "fix text multiline in text fields"}, {"oid": "1e2f5e65816a8cb187d80cd172d290cdb078b112", "committedDate": "2020-06-12 15:23:38 +0300", "message": "set cursor at the end"}, {"oid": "73d7c93f679e24a8f5a766e6f96aab4ce970252a", "committedDate": "2020-06-12 17:01:03 +0300", "message": "showClearTilesWarningDialog for storage change"}, {"oid": "30674159e151a75a473b2746d47357afa84a8aba", "committedDate": "2020-06-12 17:15:46 +0300", "message": "Revert \"show sqlite extension\""}, {"oid": "30049f3cb3762045e4d6423eec305017fd56724d", "committedDate": "2020-06-15 14:13:27 +0300", "message": "refactor"}, {"oid": "377fe41cc6a97f7e7fcc386ebebf84b856f8566d", "committedDate": "2020-06-15 14:39:59 +0300", "message": "refactor saving template"}, {"oid": "7f40160f0d920001fbb8977ee223fbe46334f5a2", "committedDate": "2020-06-16 18:30:25 +0300", "message": "small refactor"}, {"oid": "08bd2a8546e35489c4023b4460334fe48011bf9f", "committedDate": "2020-07-07 13:51:17 +0300", "message": "Material theme"}, {"oid": "c42838463247738da5f23e492ef9105919cb9428", "committedDate": "2020-08-18 00:10:57 +0200", "message": "Fix compilation"}, {"oid": "be5216cd8d38887ea8d84752b1d2621ee7290f5d", "committedDate": "2021-08-09 22:44:02 +0300", "message": "Move getColor methods to separate class"}, {"oid": "673d6a518b237ea5b8c014a83bfbff5871e9ad86", "committedDate": "2021-08-13 20:04:10 +0500", "message": "Fix possible `IllegalStateException` for Fragments"}, {"oid": "64e0ef58e85ba3c7716184154cf30e582d66ffaa", "committedDate": "2021-08-25 17:58:23 +0300", "message": "Add fragment manager check to AndroidUtils and remove some outdated screens"}, {"oid": "04acca615d803381b71b6a5a48bcecb86841bbff", "committedDate": "2021-08-25 18:18:33 +0300", "message": "Merge branch 'master' into colors_fixing"}, {"oid": "409161f7985fd3d3f55bc2436a75cc4e39037b66", "committedDate": "2021-09-20 13:05:00 +0300", "message": "Fix \"Edit online source - UI mistakes\""}, {"oid": "8fbdac8c8faabf4c407cdef19589bec3ae1d0b97", "committedDate": "2021-09-24 05:11:05 +0500", "message": "Delete Prolog lib completely and replace methods of its dependency"}, {"oid": "c241bee06d974438725b578ef5430d7268a8311a", "committedDate": "2021-12-07 17:08:53 +0500", "message": "Move SQLiteTileSource to `net.osmand.plus.resources`"}, {"oid": "47a19dc1880f4fae81f19d428df344ce9c3f19df", "committedDate": "2021-12-08 00:22:33 +0500", "message": "Move AndroidNetworkUtils, AndroidUtils, ColorUtilities, FileUtils, JsonUtils, OsmAndFormatter, PicassoUtils, UiUtilities to `net.osmand.plus.utils`"}, {"oid": "dcd96be76739562aea54b92f74d71b86aaa90b5a", "committedDate": "2022-03-16 19:43:34 +0200", "message": "Extract function \"showFullArticle\" to AndroidUtils as \"openUrl\""}, {"oid": "32bf60e2532f6555de264cb1b3b4deb7bec320c8", "committedDate": "2022-05-02 18:04:41 +0300", "message": "Fix Documentation links"}, {"oid": "635d042fe98149c1ac063a2d16554b1e23554e0f", "committedDate": "2022-05-13 12:06:15 +0200", "message": "Add links separate file"}, {"oid": "2b262759389f2e822b085b9e2b1cf4e7d7c0c3e5", "committedDate": "2022-05-31 14:21:05 +0500", "message": "Rename string resource"}, {"oid": "bef177c5d7a415b747e377b7ff2cda844bb6c05f", "committedDate": "2022-07-15 22:06:47 +0300", "message": "Update final fields"}, {"oid": "f1dcc4d7206c501d152bced637217b65cc20ff84", "committedDate": "2022-07-15 22:09:41 +0300", "message": "Clean redundant fields initialisation"}, {"oid": "4e025d0ef6df0b52003b6aa39e6658b0a5dfa4a5", "committedDate": "2022-07-15 23:07:36 +0300", "message": "Remove unnecessary final modifier from local variables"}, {"oid": "b9ef75c09f598bbc85c77678b5d5204d69203f13", "committedDate": "2023-03-21 12:28:08 +0200", "message": "Review fixes"}]}, {"oid": "f69dc384dc4b7652540458e0a7604a97b60480d8", "url": "https://github.com/osmandapp/OsmAnd/commit/f69dc384dc4b7652540458e0a7604a97b60480d8", "message": "refactor LocalIndexesFragment", "committedDate": "2020-05-28T08:43:03Z", "type": "commit"}, {"oid": "88d3dc12eebfb84b4e3f5e8538222df2a1ca67cf", "url": "https://github.com/osmandapp/OsmAnd/commit/88d3dc12eebfb84b4e3f5e8538222df2a1ca67cf", "message": "refactor EditMapSourceDialogFragment", "committedDate": "2020-05-28T09:11:14Z", "type": "commit"}, {"oid": "0e93d406669788d3c3bad529d5deb6c3bee8f6f4", "url": "https://github.com/osmandapp/OsmAnd/commit/0e93d406669788d3c3bad529d5deb6c3bee8f6f4", "message": "refactor renameFile", "committedDate": "2020-05-28T10:14:05Z", "type": "commit"}, {"oid": "fac931e801cbc9ebe19b30b01576c40135283e5f", "url": "https://github.com/osmandapp/OsmAnd/commit/fac931e801cbc9ebe19b30b01576c40135283e5f", "message": "refactor SQLiteTileSource and FileUtils", "committedDate": "2020-05-28T11:55:40Z", "type": "commit"}, {"oid": "848eb2cfbee61c2102d57773212ffb5600c7ea29", "url": "https://github.com/osmandapp/OsmAnd/commit/848eb2cfbee61c2102d57773212ffb5600c7ea29", "message": "refactor", "committedDate": "2020-05-28T12:32:20Z", "type": "commit"}, {"oid": "1bb9aa16496fdcf48385361afc1670c323167eeb", "url": "https://github.com/osmandapp/OsmAnd/commit/1bb9aa16496fdcf48385361afc1670c323167eeb", "message": "small refactor", "committedDate": "2020-05-28T14:35:25Z", "type": "commit"}]}