{"pr_number": 2123, "pr_title": "Split Unit duties into a Hangar class", "pr_author": "sixlettervariables", "pr_createdAt": "2020-10-05T20:43:49Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2123", "timeline": [{"oid": "e145018d37220795b2c41652acca0ebf724a1770", "url": "https://github.com/MegaMek/mekhq/commit/e145018d37220795b2c41652acca0ebf724a1770", "message": "Add a Hangar class to handle unit related actions", "committedDate": "2020-10-06T19:13:39Z", "type": "commit"}, {"oid": "c830304a7dc1c67a19f9a76be2f76e290c33953a", "url": "https://github.com/MegaMek/mekhq/commit/c830304a7dc1c67a19f9a76be2f76e290c33953a", "message": "Move the Campaign to use the new Hangar", "committedDate": "2020-10-06T19:13:39Z", "type": "commit"}, {"oid": "0fbf6ddf6ab8334212a53acc4413373866a0b70b", "url": "https://github.com/MegaMek/mekhq/commit/0fbf6ddf6ab8334212a53acc4413373866a0b70b", "message": "Rename Campaign::addUnit to addNewUnit", "committedDate": "2020-10-06T19:13:39Z", "type": "commit"}, {"oid": "211a0bb678070803c080859b84d42ddfc9c385c2", "url": "https://github.com/MegaMek/mekhq/commit/211a0bb678070803c080859b84d42ddfc9c385c2", "message": "Split out sorted views of the hangar into HangarSorter", "committedDate": "2020-10-06T19:13:40Z", "type": "commit"}, {"oid": "8a8709b596b25c291adb76fdb772eaa1f503729f", "url": "https://github.com/MegaMek/mekhq/commit/8a8709b596b25c291adb76fdb772eaa1f503729f", "message": "Move specialized requirements on getUnits to callers", "committedDate": "2020-10-06T19:13:40Z", "type": "commit"}, {"oid": "eb461f07fa33a6b4ea2ca65fa5de5b7ebafce619", "url": "https://github.com/MegaMek/mekhq/commit/eb461f07fa33a6b4ea2ca65fa5de5b7ebafce619", "message": "Transition away from Campaign::getUnits", "committedDate": "2020-10-06T19:14:26Z", "type": "commit"}, {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "url": "https://github.com/MegaMek/mekhq/commit/02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "message": "Remove unnecessary import", "committedDate": "2020-10-06T19:14:28Z", "type": "commit"}, {"oid": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "url": "https://github.com/MegaMek/mekhq/commit/02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "message": "Remove unnecessary import", "committedDate": "2020-10-06T19:14:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0ODA4NA==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500548084", "body": "Tab spacing", "bodyText": "Tab spacing", "bodyHTML": "<p dir=\"auto\">Tab spacing</p>", "author": "Windchild292", "createdAt": "2020-10-06T19:35:50Z", "path": "MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java", "diffHunk": "@@ -365,14 +365,7 @@ private void addUnit(Entity en, boolean pay) {\n \t\t\t\tcampaign.getLocalDate())) {\n \t\t\treturn;\n \t\t}\n-\t\tcampaign.addUnit(en, false, 0);\n-\t\tUnit unit = null;\n-\t\tfor (Unit u : campaign.getUnits()) {\n-\t\t\tif (u.getEntity() == en) {\n-\t\t\t\tunit = u;\n-\t\t\t\tbreak;\n-\t\t\t}\n-        }\n+\t\tUnit unit = campaign.addNewUnit(en, false, 0);\n         if (unit == null) {\n             // No such unit matching the entity.\n             return;", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjA1NA==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500566054", "bodyText": "Swore I got all of these, may not have pushed the change.", "author": "sixlettervariables", "createdAt": "2020-10-06T20:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0ODA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "06f1efe0018e796197cf5eb660627efb385f29bb", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex 397983640..14bdbe942 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -365,7 +361,14 @@ public class PersonnelMarketDialog extends JDialog {\n \t\t\t\tcampaign.getLocalDate())) {\n \t\t\treturn;\n \t\t}\n-\t\tUnit unit = campaign.addNewUnit(en, false, 0);\n+\t\tcampaign.addUnit(en, false, 0);\n+\t\tUnit unit = null;\n+\t\tfor (Unit u : campaign.getUnits()) {\n+\t\t\tif (u.getEntity() == en) {\n+\t\t\t\tunit = u;\n+\t\t\t\tbreak;\n+\t\t\t}\n+        }\n         if (unit == null) {\n             // No such unit matching the entity.\n             return;\n", "next_change": {"commit": "6017ea3690ecd5a4a3fa881bc208359bfe7d2d61", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex 14bdbe942..1ec9f6911 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -349,57 +353,50 @@ public class PersonnelMarketDialog extends JDialog {\n                 personnelMarket.removeAttachedEntity(pid);\n             }\n             refreshPersonView();\n-\t\t}\n-\t}\n-\n-\tprivate void addUnit(Entity en, boolean pay) {\n-\t\tif (null == en) {\n-\t\t\treturn;\n-\t\t}\n-\t\tif (pay && !campaign.getFinances().debit(unitCost, Transaction.C_UNIT,\n-\t\t\t\t\"Purchased \" + en.getShortName(),\n-\t\t\t\tcampaign.getLocalDate())) {\n-\t\t\treturn;\n-\t\t}\n-\t\tcampaign.addUnit(en, false, 0);\n-\t\tUnit unit = null;\n-\t\tfor (Unit u : campaign.getUnits()) {\n-\t\t\tif (u.getEntity() == en) {\n-\t\t\t\tunit = u;\n-\t\t\t\tbreak;\n-\t\t\t}\n         }\n+    }\n+\n+    private void addUnit(Entity en, boolean pay) {\n+        if (null == en) {\n+            return;\n+        }\n+        if (pay && !campaign.getFinances().debit(unitCost, Transaction.C_UNIT,\n+                \"Purchased \" + en.getShortName(),\n+                campaign.getLocalDate())) {\n+            return;\n+        }\n+        Unit unit = campaign.addNewUnit(en, false, 0);\n         if (unit == null) {\n             // No such unit matching the entity.\n             return;\n         }\n \n-\t\tif (unit.usesSoloPilot()) {\n-\t\t\tunit.addPilotOrSoldier(selectedPerson);\n-\t\t\tselectedPerson.setOriginalUnit(unit);\n-\t\t} else if (unit.usesSoldiers()) {\n-\t\t\tunit.addPilotOrSoldier(selectedPerson);\n-\t\t} else if (selectedPerson.canDrive(en)) {\n-\t\t\tunit.addDriver(selectedPerson);\n-\t\t} else if (selectedPerson.canGun(en)) {\n-\t\t\tunit.addGunner(selectedPerson);\n-\t\t} else if (selectedPerson.getPrimaryRole() == Person.T_NAVIGATOR) {\n-\t\t\tunit.setNavigator(selectedPerson);\n-\t\t} else {\n-\t\t\tunit.addVesselCrew(selectedPerson);\n-\t\t}\n-\n-\t\tcampaign.hirePersonnelFor(unit.getId(), !pay);\n-\t}\n-\n-\tprivate void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n-\t    selectedPerson = null;\n-    \tpersonnelMarket.setPaidRecruitment(radioPaidRecruitment.isSelected());\n-    \tif (radioPaidRecruitment.isSelected()) {\n-    \t\tpersonnelMarket.setPaidRecruitType(comboRecruitType.getSelectedIndex() + 1);\n-    \t}\n-\t    setVisible(false);\n-\t}\n+        if (unit.usesSoloPilot()) {\n+            unit.addPilotOrSoldier(selectedPerson);\n+            selectedPerson.setOriginalUnit(unit);\n+        } else if (unit.usesSoldiers()) {\n+            unit.addPilotOrSoldier(selectedPerson);\n+        } else if (selectedPerson.canDrive(en)) {\n+            unit.addDriver(selectedPerson);\n+        } else if (selectedPerson.canGun(en)) {\n+            unit.addGunner(selectedPerson);\n+        } else if (selectedPerson.getPrimaryRole() == Person.T_NAVIGATOR) {\n+            unit.setNavigator(selectedPerson);\n+        } else {\n+            unit.addVesselCrew(selectedPerson);\n+        }\n+\n+        campaign.hirePersonnelFor(unit.getId(), !pay);\n+    }\n+\n+    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n+        selectedPerson = null;\n+        personnelMarket.setPaidRecruitment(radioPaidRecruitment.isSelected());\n+        if (radioPaidRecruitment.isSelected()) {\n+            personnelMarket.setPaidRecruitType(comboRecruitType.getSelectedIndex() + 1);\n+        }\n+        setVisible(false);\n+    }\n \n     private void filterPersonnel() {\n         PersonnelFilter nGroup = (comboPersonType.getSelectedItem() != null)\n", "next_change": {"commit": "1077aa3ce47d85a2b52d46fe24d0a9d6500338b3", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex 1ec9f6911..7015d2183 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -380,20 +382,21 @@ public class PersonnelMarketDialog extends JDialog {\n             unit.addDriver(selectedPerson);\n         } else if (selectedPerson.canGun(en)) {\n             unit.addGunner(selectedPerson);\n-        } else if (selectedPerson.getPrimaryRole() == Person.T_NAVIGATOR) {\n+        } else if (selectedPerson.getPrimaryRole().isVesselNavigator()) {\n             unit.setNavigator(selectedPerson);\n         } else {\n             unit.addVesselCrew(selectedPerson);\n         }\n \n-        campaign.hirePersonnelFor(unit.getId(), !pay);\n+        HirePersonnelUnitAction hireAction = new HirePersonnelUnitAction(!pay);\n+        hireAction.execute(campaign, unit);\n     }\n \n-    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n+    private void btnCloseActionPerformed(ActionEvent evt) {\n         selectedPerson = null;\n         personnelMarket.setPaidRecruitment(radioPaidRecruitment.isSelected());\n         if (radioPaidRecruitment.isSelected()) {\n-            personnelMarket.setPaidRecruitType(comboRecruitType.getSelectedIndex() + 1);\n+            personnelMarket.setPaidRecruitRole((PersonnelRole) comboRecruitRole.getSelectedItem());\n         }\n         setVisible(false);\n     }\n", "next_change": {"commit": "2db5d447486a94fd80b74fbecf4ce11013d3c4a7", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex 7015d2183..b5dab99d5 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -392,11 +387,11 @@ public class PersonnelMarketDialog extends JDialog {\n         hireAction.execute(campaign, unit);\n     }\n \n-    private void btnCloseActionPerformed(ActionEvent evt) {\n+    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n         selectedPerson = null;\n         personnelMarket.setPaidRecruitment(radioPaidRecruitment.isSelected());\n         if (radioPaidRecruitment.isSelected()) {\n-            personnelMarket.setPaidRecruitRole((PersonnelRole) comboRecruitRole.getSelectedItem());\n+            personnelMarket.setPaidRecruitType(comboRecruitType.getSelectedIndex() + 1);\n         }\n         setVisible(false);\n     }\n", "next_change": {"commit": "ec5843cb0d12174c7d5f83419268e5184d2d60f6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex b5dab99d5..b82114019 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -387,11 +392,11 @@ public class PersonnelMarketDialog extends JDialog {\n         hireAction.execute(campaign, unit);\n     }\n \n-    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n+    private void btnCloseActionPerformed(ActionEvent evt) {\n         selectedPerson = null;\n         personnelMarket.setPaidRecruitment(radioPaidRecruitment.isSelected());\n         if (radioPaidRecruitment.isSelected()) {\n-            personnelMarket.setPaidRecruitType(comboRecruitType.getSelectedIndex() + 1);\n+            personnelMarket.setPaidRecruitRole((PersonnelRole) comboRecruitRole.getSelectedItem());\n         }\n         setVisible(false);\n     }\n", "next_change": {"commit": "6657632d012f4c360cebe06d2367433c24e31f19", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\nindex b82114019..5798223f2 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PersonnelMarketDialog.java\n", "chunk": "@@ -405,7 +414,7 @@ public class PersonnelMarketDialog extends JDialog {\n         PersonnelFilter nGroup = (comboPersonType.getSelectedItem() != null)\n                 ? (PersonnelFilter) comboPersonType.getSelectedItem()\n                 : PersonnelFilter.ACTIVE;\n-        sorter.setRowFilter(new RowFilter<PersonnelTableModel, Integer>() {\n+        sorter.setRowFilter(new RowFilter<>() {\n             @Override\n             public boolean include(Entry<? extends PersonnelTableModel, ? extends Integer> entry) {\n                 return nGroup.getFilteredInformation(entry.getModel().getPerson(entry.getIdentifier()));\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MDAwNg==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500550006", "body": "We should never have a null unit, so we probably want to fix the backend reason for this check if it still exists", "bodyText": "We should never have a null unit, so we probably want to fix the backend reason for this check if it still exists", "bodyHTML": "<p dir=\"auto\">We should never have a null unit, so we probably want to fix the backend reason for this check if it still exists</p>", "author": "Windchild292", "createdAt": "2020-10-06T19:39:36Z", "path": "MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java", "diffHunk": "@@ -248,8 +247,7 @@ private int getTotalForceUnits() {\n         // Count total units for transport\n         getTotalCombatUnits();\n \n-        List<Unit> unitList = getCampaign().getCopyOfUnits();\n-        for (Unit u : unitList) {\n+        for (Unit u : getCampaign().getHangar().getUnits()) {\n             if (u == null) {\n                 continue;\n             }", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "133ab1e5b7987a643bc8f1d2d03e8f9e4ce829a0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\nindex 066e2c328..f4ba5d8c4 100644\n--- a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n+++ b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n", "chunk": "@@ -242,7 +233,6 @@ public class CampaignOpsReputation extends AbstractUnitRating {\n         int totalAero = 0;\n         int totalInfantry = 0;\n         int totalBattleArmor = 0;\n-        int forceTotal;\n \n         // Count total units for transport\n         getTotalCombatUnits();\n", "next_change": {"commit": "a328a1e42771f0c7052a7c9c1b2583134a8534f4", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\nindex f4ba5d8c4..8aa7a4ba1 100644\n--- a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n+++ b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n", "chunk": "@@ -233,6 +238,7 @@ public class CampaignOpsReputation extends AbstractUnitRating {\n         int totalAero = 0;\n         int totalInfantry = 0;\n         int totalBattleArmor = 0;\n+        int forceTotal;\n \n         // Count total units for transport\n         getTotalCombatUnits();\n", "next_change": {"commit": "e0f16b480db19ce9d36290caa03be8f6be77cace", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\nindex 8aa7a4ba1..3f42bd2b8 100644\n--- a/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n+++ b/MekHQ/src/mekhq/campaign/rating/CampaignOpsReputation.java\n", "chunk": "@@ -238,7 +232,6 @@ public class CampaignOpsReputation extends AbstractUnitRating {\n         int totalAero = 0;\n         int totalInfantry = 0;\n         int totalBattleArmor = 0;\n-        int forceTotal;\n \n         // Count total units for transport\n         getTotalCombatUnits();\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1MjY0Nw==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500552647", "body": "```suggestion\r\n            if (j == units.size()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(j == units.size()) {\n          \n          \n            \n                        if (j == units.size()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span>(j <span class=\"pl-k\">==</span> units<span class=\"pl-k\">.</span>size()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(j <span class=\"pl-k\">==</span> units<span class=\"pl-k\">.</span>size()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T19:44:38Z", "path": "MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java", "diffHunk": "@@ -137,7 +137,7 @@ private void initComponents() {\n             gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n             gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;\n             gridBagConstraints.weightx = 1.0;\n-            if(j == (units.size())) {\n+            if(j == units.size()) {", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java b/MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java\nindex 07ee3734b..a5fab7847 100644\n--- a/MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java\n+++ b/MekHQ/src/mekhq/gui/dialog/PayCollateralDialog.java\n", "chunk": "@@ -137,7 +137,7 @@ public class PayCollateralDialog extends JDialog {\n             gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n             gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;\n             gridBagConstraints.weightx = 1.0;\n-            if(j == units.size()) {\n+            if (j == units.size()) {\n                 gridBagConstraints.weighty = 1.0;\n             }\n             gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NDYwMw==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500554603", "body": "```suggestion\r\n        if (unit.getId() == null) {\r\n            unit.setId(UUID.randomUUID());\r\n        }\r\n\r\n        units.put(unit.getId(), unit);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    UUID id = unit.getId();\n          \n          \n            \n                    if (id == null) {\n          \n          \n            \n                        id = UUID.randomUUID();\n          \n          \n            \n                        unit.setId(id);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    units.put(id, unit);\n          \n          \n            \n                    if (unit.getId() == null) {\n          \n          \n            \n                        unit.setId(UUID.randomUUID());\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    units.put(unit.getId(), unit);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">UUID</span> id <span class=\"pl-k\">=</span> unit<span class=\"pl-k\">.</span>getId();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (id <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            id <span class=\"pl-k\">=</span> <span class=\"pl-c1\">UUID</span><span class=\"pl-k\">.</span>randomUUID();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            unit<span class=\"pl-k\">.</span>setId(id);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        units<span class=\"pl-k\">.</span>put(id, unit);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (unit<span class=\"pl-k\">.</span>getId() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            unit<span class=\"pl-k\">.</span>setId(<span class=\"pl-c1\">UUID</span><span class=\"pl-k\">.</span>randomUUID());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        units<span class=\"pl-k\">.</span>put(unit<span class=\"pl-k\">.</span>getId(), unit);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T19:48:27Z", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NTU3OQ==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500555579", "bodyText": "Just an idea, because this is a default getter it should be fine", "author": "Windchild292", "createdAt": "2020-10-06T19:50:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NDYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 78e735d90..4be3f1f60 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -55,13 +55,11 @@ public class Hangar {\n             return;\n         }\n \n-        UUID id = unit.getId();\n-        if (id == null) {\n-            id = UUID.randomUUID();\n-            unit.setId(id);\n+        if (unit.getId() == null) {\n+            unit.setId(UUID.randomUUID());\n         }\n \n-        units.put(id, unit);\n+        units.put(unit.getId(), unit);\n     }\n \n     /**\n", "next_change": {"commit": "494b38fcedcda31bef2e6f701152a47ce1b0e397", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 4be3f1f60..f1bedda5d 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -68,7 +69,7 @@ public class Hangar {\n      * @return The unit matching the unique identifier,\n      *         otherwise null if that unit does not exist.\n      */\n-    public Unit getUnit(UUID id) {\n+    public @Nullable Unit getUnit(UUID id) {\n         return units.get(id);\n     }\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NzU4Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500557583", "body": "```suggestion\r\n        MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">pw1</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">println(</span><span class=\"pl-smi\">MekHqXmlUtil</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">indentStr(</span>indent<span class=\"x x-first\">) </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">&lt;</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>tag<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">&gt;</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">MekHqXmlUtil</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">writeSimpleXMLOpenIndentedLine(pw1, </span>indent<span class=\"x x-first x-last\">, </span>tag);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T19:54:06Z", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);\n+    }\n+\n+    /**\n+     * Gets a unit by a given ID.\n+     * @param id The unique identifier of a unit.\n+     * @return The unit matching the unique identifier,\n+     *         otherwise null if that unit does not exist.\n+     */\n+    public Unit getUnit(UUID id) {\n+        return units.get(id);\n+    }\n+\n+    /**\n+     * Gets a collection of units in the hangar.\n+     * @return A collection of units in the hangar.\n+     */\n+    public Collection<Unit> getUnits() {\n+        return units.values();\n+    }\n+\n+    /**\n+     * Gets a Stream of units in the hangar.\n+     * @return A Stream of units in the hangar.\n+     */\n+    public Stream<Unit> getUnitsStream() {\n+        return units.values().stream();\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units in the hangar.\n+     * @param getCosts A function which returns a cost for a unit.\n+     * @return The total costs for the units.\n+     */\n+    public Money getUnitCosts(Function<Unit, Money> getCosts) {\n+        return getUnitsStream().map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units matching a predicate\n+     * in the hangar.\n+     * @param predicate A function to use to select a unit.\n+     * @param getCosts A function which returns a cost for a selected unit.\n+     * @return The total costs for the units selected by the predicate.\n+     */\n+    public Money getUnitCosts(Predicate<Unit> predicate, Function<Unit, Money> getCosts) {\n+        return getUnitsStream().filter(predicate).map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each unit.\n+     */\n+    public void forEachUnit(Consumer<Unit> consumer) {\n+        units.forEach((id, unit) -> consumer.accept(unit));\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each ID-unit pair.\n+     */\n+    public void forEachUnit(BiConsumer<UUID, Unit> consumer) {\n+        units.forEach(consumer);\n+    }\n+\n+    /**\n+     * Searches for a specific unit using the given predicate.\n+     * @param predicate A function to use to select a given unit.\n+     * @return The first unit found which matches the predicate,\n+     *         otherwise null if no unit was found.\n+     */\n+    public Unit findUnit(Predicate<Unit> predicate) {\n+        if (predicate == null) {\n+            return null;\n+        }\n+\n+        for (Unit unit : units.values()) {\n+            if (predicate.test(unit)) {\n+                return unit;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Removes a unit from the hangar.\n+     * @param id The unit ID.\n+     * @return true if the unit was removed, otherwise false.\n+     */\n+    public boolean removeUnit(UUID id) {\n+        return null != units.remove(id);\n+    }\n+\n+\tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 78e735d90..4be3f1f60 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -155,12 +153,12 @@ public class Hangar {\n     }\n \n \tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n+        MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n             unit.writeToXml(pw1, indent + 1);\n         });\n \n-        pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");\n+        MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n \t}\n }\n", "next_change": {"commit": "3b458aafcf56ec74e926bf3a593b88b9c7d14842", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 4be3f1f60..ffe7a3fbf 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -160,5 +160,5 @@ public class Hangar {\n         });\n \n         MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n-\t}\n+    }\n }\n", "next_change": {"commit": "4bddfb6f0d3906ed96120594d84d4e476e42d971", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex ffe7a3fbf..0e72dff27 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -156,7 +156,7 @@ public class Hangar {\n         MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n-            unit.writeToXml(pw1, indent + 1);\n+            unit.writeToXML(pw1, indent + 1);\n         });\n \n         MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n", "next_change": {"commit": "8b34d18aa825a1416df7b1a8ecb2bb898cea1026", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 0e72dff27..41a68efad 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -153,12 +154,12 @@ public class Hangar {\n     }\n \n     public void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n+        MHQXMLUtility.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n             unit.writeToXML(pw1, indent + 1);\n         });\n \n-        MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n+        MHQXMLUtility.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n     }\n }\n", "next_change": {"commit": "5213209bddb612458226cdfa7561a7220f8b3b67", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 41a68efad..bf0eb2ecf 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -153,13 +153,9 @@ public class Hangar {\n         return null != units.remove(id);\n     }\n \n-    public void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        MHQXMLUtility.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n-\n-        forEachUnit(unit -> {\n-            unit.writeToXML(pw1, indent + 1);\n-        });\n-\n-        MHQXMLUtility.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n+    public void writeToXML(final PrintWriter pw, final int indent, final String tag) {\n+        MHQXMLUtility.writeSimpleXMLOpenTag(pw, indent, tag);\n+        forEachUnit(unit -> unit.writeToXML(pw, indent + 1));\n+        MHQXMLUtility.writeSimpleXMLCloseTag(pw, indent, tag);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1ODAyNQ==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500558025", "body": "```suggestion\r\n        MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">pw1</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">println(</span><span class=\"pl-smi\">MekHqXmlUtil</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">indentStr(</span>indent<span class=\"x x-first\">) </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">&lt;/</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>tag<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">&gt;</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">MekHqXmlUtil</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">writeSimpleXMLCloseIndentedLine(pw1, </span>indent<span class=\"x x-first x-last\">, </span>tag);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T19:54:57Z", "path": "MekHQ/src/mekhq/campaign/Hangar.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Hangar.java\n+ *\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package mekhq.campaign;\n+\n+import java.io.PrintWriter;\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+import mekhq.MekHqXmlUtil;\n+import mekhq.campaign.finances.Money;\n+import mekhq.campaign.unit.Unit;\n+\n+/**\n+ * Represents a hangar which contains zero or more units.\n+ */\n+public class Hangar {\n+    private Map<UUID, Unit> units = new LinkedHashMap<>();\n+\n+    /**\n+     * Adds a unit to the hangar.\n+     *\n+     * If the unit does not have an ID, one is\n+     * assigned to it.\n+     *\n+     * @param unit The unit to add to the hangar.\n+     */\n+    public void addUnit(Unit unit) {\n+        if (unit == null) {\n+            return;\n+        }\n+\n+        UUID id = unit.getId();\n+        if (id == null) {\n+            id = UUID.randomUUID();\n+            unit.setId(id);\n+        }\n+\n+        units.put(id, unit);\n+    }\n+\n+    /**\n+     * Gets a unit by a given ID.\n+     * @param id The unique identifier of a unit.\n+     * @return The unit matching the unique identifier,\n+     *         otherwise null if that unit does not exist.\n+     */\n+    public Unit getUnit(UUID id) {\n+        return units.get(id);\n+    }\n+\n+    /**\n+     * Gets a collection of units in the hangar.\n+     * @return A collection of units in the hangar.\n+     */\n+    public Collection<Unit> getUnits() {\n+        return units.values();\n+    }\n+\n+    /**\n+     * Gets a Stream of units in the hangar.\n+     * @return A Stream of units in the hangar.\n+     */\n+    public Stream<Unit> getUnitsStream() {\n+        return units.values().stream();\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units in the hangar.\n+     * @param getCosts A function which returns a cost for a unit.\n+     * @return The total costs for the units.\n+     */\n+    public Money getUnitCosts(Function<Unit, Money> getCosts) {\n+        return getUnitsStream().map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Calculates the total costs for the units matching a predicate\n+     * in the hangar.\n+     * @param predicate A function to use to select a unit.\n+     * @param getCosts A function which returns a cost for a selected unit.\n+     * @return The total costs for the units selected by the predicate.\n+     */\n+    public Money getUnitCosts(Predicate<Unit> predicate, Function<Unit, Money> getCosts) {\n+        return getUnitsStream().filter(predicate).map(getCosts).reduce(Money.zero(), Money::plus);\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each unit.\n+     */\n+    public void forEachUnit(Consumer<Unit> consumer) {\n+        units.forEach((id, unit) -> consumer.accept(unit));\n+    }\n+\n+    /**\n+     * Executes a function for each unit in the hangar.\n+     * @param consumer A function to apply to each ID-unit pair.\n+     */\n+    public void forEachUnit(BiConsumer<UUID, Unit> consumer) {\n+        units.forEach(consumer);\n+    }\n+\n+    /**\n+     * Searches for a specific unit using the given predicate.\n+     * @param predicate A function to use to select a given unit.\n+     * @return The first unit found which matches the predicate,\n+     *         otherwise null if no unit was found.\n+     */\n+    public Unit findUnit(Predicate<Unit> predicate) {\n+        if (predicate == null) {\n+            return null;\n+        }\n+\n+        for (Unit unit : units.values()) {\n+            if (predicate.test(unit)) {\n+                return unit;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Removes a unit from the hangar.\n+     * @param id The unit ID.\n+     * @return true if the unit was removed, otherwise false.\n+     */\n+    public boolean removeUnit(UUID id) {\n+        return null != units.remove(id);\n+    }\n+\n+\tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n+\n+        forEachUnit(unit -> {\n+            unit.writeToXml(pw1, indent + 1);\n+        });\n+\n+        pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 78e735d90..4be3f1f60 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -155,12 +153,12 @@ public class Hangar {\n     }\n \n \tpublic void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        pw1.println(MekHqXmlUtil.indentStr(indent) + \"<\" + tag + \">\");\n+        MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n             unit.writeToXml(pw1, indent + 1);\n         });\n \n-        pw1.println(MekHqXmlUtil.indentStr(indent) + \"</\" + tag + \">\");\n+        MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n \t}\n }\n", "next_change": {"commit": "3b458aafcf56ec74e926bf3a593b88b9c7d14842", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 4be3f1f60..ffe7a3fbf 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -160,5 +160,5 @@ public class Hangar {\n         });\n \n         MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n-\t}\n+    }\n }\n", "next_change": {"commit": "4bddfb6f0d3906ed96120594d84d4e476e42d971", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex ffe7a3fbf..0e72dff27 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -156,7 +156,7 @@ public class Hangar {\n         MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n-            unit.writeToXml(pw1, indent + 1);\n+            unit.writeToXML(pw1, indent + 1);\n         });\n \n         MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n", "next_change": {"commit": "8b34d18aa825a1416df7b1a8ecb2bb898cea1026", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 0e72dff27..41a68efad 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -153,12 +154,12 @@ public class Hangar {\n     }\n \n     public void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        MekHqXmlUtil.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n+        MHQXMLUtility.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n \n         forEachUnit(unit -> {\n             unit.writeToXML(pw1, indent + 1);\n         });\n \n-        MekHqXmlUtil.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n+        MHQXMLUtility.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n     }\n }\n", "next_change": {"commit": "5213209bddb612458226cdfa7561a7220f8b3b67", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Hangar.java b/MekHQ/src/mekhq/campaign/Hangar.java\nindex 41a68efad..bf0eb2ecf 100644\n--- a/MekHQ/src/mekhq/campaign/Hangar.java\n+++ b/MekHQ/src/mekhq/campaign/Hangar.java\n", "chunk": "@@ -153,13 +153,9 @@ public class Hangar {\n         return null != units.remove(id);\n     }\n \n-    public void writeToXml(PrintWriter pw1, int indent, String tag) {\n-        MHQXMLUtility.writeSimpleXMLOpenIndentedLine(pw1, indent, tag);\n-\n-        forEachUnit(unit -> {\n-            unit.writeToXML(pw1, indent + 1);\n-        });\n-\n-        MHQXMLUtility.writeSimpleXMLCloseIndentedLine(pw1, indent, tag);\n+    public void writeToXML(final PrintWriter pw, final int indent, final String tag) {\n+        MHQXMLUtility.writeSimpleXMLOpenTag(pw, indent, tag);\n+        forEachUnit(unit -> unit.writeToXML(pw, indent + 1));\n+        MHQXMLUtility.writeSimpleXMLCloseTag(pw, indent, tag);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MDg3Ng==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500560876", "body": "```suggestion\r\n                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .filter(u -> u.requiresMaintenance() && null != u.getTech())\n          \n          \n            \n                            .filter(u -> u.requiresMaintenance() && (null != u.getTech()))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .filter(u <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> u<span class=\"pl-k\">.</span>requiresMaintenance() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> u<span class=\"pl-k\">.</span>getTech())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .filter(u <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> u<span class=\"pl-k\">.</span>requiresMaintenance() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span><span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> u<span class=\"pl-k\">.</span>getTech(<span class=\"x x-first x-last\">)</span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:00:17Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -3676,24 +3617,19 @@ private Money getTheoreticalPayroll(boolean noInfantry) {\n     }\n \n     public Money getMaintenanceCosts() {\n-        Money costs = Money.zero();\n         if (campaignOptions.payForMaintain()) {\n-            for (Map.Entry<UUID, Unit> mu : units.entrySet()) {\n-                Unit u = mu.getValue();\n-                if (u.requiresMaintenance() && null != u.getTech()) {\n-                    costs = costs.plus(u.getMaintenanceCost());\n-                }\n-            }\n+            return getHangar().getUnitsStream()\n+                .filter(u -> u.requiresMaintenance() && null != u.getTech())", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3617,31 +3166,36 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public Money getMaintenanceCosts() {\n-        if (campaignOptions.payForMaintain()) {\n-            return getHangar().getUnitsStream()\n-                .filter(u -> u.requiresMaintenance() && null != u.getTech())\n-                .map(Unit::getMaintenanceCost)\n-                .reduce(Money.zero(), (a, b) -> a.plus(b));\n+        Money costs = Money.zero();\n+        if(campaignOptions.payForMaintain()) {\n+            for (Map.Entry<UUID, Unit> mu : units.entrySet()) {\n+                Unit u = mu.getValue();\n+                if (u.requiresMaintenance() && null != u.getTech()) {\n+                    costs = costs.plus(u.getMaintenanceCost());\n+                }\n+            }\n         }\n-        return Money.zero();\n+        return costs;\n     }\n \n     public Money getWeeklyMaintenanceCosts() {\n-        return getHangar().getUnitsStream()\n-            .map(Unit::getWeeklyMaintenanceCost)\n-            .reduce(Money.zero(), (a, b) -> a.plus(b));\n+        Money costs = Money.zero();\n+        for (Map.Entry<UUID, Unit> u : units.entrySet()) {\n+            costs = costs.plus(u.getValue().getWeeklyMaintenanceCost());\n+        }\n+        return costs;\n     }\n \n     public Money getOverheadExpenses() {\n-        if (getCampaignOptions().payForOverhead()) {\n-            return getTheoreticalPayroll(false).multipliedBy(0.05);\n-        } else {\n+        if(!campaignOptions.payForOverhead()) {\n             return Money.zero();\n         }\n+\n+        return getTheoreticalPayroll(false).multipliedBy(0.05);\n     }\n \n     public void removeUnit(UUID id) {\n-        Unit unit = getHangar().getUnit(id);\n+        Unit unit = getUnit(id);\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n", "next_change": {"commit": "ed6a5c015aa33d0bffdcd3297b9482ce600eb146", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..5e8e38209 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3187,11 +3863,11 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public Money getOverheadExpenses() {\n-        if(!campaignOptions.payForOverhead()) {\n+        if (getCampaignOptions().payForOverhead()) {\n+            return getTheoreticalPayroll(false).multipliedBy(0.05);\n+        } else {\n             return Money.zero();\n         }\n-\n-        return getTheoreticalPayroll(false).multipliedBy(0.05);\n     }\n \n     public void removeUnit(UUID id) {\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 5e8e38209..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3871,7 +3641,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void removeUnit(UUID id) {\n-        Unit unit = getUnit(id);\n+        Unit unit = getHangar().getUnit(id);\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n", "next_change": {"commit": "796379c3c13e8dadad4ac4cfd29f02a30e9c2bd1", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..fe45182fd 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3588,58 +3587,6 @@ public class Campaign implements Serializable, ITechManager {\n         return null;\n     }\n \n-    public Money getPayRoll() {\n-        return getPayRoll(false);\n-    }\n-\n-    public Money getPayRoll(boolean noInfantry) {\n-        if (getCampaignOptions().payForSalaries()) {\n-            return getTheoreticalPayroll(noInfantry);\n-        } else {\n-            return Money.zero();\n-        }\n-    }\n-\n-    private Money getTheoreticalPayroll(boolean noInfantry) {\n-        Money salaries = Money.zero();\n-        for (Person p : getActivePersonnel()) {\n-            // Optionized infantry (Unofficial)\n-            if (!(noInfantry && (p.getPrimaryRole() == Person.T_INFANTRY))) {\n-                salaries = salaries.plus(p.getSalary());\n-            }\n-        }\n-        // add in astechs from the astech pool\n-        // we will assume Mech Tech * able-bodied * enlisted (changed from vee mechanic)\n-        // 800 * 0.5 * 0.6 = 240\n-        salaries = salaries.plus(240.0 * astechPool);\n-        salaries = salaries.plus(320.0 * medicPool);\n-        return salaries;\n-    }\n-\n-    public Money getMaintenanceCosts() {\n-        if (campaignOptions.payForMaintain()) {\n-            return getHangar().getUnitsStream()\n-                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))\n-                .map(Unit::getMaintenanceCost)\n-                .reduce(Money.zero(), (a, b) -> a.plus(b));\n-        }\n-        return Money.zero();\n-    }\n-\n-    public Money getWeeklyMaintenanceCosts() {\n-        return getHangar().getUnitsStream()\n-            .map(Unit::getWeeklyMaintenanceCost)\n-            .reduce(Money.zero(), (a, b) -> a.plus(b));\n-    }\n-\n-    public Money getOverheadExpenses() {\n-        if (getCampaignOptions().payForOverhead()) {\n-            return getTheoreticalPayroll(false).multipliedBy(0.05);\n-        } else {\n-            return Money.zero();\n-        }\n-    }\n-\n     public void removeUnit(UUID id) {\n         Unit unit = getHangar().getUnit(id);\n \n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex fe45182fd..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3587,6 +3586,58 @@ public class Campaign implements Serializable, ITechManager {\n         return null;\n     }\n \n+    public Money getPayRoll() {\n+        return getPayRoll(false);\n+    }\n+\n+    public Money getPayRoll(boolean noInfantry) {\n+        if (getCampaignOptions().payForSalaries()) {\n+            return getTheoreticalPayroll(noInfantry);\n+        } else {\n+            return Money.zero();\n+        }\n+    }\n+\n+    private Money getTheoreticalPayroll(boolean noInfantry) {\n+        Money salaries = Money.zero();\n+        for (Person p : getActivePersonnel()) {\n+            // Optionized infantry (Unofficial)\n+            if (!(noInfantry && (p.getPrimaryRole() == Person.T_INFANTRY))) {\n+                salaries = salaries.plus(p.getSalary());\n+            }\n+        }\n+        // add in astechs from the astech pool\n+        // we will assume Mech Tech * able-bodied * enlisted (changed from vee mechanic)\n+        // 800 * 0.5 * 0.6 = 240\n+        salaries = salaries.plus(240.0 * astechPool);\n+        salaries = salaries.plus(320.0 * medicPool);\n+        return salaries;\n+    }\n+\n+    public Money getMaintenanceCosts() {\n+        if (campaignOptions.payForMaintain()) {\n+            return getHangar().getUnitsStream()\n+                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))\n+                .map(Unit::getMaintenanceCost)\n+                .reduce(Money.zero(), (a, b) -> a.plus(b));\n+        }\n+        return Money.zero();\n+    }\n+\n+    public Money getWeeklyMaintenanceCosts() {\n+        return getHangar().getUnitsStream()\n+            .map(Unit::getWeeklyMaintenanceCost)\n+            .reduce(Money.zero(), (a, b) -> a.plus(b));\n+    }\n+\n+    public Money getOverheadExpenses() {\n+        if (getCampaignOptions().payForOverhead()) {\n+            return getTheoreticalPayroll(false).multipliedBy(0.05);\n+        } else {\n+            return Money.zero();\n+        }\n+    }\n+\n     public void removeUnit(UUID id) {\n         Unit unit = getHangar().getUnit(id);\n \n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3586,58 +3602,6 @@ public class Campaign implements Serializable, ITechManager {\n         return null;\n     }\n \n-    public Money getPayRoll() {\n-        return getPayRoll(false);\n-    }\n-\n-    public Money getPayRoll(boolean noInfantry) {\n-        if (getCampaignOptions().payForSalaries()) {\n-            return getTheoreticalPayroll(noInfantry);\n-        } else {\n-            return Money.zero();\n-        }\n-    }\n-\n-    private Money getTheoreticalPayroll(boolean noInfantry) {\n-        Money salaries = Money.zero();\n-        for (Person p : getActivePersonnel()) {\n-            // Optionized infantry (Unofficial)\n-            if (!(noInfantry && (p.getPrimaryRole() == Person.T_INFANTRY))) {\n-                salaries = salaries.plus(p.getSalary());\n-            }\n-        }\n-        // add in astechs from the astech pool\n-        // we will assume Mech Tech * able-bodied * enlisted (changed from vee mechanic)\n-        // 800 * 0.5 * 0.6 = 240\n-        salaries = salaries.plus(240.0 * astechPool);\n-        salaries = salaries.plus(320.0 * medicPool);\n-        return salaries;\n-    }\n-\n-    public Money getMaintenanceCosts() {\n-        if (campaignOptions.payForMaintain()) {\n-            return getHangar().getUnitsStream()\n-                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))\n-                .map(Unit::getMaintenanceCost)\n-                .reduce(Money.zero(), (a, b) -> a.plus(b));\n-        }\n-        return Money.zero();\n-    }\n-\n-    public Money getWeeklyMaintenanceCosts() {\n-        return getHangar().getUnitsStream()\n-            .map(Unit::getWeeklyMaintenanceCost)\n-            .reduce(Money.zero(), (a, b) -> a.plus(b));\n-    }\n-\n-    public Money getOverheadExpenses() {\n-        if (getCampaignOptions().payForOverhead()) {\n-            return getTheoreticalPayroll(false).multipliedBy(0.05);\n-        } else {\n-            return Money.zero();\n-        }\n-    }\n-\n     public void removeUnit(UUID id) {\n         Unit unit = getHangar().getUnit(id);\n \n", "next_change": {"commit": "0cbe836f9e807faf4cbef1d391b1ce3ad0e865d1", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..618f9d792 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3607,7 +3468,7 @@ public class Campaign implements Serializable, ITechManager {\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n-            removePart(p);\n+            getWarehouse().removePart(p);\n         }\n \n         // remove any personnel from this unit\n", "next_change": {"commit": "18cddebe515dbc58e76c49ef789cb3f4b31bc8a2", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 618f9d792..c25cf0c03 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3468,7 +3521,7 @@ public class Campaign implements Serializable, ITechManager {\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n-            getWarehouse().removePart(p);\n+            removePart(p);\n         }\n \n         // remove any personnel from this unit\n", "next_change": {"commit": "a38a43b4cc7f7670aa7ffad2bf318bc15334d0a1", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c25cf0c03..cfc070d0e 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3521,7 +3473,7 @@ public class Campaign implements Serializable, ITechManager {\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n-            removePart(p);\n+            getWarehouse().removePart(p);\n         }\n \n         // remove any personnel from this unit\n", "next_change": {"commit": "494b38fcedcda31bef2e6f701152a47ce1b0e397", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex cfc070d0e..92ebf55a1 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -3470,6 +3501,9 @@ public class Campaign implements Serializable, ITechManager {\n \n     public void removeUnit(UUID id) {\n         Unit unit = getHangar().getUnit(id);\n+        if (unit == null) {\n+            return;\n+        }\n \n         // remove all parts for this unit as well\n         for (Part p : unit.getParts()) {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzMxMg==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563312", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:04:38Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzQzNQ==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563435", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:04:50Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzUyMg==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563522", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:04:57Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MzU5Nw==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500563597", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:05:02Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDA0Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564043", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:05:48Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDA4NA==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564084", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:05:54Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDEzNA==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564134", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:06:00Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NDMwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500564309", "body": "```suggestion\r\n        return (int) Math.round(getHangar().getUnitsStream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (int)Math.round(getHangar().getUnitsStream()\n          \n          \n            \n                    return (int) Math.round(getHangar().getUnitsStream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>round(getHangar()<span class=\"pl-k\">.</span>getUnitsStream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:06:23Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -7236,117 +7172,88 @@ public void setHealingTimeOptions(int newHeal, int newNaturalHeal) {\n     }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int)Math.round(getHangar().getUnitsStream()", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7163,97 +7101,119 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n-    /**\n-     * Returns our list of potential transport ships\n-     * @return\n-     */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n-    }\n \n     public int getTotalMechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getMechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalASFBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getASFCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalSmallCraftBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getSmallCraftCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalBattleArmorBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getBattleArmorCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalInfantryBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getInfantryCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getHeavyVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalLightVehicleBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getLightVehicleCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalProtomechBays() {\n-        return (int)Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n+        double bays = 0;\n+        for (Unit u : getUnits()) {\n+            bays += u.getProtomechCapacity();\n+        }\n+        return (int)Math.round(bays);\n     }\n \n     public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n+        double collars = 0;\n+        for (Unit u : getUnits()) {\n+            if (u.getEntity() instanceof Jumpship) {\n+                collars += u.getDocks();\n+            }\n+        }\n+        return (int)Math.round(collars);\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getInsulatedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getRefrigeratedCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLivestockCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getLiquidCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n+        double capacity = 0;\n+        for (Unit u : getUnits()) {\n+            capacity += u.getCargoCapacity();\n+        }\n+        return capacity;\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7101,119 +7163,97 @@ public class Campaign implements Serializable, ITechManager {\n             }\n         }\n     }\n+    /**\n+     * Returns our list of potential transport ships\n+     * @return\n+     */\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n+    }\n \n     public int getTotalMechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getMechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n     }\n \n     public int getTotalASFBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getASFCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n     }\n \n     public int getTotalSmallCraftBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getSmallCraftCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n     }\n \n     public int getTotalBattleArmorBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getBattleArmorCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n     }\n \n     public int getTotalInfantryBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getInfantryCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n     }\n \n     public int getTotalHeavyVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getHeavyVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalLightVehicleBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getLightVehicleCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n     }\n \n     public int getTotalProtomechBays() {\n-        double bays = 0;\n-        for (Unit u : getUnits()) {\n-            bays += u.getProtomechCapacity();\n-        }\n-        return (int)Math.round(bays);\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n     }\n \n     public int getTotalDockingCollars() {\n-        double collars = 0;\n-        for (Unit u : getUnits()) {\n-            if (u.getEntity() instanceof Jumpship) {\n-                collars += u.getDocks();\n-            }\n-        }\n-        return (int)Math.round(collars);\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n     }\n \n     public double getTotalInsulatedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getInsulatedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalRefrigeratedCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getRefrigeratedCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLivestockCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLivestockCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalLiquidCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getLiquidCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n     }\n \n     public double getTotalCargoCapacity() {\n-        double capacity = 0;\n-        for (Unit u : getUnits()) {\n-            capacity += u.getCargoCapacity();\n-        }\n-        return capacity;\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n     }\n \n     // Liquid not included\n", "next_change": {"commit": "04a16de448a0c7d576a6c3c64c9d23ae08384bae", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..993f59cfe 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7171,453 +7165,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n     public String getCombatPersonnelDetails() {\n         int[] countPersonByType = new int[Person.T_NUM];\n         int countTotal = 0;\n", "next_change": {"commit": "a254e204d91c3fd90698936f8d21aba26aaf0142", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 993f59cfe..712bf00c4 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7165,140 +7023,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0400aac175c219dc2fb73ea0a8dfbbf429aaff6e", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 712bf00c4..dfecec111 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7023,6 +7175,587 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n+    public int getTotalMechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getMechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalASFBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getASFCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalSmallCraftBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getSmallCraftCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalBattleArmorBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getBattleArmorCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalInfantryBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInfantryCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalHeavyVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getHeavyVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalLightVehicleBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLightVehicleCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalProtomechBays() {\n+        return (int) Math.round(getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getProtomechCapacity)\n+            .sum());\n+    }\n+\n+    public int getTotalDockingCollars() {\n+        return getHangar().getUnitsStream()\n+            .filter(u -> u.getEntity() instanceof Jumpship)\n+            .mapToInt(Unit::getDocks)\n+            .sum();\n+    }\n+\n+    public double getTotalInsulatedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getInsulatedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalRefrigeratedCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLivestockCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLivestockCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalLiquidCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getLiquidCargoCapacity)\n+            .sum();\n+    }\n+\n+    public double getTotalCargoCapacity() {\n+        return getHangar().getUnitsStream()\n+            .mapToDouble(Unit::getCargoCapacity)\n+            .sum();\n+    }\n+\n+    // Liquid not included\n+    public double getTotalCombinedCargoCapacity() {\n+        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n+                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n+    }\n+\n+    public int getNumberOfUnitsByType(long type) {\n+        return getNumberOfUnitsByType(type, false, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n+        return getNumberOfUnitsByType(type, inTransit, false);\n+    }\n+\n+    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            if (unit.isMothballed()) {\n+                if (type == Unit.ETYPE_MOTHBALLED) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n+                    && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        return num;\n+    }\n+\n+    public double getCargoTonnage(boolean inTransit) {\n+        return getCargoTonnage(inTransit, false);\n+    }\n+\n+    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n+    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n+        double cargoTonnage = 0;\n+        double mothballedTonnage = 0;\n+        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n+        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n+        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n+        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n+        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n+        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n+        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n+        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n+        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n+        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n+\n+        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n+                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n+                            .sum();\n+\n+        // place units in bays\n+        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n+        // Remaining units go into cargo\n+        for (Unit unit : getUnits()) {\n+            if (!inTransit && !unit.isPresent()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (unit.isMothballed()) {\n+                mothballedTonnage += en.getWeight();\n+                continue;\n+            }\n+            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n+                continue;\n+            }\n+            // cargoTonnage += en.getWeight();\n+        }\n+        if (mothballed) {\n+            return mothballedTonnage;\n+        }\n+        return cargoTonnage;\n+    }\n+\n+    public String getCargoDetails() {\n+        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n+        double ccc = this.getTotalCombinedCargoCapacity();\n+        double gcc = this.getTotalCargoCapacity();\n+        double icc = this.getTotalInsulatedCargoCapacity();\n+        double lcc = this.getTotalLiquidCargoCapacity();\n+        double scc = this.getTotalLivestockCargoCapacity();\n+        double rcc = this.getTotalRefrigeratedCargoCapacity();\n+        double tonnage = this.getCargoTonnage(false);\n+        double mothballedTonnage = this.getCargoTonnage(false, true);\n+        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+        double combined = (tonnage + mothballedTonnage);\n+        double transported = Math.min(combined, ccc);\n+        double overage = combined - transported;\n+\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n+        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n+        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n+        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n+\n+        return new String(sb);\n+    }\n+\n+    public int getOccupiedBays(long type) {\n+        return getOccupiedBays(type, false);\n+    }\n+\n+    public int getOccupiedBays(long type, boolean lv) {\n+        int num = 0;\n+        for (Unit unit : getUnits()) {\n+            if (unit.isMothballed()) {\n+                continue;\n+            }\n+            Entity en = unit.getEntity();\n+            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_AERO && en instanceof Aero\n+                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n+                num++;\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n+                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n+                    num++;\n+                }\n+                continue;\n+            }\n+            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n+                num++;\n+            }\n+        }\n+\n+        if (type == Entity.ETYPE_MECH) {\n+            return Math.min(getTotalMechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_AERO) {\n+            return Math.min(getTotalASFBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_INFANTRY) {\n+            return Math.min(getTotalInfantryBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_BATTLEARMOR) {\n+            return Math.min(getTotalBattleArmorBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_TANK) {\n+            if (lv) {\n+                return Math.min(getTotalLightVehicleBays(), num);\n+            }\n+            return Math.min(getTotalHeavyVehicleBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_SMALL_CRAFT) {\n+            return Math.min(getTotalSmallCraftBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_PROTOMECH) {\n+            return Math.min(getTotalProtomechBays(), num);\n+        }\n+\n+        if (type == Entity.ETYPE_DROPSHIP) {\n+            return Math.min(getTotalDockingCollars(), num);\n+        }\n+\n+        return -1; // default, this is an error condition\n+    }\n+\n+    public String getTransportDetails() {\n+        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n+        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n+        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n+        int noCF = Math\n+                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n+        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n+        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n+        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n+        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n+                0);\n+        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n+        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n+        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n+        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n+        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n+\n+        String asfAppend = \"\";\n+        int newNoASF = Math.max(noASF - freeSC, 0);\n+        int placedASF = Math.max(noASF - newNoASF, 0);\n+        if (noASF > 0 && freeSC > 0) {\n+            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n+            freeSC -= placedASF;\n+        }\n+\n+        String lvAppend = \"\";\n+        int newNolv = Math.max(nolv - freehv, 0);\n+        int placedlv = Math.max(nolv - newNolv, 0);\n+        if (nolv > 0 && freehv > 0) {\n+            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n+            freehv -= placedlv;\n+        }\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n+\n+        // Lets do Mechs first.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n+                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n+\n+        // Lets do ASF next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n+                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n+\n+        // Lets do Light Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n+                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n+                nolv, lvAppend));\n+\n+        // Lets do Heavy Vehicles next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n+                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n+                nohv));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n+                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n+                    \"Light Vehicles Not Transported:\", newNolv));\n+        }\n+\n+        if (nolv > 0 && freehv > 0) {\n+\n+        }\n+\n+        // Lets do Infantry next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n+                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n+\n+        if (noBA > 0 && freeinf > 0) {\n+\n+        }\n+\n+        // Lets do Battle Armor next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n+                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n+                noBA));\n+\n+        if (noinf > 0 && freeba > 0) {\n+\n+        }\n+\n+        // Lets do Small Craft next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n+                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n+                noSC));\n+\n+        if (noASF > 0 && freeSC > 0) {\n+            // Lets do ASF in Free Small Craft Bays next.\n+            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n+                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n+                    \"ASF Not Transported:\", newNoASF));\n+        }\n+\n+        // Lets do Protomechs next.\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n+                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n+                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n+\n+        sb.append(\"\\n\\n\");\n+\n+        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n+\n+        return new String(sb);\n+    }\n+\n+    public String getCombatPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+\n+        for (Person p : getPersonnel()) {\n+            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n+                continue;\n+            }\n+\n+            // Add them to the total count\n+            if (p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n+                    countInjured++;\n+                } else if (p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isCombatRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n+\n+        return sb.toString();\n+    }\n+\n+    public String getSupportPersonnelDetails() {\n+        int[] countPersonByType = new int[Person.T_NUM];\n+        int countTotal = 0;\n+        int countInjured = 0;\n+        int countMIA = 0;\n+        int countKIA = 0;\n+        int countDead = 0;\n+        int countRetired = 0;\n+        Money salary = Money.zero();\n+        int prisoners = 0;\n+        int bondsmen = 0;\n+        int dependents = 0;\n+\n+        for (Person p : getPersonnel()) {\n+            // Add them to the total count\n+            boolean primarySupport = p.hasPrimarySupportRole(false);\n+\n+            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n+                countPersonByType[p.getPrimaryRole()]++;\n+                countTotal++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+                salary = salary.plus(p.getSalary());\n+            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n+                prisoners++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n+                bondsmen++;\n+                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n+                    countInjured++;\n+                }\n+            } else if (primarySupport && p.getStatus().isRetired()) {\n+                countRetired++;\n+            } else if (primarySupport && p.getStatus().isMIA()) {\n+                countMIA++;\n+            } else if (primarySupport && p.getStatus().isKIA()) {\n+                countKIA++;\n+                countDead++;\n+            } else if (primarySupport && p.getStatus().isDead()) {\n+                countDead++;\n+            }\n+\n+            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n+                dependents++;\n+            }\n+        }\n+\n+        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n+\n+        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n+\n+        for (int i = 0; i < Person.T_NUM; i++) {\n+            if (Person.isSupportRole(i)) {\n+                sb.append(String.format(\"    %-30s    %4s\\n\",\n+                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n+            }\n+        }\n+\n+        sb.append(\"\\n\")\n+                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n+                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n+                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n+                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n+                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n+                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n+                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n+\n+        return sb.toString();\n+    }\n+\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "63e028b04713a41ec415910ea4d0ed03a3678864", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex dfecec111..6d504e628 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7175,587 +6893,6 @@ public class Campaign implements Serializable, ITechManager {\n         return transportShips;\n     }\n \n-    public int getTotalMechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getMechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalASFBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getASFCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalSmallCraftBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getSmallCraftCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalBattleArmorBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getBattleArmorCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalInfantryBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInfantryCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalHeavyVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getHeavyVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalLightVehicleBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLightVehicleCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalProtomechBays() {\n-        return (int) Math.round(getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getProtomechCapacity)\n-            .sum());\n-    }\n-\n-    public int getTotalDockingCollars() {\n-        return getHangar().getUnitsStream()\n-            .filter(u -> u.getEntity() instanceof Jumpship)\n-            .mapToInt(Unit::getDocks)\n-            .sum();\n-    }\n-\n-    public double getTotalInsulatedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getInsulatedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalRefrigeratedCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getRefrigeratedCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLivestockCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLivestockCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalLiquidCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getLiquidCargoCapacity)\n-            .sum();\n-    }\n-\n-    public double getTotalCargoCapacity() {\n-        return getHangar().getUnitsStream()\n-            .mapToDouble(Unit::getCargoCapacity)\n-            .sum();\n-    }\n-\n-    // Liquid not included\n-    public double getTotalCombinedCargoCapacity() {\n-        return getTotalCargoCapacity() + getTotalLivestockCargoCapacity()\n-                + getTotalInsulatedCargoCapacity() + getTotalRefrigeratedCargoCapacity();\n-    }\n-\n-    public int getNumberOfUnitsByType(long type) {\n-        return getNumberOfUnitsByType(type, false, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit) {\n-        return getNumberOfUnitsByType(type, inTransit, false);\n-    }\n-\n-    public int getNumberOfUnitsByType(long type, boolean inTransit, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            if (unit.isMothballed()) {\n-                if (type == Unit.ETYPE_MOTHBALLED) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft\n-                    && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        return num;\n-    }\n-\n-    public double getCargoTonnage(boolean inTransit) {\n-        return getCargoTonnage(inTransit, false);\n-    }\n-\n-    @SuppressWarnings(\"unused\") // FIXME: This whole method needs re-worked once Dropship Assignments are in\n-    public double getCargoTonnage(final boolean inTransit, final boolean mothballed) {\n-        double cargoTonnage = 0;\n-        double mothballedTonnage = 0;\n-        int mechs = getNumberOfUnitsByType(Entity.ETYPE_MECH);\n-        int ds = getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP);\n-        int sc = getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT);\n-        int cf = getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER);\n-        int asf = getNumberOfUnitsByType(Entity.ETYPE_AERO);\n-        int inf = getNumberOfUnitsByType(Entity.ETYPE_INFANTRY);\n-        int ba = getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR);\n-        int lv = getNumberOfUnitsByType(Entity.ETYPE_TANK, true);\n-        int hv = getNumberOfUnitsByType(Entity.ETYPE_TANK, false);\n-        int protos = getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH);\n-\n-        cargoTonnage += streamSpareParts().filter(p -> inTransit || p.isPresent())\n-                            .mapToDouble(p -> p.getQuantity() * p.getTonnage())\n-                            .sum();\n-\n-        // place units in bays\n-        // FIXME: This has been temporarily disabled. It really needs DropShip assignments done to fix it correctly.\n-        // Remaining units go into cargo\n-        for (Unit unit : getUnits()) {\n-            if (!inTransit && !unit.isPresent()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (unit.isMothballed()) {\n-                mothballedTonnage += en.getWeight();\n-                continue;\n-            }\n-            if (en instanceof GunEmplacement || en instanceof FighterSquadron || en instanceof Jumpship) {\n-                continue;\n-            }\n-            // cargoTonnage += en.getWeight();\n-        }\n-        if (mothballed) {\n-            return mothballedTonnage;\n-        }\n-        return cargoTonnage;\n-    }\n-\n-    public String getCargoDetails() {\n-        StringBuffer sb = new StringBuffer(\"Cargo\\n\\n\");\n-        double ccc = this.getTotalCombinedCargoCapacity();\n-        double gcc = this.getTotalCargoCapacity();\n-        double icc = this.getTotalInsulatedCargoCapacity();\n-        double lcc = this.getTotalLiquidCargoCapacity();\n-        double scc = this.getTotalLivestockCargoCapacity();\n-        double rcc = this.getTotalRefrigeratedCargoCapacity();\n-        double tonnage = this.getCargoTonnage(false);\n-        double mothballedTonnage = this.getCargoTonnage(false, true);\n-        double mothballedUnits = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-        double combined = (tonnage + mothballedTonnage);\n-        double transported = Math.min(combined, ccc);\n-        double overage = combined - transported;\n-\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Total Capacity:\", ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"General Capacity:\", gcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Insulated Capacity:\", icc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Liquid Capacity:\", lcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Livestock Capacity:\", scc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Refrigerated Capacity:\", rcc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Cargo Transported:\", tonnage));\n-        sb.append(String.format(\"%-35s      %4s (%1.0f)\\n\", \"Mothballed Units as Cargo (Tons):\", mothballedUnits, mothballedTonnage));\n-        sb.append(String.format(\"%-35s      %6.3f/%1.3f\\n\", \"Transported/Capacity:\", transported, ccc));\n-        sb.append(String.format(\"%-35s      %6.3f\\n\", \"Overage Not Transported:\", overage));\n-\n-        return new String(sb);\n-    }\n-\n-    public int getOccupiedBays(long type) {\n-        return getOccupiedBays(type, false);\n-    }\n-\n-    public int getOccupiedBays(long type, boolean lv) {\n-        int num = 0;\n-        for (Unit unit : getUnits()) {\n-            if (unit.isMothballed()) {\n-                continue;\n-            }\n-            Entity en = unit.getEntity();\n-            if (en instanceof GunEmplacement || en instanceof Jumpship) {\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_MECH && en instanceof Mech) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_DROPSHIP && en instanceof Dropship) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_SMALL_CRAFT && en instanceof SmallCraft && !(en instanceof Dropship)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_CONV_FIGHTER && en instanceof ConvFighter) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_AERO && en instanceof Aero\n-                    && !(en instanceof SmallCraft || en instanceof ConvFighter)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_INFANTRY && en instanceof Infantry && !(en instanceof BattleArmor)) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_BATTLEARMOR && en instanceof BattleArmor) {\n-                num++;\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_TANK && en instanceof Tank) {\n-                if ((en.getWeight() <= 50 && lv) || (en.getWeight() > 50 && !lv)) {\n-                    num++;\n-                }\n-                continue;\n-            }\n-            if (type == Entity.ETYPE_PROTOMECH && en instanceof Protomech) {\n-                num++;\n-            }\n-        }\n-\n-        if (type == Entity.ETYPE_MECH) {\n-            return Math.min(getTotalMechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_AERO) {\n-            return Math.min(getTotalASFBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_INFANTRY) {\n-            return Math.min(getTotalInfantryBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_BATTLEARMOR) {\n-            return Math.min(getTotalBattleArmorBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_TANK) {\n-            if (lv) {\n-                return Math.min(getTotalLightVehicleBays(), num);\n-            }\n-            return Math.min(getTotalHeavyVehicleBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_SMALL_CRAFT) {\n-            return Math.min(getTotalSmallCraftBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_PROTOMECH) {\n-            return Math.min(getTotalProtomechBays(), num);\n-        }\n-\n-        if (type == Entity.ETYPE_DROPSHIP) {\n-            return Math.min(getTotalDockingCollars(), num);\n-        }\n-\n-        return -1; // default, this is an error condition\n-    }\n-\n-    public String getTransportDetails() {\n-        int noMech = Math.max(getNumberOfUnitsByType(Entity.ETYPE_MECH) - getOccupiedBays(Entity.ETYPE_MECH), 0);\n-        int noDS = Math.max(getNumberOfUnitsByType(Entity.ETYPE_DROPSHIP) - getOccupiedBays(Entity.ETYPE_DROPSHIP), 0);\n-        int noSC = Math.max(getNumberOfUnitsByType(Entity.ETYPE_SMALL_CRAFT) - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: What type of bays do ConvFighters use?\n-        int noCF = Math\n-                .max(getNumberOfUnitsByType(Entity.ETYPE_CONV_FIGHTER) - getOccupiedBays(Entity.ETYPE_CONV_FIGHTER), 0);\n-        int noASF = Math.max(getNumberOfUnitsByType(Entity.ETYPE_AERO) - getOccupiedBays(Entity.ETYPE_AERO), 0);\n-        int nolv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK, false, true) - getOccupiedBays(Entity.ETYPE_TANK, true), 0);\n-        int nohv = Math.max(getNumberOfUnitsByType(Entity.ETYPE_TANK) - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int noinf = Math.max(getNumberOfUnitsByType(Entity.ETYPE_INFANTRY) - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int noBA = Math.max(getNumberOfUnitsByType(Entity.ETYPE_BATTLEARMOR) - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        @SuppressWarnings(\"unused\") // FIXME: This should be used somewhere...\n-        int noProto = Math.max(getNumberOfUnitsByType(Entity.ETYPE_PROTOMECH) - getOccupiedBays(Entity.ETYPE_PROTOMECH),\n-                0);\n-        int freehv = Math.max(getTotalHeavyVehicleBays() - getOccupiedBays(Entity.ETYPE_TANK), 0);\n-        int freeinf = Math.max(getTotalInfantryBays() - getOccupiedBays(Entity.ETYPE_INFANTRY), 0);\n-        int freeba = Math.max(getTotalBattleArmorBays() - getOccupiedBays(Entity.ETYPE_BATTLEARMOR), 0);\n-        int freeSC = Math.max(getTotalSmallCraftBays() - getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), 0);\n-        int mothballedAsCargo = Math.max(getNumberOfUnitsByType(Unit.ETYPE_MOTHBALLED), 0);\n-\n-        String asfAppend = \"\";\n-        int newNoASF = Math.max(noASF - freeSC, 0);\n-        int placedASF = Math.max(noASF - newNoASF, 0);\n-        if (noASF > 0 && freeSC > 0) {\n-            asfAppend = \" [\" + placedASF + \" ASF will be placed in Small Craft bays]\";\n-            freeSC -= placedASF;\n-        }\n-\n-        String lvAppend = \"\";\n-        int newNolv = Math.max(nolv - freehv, 0);\n-        int placedlv = Math.max(nolv - newNolv, 0);\n-        if (nolv > 0 && freehv > 0) {\n-            lvAppend = \" [\" + placedlv + \" Light Vehicles will be placed in Heavy Vehicle bays]\";\n-            freehv -= placedlv;\n-        }\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        StringBuffer sb = new StringBuffer(\"Transports\\n\\n\");\n-\n-        // Lets do Mechs first.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Mech Bays (Occupied):\",\n-                getTotalMechBays(), getOccupiedBays(Entity.ETYPE_MECH), \"Mechs Not Transported:\", noMech));\n-\n-        // Lets do ASF next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"ASF Bays (Occupied):\",\n-                getTotalASFBays(), getOccupiedBays(Entity.ETYPE_AERO), \"ASF Not Transported:\", noASF, asfAppend));\n-\n-        // Lets do Light Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d%s\\n\", \"Light Vehicle Bays (Occupied):\",\n-                getTotalLightVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK, true), \"Light Vehicles Not Transported:\",\n-                nolv, lvAppend));\n-\n-        // Lets do Heavy Vehicles next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Heavy Vehicle Bays (Occupied):\",\n-                getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK), \"Heavy Vehicles Not Transported:\",\n-                nohv));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   Light Vehicles in Heavy Vehicle Bays (Occupied):\",\n-                    getTotalHeavyVehicleBays(), getOccupiedBays(Entity.ETYPE_TANK) + placedlv,\n-                    \"Light Vehicles Not Transported:\", newNolv));\n-        }\n-\n-        if (nolv > 0 && freehv > 0) {\n-\n-        }\n-\n-        // Lets do Infantry next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Infantry Bays (Occupied):\",\n-                getTotalInfantryBays(), getOccupiedBays(Entity.ETYPE_INFANTRY), \"Infantry Not Transported:\", noinf));\n-\n-        if (noBA > 0 && freeinf > 0) {\n-\n-        }\n-\n-        // Lets do Battle Armor next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Battle Armor Bays (Occupied):\",\n-                getTotalBattleArmorBays(), getOccupiedBays(Entity.ETYPE_BATTLEARMOR), \"Battle Armor Not Transported:\",\n-                noBA));\n-\n-        if (noinf > 0 && freeba > 0) {\n-\n-        }\n-\n-        // Lets do Small Craft next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Small Craft Bays (Occupied):\",\n-                getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT), \"Small Craft Not Transported:\",\n-                noSC));\n-\n-        if (noASF > 0 && freeSC > 0) {\n-            // Lets do ASF in Free Small Craft Bays next.\n-            sb.append(String.format(\"%-35s   %4d (%4d)      %-35s     %4d\\n\", \"   ASF in Small Craft Bays (Occupied):\",\n-                    getTotalSmallCraftBays(), getOccupiedBays(Entity.ETYPE_SMALL_CRAFT) + placedASF,\n-                    \"ASF Not Transported:\", newNoASF));\n-        }\n-\n-        // Lets do Protomechs next.\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Protomech Bays (Occupied):\",\n-                getTotalProtomechBays(), getOccupiedBays(Entity.ETYPE_PROTOMECH), \"Protomechs Not Transported:\", noSC));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d (%4d)      %-35s     %4d\\n\", \"Docking Collars (Occupied):\",\n-                getTotalDockingCollars(), getOccupiedBays(Entity.ETYPE_DROPSHIP), \"Dropships Not Transported:\", noDS));\n-\n-        sb.append(\"\\n\\n\");\n-\n-        sb.append(String.format(\"%-35s      %4d\\n\", \"Mothballed Units (see Cargo report)\", mothballedAsCargo));\n-\n-        return new String(sb);\n-    }\n-\n-    public String getCombatPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-\n-        for (Person p : getPersonnel()) {\n-            if (!p.hasPrimaryCombatRole() || !p.getPrisonerStatus().isFree()) {\n-                continue;\n-            }\n-\n-            // Add them to the total count\n-            if (p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (getCampaignOptions().useAdvancedMedical() && p.getInjuries().size() > 0) {\n-                    countInjured++;\n-                } else if (p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Combat Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Combat Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isCombatRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Combat Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Combat Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Combat Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Combat Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Combat Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Combat Personnel: \").append(salary.toAmountAndSymbolString());\n-\n-        return sb.toString();\n-    }\n-\n-    public String getSupportPersonnelDetails() {\n-        int[] countPersonByType = new int[Person.T_NUM];\n-        int countTotal = 0;\n-        int countInjured = 0;\n-        int countMIA = 0;\n-        int countKIA = 0;\n-        int countDead = 0;\n-        int countRetired = 0;\n-        Money salary = Money.zero();\n-        int prisoners = 0;\n-        int bondsmen = 0;\n-        int dependents = 0;\n-\n-        for (Person p : getPersonnel()) {\n-            // Add them to the total count\n-            boolean primarySupport = p.hasPrimarySupportRole(false);\n-\n-            if (primarySupport && p.getPrisonerStatus().isFree() && p.getStatus().isActive()) {\n-                countPersonByType[p.getPrimaryRole()]++;\n-                countTotal++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-                salary = salary.plus(p.getSalary());\n-            } else if (p.getPrisonerStatus().isPrisoner() && p.getStatus().isActive()) {\n-                prisoners++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (p.getPrisonerStatus().isBondsman() && p.getStatus().isActive()) {\n-                bondsmen++;\n-                if (p.getInjuries().size() > 0 || p.getHits() > 0) {\n-                    countInjured++;\n-                }\n-            } else if (primarySupport && p.getStatus().isRetired()) {\n-                countRetired++;\n-            } else if (primarySupport && p.getStatus().isMIA()) {\n-                countMIA++;\n-            } else if (primarySupport && p.getStatus().isKIA()) {\n-                countKIA++;\n-                countDead++;\n-            } else if (primarySupport && p.getStatus().isDead()) {\n-                countDead++;\n-            }\n-\n-            if (p.isDependent() && p.getStatus().isActive() && p.getPrisonerStatus().isFree()) {\n-                dependents++;\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder(\"Support Personnel\\n\\n\");\n-\n-        sb.append(String.format(\"%-30s        %4s\\n\", \"Total Support Personnel\", countTotal));\n-\n-        for (int i = 0; i < Person.T_NUM; i++) {\n-            if (Person.isSupportRole(i)) {\n-                sb.append(String.format(\"    %-30s    %4s\\n\",\n-                        Person.getRoleDesc(i, getFaction().isClan()), countPersonByType[i]));\n-            }\n-        }\n-\n-        sb.append(\"\\n\")\n-                .append(String.format(\"%-30s        %4s\\n\", \"Injured Support Personnel\", countInjured))\n-                .append(String.format(\"%-30s        %4s\\n\", \"MIA Support Personnel\", countMIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"KIA Support Personnel\", countKIA))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Retired Support Personnel\", countRetired))\n-                .append(String.format(\"%-30s        %4s\\n\", \"Dead Support Personnel\", countDead))\n-                .append(\"\\nMonthly Salary For Support Personnel: \").append(salary.toAmountAndSymbolString())\n-                .append(String.format(\"\\nYou have \" + dependents + \" %s\", (dependents == 1) ? \"dependent\" : \"dependents\"))\n-                .append(String.format(\"\\nYou have \" + prisoners + \" prisoner%s\", (prisoners == 1) ? \"\" : \"s\"))\n-                .append(String.format(\"\\nYou have \" + bondsmen + \" %s\", (bondsmen == 1) ? \"bondsman\" : \"bondsmen\"));\n-\n-        return sb.toString();\n-    }\n-\n     public void doMaintenance(Unit u) {\n         if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 6d504e628..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6889,8 +6828,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6828,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6825,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6825,8 +6829,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<Unit> getTransportShips() {\n-        return Collections.unmodifiableSet(transportShips);\n+    public Set<UUID> getTransportShips() {\n+        return transportShips;\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6829,8 +6827,8 @@ public class Campaign implements Serializable, ITechManager {\n      * Returns our list of potential transport ships\n      * @return\n      */\n-    public Set<UUID> getTransportShips() {\n-        return transportShips;\n+    public Set<Unit> getTransportShips() {\n+        return Collections.unmodifiableSet(transportShips);\n     }\n \n     public void doMaintenance(Unit u) {\n", "next_change": {"commit": "e3e1ce62490858d93d695b7e7f8bf17dca068936", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b31772cc7..25ab4eb57 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6832,7 +6297,7 @@ public class Campaign implements Serializable, ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "d385d0bc8fd91a75c631f546272abbff8e07311a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 25ab4eb57..4b87ec54a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "0e39c3c4517d5cd46e99546d8e3b3a1cea7cb30b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4b87ec54a..60ded1a5f 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6297,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "da71474de7674e9b213472ce61b254a744c6ae5a", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 60ded1a5f..8d34f9840 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6297,7 +6294,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": {"commit": "724a8333d072d631c1072fd7ccf2707efe6e2b40", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 8d34f9840..9ed9f502c 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -6294,7 +6286,7 @@ public class Campaign implements ITechManager {\n     }\n \n     public void doMaintenance(Unit u) {\n-        if (!u.requiresMaintenance() || !campaignOptions.checkMaintenance()) {\n+        if (!u.requiresMaintenance() || !campaignOptions.isCheckMaintenance()) {\n             return;\n         }\n         // lets start by checking times\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NTE4OA==", "url": "https://github.com/MegaMek/mekhq/pull/2123#discussion_r500565188", "body": "```suggestion\r\n                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            if (null != p.getUnitId() && null != getHangar().getUnit(p.getUnitId())\n          \n          \n            \n                                            if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> p<span class=\"pl-k\">.</span>getUnitId() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> getHangar()<span class=\"pl-k\">.</span>getUnit(p<span class=\"pl-k\">.</span>getUnitId())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\">(</span><span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> p<span class=\"pl-k\">.</span>getUnitId()<span class=\"x x-first x-last\">)</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span><span class=\"pl-c1\">null</span> <span class=\"pl-k\">!=</span> getHangar()<span class=\"pl-k\">.</span>getUnit(p<span class=\"pl-k\">.</span>getUnitId(<span class=\"x x-first x-last\">)</span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-10-06T20:08:06Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -8194,8 +8101,8 @@ public void initAtB(boolean newCampaign) {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if (null != p.getUnitId() && null != units.get(p.getUnitId())\n-                                        && ms.getName().equals(units.get(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                if (null != p.getUnitId() && null != getHangar().getUnit(p.getUnitId())", "originalCommit": "02cf732d561f245a8a8d39a2b8a819cb45ac94ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0c1cbf9746ed9486f08ce4aa2376828e846c786", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex c9db948ab..e49c8ce15 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -8096,13 +8047,16 @@ public class Campaign implements Serializable, ITechManager {\n                                     || ms.getWeightClass() < megamek.common.EntityWeightClass.WEIGHT_ASSAULT)) {\n                                 p.setOriginalUnitWeight(ms.getWeightClass());\n                                 if (ms.isClan()) {\n-                                    p.setOriginalUnitTech(Person.TECH_CLAN);\n+                                    p.setOriginalUnitTech(2);\n                                 } else if (ms.getYear() > 3050) {\n-                                    // TODO : Fix this so we aren't using a hack that just assumes IS2\n-                                    p.setOriginalUnitTech(Person.TECH_IS2);\n+                                    /*\n+                                    * We're only guessing anyway, so we use this hack to avoid actually loading the\n+                                    * entity to check for IS2\n+                                    */\n+                                    p.setOriginalUnitTech(1);\n                                 }\n-                                if (null != p.getUnitId() && null != getHangar().getUnit(p.getUnitId())\n-                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                if (null != p.getUnitId() && null != units.get(p.getUnitId())\n+                                        && ms.getName().equals(units.get(p.getUnitId()).getEntity().getShortNameRaw())) {\n                                     p.setOriginalUnitId(p.getUnitId());\n                                 }\n                             }\n", "next_change": {"commit": "ed6a5c015aa33d0bffdcd3297b9482ce600eb146", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e49c8ce15..5e8e38209 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -8047,13 +8323,10 @@ public class Campaign implements Serializable, ITechManager {\n                                     || ms.getWeightClass() < megamek.common.EntityWeightClass.WEIGHT_ASSAULT)) {\n                                 p.setOriginalUnitWeight(ms.getWeightClass());\n                                 if (ms.isClan()) {\n-                                    p.setOriginalUnitTech(2);\n+                                    p.setOriginalUnitTech(Person.TECH_CLAN);\n                                 } else if (ms.getYear() > 3050) {\n-                                    /*\n-                                    * We're only guessing anyway, so we use this hack to avoid actually loading the\n-                                    * entity to check for IS2\n-                                    */\n-                                    p.setOriginalUnitTech(1);\n+                                    // TODO : Fix this so we aren't using a hack that just assumes IS2\n+                                    p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n                                 if (null != p.getUnitId() && null != units.get(p.getUnitId())\n                                         && ms.getName().equals(units.get(p.getUnitId()).getEntity().getShortNameRaw())) {\n", "next_change": {"commit": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 5e8e38209..4dff77b1d 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -8328,8 +8101,8 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if (null != p.getUnitId() && null != units.get(p.getUnitId())\n-                                        && ms.getName().equals(units.get(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n+                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n                                     p.setOriginalUnitId(p.getUnitId());\n                                 }\n                             }\n", "next_change": {"commit": "0637c9d04376fbc5378a09826bdd58e1092b97f0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 4dff77b1d..0b3ff2c82 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -8101,9 +7181,9 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n-                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n-                                    p.setOriginalUnitId(p.getUnitId());\n+                                if ((null != p.getUnit())\n+                                        && ms.getName().equals(p.getUnit().getEntity().getShortNameRaw())) {\n+                                    p.setOriginalUnitId(p.getUnit().getId());\n                                 }\n                             }\n                         }\n", "next_change": {"commit": "5bf80c3e80c7fd9247fee197d749605de4a4e17b", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 0b3ff2c82..9a670c658 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7181,9 +7182,9 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if ((null != p.getUnit())\n-                                        && ms.getName().equals(p.getUnit().getEntity().getShortNameRaw())) {\n-                                    p.setOriginalUnitId(p.getUnit().getId());\n+                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n+                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                    p.setOriginalUnitId(p.getUnitId());\n                                 }\n                             }\n                         }\n", "next_change": {"commit": "599b0a3158d94a3eea50fe8314c55177a344c2a9", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 9a670c658..314f30a8a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7182,9 +7178,9 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n-                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n-                                    p.setOriginalUnitId(p.getUnitId());\n+                                if ((null != p.getUnit())\n+                                        && ms.getName().equals(p.getUnit().getEntity().getShortNameRaw())) {\n+                                    p.setOriginalUnitId(p.getUnit().getId());\n                                 }\n                             }\n                         }\n", "next_change": {"commit": "d597a8aab6c1b948ebfdcc3f58d2213acb04b200", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 314f30a8a..7c830277b 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7178,9 +7182,9 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if ((null != p.getUnit())\n-                                        && ms.getName().equals(p.getUnit().getEntity().getShortNameRaw())) {\n-                                    p.setOriginalUnitId(p.getUnit().getId());\n+                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n+                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n+                                    p.setOriginalUnitId(p.getUnitId());\n                                 }\n                             }\n                         }\n", "next_change": {"commit": "9978a0b21dd7d6fbd2d0077748027c6ed31753b0", "changed_code": [{"header": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 7c830277b..b31772cc7 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n", "chunk": "@@ -7182,9 +7180,9 @@ public class Campaign implements Serializable, ITechManager {\n                                     // TODO : Fix this so we aren't using a hack that just assumes IS2\n                                     p.setOriginalUnitTech(Person.TECH_IS2);\n                                 }\n-                                if ((null != p.getUnitId()) && (null != getHangar().getUnit(p.getUnitId()))\n-                                        && ms.getName().equals(getHangar().getUnit(p.getUnitId()).getEntity().getShortNameRaw())) {\n-                                    p.setOriginalUnitId(p.getUnitId());\n+                                if ((null != p.getUnit())\n+                                        && ms.getName().equals(p.getUnit().getEntity().getShortNameRaw())) {\n+                                    p.setOriginalUnitId(p.getUnit().getId());\n                                 }\n                             }\n                         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"oid": "cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "url": "https://github.com/MegaMek/mekhq/commit/cb64714e6e2b7d03de487c72eb18c3c09948b6c6", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-10-07T03:24:27Z", "type": "commit"}, {"oid": "6017ea3690ecd5a4a3fa881bc208359bfe7d2d61", "url": "https://github.com/MegaMek/mekhq/commit/6017ea3690ecd5a4a3fa881bc208359bfe7d2d61", "message": "Address PR feedback", "committedDate": "2020-10-07T18:17:15Z", "type": "commit"}]}