{"pr_number": 182, "pr_title": "Support security plugin enabled testing in CI", "pr_author": "kaituo", "pr_createdAt": "2020-06-30T16:51:23Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/182", "merge_commit": "b36d7fc3077f43e43205d023b14615fc08be4301", "timeline": [{"oid": "b150071e3af1131973ff826cc684ff59554cebaa", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/b150071e3af1131973ff826cc684ff59554cebaa", "message": "Support security plugin enabled testing in CI\n\nThis change is to support integration testing against remote security-enabled clustering in our CI. Currently, we only support the integration testing without a security plugin and have to remove the security plugin in CI.\n\nThe critical change is to create an https client with basic auth in ODFERestTestCase and let our rest test case inherit from ODFERestTestCase. With default security configuration, the password for the admin user is also \u201cadmin.\u201d For ssl certification, we choose to disable it since it\u2019s the default demo cert used here.\n\nTesting done:\n* ran the scripts on CI/CD workflow on Mac and tested it works.\n* gradle build still passes.", "committedDate": "2020-06-30T16:47:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MzE1Mg==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/182#discussion_r447853152", "body": "not sure if AD plugin is using any hidden index or not. I got this issue for alerting plugin. https://github.com/opendistro-for-elasticsearch/alerting/pull/213/files#diff-e1e03fb0ddd2ab303d2631b957c116e1R64", "bodyText": "not sure if AD plugin is using any hidden index or not. I got this issue for alerting plugin. https://github.com/opendistro-for-elasticsearch/alerting/pull/213/files#diff-e1e03fb0ddd2ab303d2631b957c116e1R64", "bodyHTML": "<p dir=\"auto\">not sure if AD plugin is using any hidden index or not. I got this issue for alerting plugin. <a href=\"https://github.com/opendistro-for-elasticsearch/alerting/pull/213/files#diff-e1e03fb0ddd2ab303d2631b957c116e1R64\">https://github.com/opendistro-for-elasticsearch/alerting/pull/213/files#diff-e1e03fb0ddd2ab303d2631b957c116e1R64</a></p>", "author": "weicongs-amazon", "createdAt": "2020-06-30T17:21:19Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.apache.http.Header;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.apache.http.message.BasicHeader;\n+import org.apache.http.ssl.SSLContextBuilder;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.RestClientBuilder;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+import org.junit.After;\n+\n+/**\n+ * ODFE integration test base class to support both security disabled and enabled ODFE cluster.\n+ */\n+public abstract class ODFERestTestCase extends ESRestTestCase {\n+\n+    protected boolean isHttps() {\n+        boolean isHttps = Optional.ofNullable(System.getProperty(\"https\")).map(\"true\"::equalsIgnoreCase).orElse(false);\n+        if (isHttps) {\n+            // currently only external cluster is supported for security enabled testing\n+            if (!Optional.ofNullable(System.getProperty(\"tests.rest.cluster\")).isPresent()) {\n+                throw new RuntimeException(\"external cluster url should be provided for security enabled testing\");\n+            }\n+        }\n+\n+        return isHttps;\n+    }\n+\n+    @Override\n+    protected String getProtocol() {\n+        return isHttps() ? \"https\" : \"http\";\n+    }\n+\n+    @Override\n+    protected RestClient buildClient(Settings settings, HttpHost[] hosts) throws IOException {\n+        RestClientBuilder builder = RestClient.builder(hosts);\n+        if (isHttps()) {\n+            configureHttpsClient(builder, settings);\n+        } else {\n+            configureClient(builder, settings);\n+        }\n+\n+        builder.setStrictDeprecationMode(true);\n+        return builder.build();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @After\n+    protected void wipeAllODFEIndices() throws IOException {\n+        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json\"));", "originalCommit": "b150071e3af1131973ff826cc684ff59554cebaa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyMDY3MQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/182#discussion_r447920671", "bodyText": "added", "author": "kaituo", "createdAt": "2020-06-30T19:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MzE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "874ae05ecfaa9b9dc77e9ee6ff1392157a2bc43b", "changed_code": [{"header": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\nindex b8d25c2..f6c1aee 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n", "chunk": "@@ -83,7 +83,7 @@ public abstract class ODFERestTestCase extends ESRestTestCase {\n     @SuppressWarnings(\"unchecked\")\n     @After\n     protected void wipeAllODFEIndices() throws IOException {\n-        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json\"));\n+        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json&expand_wildcards=all\"));\n         XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue());\n         try (\n             XContentParser parser = xContentType\n", "next_change": null}]}, "revised_code_in_main": {"commit": "b36d7fc3077f43e43205d023b14615fc08be4301", "changed_code": [{"header": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\nindex b8d25c2..9c9f2f3 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n", "chunk": "@@ -83,7 +83,7 @@ public abstract class ODFERestTestCase extends ESRestTestCase {\n     @SuppressWarnings(\"unchecked\")\n     @After\n     protected void wipeAllODFEIndices() throws IOException {\n-        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json\"));\n+        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json&expand_wildcards=all\"));\n         XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue());\n         try (\n             XContentParser parser = xContentType\n", "next_change": {"commit": "b270d7ed9b8e60a7862bcd0845d0ca1424a03191", "changed_code": [{"header": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\nindex 9c9f2f3..9da24a5 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n", "chunk": "@@ -67,23 +80,59 @@ public abstract class ODFERestTestCase extends ESRestTestCase {\n         return isHttps() ? \"https\" : \"http\";\n     }\n \n+    @Override\n+    protected Settings restAdminSettings() {\n+        return Settings\n+            .builder()\n+            // disable the warning exception for admin client since it's only used for cleanup.\n+            .put(\"strictDeprecationMode\", false)\n+            .put(\"http.port\", 9200)\n+            .put(OPENDISTRO_SECURITY_SSL_HTTP_ENABLED, true)\n+            .put(OPENDISTRO_SECURITY_SSL_HTTP_PEMCERT_FILEPATH, \"sample.pem\")\n+            .put(OPENDISTRO_SECURITY_SSL_HTTP_KEYSTORE_FILEPATH, \"test-kirk.jks\")\n+            .put(OPENDISTRO_SECURITY_SSL_HTTP_KEYSTORE_PASSWORD, \"changeit\")\n+            .put(OPENDISTRO_SECURITY_SSL_HTTP_KEYSTORE_KEYPASSWORD, \"changeit\")\n+            .build();\n+    }\n+\n+    protected static void deleteIndexWithAdminClient(String name) throws IOException {\n+        Request request = new Request(\"DELETE\", \"/\" + name);\n+        adminClient().performRequest(request);\n+    }\n+\n     @Override\n     protected RestClient buildClient(Settings settings, HttpHost[] hosts) throws IOException {\n+        boolean strictDeprecationMode = settings.getAsBoolean(\"strictDeprecationMode\", true);\n         RestClientBuilder builder = RestClient.builder(hosts);\n         if (isHttps()) {\n-            configureHttpsClient(builder, settings);\n+            String keystore = settings.get(OPENDISTRO_SECURITY_SSL_HTTP_KEYSTORE_FILEPATH);\n+            if (Objects.nonNull(keystore)) {\n+                URI uri = null;\n+                try {\n+                    uri = this.getClass().getClassLoader().getResource(\"security/sample.pem\").toURI();\n+                } catch (URISyntaxException e) {\n+                    throw new RuntimeException(e);\n+                }\n+                Path configPath = PathUtils.get(uri).getParent().toAbsolutePath();\n+                return new SecureRestClientBuilder(settings, configPath).build();\n+            } else {\n+                configureHttpsClient(builder, settings);\n+                builder.setStrictDeprecationMode(strictDeprecationMode);\n+                return builder.build();\n+            }\n+\n         } else {\n             configureClient(builder, settings);\n+            builder.setStrictDeprecationMode(strictDeprecationMode);\n+            return builder.build();\n         }\n \n-        builder.setStrictDeprecationMode(true);\n-        return builder.build();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     @After\n     protected void wipeAllODFEIndices() throws IOException {\n-        Response response = client().performRequest(new Request(\"GET\", \"/_cat/indices?format=json&expand_wildcards=all\"));\n+        Response response = adminClient().performRequest(new Request(\"GET\", \"/_cat/indices?format=json&expand_wildcards=all\"));\n         XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue());\n         try (\n             XContentParser parser = xContentType\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "b36d7fc3077f43e43205d023b14615fc08be4301", "message": "Merge commit", "committedDate": null}, {"oid": "b270d7ed9b8e60a7862bcd0845d0ca1424a03191", "committedDate": "2020-11-20 14:19:12 -0800", "message": "Support ES 7.10.0  (#313)"}, {"oid": "72b7f4ae6c2a1bb980e01d66b71a3e379c659eab", "committedDate": "2021-02-10 10:18:44 -0800", "message": "fix failed integration cases (#385)"}]}, {"oid": "874ae05ecfaa9b9dc77e9ee6ff1392157a2bc43b", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/874ae05ecfaa9b9dc77e9ee6ff1392157a2bc43b", "message": "expand indices to delete", "committedDate": "2020-06-30T19:36:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2MjM4MA==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/182#discussion_r447962380", "body": "`external` might be confusing as in the CI we are actually using `localhost`. Maybe we can just say \"cluster url should be provided for security enabled testing\"", "bodyText": "external might be confusing as in the CI we are actually using localhost. Maybe we can just say \"cluster url should be provided for security enabled testing\"", "bodyHTML": "<p dir=\"auto\"><code>external</code> might be confusing as in the CI we are actually using <code>localhost</code>. Maybe we can just say \"cluster url should be provided for security enabled testing\"</p>", "author": "yizheliu-amazon", "createdAt": "2020-06-30T20:34:25Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.apache.http.Header;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.apache.http.message.BasicHeader;\n+import org.apache.http.ssl.SSLContextBuilder;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.RestClientBuilder;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.unit.TimeValue;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.common.xcontent.DeprecationHandler;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+import org.junit.After;\n+\n+/**\n+ * ODFE integration test base class to support both security disabled and enabled ODFE cluster.\n+ */\n+public abstract class ODFERestTestCase extends ESRestTestCase {\n+\n+    protected boolean isHttps() {\n+        boolean isHttps = Optional.ofNullable(System.getProperty(\"https\")).map(\"true\"::equalsIgnoreCase).orElse(false);\n+        if (isHttps) {\n+            // currently only external cluster is supported for security enabled testing\n+            if (!Optional.ofNullable(System.getProperty(\"tests.rest.cluster\")).isPresent()) {\n+                throw new RuntimeException(\"external cluster url should be provided for security enabled testing\");", "originalCommit": "874ae05ecfaa9b9dc77e9ee6ff1392157a2bc43b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2NTI0MQ==", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/182#discussion_r447965241", "bodyText": "make sense.  changed.", "author": "kaituo", "createdAt": "2020-06-30T20:40:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2MjM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "c83304397f0b11f4a52d2fcacade86ba4c77e335", "changed_code": [{"header": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\nindex f6c1aee..9c9f2f3 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n", "chunk": "@@ -55,7 +55,7 @@ public abstract class ODFERestTestCase extends ESRestTestCase {\n         if (isHttps) {\n             // currently only external cluster is supported for security enabled testing\n             if (!Optional.ofNullable(System.getProperty(\"tests.rest.cluster\")).isPresent()) {\n-                throw new RuntimeException(\"external cluster url should be provided for security enabled testing\");\n+                throw new RuntimeException(\"cluster url should be provided for security enabled testing\");\n             }\n         }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "b36d7fc3077f43e43205d023b14615fc08be4301", "changed_code": [{"header": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\nindex f6c1aee..9c9f2f3 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java\n", "chunk": "@@ -55,7 +55,7 @@ public abstract class ODFERestTestCase extends ESRestTestCase {\n         if (isHttps) {\n             // currently only external cluster is supported for security enabled testing\n             if (!Optional.ofNullable(System.getProperty(\"tests.rest.cluster\")).isPresent()) {\n-                throw new RuntimeException(\"external cluster url should be provided for security enabled testing\");\n+                throw new RuntimeException(\"cluster url should be provided for security enabled testing\");\n             }\n         }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "b36d7fc3077f43e43205d023b14615fc08be4301", "message": "Merge commit", "committedDate": null}, {"oid": "b270d7ed9b8e60a7862bcd0845d0ca1424a03191", "committedDate": "2020-11-20 14:19:12 -0800", "message": "Support ES 7.10.0  (#313)"}, {"oid": "72b7f4ae6c2a1bb980e01d66b71a3e379c659eab", "committedDate": "2021-02-10 10:18:44 -0800", "message": "fix failed integration cases (#385)"}]}, {"oid": "c83304397f0b11f4a52d2fcacade86ba4c77e335", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/c83304397f0b11f4a52d2fcacade86ba4c77e335", "message": "Improve wording", "committedDate": "2020-06-30T20:40:05Z", "type": "commit"}]}