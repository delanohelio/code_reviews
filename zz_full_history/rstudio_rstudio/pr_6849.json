{"pr_number": 6849, "pr_title": "Rework Source structure", "pr_author": "melissa-barca", "pr_createdAt": "2020-05-11T17:22:36Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6849", "merge_commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "timeline": [{"oid": "f04fd9828feb1e3c57c1e960d2512ee938ff4b17", "url": "https://github.com/rstudio/rstudio/commit/f04fd9828feb1e3c57c1e960d2512ee938ff4b17", "message": "start base for third column", "committedDate": "2020-03-25T23:48:19Z", "type": "commit"}, {"oid": "ff95517936c254875ef3c68e8440dc1393e4a3db", "url": "https://github.com/rstudio/rstudio/commit/ff95517936c254875ef3c68e8440dc1393e4a3db", "message": "allow for multiple source views (WIP)", "committedDate": "2020-03-26T23:37:47Z", "type": "commit"}, {"oid": "7298e3a283b04682d2bf75f61c953014806a9c67", "url": "https://github.com/rstudio/rstudio/commit/7298e3a283b04682d2bf75f61c953014806a9c67", "message": "put multiple LayoutPanels within the SourcePane", "committedDate": "2020-03-27T00:40:16Z", "type": "commit"}, {"oid": "cc5dda489711fbee619ff673b6d0b7f730c703eb", "url": "https://github.com/rstudio/rstudio/commit/cc5dda489711fbee619ff673b6d0b7f730c703eb", "message": "ugly experimental code", "committedDate": "2020-03-28T00:56:37Z", "type": "commit"}, {"oid": "48d29d3e70dcaaf2cf3f7649437bc2991d233dea", "url": "https://github.com/rstudio/rstudio/commit/48d29d3e70dcaaf2cf3f7649437bc2991d233dea", "message": "hard-coded to display 3 columns - two source", "committedDate": "2020-03-30T23:07:04Z", "type": "commit"}, {"oid": "ed7f259d8e925847737f33290f36b2c0773fbebc", "url": "https://github.com/rstudio/rstudio/commit/ed7f259d8e925847737f33290f36b2c0773fbebc", "message": "start work for multiple SourceShims", "committedDate": "2020-03-31T00:34:26Z", "type": "commit"}, {"oid": "02e06b32ebb513b68ddecc22fb34d59bd0c6be2d", "url": "https://github.com/rstudio/rstudio/commit/02e06b32ebb513b68ddecc22fb34d59bd0c6be2d", "message": "add to allowing multiple sources", "committedDate": "2020-03-31T22:01:55Z", "type": "commit"}, {"oid": "fbeca078998138456cc8ac121d6fc5fd48ee3118", "url": "https://github.com/rstudio/rstudio/commit/fbeca078998138456cc8ac121d6fc5fd48ee3118", "message": "begin removal of SourceShim", "committedDate": "2020-04-02T23:31:06Z", "type": "commit"}, {"oid": "057c4422363f1e7b7301d19d78ec2e460afe224c", "url": "https://github.com/rstudio/rstudio/commit/057c4422363f1e7b7301d19d78ec2e460afe224c", "message": "make the Source constructor act more like the shim so neccesary dependencies can load before setting\nup the display pane", "committedDate": "2020-04-03T00:45:30Z", "type": "commit"}, {"oid": "3658c416d8f49e6609a2b8a79162d08583b79ca3", "url": "https://github.com/rstudio/rstudio/commit/3658c416d8f49e6609a2b8a79162d08583b79ca3", "message": "add class for managing different source views", "committedDate": "2020-04-03T19:59:14Z", "type": "commit"}, {"oid": "5e62e2857ccd9bf945640a709c3fa3a11ad3e6e1", "url": "https://github.com/rstudio/rstudio/commit/5e62e2857ccd9bf945640a709c3fa3a11ad3e6e1", "message": "fix spacing and add missing event handlers", "committedDate": "2020-04-03T21:04:10Z", "type": "commit"}, {"oid": "dd22ca55a3399c846c401e6945310ec1001bc8df", "url": "https://github.com/rstudio/rstudio/commit/dd22ca55a3399c846c401e6945310ec1001bc8df", "message": "working on getting source to display", "committedDate": "2020-04-06T19:32:24Z", "type": "commit"}, {"oid": "dc70d3b9c5f892fe621e4438d212c80a071ab51f", "url": "https://github.com/rstudio/rstudio/commit/dc70d3b9c5f892fe621e4438d212c80a071ab51f", "message": "add missing event handles to Source", "committedDate": "2020-04-07T01:19:22Z", "type": "commit"}, {"oid": "a4671ed06029a8815d1111faa1a52b0206dd244f", "url": "https://github.com/rstudio/rstudio/commit/a4671ed06029a8815d1111faa1a52b0206dd244f", "message": "debug code", "committedDate": "2020-04-07T21:01:54Z", "type": "commit"}, {"oid": "ee0c0fc1c465136d8f5e7799d5b177e84ef95e12", "url": "https://github.com/rstudio/rstudio/commit/ee0c0fc1c465136d8f5e7799d5b177e84ef95e12", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/add-source-pane", "committedDate": "2020-04-07T21:36:40Z", "type": "commit"}, {"oid": "69f583bf8b3c382e9d7a5976b748b009b5510a05", "url": "https://github.com/rstudio/rstudio/commit/69f583bf8b3c382e9d7a5976b748b009b5510a05", "message": "remove code for adding multiple source columns.", "committedDate": "2020-04-16T20:34:10Z", "type": "commit"}, {"oid": "a1bd5838e029ebce62a76eae70ca8bb835740b4b", "url": "https://github.com/rstudio/rstudio/commit/a1bd5838e029ebce62a76eae70ca8bb835740b4b", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-16T20:35:15Z", "type": "commit"}, {"oid": "aa43c480a0e9b456ad35b455ecb1f74b3935a802", "url": "https://github.com/rstudio/rstudio/commit/aa43c480a0e9b456ad35b455ecb1f74b3935a802", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-16T22:03:31Z", "type": "commit"}, {"oid": "2bde2906b0f582ed3458c0323f6ae7e1e13e1c31", "url": "https://github.com/rstudio/rstudio/commit/2bde2906b0f582ed3458c0323f6ae7e1e13e1c31", "message": "load all source events for satellite windows, broken in previous commit", "committedDate": "2020-04-17T01:00:56Z", "type": "commit"}, {"oid": "cbd1743aac144fd5b6126367a8c685a47365837b", "url": "https://github.com/rstudio/rstudio/commit/cbd1743aac144fd5b6126367a8c685a47365837b", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-23T20:10:10Z", "type": "commit"}, {"oid": "b29ad0b5e29c0672d4e83743fc75ec51f5d509d6", "url": "https://github.com/rstudio/rstudio/commit/b29ad0b5e29c0672d4e83743fc75ec51f5d509d6", "message": "debug code", "committedDate": "2020-04-23T22:38:28Z", "type": "commit"}, {"oid": "5562100641e75ec06fc975b8ad788bb74d0e00e4", "url": "https://github.com/rstudio/rstudio/commit/5562100641e75ec06fc975b8ad788bb74d0e00e4", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-23T22:56:44Z", "type": "commit"}, {"oid": "c4592dc4700792ce029045ee1a09fe4f8b698db0", "url": "https://github.com/rstudio/rstudio/commit/c4592dc4700792ce029045ee1a09fe4f8b698db0", "message": "Fix issue where UserPrefs were loaded before StatePrefs", "committedDate": "2020-04-24T00:46:24Z", "type": "commit"}, {"oid": "76f6d71109605da56eb3f73c45947527c17770ec", "url": "https://github.com/rstudio/rstudio/commit/76f6d71109605da56eb3f73c45947527c17770ec", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-04-24T17:21:48Z", "type": "commit"}, {"oid": "31bc3fc540546dd2052154e952b005316f6d770d", "url": "https://github.com/rstudio/rstudio/commit/31bc3fc540546dd2052154e952b005316f6d770d", "message": "fix drag and drop desktop issue", "committedDate": "2020-05-04T22:13:48Z", "type": "commit"}, {"oid": "c263037e1eac15e3664611ef76e20aaae145fdc7", "url": "https://github.com/rstudio/rstudio/commit/c263037e1eac15e3664611ef76e20aaae145fdc7", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-05-04T23:06:04Z", "type": "commit"}, {"oid": "e80e5f7ea37ec8908bebe22915be86ee2235c650", "url": "https://github.com/rstudio/rstudio/commit/e80e5f7ea37ec8908bebe22915be86ee2235c650", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns", "committedDate": "2020-05-11T17:04:29Z", "type": "commit"}, {"oid": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "url": "https://github.com/rstudio/rstudio/commit/6b0f1284217369ad95fe502f4c976aac4cbf4feb", "message": "remove comments", "committedDate": "2020-05-11T17:15:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MDA2Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424570063", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:25:28Z", "path": "src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java", "diffHunk": "@@ -120,6 +120,11 @@ public DocTabLayoutPanel(boolean closeableTabs,\n       events_.addHandler(DocTabDragStartedEvent.TYPE, dragManager_);\n       commands_ = RStudioGinjector.INSTANCE.getCommands();\n \n+   }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0OTkyNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424649926", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:35:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MDA2Mw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\nindex 65fcd69df5..286dc7512a 100644\n--- a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n+++ b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n", "chunk": "@@ -112,8 +109,9 @@ public class DocTabLayoutPanel\n       styles_ = ThemeResources.INSTANCE.themeStyles();\n       addStyleName(styles_.docTabPanel());\n       addStyleName(styles_.moduleTabPanel());\n+      ClassIds.assignClassId(this, ClassIds.SOURCE_PANEL);\n       dragManager_ = new DragManager();\n-      \n+\n       // listen for global drag events (these are broadcast from other windows\n       // to notify us of incoming drags)\n       events_ = RStudioGinjector.INSTANCE.getEventBus();\n", "next_change": {"commit": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\nindex 286dc7512a..c52026fbf8 100644\n--- a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n+++ b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n", "chunk": "@@ -116,6 +124,15 @@ public class DocTabLayoutPanel\n       // to notify us of incoming drags)\n       events_ = RStudioGinjector.INSTANCE.getEventBus();\n       events_.addHandler(DocTabDragStartedEvent.TYPE, dragManager_);\n+\n+      events_.addHandler(SourceFileSavedEvent.TYPE, event ->\n+      {\n+         // update tooltip to reflect current filename after a Rename or Save As\n+         DocTab tab = getTabForDocId(event.getDocId());\n+         if (tab != null)\n+            tab.replaceTooltip(event.getPath());\n+      });\n+\n       commands_ = RStudioGinjector.INSTANCE.getCommands();\n \n    }\n", "next_change": {"commit": "2106fe9471605c94e02e0e73c8ec3c149379d9de", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\nindex c52026fbf8..cbef6043f9 100644\n--- a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n+++ b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n", "chunk": "@@ -124,15 +124,6 @@ public class DocTabLayoutPanel\n       // to notify us of incoming drags)\n       events_ = RStudioGinjector.INSTANCE.getEventBus();\n       events_.addHandler(DocTabDragStartedEvent.TYPE, dragManager_);\n-\n-      events_.addHandler(SourceFileSavedEvent.TYPE, event ->\n-      {\n-         // update tooltip to reflect current filename after a Rename or Save As\n-         DocTab tab = getTabForDocId(event.getDocId());\n-         if (tab != null)\n-            tab.replaceTooltip(event.getPath());\n-      });\n-\n       commands_ = RStudioGinjector.INSTANCE.getCommands();\n \n    }\n", "next_change": {"commit": "eb52977fac64675e9b1fd499648f286e9429b99e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\nindex cbef6043f9..9d3522ccea 100644\n--- a/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n+++ b/src/gwt/src/org/rstudio/core/client/theme/DocTabLayoutPanel.java\n", "chunk": "@@ -124,6 +125,15 @@ public class DocTabLayoutPanel\n       // to notify us of incoming drags)\n       events_ = RStudioGinjector.INSTANCE.getEventBus();\n       events_.addHandler(DocTabDragStartedEvent.TYPE, dragManager_);\n+\n+      events_.addHandler(SourceFileSavedEvent.TYPE, event ->\n+      {\n+         // update tooltip to reflect current filename after a Rename or Save As\n+         DocTab tab = getTabForDocId(event.getDocId());\n+         if (tab != null)\n+            tab.replaceTooltip(event.getPath());\n+      });\n+\n       commands_ = RStudioGinjector.INSTANCE.getCommands();\n \n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "b25965799f620b66c66b8fb7088149892638d79b", "committedDate": "2020-05-14 16:11:59 -0700", "message": "add null guards for dragging between empty source panes"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "6ca49e0a732d2f127b10ffbdf23ba78c39ee87d4", "committedDate": "2020-06-10 17:25:12 -0700", "message": "remove debug, fix spelling typos, add rstudio header, tidy code"}, {"oid": "3d321f4be675229f8f5d05b170b3e91277d32b4c", "committedDate": "2020-06-12 15:38:32 -0700", "message": "allow focus stealing for new tabs"}, {"oid": "4a5046f92f55bc1a6b3104db8a5ff470cadfccc3", "committedDate": "2020-06-15 12:21:25 -0700", "message": "Merge pull request #7079 from rstudio/feature/source-columns"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "80adc460184ba5ffcfe20ac54c38bf4d02ebf149", "committedDate": "2020-11-29 16:35:17 -0800", "message": "Add rename file to tab context menu"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "2359fb0ea1318ab27b3af9851c92470ab0d3f31b", "committedDate": "2021-01-08 09:59:25 -0800", "message": "trivial cleanup"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "2106fe9471605c94e02e0e73c8ec3c149379d9de", "committedDate": "2021-01-12 17:19:41 -0800", "message": "add Copy Path to doc tab context menu"}, {"oid": "eb52977fac64675e9b1fd499648f286e9429b99e", "committedDate": "2021-01-13 13:31:24 -0800", "message": "Merge branch 'v1.4-juliet-rose' into feature/copy-doc-path"}, {"oid": "8b55bb812ddc7598e554e3da346dcc955d4d52e2", "committedDate": "2021-01-26 17:11:19 -0800", "message": "add unique IDs to workbench tab context menus and commands"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "f2f5edededa3424a585e5ab197e070e01e869f23", "committedDate": "2021-03-03 16:22:23 -0800", "message": "remove IE11-specific hacks in GWT"}, {"oid": "fe2fb3491b9030c4b163ece58c83d6d3a1dae576", "committedDate": "2021-04-27 15:46:03 -0700", "message": "Add working directory/Files Pane conveniences (#9277)"}, {"oid": "4cd9558a762b640b689776c2b330f3b457028336", "committedDate": "2021-06-10 06:05:41 -0400", "message": "eliminate eclipse warnings"}, {"oid": "8da2687ece359ed8cf85ca192d90383f27d749f0", "committedDate": "2021-11-16 12:11:14 -0500", "message": "feat(i18n):i18n-ify org.rstudio.core"}, {"oid": "ebcb2a7470a4cffe032b01b3c875b727c0e48379", "committedDate": "2021-11-16 12:11:15 -0500", "message": "feat(i18n):refactor properties and interface name to reflect package name"}, {"oid": "3734e8c18ae2e9dc9afc5e9722f0e12aafafdc12", "committedDate": "2021-11-24 19:00:14 -0500", "message": "fix(i18n): Resolve PR requested changes"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3Mjg0Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424572847", "body": "Can you elaborate on how/why this might be? Maybe it's obvious as I read more of the code.", "bodyText": "Can you elaborate on how/why this might be? Maybe it's obvious as I read more of the code.", "bodyHTML": "<p dir=\"auto\">Can you elaborate on how/why this might be? Maybe it's obvious as I read more of the code.</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:29:45Z", "path": "src/gwt/src/org/rstudio/studio/client/application/Application.java", "diffHunk": "@@ -206,7 +207,18 @@ public void run()\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            initializeWorkbench();\n+            // refresh prefs incase they were loaded without sessionInfo", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MjE0Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424652142", "bodyText": "This happens exclusively in desktop mode, I was able to track down the issue enough to find that userPrefs were being loaded before sessionInfo but couldn't find when this was happening or if it was truly necessary. I updated the comment with that clarification.", "author": "melissa-barca", "createdAt": "2020-05-13T18:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3Mjg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex c94d3a6fa5..5a669372c6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -207,18 +207,15 @@ public class Application implements ApplicationEventHandlers\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            // refresh prefs incase they were loaded without sessionInfo\n-            userState_.get().writeState(\n-                  new CommandWithArg<Boolean>() {\n-                     public void execute(Boolean arg) {\n-                        userPrefs_.get().writeUserPrefs(\n-                              new CommandWithArg<Boolean>() {\n-                                 public void execute(Boolean arg) {\n-                                    initializeWorkbench();\n-                                 }\n-                              });\n-                        }\n-                  });\n+            // refresh prefs incase they were loaded without sessionInfo (this happens exclusively\n+            // in desktop mode, though unsure why)\n+            userState_.get().writeState(boolArg ->\n+            {\n+               userPrefs_.get().writeUserPrefs(boolArg1 ->\n+               {\n+                  initializeWorkbench();\n+               });\n+            });\n          }\n \n          public void onError(ServerError error)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex c94d3a6fa5..5a669372c6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -207,18 +207,15 @@ public class Application implements ApplicationEventHandlers\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            // refresh prefs incase they were loaded without sessionInfo\n-            userState_.get().writeState(\n-                  new CommandWithArg<Boolean>() {\n-                     public void execute(Boolean arg) {\n-                        userPrefs_.get().writeUserPrefs(\n-                              new CommandWithArg<Boolean>() {\n-                                 public void execute(Boolean arg) {\n-                                    initializeWorkbench();\n-                                 }\n-                              });\n-                        }\n-                  });\n+            // refresh prefs incase they were loaded without sessionInfo (this happens exclusively\n+            // in desktop mode, though unsure why)\n+            userState_.get().writeState(boolArg ->\n+            {\n+               userPrefs_.get().writeUserPrefs(boolArg1 ->\n+               {\n+                  initializeWorkbench();\n+               });\n+            });\n          }\n \n          public void onError(ServerError error)\n", "next_change": {"commit": "da79642e4625eacee3bc2b898472c46e884fa0ae", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex 5a669372c6..4f657a7822 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -223,8 +222,19 @@ public class Application implements ApplicationEventHandlers\n             Debug.logError(error);\n             dismissLoadingProgress.execute();\n \n-            globalDisplay_.showErrorMessage(\"RStudio Initialization Error\",\n-                                            error.getUserMessage());\n+            if (!StringUtil.isNullOrEmpty(error.getRedirectUrl()))\n+            {\n+               // error is informing us that we should redirect\n+               // redirect to the specified URL (as a sub URL of the site's root)\n+               String redirectUrl = ApplicationUtils.getHostPageBaseURLWithoutContext(false) + \n+            \t\t   error.getRedirectUrl();\n+               navigateWindowWithDelay(redirectUrl);\n+            }\n+            else\n+            {\n+               globalDisplay_.showErrorMessage(\"RStudio Initialization Error\",\n+                                               error.getUserMessage());\n+            }\n          }\n       };\n       \n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex 4f657a7822..2ed35c536b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -237,17 +235,17 @@ public class Application implements ApplicationEventHandlers\n             }\n          }\n       };\n-      \n+\n       final ApplicationClientInit clientInit = pClientInit_.get();\n \n       if (timeoutOptions != null)\n       {\n          timeoutOptions.setObserver(clientInit);\n       }\n-      \n+\n       // read options from querystring\n       SessionInitOptions options = SessionInitOptions.create(\n-            SessionInitOptions.RESTORE_WORKSPACE_DEFAULT, \n+            SessionInitOptions.RESTORE_WORKSPACE_DEFAULT,\n             SessionInitOptions.RUN_RPROFILE_DEFAULT);\n       try\n       {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "committedDate": "2020-05-15 07:42:46 -0400", "message": "remove unused imports"}, {"oid": "72afd595c788080b7cef04dfe389076d78690cc7", "committedDate": "2020-05-19 22:19:51 -0700", "message": "always set role=application on entire page and remove user option (#6916)"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "da79642e4625eacee3bc2b898472c46e884fa0ae", "committedDate": "2020-05-27 15:23:28 +0000", "message": "Backport pro fixes and changes"}, {"oid": "be929a082134ed5488c731014a56c7d1ea76a8dd", "committedDate": "2020-05-28 14:34:59 -0700", "message": "Add command for going to server home (pro-only) (#6993)"}, {"oid": "d85c56bab918c6697fc9ce9f88678584f7fe9c64", "committedDate": "2020-06-01 14:24:58 -0700", "message": "remove unused method left over from removal of application agreement feature"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "c6299104b22ab5e0966bbe4ee193e03af41e9332", "committedDate": "2020-08-28 13:55:35 -0700", "message": "Add commands for showing each Global Options pane directly"}, {"oid": "cccb11b102e6569dd9e1adb8d53ff96a6f4d484b", "committedDate": "2020-09-09 11:01:06 -0700", "message": "Add command for showing Presentation tab to menus"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c20156a8f01be1f6e56a36900f650fe3657ec9ec", "committedDate": "2021-01-11 16:03:20 -0800", "message": "cleanup hard-tabs that have crept into source files"}, {"oid": "1c57f4f816022f919f46053d7af670b33c55e06d", "committedDate": "2021-03-03 14:54:09 -0800", "message": "open source companion to rstudio/rstudio-pro#2381"}, {"oid": "0e7186f760f9899f2c17d621969dddce2aa33180", "committedDate": "2021-08-27 13:07:19 -0700", "message": "use rs-csrf-token consistently"}, {"oid": "c9f647600a7cb805a3d2a7d97f6c824d8df752e4", "committedDate": "2021-11-16 13:03:59 -0500", "message": "feat(i18n): In-progress i18n-ify client/application"}, {"oid": "1fd3dfd23964c610f85b0ea4c17f1d45ffb589b3", "committedDate": "2021-11-16 13:04:01 -0500", "message": "feat(i18n): refactor name and move .properties and interface file to studio.client.application"}, {"oid": "a29992e08159484a2359c8108cfdf716cc7b8118", "committedDate": "2021-11-16 13:04:02 -0500", "message": "feat(i18n): i18n-ify missed literals"}, {"oid": "d3a03e265710c27026473e6f7148f0b0447725d3", "committedDate": "2021-11-23 18:33:15 -0500", "message": "fix(i18n): Implement PR changes"}, {"oid": "d15d32fa065fb7f9a6979ecbe5bcf60d3d1e6479", "committedDate": "2021-12-15 11:40:41 -0800", "message": "allow session to copy text to clipboard (#10248)"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24dd36fafd6bfc82b1f324818bdc26989def11f3", "committedDate": "2022-04-07 13:41:46 -0700", "message": "Add user option for selecting UI language (#10923)"}, {"oid": "6a13c2123d07ef2314236667d77c5b91e32536f8", "committedDate": "2022-04-12 15:29:42 -0600", "message": "don't refresh UI when loading English"}, {"oid": "a5c0bddd022013836a6fa33195ef2315a8995436", "committedDate": "2022-04-13 17:22:28 -0600", "message": "use cookie instead of local storage"}, {"oid": "fdd787b1e79ffb332d04b20eb7d091036026f1bd", "committedDate": "2022-05-11 16:29:00 -0600", "message": "add option to use web dialogs on Electron desktop"}, {"oid": "3ffd6abc567b358f5985e6968ce243a65c7c091a", "committedDate": "2022-05-31 09:17:34 -0400", "message": "change code references"}, {"oid": "5bae7559c5c84fbebef962918d07f064f4e70d83", "committedDate": "2022-06-21 12:36:57 -0600", "message": "deprecrate the Tools / Shell command"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "8b7958b3e368da918145bf110414a21d1a0523a2", "committedDate": "2022-09-26 11:24:25 -0700", "message": "allow users to control 'text-rendering' preference (#12038)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NzI1Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424577252", "body": "Using lambdas you can tidy this up to:\r\n```\r\n            userState_.get().writeState(boolArg ->\r\n            {\r\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\r\n               {\r\n                     initializeWorkbench();\r\n               });\r\n            });\r\n         }\r\n```\r\n\r\nYou could drop the braces and make it more compact, but I personally find that harder to read especially when there are multiple lambda happening at once (but that's just me):\r\n\r\n```\r\n            userState_.get().writeState(boolArg ->\r\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\r\n                  initializeWorkbench()));\r\n```", "bodyText": "Using lambdas you can tidy this up to:\n            userState_.get().writeState(boolArg ->\n            {\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\n               {\n                     initializeWorkbench();\n               });\n            });\n         }\n\nYou could drop the braces and make it more compact, but I personally find that harder to read especially when there are multiple lambda happening at once (but that's just me):\n            userState_.get().writeState(boolArg ->\n               userPrefs_.get().writeUserPrefs(boolArg1 ->\n                  initializeWorkbench()));", "bodyHTML": "<p dir=\"auto\">Using lambdas you can tidy this up to:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            userState_.get().writeState(boolArg -&gt;\n            {\n               userPrefs_.get().writeUserPrefs(boolArg1 -&gt;\n               {\n                     initializeWorkbench();\n               });\n            });\n         }\"><pre><code>            userState_.get().writeState(boolArg -&gt;\n            {\n               userPrefs_.get().writeUserPrefs(boolArg1 -&gt;\n               {\n                     initializeWorkbench();\n               });\n            });\n         }\n</code></pre></div>\n<p dir=\"auto\">You could drop the braces and make it more compact, but I personally find that harder to read especially when there are multiple lambda happening at once (but that's just me):</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            userState_.get().writeState(boolArg -&gt;\n               userPrefs_.get().writeUserPrefs(boolArg1 -&gt;\n                  initializeWorkbench()));\"><pre><code>            userState_.get().writeState(boolArg -&gt;\n               userPrefs_.get().writeUserPrefs(boolArg1 -&gt;\n                  initializeWorkbench()));\n</code></pre></div>", "author": "gtritchie", "createdAt": "2020-05-13T16:36:33Z", "path": "src/gwt/src/org/rstudio/studio/client/application/Application.java", "diffHunk": "@@ -206,7 +207,18 @@ public void run()\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            initializeWorkbench();\n+            // refresh prefs incase they were loaded without sessionInfo\n+            userState_.get().writeState(\n+                  new CommandWithArg<Boolean>() {\n+                     public void execute(Boolean arg) {\n+                        userPrefs_.get().writeUserPrefs(\n+                              new CommandWithArg<Boolean>() {\n+                                 public void execute(Boolean arg) {\n+                                    initializeWorkbench();\n+                                 }\n+                              });\n+                        }\n+                  });\n          }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NjMwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424656301", "bodyText": "Thanks, I left the braces.", "author": "melissa-barca", "createdAt": "2020-05-13T18:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NzI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex c94d3a6fa5..5a669372c6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -207,18 +207,15 @@ public class Application implements ApplicationEventHandlers\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            // refresh prefs incase they were loaded without sessionInfo\n-            userState_.get().writeState(\n-                  new CommandWithArg<Boolean>() {\n-                     public void execute(Boolean arg) {\n-                        userPrefs_.get().writeUserPrefs(\n-                              new CommandWithArg<Boolean>() {\n-                                 public void execute(Boolean arg) {\n-                                    initializeWorkbench();\n-                                 }\n-                              });\n-                        }\n-                  });\n+            // refresh prefs incase they were loaded without sessionInfo (this happens exclusively\n+            // in desktop mode, though unsure why)\n+            userState_.get().writeState(boolArg ->\n+            {\n+               userPrefs_.get().writeUserPrefs(boolArg1 ->\n+               {\n+                  initializeWorkbench();\n+               });\n+            });\n          }\n \n          public void onError(ServerError error)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex c94d3a6fa5..5a669372c6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -207,18 +207,15 @@ public class Application implements ApplicationEventHandlers\n             MathJaxLoader.ensureMathJaxLoaded();\n \n             // initialize workbench\n-            // refresh prefs incase they were loaded without sessionInfo\n-            userState_.get().writeState(\n-                  new CommandWithArg<Boolean>() {\n-                     public void execute(Boolean arg) {\n-                        userPrefs_.get().writeUserPrefs(\n-                              new CommandWithArg<Boolean>() {\n-                                 public void execute(Boolean arg) {\n-                                    initializeWorkbench();\n-                                 }\n-                              });\n-                        }\n-                  });\n+            // refresh prefs incase they were loaded without sessionInfo (this happens exclusively\n+            // in desktop mode, though unsure why)\n+            userState_.get().writeState(boolArg ->\n+            {\n+               userPrefs_.get().writeUserPrefs(boolArg1 ->\n+               {\n+                  initializeWorkbench();\n+               });\n+            });\n          }\n \n          public void onError(ServerError error)\n", "next_change": {"commit": "da79642e4625eacee3bc2b898472c46e884fa0ae", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex 5a669372c6..4f657a7822 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -223,8 +222,19 @@ public class Application implements ApplicationEventHandlers\n             Debug.logError(error);\n             dismissLoadingProgress.execute();\n \n-            globalDisplay_.showErrorMessage(\"RStudio Initialization Error\",\n-                                            error.getUserMessage());\n+            if (!StringUtil.isNullOrEmpty(error.getRedirectUrl()))\n+            {\n+               // error is informing us that we should redirect\n+               // redirect to the specified URL (as a sub URL of the site's root)\n+               String redirectUrl = ApplicationUtils.getHostPageBaseURLWithoutContext(false) + \n+            \t\t   error.getRedirectUrl();\n+               navigateWindowWithDelay(redirectUrl);\n+            }\n+            else\n+            {\n+               globalDisplay_.showErrorMessage(\"RStudio Initialization Error\",\n+                                               error.getUserMessage());\n+            }\n          }\n       };\n       \n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/application/Application.java b/src/gwt/src/org/rstudio/studio/client/application/Application.java\nindex 4f657a7822..2ed35c536b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/application/Application.java\n+++ b/src/gwt/src/org/rstudio/studio/client/application/Application.java\n", "chunk": "@@ -237,17 +235,17 @@ public class Application implements ApplicationEventHandlers\n             }\n          }\n       };\n-      \n+\n       final ApplicationClientInit clientInit = pClientInit_.get();\n \n       if (timeoutOptions != null)\n       {\n          timeoutOptions.setObserver(clientInit);\n       }\n-      \n+\n       // read options from querystring\n       SessionInitOptions options = SessionInitOptions.create(\n-            SessionInitOptions.RESTORE_WORKSPACE_DEFAULT, \n+            SessionInitOptions.RESTORE_WORKSPACE_DEFAULT,\n             SessionInitOptions.RUN_RPROFILE_DEFAULT);\n       try\n       {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "committedDate": "2020-05-15 07:42:46 -0400", "message": "remove unused imports"}, {"oid": "72afd595c788080b7cef04dfe389076d78690cc7", "committedDate": "2020-05-19 22:19:51 -0700", "message": "always set role=application on entire page and remove user option (#6916)"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "da79642e4625eacee3bc2b898472c46e884fa0ae", "committedDate": "2020-05-27 15:23:28 +0000", "message": "Backport pro fixes and changes"}, {"oid": "be929a082134ed5488c731014a56c7d1ea76a8dd", "committedDate": "2020-05-28 14:34:59 -0700", "message": "Add command for going to server home (pro-only) (#6993)"}, {"oid": "d85c56bab918c6697fc9ce9f88678584f7fe9c64", "committedDate": "2020-06-01 14:24:58 -0700", "message": "remove unused method left over from removal of application agreement feature"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "c6299104b22ab5e0966bbe4ee193e03af41e9332", "committedDate": "2020-08-28 13:55:35 -0700", "message": "Add commands for showing each Global Options pane directly"}, {"oid": "cccb11b102e6569dd9e1adb8d53ff96a6f4d484b", "committedDate": "2020-09-09 11:01:06 -0700", "message": "Add command for showing Presentation tab to menus"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c20156a8f01be1f6e56a36900f650fe3657ec9ec", "committedDate": "2021-01-11 16:03:20 -0800", "message": "cleanup hard-tabs that have crept into source files"}, {"oid": "1c57f4f816022f919f46053d7af670b33c55e06d", "committedDate": "2021-03-03 14:54:09 -0800", "message": "open source companion to rstudio/rstudio-pro#2381"}, {"oid": "0e7186f760f9899f2c17d621969dddce2aa33180", "committedDate": "2021-08-27 13:07:19 -0700", "message": "use rs-csrf-token consistently"}, {"oid": "c9f647600a7cb805a3d2a7d97f6c824d8df752e4", "committedDate": "2021-11-16 13:03:59 -0500", "message": "feat(i18n): In-progress i18n-ify client/application"}, {"oid": "1fd3dfd23964c610f85b0ea4c17f1d45ffb589b3", "committedDate": "2021-11-16 13:04:01 -0500", "message": "feat(i18n): refactor name and move .properties and interface file to studio.client.application"}, {"oid": "a29992e08159484a2359c8108cfdf716cc7b8118", "committedDate": "2021-11-16 13:04:02 -0500", "message": "feat(i18n): i18n-ify missed literals"}, {"oid": "d3a03e265710c27026473e6f7148f0b0447725d3", "committedDate": "2021-11-23 18:33:15 -0500", "message": "fix(i18n): Implement PR changes"}, {"oid": "d15d32fa065fb7f9a6979ecbe5bcf60d3d1e6479", "committedDate": "2021-12-15 11:40:41 -0800", "message": "allow session to copy text to clipboard (#10248)"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24dd36fafd6bfc82b1f324818bdc26989def11f3", "committedDate": "2022-04-07 13:41:46 -0700", "message": "Add user option for selecting UI language (#10923)"}, {"oid": "6a13c2123d07ef2314236667d77c5b91e32536f8", "committedDate": "2022-04-12 15:29:42 -0600", "message": "don't refresh UI when loading English"}, {"oid": "a5c0bddd022013836a6fa33195ef2315a8995436", "committedDate": "2022-04-13 17:22:28 -0600", "message": "use cookie instead of local storage"}, {"oid": "fdd787b1e79ffb332d04b20eb7d091036026f1bd", "committedDate": "2022-05-11 16:29:00 -0600", "message": "add option to use web dialogs on Electron desktop"}, {"oid": "3ffd6abc567b358f5985e6968ce243a65c7c091a", "committedDate": "2022-05-31 09:17:34 -0400", "message": "change code references"}, {"oid": "5bae7559c5c84fbebef962918d07f064f4e70d83", "committedDate": "2022-06-21 12:36:57 -0600", "message": "deprecrate the Tools / Shell command"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "8b7958b3e368da918145bf110414a21d1a0523a2", "committedDate": "2022-09-26 11:24:25 -0700", "message": "allow users to control 'text-rendering' preference (#12038)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MDIyNw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424580227", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:41:08Z", "path": "src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java", "diffHunk": "@@ -65,7 +65,6 @@\n import org.rstudio.studio.client.workbench.prefs.events.UserPrefsChangedEvent;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MjQ1Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424652457", "bodyText": "Done", "author": "melissa-barca", "createdAt": "2020-05-13T18:40:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MDIyNw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java b/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\nindex 691131dfc9..d02166ada4 100644\n--- a/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\n+++ b/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\n", "chunk": "@@ -63,7 +63,6 @@ import org.rstudio.studio.client.workbench.WorkbenchContext;\n import org.rstudio.studio.client.workbench.commands.Commands;\n import org.rstudio.studio.client.workbench.model.Session;\n import org.rstudio.studio.client.workbench.prefs.events.UserPrefsChangedEvent;\n-import org.rstudio.studio.client.workbench.prefs.events.UserPrefsChangedHandler;\n import org.rstudio.studio.client.workbench.prefs.model.UserPrefs;\n import org.rstudio.studio.client.workbench.views.source.events.NotebookRenderFinishedEvent;\n \n", "next_change": {"commit": "92087c334dd6a86d1284e488dc27b26b6e22b310", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java b/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\nindex d02166ada4..2bd66288aa 100644\n--- a/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\n+++ b/src/gwt/src/org/rstudio/studio/client/rmarkdown/RmdOutput.java\n", "chunk": "@@ -71,7 +69,6 @@ import com.google.gwt.core.client.Scheduler;\n import com.google.gwt.core.client.Scheduler.ScheduledCommand;\n import com.google.gwt.event.logical.shared.ValueChangeEvent;\n import com.google.gwt.event.logical.shared.ValueChangeHandler;\n-import com.google.gwt.user.client.Command;\n import com.google.inject.Inject;\n import com.google.inject.Provider;\n import com.google.inject.Singleton;\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "704bddac02351d64153ae0edd603eea746842d7f", "committedDate": "2021-06-08 07:57:58 -0400", "message": "improved logic around markdown file type detection"}, {"oid": "dfb209305e20fec457a2566d0e9ed6c4204696d7", "committedDate": "2021-11-03 15:18:07 -0400", "message": "initial work on pdf book preview"}, {"oid": "b45e37ef0a743f8d35887f66a61d21eaf58d208b", "committedDate": "2021-11-03 17:27:16 -0400", "message": "quarto book: incremental pdf preview"}, {"oid": "f0e6f6aa35d1edad14b93225ecc488f195c0c13a", "committedDate": "2021-11-30 22:22:41 -0500", "message": "committing i18nify progress"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "92087c334dd6a86d1284e488dc27b26b6e22b310", "committedDate": "2022-10-02 07:45:51 -0700", "message": "quarto preview: correct handling for all file types"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MTcwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424581701", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:43:29Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/viewer/ViewerPresenter.java", "diffHunk": "@@ -63,7 +63,6 @@\n import org.rstudio.studio.client.workbench.prefs.model.UserState;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "eff0599412d7cfa48ae01851a73efa6fb343345d", "committedDate": "2020-06-29 12:21:52 -0700", "message": "make toolbar commands run more accurately, fixed issue that prevented source columns from being completely closed"}, {"oid": "9b12bd217aa559568e323a95cee10e444fa15e55", "committedDate": "2020-07-28 09:51:25 -0700", "message": "switch plots, help, viewer events to single-file format (#7467)"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c9f2e52f81bfa3c0318ffec7b7ee10603d66b721", "committedDate": "2021-07-01 12:46:52 -0700", "message": "pass quarto site flag to viewer pane"}, {"oid": "97e43f58dfda40ed9921215a9fb35d9ff2e13e57", "committedDate": "2021-07-13 15:27:15 -0400", "message": "prime publish button from quarto preview"}, {"oid": "d42d39daa5b7fba7e6dd9fddf487b30826b64ef4", "committedDate": "2021-09-08 17:14:22 -0400", "message": "quarto: more work on editing from viewer"}, {"oid": "310df77eb4436fe5227d26c01a35a84ff9543315", "committedDate": "2021-09-09 07:42:09 -0400", "message": "implement forward and back"}, {"oid": "c318a12ff1053df0cdd98df91a463c0b52466d77", "committedDate": "2021-11-04 08:46:15 -0400", "message": "viewer: no forward/back or edit buttons for pdf preview"}, {"oid": "231e640b1c8e68c3e01e5ab42cc23730af351093", "committedDate": "2021-12-06 22:46:44 -0500", "message": "feat(i18n): i18n-ify client.workbench.* packages"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "92087c334dd6a86d1284e488dc27b26b6e22b310", "committedDate": "2022-10-02 07:45:51 -0700", "message": "quarto preview: correct handling for all file types"}, {"oid": "89b99baf00149d5b81c7027e6f1407c46a92c2ec", "committedDate": "2022-11-29 15:18:00 -0500", "message": "viewer shoudl be able to preview xml"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MzgyMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424583821", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:46:53Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserState.java", "diffHunk": "@@ -18,6 +18,7 @@\n import com.google.inject.Inject;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjMwNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586306", "body": "not needed", "bodyText": "not needed", "bodyHTML": "<p dir=\"auto\">not needed</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:50:42Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java", "diffHunk": "@@ -23,7 +23,9 @@\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n+import com.google.gwt.core.client.JsArrayString;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 4ee9be9661..0ea6ace2ed 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -23,10 +23,7 @@ import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n-import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.JsArray;\n-import org.rstudio.core.client.JsArrayUtil;\n-\n \n /**\n  * Accessor class for user state.\n", "next_change": {"commit": "d5fb4529898c7ababb66d90a8e6092c98ce98ad2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 0ea6ace2ed..5d10799455 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -25,6 +25,9 @@ import org.rstudio.studio.client.workbench.model.SessionInfo;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "18df34579d140228a29f069fca392bb63c7c68a8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 5d10799455..510c1d1ad7 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -19,11 +19,13 @@\n \n package org.rstudio.studio.client.workbench.prefs.model;\n \n+import org.rstudio.core.client.JsArrayUtil;\n import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n+import com.google.gwt.core.client.JsArrayString;\n \n import java.util.ArrayList;\n import java.util.List;\n", "next_change": {"commit": "16155412f8782edba0e81c2e70d8dd7ad86e3f20", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 510c1d1ad7..03549c8487 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -19,13 +19,11 @@\n \n package org.rstudio.studio.client.workbench.prefs.model;\n \n-import org.rstudio.core.client.JsArrayUtil;\n import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n-import com.google.gwt.core.client.JsArrayString;\n \n import java.util.ArrayList;\n import java.util.List;\n", "next_change": {"commit": "56c8528bd899c88b1be5d126b784734c0eaaa2bb", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 03549c8487..091094833d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,6 +28,8 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n+import com.google.gwt.core.client.GWT;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 091094833d..696afaa22b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,8 +28,6 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n-import com.google.gwt.core.client.GWT;\n-\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "ccb01194363d9a4eff314a734a65e11880db6560", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 696afaa22b..c100ff9623 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,6 +28,8 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n+import com.google.gwt.core.client.GWT;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "committedDate": "2020-05-15 07:42:46 -0400", "message": "remove unused imports"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "b1641092fac75d926199db35c621317cfcc9c639", "committedDate": "2020-05-22 17:17:22 -0700", "message": "generate and include title/description of prefs"}, {"oid": "d5fb4529898c7ababb66d90a8e6092c98ce98ad2", "committedDate": "2020-05-28 14:36:13 -0700", "message": "use code emitters to make prefs enumerable"}, {"oid": "07ce22d9660d66a4e0e71c95cdf23c4d89511d8c", "committedDate": "2020-05-28 16:14:15 -0700", "message": "basic plumbing for select-style prefs"}, {"oid": "f385b12268bec05969deaf603170ad32d34ad89d", "committedDate": "2020-07-14 15:12:44 -0400", "message": "store api key in user state"}, {"oid": "4dc30cbd80e1bea58a00a2679c047645268da54b", "committedDate": "2020-07-17 17:24:12 -0400", "message": "stub for zotero local collections"}, {"oid": "8bd3a6f66f70a08e5844a39a69349a54bfb2d435", "committedDate": "2020-07-30 12:29:51 -0700", "message": "set defaults in JSNI accessors for prefs (#7494)"}, {"oid": "7aadd59db5a2c1a1de7920df9d7f891e9674e6fe", "committedDate": "2020-08-12 11:04:35 -0400", "message": "default to biblatex (but make choice sticky)"}, {"oid": "102948fab447b7029271c71a08bc4bc38ca78995", "committedDate": "2020-08-20 14:04:27 -0400", "message": "use csl-yaml as default for new bibliographies"}, {"oid": "0c4edf4ddebd7ef7d840443ae3538ca6c3f8cd90", "committedDate": "2020-08-27 09:28:11 -0400", "message": "state/logic for visual mode switch confirmation"}, {"oid": "18df34579d140228a29f069fca392bb63c7c68a8", "committedDate": "2020-09-04 07:13:04 -0400", "message": "various zotero preferences improvements"}, {"oid": "ec3a2f843cba8778fc44f7c5694340fafc8c9a98", "committedDate": "2020-09-09 14:57:42 -0400", "message": "biblatex => bibtex"}, {"oid": "16155412f8782edba0e81c2e70d8dd7ad86e3f20", "committedDate": "2020-09-10 06:00:30 -0400", "message": "use prefs not state for zotero libraries"}, {"oid": "0dc8830f979c3ed1d0b7d2025b501558e561f636", "committedDate": "2020-09-10 15:46:31 -0400", "message": "update defaults"}, {"oid": "9b853a2ddb7df64f2742cb2761c0bb7b5cac8d86", "committedDate": "2020-10-09 15:31:42 -0400", "message": "expose ui pref for in text citations"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "e407b244e08e730a4774676ed17d961d5e9ae992", "committedDate": "2021-02-01 15:21:46 -0800", "message": "option to enable legacy tab key behavior in editor's Find panel"}, {"oid": "ab9e95c9f95e2565b514ca20514e42097bcd4fcb", "committedDate": "2021-09-08 08:22:56 -0400", "message": "sync src editor for quarto website preview"}, {"oid": "d42d39daa5b7fba7e6dd9fddf487b30826b64ef4", "committedDate": "2021-09-08 17:14:22 -0400", "message": "quarto: more work on editing from viewer"}, {"oid": "823913f2a9e2557995c90f1d2f5b575954770ef8", "committedDate": "2021-11-24 09:07:52 -0500", "message": "option to build quarto editor tools on the fly"}, {"oid": "56c8528bd899c88b1be5d126b784734c0eaaa2bb", "committedDate": "2021-12-13 19:10:08 -0500", "message": "resync prefs"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "ccb01194363d9a4eff314a734a65e11880db6560", "committedDate": "2022-01-06 13:56:01 -0500", "message": "Merge branch 'main' into feature/i18n-user-prefs-and-state"}, {"oid": "e4194511e42e7c8af2fcafdf0f40bf0b2fb14daf", "committedDate": "2022-01-12 13:36:00 -0500", "message": "remove quarto buildjs"}, {"oid": "2068606a483ab464514110aad9b5cc352e42a5fd", "committedDate": "2022-04-06 08:07:48 -0700", "message": "rebuild prefs (#10910)"}, {"oid": "c9805cfd79948cfbee791d0e5e3ea016995077bb", "committedDate": "2022-04-26 11:40:41 -0600", "message": "run generate-prefs against modified user schema"}, {"oid": "6f1d64b91a6acfc5cc1fa8f823414f503ba2c664", "committedDate": "2022-05-24 10:49:33 -0700", "message": "Always show .lintr files (#11277)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "8de23cda42ca323be2f2179702b7ec129dacd257", "committedDate": "2022-11-02 13:42:34 -0400", "message": "add options and descriptions for enable posit cloud checkbox in global options publishing"}, {"oid": "1dc590b05ae22cfd908269df5a257fce9ccc5521", "committedDate": "2022-11-13 16:45:42 -0700", "message": "add electron option for disabling accessibility"}, {"oid": "5d3ff1b73cf5e4310929ac9000f169ebf3cd985a", "committedDate": "2022-11-14 16:56:55 -0500", "message": "Change enable_cloud_publish from a user state to a user pref"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjM5Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586396", "body": "not needed", "bodyText": "not needed", "bodyHTML": "<p dir=\"auto\">not needed</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:50:48Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java", "diffHunk": "@@ -23,7 +23,9 @@\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n+import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.JsArray;\n+import org.rstudio.core.client.JsArrayUtil;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 4ee9be9661..0ea6ace2ed 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -23,10 +23,7 @@ import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n-import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.JsArray;\n-import org.rstudio.core.client.JsArrayUtil;\n-\n \n /**\n  * Accessor class for user state.\n", "next_change": {"commit": "d5fb4529898c7ababb66d90a8e6092c98ce98ad2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 0ea6ace2ed..5d10799455 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -25,6 +25,9 @@ import org.rstudio.studio.client.workbench.model.SessionInfo;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "18df34579d140228a29f069fca392bb63c7c68a8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 5d10799455..510c1d1ad7 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -19,11 +19,13 @@\n \n package org.rstudio.studio.client.workbench.prefs.model;\n \n+import org.rstudio.core.client.JsArrayUtil;\n import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n+import com.google.gwt.core.client.JsArrayString;\n \n import java.util.ArrayList;\n import java.util.List;\n", "next_change": {"commit": "16155412f8782edba0e81c2e70d8dd7ad86e3f20", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 510c1d1ad7..03549c8487 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -19,13 +19,11 @@\n \n package org.rstudio.studio.client.workbench.prefs.model;\n \n-import org.rstudio.core.client.JsArrayUtil;\n import org.rstudio.core.client.js.JsObject;\n import org.rstudio.studio.client.workbench.model.SessionInfo;\n \n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n-import com.google.gwt.core.client.JsArrayString;\n \n import java.util.ArrayList;\n import java.util.List;\n", "next_change": {"commit": "56c8528bd899c88b1be5d126b784734c0eaaa2bb", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 03549c8487..091094833d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,6 +28,8 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n+import com.google.gwt.core.client.GWT;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 091094833d..696afaa22b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,8 +28,6 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n-import com.google.gwt.core.client.GWT;\n-\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": {"commit": "ccb01194363d9a4eff314a734a65e11880db6560", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\nindex 696afaa22b..c100ff9623 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserStateAccessor.java\n", "chunk": "@@ -28,6 +28,8 @@ import com.google.gwt.core.client.JsArray;\n import java.util.ArrayList;\n import java.util.List;\n \n+import com.google.gwt.core.client.GWT;\n+\n /**\n  * Accessor class for user state.\n  */ \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "committedDate": "2020-05-15 07:42:46 -0400", "message": "remove unused imports"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "b1641092fac75d926199db35c621317cfcc9c639", "committedDate": "2020-05-22 17:17:22 -0700", "message": "generate and include title/description of prefs"}, {"oid": "d5fb4529898c7ababb66d90a8e6092c98ce98ad2", "committedDate": "2020-05-28 14:36:13 -0700", "message": "use code emitters to make prefs enumerable"}, {"oid": "07ce22d9660d66a4e0e71c95cdf23c4d89511d8c", "committedDate": "2020-05-28 16:14:15 -0700", "message": "basic plumbing for select-style prefs"}, {"oid": "f385b12268bec05969deaf603170ad32d34ad89d", "committedDate": "2020-07-14 15:12:44 -0400", "message": "store api key in user state"}, {"oid": "4dc30cbd80e1bea58a00a2679c047645268da54b", "committedDate": "2020-07-17 17:24:12 -0400", "message": "stub for zotero local collections"}, {"oid": "8bd3a6f66f70a08e5844a39a69349a54bfb2d435", "committedDate": "2020-07-30 12:29:51 -0700", "message": "set defaults in JSNI accessors for prefs (#7494)"}, {"oid": "7aadd59db5a2c1a1de7920df9d7f891e9674e6fe", "committedDate": "2020-08-12 11:04:35 -0400", "message": "default to biblatex (but make choice sticky)"}, {"oid": "102948fab447b7029271c71a08bc4bc38ca78995", "committedDate": "2020-08-20 14:04:27 -0400", "message": "use csl-yaml as default for new bibliographies"}, {"oid": "0c4edf4ddebd7ef7d840443ae3538ca6c3f8cd90", "committedDate": "2020-08-27 09:28:11 -0400", "message": "state/logic for visual mode switch confirmation"}, {"oid": "18df34579d140228a29f069fca392bb63c7c68a8", "committedDate": "2020-09-04 07:13:04 -0400", "message": "various zotero preferences improvements"}, {"oid": "ec3a2f843cba8778fc44f7c5694340fafc8c9a98", "committedDate": "2020-09-09 14:57:42 -0400", "message": "biblatex => bibtex"}, {"oid": "16155412f8782edba0e81c2e70d8dd7ad86e3f20", "committedDate": "2020-09-10 06:00:30 -0400", "message": "use prefs not state for zotero libraries"}, {"oid": "0dc8830f979c3ed1d0b7d2025b501558e561f636", "committedDate": "2020-09-10 15:46:31 -0400", "message": "update defaults"}, {"oid": "9b853a2ddb7df64f2742cb2761c0bb7b5cac8d86", "committedDate": "2020-10-09 15:31:42 -0400", "message": "expose ui pref for in text citations"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "e407b244e08e730a4774676ed17d961d5e9ae992", "committedDate": "2021-02-01 15:21:46 -0800", "message": "option to enable legacy tab key behavior in editor's Find panel"}, {"oid": "ab9e95c9f95e2565b514ca20514e42097bcd4fcb", "committedDate": "2021-09-08 08:22:56 -0400", "message": "sync src editor for quarto website preview"}, {"oid": "d42d39daa5b7fba7e6dd9fddf487b30826b64ef4", "committedDate": "2021-09-08 17:14:22 -0400", "message": "quarto: more work on editing from viewer"}, {"oid": "823913f2a9e2557995c90f1d2f5b575954770ef8", "committedDate": "2021-11-24 09:07:52 -0500", "message": "option to build quarto editor tools on the fly"}, {"oid": "56c8528bd899c88b1be5d126b784734c0eaaa2bb", "committedDate": "2021-12-13 19:10:08 -0500", "message": "resync prefs"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "ccb01194363d9a4eff314a734a65e11880db6560", "committedDate": "2022-01-06 13:56:01 -0500", "message": "Merge branch 'main' into feature/i18n-user-prefs-and-state"}, {"oid": "e4194511e42e7c8af2fcafdf0f40bf0b2fb14daf", "committedDate": "2022-01-12 13:36:00 -0500", "message": "remove quarto buildjs"}, {"oid": "2068606a483ab464514110aad9b5cc352e42a5fd", "committedDate": "2022-04-06 08:07:48 -0700", "message": "rebuild prefs (#10910)"}, {"oid": "c9805cfd79948cfbee791d0e5e3ea016995077bb", "committedDate": "2022-04-26 11:40:41 -0600", "message": "run generate-prefs against modified user schema"}, {"oid": "6f1d64b91a6acfc5cc1fa8f823414f503ba2c664", "committedDate": "2022-05-24 10:49:33 -0700", "message": "Always show .lintr files (#11277)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "8de23cda42ca323be2f2179702b7ec129dacd257", "committedDate": "2022-11-02 13:42:34 -0400", "message": "add options and descriptions for enable posit cloud checkbox in global options publishing"}, {"oid": "1dc590b05ae22cfd908269df5a257fce9ccc5521", "committedDate": "2022-11-13 16:45:42 -0700", "message": "add electron option for disabling accessibility"}, {"oid": "5d3ff1b73cf5e4310929ac9000f169ebf3cd985a", "committedDate": "2022-11-14 16:56:55 -0500", "message": "Change enable_cloud_publish from a user state to a user pref"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NjkwNQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424586905", "body": "delete this extra line", "bodyText": "delete this extra line", "bodyHTML": "<p dir=\"auto\">delete this extra line</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:51:40Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java", "diffHunk": "@@ -277,6 +279,7 @@ public PaneManager(Provider<MainSplitPanel> pSplitPanel,\n       left_ = createSplitWindow(panes_.get(0), panes_.get(1), LEFT_COLUMN, 0.4, splitterSize);\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n+", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 6198028415..91e8a36709 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -279,7 +279,6 @@ public class PaneManager\n       left_ = createSplitWindow(panes_.get(0), panes_.get(1), LEFT_COLUMN, 0.4, splitterSize);\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n-\n       panel_ = pSplitPanel.get();\n       panel_.initialize(left_, right_);\n       \n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 6198028415..7e66809a0b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -279,7 +279,6 @@ public class PaneManager\n       left_ = createSplitWindow(panes_.get(0), panes_.get(1), LEFT_COLUMN, 0.4, splitterSize);\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n-\n       panel_ = pSplitPanel.get();\n       panel_.initialize(left_, right_);\n       \n", "next_change": {"commit": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 7e66809a0b..a461b4129a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -280,7 +283,7 @@ public class PaneManager\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n       panel_ = pSplitPanel.get();\n-      panel_.initialize(left_, right_);\n+      panel_.initialize(sourceColumns, left_, right_);\n       \n       // count the number of source docs assigned to this window\n       JsArray<SourceDocument> docs = \n", "next_change": {"commit": "e1debb632208db37860db4709e42c15c13ca0f6f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex a461b4129a..51ce12fbc0 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -283,21 +283,29 @@ public class PaneManager\n       right_ = createSplitWindow(panes_.get(2), panes_.get(3), RIGHT_COLUMN, 0.6, splitterSize);\n \n       panel_ = pSplitPanel.get();\n+\n+      //\u00a0get the widgets for the extra source columns to be displayed\n+      ArrayList<Widget> sourceColumns;\n+      if (source_.getViews().size() > 1)\n+         sourceColumns = new ArrayList<Widget>(\n+               source_.getViewsAsWidgets().subList(1, sourceColumnCount_ -1));\n+      else\n+         sourceColumns =  new ArrayList<Widget>();\n       panel_.initialize(sourceColumns, left_, right_);\n-      \n-      // count the number of source docs assigned to this window\n-      JsArray<SourceDocument> docs = \n-            session_.getSessionInfo().getSourceDocuments();\n-      String windowId = SourceWindowManager.getSourceWindowId();\n-      int numDocs = 0;\n-      for (int i = 0; i < docs.length(); i++)\n-      {\n-         String docWindowId = docs.get(i).getSourceWindowId();\n-         if (docWindowId == windowId)\n-         {\n-            numDocs++;\n-         }\n-      }\n+\n+     // count the number of source docs assigned to this window\n+     JsArray<SourceDocument> docs = \n+           session_.getSessionInfo().getSourceDocuments();\n+     String windowId = SourceWindowManager.getSourceWindowId();\n+     int numDocs = 0;\n+     for (int i = 0; i < docs.length(); i++)\n+     {\n+        String docWindowId = docs.get(i).getSourceWindowId();\n+        if (docWindowId == windowId)\n+        {\n+           numDocs++;\n+        }\n+     }\n       \n       for (LogicalWindow window : sourceLogicalWindows_)\n       {\n", "next_change": {"commit": "6de97083e41c743a20065ff175c4fe9945e840b9", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 51ce12fbc0..f7764ccb12 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -293,19 +292,19 @@ public class PaneManager\n          sourceColumns =  new ArrayList<Widget>();\n       panel_.initialize(sourceColumns, left_, right_);\n \n-     // count the number of source docs assigned to this window\n-     JsArray<SourceDocument> docs = \n-           session_.getSessionInfo().getSourceDocuments();\n-     String windowId = SourceWindowManager.getSourceWindowId();\n-     int numDocs = 0;\n-     for (int i = 0; i < docs.length(); i++)\n-     {\n-        String docWindowId = docs.get(i).getSourceWindowId();\n-        if (docWindowId == windowId)\n-        {\n-           numDocs++;\n-        }\n-     }\n+      // count the number of source docs assigned to this window\n+      JsArray<SourceDocument> docs = \n+            session_.getSessionInfo().getSourceDocuments();\n+      String windowId = SourceWindowManager.getSourceWindowId();\n+      int numDocs = 0;\n+      for (int i = 0; i < docs.length(); i++)\n+      {\n+         String docWindowId = docs.get(i).getSourceWindowId();\n+         if (docWindowId == windowId)\n+         {\n+            numDocs++;\n+         }\n+      }\n       \n       for (LogicalWindow window : sourceLogicalWindows_)\n       {\n", "next_change": {"commit": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex f7764ccb12..06bdb0b815 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -306,18 +295,16 @@ public class PaneManager\n          }\n       }\n       \n-      for (LogicalWindow window : sourceLogicalWindows_)\n+      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n       {\n-         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.HIDE));\n-         }\n-         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.NORMAL));\n-         }\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.HIDE));\n+      }\n+      else if (numDocs > 0\n+               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      {\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.NORMAL));\n       }\n \n       userPrefs.panes().addValueChangeHandler(evt ->\n", "next_change": {"commit": "c4f76e8ebed4986450805f52af7954955b010114", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 06bdb0b815..0557b849ba 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -295,16 +308,18 @@ public class PaneManager\n          }\n       }\n       \n-      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n-      {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.HIDE));\n-      }\n-      else if (numDocs > 0\n-               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      for (LogicalWindow window : sourceLogicalWindows_)\n       {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.NORMAL));\n+         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.HIDE));\n+         }\n+         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.NORMAL));\n+         }\n       }\n \n       userPrefs.panes().addValueChangeHandler(evt ->\n", "next_change": {"commit": "a5240b647de8e743f55a04aad93cac2b0d674c49", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 0557b849ba..780f223d7d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -322,6 +322,7 @@ public class PaneManager\n          }\n       }\n \n+      source_.loadDisplay();\n       userPrefs.panes().addValueChangeHandler(evt ->\n       {\n          ArrayList<LogicalWindow> newPanes = createPanes(\n", "next_change": {"commit": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 780f223d7d..9ea99c6515 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -308,21 +295,18 @@ public class PaneManager\n          }\n       }\n       \n-      for (LogicalWindow window : sourceLogicalWindows_)\n+      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n       {\n-         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.HIDE));\n-         }\n-         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.NORMAL));\n-         }\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.HIDE));\n+      }\n+      else if (numDocs > 0\n+               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      {\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.NORMAL));\n       }\n \n-      source_.loadDisplay();\n       userPrefs.panes().addValueChangeHandler(evt ->\n       {\n          ArrayList<LogicalWindow> newPanes = createPanes(\n", "next_change": {"commit": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 9ea99c6515..cf1e114e88 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -295,18 +309,21 @@ public class PaneManager\n          }\n       }\n       \n-      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n-      {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.HIDE));\n-      }\n-      else if (numDocs > 0\n-               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      for (LogicalWindow window : sourceLogicalWindows_)\n       {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.NORMAL));\n+         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.HIDE));\n+         }\n+         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.NORMAL));\n+         }\n       }\n \n+      source_.loadDisplay();\n       userPrefs.panes().addValueChangeHandler(evt ->\n       {\n          ArrayList<LogicalWindow> newPanes = createPanes(\n", "next_change": {"commit": "df5ac59866ccf09903719bb138466099db1a20f7", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex cf1e114e88..3ac5d28ca8 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -308,22 +294,19 @@ public class PaneManager\n             numDocs++;\n          }\n       }\n-      \n-      for (LogicalWindow window : sourceLogicalWindows_)\n+\n+      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n       {\n-         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.HIDE));\n-         }\n-         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n-         {\n-            window.onWindowStateChange(\n-                  new WindowStateChangeEvent(WindowState.NORMAL));\n-         }\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.HIDE));\n+      }\n+      else if (numDocs > 0\n+               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      {\n+         sourceLogicalWindow_.onWindowStateChange(\n+               new WindowStateChangeEvent(WindowState.NORMAL));\n       }\n \n-      source_.loadDisplay();\n       userPrefs.panes().addValueChangeHandler(evt ->\n       {\n          ArrayList<LogicalWindow> newPanes = createPanes(\n", "next_change": {"commit": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 3ac5d28ca8..54db3e3dd5 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -294,19 +308,22 @@ public class PaneManager\n             numDocs++;\n          }\n       }\n-\n-      if (numDocs == 0 && sourceLogicalWindow_.getState() != WindowState.HIDE)\n-      {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.HIDE));\n-      }\n-      else if (numDocs > 0\n-               && sourceLogicalWindow_.getState() == WindowState.HIDE)\n+      \n+      for (LogicalWindow window : sourceLogicalWindows_)\n       {\n-         sourceLogicalWindow_.onWindowStateChange(\n-               new WindowStateChangeEvent(WindowState.NORMAL));\n+         if (numDocs == 0 && window.getState() != WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.HIDE));\n+         }\n+         else if (numDocs > 0 && window.getState() == WindowState.HIDE)\n+         {\n+            window.onWindowStateChange(\n+                  new WindowStateChangeEvent(WindowState.NORMAL));\n+         }\n       }\n \n+      source_.loadDisplay();\n       userPrefs.panes().addValueChangeHandler(evt ->\n       {\n          ArrayList<LogicalWindow> newPanes = createPanes(\n", "next_change": {"commit": "da1f2b1a53af886edf8f21ccf12bec49870b3440", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 54db3e3dd5..3d5be52f2a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -329,7 +368,7 @@ public class PaneManager\n          ArrayList<LogicalWindow> newPanes = createPanes(\n                validateConfig(evt.getValue().cast()));\n          panes_ = newPanes;\n-         left_.replaceWindows(newPanes.get(0), newPanes.get(1));\n+         center_.replaceWindows(newPanes.get(0), newPanes.get(1));\n          right_.replaceWindows(newPanes.get(2), newPanes.get(3));\n \n          tabSet1TabPanel_.clear();\n", "next_change": {"commit": "d52fb69f316f1f984af7c23ef6f9ab139d0bd32c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 3d5be52f2a..218d437e44 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -368,7 +366,7 @@ public class PaneManager\n          ArrayList<LogicalWindow> newPanes = createPanes(\n                validateConfig(evt.getValue().cast()));\n          panes_ = newPanes;\n-         center_.replaceWindows(newPanes.get(0), newPanes.get(1));\n+         left_.replaceWindows(newPanes.get(0), newPanes.get(1));\n          right_.replaceWindows(newPanes.get(2), newPanes.get(3));\n \n          tabSet1TabPanel_.clear();\n", "next_change": {"commit": "23db03ce6cade3242092b1be37eec0d20ef6c3ce", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex 218d437e44..f394973fe1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -366,7 +368,7 @@ public class PaneManager\n          ArrayList<LogicalWindow> newPanes = createPanes(\n                validateConfig(evt.getValue().cast()));\n          panes_ = newPanes;\n-         left_.replaceWindows(newPanes.get(0), newPanes.get(1));\n+         center_.replaceWindows(newPanes.get(0), newPanes.get(1));\n          right_.replaceWindows(newPanes.get(2), newPanes.get(3));\n \n          tabSet1TabPanel_.clear();\n", "next_change": {"commit": "6dd9859082c8cc35f4cb08fc19cae4dae492f0b4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\nindex f394973fe1..93e44c7697 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/ui/PaneManager.java\n", "chunk": "@@ -371,16 +371,27 @@ public class PaneManager\n          center_.replaceWindows(newPanes.get(0), newPanes.get(1));\n          right_.replaceWindows(newPanes.get(2), newPanes.get(3));\n \n+         tabs1_ = tabNamesToTabs(evt.getValue().getTabSet1());\n+         tabs2_ = tabNamesToTabs(evt.getValue().getTabSet2());\n+\n+         setWindowStateOnTabChange(panesByName_.get(\"TabSet1\"), tabSet1TabPanel_, tabs1_);\n+         setWindowStateOnTabChange(panesByName_.get(\"TabSet2\"), tabSet2TabPanel_, tabs2_);\n+         \n          tabSet1TabPanel_.clear();\n          tabSet2TabPanel_.clear();\n          hiddenTabSetTabPanel_.clear();\n-         tabs1_ = tabNamesToTabs(evt.getValue().getTabSet1());\n          populateTabPanel(tabs1_, tabSet1TabPanel_, tabSet1MinPanel_);\n-         tabs2_ = tabNamesToTabs(evt.getValue().getTabSet2());\n          populateTabPanel(tabs2_, tabSet2TabPanel_, tabSet2MinPanel_);\n          hiddenTabs_ = tabNamesToTabs(evt.getValue().getHiddenTabSet());\n          populateTabPanel(hiddenTabs_, hiddenTabSetTabPanel_, hiddenTabSetMinPanel_);\n \n+         // manage source column commands\n+         boolean visible = userPrefs.allowSourceColumns().getValue() &&\n+            (userPrefs.panes().getValue().getAdditionalSourceColumns() < MAX_COLUMN_COUNT);\n+\n+         commands_.newSourceColumn().setVisible(visible);\n+         commands_.openSourceDocNewColumn().setVisible(visible);\n+\n          manageLayoutCommands();\n       });\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "6de97083e41c743a20065ff175c4fe9945e840b9", "committedDate": "2020-05-14 10:47:21 -0700", "message": "refactoring - remove debug code - remove unnecessary imports, comments - clean up PaneManager code - no longer using SourceDisplayManager"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "bd8748c330a24ea8ebd208bc48ccc1745c959b72", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix issue where corrent number of columns wasn't displayed"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "64ac30fb50db57e1fbded5d9e6abbce5faf6aa27", "committedDate": "2020-05-14 17:25:07 -0700", "message": "only write the number of extra source columns to file"}, {"oid": "5c6f5ac6e574d9f9f34b9ea17c934df021b22e7c", "committedDate": "2020-05-15 07:42:46 -0400", "message": "remove unused imports"}, {"oid": "c4f76e8ebed4986450805f52af7954955b010114", "committedDate": "2020-05-18 11:13:16 -0700", "message": "rename extra_sources preference to additional_source_columns and add feature flag"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "f873149c131d416466115dfc5ffb8723dd7e33d8", "committedDate": "2020-06-02 13:02:23 -0700", "message": "fix issue when loading without prefs"}, {"oid": "ad059def1039efdf16e7c4a6743ef25c9727d68d", "committedDate": "2020-06-02 15:33:09 -0700", "message": "remove unneeded code"}, {"oid": "4e68f65d6d3c1e0b9a60a0278f1643c893167a9b", "committedDate": "2020-06-05 10:24:17 -0700", "message": "change columnMap to a columnList, pane layout preferences UI things"}, {"oid": "df5ac59866ccf09903719bb138466099db1a20f7", "committedDate": "2020-06-08 15:12:24 -0700", "message": "whitespace cleanup"}, {"oid": "54101f9f863eedcb2bc4152c41336852f8b23f34", "committedDate": "2020-06-08 16:51:16 -0700", "message": "enable options dialog to show a single preference pane (#7069)"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "036a734acc1b087eb923fc19c49f6fc5af6bb808", "committedDate": "2020-06-10 12:00:32 -0700", "message": "whitespace cleanup"}, {"oid": "b05e15e98d5dec936f440319aa15d74615743fc3", "committedDate": "2020-06-10 13:22:52 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "fda7c8154cffdb6d52f4fbdcf502b2c4b91cc57d", "committedDate": "2020-06-15 15:37:46 -0700", "message": "properly save splitter state"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "cde0d5ea5babcd21df784d97f9c59d93945c814a", "committedDate": "2020-06-21 21:01:17 -0700", "message": "revert change so hidden tab set doesn't get added to panes_"}, {"oid": "ff564a49dfd9fb019c5d429ddabfa0da4c453d47", "committedDate": "2020-06-22 16:56:06 -0700", "message": "Add event to notify when a source column is closed. Update user prefs on close."}, {"oid": "3ea75f496088f5da2b062855fede62032afbaa89", "committedDate": "2020-06-23 12:32:14 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "eff0599412d7cfa48ae01851a73efa6fb343345d", "committedDate": "2020-06-29 12:21:52 -0700", "message": "make toolbar commands run more accurately, fixed issue that prevented source columns from being completely closed"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "bca2acfdb3c2a01370fa4ccdc6725a634f765dfc", "committedDate": "2020-07-13 10:48:38 -0700", "message": "remove enable additional columns user pref and update add columns UI"}, {"oid": "e15244bd5db875a184694f20b0b35d8e38230826", "committedDate": "2020-07-13 16:41:52 -0700", "message": "add Allow Source Columns user pref so adding source columns can be disabled"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "2e361d9770a6bd2c0b4b2c507dfd3debb5669dfd", "committedDate": "2020-07-16 17:41:42 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "d9a6a4719e4df445df585e7e4c9814823859077c", "committedDate": "2020-07-16 18:56:59 -0700", "message": "focus column on F6"}, {"oid": "1a6ea58349195452567647612cff49bbe7e84d0f", "committedDate": "2020-07-17 15:05:22 -0700", "message": "display source columns within their logical windows rather than directly in the source pane"}, {"oid": "9866cc367c98ecfcb919cabea4884cb5ac40496f", "committedDate": "2020-07-17 17:35:30 -0700", "message": "implement setFocus() for the jobs pane and ensure a tab is visible before showing it"}, {"oid": "80c9381ebed9257e44260f7eb5feffb8f81c81a9", "committedDate": "2020-07-21 14:01:19 -0700", "message": "add CTRL+F7 shorcut to add new source column"}, {"oid": "2e3efccbe171de1e87301f7f45f3b0b92b6feeb4", "committedDate": "2020-07-21 16:10:39 -0700", "message": "code clean up"}, {"oid": "8ed634b4c2498c0d5a11a59017b9ed3a2f28e77e", "committedDate": "2020-07-21 16:50:42 -0700", "message": "display error when a new source column is requested but can't be added"}, {"oid": "419988436f809471ae1ea07b2f9bc81d3e370d1b", "committedDate": "2020-07-21 16:54:15 -0700", "message": "change error to alert"}, {"oid": "b56a819c0bee950f9655918513615d7790ce2f59", "committedDate": "2020-07-21 17:12:54 -0700", "message": "Fix move console left/right command (#7415)"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "ac04418763dc62344095e31161287f7ddcaae8d5", "committedDate": "2020-07-27 14:30:39 -0700", "message": "do not attempt to display source columns before they are ready. Make sure columns are always added to the left of the view and end of the manager's list."}, {"oid": "7a2b7f270d1fe5d665e566d16673b4aea0a0e440", "committedDate": "2020-07-27 16:41:42 -0700", "message": "implement Shift+F6 to navigate to previous pane"}, {"oid": "8c4ad26395af5c1fa1014904154830a6b744043b", "committedDate": "2020-07-27 21:50:26 -0700", "message": "clean up typos"}, {"oid": "7984cf4ecae89d382c08a6138afe5dd0d4a27b33", "committedDate": "2020-07-29 09:11:27 -0700", "message": "focus splitter for source columns"}, {"oid": "9ebf7db98e846c9d6dd617d7f9bb5df921e916db", "committedDate": "2020-08-06 12:48:33 -0400", "message": "change debug statement to logWarning"}, {"oid": "4041b0d258fefaf00a4e8bf846ffba5328c6cc16", "committedDate": "2020-08-06 13:33:59 -0400", "message": "Merge pull request #7481 from rstudio/feature/resize-column-splitter"}, {"oid": "54e70ea611238f52cbddbf110a4c028ab973f0cf", "committedDate": "2020-08-17 14:12:09 -0400", "message": "do not open a new source doc before showing the main source window"}, {"oid": "61bba94d39eaa7592ad9c5030d4a9e61478bff0e", "committedDate": "2020-08-17 15:07:59 -0400", "message": "properly count how many docs a column is opening with"}, {"oid": "59a0211828de863dd9dd768c070ab0f63e456ea0", "committedDate": "2020-08-19 18:03:29 -0400", "message": "fix grammar"}, {"oid": "4e0eabf92d424f88505545ca7bcf94bf5e96455f", "committedDate": "2020-08-24 11:24:09 -0700", "message": "change some string comparisons to use StringUtil.equals"}, {"oid": "8f15fdc0f88e8b813c0ba4fe81c0eec2b80a0294", "committedDate": "2020-08-25 12:16:13 -0400", "message": "prevent source window from being hidden when the document's logical window is not located."}, {"oid": "4c4543506e15f4db2339a38b6ea4ead53c9183a0", "committedDate": "2020-08-25 12:38:56 -0400", "message": "prevent duplicate windows in sourceLogicalWindows_"}, {"oid": "80f26a1037b2dfae45e928c2fdfe95dba2040ac9", "committedDate": "2020-08-25 12:40:22 -0400", "message": "fix spacing"}, {"oid": "bc59fd36bf5d2130b8f8d6fdf9e29c1c98ef3c2a", "committedDate": "2020-09-01 12:05:56 -0400", "message": "Hide and show columns when zooming on a specified tab"}, {"oid": "1b15d9db9774e6d46921ab7c782003dd1827d7a3", "committedDate": "2020-09-01 13:03:36 -0400", "message": "rename methods"}, {"oid": "ca7b2aaf0788792dfb6f68461b180f20dd83d914", "committedDate": "2020-09-01 18:39:17 -0400", "message": "hide additional source columns when zooming on left or right column"}, {"oid": "02b55ba11cae5070357fdad0843d330485103ab9", "committedDate": "2020-09-02 14:07:26 -0400", "message": "eliminate eclipse warnings"}, {"oid": "1d740759ed30d39e0d2182351c33fa0ea2b785e4", "committedDate": "2020-09-03 18:01:44 -0400", "message": "restore correct widths of source columns"}, {"oid": "af48084a94253d331655b9e965096ad9895b0b0e", "committedDate": "2020-09-08 13:22:30 -0400", "message": "remove unneeded code"}, {"oid": "da1f2b1a53af886edf8f21ccf12bec49870b3440", "committedDate": "2020-09-08 13:24:10 -0400", "message": "rename variables"}, {"oid": "859c3d719607d8ef2a4eb521d601b6e43f6e96fa", "committedDate": "2020-09-08 15:42:50 -0400", "message": "code clean up"}, {"oid": "7825906bf81e0dc1ce777825df114c9e06bd290a", "committedDate": "2020-09-08 19:35:05 -0400", "message": "ensure the correct source is made visible on ensureVisible"}, {"oid": "d52fb69f316f1f984af7c23ef6f9ab139d0bd32c", "committedDate": "2020-09-09 13:10:07 -0700", "message": "Remove dead code for unused Tests tab"}, {"oid": "23db03ce6cade3242092b1be37eec0d20ef6c3ce", "committedDate": "2020-09-15 10:54:30 -0400", "message": "set a state for source columns"}, {"oid": "1d201ec7e373393cdc957225eba696c9ca36d2fb", "committedDate": "2020-09-15 12:54:05 -0400", "message": "code clean up and add comments"}, {"oid": "6e736e885911d71d98b2c8c7ba398c008c79e0ad", "committedDate": "2020-09-15 18:27:53 -0400", "message": "simplify code"}, {"oid": "21f8832ab905b4a7d7a3c5e897ab9998111ff25f", "committedDate": "2020-09-15 18:30:05 -0400", "message": "Merge pull request #7796 from rstudio/bugfix/zoom-panes"}, {"oid": "0d581158bf06fd3a25171dcbe60187960c74b14c", "committedDate": "2020-09-16 14:52:06 -0700", "message": "Provide meaningful name for source column landmarks and min/max buttons"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "84aaa76cbb41c25f76cb072c0ef2e3668620f33d", "committedDate": "2020-09-18 18:38:30 -0400", "message": "remove duplicate columns"}, {"oid": "826c04305ec2bc14f691c2a0a9bd2392772d3d68", "committedDate": "2020-09-24 18:46:13 -0700", "message": "Optional highlight around focused panel"}, {"oid": "7039eec008657297d5c8e700a4000750f2bb418b", "committedDate": "2020-09-28 13:31:16 -0400", "message": "prevent exceptions when attempting to focus a pane without tabs"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "d8a6254d37614a54525e2768e54781cffa45bfa2", "committedDate": "2020-09-28 16:32:55 -0400", "message": "simplify resize animation"}, {"oid": "dff11bd7966ccee8eb2a3b7836b579bcd2e6c667", "committedDate": "2020-09-28 16:46:51 -0400", "message": "rename variables"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "43c8648eb37828cb697b6e24c8221f67cb773348", "committedDate": "2020-10-06 11:14:14 -0400", "message": "code clean up"}, {"oid": "e29ad4f3d7d2288b26436236916793dabf021af5", "committedDate": "2020-10-08 11:26:26 -0400", "message": "disable and hide multiple source column commands when `Allow Source Columns` is off."}, {"oid": "15d03041a4b6c9fb89057886b90e434abd44ac06", "committedDate": "2020-10-08 12:37:55 -0400", "message": "don't adjust command when source column max is reached"}, {"oid": "8b24ab85bae7cc15372d80458d3e2eb2c118deda", "committedDate": "2020-10-21 13:17:09 -0400", "message": "only sync columns on start up and when prompted"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "c20156a8f01be1f6e56a36900f650fe3657ec9ec", "committedDate": "2021-01-11 16:03:20 -0800", "message": "cleanup hard-tabs that have crept into source files"}, {"oid": "29f72fdfe03e8b08fc489dc743d60fb251b314c2", "committedDate": "2021-01-27 15:51:59 -0500", "message": "when restoring panes to \"normal\", keep panes without any tabs minimized"}, {"oid": "6dd9859082c8cc35f4cb08fc19cae4dae492f0b4", "committedDate": "2021-01-27 16:29:06 -0500", "message": "hide empty tab panes and show newly populated tab panes on preference updates"}, {"oid": "2847dc7389e03b1669af6d56c754f8b2aaf6a0b4", "committedDate": "2021-02-02 11:39:05 -0500", "message": "fix bugs when changes applied to Pane Layout"}, {"oid": "65e9ffbc258e241b6061e7e19d9a0bfb9ca5611d", "committedDate": "2021-02-10 12:19:55 -0800", "message": "move version label to left"}, {"oid": "8ad7d438183b5128e0ba87296a52216626e6a833", "committedDate": "2021-02-26 13:21:14 -0800", "message": "Revert \"Remove dead code for unused Tests tab\""}, {"oid": "4cd9558a762b640b689776c2b330f3b457028336", "committedDate": "2021-06-10 06:05:41 -0400", "message": "eliminate eclipse warnings"}, {"oid": "fb9ad8192df79004e1b0bdaf3a30fabcd89b6ab1", "committedDate": "2021-09-13 12:30:51 -0700", "message": "Add commands to open selected files in columns or active editor"}, {"oid": "ec5317c5a649efd12ae3a83b227743bc095da68e", "committedDate": "2021-09-14 08:49:32 -0700", "message": "Adjust indentations and some formatting to better follow standards."}, {"oid": "617ea23faf56b4f2287df443980386955ac741b2", "committedDate": "2021-09-27 09:14:29 -0400", "message": "initial stub for presentation pane"}, {"oid": "47170a63bec3428b18ff5c033cf90e00584bc360", "committedDate": "2021-09-29 13:46:47 -0400", "message": "use \"presentations\" rather than \"presentation2\" for compatibility with pane config ui"}, {"oid": "d8d2472a2e2e15cb87ebf0ab53edf089bb3c2ea8", "committedDate": "2021-09-29 21:20:50 -0400", "message": "focus presentation tab when explicitly activated"}, {"oid": "2bfe6ba6be08889e2793e9e2cb659846331de31e", "committedDate": "2021-11-04 11:27:07 -0700", "message": "remove invocations of isFlat"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "17c431c402b5ed6a0639c45bf1aff3e620d9c2fa", "committedDate": "2021-12-07 11:33:51 -0500", "message": "feat(i18n): i18n-ify missed literals"}, {"oid": "04891e0ce1843c68ee6908695cc05161dc386735", "committedDate": "2021-12-07 14:02:01 -0500", "message": "Merge branch 'main' into rohan-i18nify-client-workbench-pt1"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "893ffe22120efb2e7dddccc09d74641623072313", "committedDate": "2022-04-19 15:41:13 -0600", "message": "console and terminal"}, {"oid": "7d394bbba5f7ebdf46d7224ddc8b7c9295b47ec2", "committedDate": "2022-04-25 15:47:12 -0600", "message": "use constants for internal quadrant names"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "72451ff653c5eaf5bc372d45dc0410930745ea27", "committedDate": "2022-04-25 16:54:02 -0600", "message": "use pane constants instead of string literals"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NzE4MQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424587181", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T16:52:11Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -64,7 +64,7 @@\n import org.rstudio.studio.client.workbench.views.console.events.WorkingDirChangedHandler;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "3d90b2d61d1c2cc4f38c9c34bde30f6b216840e5", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex b780eb6c37..1d3871e343 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -61,7 +61,6 @@ import org.rstudio.studio.client.workbench.views.buildtools.model.BuildServerOpe\n import org.rstudio.studio.client.workbench.views.buildtools.model.BuildState;\n import org.rstudio.studio.client.workbench.views.console.events.SendToConsoleEvent;\n import org.rstudio.studio.client.workbench.views.console.events.WorkingDirChangedEvent;\n-import org.rstudio.studio.client.workbench.views.console.events.WorkingDirChangedHandler;\n import org.rstudio.studio.client.workbench.views.files.model.FilesServerOperations;\n import org.rstudio.studio.client.workbench.views.jobs.model.JobManager;\n import org.rstudio.studio.client.workbench.views.source.Source;\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex 1d3871e343..c7dfd7068f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -66,34 +65,34 @@ import org.rstudio.studio.client.workbench.views.jobs.model.JobManager;\n import org.rstudio.studio.client.workbench.views.source.Source;\n import org.rstudio.studio.client.workbench.views.terminal.TerminalHelper;\n \n-public class BuildPresenter extends BasePresenter \n+public class BuildPresenter extends BasePresenter\n {\n    public interface Display extends WorkbenchView\n    {\n       void buildStarted();\n-      \n+\n       void showOutput(CompileOutput output, boolean tail);\n       void scrollToBottom();\n-      \n+\n       void showErrors(String basePath,\n-                      JsArray<SourceMarker> errors, \n+                      JsArray<SourceMarker> errors,\n                       boolean ensureVisible,\n                       int autoSelect,\n                       boolean openErrors,\n                       String buildType);\n       void buildCompleted();\n-      \n+\n       HasSelectionCommitHandlers<CodeNavigationTarget> errorList();\n-      \n+\n       HasSelectionCommitHandlers<String> buildSubType();\n-          \n+\n       HasClickHandlers stopButton();\n-      \n+\n       String errorsBuildType();\n    }\n-   \n+\n    @Inject\n-   public BuildPresenter(Display display, \n+   public BuildPresenter(Display display,\n                          GlobalDisplay globalDisplay,\n                          UserPrefs uiPrefs,\n                          WorkbenchContext workbenchContext,\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "3d90b2d61d1c2cc4f38c9c34bde30f6b216840e5", "committedDate": "2020-06-03 11:32:48 -0700", "message": "refactor Console-related events into single-file format"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "c8cfa0953e466c3ee20a26fa15ad9d5bf58deb85", "committedDate": "2021-06-23 06:52:06 -0400", "message": "stub for quarto serve site command"}, {"oid": "388a06aa56057bd1cd280a9becdf503257b8bcc9", "committedDate": "2021-06-23 14:11:27 -0400", "message": "initial work on quarto serve site command"}, {"oid": "14c21ce99d7b3c81181e75aad171dd53fab62b59", "committedDate": "2021-06-24 07:28:00 -0400", "message": "no busy check for building quarto sites"}, {"oid": "6833502ea389418e439ba2b8595b9389e175125b", "committedDate": "2021-06-25 15:26:30 -0400", "message": "improve quarto book type menu behavior"}, {"oid": "42d4e6d8c18d3471f7a5eff063faa13ae2a2829f", "committedDate": "2021-06-25 16:42:04 -0400", "message": "use command based notification for book type changes (eliminate fireEvent conflict w/ popup menu)"}, {"oid": "e1c118e98b50630f72c6b565e7c8871963b4db1d", "committedDate": "2021-06-27 14:11:21 -0400", "message": "use quarto server --render for render site command w/ html target"}, {"oid": "74976a8ef8c416d5576066ea03715cbde722cfa3", "committedDate": "2021-06-28 16:47:32 -0400", "message": "correct handling for quarto sub-project renders"}, {"oid": "0977c81cf0da05c32af58c5d865f45e9ba6d6c86", "committedDate": "2021-07-30 20:46:24 -0400", "message": "quarto: correct render project behavior for non-website projects"}, {"oid": "b0ebdf63d7d63c59b9960a40b453f9a3c3c91484", "committedDate": "2021-08-12 18:51:05 -0400", "message": "save source files before quarto build command executes"}, {"oid": "dfb209305e20fec457a2566d0e9ed6c4204696d7", "committedDate": "2021-11-03 15:18:07 -0400", "message": "initial work on pdf book preview"}, {"oid": "6f0eb6e50f9219ddd9a083eb6743ddc1827124a0", "committedDate": "2021-12-01 11:32:06 -0500", "message": "feat(i18n): i18nify at package level in-progress"}, {"oid": "8fafecf17d9cdc8f1224e6c3c1afd0aad41530d4", "committedDate": "2021-12-01 14:24:16 -0500", "message": "feat(i18n): Refactor constant classes at pkg level"}, {"oid": "af6a7525250758373387bc697dca284aeb1b98f8", "committedDate": "2021-12-03 10:58:29 -0500", "message": "feat(i18n): Refactor constant classes"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "df442d5c0313b14fff71f7845a2a1193586c6354", "committedDate": "2022-04-01 14:50:18 -0700", "message": "Update build pane for Makefile projects (#10778)"}, {"oid": "27f6562e77065663c2e727d08202fb699496ab04", "committedDate": "2022-04-19 14:54:59 -0600", "message": "build tab"}, {"oid": "0a382d1cdfd7c9a6fc3d1e7f3ffa11ccefdf418d", "committedDate": "2022-05-09 11:38:34 -0700", "message": "Incremental install (#11049)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "4f10584f9e9a5eda2e599afe1e93c63f30f35bf5", "committedDate": "2022-09-30 12:59:40 -0700", "message": "initial work on next gen preview"}, {"oid": "94769c0e0be9c13dff8001e40b06eb3f8545791a", "committedDate": "2022-10-04 09:35:43 -0700", "message": "optimize handling of console output / errors (#12077)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDUwMw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424590503", "body": "While you're touching this... could be lambda-fied. Braces and newlines as you see fit:\r\n```\r\n      source_.withSaveFilesBeforeCommand(() ->\r\n      {\r\n         withDevtoolsLoadAllPath(loadAllPath ->\r\n         {\r\n            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\r\n         });\r\n      }, () -> {}, \"Build\");\r\n```", "bodyText": "While you're touching this... could be lambda-fied. Braces and newlines as you see fit:\n      source_.withSaveFilesBeforeCommand(() ->\n      {\n         withDevtoolsLoadAllPath(loadAllPath ->\n         {\n            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n         });\n      }, () -> {}, \"Build\");", "bodyHTML": "<p dir=\"auto\">While you're touching this... could be lambda-fied. Braces and newlines as you see fit:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      source_.withSaveFilesBeforeCommand(() -&gt;\n      {\n         withDevtoolsLoadAllPath(loadAllPath -&gt;\n         {\n            sendLoadCommandToConsole(&quot;devtools::load_all(\\&quot;&quot; + loadAllPath + &quot;\\&quot;)&quot;);\n         });\n      }, () -&gt; {}, &quot;Build&quot;);\"><pre><code>      source_.withSaveFilesBeforeCommand(() -&gt;\n      {\n         withDevtoolsLoadAllPath(loadAllPath -&gt;\n         {\n            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n         });\n      }, () -&gt; {}, \"Build\");\n</code></pre></div>", "author": "gtritchie", "createdAt": "2020-05-13T16:57:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -309,7 +309,7 @@ void onBuildAll()\n    \n    void onDevtoolsLoadAll()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzgzNg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424657836", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex b780eb6c37..5396a3810a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -309,26 +309,13 @@ public class BuildPresenter extends BasePresenter\n    \n    void onDevtoolsLoadAll()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            withDevtoolsLoadAllPath(new CommandWithArg<String>() {\n-               @Override\n-               public void execute(String loadAllPath)\n-               {\n-                  sendLoadCommandToConsole(\n-                              \"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n-               } \n-            }); \n-         }\n-      },\n-      new Command() {\n-         public void execute()\n+      source_.withSaveFilesBeforeCommand(() ->\n+      {\n+         withDevtoolsLoadAllPath(loadAllPath ->\n          {\n-         }\n-      },\n-      \"Build\");\n+            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n+         });\n+      }, () -> {}, \"Build\");\n    }\n      \n    void onBuildSourcePackage()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex b780eb6c37..5396a3810a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -309,26 +309,13 @@ public class BuildPresenter extends BasePresenter\n    \n    void onDevtoolsLoadAll()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            withDevtoolsLoadAllPath(new CommandWithArg<String>() {\n-               @Override\n-               public void execute(String loadAllPath)\n-               {\n-                  sendLoadCommandToConsole(\n-                              \"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n-               } \n-            }); \n-         }\n-      },\n-      new Command() {\n-         public void execute()\n+      source_.withSaveFilesBeforeCommand(() ->\n+      {\n+         withDevtoolsLoadAllPath(loadAllPath ->\n          {\n-         }\n-      },\n-      \"Build\");\n+            sendLoadCommandToConsole(\"devtools::load_all(\\\"\" + loadAllPath + \"\\\")\");\n+         });\n+      }, () -> {}, \"Build\");\n    }\n      \n    void onBuildSourcePackage()\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex 5396a3810a..c7dfd7068f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -317,17 +306,17 @@ public class BuildPresenter extends BasePresenter\n          });\n       }, () -> {}, \"Build\");\n    }\n-     \n+\n    void onBuildSourcePackage()\n    {\n       startBuild(\"build-source-package\");\n    }\n-   \n+\n    void onBuildBinaryPackage()\n    {\n       startBuild(\"build-binary-package\");\n    }\n-   \n+\n    void onRoxygenizePackage()\n    {\n       dependencyManager_.withRoxygen(\n", "next_change": {"commit": "6f0eb6e50f9219ddd9a083eb6743ddc1827124a0", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex c7dfd7068f..9d9b3a9528 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -320,8 +339,8 @@ public class BuildPresenter extends BasePresenter\n    void onRoxygenizePackage()\n    {\n       dependencyManager_.withRoxygen(\n-            \"Building package documentation\",\n-            \"Building package documentation\",\n+            constants_.packageDocumentationProgressCaption(),\n+            constants_.packageDocumentationProgressCaption(),\n             () -> startBuild(\"roxygenize-package\"));\n    }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "3d90b2d61d1c2cc4f38c9c34bde30f6b216840e5", "committedDate": "2020-06-03 11:32:48 -0700", "message": "refactor Console-related events into single-file format"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "c8cfa0953e466c3ee20a26fa15ad9d5bf58deb85", "committedDate": "2021-06-23 06:52:06 -0400", "message": "stub for quarto serve site command"}, {"oid": "388a06aa56057bd1cd280a9becdf503257b8bcc9", "committedDate": "2021-06-23 14:11:27 -0400", "message": "initial work on quarto serve site command"}, {"oid": "14c21ce99d7b3c81181e75aad171dd53fab62b59", "committedDate": "2021-06-24 07:28:00 -0400", "message": "no busy check for building quarto sites"}, {"oid": "6833502ea389418e439ba2b8595b9389e175125b", "committedDate": "2021-06-25 15:26:30 -0400", "message": "improve quarto book type menu behavior"}, {"oid": "42d4e6d8c18d3471f7a5eff063faa13ae2a2829f", "committedDate": "2021-06-25 16:42:04 -0400", "message": "use command based notification for book type changes (eliminate fireEvent conflict w/ popup menu)"}, {"oid": "e1c118e98b50630f72c6b565e7c8871963b4db1d", "committedDate": "2021-06-27 14:11:21 -0400", "message": "use quarto server --render for render site command w/ html target"}, {"oid": "74976a8ef8c416d5576066ea03715cbde722cfa3", "committedDate": "2021-06-28 16:47:32 -0400", "message": "correct handling for quarto sub-project renders"}, {"oid": "0977c81cf0da05c32af58c5d865f45e9ba6d6c86", "committedDate": "2021-07-30 20:46:24 -0400", "message": "quarto: correct render project behavior for non-website projects"}, {"oid": "b0ebdf63d7d63c59b9960a40b453f9a3c3c91484", "committedDate": "2021-08-12 18:51:05 -0400", "message": "save source files before quarto build command executes"}, {"oid": "dfb209305e20fec457a2566d0e9ed6c4204696d7", "committedDate": "2021-11-03 15:18:07 -0400", "message": "initial work on pdf book preview"}, {"oid": "6f0eb6e50f9219ddd9a083eb6743ddc1827124a0", "committedDate": "2021-12-01 11:32:06 -0500", "message": "feat(i18n): i18nify at package level in-progress"}, {"oid": "8fafecf17d9cdc8f1224e6c3c1afd0aad41530d4", "committedDate": "2021-12-01 14:24:16 -0500", "message": "feat(i18n): Refactor constant classes at pkg level"}, {"oid": "af6a7525250758373387bc697dca284aeb1b98f8", "committedDate": "2021-12-03 10:58:29 -0500", "message": "feat(i18n): Refactor constant classes"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "df442d5c0313b14fff71f7845a2a1193586c6354", "committedDate": "2022-04-01 14:50:18 -0700", "message": "Update build pane for Makefile projects (#10778)"}, {"oid": "27f6562e77065663c2e727d08202fb699496ab04", "committedDate": "2022-04-19 14:54:59 -0600", "message": "build tab"}, {"oid": "0a382d1cdfd7c9a6fc3d1e7f3ffa11ccefdf418d", "committedDate": "2022-05-09 11:38:34 -0700", "message": "Incremental install (#11049)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "4f10584f9e9a5eda2e599afe1e93c63f30f35bf5", "committedDate": "2022-09-30 12:59:40 -0700", "message": "initial work on next gen preview"}, {"oid": "94769c0e0be9c13dff8001e40b06eb3f8545791a", "committedDate": "2022-10-04 09:35:43 -0700", "message": "optimize handling of console output / errors (#12077)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MTc4Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424591783", "body": "Another lambda-ing opportunity:\r\n\r\n```\r\n      source_.withSaveFilesBeforeCommand(() ->\r\n      {\r\n         server_.startBuild(type, subType, new SimpleRequestCallback<Boolean>() {\r\n            @Override\r\n            public void onResponseReceived(Boolean response)\r\n            {\r\n            }\r\n\r\n            @Override\r\n            public void onError(ServerError error)\r\n            {\r\n               super.onError(error);\r\n               workbenchContext_.setBuildInProgress(false);\r\n            }\r\n         });\r\n      }, () -> {}, \"Build\");\r\n```", "bodyText": "Another lambda-ing opportunity:\n      source_.withSaveFilesBeforeCommand(() ->\n      {\n         server_.startBuild(type, subType, new SimpleRequestCallback<Boolean>() {\n            @Override\n            public void onResponseReceived(Boolean response)\n            {\n            }\n\n            @Override\n            public void onError(ServerError error)\n            {\n               super.onError(error);\n               workbenchContext_.setBuildInProgress(false);\n            }\n         });\n      }, () -> {}, \"Build\");", "bodyHTML": "<p dir=\"auto\">Another lambda-ing opportunity:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      source_.withSaveFilesBeforeCommand(() -&gt;\n      {\n         server_.startBuild(type, subType, new SimpleRequestCallback&lt;Boolean&gt;() {\n            @Override\n            public void onResponseReceived(Boolean response)\n            {\n            }\n\n            @Override\n            public void onError(ServerError error)\n            {\n               super.onError(error);\n               workbenchContext_.setBuildInProgress(false);\n            }\n         });\n      }, () -&gt; {}, &quot;Build&quot;);\"><pre><code>      source_.withSaveFilesBeforeCommand(() -&gt;\n      {\n         server_.startBuild(type, subType, new SimpleRequestCallback&lt;Boolean&gt;() {\n            @Override\n            public void onResponseReceived(Boolean response)\n            {\n            }\n\n            @Override\n            public void onError(ServerError error)\n            {\n               super.onError(error);\n               workbenchContext_.setBuildInProgress(false);\n            }\n         });\n      }, () -&gt; {}, \"Build\");\n</code></pre></div>", "author": "gtritchie", "createdAt": "2020-05-13T16:59:19Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java", "diffHunk": "@@ -442,7 +448,13 @@ public void onError(ServerError error)\n \n             });\n          }\n-      }, \"Build\");\n+      },\n+      new Command() {", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex b780eb6c37..5396a3810a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -427,34 +414,23 @@ public class BuildPresenter extends BasePresenter\n       // attempt to start a build (this will be a silent no-op if there\n       // is already a build running)\n       workbenchContext_.setBuildInProgress(true);\n-      source_.withSaveFilesBeforeCommand(new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            server_.startBuild(type, subType, \n-                  new SimpleRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean response)\n-               {\n-\n-               }\n+      source_.withSaveFilesBeforeCommand(() ->\n+      {\n+         server_.startBuild(type, subType, new SimpleRequestCallback<Boolean>() {\n+            @Override\n+            public void onResponseReceived(Boolean response)\n+            {\n+            }\n \n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  super.onError(error);\n-                  workbenchContext_.setBuildInProgress(false);\n-               }\n+            @Override\n+            public void onError(ServerError error)\n+            {\n+               super.onError(error);\n+               workbenchContext_.setBuildInProgress(false);\n+            }\n \n-            });\n-         }\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Build\");\n+         });\n+      }, () -> {}, \"Build\");\n    }\n \n    void onStopBuild()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex b780eb6c37..5396a3810a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -427,34 +414,23 @@ public class BuildPresenter extends BasePresenter\n       // attempt to start a build (this will be a silent no-op if there\n       // is already a build running)\n       workbenchContext_.setBuildInProgress(true);\n-      source_.withSaveFilesBeforeCommand(new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            server_.startBuild(type, subType, \n-                  new SimpleRequestCallback<Boolean>() {\n-               @Override\n-               public void onResponseReceived(Boolean response)\n-               {\n-\n-               }\n+      source_.withSaveFilesBeforeCommand(() ->\n+      {\n+         server_.startBuild(type, subType, new SimpleRequestCallback<Boolean>() {\n+            @Override\n+            public void onResponseReceived(Boolean response)\n+            {\n+            }\n \n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  super.onError(error);\n-                  workbenchContext_.setBuildInProgress(false);\n-               }\n+            @Override\n+            public void onError(ServerError error)\n+            {\n+               super.onError(error);\n+               workbenchContext_.setBuildInProgress(false);\n+            }\n \n-            });\n-         }\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Build\");\n+         });\n+      }, () -> {}, \"Build\");\n    }\n \n    void onStopBuild()\n", "next_change": {"commit": "6f0eb6e50f9219ddd9a083eb6743ddc1827124a0", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\nindex 5396a3810a..9d9b3a9528 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/buildtools/BuildPresenter.java\n", "chunk": "@@ -436,20 +466,20 @@ public class BuildPresenter extends BasePresenter\n    void onStopBuild()\n    {\n        server_.terminateBuild(new DelayedProgressRequestCallback<Boolean>(\n-                                                       \"Terminating Build...\"){\n+                                                       constants_.terminatingBuildMessage()){\n          @Override\n          protected void onSuccess(Boolean response)\n          {\n             if (!response)\n             {\n                globalDisplay_.showErrorMessage(\n-                     \"Error Terminating Build\",\n-                     \"Unable to terminate build. Please try again.\");\n+                     constants_.errorTerminatingBuildCaption(),\n+                     constants_.errorTerminatingBuildMessage());\n             }\n          }\n-       });  \n+       });\n    }\n-   \n+\n    @Override\n    public void onSelected()\n    {\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "3d90b2d61d1c2cc4f38c9c34bde30f6b216840e5", "committedDate": "2020-06-03 11:32:48 -0700", "message": "refactor Console-related events into single-file format"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "c8cfa0953e466c3ee20a26fa15ad9d5bf58deb85", "committedDate": "2021-06-23 06:52:06 -0400", "message": "stub for quarto serve site command"}, {"oid": "388a06aa56057bd1cd280a9becdf503257b8bcc9", "committedDate": "2021-06-23 14:11:27 -0400", "message": "initial work on quarto serve site command"}, {"oid": "14c21ce99d7b3c81181e75aad171dd53fab62b59", "committedDate": "2021-06-24 07:28:00 -0400", "message": "no busy check for building quarto sites"}, {"oid": "6833502ea389418e439ba2b8595b9389e175125b", "committedDate": "2021-06-25 15:26:30 -0400", "message": "improve quarto book type menu behavior"}, {"oid": "42d4e6d8c18d3471f7a5eff063faa13ae2a2829f", "committedDate": "2021-06-25 16:42:04 -0400", "message": "use command based notification for book type changes (eliminate fireEvent conflict w/ popup menu)"}, {"oid": "e1c118e98b50630f72c6b565e7c8871963b4db1d", "committedDate": "2021-06-27 14:11:21 -0400", "message": "use quarto server --render for render site command w/ html target"}, {"oid": "74976a8ef8c416d5576066ea03715cbde722cfa3", "committedDate": "2021-06-28 16:47:32 -0400", "message": "correct handling for quarto sub-project renders"}, {"oid": "0977c81cf0da05c32af58c5d865f45e9ba6d6c86", "committedDate": "2021-07-30 20:46:24 -0400", "message": "quarto: correct render project behavior for non-website projects"}, {"oid": "b0ebdf63d7d63c59b9960a40b453f9a3c3c91484", "committedDate": "2021-08-12 18:51:05 -0400", "message": "save source files before quarto build command executes"}, {"oid": "dfb209305e20fec457a2566d0e9ed6c4204696d7", "committedDate": "2021-11-03 15:18:07 -0400", "message": "initial work on pdf book preview"}, {"oid": "6f0eb6e50f9219ddd9a083eb6743ddc1827124a0", "committedDate": "2021-12-01 11:32:06 -0500", "message": "feat(i18n): i18nify at package level in-progress"}, {"oid": "8fafecf17d9cdc8f1224e6c3c1afd0aad41530d4", "committedDate": "2021-12-01 14:24:16 -0500", "message": "feat(i18n): Refactor constant classes at pkg level"}, {"oid": "af6a7525250758373387bc697dca284aeb1b98f8", "committedDate": "2021-12-03 10:58:29 -0500", "message": "feat(i18n): Refactor constant classes"}, {"oid": "463bc58d8787c544f90fab29e4414ca967e3961a", "committedDate": "2021-12-08 08:17:12 -0500", "message": "fix(i18n): Implement change requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "df442d5c0313b14fff71f7845a2a1193586c6354", "committedDate": "2022-04-01 14:50:18 -0700", "message": "Update build pane for Makefile projects (#10778)"}, {"oid": "27f6562e77065663c2e727d08202fb699496ab04", "committedDate": "2022-04-19 14:54:59 -0600", "message": "build tab"}, {"oid": "0a382d1cdfd7c9a6fc3d1e7f3ffa11ccefdf418d", "committedDate": "2022-05-09 11:38:34 -0700", "message": "Incremental install (#11049)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "4f10584f9e9a5eda2e599afe1e93c63f30f35bf5", "committedDate": "2022-09-30 12:59:40 -0700", "message": "initial work on next gen preview"}, {"oid": "94769c0e0be9c13dff8001e40b06eb3f8545791a", "committedDate": "2022-10-04 09:35:43 -0700", "message": "optimize handling of console output / errors (#12077)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NDcyMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424594720", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:04:06Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java", "diffHunk": "@@ -83,7 +83,6 @@\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "eee8192f8a852d9ac28481bf52a4f4d273ed8663", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\nindex d617cde3ba..0d61e9bbee 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n", "chunk": "@@ -83,6 +85,7 @@ import org.rstudio.studio.client.workbench.views.environment.model.EnvironmentSe\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;\n import org.rstudio.studio.client.workbench.views.environment.view.EnvironmentClientState;\n import org.rstudio.studio.client.workbench.views.source.Source;\n+import org.rstudio.studio.client.workbench.views.source.SourceColumnManager;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserFinishedEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserHighlightEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserNavigationEvent;\n", "next_change": {"commit": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\nindex 0d61e9bbee..97940dc186 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n", "chunk": "@@ -89,6 +89,7 @@ import org.rstudio.studio.client.workbench.views.source.SourceColumnManager;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserFinishedEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserHighlightEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserNavigationEvent;\n+import org.rstudio.studio.client.workbench.views.source.events.ScrollToPositionEvent;\n import org.rstudio.studio.client.workbench.views.source.model.SourceServerOperations;\n \n import java.util.ArrayList;\n", "next_change": {"commit": "5380606fde18c3d97b05270e6fdbcafa2e563652", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\nindex 97940dc186..edaec6fefe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n", "chunk": "@@ -85,7 +84,6 @@ import org.rstudio.studio.client.workbench.views.environment.model.EnvironmentSe\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;\n import org.rstudio.studio.client.workbench.views.environment.view.EnvironmentClientState;\n import org.rstudio.studio.client.workbench.views.source.Source;\n-import org.rstudio.studio.client.workbench.views.source.SourceColumnManager;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserFinishedEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserHighlightEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserNavigationEvent;\n", "next_change": {"commit": "65506942fa3ba41e1484b562342d13d4eb63b38f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\nindex edaec6fefe..660cbfcde4 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n", "chunk": "@@ -81,8 +84,11 @@ import org.rstudio.studio.client.workbench.views.environment.model.CallFrame;\n import org.rstudio.studio.client.workbench.views.environment.model.DownloadInfo;\n import org.rstudio.studio.client.workbench.views.environment.model.EnvironmentContextData;\n import org.rstudio.studio.client.workbench.views.environment.model.EnvironmentServerOperations;\n+import org.rstudio.studio.client.workbench.views.environment.model.MemoryUsageReport;\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;\n import org.rstudio.studio.client.workbench.views.environment.view.EnvironmentClientState;\n+import org.rstudio.studio.client.workbench.views.environment.view.MemoryUsageSummary;\n+import org.rstudio.studio.client.workbench.views.environment.view.MemoryUsageSummaryDialog;\n import org.rstudio.studio.client.workbench.views.source.Source;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserFinishedEvent;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserHighlightEvent;\n", "next_change": {"commit": "4cd9558a762b640b689776c2b330f3b457028336", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\nindex 660cbfcde4..7d00683c25 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPresenter.java\n", "chunk": "@@ -87,7 +87,6 @@ import org.rstudio.studio.client.workbench.views.environment.model.EnvironmentSe\n import org.rstudio.studio.client.workbench.views.environment.model.MemoryUsageReport;\n import org.rstudio.studio.client.workbench.views.environment.model.RObject;\n import org.rstudio.studio.client.workbench.views.environment.view.EnvironmentClientState;\n-import org.rstudio.studio.client.workbench.views.environment.view.MemoryUsageSummary;\n import org.rstudio.studio.client.workbench.views.environment.view.MemoryUsageSummaryDialog;\n import org.rstudio.studio.client.workbench.views.source.Source;\n import org.rstudio.studio.client.workbench.views.source.events.CodeBrowserFinishedEvent;\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "b7fe077033cbebf295aa147c23240d43e014e313", "committedDate": "2020-05-20 13:02:02 -0700", "message": "support view of Python objects in Environment pane (#6862)"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "3d90b2d61d1c2cc4f38c9c34bde30f6b216840e5", "committedDate": "2020-06-03 11:32:48 -0700", "message": "refactor Console-related events into single-file format"}, {"oid": "eee8192f8a852d9ac28481bf52a4f4d273ed8663", "committedDate": "2020-08-12 16:06:02 -0400", "message": "when rstudioapi::navigateToFile is called without a file, scroll to the line in the currently open file"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "5380606fde18c3d97b05270e6fdbcafa2e563652", "committedDate": "2020-08-14 12:50:08 -0400", "message": "remove unused variable"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "9bff3d53cd1c48af0edb7b1187e64c5e38353f65", "committedDate": "2020-09-02 09:19:11 -0700", "message": "use 'save::save.image()' if 'save.image()' is masked (#7692)"}, {"oid": "02b55ba11cae5070357fdad0843d330485103ab9", "committedDate": "2020-09-02 14:07:26 -0400", "message": "eliminate eclipse warnings"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "86fa5a71f7ccccfa7136835410e06cc7da7cf3b8", "committedDate": "2021-01-11 16:27:37 -0800", "message": "add command for triggering a garbage collection"}, {"oid": "65506942fa3ba41e1484b562342d13d4eb63b38f", "committedDate": "2021-01-25 15:06:32 -0800", "message": "plumbing/stubs for memory usage report"}, {"oid": "1b1f3d22428e36cfc6a82757d7042609e81e2d6d", "committedDate": "2021-01-27 15:54:15 -0800", "message": "implement command to toggle memory display state"}, {"oid": "4cd9558a762b640b689776c2b330f3b457028336", "committedDate": "2021-06-10 06:05:41 -0400", "message": "eliminate eclipse warnings"}, {"oid": "b80b77cf161c01e3a24cda3104f0d743fe3f689a", "committedDate": "2021-07-09 15:49:01 -0700", "message": "don't update R variables in Environment pane when Python active"}, {"oid": "f516f4656b06c4e70a901ae9da45f1de905904f7", "committedDate": "2021-07-09 15:57:12 -0700", "message": "update comment"}, {"oid": "b44f8aabcd0b9b1f49db18f8c74cc8eee7e86f54", "committedDate": "2021-12-07 13:52:45 -0500", "message": "feat(i18n): views-environment"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "b0f0e0a6df3d2d75937d439b306e30312608deaf", "committedDate": "2022-02-08 17:09:34 -0500", "message": "Check if load from base is masked before calling load workspace"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NTI1Mw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424595253", "body": "not used", "bodyText": "not used", "bodyHTML": "<p dir=\"auto\">not used</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:04:59Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -14,6 +14,7 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n+import com.google.gwt.core.client.GWT;", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..82c41da0b2 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..a8b6ae8ca9 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,6 +14,7 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n+import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "f80341e1290ec0ed7126347d255c59d685a460ab", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex a8b6ae8ca9..c2171003a1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c2171003a1..4719ec35fc 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,6 +14,7 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n+import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4719ec35fc..3daad397d3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "fcc85338d4567365a7461736d7350b9639fc8e00", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 3daad397d3..0141ba6497 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,6 +14,7 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n+import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 0141ba6497..b6431bf1a6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.GWT;\n import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n", "next_change": {"commit": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex b6431bf1a6..dcadfa99c0 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -19,8 +19,6 @@ import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.Scheduler;\n import com.google.gwt.core.client.Scheduler.ScheduledCommand;\n-import com.google.gwt.event.dom.client.ChangeEvent;\n-import com.google.gwt.event.dom.client.ChangeHandler;\n import com.google.gwt.event.dom.client.FocusEvent;\n import com.google.gwt.event.dom.client.KeyCodes;\n import com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers;\n", "next_change": {"commit": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex dcadfa99c0..c7e5ea0a19 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -14,7 +14,6 @@\n  */\n package org.rstudio.studio.client.workbench.views.source;\n \n-import com.google.gwt.core.client.JavaScriptObject;\n import com.google.gwt.core.client.JsArray;\n import com.google.gwt.core.client.JsArrayString;\n import com.google.gwt.core.client.Scheduler;\n", "next_change": {"commit": "9484252433810ac79cc940c4ef041bf2e5d8adee", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c7e5ea0a19..7861be295a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -22,7 +22,6 @@ import com.google.gwt.event.dom.client.FocusEvent;\n import com.google.gwt.event.dom.client.KeyCodes;\n import com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers;\n import com.google.gwt.event.logical.shared.HasSelectionHandlers;\n-import com.google.gwt.event.shared.HandlerRegistration;\n import com.google.gwt.user.client.Command;\n import com.google.gwt.user.client.Event;\n import com.google.gwt.user.client.Event.NativePreviewEvent;\n", "next_change": {"commit": "0da6779905d14018e12dff776755a8daf1b0d61a", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 7861be295a..73e7948119 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -22,6 +22,7 @@ import com.google.gwt.event.dom.client.FocusEvent;\n import com.google.gwt.event.dom.client.KeyCodes;\n import com.google.gwt.event.logical.shared.HasBeforeSelectionHandlers;\n import com.google.gwt.event.logical.shared.HasSelectionHandlers;\n+import com.google.gwt.event.shared.HandlerRegistration;\n import com.google.gwt.user.client.Command;\n import com.google.gwt.user.client.Event;\n import com.google.gwt.user.client.Event.NativePreviewEvent;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NzU3NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424597575", "body": "Doesn't this trigger an infinite recursive loop? (onNewDocumentWithCode calling itself?).", "bodyText": "Doesn't this trigger an infinite recursive loop? (onNewDocumentWithCode calling itself?).", "bodyHTML": "<p dir=\"auto\">Doesn't this trigger an infinite recursive loop? (onNewDocumentWithCode calling itself?).</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:09:02Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -409,40 +413,48 @@ public Source(Commands commands,\n          command.setVisible(false);\n          command.setEnabled(false);\n       }\n-\n-      // fake shortcuts for commands which we handle at a lower level\n-      commands.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n-      commands.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n-\n-      // If tab has been disabled for auto complete by the user, set the \"shortcut\" to ctrl-space instead.\n-      if (userPrefs_.tabCompletion().getValue() && !userPrefs_.tabKeyMoveFocus().getValue())\n-         commands.codeCompletion().setShortcut(new KeyboardShortcut(\"Tab\", KeyCodes.KEY_TAB, KeyboardShortcut.NONE));\n-      else\n-      {\n-         KeySequence sequence = new KeySequence();\n-         sequence.add(new KeyCombination(\"Ctrl+Space\", KeyCodes.KEY_SPACE, KeyCodes.KEY_CTRL));\n-         commands.codeCompletion().setShortcut(new KeyboardShortcut(sequence));\n-      }\n-      \n-      events.addHandler(ShowContentEvent.TYPE, this);\n-      events.addHandler(ShowDataEvent.TYPE, this);\n-      events.addHandler(OpenObjectExplorerEvent.TYPE, this);\n-\n-      events.addHandler(CodeBrowserNavigationEvent.TYPE, this);\n       \n-      events.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n+      vimCommands_ = new SourceVimCommands();\n \n-      events.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n+      view_.addTabClosingHandler(this);\n+      view_.addTabCloseHandler(this);\n+      view_.addTabClosedHandler(this);\n+      view_.addTabReorderHandler(this);\n+      view_.addSelectionHandler(this);\n+      view_.addBeforeShowHandler(this);\n \n-      events.addHandler(FileTypeChangedEvent.TYPE, new FileTypeChangedHandler()\n+      events_.addHandler(EditPresentationSourceEvent.TYPE, this);\n+      events_.addHandler(FileEditEvent.TYPE, this);\n+      events_.addHandler(InsertSourceEvent.TYPE, this);\n+      events_.addHandler(ShowContentEvent.TYPE, this);\n+      events_.addHandler(ShowDataEvent.TYPE, this);\n+      events_.addHandler(OpenObjectExplorerEvent.TYPE, this);\n+      events_.addHandler(OpenPresentationSourceFileEvent.TYPE, this);\n+      events_.addHandler(OpenSourceFileEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserNavigationEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n+      events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n+      events_.addHandler(SnippetsChangedEvent.TYPE, this);\n+      events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n+\n+      events_.addHandler(FileTypeChangedEvent.TYPE, new FileTypeChangedHandler()\n       {\n          public void onFileTypeChanged(FileTypeChangedEvent event)\n          {\n             manageCommands();\n          }\n       });\n       \n-      events.addHandler(SourceOnSaveChangedEvent.TYPE, \n+      events_.addHandler(NewDocumentWithCodeEvent.TYPE,\n+                         new NewDocumentWithCodeEvent.Handler() {\n+         @Override\n+         public void onNewDocumentWithCode(NewDocumentWithCodeEvent event)\n+         {\n+            onNewDocumentWithCode(event);", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTI5MQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424739291", "bodyText": "You're right and we've already added the handler on +438 so I've removed this.", "author": "melissa-barca", "createdAt": "2020-05-13T21:23:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NzU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b51a5a1abe6b8eaa54470b881a1cfff19f3ca658", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..08fd2f2084 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -445,15 +444,6 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n       \n-      events_.addHandler(NewDocumentWithCodeEvent.TYPE,\n-                         new NewDocumentWithCodeEvent.Handler() {\n-         @Override\n-         public void onNewDocumentWithCode(NewDocumentWithCodeEvent event)\n-         {\n-            onNewDocumentWithCode(event);\n-         }\n-      });\n-\n       events_.addHandler(SourceOnSaveChangedEvent.TYPE, \n                         new SourceOnSaveChangedHandler() {\n          @Override\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -445,15 +444,6 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n       \n-      events_.addHandler(NewDocumentWithCodeEvent.TYPE,\n-                         new NewDocumentWithCodeEvent.Handler() {\n-         @Override\n-         public void onNewDocumentWithCode(NewDocumentWithCodeEvent event)\n-         {\n-            onNewDocumentWithCode(event);\n-         }\n-      });\n-\n       events_.addHandler(SourceOnSaveChangedEvent.TYPE, \n                         new SourceOnSaveChangedHandler() {\n          @Override\n", "next_change": {"commit": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..dcadfa99c0 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -436,20 +263,13 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n \n-      events_.addHandler(FileTypeChangedEvent.TYPE, new FileTypeChangedHandler()\n+      // !!! move to column manager\n+      events_.addHandler(DocTabActivatedEvent.TYPE, new DocTabActivatedEvent.Handler()\n       {\n-         public void onFileTypeChanged(FileTypeChangedEvent event)\n-         {\n-            manageCommands();\n-         }\n-      });\n-      \n-      events_.addHandler(SourceOnSaveChangedEvent.TYPE, \n-                        new SourceOnSaveChangedHandler() {\n-         @Override\n-         public void onSourceOnSaveChanged(SourceOnSaveChangedEvent event)\n+         public void onDocTabActivated(DocTabActivatedEvent event)\n          {\n-            manageSaveCommands();\n+\n+            columnManager_.setActiveDocId(event.getId());\n          }\n       });\n \n", "next_change": {"commit": "29ab246060f23296d28e8e105be209c40205d867", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex dcadfa99c0..242487f201 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -263,16 +270,6 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n \n-      // !!! move to column manager\n-      events_.addHandler(DocTabActivatedEvent.TYPE, new DocTabActivatedEvent.Handler()\n-      {\n-         public void onDocTabActivated(DocTabActivatedEvent event)\n-         {\n-\n-            columnManager_.setActiveDocId(event.getId());\n-         }\n-      });\n-\n       events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n       {\n          public void onSwitchToDoc(SwitchToDocEvent event)\n", "next_change": {"commit": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 242487f201..82d7283380 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -269,6 +322,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n+      events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n       events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n       {\n", "next_change": {"commit": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 82d7283380..1871fc523e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -322,7 +313,6 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n-      events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n       events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n       {\n", "next_change": {"commit": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 1871fc523e..099b330388 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -313,6 +312,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n+      events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n       events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n       {\n", "next_change": {"commit": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 099b330388..4461869817 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -314,19 +324,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n-      events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n-      {\n-         public void onSwitchToDoc(SwitchToDocEvent event)\n-         {\n-            columnManager_.ensureVisible(false);\n-            \n-            // Fire an activation event just to ensure the activated\n-            // tab gets focus\n-            commands_.activateSource().execute();\n-         }\n-      });\n-\n-      events_.addHandler(SourcePathChangedEvent.TYPE, \n+      events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n          \n", "next_change": {"commit": "532a64030c34005cec5144d5a28eeb8217097d69", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4461869817..d1cf923689 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -324,7 +326,19 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n-      events_.addHandler(SourcePathChangedEvent.TYPE,\n+      events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n+      {\n+         public void onSwitchToDoc(SwitchToDocEvent event)\n+         {\n+            columnManager_.ensureVisible(false);\n+            \n+            // Fire an activation event just to ensure the activated\n+            // tab gets focus\n+            commands_.activateSource().execute();\n+         }\n+      });\n+\n+      events_.addHandler(SourcePathChangedEvent.TYPE, \n             new SourcePathChangedEvent.Handler()\n       {\n          \n", "next_change": {"commit": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex d1cf923689..4f05981cc4 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -326,19 +322,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n \n-      events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n-      {\n-         public void onSwitchToDoc(SwitchToDocEvent event)\n-         {\n-            columnManager_.ensureVisible(false);\n-            \n-            // Fire an activation event just to ensure the activated\n-            // tab gets focus\n-            commands_.activateSource().execute();\n-         }\n-      });\n-\n-      events_.addHandler(SourcePathChangedEvent.TYPE, \n+      events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n          \n", "next_change": {"commit": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4f05981cc4..243525d94a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -321,6 +328,8 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n+      if (Desktop.hasDesktopFrame())\n+         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 243525d94a..792123b36c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -326,6 +328,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n+      events_.addHandler(ScrollToPositionEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n", "next_change": {"commit": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 792123b36c..702c61aabe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -328,7 +326,6 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n-      events_.addHandler(ScrollToPositionEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n", "next_change": {"commit": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -326,6 +328,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n+      events_.addHandler(ScrollToPositionEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n", "next_change": {"commit": "07b5634fb240fdacbf7b17556fc779f323407451", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 521fd0673c..0c07859a1f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -332,7 +336,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 0c07859a1f..8f40b7dd15 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -336,7 +336,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 8f40b7dd15..e576d02828 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -336,7 +338,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex e576d02828..260de94421 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -338,7 +336,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 260de94421..830b920d80 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -336,7 +338,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 830b920d80..f2b053c11f 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -338,7 +336,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex f2b053c11f..a8117eb0ce 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -336,7 +339,7 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n       events_.addHandler(XRefNavigationEvent.TYPE, this);\n       if (Desktop.hasDesktopFrame())\n-         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n+         events_.addHandler(MouseNavigateEvent.TYPE, this);\n \n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n", "next_change": {"commit": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex a8117eb0ce..c142b4f71c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -348,6 +337,9 @@ public class Source implements InsertSourceHandler,\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n+            // Satellites also need to know about this happening, for example if a file\n+            // is renamed via the tab context menu or externally\n+            events_.fireEventToAllSatellites(event);\n \n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -334,18 +337,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": null}]}}, {"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 792123b36c..702c61aabe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -337,18 +334,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-\n+         \n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-\n+            \n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath =\n+                  FileSystemItem toPath = \n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": {"commit": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -334,18 +337,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": null}]}}]}}, {"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 243525d94a..792123b36c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -334,18 +337,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": {"commit": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 792123b36c..702c61aabe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -337,18 +334,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-\n+         \n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-\n+            \n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath =\n+                  FileSystemItem toPath = \n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": {"commit": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -334,18 +337,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMzEzMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424603130", "body": "extra whitespace", "bodyText": "extra whitespace", "bodyHTML": "<p dir=\"auto\">extra whitespace</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:18:22Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -464,15 +476,15 @@ public void onSwitchToDoc(SwitchToDocEvent event)\n          }\n       });\n \n-      events.addHandler(SourceFileSavedEvent.TYPE, new SourceFileSavedHandler()\n+      events_.addHandler(SourceFileSavedEvent.TYPE, new SourceFileSavedHandler()\n       {\n          public void onSourceFileSaved(SourceFileSavedEvent event)\n          {\n             pMruList_.get().add(event.getPath());\n          }\n       });\n-      \n-      events.addHandler(SourcePathChangedEvent.TYPE, \n+         ", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..82c41da0b2 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -483,7 +482,7 @@ public class Source implements InsertSourceHandler,\n             pMruList_.get().add(event.getPath());\n          }\n       });\n-         \n+\n       events_.addHandler(SourcePathChangedEvent.TYPE, \n             new SourcePathChangedEvent.Handler()\n       {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -483,7 +473,7 @@ public class Source implements InsertSourceHandler,\n             pMruList_.get().add(event.getPath());\n          }\n       });\n-         \n+\n       events_.addHandler(SourcePathChangedEvent.TYPE, \n             new SourcePathChangedEvent.Handler()\n       {\n", "next_change": {"commit": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..b6431bf1a6 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -466,14 +454,6 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(SourceFileSavedEvent.TYPE, new SourceFileSavedHandler()\n-      {\n-         public void onSourceFileSaved(SourceFileSavedEvent event)\n-         {\n-            pMruList_.get().add(event.getPath());\n-         }\n-      });\n-\n       events_.addHandler(SourcePathChangedEvent.TYPE, \n             new SourcePathChangedEvent.Handler()\n       {\n", "next_change": {"commit": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex b6431bf1a6..9208ee632e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -462,7 +448,7 @@ public class Source implements InsertSourceHandler,\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n             \n-            inEditorForPath(event.getFrom(), \n+            columnManager_.inEditorForPath(event.getFrom(), \n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 9208ee632e..901d7e14e1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -448,7 +300,7 @@ public class Source implements InsertSourceHandler,\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n             \n-            columnManager_.inEditorForPath(event.getFrom(), \n+            columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n", "next_change": {"commit": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 901d7e14e1..792123b36c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -268,45 +328,27 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(CodeBrowserFinishedEvent.TYPE, this);\n       events_.addHandler(CodeBrowserHighlightEvent.TYPE, this);\n       events_.addHandler(SnippetsChangedEvent.TYPE, this);\n+      events_.addHandler(ScrollToPositionEvent.TYPE, this);\n       events_.addHandler(NewDocumentWithCodeEvent.TYPE, this);\n+      events_.addHandler(XRefNavigationEvent.TYPE, this);\n+      if (Desktop.hasDesktopFrame())\n+         events_.addHandler(MouseNavigateSourceHistoryEvent.TYPE, this);\n \n-      // !!! move to column manager\n-      events_.addHandler(DocTabActivatedEvent.TYPE, new DocTabActivatedEvent.Handler()\n-      {\n-         public void onDocTabActivated(DocTabActivatedEvent event)\n-         {\n-\n-            columnManager_.setActiveDocId(event.getId());\n-         }\n-      });\n-\n-      events_.addHandler(SwitchToDocEvent.TYPE, new SwitchToDocHandler()\n-      {\n-         public void onSwitchToDoc(SwitchToDocEvent event)\n-         {\n-            columnManager_.ensureVisible(false);\n-            \n-            // Fire an activation event just to ensure the activated\n-            // tab gets focus\n-            commands_.activateSource().execute();\n-         }\n-      });\n-\n-      events_.addHandler(SourcePathChangedEvent.TYPE, \n+      events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": {"commit": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 792123b36c..702c61aabe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -337,18 +334,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-\n+         \n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-\n+            \n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath =\n+                  FileSystemItem toPath = \n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": {"commit": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -334,18 +337,18 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(SourcePathChangedEvent.TYPE,\n             new SourcePathChangedEvent.Handler()\n       {\n-         \n+\n          @Override\n          public void onSourcePathChanged(final SourcePathChangedEvent event)\n          {\n-            \n+\n             columnManager_.inEditorForPath(event.getFrom(),\n                             new OperationWithInput<EditingTarget>()\n             {\n                @Override\n                public void execute(EditingTarget input)\n                {\n-                  FileSystemItem toPath = \n+                  FileSystemItem toPath =\n                         FileSystemItem.createFile(event.getTo());\n                   if (input instanceof TextEditingTarget)\n                   {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMzI2NA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424603264", "body": "extra whitespace", "bodyText": "extra whitespace", "bodyHTML": "<p dir=\"auto\">extra whitespace</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:18:32Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -518,8 +530,8 @@ public void onSourceNavigation(SourceNavigationEvent event)\n          }\n       });\n       \n-      events.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n-      \n+      events_.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n+         ", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..82c41da0b2 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -531,7 +530,7 @@ public class Source implements InsertSourceHandler,\n       });\n       \n       events_.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n-         \n+\n       sourceNavigationHistory_.addChangeHandler(new ChangeHandler()\n       {\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -531,7 +521,7 @@ public class Source implements InsertSourceHandler,\n       });\n       \n       events_.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n-         \n+\n       sourceNavigationHistory_.addChangeHandler(new ChangeHandler()\n       {\n \n", "next_change": {"commit": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..9208ee632e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -520,8 +486,6 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n       \n-      events_.addHandler(SourceExtendedTypeDetectedEvent.TYPE, this);\n-\n       sourceNavigationHistory_.addChangeHandler(new ChangeHandler()\n       {\n \n", "next_change": {"commit": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 9208ee632e..dcadfa99c0 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -486,26 +331,6 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n       \n-      sourceNavigationHistory_.addChangeHandler(new ChangeHandler()\n-      {\n-\n-         @Override\n-         public void onChange(ChangeEvent event)\n-         {\n-            manageSourceNavigationCommands();\n-         }\n-      });\n-      \n-      events_.addHandler(SynctexStatusChangedEvent.TYPE, \n-                        new SynctexStatusChangedEvent.Handler()\n-      {\n-         @Override\n-         public void onSynctexStatusChanged(SynctexStatusChangedEvent event)\n-         {\n-            manageSynctexCommands();\n-         }\n-      });\n-      \n       events_.addHandler(CollabEditStartedEvent.TYPE, \n             new CollabEditStartedEvent.Handler() \n       {\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex dcadfa99c0..901d7e14e1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -330,7 +337,7 @@ public class Source implements InsertSourceHandler,\n             }\n          }\n       });\n-      \n+\n       events_.addHandler(CollabEditStartedEvent.TYPE, \n             new CollabEditStartedEvent.Handler() \n       {\n", "next_change": {"commit": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 901d7e14e1..c7e5ea0a19 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -333,7 +315,7 @@ public class Source implements InsertSourceHandler,\n          {\n             if (!suspendSourceNavigationAdding_)\n             {\n-               sourceNavigationHistory_.add(event.getNavigation());\n+               columnManager_.getSourceNavigationHistory().add(event.getNavigation());\n             }\n          }\n       });\n", "next_change": {"commit": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c7e5ea0a19..1871fc523e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -308,19 +360,7 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(SourceNavigationEvent.TYPE, \n-                        new SourceNavigationHandler() {\n-         @Override\n-         public void onSourceNavigation(SourceNavigationEvent event)\n-         {\n-            if (!suspendSourceNavigationAdding_)\n-            {\n-               columnManager_.getSourceNavigationHistory().add(event.getNavigation());\n-            }\n-         }\n-      });\n-\n-      events_.addHandler(CollabEditStartedEvent.TYPE, \n+      events_.addHandler(CollabEditStartedEvent.TYPE,\n             new CollabEditStartedEvent.Handler() \n       {\n          @Override\n", "next_change": {"commit": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 1871fc523e..407fd57a5d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -360,7 +372,19 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(CollabEditStartedEvent.TYPE,\n+      events_.addHandler(SourceNavigationEvent.TYPE, \n+                        new SourceNavigationHandler() {\n+         @Override\n+         public void onSourceNavigation(SourceNavigationEvent event)\n+         {\n+            if (!suspendSourceNavigationAdding_)\n+            {\n+               columnManager_.getSourceNavigationHistory().add(event.getNavigation());\n+            }\n+         }\n+      });\n+\n+      events_.addHandler(CollabEditStartedEvent.TYPE, \n             new CollabEditStartedEvent.Handler() \n       {\n          @Override\n", "next_change": {"commit": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 407fd57a5d..db00d3851b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -384,7 +380,7 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(CollabEditStartedEvent.TYPE, \n+      events_.addHandler(CollabEditStartedEvent.TYPE,\n             new CollabEditStartedEvent.Handler() \n       {\n          @Override\n", "next_change": {"commit": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex db00d3851b..4461869817 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -380,7 +370,7 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(CollabEditStartedEvent.TYPE,\n+      events_.addHandler(CollabEditStartedEvent.TYPE, \n             new CollabEditStartedEvent.Handler() \n       {\n          @Override\n", "next_change": {"commit": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4461869817..4f05981cc4 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -370,7 +368,7 @@ public class Source implements InsertSourceHandler,\n          }\n       });\n \n-      events_.addHandler(CollabEditStartedEvent.TYPE, \n+      events_.addHandler(CollabEditStartedEvent.TYPE,\n             new CollabEditStartedEvent.Handler() \n       {\n          @Override\n", "next_change": {"commit": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4f05981cc4..792123b36c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -369,10 +381,10 @@ public class Source implements InsertSourceHandler,\n       });\n \n       events_.addHandler(CollabEditStartedEvent.TYPE,\n-            new CollabEditStartedEvent.Handler() \n+            new CollabEditStartedEvent.Handler()\n       {\n          @Override\n-         public void onCollabEditStarted(final CollabEditStartedEvent collab) \n+         public void onCollabEditStarted(final CollabEditStartedEvent collab)\n          {\n             columnManager_.inEditorForPath(collab.getStartParams().getPath(),\n                new OperationWithInput<EditingTarget>()\n", "next_change": {"commit": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 792123b36c..702c61aabe 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -381,10 +378,10 @@ public class Source implements InsertSourceHandler,\n       });\n \n       events_.addHandler(CollabEditStartedEvent.TYPE,\n-            new CollabEditStartedEvent.Handler()\n+            new CollabEditStartedEvent.Handler() \n       {\n          @Override\n-         public void onCollabEditStarted(final CollabEditStartedEvent collab)\n+         public void onCollabEditStarted(final CollabEditStartedEvent collab) \n          {\n             columnManager_.inEditorForPath(collab.getStartParams().getPath(),\n                new OperationWithInput<EditingTarget>()\n", "next_change": {"commit": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 702c61aabe..521fd0673c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -378,10 +381,10 @@ public class Source implements InsertSourceHandler,\n       });\n \n       events_.addHandler(CollabEditStartedEvent.TYPE,\n-            new CollabEditStartedEvent.Handler() \n+            new CollabEditStartedEvent.Handler()\n       {\n          @Override\n-         public void onCollabEditStarted(final CollabEditStartedEvent collab) \n+         public void onCollabEditStarted(final CollabEditStartedEvent collab)\n          {\n             columnManager_.inEditorForPath(collab.getStartParams().getPath(),\n                new OperationWithInput<EditingTarget>()\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNDQzMg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424604432", "body": "Why is this added here?", "bodyText": "Why is this added here?", "bodyHTML": "<p dir=\"auto\">Why is this added here?</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:20:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NDg1Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424684856", "bodyText": "Original thought process was that at this point we don't need to be visible but there's no need to ensure it so I've removed.", "author": "melissa-barca", "createdAt": "2020-05-13T19:38:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNDQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "2050408f950459d3e5c3f72ed9385da57a0e8b79", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..5ec2845fa5 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -733,9 +732,15 @@ public class Source implements InsertSourceHandler,\n       \n       // add vim commands\n       initVimCommands();\n-      ensureVisible(false);\n    }\n    \n+   /**\n+    * Process the save_files_before_build user preference.\n+    * If false, ask the user how to handle unsaved changes and act accordingly.\n+    * @param command The command to run after the files are handled.\n+    * @param cancelCommand The command to run if the user cancels the request.\n+    * @param commandSource The title to be used by the dialog asking how to handle files.\n+    */\n    public void withSaveFilesBeforeCommand(final Command command,\n                                           final Command cancelCommand,\n                                           String commandSource)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -733,9 +722,15 @@ public class Source implements InsertSourceHandler,\n       \n       // add vim commands\n       initVimCommands();\n-      ensureVisible(false);\n    }\n    \n+   /**\n+    * Process the save_files_before_build user preference.\n+    * If false, ask the user how to handle unsaved changes and act accordingly.\n+    * @param command The command to run after the files are handled.\n+    * @param cancelCommand The command to run if the user cancels the request.\n+    * @param commandSource The title to be used by the dialog asking how to handle files.\n+    */\n    public void withSaveFilesBeforeCommand(final Command command,\n                                           final Command cancelCommand,\n                                           String commandSource)\n", "next_change": null}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNTA3MA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424605070", "body": "Brief JavaDoc comment about method's purpose would be good.", "bodyText": "Brief JavaDoc comment about method's purpose would be good.", "bodyHTML": "<p dir=\"auto\">Brief JavaDoc comment about method's purpose would be good.</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:21:25Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);\n    }\n    \n+   public void withSaveFilesBeforeCommand(final Command command,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NDE4OQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424684189", "bodyText": "Added.", "author": "melissa-barca", "createdAt": "2020-05-13T19:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNTA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "2050408f950459d3e5c3f72ed9385da57a0e8b79", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..5ec2845fa5 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -733,9 +732,15 @@ public class Source implements InsertSourceHandler,\n       \n       // add vim commands\n       initVimCommands();\n-      ensureVisible(false);\n    }\n    \n+   /**\n+    * Process the save_files_before_build user preference.\n+    * If false, ask the user how to handle unsaved changes and act accordingly.\n+    * @param command The command to run after the files are handled.\n+    * @param cancelCommand The command to run if the user cancels the request.\n+    * @param commandSource The title to be used by the dialog asking how to handle files.\n+    */\n    public void withSaveFilesBeforeCommand(final Command command,\n                                           final Command cancelCommand,\n                                           String commandSource)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -733,9 +722,15 @@ public class Source implements InsertSourceHandler,\n       \n       // add vim commands\n       initVimCommands();\n-      ensureVisible(false);\n    }\n    \n+   /**\n+    * Process the save_files_before_build user preference.\n+    * If false, ask the user how to handle unsaved changes and act accordingly.\n+    * @param command The command to run after the files are handled.\n+    * @param cancelCommand The command to run if the user cancels the request.\n+    * @param commandSource The title to be used by the dialog asking how to handle files.\n+    */\n    public void withSaveFilesBeforeCommand(final Command command,\n                                           final Command cancelCommand,\n                                           String commandSource)\n", "next_change": null}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwNzAwNA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424607004", "body": "lambda:\r\n\r\n```\r\n            new UnsavedChangesDialog(\r\n                  commandSource,\r\n                  alwaysSaveOption,\r\n                  unsavedSourceDocs,\r\n                  dialogResult ->\r\n                  {\r\n                     if (dialogResult.getAlwaysSave())\r\n                     {\r\n                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\r\n                        userPrefs_.writeUserPrefs();\r\n                     }\r\n   \r\n                     handleUnsavedChangesBeforeExit(\r\n                                           dialogResult.getSaveTargets(),\r\n                                           command);\r\n   \r\n                  },\r\n                  cancelCommand\r\n            ).showModal();\r\n```", "bodyText": "lambda:\n            new UnsavedChangesDialog(\n                  commandSource,\n                  alwaysSaveOption,\n                  unsavedSourceDocs,\n                  dialogResult ->\n                  {\n                     if (dialogResult.getAlwaysSave())\n                     {\n                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n                        userPrefs_.writeUserPrefs();\n                     }\n   \n                     handleUnsavedChangesBeforeExit(\n                                           dialogResult.getSaveTargets(),\n                                           command);\n   \n                  },\n                  cancelCommand\n            ).showModal();", "bodyHTML": "<p dir=\"auto\">lambda:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            new UnsavedChangesDialog(\n                  commandSource,\n                  alwaysSaveOption,\n                  unsavedSourceDocs,\n                  dialogResult -&gt;\n                  {\n                     if (dialogResult.getAlwaysSave())\n                     {\n                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n                        userPrefs_.writeUserPrefs();\n                     }\n   \n                     handleUnsavedChangesBeforeExit(\n                                           dialogResult.getSaveTargets(),\n                                           command);\n   \n                  },\n                  cancelCommand\n            ).showModal();\"><pre><code>            new UnsavedChangesDialog(\n                  commandSource,\n                  alwaysSaveOption,\n                  unsavedSourceDocs,\n                  dialogResult -&gt;\n                  {\n                     if (dialogResult.getAlwaysSave())\n                     {\n                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n                        userPrefs_.writeUserPrefs();\n                     }\n   \n                     handleUnsavedChangesBeforeExit(\n                                           dialogResult.getSaveTargets(),\n                                           command);\n   \n                  },\n                  cancelCommand\n            ).showModal();\n</code></pre></div>", "author": "gtritchie", "createdAt": "2020-05-13T17:24:36Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -688,14 +727,61 @@ else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDIN\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session);\n+         openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n       \n       // add vim commands\n       initVimCommands();\n+      ensureVisible(false);\n    }\n    \n+   public void withSaveFilesBeforeCommand(final Command command,\n+                                          final Command cancelCommand,\n+                                          String commandSource)\n+   {\n+      if (userPrefs_.saveFilesBeforeBuild().getValue())\n+      {\n+         saveUnsavedDocuments(command);\n+      }\n+      else\n+      {\n+         String alwaysSaveOption = !userPrefs_.saveFilesBeforeBuild().getValue() ?\n+                                    \"Always save files before build\" : null;\n+\n+         ArrayList<UnsavedChangesTarget> unsavedSourceDocs = getUnsavedChanges(TYPE_FILE_BACKED);\n+\n+         if (unsavedSourceDocs.size() > 0)\n+         {\n+            new UnsavedChangesDialog(\n+                  commandSource,\n+                  alwaysSaveOption,\n+                  unsavedSourceDocs,\n+                  new OperationWithInput<UnsavedChangesDialog.Result>() {\n+                     public void execute(UnsavedChangesDialog.Result result)\n+                     {\n+                        if (result.getAlwaysSave())\n+                        {\n+                           userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n+                           userPrefs_.writeUserPrefs();\n+                        }\n+\n+                        handleUnsavedChangesBeforeExit(\n+                                              result.getSaveTargets(),\n+                                              command);\n+\n+                     }\n+                   },\n+                   cancelCommand\n+            ).showModal();", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..82c41da0b2 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -757,22 +756,19 @@ public class Source implements InsertSourceHandler,\n                   commandSource,\n                   alwaysSaveOption,\n                   unsavedSourceDocs,\n-                  new OperationWithInput<UnsavedChangesDialog.Result>() {\n-                     public void execute(UnsavedChangesDialog.Result result)\n+                  dialogResult ->\n+                  {\n+                     if (dialogResult.getAlwaysSave())\n                      {\n-                        if (result.getAlwaysSave())\n-                        {\n-                           userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n-                           userPrefs_.writeUserPrefs();\n-                        }\n-\n-                        handleUnsavedChangesBeforeExit(\n-                                              result.getSaveTargets(),\n-                                              command);\n-\n+                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n+                        userPrefs_.writeUserPrefs();\n                      }\n-                   },\n-                   cancelCommand\n+                     handleUnsavedChangesBeforeExit(\n+                                           dialogResult.getSaveTargets(),\n+                                           command);\n+\n+                  },\n+                  cancelCommand\n             ).showModal();\n          }\n          else\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -757,22 +752,19 @@ public class Source implements InsertSourceHandler,\n                   commandSource,\n                   alwaysSaveOption,\n                   unsavedSourceDocs,\n-                  new OperationWithInput<UnsavedChangesDialog.Result>() {\n-                     public void execute(UnsavedChangesDialog.Result result)\n+                  dialogResult ->\n+                  {\n+                     if (dialogResult.getAlwaysSave())\n                      {\n-                        if (result.getAlwaysSave())\n-                        {\n-                           userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n-                           userPrefs_.writeUserPrefs();\n-                        }\n-\n-                        handleUnsavedChangesBeforeExit(\n-                                              result.getSaveTargets(),\n-                                              command);\n-\n+                        userPrefs_.saveFilesBeforeBuild().setGlobalValue(true);\n+                        userPrefs_.writeUserPrefs();\n                      }\n-                   },\n-                   cancelCommand\n+                     handleUnsavedChangesBeforeExit(\n+                                           dialogResult.getSaveTargets(),\n+                                           command);\n+\n+                  },\n+                  cancelCommand\n             ).showModal();\n          }\n          else\n", "next_change": {"commit": "f80341e1290ec0ed7126347d255c59d685a460ab", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..c2171003a1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -773,6 +777,16 @@ public class Source implements InsertSourceHandler,\n          }\n       }\n    }\n+   \n+   // see if there are additional command pallette entries made available\n+   // the by the active editor\n+   public List<CommandPaletteEntry> getCommandPaletteEntries()\n+   {\n+      if (activeEditor_ != null) \n+         return activeEditor_.getCommandPaletteEntries();\n+      else\n+         return null;\n+   }\n \n    private boolean consoleEditorHadFocusLast()\n    {\n", "next_change": {"commit": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c2171003a1..4719ec35fc 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -777,16 +903,6 @@ public class Source implements InsertSourceHandler,\n          }\n       }\n    }\n-   \n-   // see if there are additional command pallette entries made available\n-   // the by the active editor\n-   public List<CommandPaletteEntry> getCommandPaletteEntries()\n-   {\n-      if (activeEditor_ != null) \n-         return activeEditor_.getCommandPaletteEntries();\n-      else\n-         return null;\n-   }\n \n    private boolean consoleEditorHadFocusLast()\n    {\n", "next_change": {"commit": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4719ec35fc..3daad397d3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -903,6 +777,16 @@ public class Source implements InsertSourceHandler,\n          }\n       }\n    }\n+   \n+   // see if there are additional command pallette entries made available\n+   // the by the active editor\n+   public List<CommandPaletteEntry> getCommandPaletteEntries()\n+   {\n+      if (activeEditor_ != null) \n+         return activeEditor_.getCommandPaletteEntries();\n+      else\n+         return null;\n+   }\n \n    private boolean consoleEditorHadFocusLast()\n    {\n", "next_change": {"commit": "fcc85338d4567365a7461736d7350b9639fc8e00", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 3daad397d3..0141ba6497 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -777,16 +928,6 @@ public class Source implements InsertSourceHandler,\n          }\n       }\n    }\n-   \n-   // see if there are additional command pallette entries made available\n-   // the by the active editor\n-   public List<CommandPaletteEntry> getCommandPaletteEntries()\n-   {\n-      if (activeEditor_ != null) \n-         return activeEditor_.getCommandPaletteEntries();\n-      else\n-         return null;\n-   }\n \n    private boolean consoleEditorHadFocusLast()\n    {\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 0141ba6497..901d7e14e1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -929,6 +599,16 @@ public class Source implements InsertSourceHandler,\n       }\n    }\n \n+   // see if there are additional command pallette entries made available\n+   // the by the active editor\n+   public List<CommandPaletteEntry> getCommandPaletteEntries()\n+   {\n+      if (activeEditor_ != null)\n+         return activeEditor_.getCommandPaletteEntries();\n+      else\n+         return null;\n+   }\n+\n    private boolean consoleEditorHadFocusLast()\n    {\n       String id = MainWindowObject.lastFocusedEditorId().get();\n", "next_change": {"commit": "29ab246060f23296d28e8e105be209c40205d867", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 901d7e14e1..242487f201 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -609,6 +599,11 @@ public class Source implements InsertSourceHandler,\n          return null;\n    }\n \n+   public SourceColumnManager getColumnManager()\n+   {\n+      return columnManager_;\n+   }\n+\n    private boolean consoleEditorHadFocusLast()\n    {\n       String id = MainWindowObject.lastFocusedEditorId().get();\n", "next_change": {"commit": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 242487f201..c7e5ea0a19 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -609,94 +595,6 @@ public class Source implements InsertSourceHandler,\n       String id = MainWindowObject.lastFocusedEditorId().get();\n       return \"rstudio_console_input\".equals(id);\n    }\n-   \n-   private void withTarget(String id,\n-                           CommandWithArg<TextEditingTarget> command,\n-                           Command onFailure)\n-   {\n-      EditingTarget target = StringUtil.isNullOrEmpty(id)\n-            ? activeEditor_\n-            : columnManager_.findEditor(id);\n-      \n-      if (target == null)\n-      {\n-         if (onFailure != null)\n-            onFailure.execute();\n-         return;\n-      }\n-      \n-      if (!(target instanceof TextEditingTarget))\n-      {\n-         if (onFailure != null)\n-            onFailure.execute();\n-         return;\n-      }\n-      \n-      command.execute((TextEditingTarget) target);\n-   }\n-   \n-   private void getEditorContext(String id, String path, DocDisplay docDisplay)\n-   {\n-      AceEditor editor = (AceEditor) docDisplay;\n-      Selection selection = editor.getNativeSelection();\n-      Range[] ranges = selection.getAllRanges();\n-      \n-      // clamp ranges to document boundaries\n-      for (Range range : ranges)\n-      {\n-         Position start = range.getStart();\n-         start.setRow(MathUtil.clamp(start.getRow(), 0, editor.getRowCount()));\n-         start.setColumn(MathUtil.clamp(start.getColumn(), 0, editor.getLine(start.getRow()).length()));\n-         \n-         Position end = range.getEnd();\n-         end.setRow(MathUtil.clamp(end.getRow(), 0, editor.getRowCount()));\n-         end.setColumn(MathUtil.clamp(end.getColumn(), 0, editor.getLine(end.getRow()).length()));\n-      }\n-\n-      JsArray<DocumentSelection> docSelections = JavaScriptObject.createArray().cast();\n-      for (int i = 0; i < ranges.length; i++)\n-      {\n-         docSelections.push(DocumentSelection.create(\n-               ranges[i],\n-               editor.getTextForRange(ranges[i])));\n-      }\n-\n-      id = StringUtil.notNull(id);\n-      path = StringUtil.notNull(path);\n-      \n-      GetEditorContextEvent.SelectionData data =\n-            GetEditorContextEvent.SelectionData.create(id, path, editor.getCode(), docSelections);\n-      \n-      server_.getEditorContextCompleted(data, new VoidServerRequestCallback());\n-   }\n-   \n-   private void withTarget(String id, CommandWithArg<TextEditingTarget> command)\n-   {\n-      withTarget(id, command, null);\n-   }\n-   \n-   private void initVimCommands()\n-   {\n-      vimCommands_.save(this);\n-      vimCommands_.selectTabIndex(this);\n-      vimCommands_.selectNextTab(this);\n-      vimCommands_.selectPreviousTab(this);\n-      vimCommands_.closeActiveTab(this);\n-      vimCommands_.closeAllTabs(this);\n-      vimCommands_.createNewDocument(this);\n-      vimCommands_.saveAndCloseActiveTab(this);\n-      vimCommands_.readFile(this, userPrefs_.defaultEncoding().getValue());\n-      vimCommands_.runRScript(this);\n-      vimCommands_.reflowText(this);\n-      vimCommands_.showVimHelp(\n-            RStudioGinjector.INSTANCE.getShortcutViewer());\n-      vimCommands_.showHelpAtCursor(this);\n-      vimCommands_.reindent(this);\n-      vimCommands_.expandShrinkSelection(this);\n-      vimCommands_.openNextFile(this);\n-      vimCommands_.openPreviousFile(this);\n-      vimCommands_.addStarRegister();\n-   }\n \n    public Widget asWidget()\n    {\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwODY0Nw==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424608647", "body": "Reduce this whole method to:\r\n\r\n```\r\n public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)\r\n   {\r\n      return () -> handleUnsavedChangesBeforeExit(new ArrayList<>(), onCompleted);\r\n   }\r\n```", "bodyText": "Reduce this whole method to:\n public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)\n   {\n      return () -> handleUnsavedChangesBeforeExit(new ArrayList<>(), onCompleted);\n   }", "bodyHTML": "<p dir=\"auto\">Reduce this whole method to:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)\n   {\n      return () -&gt; handleUnsavedChangesBeforeExit(new ArrayList&lt;&gt;(), onCompleted);\n   }\"><pre><code> public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)\n   {\n      return () -&gt; handleUnsavedChangesBeforeExit(new ArrayList&lt;&gt;(), onCompleted);\n   }\n</code></pre></div>", "author": "gtritchie", "createdAt": "2020-05-13T17:27:16Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -2577,6 +2662,21 @@ public void saveWithPrompt(UnsavedChangesTarget target,\n          editingTarget.saveWithPrompt(onCompleted, onCancelled);\n    }\n    \n+   public Command revertUnsavedChangesBeforeExitCommand(\n+                                               final Command onCompleted)\n+   {\n+      return new Command()\n+      {\n+         @Override\n+         public void execute()\n+         {\n+            handleUnsavedChangesBeforeExit(\n+                                 new ArrayList<UnsavedChangesTarget>(),\n+                                 onCompleted);\n+         }\n+\n+      };\n+   }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..82c41da0b2 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2665,17 +2661,8 @@ public class Source implements InsertSourceHandler,\n    public Command revertUnsavedChangesBeforeExitCommand(\n                                                final Command onCompleted)\n    {\n-      return new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            handleUnsavedChangesBeforeExit(\n-                                 new ArrayList<UnsavedChangesTarget>(),\n-                                 onCompleted);\n-         }\n-\n-      };\n+      return () -> handleUnsavedChangesBeforeExit(new ArrayList<UnsavedChangesTarget>(),\n+                                                  onCompleted);\n    }\n    public void handleUnsavedChangesBeforeExit(\n                         final ArrayList<UnsavedChangesTarget> saveTargets,\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2665,17 +2657,8 @@ public class Source implements InsertSourceHandler,\n    public Command revertUnsavedChangesBeforeExitCommand(\n                                                final Command onCompleted)\n    {\n-      return new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            handleUnsavedChangesBeforeExit(\n-                                 new ArrayList<UnsavedChangesTarget>(),\n-                                 onCompleted);\n-         }\n-\n-      };\n+      return () -> handleUnsavedChangesBeforeExit(new ArrayList<UnsavedChangesTarget>(),\n+                                                  onCompleted);\n    }\n    public void handleUnsavedChangesBeforeExit(\n                         final ArrayList<UnsavedChangesTarget> saveTargets,\n", "next_change": {"commit": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..c7e5ea0a19 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -1740,2534 +1288,742 @@ public class Source implements InsertSourceHandler,\n             }\n       });\n    }\n-   \n-   private void newRMarkdownV1Doc()\n-   {\n-      newSourceDocWithTemplate(FileTypeRegistry.RMARKDOWN, \n-            \"\", \n-            \"v1.Rmd\",\n-            Position.create(3, 0));\n-   }\n-   \n-   private void newRMarkdownV2Doc()\n+\n+   @Handler\n+   public void onActivateSource()\n    {\n-      rmarkdown_.showNewRMarkdownDialog(\n-         new OperationWithInput<NewRMarkdownDialog.Result>()\n-         {\n-            @Override\n-            public void execute(final NewRMarkdownDialog.Result result)\n-            {\n-               if (result == null)\n-               {\n-                  // No document chosen, just create an empty one\n-                  newSourceDocWithTemplate(FileTypeRegistry.RMARKDOWN, \"\", \"default.Rmd\");\n-               }\n-               else if (result.isNewDocument())\n-               {\n-                  NewRMarkdownDialog.RmdNewDocument doc = \n-                        result.getNewDocument();\n-                  String author = doc.getAuthor();\n-                  if (author.length() > 0)\n-                  {\n-                     userPrefs_.documentAuthor().setGlobalValue(author);\n-                     userPrefs_.writeUserPrefs();\n-                  }\n-                  newRMarkdownV2Doc(doc);\n-               }\n-               else\n-               {\n-                  newDocFromRmdTemplate(result);\n-               }\n-            }\n-         });\n+      onActivateSource(null);\n    }\n    \n-   private void newDocFromRmdTemplate(final NewRMarkdownDialog.Result result)\n+   public void onActivateSource(final Command afterActivation)\n    {\n-      final RmdChosenTemplate template = result.getFromTemplate();\n-      if (template.createDir())\n-      {\n-         rmarkdown_.createDraftFromTemplate(template);\n+      // give the window manager a chance to activate the last source pane\n+      if (pWindowManager_.get().activateLastFocusedSource())\n          return;\n-      }\n-\n-      rmarkdown_.getTemplateContent(template, \n-         new OperationWithInput<String>() {\n-            @Override\n-            public void execute(final String content)\n-            {\n-               if (content.length() == 0)\n-                  globalDisplay_.showErrorMessage(\"Template Content Missing\", \n-                        \"The template at \" + template.getTemplatePath() + \n-                        \" is missing.\");\n-               newDoc(FileTypeRegistry.RMARKDOWN, content, null);\n-            }\n-      });\n+      columnManager_.activateColumns(afterActivation);\n    }\n    \n-   private void newRMarkdownV2Doc(\n-         final NewRMarkdownDialog.RmdNewDocument doc)\n+   @Handler\n+   public void onLayoutZoomSource()\n    {\n-      rmarkdown_.frontMatterToYAML((RmdFrontMatter)doc.getJSOResult().cast(), \n-            null,\n-            new CommandWithArg<String>()\n+      onActivateSource(new Command()\n       {\n          @Override\n-         public void execute(final String yaml)\n+         public void execute()\n          {\n-            String template = \"\";\n-            // select a template appropriate to the document type we're creating\n-            if (doc.getTemplate().equals(RmdTemplateData.PRESENTATION_TEMPLATE))\n-               template = \"presentation.Rmd\";\n-            else if (doc.isShiny())\n-            {\n-               if (doc.getFormat().endsWith(\n-                     RmdOutputFormat.OUTPUT_PRESENTATION_SUFFIX))\n-                  template = \"shiny_presentation.Rmd\";\n-               else\n-                  template = \"shiny.Rmd\";\n-            }\n-            else\n-               template = \"document.Rmd\";\n-            newSourceDocWithTemplate(FileTypeRegistry.RMARKDOWN, \n-                  \"\", \n-                  template,\n-                  Position.create(1, 0),\n-                  null,\n-                  new TransformerCommand<String>()\n-                  {\n-                     @Override\n-                     public String transform(String input)\n-                     {\n-                        return RmdFrontMatter.FRONTMATTER_SEPARATOR + \n-                               yaml + \n-                               RmdFrontMatter.FRONTMATTER_SEPARATOR + \"\\n\" + \n-                               input;\n-                     }\n-                  });\n+            events_.fireEvent(new ZoomPaneEvent(\"Source\"));\n          }\n       });\n    }\n-   \n-   private void newSourceDocWithTemplate(final TextFileType fileType, \n-                                         String name,\n-                                         String template)\n-   {\n-      newSourceDocWithTemplate(fileType, name, template, null);\n-   }\n \n-   private void newSourceDocWithTemplate(final TextFileType fileType, \n-                                         String name,\n-                                         String template,\n-                                         final Position cursorPosition)\n+   @Override\n+   public void onPopoutDoc(final PopoutDocEvent e)\n    {\n-      newSourceDocWithTemplate(fileType, name, template, cursorPosition, null);\n+      // disowning the doc may cause the entire window to close, so defer it\n+      // to allow any other popout processing to occur\n+      Scheduler.get().scheduleDeferred(new ScheduledCommand()\n+      {\n+         @Override\n+         public void execute()\n+         {\n+            columnManager_.disownDoc(e.getDocId());\n+         }\n+      });\n    }\n    \n-   private void newSourceDocWithTemplate(\n-                       final TextFileType fileType, \n-                       String name,\n-                       String template,\n-                       final Position cursorPosition,\n-                       final CommandWithArg<EditingTarget> onSuccess)\n+   @Override\n+   public void onDocWindowChanged(final DocWindowChangedEvent e)\n    {\n-      newSourceDocWithTemplate(fileType, name, template, cursorPosition, onSuccess, null);\n-   }\n+      // Determine the old column before making any changes\n+      final SourceColumn oldDisplay = columnManager_.findByDocument(e.getDocId());\n \n-   private void newSourceDocWithTemplate(\n-                       final TextFileType fileType, \n-                       String name,\n-                       String template,\n-                       final Position cursorPosition,\n-                       final CommandWithArg<EditingTarget> onSuccess,\n-                       final TransformerCommand<String> contentTransformer)\n-   {\n-      final ProgressIndicator indicator = new GlobalProgressDelayer(\n-            globalDisplay_, 500, \"Creating new document...\").getIndicator();\n+      if (e.getNewWindowId().equals(SourceWindowManager.getSourceWindowId()))\n+      {\n+         columnManager_.ensureVisible(true);\n \n-      server_.getSourceTemplate(name, \n-                                template, \n-                                new ServerRequestCallback<String>() {\n-         @Override\n-         public void onResponseReceived(String templateContents)\n-         {\n-            indicator.onCompleted();\n+         // look for a collaborative editing session currently running inside\n+         // the document being transferred between windows--if we didn't know\n+         // about one with the event, try to look it up in the local cache of\n+         // source documents\n+         final CollabEditStartParams collabParams =\n+             e.getCollabParams() == null ?\n+                 pWindowManager_.get().getDocCollabParams(e.getDocId()) :\n+                 e.getCollabParams();\n+\n+         // If we can not determine the new column and the window has more than one column,\n+         // log a warning but continue to prevent the tab from being lost.\n+         final SourceColumn newDisplay = columnManager_.findByPosition(e.getXPos());\n+         if (newDisplay == null && columnManager_.getSize() > 1)\n+            Debug.logWarning(\"Couldn't determine new window column for dragged document.\");\n+\n+         // the event doesn't contain the display info, so we add it now\n+         pWindowManager_.get().assignSourceDocDisplay(\n+             e.getDocId(),\n+             (newDisplay == null) ?\n+                 columnManager_.getActive().getName() :\n+                 (newDisplay).getName(),\n+             true);\n \n-            if (contentTransformer != null)\n-               templateContents = contentTransformer.transform(templateContents);\n+         // if we're the adopting window, add the doc\n+         server_.getSourceDocument(e.getDocId(),\n+             new ServerRequestCallback<SourceDocument>()\n+             {\n+                @Override\n+                public void onResponseReceived(final SourceDocument doc)\n+                {\n+                   final EditingTarget target = columnManager_.addTab(doc, e.getPos(),\n+                       newDisplay);\n+\n+                   Scheduler.get().scheduleDeferred(new Scheduler.ScheduledCommand()\n+                   {\n+                      @Override\n+                      public void execute()\n+                      {\n+                         // if there was a collab session, resume it\n+                         if (collabParams != null)\n+                            target.beginCollabSession(e.getCollabParams());\n+                      }\n+                   });\n+                }\n \n-            newDoc(fileType, \n-                  templateContents, \n-                  new ResultCallback<EditingTarget, ServerError> () {\n-               @Override\n-               public void onSuccess(EditingTarget target)\n-               {\n-                  if (cursorPosition != null)\n-                     target.setCursorPosition(cursorPosition);\n-                  \n-                  if (onSuccess != null)\n-                     onSuccess.execute(target);\n-               }\n-            });\n-         }\n+                @Override\n+                public void onError(ServerError error)\n+                {\n+                   globalDisplay_.showErrorMessage(\"Document Tab Move Failed\",\n+                       \"Couldn't move the tab to this window: \\n\" +\n+                           error.getMessage());\n+                }\n+             });\n+      }\n+      if (e.getOldWindowId().equals(SourceWindowManager.getSourceWindowId()))\n+      {\n+         columnManager_.disownDocOnDrag(e.getDocId(), oldDisplay);\n+      }\n+   }\n \n+   @Override\n+   public void onDocTabDragInitiated(final DocTabDragInitiatedEvent event)\n+   {\n+      columnManager_.inEditorForId(event.getDragParams().getDocId(),\n+            new OperationWithInput<EditingTarget>()\n+      {\n          @Override\n-         public void onError(ServerError error)\n+         public void execute(EditingTarget editor)\n          {\n-            indicator.onError(error.getUserMessage());\n-         }\n-      });\n+            DocTabDragParams params = event.getDragParams();\n+            params.setSourcePosition(editor.currentPosition());\n+            params.setDisplayName(columnManager_.findByDocument(editor.getId()).getName());\n+            events_.fireEvent(new DocTabDragStartedEvent(params));\n+          }\n+       });\n    }\n \n-   \n-   private void newDoc(EditableFileType fileType,\n-                       ResultCallback<EditingTarget, ServerError> callback)\n+   @Override\n+   public void onPopoutDocInitiated(final PopoutDocInitiatedEvent event)\n    {\n-      if (fileType instanceof TextFileType)\n+      columnManager_.inEditorForId(event.getDocId(), new OperationWithInput<EditingTarget>()\n       {\n-         // This is a text file, so see if the user has defined a template for it.\n-         TextFileType textType = (TextFileType)fileType;\n-         server_.getSourceTemplate(\"\", \n-               \"default\" + textType.getDefaultExtension(),\n-               new ServerRequestCallback<String>()\n+         @Override\n+         public void execute(EditingTarget editor)\n+         {\n+            // if this is a text editor, ensure that its content is \n+            // synchronized with the server before we pop it out\n+            if (editor instanceof TextEditingTarget)\n+            {\n+               final TextEditingTarget textEditor = (TextEditingTarget)editor;\n+               textEditor.withSavedDoc(new Command()\n                {\n                   @Override\n-                  public void onResponseReceived(String template)\n-                  {\n-                     // Create a new document with the supplied template.\n-                     newDoc(fileType, template, callback);\n-                  }\n-\n-                  @Override\n-                  public void onError(ServerError error)\n+                  public void execute()\n                   {\n-                     // Ignore errors; there's just not a template for this type.\n-                     newDoc(fileType, null, callback);\n+                     textEditor.syncLocalSourceDb();\n+                     events_.fireEvent(new PopoutDocEvent(event, \n+                        textEditor.currentPosition(),\n+                        columnManager_.findByDocument(textEditor.getId())));\n                   }\n                });\n-      }\n-      else\n-      {\n-         newDoc(fileType, null, callback);\n-      }\n-   }\n-   \n-   private void newDoc(EditableFileType fileType,\n-                       final String contents,\n-                       final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      ensureVisible(true);\n-      server_.newDocument(\n-            fileType.getTypeId(),\n-            contents,\n-            JsObject.createJsObject(),\n-            new SimpleRequestCallback<SourceDocument>(\n-                  \"Error Creating New Document\")\n+            }\n+            else\n             {\n-               @Override\n-               public void onResponseReceived(SourceDocument newDoc)\n-               {\n-                  EditingTarget target = addTab(newDoc, OPEN_INTERACTIVE);\n-                  \n-                  if (contents != null)\n-                  {\n-                     target.forceSaveCommandActive();\n-                     manageSaveCommands();\n-                  }\n-                  \n-                  if (resultCallback != null)\n-                     resultCallback.onSuccess(target);\n-               }\n-\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  if (resultCallback != null)\n-                     resultCallback.onFailure(error);\n-               }\n-            });\n+               events_.fireEvent(new PopoutDocEvent(event, \n+                     editor.currentPosition(),\n+                     columnManager_.findByDocument(editor.getId())));\n+            }\n+         }\n+      });\n    }\n-   \n+\n    @Handler\n-   public void onFindInFiles()\n+   public void onSaveAllSourceDocs()\n    {\n-      String searchPattern = \"\";\n-      if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n-      {  \n-         TextEditingTarget textEditor = (TextEditingTarget) activeEditor_;\n-         String selection = textEditor.getSelectedText();\n-         boolean multiLineSelection = selection.indexOf('\\n') != -1;\n-         \n-         if ((selection.length() != 0) && !multiLineSelection)\n-            searchPattern = selection; \n-      }\n-      \n-      events_.fireEvent(new FindInFilesEvent(searchPattern));\n+      // Save all documents in the main window\n+       columnManager_.saveAllSourceDocs();\n+\n+      // Save all documents in satellite windows\n+      pWindowManager_.get().saveUnsavedDocuments(null, null);\n    }\n \n    @Handler\n-   public void onActivateSource()\n+   public void onCloseAllSourceDocs()\n    {\n-      onActivateSource(null);\n+      closeAllSourceDocs(\"Close All\",  null, false);\n    }\n    \n-   public void onActivateSource(final Command afterActivation)\n+   @Handler\n+   public void onCloseOtherSourceDocs()\n    {\n-      // give the window manager a chance to activate the last source pane\n-      if (pWindowManager_.get().activateLastFocusedSource())\n-         return;\n-      \n-      if (activeEditor_ == null)\n+      closeAllSourceDocs(\"Close Other\",  null, true);\n+   }\n+   \n+   public void closeAllSourceDocs(final String caption, \n+         final Command onCompleted, final boolean excludeActive)\n+   { \n+      if (SourceWindowManager.isMainSourceWindow() && !excludeActive)\n       {\n-         newDoc(FileTypeRegistry.R, new ResultCallback<EditingTarget, ServerError>()\n+         // if this is the main window, close docs in the satellites first \n+         pWindowManager_.get().closeAllSatelliteDocs(caption, new Command()\n          {\n             @Override\n-            public void onSuccess(EditingTarget target)\n+            public void execute()\n             {\n-               activeEditor_ = target;\n-               doActivateSource(afterActivation);\n+               columnManager_.closeAllLocalSourceDocs(caption, onCompleted, excludeActive);\n             }\n-            \n          });\n       }\n       else\n       {\n-         doActivateSource(afterActivation);\n-      }\n-   }\n-   \n-   @Handler\n-   public void onLayoutZoomSource()\n-   {\n-      onActivateSource(new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            events_.fireEvent(new ZoomPaneEvent(\"Source\"));\n-         }\n-      });\n-   }\n-   \n-   private void doActivateSource(final Command afterActivation)\n-   {\n-      ensureVisible(false);\n-      if (activeEditor_ != null)\n-      {\n-         activeEditor_.focus();\n-         activeEditor_.ensureCursorVisible();\n+         // this is a satellite (or we don't need to query satellites)--just\n+         // close our own tabs\n+         columnManager_.closeAllLocalSourceDocs(caption, onCompleted, excludeActive);\n       }\n-      \n-      if (afterActivation != null)\n-         afterActivation.execute();\n    }\n \n-   @Handler\n-   public void onSwitchToTab()\n+   public ArrayList<UnsavedChangesTarget> getUnsavedChanges(int type)\n    {\n-      if (view_.getTabCount() == 0)\n-         return;\n-\n-      ensureVisible(false);\n-\n-      view_.showOverflowPopup();\n+      return getUnsavedChanges(type,  null);\n    }\n \n-   @Handler\n-   public void onFirstTab()\n+   public ArrayList<UnsavedChangesTarget> getUnsavedChanges(int type, Set<String> ids)\n    {\n-      if (view_.getTabCount() == 0)\n-         return;\n-\n-      ensureVisible(false);\n-      if (view_.getTabCount() > 0)\n-         setPhysicalTabIndex(0);\n-   }\n+      ArrayList<UnsavedChangesTarget> targets =\n+          new ArrayList<UnsavedChangesTarget>();\n \n-   @Handler\n-   public void onPreviousTab()\n-   {\n-      switchToTab(-1, userPrefs_.wrapTabNavigation().getValue());\n-   }\n+      // if this is the main window, collect all unsaved changes from\n+      // the satellite windows as well\n+      if (SourceWindowManager.isMainSourceWindow())\n+      {\n+         targets.addAll(pWindowManager_.get().getAllSatelliteUnsavedChanges(type));\n+      }\n+      targets.addAll(columnManager_.getUnsavedChanges(type, ids));\n \n-   @Handler\n-   public void onNextTab()\n-   {\n-      switchToTab(1, userPrefs_.wrapTabNavigation().getValue());\n+      return targets;\n    }\n \n-   @Handler\n-   public void onLastTab()\n+   public void saveUnsavedDocuments(final Command onCompleted)\n    {\n-      if (view_.getTabCount() == 0)\n-         return;\n-\n-      ensureVisible(false);\n-      if (view_.getTabCount() > 0)\n-         setPhysicalTabIndex(view_.getTabCount() - 1);\n+      saveUnsavedDocuments(null, onCompleted);\n    }\n    \n-   public void nextTabWithWrap()\n-   {\n-      switchToTab(1, true);\n-   }\n-\n-   public void prevTabWithWrap()\n-   {\n-      switchToTab(-1, true);\n-   }\n-   \n-   private void switchToTab(int delta, boolean wrap)\n+   public void saveUnsavedDocuments(final Set<String> ids,\n+                                    final Command onCompleted)\n    {\n-      if (view_.getTabCount() == 0)\n-         return;\n-      \n-      ensureVisible(false);\n-\n-      int targetIndex = getPhysicalTabIndex() + delta;\n-      if (targetIndex > (view_.getTabCount() - 1))\n-      {\n-         if (wrap)\n-            targetIndex = 0;\n-         else\n-            return;\n-      }\n-      else if (targetIndex < 0)\n+      Command saveAllLocal = new Command()\n       {\n-         if (wrap)\n-            targetIndex = view_.getTabCount() - 1;\n-         else\n-            return;\n-      }\n-      setPhysicalTabIndex(targetIndex);\n-   }\n-   \n-   @Handler\n-   public void onMoveTabRight()\n-   {\n-      view_.moveTab(getPhysicalTabIndex(), 1);\n+         @Override\n+         public void execute()\n+         {\n+            columnManager_.saveChanges(getUnsavedChanges(TYPE_FILE_BACKED, ids), onCompleted);\n+         }\n+      };\n+      \n+      // if this is the main source window, save all files in satellites first\n+      if (SourceWindowManager.isMainSourceWindow())\n+         pWindowManager_.get().saveUnsavedDocuments(ids, saveAllLocal);\n+      else\n+         saveAllLocal.execute();\n    }\n \n-   @Handler\n-   public void onMoveTabLeft()\n+   public void saveWithPrompt(UnsavedChangesTarget target, \n+                              Command onCompleted,\n+                              Command onCancelled)\n    {\n-      view_.moveTab(getPhysicalTabIndex(), -1);\n+      if (SourceWindowManager.isMainSourceWindow() &&\n+          !pWindowManager_.get().getWindowIdOfDocId(target.getId()).isEmpty())\n+      {\n+         // we are the main window, and we're being asked to save a document\n+         // that's in a different window; perform the save over there\n+         pWindowManager_.get().saveWithPrompt(UnsavedChangesItem.create(target), \n+               onCompleted);\n+         return;\n+      }\n+      EditingTarget editingTarget = columnManager_.findEditor(target.getId());\n+      if (editingTarget != null)\n+         editingTarget.saveWithPrompt(onCompleted, onCancelled);\n    }\n    \n-   @Handler\n-   public void onMoveTabToFirst()\n-   {\n-      view_.moveTab(getPhysicalTabIndex(), getPhysicalTabIndex() * -1);\n-   }\n-\n-   @Handler\n-   public void onMoveTabToLast()\n+   public Command revertUnsavedChangesBeforeExitCommand(\n+                                               final Command onCompleted)\n    {\n-      view_.moveTab(getPhysicalTabIndex(), (view_.getTabCount() - \n-            getPhysicalTabIndex()) - 1);\n+      return () -> handleUnsavedChangesBeforeExit(new ArrayList<UnsavedChangesTarget>(),\n+                                                  onCompleted);\n    }\n \n-   @Override\n-   public void onPopoutDoc(final PopoutDocEvent e)\n+   public void handleUnsavedChangesBeforeExit(\n+                        final ArrayList<UnsavedChangesTarget> saveTargets,\n+                        final Command onCompleted)\n    {\n-      // disowning the doc may cause the entire window to close, so defer it\n-      // to allow any other popout processing to occur\n-      Scheduler.get().scheduleDeferred(new ScheduledCommand()\n-      {\n+      // first handle saves, then revert unsaved, then callback on completed\n+      final Command completed = new Command() {\n          @Override\n          public void execute()\n          {\n-            disownDoc(e.getDocId());\n+            // revert unsaved\n+            columnManager_.revertUnsavedTargets(onCompleted);\n          }\n-      });\n-   }\n-   \n-   @Override\n-   public void onDebugModeChanged(DebugModeChangedEvent evt)\n-   {\n-      // when debugging ends, always disengage any active debug highlights\n-      if (!evt.debugging() && activeEditor_ != null)\n-      {\n-         activeEditor_.endDebugHighlighting();\n-      }\n-   }\n-   \n-   @Override\n-   public void onDocWindowChanged(final DocWindowChangedEvent e)\n-   {\n-      if (e.getNewWindowId() == SourceWindowManager.getSourceWindowId())\n+      };   \n+\n+      // if this is the main source window, let satellite windows save any\n+      // changes first\n+      if (SourceWindowManager.isMainSourceWindow())\n       {\n-         ensureVisible(true);\n-         \n-         // look for a collaborative editing session currently running inside \n-         // the document being transferred between windows--if we didn't know\n-         // about one with the event, try to look it up in the local cache of\n-         // source documents\n-         final CollabEditStartParams collabParams = \n-               e.getCollabParams() == null ? \n-                     pWindowManager_.get().getDocCollabParams(e.getDocId()) :\n-                     e.getCollabParams();\n-         \n-         // if we're the adopting window, add the doc\n-         server_.getSourceDocument(e.getDocId(),\n-               new ServerRequestCallback<SourceDocument>()\n+         pWindowManager_.get().handleUnsavedChangesBeforeExit(\n+               saveTargets, new Command()\n          {\n             @Override\n-            public void onResponseReceived(final SourceDocument doc)\n-            {\n-               final EditingTarget target = addTab(doc, e.getPos());\n-               \n-               Scheduler.get().scheduleDeferred(new Scheduler.ScheduledCommand()\n-               {\n-                  @Override\n-                  public void execute()\n-                  {\n-                     // if there was a collab session, resume it\n-                     if (collabParams != null)\n-                        target.beginCollabSession(e.getCollabParams());\n-                  }\n-               });\n-            }\n-\n-            @Override\n-            public void onError(ServerError error)\n+            public void execute()\n             {\n-               globalDisplay_.showErrorMessage(\"Document Tab Move Failed\", \n-                     \"Couldn't move the tab to this window: \\n\" + \n-                      error.getMessage());\n+               columnManager_.saveChanges(saveTargets, completed);\n             }\n          });\n       }\n-      else if (e.getOldWindowId() == SourceWindowManager.getSourceWindowId())\n+      else\n       {\n-         // cancel tab drag if it was occurring\n-         view_.cancelTabDrag();\n-         \n-         // disown this doc if it was our own\n-         disownDoc(e.getDocId());\n+         columnManager_.saveChanges(saveTargets, completed);\n       }\n    }\n    \n-   private void disownDoc(String docId)\n+   public Display getActiveView()\n    {\n-      suspendDocumentClose_ = true;\n-      for (int i = 0; i < editors_.size(); i++)\n-      {\n-         if (editors_.get(i).getId() == docId)\n-         {\n-            view_.closeTab(i, false);\n-            break;\n-         }\n-      }\n-      suspendDocumentClose_ = false;\n+      return (Display)columnManager_.getActive();\n    }\n \n-   @Override\n-   public void onDocTabDragInitiated(final DocTabDragInitiatedEvent event)\n+   @Handler\n+   public void onOpenSourceDoc()\n    {\n-      inEditorForId(event.getDragParams().getDocId(), \n-            new OperationWithInput<EditingTarget>()\n-      {\n-         @Override\n-         public void execute(EditingTarget editor)\n-         {\n-            DocTabDragParams params = event.getDragParams();\n-            params.setSourcePosition(editor.currentPosition());\n-            events_.fireEvent(new DocTabDragStartedEvent(params));\n-            \n-         }\n-      });\n+      fileDialogs_.openFile(\n+            \"Open File\",\n+            fileContext_,\n+            workbenchContext_.getDefaultFileDialogDir(),\n+            new ProgressOperationWithInput<FileSystemItem>()\n+            {\n+               public void execute(final FileSystemItem input,\n+                                   ProgressIndicator indicator)\n+               {\n+                  if (input == null)\n+                     return;\n+\n+                  workbenchContext_.setDefaultFileDialogDir(\n+                                                   input.getParentPath());\n+\n+                  indicator.onCompleted();\n+                  Scheduler.get().scheduleDeferred(new ScheduledCommand()\n+                  {\n+                     public void execute()\n+                     {\n+                        fileTypeRegistry_.openFile(input);\n+                     }\n+                  });\n+               }\n+            });\n    }\n    \n-   @Override\n-   public void onPopoutDocInitiated(final PopoutDocInitiatedEvent event)\n+   public void onNewDocumentWithCode(final NewDocumentWithCodeEvent event)\n    {\n-      inEditorForId(event.getDocId(), new OperationWithInput<EditingTarget>()\n-      {\n+      // determine the type\n+      final EditableFileType docType;\n+      if (event.getType() == NewDocumentWithCodeEvent.R_SCRIPT)\n+         docType = FileTypeRegistry.R;\n+      else if (event.getType() == NewDocumentWithCodeEvent.SQL)\n+         docType = FileTypeRegistry.SQL;\n+      else\n+         docType = FileTypeRegistry.RMARKDOWN;\n+      \n+      // command to create and run the new doc\n+      Command newDocCommand = new Command() {\n          @Override\n-         public void execute(EditingTarget editor)\n+         public void execute()\n          {\n-            // if this is a text editor, ensure that its content is \n-            // synchronized with the server before we pop it out\n-            if (editor instanceof TextEditingTarget)\n-            {\n-               final TextEditingTarget textEditor = (TextEditingTarget)editor;\n-               textEditor.withSavedDoc(new Command()\n+            columnManager_.newDoc(docType,\n+                   event.getCode(),\n+                   new ResultCallback<EditingTarget, ServerError>() {\n+               public void onSuccess(EditingTarget arg)\n                {\n-                  @Override\n-                  public void execute()\n+                  TextEditingTarget editingTarget = (TextEditingTarget)arg;\n+                  \n+                  if (event.getCursorPosition() != null)\n                   {\n-                     textEditor.syncLocalSourceDb();\n-                     events_.fireEvent(new PopoutDocEvent(event, \n-                           textEditor.currentPosition()));\n+                     editingTarget.navigateToPosition(event.getCursorPosition(),\n+                                                      false);\n                   }\n-               });\n-            }\n-            else\n-            {\n-               events_.fireEvent(new PopoutDocEvent(event, \n-                     editor.currentPosition()));\n-            }\n+                  \n+                  if (event.getExecute())\n+                  {\n+                     if (docType.equals(FileTypeRegistry.R))\n+                     {\n+                        commands_.executeToCurrentLine().execute();\n+                        commands_.activateSource().execute();\n+                     }\n+                     else if (docType.equals(FileTypeRegistry.SQL))\n+                     {\n+                        commands_.previewSql().execute();\n+                     }\n+                     else\n+                     {\n+                        commands_.executePreviousChunks().execute();\n+                     }\n+                  }\n+               }\n+            });\n          }\n-      });\n-   }\n-\n-   @Handler\n-   public void onCloseSourceDoc()\n-   {\n-      closeSourceDoc(true);\n-   }\n-   \n-   void closeSourceDoc(boolean interactive)\n-   {\n-      if (view_.getTabCount() == 0)\n-         return;\n-      \n-      view_.closeTab(view_.getActiveTabIndex(), interactive);\n-   }\n-   \n-   /**\n-    * Execute the given command for each editor, using continuation-passing\n-    * style. When executed, the CPSEditingTargetCommand needs to execute its\n-    * own Command parameter to continue the iteration.\n-    * @param command The command to run on each EditingTarget\n-    */\n-   private void cpsExecuteForEachEditor(ArrayList<EditingTarget> editors,\n-                                        final CPSEditingTargetCommand command,\n-                                        final Command completedCommand)\n-   {\n-      SerializedCommandQueue queue = new SerializedCommandQueue();\n-\n-      // Clone editors_, since the original may be mutated during iteration\n-      for (final EditingTarget editor : new ArrayList<EditingTarget>(editors))\n+      };\n+     \n+      // do it\n+      if (docType.equals(FileTypeRegistry.R))\n       {\n-         queue.addCommand(new SerializedCommand()\n-         {\n-            @Override\n-            public void onExecute(Command continuation)\n-            {\n-               command.execute(editor, continuation);\n-            }\n-         });\n+         newDocCommand.execute();\n       }\n-      \n-      if (completedCommand != null)\n+      else\n       {\n-         queue.addCommand(new SerializedCommand() {\n-   \n-            public void onExecute(Command continuation)\n-            {\n-               completedCommand.execute();\n-               continuation.execute();\n-            }  \n-         });\n+         dependencyManager_.withRMarkdown(\"R Notebook\",\n+                                          \"Create R Notebook\", \n+                                          newDocCommand);\n       }\n    }\n    \n-   private void cpsExecuteForEachEditor(ArrayList<EditingTarget> editors,\n-                                       final CPSEditingTargetCommand command)\n-   {\n-      cpsExecuteForEachEditor(editors, command, null);\n-   }\n-   \n-   \n    @Handler\n-   public void onSaveAllSourceDocs()\n+   public void onNewRPlumberDoc()\n    {\n-      // Save all documents in the main window\n-      cpsExecuteForEachEditor(editors_, new CPSEditingTargetCommand()\n+      dependencyManager_.withRPlumber(\"Creating R Plumber API\", new Command()\n       {\n          @Override\n-         public void execute(EditingTarget target, Command continuation)\n+         public void execute()\n          {\n-            if (target.dirtyState().getValue())\n-            {\n-               target.save(continuation);\n-            }\n-            else\n-            {\n-               continuation.execute();\n-            }\n+            NewPlumberAPI widget = new NewPlumberAPI(\n+                  \"New Plumber API\",\n+                  new OperationWithInput<NewPlumberAPI.Result>()\n+                  {\n+                     @Override\n+                     public void execute(NewPlumberAPI.Result input)\n+                     {\n+                        doNewRPlumberAPI(input);\n+                     }\n+                  });\n+         \n+            widget.showModal();\n+\n          }\n       });\n-\n-      // Save all documents in satellite windows\n-      pWindowManager_.get().saveUnsavedDocuments(null, null);\n+   }\n+    \n+   public void onOpenSourceFile(final OpenSourceFileEvent event)\n+   {\n+      doOpenSourceFile(event.getFile(),\n+                     event.getFileType(),\n+                     event.getPosition(),\n+                     null, \n+                     event.getNavigationMethod(),\n+                     false);\n    }\n    \n-   \n-   private void saveEditingTargetsWithPrompt(\n-                                       String title,\n-                                       ArrayList<EditingTarget> editingTargets,\n-                                       final Command onCompleted,\n-                                       final Command onCancelled)\n+   public void onOpenPresentationSourceFile(OpenPresentationSourceFileEvent event)\n    {\n-      // execute on completed right away if the list is empty\n-      if (editingTargets.size() ==  0)\n-      {\n-         onCompleted.execute();\n-      }\n+      // don't do the navigation if the active document is a source\n+      // file from this presentation module\n       \n-      // if there is just one thing dirty then go straight to the save dialog\n-      else if (editingTargets.size() == 1)\n-      {\n-         editingTargets.get(0).saveWithPrompt(onCompleted, onCancelled);\n-      }\n+      doOpenSourceFile(event.getFile(),\n+                       event.getFileType(),\n+                       event.getPosition(),\n+                       event.getPattern(),\n+                       NavigationMethods.HIGHLIGHT_LINE,\n+                       true);\n       \n-      // otherwise use the multi save changes dialog\n-      else\n-      {\n-         // convert to UnsavedChangesTarget collection\n-         ArrayList<UnsavedChangesTarget> unsavedTargets = \n-                                    new ArrayList<UnsavedChangesTarget>();\n-         unsavedTargets.addAll(editingTargets);\n-         \n-         // show dialog\n-         view_.showUnsavedChangesDialog(\n-            title,\n-            unsavedTargets, \n-            new OperationWithInput<UnsavedChangesDialog.Result>() \n-            {\n+   }\n+   \n+   public void onEditPresentationSource(final EditPresentationSourceEvent event)\n+   { \n+      columnManager_.openFile(\n+            event.getSourceFile(), \n+            FileTypeRegistry.RPRESENTATION,\n+            new CommandWithArg<EditingTarget>() {\n                @Override\n-               public void execute(UnsavedChangesDialog.Result result)\n+               public void execute(final EditingTarget editor)\n                {\n-                  saveChanges(result.getSaveTargets(), onCompleted);\n+                  TextEditingTargetPresentationHelper.navigateToSlide(\n+                                                         editor, \n+                                                         event.getSlideIndex());\n                }\n-            },\n-            onCancelled); \n-      }\n+         });\n    }\n    \n-   private void saveChanges(ArrayList<UnsavedChangesTarget> targets,\n-                                 Command onCompleted)\n+   public void forceLoad()\n    {\n-      // convert back to editing targets\n-      ArrayList<EditingTarget> saveTargets = \n-                                    new ArrayList<EditingTarget>();\n-      for (UnsavedChangesTarget target: targets)\n-      {\n-         EditingTarget saveTarget = \n-                           getEditingTargetForId(target.getId());\n-         if (saveTarget != null)\n-            saveTargets.add(saveTarget);\n-      }\n-        \n-      // execute the save\n-      cpsExecuteForEachEditor(\n-         \n-         // targets the user chose to save\n-         saveTargets, \n-         \n-         // save each editor\n-         new CPSEditingTargetCommand()\n-         {\n-            @Override\n-            public void execute(EditingTarget saveTarget, \n-                                Command continuation)\n-            {         \n-               saveTarget.save(continuation); \n-            }\n-         },\n-         \n-         // onCompleted at the end\n-         onCompleted\n-      );          \n+      AceEditor.preload();\n    }\n-          \n-   \n-   private EditingTarget getEditingTargetForId(String id)\n-   {\n-      for (EditingTarget target : editors_)\n-         if (id == target.getId())\n-            return target;\n \n-      return null;\n-   }\n-   \n-   @Handler\n-   public void onCloseAllSourceDocs()\n+   public String getCurrentDocId()\n    {\n-      closeAllSourceDocs(\"Close All\",  null, false);\n+      return columnManager_.getActiveDocId();\n    }\n-   \n-   @Handler\n-   public void onCloseOtherSourceDocs()\n+\n+   public String getCurrentDocPath()\n    {\n-      closeAllSourceDocs(\"Close Other\",  null, true);\n+      return columnManager_.getActiveDocPath();\n    }\n    \n-   public void closeAllSourceDocs(final String caption, \n-         final Command onCompleted, final boolean excludeActive)\n-   { \n-      if (SourceWindowManager.isMainSourceWindow() && !excludeActive)\n-      {\n-         // if this is the main window, close docs in the satellites first \n-         pWindowManager_.get().closeAllSatelliteDocs(caption, new Command()\n-         {\n-            @Override\n-            public void execute()\n-            {\n-               closeAllLocalSourceDocs(caption, onCompleted, excludeActive);\n-            }\n-         });\n-      }\n-      else\n-      {\n-         // this is a satellite (or we don't need to query satellites)--just\n-         // close our own tabs\n-         closeAllLocalSourceDocs(caption, onCompleted, excludeActive);\n-      }\n-  }\n-\n-  private void closeAllLocalSourceDocs(String caption, Command onCompleted,\n-           final boolean excludeActive)\n-  {\n-      // save active editor for exclusion (it changes as we close tabs)\n-      final EditingTarget activeEditor = activeEditor_;\n+   private void doOpenSourceFile(final FileSystemItem file,\n+                                 final TextFileType fileType,\n+                                 final FilePosition position,\n+                                 final String pattern,\n+                                 final int navMethod, \n+                                 final boolean forceHighlightMode)\n+   {\n+      // if the navigation should happen in another window, do that instead\n+      NavigationResult navResult = \n+            pWindowManager_.get().navigateToFile(file, position, navMethod);\n       \n-      // collect up a list of dirty documents\n-      ArrayList<EditingTarget> dirtyTargets = new ArrayList<EditingTarget>();\n-      for (EditingTarget target : editors_)\n-      {\n-         if (excludeActive && target == activeEditor)\n-            continue;\n-         if (target.dirtyState().getValue())\n-            dirtyTargets.add(target);\n-      }\n+      // we navigated externally, just skip this\n+      if (navResult.getType() == NavigationResult.RESULT_NAVIGATED)\n+         return;\n+      \n+      // we're about to open in this window--if it's the main window, focus it\n+      if (SourceWindowManager.isMainSourceWindow() && Desktop.hasDesktopFrame())\n+         Desktop.getFrame().bringMainFrameToFront();\n+      \n+      final boolean isDebugNavigation = \n+            navMethod == NavigationMethods.DEBUG_STEP ||\n+            navMethod == NavigationMethods.DEBUG_END;\n       \n-      // create a command used to close all tabs \n-      final Command closeAllTabsCommand = new Command()\n+      final CommandWithArg<EditingTarget> editingTargetAction = \n+            new CommandWithArg<EditingTarget>() \n       {\n          @Override\n-         public void execute()\n+         public void execute(EditingTarget target)\n+         {\n+            // the rstudioapi package can use the proxy (-1, -1) position to\n+            // indicate that source navigation should not occur; ie, we should\n+            // preserve whatever position was used in the document earlier\n+            boolean navigateToPosition =\n+                  position != null &&\n+                  (position.getLine() != -1 || position.getColumn() != -1);\n+            \n+            if (navigateToPosition)\n+            {\n+               SourcePosition endPosition = null;\n+               if (isDebugNavigation)\n+               {\n+                  DebugFilePosition filePos = \n+                        (DebugFilePosition) position.cast();\n+                  endPosition = SourcePosition.create(\n+                        filePos.getEndLine() - 1,\n+                        filePos.getEndColumn() + 1);\n+                  \n+                  if (Desktop.hasDesktopFrame() &&\n+                      navMethod != NavigationMethods.DEBUG_END)\n+                      Desktop.getFrame().bringMainFrameToFront();\n+               }\n+               navigate(target, \n+                        SourcePosition.create(position.getLine() - 1,\n+                                              position.getColumn() - 1),\n+                        endPosition);\n+            }\n+            else if (pattern != null)\n+            {\n+               Position pos = target.search(pattern);\n+               if (pos != null)\n+               {\n+                  navigate(target, \n+                           SourcePosition.create(pos.getRow(), 0),\n+                           null);\n+               }\n+            }\n+         }\n+         \n+         private void navigate(final EditingTarget target,\n+                               final SourcePosition srcPosition,\n+                               final SourcePosition srcEndPosition)\n          {\n-            cpsExecuteForEachEditor(editors_, new CPSEditingTargetCommand()\n+            Scheduler.get().scheduleDeferred(new ScheduledCommand()\n             {\n                @Override\n-               public void execute(EditingTarget target, Command continuation)\n+               public void execute()\n                {\n-                  if (excludeActive && target == activeEditor)\n+                  if (navMethod == NavigationMethods.DEBUG_STEP)\n                   {\n-                     continuation.execute();\n-                     return;\n+                     target.highlightDebugLocation(\n+                           srcPosition, \n+                           srcEndPosition, \n+                           true);\n                   }\n-                  else\n+                  else if (navMethod == NavigationMethods.DEBUG_END)\n                   {\n-                     view_.closeTab(target.asWidget(), false, continuation);\n+                     target.endDebugHighlighting();\n                   }\n-               }\n-            });\n-            \n-         }     \n-      };\n-      \n-      // save targets\n-      saveEditingTargetsWithPrompt(caption,\n-                                   dirtyTargets, \n-                                   CommandUtil.join(closeAllTabsCommand,\n-                                                    onCompleted),\n-                                   null);\n-      \n-   }\n-  \n-   private boolean isUnsavedTarget(EditingTarget target, int type)\n-   {\n-      boolean fileBacked = target.getPath() != null;\n-      return target.dirtyState().getValue() && \n-              ((type == TYPE_FILE_BACKED &&  fileBacked) ||\n-               (type == TYPE_UNTITLED    && !fileBacked));\n-   }\n-   \n-   public ArrayList<UnsavedChangesTarget> getUnsavedChanges(int type)\n-   {\n-      return getUnsavedChanges(type,  null);\n-   }\n-   \n-   public ArrayList<UnsavedChangesTarget> getUnsavedChanges(int type, Set<String> ids)\n-   {\n-      ArrayList<UnsavedChangesTarget> targets = \n-                                       new ArrayList<UnsavedChangesTarget>();\n-\n-      // if this is the main window, collect all unsaved changes from \n-      // the satellite windows as well\n-      if (SourceWindowManager.isMainSourceWindow())\n-      {\n-         targets.addAll(pWindowManager_.get().getAllSatelliteUnsavedChanges(type));\n-      }\n-\n-      for (EditingTarget target : editors_)\n-      {\n-         // no need to save targets which are up-to-date\n-         if (!isUnsavedTarget(target, type))\n-            continue;\n-         \n-         // if we've requested the save of specific documents, screen\n-         // out documents not within the requested id set\n-         if (ids != null && !ids.contains(target.getId()))\n-            continue;\n-         \n-         targets.add(target);\n-      }\n-      \n-      return targets;\n-   }\n-   \n-   public void saveUnsavedDocuments(final Command onCompleted)\n-   {\n-      saveUnsavedDocuments(null, onCompleted);\n-   }\n-   \n-   public void saveUnsavedDocuments(final Set<String> ids,\n-                                    final Command onCompleted)\n-   {\n-      Command saveAllLocal = new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            saveChanges(getUnsavedChanges(TYPE_FILE_BACKED, ids), onCompleted);\n-         }\n-      };\n-      \n-      // if this is the main source window, save all files in satellites first\n-      if (SourceWindowManager.isMainSourceWindow())\n-         pWindowManager_.get().saveUnsavedDocuments(ids, saveAllLocal);\n-      else\n-         saveAllLocal.execute();\n-   }\n-   \n-   public void saveWithPrompt(UnsavedChangesTarget target, \n-                              Command onCompleted,\n-                              Command onCancelled)\n-   {\n-      if (SourceWindowManager.isMainSourceWindow() &&\n-          !pWindowManager_.get().getWindowIdOfDocId(target.getId()).isEmpty())\n-      {\n-         // we are the main window, and we're being asked to save a document\n-         // that's in a different window; perform the save over there\n-         pWindowManager_.get().saveWithPrompt(UnsavedChangesItem.create(target), \n-               onCompleted);\n-         return;\n-      }\n-      EditingTarget editingTarget = getEditingTargetForId(target.getId());\n-      if (editingTarget != null)\n-         editingTarget.saveWithPrompt(onCompleted, onCancelled);\n-   }\n-   \n-   public Command revertUnsavedChangesBeforeExitCommand(\n-                                               final Command onCompleted)\n-   {\n-      return () -> handleUnsavedChangesBeforeExit(new ArrayList<UnsavedChangesTarget>(),\n-                                                  onCompleted);\n-   }\n-   public void handleUnsavedChangesBeforeExit(\n-                        final ArrayList<UnsavedChangesTarget> saveTargets,\n-                        final Command onCompleted)\n-   {\n-      // first handle saves, then revert unsaved, then callback on completed\n-      final Command completed = new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            // revert unsaved\n-            revertUnsavedTargets(onCompleted);\n-         }\n-      };   \n-\n-      // if this is the main source window, let satellite windows save any\n-      // changes first\n-      if (SourceWindowManager.isMainSourceWindow())\n-      {\n-         pWindowManager_.get().handleUnsavedChangesBeforeExit(\n-               saveTargets, new Command()\n-         {\n-            @Override\n-            public void execute()\n-            {\n-               saveChanges(saveTargets, completed);\n-            }\n-         });\n-      }\n-      else\n-      {\n-         saveChanges(saveTargets, completed);\n-      }\n-   }\n-   \n-   public Display getView()\n-   {\n-      return view_;\n-   }\n-\n-   private void revertActiveDocument()\n-   {\n-      if (activeEditor_ == null)\n-         return;\n-      \n-      if (activeEditor_.getPath() != null)\n-         activeEditor_.revertChanges(null);\n-      \n-      // Ensure that the document is in view\n-      activeEditor_.ensureCursorVisible();\n-   }\n-   \n-   private void revertUnsavedTargets(Command onCompleted)\n-   {\n-      // collect up unsaved targets\n-      ArrayList<EditingTarget> unsavedTargets =  new ArrayList<EditingTarget>();\n-      for (EditingTarget target : editors_)\n-         if (isUnsavedTarget(target, TYPE_FILE_BACKED))\n-            unsavedTargets.add(target);\n-      \n-      // revert all of them\n-      cpsExecuteForEachEditor(\n-         \n-         // targets the user chose not to save\n-         unsavedTargets, \n-         \n-         // save each editor\n-         new CPSEditingTargetCommand()\n-         {\n-            @Override\n-            public void execute(EditingTarget saveTarget, \n-                                Command continuation)\n-            {\n-               if (saveTarget.getPath() != null)\n-               {\n-                  // file backed document -- revert it\n-                  saveTarget.revertChanges(continuation);\n-               }\n-               else\n-               {\n-                  // untitled document -- just close the tab non-interactively\n-                  view_.closeTab(saveTarget.asWidget(), false, continuation);\n-               }\n-            }\n-         },\n-         \n-         // onCompleted at the end\n-         onCompleted\n-      );          \n-            \n-   }\n-   \n-   @Handler\n-   public void onOpenSourceDoc()\n-   {\n-      fileDialogs_.openFile(\n-            \"Open File\",\n-            fileContext_,\n-            workbenchContext_.getDefaultFileDialogDir(),\n-            new ProgressOperationWithInput<FileSystemItem>()\n-            {\n-               public void execute(final FileSystemItem input,\n-                                   ProgressIndicator indicator)\n-               {\n-                  if (input == null)\n-                     return;\n-\n-                  workbenchContext_.setDefaultFileDialogDir(\n-                                                   input.getParentPath());\n-\n-                  indicator.onCompleted();\n-                  Scheduler.get().scheduleDeferred(new ScheduledCommand()\n-                  {\n-                     public void execute()\n-                     {\n-                        fileTypeRegistry_.openFile(input);\n-                     }\n-                  });\n-               }\n-            });\n-   }\n-   \n-   public void onNewDocumentWithCode(final NewDocumentWithCodeEvent event)\n-   {\n-      // determine the type\n-      final EditableFileType docType;\n-      if (event.getType() == NewDocumentWithCodeEvent.R_SCRIPT)\n-         docType = FileTypeRegistry.R;\n-      else if (event.getType() == NewDocumentWithCodeEvent.SQL)\n-         docType = FileTypeRegistry.SQL;\n-      else\n-         docType = FileTypeRegistry.RMARKDOWN;\n-      \n-      // command to create and run the new doc\n-      Command newDocCommand = new Command() {\n-         @Override\n-         public void execute()\n-         {\n-            newDoc(docType,\n-                   event.getCode(),\n-                   new ResultCallback<EditingTarget, ServerError>() {\n-               public void onSuccess(EditingTarget arg)\n-               {\n-                  TextEditingTarget editingTarget = (TextEditingTarget)arg;\n-                  \n-                  if (event.getCursorPosition() != null)\n-                  {\n-                     editingTarget.navigateToPosition(event.getCursorPosition(),\n-                                                      false);\n-                  }\n-                  \n-                  if (event.getExecute())\n-                  {\n-                     if (docType.equals(FileTypeRegistry.R))\n-                     {\n-                        commands_.executeToCurrentLine().execute();\n-                        commands_.activateSource().execute();\n-                     }\n-                     else if (docType.equals(FileTypeRegistry.SQL))\n-                     {\n-                        commands_.previewSql().execute();\n-                     }\n-                     else\n-                     {\n-                        commands_.executePreviousChunks().execute();\n-                     }\n-                  }\n-               }\n-            });\n-         }\n-      };\n-     \n-      // do it\n-      if (docType.equals(FileTypeRegistry.R))\n-      {\n-         newDocCommand.execute();\n-      }\n-      else\n-      {\n-         dependencyManager_.withRMarkdown(\"R Notebook\",\n-                                          \"Create R Notebook\", \n-                                          newDocCommand);\n-      }\n-   }\n-   \n-   @Handler\n-   public void onNewRPlumberDoc()\n-   {\n-      dependencyManager_.withRPlumber(\"Creating R Plumber API\", new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            NewPlumberAPI widget = new NewPlumberAPI(\n-                  \"New Plumber API\",\n-                  new OperationWithInput<NewPlumberAPI.Result>()\n-                  {\n-                     @Override\n-                     public void execute(NewPlumberAPI.Result input)\n-                     {\n-                        doNewRPlumberAPI(input);\n-                     }\n-                  });\n-         \n-            widget.showModal();\n-\n-         }\n-      });\n-   }\n-    \n-   public void onOpenSourceFile(final OpenSourceFileEvent event)\n-   {\n-      doOpenSourceFile(event.getFile(),\n-                     event.getFileType(),\n-                     event.getPosition(),\n-                     null, \n-                     event.getNavigationMethod(),\n-                     false);\n-   }\n-   \n-   public void onOpenPresentationSourceFile(OpenPresentationSourceFileEvent event)\n-   {\n-      // don't do the navigation if the active document is a source\n-      // file from this presentation module\n-      \n-      doOpenSourceFile(event.getFile(),\n-                       event.getFileType(),\n-                       event.getPosition(),\n-                       event.getPattern(),\n-                       NavigationMethods.HIGHLIGHT_LINE,\n-                       true);\n-      \n-   }\n-   \n-   public void onEditPresentationSource(final EditPresentationSourceEvent event)\n-   { \n-      openingForSourceNavigation_ = true;\n-      openFile(\n-            event.getSourceFile(), \n-            FileTypeRegistry.RPRESENTATION,\n-            new CommandWithArg<EditingTarget>() {\n-               @Override\n-               public void execute(final EditingTarget editor)\n-               {   \n-                  openingForSourceNavigation_ = false;\n-                  TextEditingTargetPresentationHelper.navigateToSlide(\n-                                                         editor, \n-                                                         event.getSlideIndex());\n-               }\n-         });\n-   }\n-   \n-   public void forceLoad()\n-   {\n-      AceEditor.preload();\n-   }\n-\n-   public String getCurrentDocId()\n-   {\n-      if (getActiveEditor() == null)\n-         return null;\n-      return getActiveEditor().getId();\n-   }\n-\n-   public String getCurrentDocPath()\n-   {\n-      if (getActiveEditor() == null)\n-         return null;\n-      return getActiveEditor().getPath();\n-   }\n-   \n-   private void doOpenSourceFile(final FileSystemItem file,\n-                                 final TextFileType fileType,\n-                                 final FilePosition position,\n-                                 final String pattern,\n-                                 final int navMethod, \n-                                 final boolean forceHighlightMode)\n-   {\n-      // if the navigation should happen in another window, do that instead\n-      NavigationResult navResult = \n-            pWindowManager_.get().navigateToFile(file, position, navMethod);\n-      \n-      // we navigated externally, just skip this\n-      if (navResult.getType() == NavigationResult.RESULT_NAVIGATED)\n-         return;\n-      \n-      // we're about to open in this window--if it's the main window, focus it\n-      if (SourceWindowManager.isMainSourceWindow() && Desktop.hasDesktopFrame())\n-         Desktop.getFrame().bringMainFrameToFront();\n-      \n-      final boolean isDebugNavigation = \n-            navMethod == NavigationMethods.DEBUG_STEP ||\n-            navMethod == NavigationMethods.DEBUG_END;\n-      \n-      final CommandWithArg<EditingTarget> editingTargetAction = \n-            new CommandWithArg<EditingTarget>() \n-      {\n-         @Override\n-         public void execute(EditingTarget target)\n-         {\n-            // the rstudioapi package can use the proxy (-1, -1) position to\n-            // indicate that source navigation should not occur; ie, we should\n-            // preserve whatever position was used in the document earlier\n-            boolean navigateToPosition =\n-                  position != null &&\n-                  (position.getLine() != -1 || position.getColumn() != -1);\n-            \n-            if (navigateToPosition)\n-            {\n-               SourcePosition endPosition = null;\n-               if (isDebugNavigation)\n-               {\n-                  DebugFilePosition filePos = \n-                        (DebugFilePosition) position.cast();\n-                  endPosition = SourcePosition.create(\n-                        filePos.getEndLine() - 1,\n-                        filePos.getEndColumn() + 1);\n-                  \n-                  if (Desktop.hasDesktopFrame() &&\n-                      navMethod != NavigationMethods.DEBUG_END)\n-                      Desktop.getFrame().bringMainFrameToFront();\n-               }\n-               navigate(target, \n-                        SourcePosition.create(position.getLine() - 1,\n-                                              position.getColumn() - 1),\n-                        endPosition);\n-            }\n-            else if (pattern != null)\n-            {\n-               Position pos = target.search(pattern);\n-               if (pos != null)\n-               {\n-                  navigate(target, \n-                           SourcePosition.create(pos.getRow(), 0),\n-                           null);\n-               }\n-            }\n-         }\n-         \n-         private void navigate(final EditingTarget target,\n-                               final SourcePosition srcPosition,\n-                               final SourcePosition srcEndPosition)\n-         {\n-            Scheduler.get().scheduleDeferred(new ScheduledCommand()\n-            {\n-               @Override\n-               public void execute()\n-               {\n-                  if (navMethod == NavigationMethods.DEBUG_STEP)\n-                  {\n-                     target.highlightDebugLocation(\n-                           srcPosition, \n-                           srcEndPosition, \n-                           true);\n-                  }\n-                  else if (navMethod == NavigationMethods.DEBUG_END)\n-                  {\n-                     target.endDebugHighlighting();\n-                  }\n-                  else\n-                  {\n-                     // force highlight mode if requested\n-                     if (forceHighlightMode)\n-                        target.forceLineHighlighting();\n-                     \n-                     // now navigate to the new position\n-                     boolean highlight = \n-                           navMethod == NavigationMethods.HIGHLIGHT_LINE &&\n-                           !userPrefs_.highlightSelectedLine().getValue();\n-                     target.navigateToPosition(srcPosition,\n-                                               false,\n-                                               highlight);\n-                  }\n-               }\n-            });\n-         }\n-      };\n-\n-      if (navResult.getType() == NavigationResult.RESULT_RELOCATE)\n-      {\n-         server_.getSourceDocument(navResult.getDocId(),\n-               new ServerRequestCallback<SourceDocument>()\n-         {\n-            @Override\n-            public void onResponseReceived(final SourceDocument doc)\n-            {\n-               editingTargetAction.execute(addTab(doc, OPEN_REPLAY));\n-            }\n-\n-            @Override\n-            public void onError(ServerError error)\n-            {\n-               globalDisplay_.showErrorMessage(\"Document Tab Move Failed\", \n-                     \"Couldn't move the tab to this window: \\n\" + \n-                      error.getMessage());\n-            }\n-         });\n-         return;\n-      }\n-\n-      final CommandWithArg<FileSystemItem> action = new CommandWithArg<FileSystemItem>()\n-      {\n-         @Override\n-         public void execute(FileSystemItem file)\n-         {\n-            // set flag indicating we are opening for a source navigation\n-            openingForSourceNavigation_ = position != null || pattern != null;\n-            \n-            openFile(file,\n-                     fileType,\n-                     (target) -> {\n-                        openingForSourceNavigation_ = false;\n-                        editingTargetAction.execute(target);\n-                     });      \n-         }\n-      };\n-\n-      // If this is a debug navigation, we only want to treat this as a full\n-      // file open if the file isn't already open; otherwise, we can just\n-      // highlight in place.\n-      if (isDebugNavigation)\n-      {\n-         setPendingDebugSelection();\n-         \n-         for (int i = 0; i < editors_.size(); i++)\n-         {\n-            EditingTarget target = editors_.get(i);\n-            String path = target.getPath();\n-            if (path != null && path.equalsIgnoreCase(file.getPath()))\n-            {\n-               // the file's open; just update its highlighting \n-               if (navMethod == NavigationMethods.DEBUG_END)\n-               {\n-                  target.endDebugHighlighting();\n-               }\n-               else\n-               {\n-                  view_.selectTab(i);\n-                  editingTargetAction.execute(target);\n-               }\n-               return;\n-            }\n-         }\n-         \n-         // If we're here, the target file wasn't open in an editor. Don't\n-         // open a file just to turn off debug highlighting in the file!\n-         if (navMethod == NavigationMethods.DEBUG_END)\n-            return;\n-      }\n-\n-      // Warning: event.getFile() can be null (e.g. new Sweave document)\n-      if (file != null && file.getLength() < 0)\n-      {\n-         statQueue_.add(new StatFileEntry(file, action));\n-         if (statQueue_.size() == 1)\n-            processStatQueue();\n-      }\n-      else\n-      {\n-         action.execute(file);\n-      }\n-   }\n-   \n-   private void processStatQueue()\n-   {\n-      if (statQueue_.isEmpty())\n-         return;\n-      final StatFileEntry entry = statQueue_.peek();\n-      final Command processNextEntry = new Command()\n-            {\n-               @Override\n-               public void execute()\n-               {\n-                  statQueue_.remove();\n-                  if (!statQueue_.isEmpty())\n-                     processStatQueue();\n-               }\n-            };\n-       \n-       server_.stat(entry.file.getPath(), new ServerRequestCallback<FileSystemItem>()\n-       {\n-          @Override\n-          public void onResponseReceived(FileSystemItem response)\n-          {\n-             processNextEntry.execute();\n-             entry.action.execute(response);\n-          }\n-\n-          @Override\n-          public void onError(ServerError error)\n-          {\n-             processNextEntry.execute();\n-             // Couldn't stat the file? Proceed anyway. If the file doesn't\n-             // exist, we'll let the downstream code be the one to show the\n-             // error.\n-             entry.action.execute(entry.file);\n-          }\n-        });\n-   }\n-\n-   private void openFile(FileSystemItem file)\n-   {\n-      openFile(file, fileTypeRegistry_.getTextTypeForFile(file));\n-   }\n-   \n-   private void openFile(FileSystemItem file,  TextFileType fileType)\n-   {\n-      openFile(file, \n-               fileType, \n-               new CommandWithArg<EditingTarget>() {\n-                  @Override\n-                  public void execute(EditingTarget arg)\n-                  {\n-                     \n-                  }\n-               });\n-   }\n-   \n-   private void openFile(final FileSystemItem file,\n-                         final TextFileType fileType,\n-                         final CommandWithArg<EditingTarget> executeOnSuccess)\n-   {\n-      // add this work to the queue\n-      openFileQueue_.add(new OpenFileEntry(file, fileType, executeOnSuccess));\n-      \n-      // begin queue processing if it's the only work in the queue\n-      if (openFileQueue_.size() == 1)\n-         processOpenFileQueue();\n-   }\n-   \n-   private void processOpenFileQueue()\n-   {\n-      // no work to do\n-      if (openFileQueue_.isEmpty())\n-         return;\n-      \n-      // find the first work unit\n-      final OpenFileEntry entry = openFileQueue_.peek();\n-      \n-      // define command to advance queue\n-      final Command processNextEntry = new Command()\n-            {\n-               @Override\n-               public void execute()\n-               {\n-                  openFileQueue_.remove();\n-                  if (!openFileQueue_.isEmpty())\n-                     processOpenFileQueue();\n-                  \n-               }\n-            };\n-      \n-      openFile(entry.file,\n-            entry.fileType,\n-            new ResultCallback<EditingTarget, ServerError>() {\n-               @Override\n-               public void onSuccess(EditingTarget target)\n-               {\n-                  processNextEntry.execute();\n-                  if (entry.executeOnSuccess != null)\n-                     entry.executeOnSuccess.execute(target);\n-               }\n-\n-               @Override\n-               public void onCancelled()\n-               {\n-                  super.onCancelled();\n-                  processNextEntry.execute();\n-               }\n-\n-               @Override\n-               public void onFailure(ServerError error)\n-               {\n-                  String message = error.getUserMessage();\n-                  \n-                  // see if a special message was provided\n-                  JSONValue errValue = error.getClientInfo();\n-                  if (errValue != null)\n-                  {\n-                     JSONString errMsg = errValue.isString();\n-                     if (errMsg != null)\n-                        message = errMsg.stringValue();\n-                  }\n-                  \n-                  globalDisplay_.showMessage(GlobalDisplay.MSG_ERROR,\n-                                             \"Error while opening file\",\n-                                             message);\n-\n-                  processNextEntry.execute();\n-               }\n-            });  \n-   }\n-   \n-   private void openNotebook(\n-         final FileSystemItem rmdFile, \n-         final SourceDocumentResult doc,\n-         final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      if (!StringUtil.isNullOrEmpty(doc.getDocPath()))\n-      {\n-         // this happens if we created the R Markdown file, or if the R Markdown\n-         // file on disk matched the one inside the notebook\n-         openFileFromServer(rmdFile, \n-               FileTypeRegistry.RMARKDOWN, resultCallback);\n-      }\n-      else if (!StringUtil.isNullOrEmpty(doc.getDocId()))\n-      {\n-         // this happens when we have to open an untitled buffer for the the\n-         // notebook (usually because the of a conflict between the Rmd on disk\n-         // and the one in the .nb.html file)\n-         server_.getSourceDocument(doc.getDocId(), \n-               new ServerRequestCallback<SourceDocument>()\n-         {\n-            @Override\n-            public void onResponseReceived(SourceDocument doc)\n-            {\n-               // create the editor\n-               EditingTarget target = \n-                     addTab(doc, OPEN_INTERACTIVE);\n-               \n-               // show a warning bar \n-               if (target instanceof TextEditingTarget)\n-               {\n-                  ((TextEditingTarget) target).showWarningMessage(\n-                        \"This notebook has the same name as an R Markdown \" +\n-                        \"file, but doesn't match it.\");\n-               }\n-               resultCallback.onSuccess(target);\n-            }\n-\n-            @Override\n-            public void onError(ServerError error)\n-            {\n-               \n-               globalDisplay_.showErrorMessage(\n-                  \"Notebook Open Failed\", \n-                  \"This notebook could not be opened. \" +\n-                  \"If the error persists, try removing the \" +\n-                  \"accompanying R Markdown file. \\n\\n\" +\n-                  error.getMessage());\n-               resultCallback.onFailure(error);\n-            }\n-         });\n-      }\n-   }\n-   \n-   private void openNotebook(final FileSystemItem rnbFile,\n-                             final TextFileType fileType,\n-                             final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      // construct path to .Rmd\n-      final String rnbPath = rnbFile.getPath();\n-      final String rmdPath = FilePathUtils.filePathSansExtension(rnbPath) + \".Rmd\";\n-      final FileSystemItem rmdFile = FileSystemItem.createFile(rmdPath);\n-      \n-      // if we already have associated .Rmd file open, then just edit it\n-      // TODO: should we perform conflict resolution here as well?\n-      if (openFileAlreadyOpen(rmdFile, resultCallback))\n-         return;\n-      \n-      // ask the server to extract the .Rmd, then open that\n-      Command extractRmdCommand = new Command()\n-      {\n-         @Override\n-         public void execute()\n-         {\n-            server_.extractRmdFromNotebook(\n-                  rnbPath,\n-                  new ServerRequestCallback<SourceDocumentResult>()\n-                  {\n-                     @Override\n-                     public void onResponseReceived(SourceDocumentResult doc)\n-                     {\n-                        openNotebook(rmdFile, doc, resultCallback);\n-                     }\n-\n-                     @Override\n-                     public void onError(ServerError error)\n-                     {\n-                        globalDisplay_.showErrorMessage(\"Notebook Open Failed\", \n-                              \"This notebook could not be opened. \\n\\n\" +\n-                              error.getMessage());\n-                        resultCallback.onFailure(error);\n-                     }\n-                  });\n-         }\n-      };\n-      \n-      dependencyManager_.withRMarkdown(\"R Notebook\", \"Using R Notebooks\", extractRmdCommand);\n-   }\n-   \n-   private boolean openFileAlreadyOpen(final FileSystemItem file,\n-                                       final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      // check to see if any local editors have the file open\n-      for (int i = 0; i < editors_.size(); i++)\n-      {\n-         EditingTarget target = editors_.get(i);\n-         String thisPath = target.getPath();\n-         if (thisPath != null\n-             && thisPath.equalsIgnoreCase(file.getPath()))\n-         {\n-            view_.selectTab(i);\n-            pMruList_.get().add(thisPath);\n-            if (resultCallback != null)\n-               resultCallback.onSuccess(target);\n-            return true;\n-         }\n-      }\n-      return false;\n-   }\n-\n-   // top-level wrapper for opening files. takes care of:\n-   //  - making sure the view is visible\n-   //  - checking whether it is already open and re-selecting its tab\n-   //  - prohibit opening very large files (>500KB)\n-   //  - confirmation of opening large files (>100KB)\n-   //  - finally, actually opening the file from the server\n-   //    via the call to the lower level openFile method\n-   private void openFile(final FileSystemItem file,\n-                         final TextFileType fileType,\n-                         final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      ensureVisible(true);\n-      \n-      if (fileType.isRNotebook())\n-      {\n-         openNotebook(file, fileType, resultCallback);\n-         return;\n-      }\n-\n-      if (file == null)\n-      {\n-         newDoc(fileType, resultCallback);\n-         return;\n-      }\n-\n-      if (openFileAlreadyOpen(file, resultCallback))\n-         return;\n-      \n-      EditingTarget target = editingTargetSource_.getEditingTarget(fileType);\n-\n-      if (file.getLength() > target.getFileSizeLimit())\n-      {\n-         if (resultCallback != null)\n-            resultCallback.onCancelled();\n-         showFileTooLargeWarning(file, target.getFileSizeLimit());\n-      }\n-      else if (file.getLength() > target.getLargeFileSize())\n-      {\n-         confirmOpenLargeFile(file, new Operation() {\n-            public void execute()\n-            {\n-               openFileFromServer(file, fileType, resultCallback);\n-            }\n-         }, new Operation() {\n-            public void execute()\n-            {\n-               // user (wisely) cancelled\n-               if (resultCallback != null)\n-                  resultCallback.onCancelled();\n-            }\n-         });\n-      }\n-      else\n-      {\n-         openFileFromServer(file, fileType, resultCallback);\n-      }\n-   }\n-  \n-   private void showFileTooLargeWarning(FileSystemItem file,\n-                                        long sizeLimit)\n-   {\n-      StringBuilder msg = new StringBuilder();\n-      msg.append(\"The file '\" + file.getName() + \"' is too \");\n-      msg.append(\"large to open in the source editor (the file is \");\n-      msg.append(StringUtil.formatFileSize(file.getLength()) + \" and the \");\n-      msg.append(\"maximum file size is \");\n-      msg.append(StringUtil.formatFileSize(sizeLimit) + \")\");\n-\n-      globalDisplay_.showMessage(GlobalDisplay.MSG_WARNING,\n-                                 \"Selected File Too Large\",\n-                                 msg.toString());\n-   }\n-\n-   private void confirmOpenLargeFile(FileSystemItem file,\n-                                     Operation openOperation,\n-                                     Operation noOperation)\n-   {\n-      StringBuilder msg = new StringBuilder();\n-      msg.append(\"The source file '\" + file.getName() + \"' is large (\");\n-      msg.append(StringUtil.formatFileSize(file.getLength()) + \") \");\n-      msg.append(\"and may take some time to open. \");\n-      msg.append(\"Are you sure you want to continue opening it?\");\n-      globalDisplay_.showYesNoMessage(GlobalDisplay.MSG_WARNING,\n-                                      \"Confirm Open\",\n-                                      msg.toString(),\n-                                      false, // Don't include cancel\n-                                      openOperation,\n-                                      noOperation,\n-                                      false);   // 'No' is default\n-   }\n-\n-   private void openFileFromServer(\n-         final FileSystemItem file,\n-         final TextFileType fileType,\n-         final ResultCallback<EditingTarget, ServerError> resultCallback)\n-   {\n-      final Command dismissProgress = globalDisplay_.showProgress(\n-                                                         \"Opening file...\");\n-\n-      server_.openDocument(\n-            file.getPath(),\n-            fileType.getTypeId(),\n-            userPrefs_.defaultEncoding().getValue(),\n-            new ServerRequestCallback<SourceDocument>()\n-            {\n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  dismissProgress.execute();\n-                  pMruList_.get().remove(file.getPath());\n-                  Debug.logError(error);\n-                  if (resultCallback != null)\n-                     resultCallback.onFailure(error);\n-               }\n-\n-               @Override\n-               public void onResponseReceived(SourceDocument document)\n-               {\n-                  // if we are opening for a source navigation then we \n-                  // need to force Rmds into source mode\n-                  if (openingForSourceNavigation_) \n-                  {\n-                     document.getProperties()._setBoolean(\n-                        TextEditingTarget.RMD_VISUAL_MODE, \n-                        false\n-                     );\n-                  }\n-                  \n-                  dismissProgress.execute();\n-                  pMruList_.get().add(document.getPath());\n-                  EditingTarget target = addTab(document, OPEN_INTERACTIVE);\n-                  if (resultCallback != null)\n-                     resultCallback.onSuccess(target);\n-               }\n-            });\n-   }\n-   \n-   Widget createWidget(EditingTarget target)\n-   {\n-      return target.asWidget();\n-   }\n-   \n-   private EditingTarget addTab(SourceDocument doc, int mode)\n-   {\n-      return addTab(doc, false, mode);\n-   }\n-   \n-   private EditingTarget addTab(SourceDocument doc, boolean atEnd, \n-         int mode)\n-   {\n-      // by default, add at the tab immediately after the current tab\n-      return addTab(doc, atEnd ? null : getPhysicalTabIndex() + 1,\n-            mode);\n-   }\n-\n-   private EditingTarget addTab(SourceDocument doc, Integer position, \n-         int mode)\n-   {\n-      final String defaultNamePrefix = editingTargetSource_.getDefaultNamePrefix(doc);\n-      final EditingTarget target = editingTargetSource_.getEditingTarget(\n-            doc, fileContext_, new Provider<String>()\n-            {\n-               public String get()\n-               {\n-                  return getNextDefaultName(defaultNamePrefix);\n-               }\n-            });\n-      \n-      final Widget widget = createWidget(target);\n-\n-      if (position == null)\n-      {\n-         editors_.add(target);\n-      }\n-      else\n-      {\n-         // we're inserting into an existing permuted tabset -- push aside \n-         // any tabs physically to the right of this tab\n-         editors_.add(position, target);\n-         for (int i = 0; i < tabOrder_.size(); i++)\n-         {\n-            int pos = tabOrder_.get(i);\n-            if (pos >= position)\n-               tabOrder_.set(i, pos + 1);\n-         }\n-\n-         // add this tab in its \"natural\" position\n-         tabOrder_.add(position, position);\n-      }\n-\n-      view_.addTab(widget,\n-                   target.getIcon(),\n-                   target.getId(),\n-                   target.getName().getValue(),\n-                   target.getTabTooltip(), // used as tooltip, if non-null\n-                   position,\n-                   true);\n-      fireDocTabsChanged();\n-\n-      target.getName().addValueChangeHandler(new ValueChangeHandler<String>()\n-      {\n-         public void onValueChange(ValueChangeEvent<String> event)\n-         {\n-            view_.renameTab(widget,\n-                            target.getIcon(),\n-                            event.getValue(),\n-                            target.getPath());\n-            fireDocTabsChanged();\n-         }\n-      });\n-\n-      view_.setDirty(widget, target.dirtyState().getValue());\n-      target.dirtyState().addValueChangeHandler(new ValueChangeHandler<Boolean>()\n-      {\n-         public void onValueChange(ValueChangeEvent<Boolean> event)\n-         {\n-            view_.setDirty(widget, event.getValue());\n-            manageCommands();\n-         }\n-      });\n-\n-      target.addEnsureVisibleHandler(new EnsureVisibleHandler()\n-      {\n-         public void onEnsureVisible(EnsureVisibleEvent event)\n-         {\n-            view_.selectTab(widget);\n-         }\n-      });\n-\n-      target.addCloseHandler(new CloseHandler<Void>()\n-      {\n-         public void onClose(CloseEvent<Void> voidCloseEvent)\n-         {\n-            view_.closeTab(widget, false);\n-         }\n-      });\n-      \n-      events_.fireEvent(new SourceDocAddedEvent(doc, mode));\n-      \n-      if (target instanceof TextEditingTarget && doc.isReadOnly())\n-      {\n-         ((TextEditingTarget) target).setIntendedAsReadOnly(\n-               JsUtil.toList(doc.getReadOnlyAlternatives()));\n-      }\n-      \n-      // adding a tab may enable commands that are only available when \n-      // multiple documents are open; if this is the second document, go check\n-      if (editors_.size() == 2)\n-         manageMultiTabCommands();\n-      \n-      // if the target had an editing session active, attempt to resume it\n-      if (doc.getCollabParams() != null)\n-         target.beginCollabSession(doc.getCollabParams());\n-      \n-      return target;\n-   }\n-\n-   private String getNextDefaultName(String defaultNamePrefix)\n-   {\n-      if (StringUtil.isNullOrEmpty(defaultNamePrefix))\n-      {\n-         defaultNamePrefix = \"Untitled\";\n-      }\n-      \n-      int max = 0;\n-      for (EditingTarget target : editors_)\n-      {\n-         String name = target.getName().getValue();\n-         max = Math.max(max, getUntitledNum(name, defaultNamePrefix));\n-      }\n-\n-      return defaultNamePrefix + (max + 1);\n-   }\n-\n-   private native final int getUntitledNum(String name, String prefix) /*-{\n-      var match = (new RegExp(\"^\" + prefix + \"([0-9]{1,5})$\")).exec(name);\n-      if (!match)\n-         return 0;\n-      return parseInt(match[1]);\n-   }-*/;\n-\n-   public void onInsertSource(final InsertSourceEvent event)\n-   {\n-      if (activeEditor_ != null\n-          && activeEditor_ instanceof TextEditingTarget\n-          && commands_.executeCode().isEnabled())\n-      {\n-         TextEditingTarget textEditor = (TextEditingTarget) activeEditor_;\n-         textEditor.insertCode(event.getCode(), event.isBlock());\n-      }\n-      else\n-      {\n-         newDoc(FileTypeRegistry.R,\n-                new ResultCallback<EditingTarget, ServerError>()\n-         {\n-            public void onSuccess(EditingTarget arg)\n-            {\n-               ((TextEditingTarget)arg).insertCode(event.getCode(),\n-                                                   event.isBlock());\n-            }\n-         });\n-      }\n-   }\n-\n-   public void onTabClosing(final TabClosingEvent event)\n-   {\n-      EditingTarget target = editors_.get(event.getTabIndex());\n-      if (!target.onBeforeDismiss())\n-         event.cancel();\n-   }\n-   \n-   @Override\n-   public void onTabClose(TabCloseEvent event)\n-   {\n-      // can't proceed if there is no active editor\n-      if (activeEditor_ == null)\n-         return;\n-\n-      if (event.getTabIndex() >= editors_.size())\n-         return; // Seems like this should never happen...?\n-\n-      final String activeEditorId = activeEditor_.getId();\n-\n-      if (editors_.get(event.getTabIndex()).getId() == activeEditorId)\n-      {\n-         // scan the source navigation history for an entry that can\n-         // be used as the next active tab (anything that doesn't have\n-         // the same document id as the currently active tab)\n-         SourceNavigation srcNav = sourceNavigationHistory_.scanBack(\n-               new SourceNavigationHistory.Filter()\n-               {\n-                  public boolean includeEntry(SourceNavigation navigation)\n-                  {\n-                     return navigation.getDocumentId() != activeEditorId;\n-                  }\n-               });\n-\n-         // see if the source navigation we found corresponds to an active\n-         // tab -- if it does then set this on the event\n-         if (srcNav != null)\n-         {\n-            for (int i=0; i<editors_.size(); i++)\n-            {\n-               if (srcNav.getDocumentId() == editors_.get(i).getId())\n-               {\n-                  view_.selectTab(i);\n-                  break;\n-               }\n-            }\n-         }\n-      }\n-   }\n-   \n-   private void closeTabIndex(int idx, boolean closeDocument)\n-   {\n-      EditingTarget target = editors_.remove(idx);\n-\n-      tabOrder_.remove(new Integer(idx));\n-      for (int i = 0; i < tabOrder_.size(); i++)\n-      {\n-         if (tabOrder_.get(i) > idx)\n-         {\n-            tabOrder_.set(i, tabOrder_.get(i) - 1);\n-         }\n-      }\n-\n-      target.onDismiss(closeDocument ? EditingTarget.DISMISS_TYPE_CLOSE :\n-         EditingTarget.DISMISS_TYPE_MOVE);\n-      if (activeEditor_ == target)\n-      {\n-         activeEditor_.onDeactivate();\n-         activeEditor_ = null;\n-      }\n-\n-      if (closeDocument)\n-      {\n-         events_.fireEvent(new DocTabClosedEvent(target.getId()));\n-         server_.closeDocument(target.getId(),\n-                               new VoidServerRequestCallback());\n-      }\n-\n-      manageCommands();\n-      fireDocTabsChanged();\n-\n-      if (view_.getTabCount() == 0)\n-      {\n-         sourceNavigationHistory_.clear();\n-         events_.fireEvent(new LastSourceDocClosedEvent());\n-      }\n-   }\n-\n-   public void onTabClosed(TabClosedEvent event)\n-   {\n-      closeTabIndex(event.getTabIndex(), !suspendDocumentClose_);\n-   }\n-\n-   \n-   @Override\n-   public void onTabReorder(TabReorderEvent event)\n-   {\n-      syncTabOrder();\n-      \n-      // sanity check: make sure we're moving from a valid location and to a\n-      // valid location\n-      if (event.getOldPos() < 0 || event.getOldPos() >= tabOrder_.size() ||\n-          event.getNewPos() < 0 || event.getNewPos() >= tabOrder_.size())\n-      {\n-         return;\n-      }\n-      \n-      // remove the tab from its old position\n-      int idx = tabOrder_.get(event.getOldPos());\n-      tabOrder_.remove(new Integer(idx));  // force type box \n-\n-      // add it to its new position \n-      tabOrder_.add(event.getNewPos(), idx);\n-      \n-      // sort the document IDs and send to the server\n-      ArrayList<String> ids = new ArrayList<String>();\n-      for (int i = 0; i < tabOrder_.size(); i++)\n-      {\n-         ids.add(editors_.get(tabOrder_.get(i)).getId());\n-      }\n-      server_.setDocOrder(ids, new VoidServerRequestCallback());\n-      \n-      // activate the tab \n-      setPhysicalTabIndex(event.getNewPos());\n-\n-      fireDocTabsChanged();\n-   }\n-\n-   private void syncTabOrder()\n-   {\n-      // ensure the tab order is synced to the list of editors\n-      for (int i = tabOrder_.size(); i < editors_.size(); i++)\n-      {\n-         tabOrder_.add(i);\n-      }\n-      for (int i = editors_.size(); i < tabOrder_.size(); i++)\n-      {\n-         tabOrder_.remove(i);\n-      }\n-   }\n-\n-   private void fireDocTabsChanged()\n-   {\n-      if (!initialized_)\n-         return;\n-      \n-      // ensure we have a tab order (we want the popup list to match the order\n-      // of the tabs)\n-      syncTabOrder();\n-\n-      String[] ids = new String[editors_.size()];\n-      FileIcon[] icons = new FileIcon[editors_.size()];\n-      String[] names = new String[editors_.size()];\n-      String[] paths = new String[editors_.size()];\n-      for (int i = 0; i < ids.length; i++)\n-      {\n-         EditingTarget target = editors_.get(tabOrder_.get(i));\n-         ids[i] = target.getId();\n-         icons[i] = target.getIcon();\n-         names[i] = target.getName().getValue();\n-         paths[i] = target.getPath();\n-      }\n-\n-      String activeId = (activeEditor_ != null)\n-            ? activeEditor_.getId()\n-            : null;\n-            \n-      events_.fireEvent(new DocTabsChangedEvent(activeId, ids, icons, names, paths));\n-\n-      view_.manageChevronVisibility();\n-   }\n-\n-   public void onSelection(SelectionEvent<Integer> event)\n-   {\n-      if (activeEditor_ != null)\n-         activeEditor_.onDeactivate();\n-\n-      activeEditor_ = null;\n-\n-      if (event.getSelectedItem() >= 0)\n-      {\n-         activeEditor_ = editors_.get(event.getSelectedItem());\n-         activeEditor_.onActivate();\n-         \n-         // let any listeners know this tab was activated\n-         events_.fireEvent(new DocTabActivatedEvent(\n-               activeEditor_.getPath(), \n-               activeEditor_.getId()));\n-\n-         // don't send focus to the tab if we're expecting a debug selection\n-         // event\n-         if (initialized_ && !isDebugSelectionPending())\n-         {\n-            Scheduler.get().scheduleDeferred(new ScheduledCommand()\n-            {\n-               public void execute()\n-               {\n-                  // presume that we will give focus to the tab\n-                  boolean focus = true;\n-                  \n-                  if (event instanceof DocTabSelectionEvent)\n+                  else\n                   {\n-                     // however, if this event was generated from a doc tab\n-                     // selection that did not have focus, don't steal focus\n-                     DocTabSelectionEvent tabEvent = (DocTabSelectionEvent) event;\n-                     focus = tabEvent.getFocus();\n-                  }\n-\n-                  if (focus && activeEditor_ != null)\n-                     activeEditor_.focus();\n-               }\n-            });\n-         }\n-         else if (isDebugSelectionPending())\n-         {\n-            // we're debugging, so send focus to the console instead of the \n-            // editor\n-            commands_.activateConsole().execute();\n-            clearPendingDebugSelection();\n-         }\n-      }\n-      \n-      if (initialized_)\n-         manageCommands();\n-   }\n-\n-   private void manageCommands()\n-   {\n-      manageCommands(false);\n-   }\n-   \n-   private void manageCommands(boolean forceSync)\n-   {\n-      boolean hasDocs = editors_.size() > 0;\n-\n-      commands_.newSourceDoc().setEnabled(true);\n-      commands_.closeSourceDoc().setEnabled(hasDocs);\n-      commands_.closeAllSourceDocs().setEnabled(hasDocs);\n-      commands_.nextTab().setEnabled(hasDocs);\n-      commands_.previousTab().setEnabled(hasDocs);\n-      commands_.firstTab().setEnabled(hasDocs);\n-      commands_.lastTab().setEnabled(hasDocs);\n-      commands_.switchToTab().setEnabled(hasDocs);\n-      commands_.setWorkingDirToActiveDoc().setEnabled(hasDocs);\n-\n-      HashSet<AppCommand> newCommands = activeEditor_ != null\n-            ? activeEditor_.getSupportedCommands()\n-            : new HashSet<AppCommand>();\n-      \n-      if (forceSync)\n-      {\n-         for (AppCommand command : activeCommands_)\n-         {\n-            command.setEnabled(false);\n-            command.setVisible(false);\n-         }\n-         \n-         for (AppCommand command : newCommands)\n-         {\n-            command.setEnabled(true);\n-            command.setVisible(true);\n-         }\n-      }\n-      else\n-      {\n-         HashSet<AppCommand> commandsToEnable = new HashSet<AppCommand>(newCommands);\n-         commandsToEnable.removeAll(activeCommands_);\n-\n-         HashSet<AppCommand> commandsToDisable = new HashSet<AppCommand>(activeCommands_);\n-         commandsToDisable.removeAll(newCommands);\n-\n-         for (AppCommand command : commandsToEnable)\n-         {\n-            command.setEnabled(true);\n-            command.setVisible(true);\n-         }\n-\n-         for (AppCommand command : commandsToDisable)\n-         {\n-            command.setEnabled(false);\n-            command.setVisible(false);\n-         }\n-      }\n-      \n-      // commands which should always be visible even when disabled\n-      commands_.saveSourceDoc().setVisible(true);\n-      commands_.saveSourceDocAs().setVisible(true);\n-      commands_.printSourceDoc().setVisible(true);\n-      commands_.setWorkingDirToActiveDoc().setVisible(true);\n-      commands_.debugBreakpoint().setVisible(true);\n-      \n-      // manage synctex commands\n-      manageSynctexCommands();\n-      \n-      // manage vcs commands\n-      manageVcsCommands();\n-      \n-      // manage save and save all\n-      manageSaveCommands();\n-      \n-      // manage source navigation\n-      manageSourceNavigationCommands();\n-      \n-      // manage RSConnect commands\n-      manageRSConnectCommands();\n-      \n-      // manage R Markdown commands\n-      manageRMarkdownCommands();\n-      \n-      // manage multi-tab commands\n-      manageMultiTabCommands();\n-      \n-      manageTerminalCommands();\n-      \n-      activeCommands_ = newCommands;\n-      \n-      // give the active editor a chance to manage commands\n-      if (activeEditor_ != null)\n-         activeEditor_.manageCommands();\n-\n-      assert verifyNoUnsupportedCommands(newCommands)\n-            : \"Unsupported commands detected (please add to Source.dynamicCommands_)\";\n-   }\n-   \n-   private void manageMultiTabCommands()\n-   {\n-      boolean hasMultipleDocs = editors_.size() > 1;\n-\n-      // special case--these editing targets always support popout, but it's\n-      // nonsensical to show it if it's the only tab in a satellite; hide it in\n-      // this case\n-      if (commands_.popoutDoc().isEnabled() &&\n-          activeEditor_ != null &&\n-          (activeEditor_ instanceof TextEditingTarget ||\n-           activeEditor_ instanceof CodeBrowserEditingTarget) &&\n-          !SourceWindowManager.isMainSourceWindow())\n-      {\n-         commands_.popoutDoc().setVisible(hasMultipleDocs);\n-      }\n-      \n-      commands_.closeOtherSourceDocs().setEnabled(hasMultipleDocs);\n-   }\n-   \n-   private void manageSynctexCommands()\n-   {\n-      // synctex commands are enabled if we have synctex for the active editor\n-      boolean synctexAvailable = synctex_.isSynctexAvailable();\n-      if (synctexAvailable)\n-      {\n-         if ((activeEditor_ != null) && \n-             (activeEditor_.getPath() != null) &&\n-             activeEditor_.canCompilePdf())\n-         {\n-            synctexAvailable = synctex_.isSynctexAvailable();\n-         }\n-         else\n-         {\n-            synctexAvailable = false;\n-         }\n-      }\n-     \n-      synctex_.enableCommands(synctexAvailable);\n-   }\n-   \n-   private void manageVcsCommands()\n-   {\n-      // manage availablity of vcs commands\n-      boolean vcsCommandsEnabled = \n-            session_.getSessionInfo().isVcsEnabled() &&\n-            (activeEditor_ != null) &&\n-            (activeEditor_.getPath() != null) &&\n-            activeEditor_.getPath().startsWith(\n-                  session_.getSessionInfo().getActiveProjectDir().getPath());\n-      \n-      commands_.vcsFileLog().setVisible(vcsCommandsEnabled);\n-      commands_.vcsFileLog().setEnabled(vcsCommandsEnabled);\n-      commands_.vcsFileDiff().setVisible(vcsCommandsEnabled);\n-      commands_.vcsFileDiff().setEnabled(vcsCommandsEnabled);\n-      commands_.vcsFileRevert().setVisible(vcsCommandsEnabled);\n-      commands_.vcsFileRevert().setEnabled(vcsCommandsEnabled);\n-          \n-      if (vcsCommandsEnabled)\n-      {\n-         String name = FileSystemItem.getNameFromPath(activeEditor_.getPath());\n-         commands_.vcsFileDiff().setMenuLabel(\"_Diff \\\"\" + name + \"\\\"\");\n-         commands_.vcsFileLog().setMenuLabel(\"_Log of \\\"\" + name +\"\\\"\");\n-         commands_.vcsFileRevert().setMenuLabel(\"_Revert \\\"\" + name + \"\\\"...\");\n-      }\n-      \n-      boolean isGithubRepo = session_.getSessionInfo().isGithubRepository();\n-      if (vcsCommandsEnabled && isGithubRepo)\n-      {\n-         String name = FileSystemItem.getNameFromPath(activeEditor_.getPath());\n-         \n-         commands_.vcsViewOnGitHub().setVisible(true);\n-         commands_.vcsViewOnGitHub().setEnabled(true);\n-         commands_.vcsViewOnGitHub().setMenuLabel(\n-                                  \"_View \\\"\" + name + \"\\\" on GitHub\");\n-         \n-         commands_.vcsBlameOnGitHub().setVisible(true);\n-         commands_.vcsBlameOnGitHub().setEnabled(true);\n-         commands_.vcsBlameOnGitHub().setMenuLabel(\n-                                  \"_Blame \\\"\" + name + \"\\\" on GitHub\");\n-      }\n-      else\n-      {\n-         commands_.vcsViewOnGitHub().setVisible(false);\n-         commands_.vcsViewOnGitHub().setEnabled(false);\n-         commands_.vcsBlameOnGitHub().setVisible(false);\n-         commands_.vcsBlameOnGitHub().setEnabled(false);\n-      }\n-   }\n-   \n-   private void manageRSConnectCommands()\n-   {\n-      boolean rsCommandsAvailable = \n-            SessionUtils.showPublishUi(session_, userState_) &&\n-            (activeEditor_ != null) &&\n-            (activeEditor_.getPath() != null) &&\n-            ((activeEditor_.getExtendedFileType() != null &&\n-              activeEditor_.getExtendedFileType() .startsWith(SourceDocument.XT_SHINY_PREFIX)) ||\n-              activeEditor_.getExtendedFileType() == SourceDocument.XT_RMARKDOWN ||\n-              activeEditor_.getExtendedFileType() == SourceDocument.XT_PLUMBER_API);\n-      commands_.rsconnectDeploy().setVisible(rsCommandsAvailable);\n-      if (activeEditor_ != null)\n-      {\n-         String deployLabel = null;\n-         if (activeEditor_.getExtendedFileType() != null)\n-         {\n-            if (activeEditor_.getExtendedFileType().startsWith(SourceDocument.XT_SHINY_PREFIX))\n-            {\n-               deployLabel = \"Publish Application...\";\n-            }\n-            else if (activeEditor_.getExtendedFileType() == SourceDocument.XT_PLUMBER_API)\n-            {\n-               deployLabel = \"Publish Plumber API...\"; \n-            }\n-         }\n-         if (deployLabel == null)\n-            deployLabel = \"Publish Document...\";\n-   \n-         commands_.rsconnectDeploy().setLabel(deployLabel);\n-      }\n-      commands_.rsconnectConfigure().setVisible(rsCommandsAvailable);\n-   }\n-   \n-   private void manageRMarkdownCommands()\n-   {\n-      boolean rmdCommandsAvailable = \n-            session_.getSessionInfo().getRMarkdownPackageAvailable() &&\n-            (activeEditor_ != null) &&\n-            activeEditor_.getExtendedFileType() == SourceDocument.XT_RMARKDOWN;\n-      commands_.editRmdFormatOptions().setVisible(rmdCommandsAvailable);\n-      commands_.editRmdFormatOptions().setEnabled(rmdCommandsAvailable);\n-   }\n-   \n-   private void manageSaveCommands()\n-   {\n-      boolean saveEnabled = (activeEditor_ != null) &&\n-            activeEditor_.isSaveCommandActive();\n-      commands_.saveSourceDoc().setEnabled(saveEnabled);\n-      manageSaveAllCommand();\n-   }\n-   \n-   \n-   private void manageSaveAllCommand()\n-   {\n-      // if source windows are open, managing state of the command becomes\n-      // complicated, so leave it enabled\n-      if (pWindowManager_.get().areSourceWindowsOpen())\n-      {\n-         commands_.saveAllSourceDocs().setEnabled(true);\n-         return;\n-      }\n-\n-      // if one document is dirty then we are enabled\n-      for (EditingTarget target : editors_)\n-      {\n-         if (target.isSaveCommandActive())\n-         {\n-            commands_.saveAllSourceDocs().setEnabled(true);\n-            return;\n+                     // force highlight mode if requested\n+                     if (forceHighlightMode)\n+                        target.forceLineHighlighting();\n+                     \n+                     // now navigate to the new position\n+                     boolean highlight = \n+                           navMethod == NavigationMethods.HIGHLIGHT_LINE &&\n+                           !userPrefs_.highlightSelectedLine().getValue();\n+                     target.navigateToPosition(srcPosition,\n+                                               false,\n+                                               highlight);\n+                  }\n+               }\n+            });\n          }\n-      }\n-      \n-      // not one was dirty, disabled\n-      commands_.saveAllSourceDocs().setEnabled(false);\n-   }\n-   \n-   private void manageTerminalCommands()\n-   {\n-      if (!session_.getSessionInfo().getAllowShell())\n-         commands_.sendToTerminal().setVisible(false);\n-   }\n-   \n-   private boolean verifyNoUnsupportedCommands(HashSet<AppCommand> commands)\n-   {\n-      HashSet<AppCommand> temp = new HashSet<AppCommand>(commands);\n-      temp.removeAll(dynamicCommands_);\n-      return temp.size() == 0;\n-   }\n-   \n-   private void pasteFileContentsAtCursor(final String path, final String encoding)\n-   {\n-      if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n+      };\n+\n+      if (navResult.getType() == NavigationResult.RESULT_RELOCATE)\n       {\n-         final TextEditingTarget target = (TextEditingTarget) activeEditor_;\n-         server_.getFileContents(path, encoding, new ServerRequestCallback<String>()\n+         server_.getSourceDocument(navResult.getDocId(),\n+               new ServerRequestCallback<SourceDocument>()\n          {\n             @Override\n-            public void onResponseReceived(String content)\n+            public void onResponseReceived(final SourceDocument doc)\n             {\n-               target.insertCode(content, false);\n+               editingTargetAction.execute(columnManager_.addTab(doc, OPEN_REPLAY, null));\n             }\n \n             @Override\n             public void onError(ServerError error)\n             {\n-               Debug.logError(error);\n+               globalDisplay_.showErrorMessage(\"Document Tab Move Failed\", \n+                     \"Couldn't move the tab to this window: \\n\" + \n+                      error.getMessage());\n             }\n          });\n+         return;\n       }\n-   }\n-   \n-   private void pasteRCodeExecutionResult(final String code)\n-   {\n-      server_.executeRCode(code, new ServerRequestCallback<String>()\n+\n+      final CommandWithArg<FileSystemItem> action = new CommandWithArg<FileSystemItem>()\n       {\n          @Override\n-         public void onResponseReceived(String output)\n+         public void execute(FileSystemItem file)\n          {\n-            if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n-            {\n-               TextEditingTarget editor = (TextEditingTarget) activeEditor_;\n-               editor.insertCode(output, false);\n-            }\n+            // set flag indicating we are opening for a source navigation\n+            columnManager_.setOpeningForSourceNavigation(position != null || pattern != null);\n+            \n+            columnManager_.openFile(file,\n+                     fileType,\n+                     (target) -> {\n+                        columnManager_.setOpeningForSourceNavigation(false);\n+                        editingTargetAction.execute(target);\n+                     });      \n          }\n+      };\n \n-         @Override\n-         public void onError(ServerError error)\n+      // If this is a debug navigation, we only want to treat this as a full\n+      // file open if the file isn't already open; otherwise, we can just\n+      // highlight in place.\n+      if (isDebugNavigation)\n+      {\n+         columnManager_.startDebug();\n+         \n+         EditingTarget target = columnManager_.findEditorByPath(file.getPath());\n+         if (target != null)\n          {\n-            Debug.logError(error);\n+            // the file's open; just update its highlighting\n+            if (navMethod == NavigationMethods.DEBUG_END)\n+            {\n+               target.endDebugHighlighting();\n+            }\n+            else\n+            {\n+               columnManager_.selectTab(target);\n+               editingTargetAction.execute(target);\n+            }\n+            return;\n          }\n-      });\n-   }\n-   \n-   private void reflowText()\n-   {\n-      if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n+         \n+         // If we're here, the target file wasn't open in an editor. Don't\n+         // open a file just to turn off debug highlighting in the file!\n+         if (navMethod == NavigationMethods.DEBUG_END)\n+            return;\n+      }\n+\n+      // Warning: event.getFile() can be null (e.g. new Sweave document)\n+      if (file != null && file.getLength() < 0)\n       {\n-         TextEditingTarget editor = (TextEditingTarget) activeEditor_;\n-         editor.reflowText();\n+         statQueue_.add(new StatFileEntry(file, action));\n+         if (statQueue_.size() == 1)\n+            processStatQueue();\n       }\n-   }\n-   \n-   private void reindent()\n-   {\n-      if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n+      else\n       {\n-         TextEditingTarget editor = (TextEditingTarget) activeEditor_;\n-         editor.getDocDisplay().reindent();\n+         action.execute(file);\n       }\n    }\n    \n-   private void editFile(final String path)\n+   private void processStatQueue()\n    {\n-      server_.ensureFileExists(\n-            path,\n-            new ServerRequestCallback<Boolean>()\n+      if (statQueue_.isEmpty())\n+         return;\n+      final StatFileEntry entry = statQueue_.peek();\n+      final Command processNextEntry = new Command()\n             {\n                @Override\n-               public void onResponseReceived(Boolean success)\n+               public void execute()\n                {\n-                  if (success)\n-                  {\n-                     FileSystemItem file = FileSystemItem.createFile(path);\n-                     openFile(file);\n-                  }\n+                  statQueue_.remove();\n+                  if (!statQueue_.isEmpty())\n+                     processStatQueue();\n                }\n+            };\n+       \n+       server_.stat(entry.file.getPath(), new ServerRequestCallback<FileSystemItem>()\n+       {\n+          @Override\n+          public void onResponseReceived(FileSystemItem response)\n+          {\n+             processNextEntry.execute();\n+             entry.action.execute(response);\n+          }\n \n-               @Override\n-               public void onError(ServerError error)\n-               {\n-                  Debug.logError(error);\n-               }\n-            });\n+          @Override\n+          public void onError(ServerError error)\n+          {\n+             processNextEntry.execute();\n+             // Couldn't stat the file? Proceed anyway. If the file doesn't\n+             // exist, we'll let the downstream code be the one to show the\n+             // error.\n+             entry.action.execute(entry.file);\n+          }\n+        });\n    }\n-   \n-   private void showHelpAtCursor()\n+\n+   Widget createWidget(EditingTarget target)\n    {\n-      if (activeEditor_ != null && activeEditor_ instanceof TextEditingTarget)\n+      return target.asWidget();\n+   }\n+\n+   public void onInsertSource(final InsertSourceEvent event)\n+   {\n+\n+      if (!columnManager_.insertSource(event.getCode(), event.isBlock()))\n       {\n-         TextEditingTarget editor = (TextEditingTarget) activeEditor_;\n-         editor.showHelpAtCursor();\n+         columnManager_.newDoc(FileTypeRegistry.R,\n+                        new ResultCallback<EditingTarget, ServerError>()\n+         {\n+            public void onSuccess(EditingTarget arg)\n+            {\n+               ((TextEditingTarget)arg).insertCode(event.getCode(),\n+                                                   event.isBlock());\n+            }\n+         });\n       }\n    }\n \n", "next_change": {"commit": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c7e5ea0a19..8f40b7dd15 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2031,7 +2195,9 @@ public class Source implements InsertSourceHandler,\n    {\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         fileTypeRegistry_.editFile(event.getFile());\n+         FileSystemItem file = event.getFile();\n+         file.setFocusOnNavigate(true);\n+         fileTypeRegistry_.editFile(file);\n       }\n    }\n \n", "next_change": {"commit": "e52ffa8383f512966ced592117a0897809e3fdb1", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 8f40b7dd15..c0dddba48e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2197,7 +2220,7 @@ public class Source implements InsertSourceHandler,\n       {\n          FileSystemItem file = event.getFile();\n          file.setFocusOnNavigate(true);\n-         fileTypeRegistry_.editFile(file);\n+         fileTypeRegistry_.editFile(file, event.getFilePosition());\n       }\n    }\n \n", "next_change": {"commit": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c0dddba48e..665eb1ca1b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2221,6 +2281,12 @@ public class Source implements InsertSourceEvent.Handler,\n          FileSystemItem file = event.getFile();\n          file.setFocusOnNavigate(true);\n          fileTypeRegistry_.editFile(file, event.getFilePosition());\n+\n+         String callback = event.getCallback();\n+         if (callback.length() > 0)\n+         {\n+            server_.invokeFileEditCallback(callback, event.getFile().getPath(), new VoidServerRequestCallback());\n+         }\n       }\n    }\n \n", "next_change": {"commit": "018d0b22a49247a446af15ad1853de2183c46358", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 665eb1ca1b..50831946fb 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -2281,12 +2281,6 @@ public class Source implements InsertSourceEvent.Handler,\n          FileSystemItem file = event.getFile();\n          file.setFocusOnNavigate(true);\n          fileTypeRegistry_.editFile(file, event.getFilePosition());\n-\n-         String callback = event.getCallback();\n-         if (callback.length() > 0)\n-         {\n-            server_.invokeFileEditCallback(callback, event.getFile().getPath(), new VoidServerRequestCallback());\n-         }\n       }\n    }\n \n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwOTcwMQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424609701", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:28:58Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatellitePresenter.java", "diffHunk": "@@ -29,7 +29,7 @@\n    {}", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwOTk1OA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424609958", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:29:26Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java", "diffHunk": "@@ -49,6 +49,7 @@ public SourceSatelliteWindow(Provider<EventBus> pEventBus,\n                                 Provider<SourceWindow> pSourceWindow,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "8775dde14959f79c9ffb2450f6d93b1e5342e6a4", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java\nindex 3ec6f3a39b..14d46a02fa 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceSatelliteWindow.java\n", "chunk": "@@ -43,7 +43,7 @@ public class SourceSatelliteWindow extends SatelliteWindow\n \n    @Inject\n    public SourceSatelliteWindow(Provider<EventBus> pEventBus,\n-                                Provider<FontSizeManager> pFSManager, \n+                                Provider<FontSizeManager> pFSManager,\n                                 Provider<SourceSatellitePresenter> pPresenter,\n                                 Provider<SourceWindowManager> pWindowManager,\n                                 Provider<SourceWindow> pSourceWindow,\n", "next_change": null}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "8775dde14959f79c9ffb2450f6d93b1e5342e6a4", "committedDate": "2021-01-13 14:52:30 -0800", "message": "whitespace cleanup"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMTE1NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424611155", "body": "update file copyright year", "bodyText": "update file copyright year", "bodyHTML": "<p dir=\"auto\">update file copyright year</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:31:18Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java", "diffHunk": "@@ -69,12 +69,12 @@ public SourceWindow(\n          Provider<DesktopHooks> pDesktopHooks,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java\nindex 3ddc98d910..07e737f732 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindow.java\n", "chunk": "@@ -60,7 +59,7 @@ import com.google.inject.Provider;\n import com.google.inject.Singleton;\n \n @Singleton\n-public class SourceWindow implements LastSourceDocClosedHandler,\n+public class SourceWindow implements LastSourceDocClosedEvent.Handler,\n                                      PopoutDocEvent.Handler,\n                                      DocTabDragStartedEvent.Handler\n {\n", "next_change": null}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "2c463849134486cd75835dd9ffc40a449ad7bafd", "committedDate": "2022-05-31 15:04:13 -0600", "message": "close editors when satellite window closed"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMTgyNA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424611824", "body": "update file header year", "bodyText": "update file header year", "bodyHTML": "<p dir=\"auto\">update file header year</p>", "author": "gtritchie", "createdAt": "2020-05-13T17:32:24Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java", "diffHunk": "@@ -102,7 +102,7 @@ public SourceWindowManager(\n          EventBus events,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "f2b7d29fbd43ce1a1b3833d3705131212b8ec686", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\nindex ba00d53bf5..33385aec40 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\n", "chunk": "@@ -102,7 +101,7 @@ public class SourceWindowManager implements PopoutDocEvent.Handler,\n          EventBus events,\n          FileTypeRegistry registry,\n          GlobalDisplay display, \n-         Source source,\n+         Provider<Source> source,\n          Session session,\n          UserPrefs uiPrefs)\n    {\n", "next_change": {"commit": "6d140858c404293e7a612c5b86e3ddcf39fb11df", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\nindex 33385aec40..9c10bcc581 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceWindowManager.java\n", "chunk": "@@ -90,17 +90,18 @@ public class SourceWindowManager implements PopoutDocEvent.Handler,\n                                             CollabEditEndedEvent.Handler,\n                                             DocFocusedEvent.Handler,\n                                             EditorCommandDispatchEvent.Handler,\n-                                            RestartStatusEvent.Handler\n+                                            RestartStatusEvent.Handler,\n+                                            ScrollToPositionEvent.Handler\n {\n    @Inject\n    public SourceWindowManager(\n-         Provider<SatelliteManager> pSatelliteManager, \n+         Provider<SatelliteManager> pSatelliteManager,\n          Provider<Satellite> pSatellite,\n          Provider<WorkbenchContext> pWorkbenchContext,\n          SourceServerOperations server,\n          EventBus events,\n          FileTypeRegistry registry,\n-         GlobalDisplay display, \n+         GlobalDisplay display,\n          Provider<Source> source,\n          Session session,\n          UserPrefs uiPrefs)\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "f2b7d29fbd43ce1a1b3833d3705131212b8ec686", "committedDate": "2020-06-30 18:13:14 -0700", "message": "fix injection issue between SourceWindowManager and SourceColumnManager"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "d251fa5ad970fe63469e87667c5c7d32ee1c20db", "committedDate": "2020-08-13 11:13:21 -0400", "message": "prevent event from being fired infinietly"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "6d140858c404293e7a612c5b86e3ddcf39fb11df", "committedDate": "2020-09-16 10:43:20 -0700", "message": "whitespace cleanup"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "f2f5edededa3424a585e5ab197e070e01e869f23", "committedDate": "2021-03-03 16:22:23 -0800", "message": "remove IE11-specific hacks in GWT"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjczMA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424612730", "body": "labmda: `() -> {}`", "bodyText": "labmda: () -> {}", "bodyHTML": "<p dir=\"auto\">labmda: <code>() -&gt; {}</code></p>", "author": "gtritchie", "createdAt": "2020-05-13T17:33:55Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -5574,24 +5574,36 @@ public void execute()\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1f60ac243a..a97f15a626 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5580,13 +5580,7 @@ public class TextEditingTarget implements\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1f60ac243a..a97f15a626 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5580,13 +5580,7 @@ public class TextEditingTarget implements\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n", "next_change": {"commit": "5e484a920b7a562731dd16e843dbcec18b4d99c0", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex a97f15a626..66d5f1f412 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5574,24 +5606,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 66d5f1f412..cf9094d361 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5606,24 +5574,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "a8f84cb9aa09cbb77caea7501fb3516f44813b6e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex cf9094d361..f0aa58d3df 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5574,24 +5549,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex f0aa58d3df..d04562ddd1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5549,24 +5637,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "24812bc412a1e5ad03eff704859f98c37512e863", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex d04562ddd1..0a7de314e7 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5637,24 +5549,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "8ad93ac44043cf7eabb65c49a8e143f30a793cdf", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 0a7de314e7..1c2b1cb76a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5549,24 +5639,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1c2b1cb76a..ceddaade7b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5658,7 +5679,7 @@ public class TextEditingTarget implements\n          }\n       }, () -> {}, \"Run Plumber API\");\n    }\n-   \n+\n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "831096a7a0277c9b2006b9dbf94551c5bf863379", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex ceddaade7b..e202931b4c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5657,29 +5546,29 @@ public class TextEditingTarget implements\n          prefs_.writeUserPrefs();\n       }\n    }\n-\n+   \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n-\n+   \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n-\n+   \n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "d6cea202c0db3c0cf6510e64822ab7262bd6e165", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex e202931b4c..41069aceaf 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5546,29 +5714,29 @@ public class TextEditingTarget implements\n          prefs_.writeUserPrefs();\n       }\n    }\n-   \n+\n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n-   \n+\n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n-   \n+\n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "ececfe5b911202dda97384babc1205e46ca9ab7f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 41069aceaf..49e9a51256 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5739,7 +6157,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, () -> {\n+      saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "9ff0544e1387a1e175a82f6c2dc928868c35bc77", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 49e9a51256..518c9d1079 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6157,7 +6138,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, true, () -> {\n+      saveThenExecute(null, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "7dc3138210711fc78ee925ccc59c9fe4a6c49af5", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 518c9d1079..6c64d688db 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6138,7 +6190,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, () -> {\n+      saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "1cc3433fbde287105d3de5a9821e53b7b243c131", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 6c64d688db..c1dc5ff68e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6192,8 +6536,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               \"Executing Python\",\n-               \"Sourcing Python scripts\",\n+               constants_.sourcePythonProgressCaption(),\n+               constants_.sourcePythonUserPrompt(),\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": {"commit": "f0e6f6aa35d1edad14b93225ecc488f195c0c13a", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex c1dc5ff68e..0c18fbb98e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6536,8 +6569,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               constants_.sourcePythonProgressCaption(),\n-               constants_.sourcePythonUserPrompt(),\n+               \"Executing Python\",\n+               \"Sourcing Python scripts\",\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": {"commit": "ce0caa280d30ce48e44b479ab619ad25ca9446d7", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 0c18fbb98e..3535c0d30d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6569,8 +6536,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               \"Executing Python\",\n-               \"Sourcing Python scripts\",\n+               constants_.sourcePythonProgressCaption(),\n+               constants_.sourcePythonUserPrompt(),\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5e484a920b7a562731dd16e843dbcec18b4d99c0", "committedDate": "2020-05-14 09:21:47 -0400", "message": "infrastructure for cannonical saves"}, {"oid": "57c29ed58605aa85f4b6644669d57511dda5a9be", "committedDate": "2020-05-14 10:09:22 -0400", "message": "method to get cannonical markdown from editor w/o mutating the active document"}, {"oid": "d09bc61cc57e8d350bc102f69484145c47be4ecd", "committedDate": "2020-05-14 12:53:18 -0400", "message": "use canonical setting in source mode"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6599719c433bbaa13bb87526ecfc726a451e3b25", "committedDate": "2020-05-14 16:36:00 -0400", "message": "Merge remote-tracking branch 'origin/master' into feature/panmirror-dev"}, {"oid": "6fe237e35d3ac893bd6b2ab0cc6e30e6542c9977", "committedDate": "2020-05-15 07:24:38 -0400", "message": "don't use incremental diffing when wrap column changes"}, {"oid": "bae7f1009c8f96840d51a4495c0c72491af7cd45", "committedDate": "2020-05-15 07:35:42 -0400", "message": "preserve cursor position during canonical saves from source mode"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "de24855f53ca952d0a94f21cbe4e9760295cd31f", "committedDate": "2020-05-18 11:10:34 -0700", "message": "suspend change detection handlers during document init (#6905)"}, {"oid": "3311497be094885f3ed42ae017cd111b1f5c384a", "committedDate": "2020-05-20 06:21:35 -0400", "message": "visual mode find button location consistent w/ source mode"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "a8f84cb9aa09cbb77caea7501fb3516f44813b6e", "committedDate": "2020-05-22 14:54:32 -0500", "message": "add checkbox and toggle; WIP .bind() method (#6689)"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "220876001a17ec5fd0d0ed8207755d17c2c7cf89", "committedDate": "2020-05-28 11:11:10 -0400", "message": "correctly reflect outline latch state for new documents"}, {"oid": "c66a709a5c797ac5d8a2c8646eb8a6d396e9bfc5", "committedDate": "2020-05-29 17:04:30 -0700", "message": "move command palette into its own package"}, {"oid": "bb4ad14a0080dc34a11e448b7ef69bb8c5773fc0", "committedDate": "2020-06-01 16:29:01 -0700", "message": "complete refactor to command palette source"}, {"oid": "52cb5ca4fe4818d0e91c6474be30887f00b19328", "committedDate": "2020-06-02 11:17:50 -0700", "message": "complete refactor separating UI from palette item"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "55dc4cd6757baaa517bd63984f95d0cb16b6618d", "committedDate": "2020-06-05 18:07:21 -0700", "message": "more accurately set the active column and editor"}, {"oid": "762c1e40060aab16670ddccecca52414b0e2e5aa", "committedDate": "2020-06-06 10:14:29 -0700", "message": "move console-related preferences to their own pane (#7052)"}, {"oid": "5ac4296496a0574cf0edf95119d789df5ac67b86", "committedDate": "2020-06-09 15:59:24 -0400", "message": "insert code chunk commands"}, {"oid": "24812bc412a1e5ad03eff704859f98c37512e863", "committedDate": "2020-06-09 17:03:06 -0500", "message": "invoking UserPrefs method"}, {"oid": "8ad93ac44043cf7eabb65c49a8e143f30a793cdf", "committedDate": "2020-06-10 10:57:05 -0700", "message": "move console-related preferences to their own pane (#7052)"}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "b05e15e98d5dec936f440319aa15d74615743fc3", "committedDate": "2020-06-10 13:22:52 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "ee9fb3a94ab742193d42813db3d725f376af1651", "committedDate": "2020-06-13 09:31:19 -0400", "message": "refactor visual mode controller into several source files"}, {"oid": "4a5046f92f55bc1a6b3104db8a5ff470cadfccc3", "committedDate": "2020-06-15 12:21:25 -0700", "message": "Merge pull request #7079 from rstudio/feature/source-columns"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "65772ce3005f0bee20884b0210aff8b13f4ec35c", "committedDate": "2020-06-16 09:13:10 -0700", "message": "give html_notebook its own extended type"}, {"oid": "1d578c645300ec9572242a43f4c0e1698252ada1", "committedDate": "2020-06-18 09:29:15 -0700", "message": "Rainbow parentheses feature (#7027)"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "3ea75f496088f5da2b062855fede62032afbaa89", "committedDate": "2020-06-23 12:32:14 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "79f7a3726295def51c71a54293844f5db0922519", "committedDate": "2020-06-23 17:35:58 -0700", "message": "create AppCommand toolbar option that binds with an editor"}, {"oid": "831096a7a0277c9b2006b9dbf94551c5bf863379", "committedDate": "2020-06-24 14:15:10 -0500", "message": "tinkering"}, {"oid": "62bcdff5ffb11796896bf804bff0fb071258fd75", "committedDate": "2020-06-25 12:27:12 -0500", "message": "this compiles..."}, {"oid": "81942b6f9095f03b36dc6eba471a532894d8bab5", "committedDate": "2020-06-25 15:53:43 -0500", "message": "per discussion on issue (#6689)"}, {"oid": "d6cea202c0db3c0cf6510e64822ab7262bd6e165", "committedDate": "2020-06-26 07:43:33 -0400", "message": "working version of source navigation for visual mode"}, {"oid": "121dffbc2e9ae16e06ee3fe45636ca3d6ffaa87b", "committedDate": "2020-06-26 14:11:55 -0400", "message": "make switching from source to visual a navigation event"}, {"oid": "1e1a0bd276ca36a4b8fb11b373a8d90ad4fd2b9c", "committedDate": "2020-06-26 14:03:19 -0700", "message": "avoid unintended duplication of editing targets (#7236)"}, {"oid": "a9c9db0bab49a7c75f3588dca54b02522b093644", "committedDate": "2020-06-27 08:27:27 -0400", "message": "record navigation position when switching source/visual mode"}, {"oid": "fb6dabdc3364fbd503b47fd9893b3001a3d98dfc", "committedDate": "2020-06-27 08:34:20 -0400", "message": "Merge remote-tracking branch 'origin/master' into feature/panmirror-dev"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "91c29d64e0500c496b180df767404b0c20668ef5", "committedDate": "2020-06-30 06:54:27 -0400", "message": "xref navigation for links"}, {"oid": "24079386b845fb1c76cf425c255e5db1b05bd4c5", "committedDate": "2020-06-30 11:08:44 -0700", "message": "main command buttons properly handled per column"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "3bbe7178520782e7f01877a8e6174f1f971ac8bf", "committedDate": "2020-07-07 10:14:05 -0700", "message": "forward R completion context from parent edit session"}, {"oid": "43d5dabbe07688d8cc2b027332614bfb591f3429", "committedDate": "2020-07-07 12:21:46 -0700", "message": "deal with multiple/no editors on theme switch"}, {"oid": "ed82189065319cae2e423311c6574d57aaa7c999", "committedDate": "2020-07-07 16:30:27 -0700", "message": "respect and synchronize with user prefs"}, {"oid": "161059ec07e2d3838b3caa6c3cdf809c6d240d55", "committedDate": "2020-07-08 07:04:25 -0400", "message": "prioritize mathjax typesetting for active editor tab"}, {"oid": "9ad5291497ac4906e284ba9a3b338a2b45fff18e", "committedDate": "2020-07-08 16:13:56 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-editor-ace"}, {"oid": "7cd285fa1f2f44163268ba64c098162c8710ea5a", "committedDate": "2020-07-10 06:28:29 -0400", "message": "go to next/previous section for visual mode"}, {"oid": "44669f4c9cf8fd35602ebc0111ccf157923c9518", "committedDate": "2020-07-10 16:16:23 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-editor-ace"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "cdf344444c5442c59e21ebda53db7896b26a6f29", "committedDate": "2020-08-01 15:17:49 -0400", "message": "visual mode: suport reading/writing yaml front matter"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "b191999c7597c442528c2473beabe931c4154f87", "committedDate": "2020-08-06 15:21:46 -0400", "message": "work in progress on panmirror spelling"}, {"oid": "b1d571237ad350e46739f927c2585d923c83f76c", "committedDate": "2020-08-06 18:30:15 -0400", "message": "prep for panmirror spelling doc implementation"}, {"oid": "ca281ba7710d3e104fa4de71f4cc7423f5b832cc", "committedDate": "2020-08-07 21:35:11 -0700", "message": "use capsule position to look up existing chunks (WIP)"}, {"oid": "6a4496ce6325f59f796455f05f05acdd4e82f2dd", "committedDate": "2020-08-10 20:45:45 -0700", "message": "refactor chunk output for hosting in visual mode"}, {"oid": "275618d6477d0406defa1637c5788cd8f6f47171", "committedDate": "2020-08-11 11:29:52 -0700", "message": "derive width from panmirror widget in visual mode"}, {"oid": "eee8192f8a852d9ac28481bf52a4f4d273ed8663", "committedDate": "2020-08-12 16:06:02 -0400", "message": "when rstudioapi::navigateToFile is called without a file, scroll to the line in the currently open file"}, {"oid": "05b41d3c42adaaeb55cad27c46f855339e00952d", "committedDate": "2020-08-12 13:35:30 -0700", "message": "plumbing for reading chunk defs in visual mode"}, {"oid": "71372edae1205652306108cf439273d28fbae103", "committedDate": "2020-08-12 21:52:02 -0700", "message": "hook up chunk height rendering in visual mode"}, {"oid": "37d87eb6068a48f72c2848fcfccb35d3b8b661f7", "committedDate": "2020-08-13 15:58:59 -0700", "message": "complete chunk roundtrip from code/visual mode"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "b2cb68f03b10490faceb70d72dddef92cb941a39", "committedDate": "2020-08-17 13:34:57 -0700", "message": "sync scope tree to visual position on ast=>markdown"}, {"oid": "c618902219911a4e152f4093848bc50ee1da605e", "committedDate": "2020-08-17 16:57:21 -0700", "message": "plumbing for pre-execution sync to editor"}, {"oid": "f05671222536ac6344126c5a9ec62ecb6a06dcbf", "committedDate": "2020-08-19 16:03:29 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "b8a27586e6a38d130cf14b5b2422531e4c800ef1", "committedDate": "2020-08-19 19:47:08 -0400", "message": "todo scaffolding for markdown project prefs"}, {"oid": "efcf2c1a4ed4c7fda856822c8cd2501e281d4a11", "committedDate": "2020-08-19 19:55:44 -0400", "message": "Merge branch 'feature/panmirror-dev' into feature/panmirror-markdown-project-prefs"}, {"oid": "655b7341557765f7ad0618f66ad6e3605077469a", "committedDate": "2020-08-20 16:36:19 -0400", "message": "underlying model for project level markdown writing prefs"}, {"oid": "2f3d9a8a6f4578023d9279dc4211bed8656b03c2", "committedDate": "2020-08-20 14:02:07 -0700", "message": "forward selection to parent and execute there"}, {"oid": "0a44d322ae414b42eced40f792412d80b30e7b4d", "committedDate": "2020-08-24 15:45:17 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "0c4edf4ddebd7ef7d840443ae3538ca6c3f8cd90", "committedDate": "2020-08-27 09:28:11 -0400", "message": "state/logic for visual mode switch confirmation"}, {"oid": "76956c53409e7b7adeb06fa2bd81f855e4b30700", "committedDate": "2020-09-01 13:57:46 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "54aa9d640092cb5ad95e979178245e8f4f97626c", "committedDate": "2020-09-03 08:38:33 -0400", "message": "prevent writing canonical markdown if the doc can't be edited in visual mode"}, {"oid": "56d1bdf9b21c92117d6b4f97d4012c55e01f3bd7", "committedDate": "2020-09-03 12:37:23 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "02378a5b7f12a62afa01806dc848f3b6d3a016b1", "committedDate": "2020-09-04 07:23:18 -0400", "message": "only apply visual mode fixups to markdown files"}, {"oid": "6790e179a6d363301beb37087d49d57040a1f3ba", "committedDate": "2020-09-04 15:58:16 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "0bdbe5734b01b10042e384875626cd3c1dfce7ad", "committedDate": "2020-09-10 14:09:27 -0700", "message": "restore refactoring commands"}, {"oid": "147b5d96ae6680b4ca5133ac88b74f98caf66947", "committedDate": "2020-09-10 14:30:14 -0700", "message": "implement comment reflow"}, {"oid": "a60e02bcebb6d59a04a77b4ab07901326a685e8d", "committedDate": "2020-09-10 14:43:21 -0700", "message": "implement comment/uncomment"}, {"oid": "723a67a120584aa123129f6a87ddd93001d96c91", "committedDate": "2020-09-10 14:47:00 -0700", "message": "implement roxygen skeleton insertion"}, {"oid": "6adcdc945becfe0a15e9385106cd058c419824f5", "committedDate": "2020-09-10 14:54:46 -0700", "message": "implement reformat/reindent/shrink/grow"}, {"oid": "33f22ed152b1ddd874a3051fb32704311499183a", "committedDate": "2020-09-10 15:09:11 -0700", "message": "implement find from selection"}, {"oid": "fec4972441e121d968ae8efad615dfa1c9f47372", "committedDate": "2020-09-10 16:04:39 -0700", "message": "implement execution of setup/next chunk"}, {"oid": "1051e144cb52c8e6f0bf7f96840f0f06dca6bec5", "committedDate": "2020-09-11 10:19:53 -0700", "message": "implement code execution gestures"}, {"oid": "495bdf7780ba8cc445369fc871b0b58fc8b00d81", "committedDate": "2020-09-11 10:45:40 -0700", "message": "implement source commands"}, {"oid": "767d9e6060c6906af0ea263ac7c6cd45f5e7e7a4", "committedDate": "2020-09-11 11:23:47 -0700", "message": "implement word count and profiling"}, {"oid": "41db3473cb001e2b8fa2a6a5acc5e000ac8fdd42", "committedDate": "2020-09-14 15:27:57 -0700", "message": "navigate inside visual source editor if available"}, {"oid": "ececfe5b911202dda97384babc1205e46ca9ab7f", "committedDate": "2020-09-18 17:13:59 -0500", "message": "WIP: Only attempt to retry write operation if it was a user specified action. Do not retry writes for autosaves / lints. If not retrying the operation (because of autosave semantics), supress errors indicating that another process is using the file (as it is a transient issue)."}, {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8", "committedDate": "2020-09-21 16:56:12 -0500", "message": "Restart autosave if it fails silently"}, {"oid": "fbd569814b3417b681771452adeaef77d0e38515", "committedDate": "2020-09-28 09:58:26 -0500", "message": "Code review feedback - prevent manual saves from queueing up while in-flight"}, {"oid": "011eb11501950dd1c245656585880cef43b764e3", "committedDate": "2020-09-28 10:00:55 -0500", "message": "Update TextEditingTarget.java"}, {"oid": "f3b7745bbba2aeb2e723f261d88a2515c386ad3e", "committedDate": "2020-09-28 11:21:46 -0500", "message": "Update src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java"}, {"oid": "9ff0544e1387a1e175a82f6c2dc928868c35bc77", "committedDate": "2020-09-28 16:48:11 -0700", "message": "implement chunk options completion in embedded editors"}, {"oid": "7dc3138210711fc78ee925ccc59c9fe4a6c49af5", "committedDate": "2020-09-29 14:56:20 -0400", "message": "remove extra white space"}, {"oid": "53d0d88b348bdc2ff24000cb3ea5a8179c180579", "committedDate": "2020-09-30 12:30:02 -0700", "message": "Merge pull request #7905 from rstudio/feature/visual-chunk-option-completion"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "27f00b7cbdd7af950df5028afd079876bf07ab6e", "committedDate": "2020-10-02 16:44:17 -0700", "message": "implement status bar navigation in visual mode (WIP)"}, {"oid": "aa1cc385dd05a46e7ab6d9445b4c226b4db0bc66", "committedDate": "2020-10-05 13:17:59 -0700", "message": "return 'empty' context in visual mode if no ace instance active"}, {"oid": "f1baeb23928d561c2c61cade53d49acc24f73a4b", "committedDate": "2020-10-06 08:49:36 -0700", "message": "Merge branch 'master' into master"}, {"oid": "df51bf401b02f67afe6b156f350a348c7e4ad8ee", "committedDate": "2020-10-08 07:59:05 -0400", "message": "Merge pull request #7978 from rstudio/feature/visual-mode-status-nav"}, {"oid": "2f856f0415f400f669bceaf4585bea40b7ad9f05", "committedDate": "2020-10-09 07:26:52 -0400", "message": "enable auto save on blur for visual mode"}, {"oid": "ac54933a0d7428ec9127b1f206e0368ff396dd43", "committedDate": "2020-10-09 08:47:28 -0400", "message": "implement find from selection for visual mode"}, {"oid": "6cf5288dd6276227540ad5459957dc87271a44f0", "committedDate": "2020-10-09 09:09:00 -0700", "message": "Merge pull request #8018 from rstudio/bugfix/visual-mode-find-from-selection"}, {"oid": "fb2b881de1340765018722f760f588fc0b10eb98", "committedDate": "2020-10-11 10:52:38 -0700", "message": "only replace selection if there is an active selection (#8036)"}, {"oid": "269122f44f87686c115d3e220c04ffa722e8733e", "committedDate": "2020-10-13 16:28:04 -0700", "message": "always adapt to extended type when not autosaving (#8055)"}, {"oid": "b87130466705dbeef63dabb0316d04cd11002511", "committedDate": "2020-10-21 07:59:45 -0400", "message": "check for null on getCanonicalChanges"}, {"oid": "d62485ba94b2cff22053f726132539a093f332db", "committedDate": "2020-10-21 08:17:42 -0400", "message": "allow save to proceed on getCanonical error"}, {"oid": "3d5d76560301067b552e170147c9be3994ec6828", "committedDate": "2020-10-26 16:11:34 -0700", "message": "unset isSaving_ flag on save cancel (#8193)"}, {"oid": "7bd01f9b65f459872bc7e009fd4a40bb3374f9b0", "committedDate": "2020-10-28 16:25:03 -0700", "message": "update format list after loading visual mode (#8219)"}, {"oid": "4e9d88a50f5e0b4e5bfb0271405ca37c3385d0b1", "committedDate": "2020-11-05 14:54:08 -0800", "message": "sync editing outline location before R Markdown render"}, {"oid": "758a613d7426e831ae0d66edb50b16e7f812c3ee", "committedDate": "2020-11-05 15:09:06 -0800", "message": "use isVisualEditorActive"}, {"oid": "c92b1682f470677e5b04b50f38f0ab17b6e57c2a", "committedDate": "2020-12-10 16:56:27 -0800", "message": "make run previous/run next chunk commands work outside chunks"}, {"oid": "0b492c241fc216fc38e9c1d6c1bbd08b2f3bbe4e", "committedDate": "2020-12-11 10:04:43 -0800", "message": "restore no-op behavior for commands that require chunks"}, {"oid": "418e33ce36d2248fdb2e1052363f6b9fa30dba73", "committedDate": "2020-12-11 11:39:36 -0800", "message": "fix off-by-one when executing chunks above current"}, {"oid": "6e4242a34082168125d1ea758268e61713dacb81", "committedDate": "2020-12-15 15:20:57 -0800", "message": "forward C++ completion context to embedded editor"}, {"oid": "d00b44f08e214aa44d2801ef540fdf323b80674c", "committedDate": "2020-12-16 09:32:21 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "691bf1177cf0dcb323fe18071b0bd101bded5cfa", "committedDate": "2020-12-16 14:49:20 -0800", "message": "Merge branch 'v1.4-juliet-rose' into feature/command-palette-sorting"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "2359fb0ea1318ab27b3af9851c92470ab0d3f31b", "committedDate": "2021-01-08 09:59:25 -0800", "message": "trivial cleanup"}, {"oid": "3732339a57ede03c1693259dd8f0286a78ae0bbd", "committedDate": "2021-01-09 17:23:11 -0800", "message": "refactor more event classes to the single-file approach"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "6a7e18cd7729bed78f0480207354d21eaca1a2cf", "committedDate": "2021-01-13 15:51:40 -0800", "message": "add Copy Document Path command"}, {"oid": "26073c4471babb1863b58f63976fbde1919e609f", "committedDate": "2021-02-05 14:25:43 -0800", "message": "avoid continuing comment after markdown header"}, {"oid": "8b4c8e1cfe6af39263ef8b4ff16cef9cd051e8c3", "committedDate": "2021-02-05 14:49:01 -0800", "message": "extra null check"}, {"oid": "b0199886aa96af59922661698617a2d1590d16f4", "committedDate": "2021-02-25 14:14:19 -0800", "message": "implement go to next chunk / go to previous chunk in visual editor"}, {"oid": "123fdff04dbb6a98cb045d99b132d5cd7bb17a8a", "committedDate": "2021-04-23 13:36:41 -0700", "message": "rerun lint on doc blur (#9258)"}, {"oid": "ca311da5b1ab819312cfce7521c3a314d4ffd78e", "committedDate": "2021-06-06 09:55:38 -0400", "message": "initial work on qmd"}, {"oid": "7ca095344998e642a7deb64212295f5836c175a0", "committedDate": "2021-06-06 21:38:58 -0400", "message": "compatibility with runtime: shinyrmd"}, {"oid": "bbf5295aa655968f27e990059ac09f802c7d24d1", "committedDate": "2021-06-07 13:36:14 -0400", "message": "remove qmd render work"}, {"oid": "e3c1eca5802d901b0ced605ae7700bbde848de96", "committedDate": "2021-06-07 13:39:51 -0400", "message": "qmd file type"}, {"oid": "8439c6e2ae72df95fbf6ee91006541321ebebda2", "committedDate": "2021-06-08 06:48:28 -0400", "message": "narrow work done for quarto shinyrmd format update"}, {"oid": "704bddac02351d64153ae0edd603eea746842d7f", "committedDate": "2021-06-08 07:57:58 -0400", "message": "improved logic around markdown file type detection"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "9edcff42113bac641fc94ae04b39256d17dc67a3", "committedDate": "2021-06-23 10:11:13 -0400", "message": "provide knit/render on save option"}, {"oid": "0c319ece591b264d4e44385ae0187a80278f5ac1", "committedDate": "2021-06-28 07:51:36 -0400", "message": "render format menu for quarto docs"}, {"oid": "53c7e52d72a5388fa4f2320dc4e417a9d24e77c6", "committedDate": "2021-07-11 19:14:25 -0400", "message": "initial work on job for quarto preview"}, {"oid": "25d1ad5230a5f12da4963550cae1c129495407b8", "committedDate": "2021-07-12 17:00:36 -0400", "message": "start new preview job when switching formats"}, {"oid": "c40b95f0978624addac79d00901b0d893619e6a9", "committedDate": "2021-07-12 20:56:05 -0400", "message": "use standard codepath for quarto website doc renders"}, {"oid": "fba06a5d32b94c5dec48214a445abab85b16893f", "committedDate": "2021-07-12 21:06:22 -0400", "message": "check for quarto type before firing render pending event"}, {"oid": "33aa4bee816f1f34c5b31118b9b82db7984f85a9", "committedDate": "2021-07-14 19:56:28 -0400", "message": "don't call quarto preview if quarto isn't installed"}, {"oid": "4ee924e917b4bbbee2c16f536cddc921131a786d", "committedDate": "2021-07-14 20:14:05 -0400", "message": "correct format menu for all quarto docs"}, {"oid": "d6ce9bd7dc5389f617954f123101abb624337b2b", "committedDate": "2021-07-20 17:25:30 -0400", "message": "make sure file is in the current project before writing canonical based on project settings"}, {"oid": "5187840ebbac77d3e949c16dab18b0f02fdb681e", "committedDate": "2021-07-23 10:51:15 -0700", "message": "wrapping up IDE python integration items (#9626)"}, {"oid": "545dc774afef96787fdbe708f125c78311f0cf46", "committedDate": "2021-07-23 12:04:57 -0700", "message": "tweak metadata comment insert behaviour"}, {"oid": "afe9cb4e8302d72d49b9b416165b8362bb5a899f", "committedDate": "2021-07-24 10:55:56 -0400", "message": "fallback to normal rmd render for qmd website/book files not in the current ide quarto project"}, {"oid": "db6934360d136bdd8ca7d97c9cc6267a748f1b3b", "committedDate": "2021-07-29 07:05:55 -0400", "message": "correct insert chunk behavior for quarto docs"}, {"oid": "e25813f6c9430e1c69fe84580326384a040ae9a0", "committedDate": "2021-08-04 15:24:03 -0400", "message": "Fix for inability to run shiny interative docs from server.R"}, {"oid": "4a023d0a9c87a13f2aeb251430fc4bac8d1f9711", "committedDate": "2021-09-21 09:26:05 -0400", "message": "save/load expansion state of all chunks in a doc prop"}, {"oid": "534349036f88906e238ad410c8233ca61ada9519", "committedDate": "2021-09-21 15:24:13 -0400", "message": "additional work on fold commands for visual mode"}, {"oid": "1eca548ad72126b0fffbb27b7a3d10d668f2f760", "committedDate": "2021-09-22 06:22:41 -0400", "message": "fix detection of extended types from YAML"}, {"oid": "1d7efc605a40a429b185d255c338eb48a9d52cdb", "committedDate": "2021-09-23 11:35:11 -0400", "message": "quarto yaml comment handling in visual editor"}, {"oid": "5b8d7acd9b92cac78c9318fe95f4be7c3f04522e", "committedDate": "2021-09-23 12:29:05 -0700", "message": "Merge remote-tracking branch 'origin/main' into feature/visual-editor-fold-commands"}, {"oid": "f99b55acd50c3ef99451b44d86b9ac52c3c35813", "committedDate": "2021-09-24 13:10:49 -0400", "message": "additional plumbing for yaml completions"}, {"oid": "30d3bf4b7686c2230b5275e6caf6d36f3214c70f", "committedDate": "2021-09-30 15:30:50 -0400", "message": "initial work on reveal editor sync"}, {"oid": "a111570b15b758beb87132c3afdb37b911903fc9", "committedDate": "2021-10-02 09:07:35 -0400", "message": "compute and transmit presentation editor state for both source and visual mode"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "63d60171f7f96698993e7d38be2fbffc9a59e2e1", "committedDate": "2021-10-03 08:48:37 -0400", "message": "pres navigation methods for source and visual editors"}, {"oid": "966376000e308b92b47c2b84b6560d184b61b394", "committedDate": "2021-10-29 11:55:38 -0400", "message": "quarto render: prompt to install rmarkdown for knitr engine"}, {"oid": "65bc66bf8663a5eedecde8fba57e6aa835bde3c5", "committedDate": "2021-10-29 19:10:30 -0400", "message": "remove unused imports"}, {"oid": "a3e379627e2a04cf867fc0d27e0283a636e411a0", "committedDate": "2021-10-31 08:51:29 -0400", "message": "quarto config: rename 'installed' to 'enabled'"}, {"oid": "b45e37ef0a743f8d35887f66a61d21eaf58d208b", "committedDate": "2021-11-03 17:27:16 -0400", "message": "quarto book: incremental pdf preview"}, {"oid": "f376917a73293f6ae82c8c1cf93f005c175a21b1", "committedDate": "2021-11-09 13:48:15 -0500", "message": "specify quarto 'default' format for ide renders; remember last quarto format w/o re-ordering document yaml"}, {"oid": "dde7fef7035f241126cba4d403f2b7834c57d987", "committedDate": "2021-11-10 11:48:52 -0500", "message": "quarto: enable preview for off-format docs in websites"}, {"oid": "194a49dc0653aa082911cfb1048eabf2c5475448", "committedDate": "2021-11-19 14:48:48 -0800", "message": "create lint source for TextEditingTarget"}, {"oid": "c448428809edb43664b605f98c6a89d8932033b6", "committedDate": "2021-11-23 16:41:22 -0800", "message": "clean up TODOs, ensure event handlers cleaned up too"}, {"oid": "1cc3433fbde287105d3de5a9821e53b7b243c131", "committedDate": "2021-11-24 17:53:12 -0500", "message": "feat(i18n): source-editors-text"}, {"oid": "5f0cd2e1e76be0b44f2e07d87c864b554da5f9a4", "committedDate": "2021-11-26 10:53:18 -0500", "message": "fix(code review)"}, {"oid": "0355bb447d9d6bf7e3a00df16e7b21f395524bc0", "committedDate": "2021-11-28 14:09:52 -0800", "message": "Merge pull request #10137 from StatCan/jose-i18nify-source-editors-text"}, {"oid": "f0e6f6aa35d1edad14b93225ecc488f195c0c13a", "committedDate": "2021-11-30 22:22:41 -0500", "message": "committing i18nify progress"}, {"oid": "ce0caa280d30ce48e44b479ab619ad25ca9446d7", "committedDate": "2021-11-30 23:05:04 -0500", "message": "Merge branch 'main' into i18nify-studio-client-pckg"}, {"oid": "66382d9bff2d4532d15ec7b620a731c63589fd4d", "committedDate": "2021-12-02 20:22:23 -0500", "message": "pass formats and project formats to yaml editor context"}, {"oid": "a9c1e78627f6ce7ada3e91b30bf30141cc4390a6", "committedDate": "2021-12-02 20:24:30 -0500", "message": "merge commit"}, {"oid": "a43272615338548bc11f0f6012ef9a893167c0b0", "committedDate": "2021-12-04 08:37:26 -0500", "message": "provide quarto engine to yaml completion"}, {"oid": "2257f3fdbbcd34140b5e58ca008846a1767c68f4", "committedDate": "2021-12-05 07:57:02 -0500", "message": "initial work on markdown mode toolbar"}, {"oid": "5584871710f8df9db57af3e0bb31cf85f8f6d7f5", "committedDate": "2021-12-07 07:57:57 -0500", "message": "use scope list rather than scope tree for detecting engine"}, {"oid": "a9e70ca6d18a9436bdbc751b40ef9f4e1676ee11", "committedDate": "2021-12-08 07:58:20 -0500", "message": "initial work on consolidated markdown toolbar"}, {"oid": "c4333c42c3f6dd717a50350a5442252a2dcbf694", "committedDate": "2021-12-08 09:50:47 -0500", "message": "more refinements to markdown toolbar"}, {"oid": "a9fbf22d62fa1706260b8671988045fcf9bf3992", "committedDate": "2021-12-12 08:26:40 -0500", "message": "use presentation preview for presentations embedded in websites"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "b70cd341c3d691b611ef7bd87ebbdccf9506b7c1", "committedDate": "2022-01-06 20:45:03 -0500", "message": "quarto site preview: fix misdirection of incremental file render"}, {"oid": "b81f4d20c0627b5d11b13a3d7b5bdba51b483be0", "committedDate": "2022-05-04 05:39:11 -0400", "message": "quarto: support for previewing text file formats"}, {"oid": "b5b242bfcfe8fcd6714392b747ac0f625adfcb14", "committedDate": "2022-05-06 14:35:12 -0400", "message": "visual editor: auto-prefix footnotes in included files"}, {"oid": "25de4cbc0fdc4e8eaef82bb1c64ac8f9e77df37b", "committedDate": "2022-05-06 13:02:57 -0700", "message": "show test_that() calls in document outline (#11108)"}, {"oid": "d175f4e7b1dcd832cf251ad557d01ba783908035", "committedDate": "2022-05-18 16:41:51 -0400", "message": "change def of isExecutableChunk to recognize multiple formats of eval = FALSE"}, {"oid": "2a15d3000f7f2e246040f04f5a1f69bcc684dd74", "committedDate": "2022-05-31 11:50:46 -0400", "message": "more string updates"}, {"oid": "d685e69c4ca0eb0918ee3507cb34c4586ef19eea", "committedDate": "2022-06-02 10:06:58 -0400", "message": "update runSelectionasJob"}, {"oid": "30800793056152e103a3d5b870d093f61a248d71", "committedDate": "2022-06-06 15:37:18 -0400", "message": "isWorkbenchJob"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "e4f3dced1b1290c53badc83f4958bf8cf8ab4caa", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Initial draft of PyShiny Run App support"}, {"oid": "43a40a74c393279238b4a25d80ed67c718b247f2", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Hide Shiny submenu when in PyShiny mode"}, {"oid": "af47d1272d71463f37b01f084b1d61cbea7c3847", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Change the command used to run PyShiny apps"}, {"oid": "abbf81bc21a008e2022280c3293a95a62e05319d", "committedDate": "2022-09-23 15:25:16 -0700", "message": "Fix typo; use proper bash escaping function"}, {"oid": "21efc9735599542c3e9f5799bb66e18ff6f8fb75", "committedDate": "2022-09-29 11:05:22 -0700", "message": "no word wrap markdown in comments (#12012)"}, {"oid": "404c6dea4cd88c2325c36f416151ab45c6016bb7", "committedDate": "2022-09-30 04:37:49 -0700", "message": "eliminate eclipse warnings"}, {"oid": "4f10584f9e9a5eda2e599afe1e93c63f30f35bf5", "committedDate": "2022-09-30 12:59:40 -0700", "message": "initial work on next gen preview"}, {"oid": "944c53832a52567ebe7e6e78d2847aa600f36b95", "committedDate": "2022-10-01 13:46:23 -0700", "message": "enable document level preview override for books"}, {"oid": "f28e4a8ffc0d8d475b44358e8bd73855c84803a3", "committedDate": "2022-10-02 05:14:33 -0700", "message": "more cleanup on editor format handling"}, {"oid": "9316ffab816ec1e196cbb2274643a7865aa4f50b", "committedDate": "2022-10-02 09:05:17 -0700", "message": "don't presume that quarto preview format is html"}, {"oid": "1a3b749654108a12dc99f32ff0cda9aef8bdf98a", "committedDate": "2022-10-31 12:31:53 -0400", "message": "Fix pathing/alias issues for Py Shiny on Windows"}, {"oid": "01eb2866f302aab4e6e90f5c1af67cc38c1b662b", "committedDate": "2022-11-01 11:55:28 -0400", "message": "don't escape bash on windows"}, {"oid": "2c55d7724051fd5a8dfda3de2dc394549b5b6c99", "committedDate": "2022-11-03 09:52:52 -0400", "message": "add double quotes to windows path"}, {"oid": "d1e1b2f5c26e4f42bec48bfc8cb074acb6784c8b", "committedDate": "2022-11-17 13:09:13 -0500", "message": "Rainbow fenced divs (#12172)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMjg5Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424612892", "body": "lambda: `() -> {}`", "bodyText": "lambda: () -> {}", "bodyHTML": "<p dir=\"auto\">lambda: <code>() -&gt; {}</code></p>", "author": "gtritchie", "createdAt": "2020-05-13T17:34:11Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -5574,24 +5574,36 @@ public void execute()\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }\n+      },\n+      \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      },\n+      new Command() {\n+         public void execute()\n+         {\n+         }", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1f60ac243a..a97f15a626 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5597,13 +5591,7 @@ public class TextEditingTarget implements\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1f60ac243a..a97f15a626 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5597,13 +5591,7 @@ public class TextEditingTarget implements\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      },\n-      new Command() {\n-         public void execute()\n-         {\n-         }\n-      },\n-      \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "5e484a920b7a562731dd16e843dbcec18b4d99c0", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex a97f15a626..66d5f1f412 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5574,24 +5606,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 66d5f1f412..cf9094d361 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5606,24 +5574,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "a8f84cb9aa09cbb77caea7501fb3516f44813b6e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex cf9094d361..f0aa58d3df 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5574,24 +5549,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex f0aa58d3df..d04562ddd1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5549,24 +5637,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "24812bc412a1e5ad03eff704859f98c37512e863", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex d04562ddd1..0a7de314e7 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5637,24 +5549,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "8ad93ac44043cf7eabb65c49a8e143f30a793cdf", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 0a7de314e7..1c2b1cb76a 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5549,24 +5639,24 @@ public class TextEditingTarget implements\n    \n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n    \n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n    \n    private void sourcePython()\n", "next_change": {"commit": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 1c2b1cb76a..ceddaade7b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5658,7 +5679,7 @@ public class TextEditingTarget implements\n          }\n       }, () -> {}, \"Run Plumber API\");\n    }\n-   \n+\n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "831096a7a0277c9b2006b9dbf94551c5bf863379", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex ceddaade7b..e202931b4c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5657,29 +5546,29 @@ public class TextEditingTarget implements\n          prefs_.writeUserPrefs();\n       }\n    }\n-\n+   \n    private void runShinyApp()\n    {\n-      source_.withSaveFilesBeforeCommand(() ->\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, () -> {}, \"Run Shiny Application\");\n+      }, \"Run Shiny Application\");\n    }\n-\n+   \n    private void runPlumberAPI()\n    {\n-      source_.withSaveFilesBeforeCommand(new Command() {\n+      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, () -> {}, \"Run Plumber API\");\n+      }, \"Run Plumber API\");\n    }\n-\n+   \n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "d6cea202c0db3c0cf6510e64822ab7262bd6e165", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex e202931b4c..41069aceaf 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5546,29 +5714,29 @@ public class TextEditingTarget implements\n          prefs_.writeUserPrefs();\n       }\n    }\n-   \n+\n    private void runShinyApp()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(() ->\n+      source_.withSaveFilesBeforeCommand(() ->\n       {\n          events_.fireEvent(new LaunchShinyApplicationEvent(getPath(),\n                prefs_.shinyBackgroundJobs().getValue() ?\n                   ShinyApplication.BACKGROUND_APP :\n                   ShinyApplication.FOREGROUND_APP, getExtendedFileType()));\n-      }, \"Run Shiny Application\");\n+      }, () -> {}, \"Run Shiny Application\");\n    }\n-   \n+\n    private void runPlumberAPI()\n    {\n-      sourceBuildHelper_.withSaveFilesBeforeCommand(new Command() {\n+      source_.withSaveFilesBeforeCommand(new Command() {\n          @Override\n          public void execute()\n          {\n             events_.fireEvent(new LaunchPlumberAPIEvent(getPath()));\n          }\n-      }, \"Run Plumber API\");\n+      }, () -> {}, \"Run Plumber API\");\n    }\n-   \n+\n    private void sourcePython()\n    {\n       saveThenExecute(null, () -> {\n", "next_change": {"commit": "ececfe5b911202dda97384babc1205e46ca9ab7f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 41069aceaf..49e9a51256 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -5739,7 +6157,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, () -> {\n+      saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "9ff0544e1387a1e175a82f6c2dc928868c35bc77", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 49e9a51256..518c9d1079 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6157,7 +6138,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, true, () -> {\n+      saveThenExecute(null, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "7dc3138210711fc78ee925ccc59c9fe4a6c49af5", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 518c9d1079..6c64d688db 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6138,7 +6190,7 @@ public class TextEditingTarget implements\n \n    private void sourcePython()\n    {\n-      saveThenExecute(null, () -> {\n+      saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n                \"Executing Python\",\n                \"Sourcing Python scripts\",\n", "next_change": {"commit": "1cc3433fbde287105d3de5a9821e53b7b243c131", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 6c64d688db..c1dc5ff68e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6192,8 +6536,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               \"Executing Python\",\n-               \"Sourcing Python scripts\",\n+               constants_.sourcePythonProgressCaption(),\n+               constants_.sourcePythonUserPrompt(),\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": {"commit": "f0e6f6aa35d1edad14b93225ecc488f195c0c13a", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex c1dc5ff68e..0c18fbb98e 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6536,8 +6569,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               constants_.sourcePythonProgressCaption(),\n-               constants_.sourcePythonUserPrompt(),\n+               \"Executing Python\",\n+               \"Sourcing Python scripts\",\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": {"commit": "ce0caa280d30ce48e44b479ab619ad25ca9446d7", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\nindex 0c18fbb98e..3535c0d30d 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n", "chunk": "@@ -6569,8 +6536,8 @@ public class TextEditingTarget implements\n    {\n       saveThenExecute(null, true, () -> {\n          dependencyManager_.withReticulate(\n-               \"Executing Python\",\n-               \"Sourcing Python scripts\",\n+               constants_.sourcePythonProgressCaption(),\n+               constants_.sourcePythonUserPrompt(),\n                () -> {\n                   String command = \"reticulate::source_python('\" + getPath() + \"')\";\n                   events_.fireEvent(new SendToConsoleEvent(command, true));\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "5e484a920b7a562731dd16e843dbcec18b4d99c0", "committedDate": "2020-05-14 09:21:47 -0400", "message": "infrastructure for cannonical saves"}, {"oid": "57c29ed58605aa85f4b6644669d57511dda5a9be", "committedDate": "2020-05-14 10:09:22 -0400", "message": "method to get cannonical markdown from editor w/o mutating the active document"}, {"oid": "d09bc61cc57e8d350bc102f69484145c47be4ecd", "committedDate": "2020-05-14 12:53:18 -0400", "message": "use canonical setting in source mode"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6599719c433bbaa13bb87526ecfc726a451e3b25", "committedDate": "2020-05-14 16:36:00 -0400", "message": "Merge remote-tracking branch 'origin/master' into feature/panmirror-dev"}, {"oid": "6fe237e35d3ac893bd6b2ab0cc6e30e6542c9977", "committedDate": "2020-05-15 07:24:38 -0400", "message": "don't use incremental diffing when wrap column changes"}, {"oid": "bae7f1009c8f96840d51a4495c0c72491af7cd45", "committedDate": "2020-05-15 07:35:42 -0400", "message": "preserve cursor position during canonical saves from source mode"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "de24855f53ca952d0a94f21cbe4e9760295cd31f", "committedDate": "2020-05-18 11:10:34 -0700", "message": "suspend change detection handlers during document init (#6905)"}, {"oid": "3311497be094885f3ed42ae017cd111b1f5c384a", "committedDate": "2020-05-20 06:21:35 -0400", "message": "visual mode find button location consistent w/ source mode"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "a8f84cb9aa09cbb77caea7501fb3516f44813b6e", "committedDate": "2020-05-22 14:54:32 -0500", "message": "add checkbox and toggle; WIP .bind() method (#6689)"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "220876001a17ec5fd0d0ed8207755d17c2c7cf89", "committedDate": "2020-05-28 11:11:10 -0400", "message": "correctly reflect outline latch state for new documents"}, {"oid": "c66a709a5c797ac5d8a2c8646eb8a6d396e9bfc5", "committedDate": "2020-05-29 17:04:30 -0700", "message": "move command palette into its own package"}, {"oid": "bb4ad14a0080dc34a11e448b7ef69bb8c5773fc0", "committedDate": "2020-06-01 16:29:01 -0700", "message": "complete refactor to command palette source"}, {"oid": "52cb5ca4fe4818d0e91c6474be30887f00b19328", "committedDate": "2020-06-02 11:17:50 -0700", "message": "complete refactor separating UI from palette item"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "55dc4cd6757baaa517bd63984f95d0cb16b6618d", "committedDate": "2020-06-05 18:07:21 -0700", "message": "more accurately set the active column and editor"}, {"oid": "762c1e40060aab16670ddccecca52414b0e2e5aa", "committedDate": "2020-06-06 10:14:29 -0700", "message": "move console-related preferences to their own pane (#7052)"}, {"oid": "5ac4296496a0574cf0edf95119d789df5ac67b86", "committedDate": "2020-06-09 15:59:24 -0400", "message": "insert code chunk commands"}, {"oid": "24812bc412a1e5ad03eff704859f98c37512e863", "committedDate": "2020-06-09 17:03:06 -0500", "message": "invoking UserPrefs method"}, {"oid": "8ad93ac44043cf7eabb65c49a8e143f30a793cdf", "committedDate": "2020-06-10 10:57:05 -0700", "message": "move console-related preferences to their own pane (#7052)"}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "b05e15e98d5dec936f440319aa15d74615743fc3", "committedDate": "2020-06-10 13:22:52 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "ee9fb3a94ab742193d42813db3d725f376af1651", "committedDate": "2020-06-13 09:31:19 -0400", "message": "refactor visual mode controller into several source files"}, {"oid": "4a5046f92f55bc1a6b3104db8a5ff470cadfccc3", "committedDate": "2020-06-15 12:21:25 -0700", "message": "Merge pull request #7079 from rstudio/feature/source-columns"}, {"oid": "cb3f6128fdebcf64586cf425d6a6eb53242e9a2f", "committedDate": "2020-06-15 17:08:38 -0700", "message": "refactoring: simplify core/client/events to the embedded handler format (#7139)"}, {"oid": "65772ce3005f0bee20884b0210aff8b13f4ec35c", "committedDate": "2020-06-16 09:13:10 -0700", "message": "give html_notebook its own extended type"}, {"oid": "1d578c645300ec9572242a43f4c0e1698252ada1", "committedDate": "2020-06-18 09:29:15 -0700", "message": "Rainbow parentheses feature (#7027)"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "3ea75f496088f5da2b062855fede62032afbaa89", "committedDate": "2020-06-23 12:32:14 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "79f7a3726295def51c71a54293844f5db0922519", "committedDate": "2020-06-23 17:35:58 -0700", "message": "create AppCommand toolbar option that binds with an editor"}, {"oid": "831096a7a0277c9b2006b9dbf94551c5bf863379", "committedDate": "2020-06-24 14:15:10 -0500", "message": "tinkering"}, {"oid": "62bcdff5ffb11796896bf804bff0fb071258fd75", "committedDate": "2020-06-25 12:27:12 -0500", "message": "this compiles..."}, {"oid": "81942b6f9095f03b36dc6eba471a532894d8bab5", "committedDate": "2020-06-25 15:53:43 -0500", "message": "per discussion on issue (#6689)"}, {"oid": "d6cea202c0db3c0cf6510e64822ab7262bd6e165", "committedDate": "2020-06-26 07:43:33 -0400", "message": "working version of source navigation for visual mode"}, {"oid": "121dffbc2e9ae16e06ee3fe45636ca3d6ffaa87b", "committedDate": "2020-06-26 14:11:55 -0400", "message": "make switching from source to visual a navigation event"}, {"oid": "1e1a0bd276ca36a4b8fb11b373a8d90ad4fd2b9c", "committedDate": "2020-06-26 14:03:19 -0700", "message": "avoid unintended duplication of editing targets (#7236)"}, {"oid": "a9c9db0bab49a7c75f3588dca54b02522b093644", "committedDate": "2020-06-27 08:27:27 -0400", "message": "record navigation position when switching source/visual mode"}, {"oid": "fb6dabdc3364fbd503b47fd9893b3001a3d98dfc", "committedDate": "2020-06-27 08:34:20 -0400", "message": "Merge remote-tracking branch 'origin/master' into feature/panmirror-dev"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "91c29d64e0500c496b180df767404b0c20668ef5", "committedDate": "2020-06-30 06:54:27 -0400", "message": "xref navigation for links"}, {"oid": "24079386b845fb1c76cf425c255e5db1b05bd4c5", "committedDate": "2020-06-30 11:08:44 -0700", "message": "main command buttons properly handled per column"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "3bbe7178520782e7f01877a8e6174f1f971ac8bf", "committedDate": "2020-07-07 10:14:05 -0700", "message": "forward R completion context from parent edit session"}, {"oid": "43d5dabbe07688d8cc2b027332614bfb591f3429", "committedDate": "2020-07-07 12:21:46 -0700", "message": "deal with multiple/no editors on theme switch"}, {"oid": "ed82189065319cae2e423311c6574d57aaa7c999", "committedDate": "2020-07-07 16:30:27 -0700", "message": "respect and synchronize with user prefs"}, {"oid": "161059ec07e2d3838b3caa6c3cdf809c6d240d55", "committedDate": "2020-07-08 07:04:25 -0400", "message": "prioritize mathjax typesetting for active editor tab"}, {"oid": "9ad5291497ac4906e284ba9a3b338a2b45fff18e", "committedDate": "2020-07-08 16:13:56 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-editor-ace"}, {"oid": "7cd285fa1f2f44163268ba64c098162c8710ea5a", "committedDate": "2020-07-10 06:28:29 -0400", "message": "go to next/previous section for visual mode"}, {"oid": "44669f4c9cf8fd35602ebc0111ccf157923c9518", "committedDate": "2020-07-10 16:16:23 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-editor-ace"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "cdf344444c5442c59e21ebda53db7896b26a6f29", "committedDate": "2020-08-01 15:17:49 -0400", "message": "visual mode: suport reading/writing yaml front matter"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "b191999c7597c442528c2473beabe931c4154f87", "committedDate": "2020-08-06 15:21:46 -0400", "message": "work in progress on panmirror spelling"}, {"oid": "b1d571237ad350e46739f927c2585d923c83f76c", "committedDate": "2020-08-06 18:30:15 -0400", "message": "prep for panmirror spelling doc implementation"}, {"oid": "ca281ba7710d3e104fa4de71f4cc7423f5b832cc", "committedDate": "2020-08-07 21:35:11 -0700", "message": "use capsule position to look up existing chunks (WIP)"}, {"oid": "6a4496ce6325f59f796455f05f05acdd4e82f2dd", "committedDate": "2020-08-10 20:45:45 -0700", "message": "refactor chunk output for hosting in visual mode"}, {"oid": "275618d6477d0406defa1637c5788cd8f6f47171", "committedDate": "2020-08-11 11:29:52 -0700", "message": "derive width from panmirror widget in visual mode"}, {"oid": "eee8192f8a852d9ac28481bf52a4f4d273ed8663", "committedDate": "2020-08-12 16:06:02 -0400", "message": "when rstudioapi::navigateToFile is called without a file, scroll to the line in the currently open file"}, {"oid": "05b41d3c42adaaeb55cad27c46f855339e00952d", "committedDate": "2020-08-12 13:35:30 -0700", "message": "plumbing for reading chunk defs in visual mode"}, {"oid": "71372edae1205652306108cf439273d28fbae103", "committedDate": "2020-08-12 21:52:02 -0700", "message": "hook up chunk height rendering in visual mode"}, {"oid": "37d87eb6068a48f72c2848fcfccb35d3b8b661f7", "committedDate": "2020-08-13 15:58:59 -0700", "message": "complete chunk roundtrip from code/visual mode"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "b2cb68f03b10490faceb70d72dddef92cb941a39", "committedDate": "2020-08-17 13:34:57 -0700", "message": "sync scope tree to visual position on ast=>markdown"}, {"oid": "c618902219911a4e152f4093848bc50ee1da605e", "committedDate": "2020-08-17 16:57:21 -0700", "message": "plumbing for pre-execution sync to editor"}, {"oid": "f05671222536ac6344126c5a9ec62ecb6a06dcbf", "committedDate": "2020-08-19 16:03:29 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "b8a27586e6a38d130cf14b5b2422531e4c800ef1", "committedDate": "2020-08-19 19:47:08 -0400", "message": "todo scaffolding for markdown project prefs"}, {"oid": "efcf2c1a4ed4c7fda856822c8cd2501e281d4a11", "committedDate": "2020-08-19 19:55:44 -0400", "message": "Merge branch 'feature/panmirror-dev' into feature/panmirror-markdown-project-prefs"}, {"oid": "655b7341557765f7ad0618f66ad6e3605077469a", "committedDate": "2020-08-20 16:36:19 -0400", "message": "underlying model for project level markdown writing prefs"}, {"oid": "2f3d9a8a6f4578023d9279dc4211bed8656b03c2", "committedDate": "2020-08-20 14:02:07 -0700", "message": "forward selection to parent and execute there"}, {"oid": "0a44d322ae414b42eced40f792412d80b30e7b4d", "committedDate": "2020-08-24 15:45:17 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "0c4edf4ddebd7ef7d840443ae3538ca6c3f8cd90", "committedDate": "2020-08-27 09:28:11 -0400", "message": "state/logic for visual mode switch confirmation"}, {"oid": "76956c53409e7b7adeb06fa2bd81f855e4b30700", "committedDate": "2020-09-01 13:57:46 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "54aa9d640092cb5ad95e979178245e8f4f97626c", "committedDate": "2020-09-03 08:38:33 -0400", "message": "prevent writing canonical markdown if the doc can't be edited in visual mode"}, {"oid": "56d1bdf9b21c92117d6b4f97d4012c55e01f3bd7", "committedDate": "2020-09-03 12:37:23 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "02378a5b7f12a62afa01806dc848f3b6d3a016b1", "committedDate": "2020-09-04 07:23:18 -0400", "message": "only apply visual mode fixups to markdown files"}, {"oid": "6790e179a6d363301beb37087d49d57040a1f3ba", "committedDate": "2020-09-04 15:58:16 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/visual-mode-notebook-output"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "0bdbe5734b01b10042e384875626cd3c1dfce7ad", "committedDate": "2020-09-10 14:09:27 -0700", "message": "restore refactoring commands"}, {"oid": "147b5d96ae6680b4ca5133ac88b74f98caf66947", "committedDate": "2020-09-10 14:30:14 -0700", "message": "implement comment reflow"}, {"oid": "a60e02bcebb6d59a04a77b4ab07901326a685e8d", "committedDate": "2020-09-10 14:43:21 -0700", "message": "implement comment/uncomment"}, {"oid": "723a67a120584aa123129f6a87ddd93001d96c91", "committedDate": "2020-09-10 14:47:00 -0700", "message": "implement roxygen skeleton insertion"}, {"oid": "6adcdc945becfe0a15e9385106cd058c419824f5", "committedDate": "2020-09-10 14:54:46 -0700", "message": "implement reformat/reindent/shrink/grow"}, {"oid": "33f22ed152b1ddd874a3051fb32704311499183a", "committedDate": "2020-09-10 15:09:11 -0700", "message": "implement find from selection"}, {"oid": "fec4972441e121d968ae8efad615dfa1c9f47372", "committedDate": "2020-09-10 16:04:39 -0700", "message": "implement execution of setup/next chunk"}, {"oid": "1051e144cb52c8e6f0bf7f96840f0f06dca6bec5", "committedDate": "2020-09-11 10:19:53 -0700", "message": "implement code execution gestures"}, {"oid": "495bdf7780ba8cc445369fc871b0b58fc8b00d81", "committedDate": "2020-09-11 10:45:40 -0700", "message": "implement source commands"}, {"oid": "767d9e6060c6906af0ea263ac7c6cd45f5e7e7a4", "committedDate": "2020-09-11 11:23:47 -0700", "message": "implement word count and profiling"}, {"oid": "41db3473cb001e2b8fa2a6a5acc5e000ac8fdd42", "committedDate": "2020-09-14 15:27:57 -0700", "message": "navigate inside visual source editor if available"}, {"oid": "ececfe5b911202dda97384babc1205e46ca9ab7f", "committedDate": "2020-09-18 17:13:59 -0500", "message": "WIP: Only attempt to retry write operation if it was a user specified action. Do not retry writes for autosaves / lints. If not retrying the operation (because of autosave semantics), supress errors indicating that another process is using the file (as it is a transient issue)."}, {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8", "committedDate": "2020-09-21 16:56:12 -0500", "message": "Restart autosave if it fails silently"}, {"oid": "fbd569814b3417b681771452adeaef77d0e38515", "committedDate": "2020-09-28 09:58:26 -0500", "message": "Code review feedback - prevent manual saves from queueing up while in-flight"}, {"oid": "011eb11501950dd1c245656585880cef43b764e3", "committedDate": "2020-09-28 10:00:55 -0500", "message": "Update TextEditingTarget.java"}, {"oid": "f3b7745bbba2aeb2e723f261d88a2515c386ad3e", "committedDate": "2020-09-28 11:21:46 -0500", "message": "Update src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java"}, {"oid": "9ff0544e1387a1e175a82f6c2dc928868c35bc77", "committedDate": "2020-09-28 16:48:11 -0700", "message": "implement chunk options completion in embedded editors"}, {"oid": "7dc3138210711fc78ee925ccc59c9fe4a6c49af5", "committedDate": "2020-09-29 14:56:20 -0400", "message": "remove extra white space"}, {"oid": "53d0d88b348bdc2ff24000cb3ea5a8179c180579", "committedDate": "2020-09-30 12:30:02 -0700", "message": "Merge pull request #7905 from rstudio/feature/visual-chunk-option-completion"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "27f00b7cbdd7af950df5028afd079876bf07ab6e", "committedDate": "2020-10-02 16:44:17 -0700", "message": "implement status bar navigation in visual mode (WIP)"}, {"oid": "aa1cc385dd05a46e7ab6d9445b4c226b4db0bc66", "committedDate": "2020-10-05 13:17:59 -0700", "message": "return 'empty' context in visual mode if no ace instance active"}, {"oid": "f1baeb23928d561c2c61cade53d49acc24f73a4b", "committedDate": "2020-10-06 08:49:36 -0700", "message": "Merge branch 'master' into master"}, {"oid": "df51bf401b02f67afe6b156f350a348c7e4ad8ee", "committedDate": "2020-10-08 07:59:05 -0400", "message": "Merge pull request #7978 from rstudio/feature/visual-mode-status-nav"}, {"oid": "2f856f0415f400f669bceaf4585bea40b7ad9f05", "committedDate": "2020-10-09 07:26:52 -0400", "message": "enable auto save on blur for visual mode"}, {"oid": "ac54933a0d7428ec9127b1f206e0368ff396dd43", "committedDate": "2020-10-09 08:47:28 -0400", "message": "implement find from selection for visual mode"}, {"oid": "6cf5288dd6276227540ad5459957dc87271a44f0", "committedDate": "2020-10-09 09:09:00 -0700", "message": "Merge pull request #8018 from rstudio/bugfix/visual-mode-find-from-selection"}, {"oid": "fb2b881de1340765018722f760f588fc0b10eb98", "committedDate": "2020-10-11 10:52:38 -0700", "message": "only replace selection if there is an active selection (#8036)"}, {"oid": "269122f44f87686c115d3e220c04ffa722e8733e", "committedDate": "2020-10-13 16:28:04 -0700", "message": "always adapt to extended type when not autosaving (#8055)"}, {"oid": "b87130466705dbeef63dabb0316d04cd11002511", "committedDate": "2020-10-21 07:59:45 -0400", "message": "check for null on getCanonicalChanges"}, {"oid": "d62485ba94b2cff22053f726132539a093f332db", "committedDate": "2020-10-21 08:17:42 -0400", "message": "allow save to proceed on getCanonical error"}, {"oid": "3d5d76560301067b552e170147c9be3994ec6828", "committedDate": "2020-10-26 16:11:34 -0700", "message": "unset isSaving_ flag on save cancel (#8193)"}, {"oid": "7bd01f9b65f459872bc7e009fd4a40bb3374f9b0", "committedDate": "2020-10-28 16:25:03 -0700", "message": "update format list after loading visual mode (#8219)"}, {"oid": "4e9d88a50f5e0b4e5bfb0271405ca37c3385d0b1", "committedDate": "2020-11-05 14:54:08 -0800", "message": "sync editing outline location before R Markdown render"}, {"oid": "758a613d7426e831ae0d66edb50b16e7f812c3ee", "committedDate": "2020-11-05 15:09:06 -0800", "message": "use isVisualEditorActive"}, {"oid": "c92b1682f470677e5b04b50f38f0ab17b6e57c2a", "committedDate": "2020-12-10 16:56:27 -0800", "message": "make run previous/run next chunk commands work outside chunks"}, {"oid": "0b492c241fc216fc38e9c1d6c1bbd08b2f3bbe4e", "committedDate": "2020-12-11 10:04:43 -0800", "message": "restore no-op behavior for commands that require chunks"}, {"oid": "418e33ce36d2248fdb2e1052363f6b9fa30dba73", "committedDate": "2020-12-11 11:39:36 -0800", "message": "fix off-by-one when executing chunks above current"}, {"oid": "6e4242a34082168125d1ea758268e61713dacb81", "committedDate": "2020-12-15 15:20:57 -0800", "message": "forward C++ completion context to embedded editor"}, {"oid": "d00b44f08e214aa44d2801ef540fdf323b80674c", "committedDate": "2020-12-16 09:32:21 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "691bf1177cf0dcb323fe18071b0bd101bded5cfa", "committedDate": "2020-12-16 14:49:20 -0800", "message": "Merge branch 'v1.4-juliet-rose' into feature/command-palette-sorting"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "2359fb0ea1318ab27b3af9851c92470ab0d3f31b", "committedDate": "2021-01-08 09:59:25 -0800", "message": "trivial cleanup"}, {"oid": "3732339a57ede03c1693259dd8f0286a78ae0bbd", "committedDate": "2021-01-09 17:23:11 -0800", "message": "refactor more event classes to the single-file approach"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "6a7e18cd7729bed78f0480207354d21eaca1a2cf", "committedDate": "2021-01-13 15:51:40 -0800", "message": "add Copy Document Path command"}, {"oid": "26073c4471babb1863b58f63976fbde1919e609f", "committedDate": "2021-02-05 14:25:43 -0800", "message": "avoid continuing comment after markdown header"}, {"oid": "8b4c8e1cfe6af39263ef8b4ff16cef9cd051e8c3", "committedDate": "2021-02-05 14:49:01 -0800", "message": "extra null check"}, {"oid": "b0199886aa96af59922661698617a2d1590d16f4", "committedDate": "2021-02-25 14:14:19 -0800", "message": "implement go to next chunk / go to previous chunk in visual editor"}, {"oid": "123fdff04dbb6a98cb045d99b132d5cd7bb17a8a", "committedDate": "2021-04-23 13:36:41 -0700", "message": "rerun lint on doc blur (#9258)"}, {"oid": "ca311da5b1ab819312cfce7521c3a314d4ffd78e", "committedDate": "2021-06-06 09:55:38 -0400", "message": "initial work on qmd"}, {"oid": "7ca095344998e642a7deb64212295f5836c175a0", "committedDate": "2021-06-06 21:38:58 -0400", "message": "compatibility with runtime: shinyrmd"}, {"oid": "bbf5295aa655968f27e990059ac09f802c7d24d1", "committedDate": "2021-06-07 13:36:14 -0400", "message": "remove qmd render work"}, {"oid": "e3c1eca5802d901b0ced605ae7700bbde848de96", "committedDate": "2021-06-07 13:39:51 -0400", "message": "qmd file type"}, {"oid": "8439c6e2ae72df95fbf6ee91006541321ebebda2", "committedDate": "2021-06-08 06:48:28 -0400", "message": "narrow work done for quarto shinyrmd format update"}, {"oid": "704bddac02351d64153ae0edd603eea746842d7f", "committedDate": "2021-06-08 07:57:58 -0400", "message": "improved logic around markdown file type detection"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "9edcff42113bac641fc94ae04b39256d17dc67a3", "committedDate": "2021-06-23 10:11:13 -0400", "message": "provide knit/render on save option"}, {"oid": "0c319ece591b264d4e44385ae0187a80278f5ac1", "committedDate": "2021-06-28 07:51:36 -0400", "message": "render format menu for quarto docs"}, {"oid": "53c7e52d72a5388fa4f2320dc4e417a9d24e77c6", "committedDate": "2021-07-11 19:14:25 -0400", "message": "initial work on job for quarto preview"}, {"oid": "25d1ad5230a5f12da4963550cae1c129495407b8", "committedDate": "2021-07-12 17:00:36 -0400", "message": "start new preview job when switching formats"}, {"oid": "c40b95f0978624addac79d00901b0d893619e6a9", "committedDate": "2021-07-12 20:56:05 -0400", "message": "use standard codepath for quarto website doc renders"}, {"oid": "fba06a5d32b94c5dec48214a445abab85b16893f", "committedDate": "2021-07-12 21:06:22 -0400", "message": "check for quarto type before firing render pending event"}, {"oid": "33aa4bee816f1f34c5b31118b9b82db7984f85a9", "committedDate": "2021-07-14 19:56:28 -0400", "message": "don't call quarto preview if quarto isn't installed"}, {"oid": "4ee924e917b4bbbee2c16f536cddc921131a786d", "committedDate": "2021-07-14 20:14:05 -0400", "message": "correct format menu for all quarto docs"}, {"oid": "d6ce9bd7dc5389f617954f123101abb624337b2b", "committedDate": "2021-07-20 17:25:30 -0400", "message": "make sure file is in the current project before writing canonical based on project settings"}, {"oid": "5187840ebbac77d3e949c16dab18b0f02fdb681e", "committedDate": "2021-07-23 10:51:15 -0700", "message": "wrapping up IDE python integration items (#9626)"}, {"oid": "545dc774afef96787fdbe708f125c78311f0cf46", "committedDate": "2021-07-23 12:04:57 -0700", "message": "tweak metadata comment insert behaviour"}, {"oid": "afe9cb4e8302d72d49b9b416165b8362bb5a899f", "committedDate": "2021-07-24 10:55:56 -0400", "message": "fallback to normal rmd render for qmd website/book files not in the current ide quarto project"}, {"oid": "db6934360d136bdd8ca7d97c9cc6267a748f1b3b", "committedDate": "2021-07-29 07:05:55 -0400", "message": "correct insert chunk behavior for quarto docs"}, {"oid": "e25813f6c9430e1c69fe84580326384a040ae9a0", "committedDate": "2021-08-04 15:24:03 -0400", "message": "Fix for inability to run shiny interative docs from server.R"}, {"oid": "4a023d0a9c87a13f2aeb251430fc4bac8d1f9711", "committedDate": "2021-09-21 09:26:05 -0400", "message": "save/load expansion state of all chunks in a doc prop"}, {"oid": "534349036f88906e238ad410c8233ca61ada9519", "committedDate": "2021-09-21 15:24:13 -0400", "message": "additional work on fold commands for visual mode"}, {"oid": "1eca548ad72126b0fffbb27b7a3d10d668f2f760", "committedDate": "2021-09-22 06:22:41 -0400", "message": "fix detection of extended types from YAML"}, {"oid": "1d7efc605a40a429b185d255c338eb48a9d52cdb", "committedDate": "2021-09-23 11:35:11 -0400", "message": "quarto yaml comment handling in visual editor"}, {"oid": "5b8d7acd9b92cac78c9318fe95f4be7c3f04522e", "committedDate": "2021-09-23 12:29:05 -0700", "message": "Merge remote-tracking branch 'origin/main' into feature/visual-editor-fold-commands"}, {"oid": "f99b55acd50c3ef99451b44d86b9ac52c3c35813", "committedDate": "2021-09-24 13:10:49 -0400", "message": "additional plumbing for yaml completions"}, {"oid": "30d3bf4b7686c2230b5275e6caf6d36f3214c70f", "committedDate": "2021-09-30 15:30:50 -0400", "message": "initial work on reveal editor sync"}, {"oid": "a111570b15b758beb87132c3afdb37b911903fc9", "committedDate": "2021-10-02 09:07:35 -0400", "message": "compute and transmit presentation editor state for both source and visual mode"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "63d60171f7f96698993e7d38be2fbffc9a59e2e1", "committedDate": "2021-10-03 08:48:37 -0400", "message": "pres navigation methods for source and visual editors"}, {"oid": "966376000e308b92b47c2b84b6560d184b61b394", "committedDate": "2021-10-29 11:55:38 -0400", "message": "quarto render: prompt to install rmarkdown for knitr engine"}, {"oid": "65bc66bf8663a5eedecde8fba57e6aa835bde3c5", "committedDate": "2021-10-29 19:10:30 -0400", "message": "remove unused imports"}, {"oid": "a3e379627e2a04cf867fc0d27e0283a636e411a0", "committedDate": "2021-10-31 08:51:29 -0400", "message": "quarto config: rename 'installed' to 'enabled'"}, {"oid": "b45e37ef0a743f8d35887f66a61d21eaf58d208b", "committedDate": "2021-11-03 17:27:16 -0400", "message": "quarto book: incremental pdf preview"}, {"oid": "f376917a73293f6ae82c8c1cf93f005c175a21b1", "committedDate": "2021-11-09 13:48:15 -0500", "message": "specify quarto 'default' format for ide renders; remember last quarto format w/o re-ordering document yaml"}, {"oid": "dde7fef7035f241126cba4d403f2b7834c57d987", "committedDate": "2021-11-10 11:48:52 -0500", "message": "quarto: enable preview for off-format docs in websites"}, {"oid": "194a49dc0653aa082911cfb1048eabf2c5475448", "committedDate": "2021-11-19 14:48:48 -0800", "message": "create lint source for TextEditingTarget"}, {"oid": "c448428809edb43664b605f98c6a89d8932033b6", "committedDate": "2021-11-23 16:41:22 -0800", "message": "clean up TODOs, ensure event handlers cleaned up too"}, {"oid": "1cc3433fbde287105d3de5a9821e53b7b243c131", "committedDate": "2021-11-24 17:53:12 -0500", "message": "feat(i18n): source-editors-text"}, {"oid": "5f0cd2e1e76be0b44f2e07d87c864b554da5f9a4", "committedDate": "2021-11-26 10:53:18 -0500", "message": "fix(code review)"}, {"oid": "0355bb447d9d6bf7e3a00df16e7b21f395524bc0", "committedDate": "2021-11-28 14:09:52 -0800", "message": "Merge pull request #10137 from StatCan/jose-i18nify-source-editors-text"}, {"oid": "f0e6f6aa35d1edad14b93225ecc488f195c0c13a", "committedDate": "2021-11-30 22:22:41 -0500", "message": "committing i18nify progress"}, {"oid": "ce0caa280d30ce48e44b479ab619ad25ca9446d7", "committedDate": "2021-11-30 23:05:04 -0500", "message": "Merge branch 'main' into i18nify-studio-client-pckg"}, {"oid": "66382d9bff2d4532d15ec7b620a731c63589fd4d", "committedDate": "2021-12-02 20:22:23 -0500", "message": "pass formats and project formats to yaml editor context"}, {"oid": "a9c1e78627f6ce7ada3e91b30bf30141cc4390a6", "committedDate": "2021-12-02 20:24:30 -0500", "message": "merge commit"}, {"oid": "a43272615338548bc11f0f6012ef9a893167c0b0", "committedDate": "2021-12-04 08:37:26 -0500", "message": "provide quarto engine to yaml completion"}, {"oid": "2257f3fdbbcd34140b5e58ca008846a1767c68f4", "committedDate": "2021-12-05 07:57:02 -0500", "message": "initial work on markdown mode toolbar"}, {"oid": "5584871710f8df9db57af3e0bb31cf85f8f6d7f5", "committedDate": "2021-12-07 07:57:57 -0500", "message": "use scope list rather than scope tree for detecting engine"}, {"oid": "a9e70ca6d18a9436bdbc751b40ef9f4e1676ee11", "committedDate": "2021-12-08 07:58:20 -0500", "message": "initial work on consolidated markdown toolbar"}, {"oid": "c4333c42c3f6dd717a50350a5442252a2dcbf694", "committedDate": "2021-12-08 09:50:47 -0500", "message": "more refinements to markdown toolbar"}, {"oid": "a9fbf22d62fa1706260b8671988045fcf9bf3992", "committedDate": "2021-12-12 08:26:40 -0500", "message": "use presentation preview for presentations embedded in websites"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "b70cd341c3d691b611ef7bd87ebbdccf9506b7c1", "committedDate": "2022-01-06 20:45:03 -0500", "message": "quarto site preview: fix misdirection of incremental file render"}, {"oid": "b81f4d20c0627b5d11b13a3d7b5bdba51b483be0", "committedDate": "2022-05-04 05:39:11 -0400", "message": "quarto: support for previewing text file formats"}, {"oid": "b5b242bfcfe8fcd6714392b747ac0f625adfcb14", "committedDate": "2022-05-06 14:35:12 -0400", "message": "visual editor: auto-prefix footnotes in included files"}, {"oid": "25de4cbc0fdc4e8eaef82bb1c64ac8f9e77df37b", "committedDate": "2022-05-06 13:02:57 -0700", "message": "show test_that() calls in document outline (#11108)"}, {"oid": "d175f4e7b1dcd832cf251ad557d01ba783908035", "committedDate": "2022-05-18 16:41:51 -0400", "message": "change def of isExecutableChunk to recognize multiple formats of eval = FALSE"}, {"oid": "2a15d3000f7f2e246040f04f5a1f69bcc684dd74", "committedDate": "2022-05-31 11:50:46 -0400", "message": "more string updates"}, {"oid": "d685e69c4ca0eb0918ee3507cb34c4586ef19eea", "committedDate": "2022-06-02 10:06:58 -0400", "message": "update runSelectionasJob"}, {"oid": "30800793056152e103a3d5b870d093f61a248d71", "committedDate": "2022-06-06 15:37:18 -0400", "message": "isWorkbenchJob"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "e4f3dced1b1290c53badc83f4958bf8cf8ab4caa", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Initial draft of PyShiny Run App support"}, {"oid": "43a40a74c393279238b4a25d80ed67c718b247f2", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Hide Shiny submenu when in PyShiny mode"}, {"oid": "af47d1272d71463f37b01f084b1d61cbea7c3847", "committedDate": "2022-09-20 10:43:19 -0700", "message": "Change the command used to run PyShiny apps"}, {"oid": "abbf81bc21a008e2022280c3293a95a62e05319d", "committedDate": "2022-09-23 15:25:16 -0700", "message": "Fix typo; use proper bash escaping function"}, {"oid": "21efc9735599542c3e9f5799bb66e18ff6f8fb75", "committedDate": "2022-09-29 11:05:22 -0700", "message": "no word wrap markdown in comments (#12012)"}, {"oid": "404c6dea4cd88c2325c36f416151ab45c6016bb7", "committedDate": "2022-09-30 04:37:49 -0700", "message": "eliminate eclipse warnings"}, {"oid": "4f10584f9e9a5eda2e599afe1e93c63f30f35bf5", "committedDate": "2022-09-30 12:59:40 -0700", "message": "initial work on next gen preview"}, {"oid": "944c53832a52567ebe7e6e78d2847aa600f36b95", "committedDate": "2022-10-01 13:46:23 -0700", "message": "enable document level preview override for books"}, {"oid": "f28e4a8ffc0d8d475b44358e8bd73855c84803a3", "committedDate": "2022-10-02 05:14:33 -0700", "message": "more cleanup on editor format handling"}, {"oid": "9316ffab816ec1e196cbb2274643a7865aa4f50b", "committedDate": "2022-10-02 09:05:17 -0700", "message": "don't presume that quarto preview format is html"}, {"oid": "1a3b749654108a12dc99f32ff0cda9aef8bdf98a", "committedDate": "2022-10-31 12:31:53 -0400", "message": "Fix pathing/alias issues for Py Shiny on Windows"}, {"oid": "01eb2866f302aab4e6e90f5c1af67cc38c1b662b", "committedDate": "2022-11-01 11:55:28 -0400", "message": "don't escape bash on windows"}, {"oid": "2c55d7724051fd5a8dfda3de2dc394549b5b6c99", "committedDate": "2022-11-03 09:52:52 -0400", "message": "add double quotes to windows path"}, {"oid": "d1e1b2f5c26e4f42bec48bfc8cb074acb6784c8b", "committedDate": "2022-11-17 13:09:13 -0500", "message": "Rainbow fenced divs (#12172)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzODI2Ng==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424638266", "body": "This might not be safe -- if I understand correctly, this call will load Ace concurrently, but it seems like since we're about to initialize tabs (which might require Ace to be available) we would want to ensure Ace has really been loaded.\r\n\r\n", "bodyText": "This might not be safe -- if I understand correctly, this call will load Ace concurrently, but it seems like since we're about to initialize tabs (which might require Ace to be available) we would want to ensure Ace has really been loaded.", "bodyHTML": "<p dir=\"auto\">This might not be safe -- if I understand correctly, this call will load Ace concurrently, but it seems like since we're about to initialize tabs (which might require Ace to be available) we would want to ensure Ace has really been loaded.</p>", "author": "kevinushey", "createdAt": "2020-05-13T18:16:37Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -586,17 +598,57 @@ public void onNewWorkingCopy(NewWorkingCopyEvent event)\n          }\n       });\n       \n-      events.addHandler(PopoutDocEvent.TYPE, this);\n-      events.addHandler(DocWindowChangedEvent.TYPE, this);\n-      events.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n-      events.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n-      events.addHandler(DebugModeChangedEvent.TYPE, this);\n-      events.addHandler(ReplaceRangesEvent.TYPE, this);\n-      events.addHandler(GetEditorContextEvent.TYPE, this);\n-      events.addHandler(SetSelectionRangesEvent.TYPE, this);\n-      events.addHandler(OpenProfileEvent.TYPE, this);\n-      events.addHandler(RequestDocumentSaveEvent.TYPE, this);\n-      events.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      events_.addHandler(PopoutDocEvent.TYPE, this);\n+      events_.addHandler(DocWindowChangedEvent.TYPE, this);\n+      events_.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n+      events_.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n+      events_.addHandler(DebugModeChangedEvent.TYPE, this);\n+      events_.addHandler(ReplaceRangesEvent.TYPE, this);\n+      events_.addHandler(GetEditorContextEvent.TYPE, this);\n+      events_.addHandler(SetSelectionRangesEvent.TYPE, this);\n+      events_.addHandler(OpenProfileEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      \n+      initialized_ = true;\n+   }\n+\n+   public void loadFullSource()\n+   {\n+      AceEditor.preload();", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4MTMxNQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424781315", "bodyText": "Good catch. I updated the code with a new method that loads Ace and calls loadFullSource (now private) in its callback.", "author": "melissa-barca", "createdAt": "2020-05-13T23:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzODI2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9217906b990746c6709b77851db7996797c9dd8f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -609,14 +599,19 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(OpenProfileEvent.TYPE, this);\n       events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n       events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n-      \n+\n       initialized_ = true;\n    }\n \n-   public void loadFullSource()\n+   public void load()\n    {\n-      AceEditor.preload();\n+      AceEditor.load(() -> {\n+         loadFullSource();\n+      });\n+   }\n \n+   private void loadFullSource()\n+   {\n       // sync UI prefs with shortcut manager\n       userPrefs_ = RStudioGinjector.INSTANCE.getUserPrefs();\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -609,14 +599,19 @@ public class Source implements InsertSourceHandler,\n       events_.addHandler(OpenProfileEvent.TYPE, this);\n       events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n       events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n-      \n+\n       initialized_ = true;\n    }\n \n-   public void loadFullSource()\n+   public void load()\n    {\n-      AceEditor.preload();\n+      AceEditor.load(() -> {\n+         loadFullSource();\n+      });\n+   }\n \n+   private void loadFullSource()\n+   {\n       // sync UI prefs with shortcut manager\n       userPrefs_ = RStudioGinjector.INSTANCE.getUserPrefs();\n \n", "next_change": {"commit": "a5240b647de8e743f55a04aad93cac2b0d674c49", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..d21339a108 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -610,6 +734,11 @@ public class Source implements InsertSourceHandler,\n       });\n    }\n \n+   public void loadDisplay()\n+   {\n+      restoreDocuments(session_);\n+   }\n+\n    private void loadFullSource()\n    {\n       // sync UI prefs with shortcut manager\n", "next_change": {"commit": "e629c4aca34f28163d155271e65fcb829f127599", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex d21339a108..dcc3da84bb 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -737,6 +737,22 @@ public class Source implements InsertSourceHandler,\n    public void loadDisplay()\n    {\n       restoreDocuments(session_);\n+\n+      // As tabs were added before, manageCommands() was suppressed due to\n+      // initialized_ being false, so we need to run it explicitly\n+      manageCommands();\n+      // Same with this event\n+      fireDocTabsChanged();\n+      \n+      // open project or edit_published docs (only for main source window)\n+      if (SourceWindowManager.isMainSourceWindow())\n+      {\n+         openProjectDocs(session_);\n+         openEditPublishedDocs();\n+      }\n+      \n+      // add vim commands\n+      initVimCommands();\n    }\n \n    private void loadFullSource()\n", "next_change": {"commit": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex dcc3da84bb..3daad397d3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -734,27 +614,6 @@ public class Source implements InsertSourceHandler,\n       });\n    }\n \n-   public void loadDisplay()\n-   {\n-      restoreDocuments(session_);\n-\n-      // As tabs were added before, manageCommands() was suppressed due to\n-      // initialized_ being false, so we need to run it explicitly\n-      manageCommands();\n-      // Same with this event\n-      fireDocTabsChanged();\n-      \n-      // open project or edit_published docs (only for main source window)\n-      if (SourceWindowManager.isMainSourceWindow())\n-      {\n-         openProjectDocs(session_);\n-         openEditPublishedDocs();\n-      }\n-      \n-      // add vim commands\n-      initVimCommands();\n-   }\n-\n    private void loadFullSource()\n    {\n       // sync UI prefs with shortcut manager\n", "next_change": {"commit": "fcc85338d4567365a7461736d7350b9639fc8e00", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 3daad397d3..0141ba6497 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -614,6 +748,32 @@ public class Source implements InsertSourceHandler,\n       });\n    }\n \n+   public void loadDisplay()\n+   {\n+      restoreDocuments(session_);\n+      for (Display v : views_)\n+      {\n+         v.addBeforeShowHandler(this);\n+      }\n+\n+\n+      // As tabs were added before, manageCommands() was suppressed due to\n+      // initialized_ being false, so we need to run it explicitly\n+      manageCommands();\n+      // Same with this event\n+      fireDocTabsChanged();\n+      \n+      // open project or edit_published docs (only for main source window)\n+      if (SourceWindowManager.isMainSourceWindow())\n+      {\n+         openProjectDocs(session_);\n+         openEditPublishedDocs();\n+      }\n+      \n+      // add vim commands\n+      initVimCommands();\n+   }\n+\n    private void loadFullSource()\n    {\n       // sync UI prefs with shortcut manager\n", "next_change": {"commit": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 0141ba6497..901d7e14e1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -751,25 +430,21 @@ public class Source implements InsertSourceHandler,\n    public void loadDisplay()\n    {\n       restoreDocuments(session_);\n-      for (Display v : views_)\n-      {\n-         v.addBeforeShowHandler(this);\n-      }\n-\n+      columnManager_.beforeShow();\n \n       // As tabs were added before, manageCommands() was suppressed due to\n       // initialized_ being false, so we need to run it explicitly\n-      manageCommands();\n+      columnManager_.manageCommands(false);\n       // Same with this event\n-      fireDocTabsChanged();\n-      \n+      columnManager_.fireDocTabsChanged();\n+\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n          openProjectDocs(session_);\n          openEditPublishedDocs();\n       }\n-      \n+\n       // add vim commands\n       initVimCommands();\n    }\n", "next_change": {"commit": "29ab246060f23296d28e8e105be209c40205d867", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 901d7e14e1..242487f201 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -441,7 +431,7 @@ public class Source implements InsertSourceHandler,\n       // open project or edit_published docs (only for main source window)\n       if (SourceWindowManager.isMainSourceWindow())\n       {\n-         openProjectDocs(session_);\n+         columnManager_.openProjectDocs(session_, true);\n          openEditPublishedDocs();\n       }\n \n", "next_change": {"commit": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 242487f201..c7e5ea0a19 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -436,7 +427,7 @@ public class Source implements InsertSourceHandler,\n       }\n \n       // add vim commands\n-      initVimCommands();\n+      columnManager_.initVimCommands();\n    }\n \n    private void loadFullSource()\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424639195", "body": "nit: method name should be camelCase?", "bodyText": "nit: method name should be camelCase?", "bodyHTML": "<p dir=\"auto\">nit: method name should be camelCase?</p>", "author": "kevinushey", "createdAt": "2020-05-13T18:18:05Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java", "diffHunk": "@@ -100,6 +100,7 @@ public void writeUserPrefs()\n \n    public void writeUserPrefs(CommandWithArg<Boolean> onCompleted)\n    {\n+      UpdatePrefs(session_.getSessionInfo().getPrefs());", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MTA1OQ==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424641059", "bodyText": "(realize this is a pre-existing method but maybe worth changing while you're working with this code)", "author": "kevinushey", "createdAt": "2020-05-13T18:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1Mzk5Mg==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424653992", "bodyText": "Done.", "author": "melissa-barca", "createdAt": "2020-05-13T18:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzOTE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\nindex c02a6220ce..4242b8886b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n", "chunk": "@@ -100,7 +100,7 @@ public class UserPrefs extends UserPrefsComputed\n \n    public void writeUserPrefs(CommandWithArg<Boolean> onCompleted)\n    {\n-      UpdatePrefs(session_.getSessionInfo().getPrefs());\n+      updatePrefs(session_.getSessionInfo().getPrefs());\n       server_.setUserPrefs(\n          session_.getSessionInfo().getUserPrefs(),\n          new ServerRequestCallback<Void>() \n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\nindex c02a6220ce..4242b8886b 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n", "chunk": "@@ -100,7 +100,7 @@ public class UserPrefs extends UserPrefsComputed\n \n    public void writeUserPrefs(CommandWithArg<Boolean> onCompleted)\n    {\n-      UpdatePrefs(session_.getSessionInfo().getPrefs());\n+      updatePrefs(session_.getSessionInfo().getPrefs());\n       server_.setUserPrefs(\n          session_.getSessionInfo().getUserPrefs(),\n          new ServerRequestCallback<Void>() \n", "next_change": {"commit": "beb9af52195516721189d70fd8150d7b4494ad03", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\nindex 4242b8886b..1dce50eb92 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/prefs/model/UserPrefs.java\n", "chunk": "@@ -103,7 +102,7 @@ public class UserPrefs extends UserPrefsComputed\n       updatePrefs(session_.getSessionInfo().getPrefs());\n       server_.setUserPrefs(\n          session_.getSessionInfo().getUserPrefs(),\n-         new ServerRequestCallback<Void>() \n+         new ServerRequestCallback<Void>()\n          {\n             @Override\n             public void onResponseReceived(Void v)\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "f22d0b4bd090c355331564f6b91f093796539cc2", "committedDate": "2020-05-24 10:42:41 -0700", "message": "fix startup timing issue with enabling console announcements (#6947)"}, {"oid": "f981c69ec7dad0df75d0a70c6cceb1cdec7dd45f", "committedDate": "2020-05-24 10:55:20 -0700", "message": "set screen reader menu text to reflect enable/disable state"}, {"oid": "d5fb4529898c7ababb66d90a8e6092c98ce98ad2", "committedDate": "2020-05-28 14:36:13 -0700", "message": "use code emitters to make prefs enumerable"}, {"oid": "beb9af52195516721189d70fd8150d7b4494ad03", "committedDate": "2020-09-15 11:36:49 -0700", "message": "whitespace cleanup, tell IntelliJ to not flag @handler methods as unused"}, {"oid": "6e1c4f775562c028006d1b10a7a4096af1713d1c", "committedDate": "2020-09-15 16:59:35 -0700", "message": "Disable virtual scrolling when screen reader mode toggled on"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "767e277f00acc9f9ca704a2301adec35aab19291", "committedDate": "2021-11-25 08:59:58 -0500", "message": "feat(i18n) workbench-prefs"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}, {"oid": "ebbc12565c1ca070d2e8e5dc80195903c02f2758", "committedDate": "2022-09-23 12:49:18 -0400", "message": "Add editor scrolling sensitivity preference (#12017)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MjM1NA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424642354", "body": "Can we document the intent here? (why do we need to fire this \"empty\" DocTabsChangedEvent?)", "bodyText": "Can we document the intent here? (why do we need to fire this \"empty\" DocTabsChangedEvent?)", "bodyHTML": "<p dir=\"auto\">Can we document the intent here? (why do we need to fire this \"empty\" DocTabsChangedEvent?)</p>", "author": "kevinushey", "createdAt": "2020-05-13T18:23:22Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java", "diffHunk": "@@ -586,17 +598,57 @@ public void onNewWorkingCopy(NewWorkingCopyEvent event)\n          }\n       });\n       \n-      events.addHandler(PopoutDocEvent.TYPE, this);\n-      events.addHandler(DocWindowChangedEvent.TYPE, this);\n-      events.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n-      events.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n-      events.addHandler(DebugModeChangedEvent.TYPE, this);\n-      events.addHandler(ReplaceRangesEvent.TYPE, this);\n-      events.addHandler(GetEditorContextEvent.TYPE, this);\n-      events.addHandler(SetSelectionRangesEvent.TYPE, this);\n-      events.addHandler(OpenProfileEvent.TYPE, this);\n-      events.addHandler(RequestDocumentSaveEvent.TYPE, this);\n-      events.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      events_.addHandler(PopoutDocEvent.TYPE, this);\n+      events_.addHandler(DocWindowChangedEvent.TYPE, this);\n+      events_.addHandler(DocTabDragInitiatedEvent.TYPE, this);\n+      events_.addHandler(PopoutDocInitiatedEvent.TYPE, this);\n+      events_.addHandler(DebugModeChangedEvent.TYPE, this);\n+      events_.addHandler(ReplaceRangesEvent.TYPE, this);\n+      events_.addHandler(GetEditorContextEvent.TYPE, this);\n+      events_.addHandler(SetSelectionRangesEvent.TYPE, this);\n+      events_.addHandler(OpenProfileEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentSaveEvent.TYPE, this);\n+      events_.addHandler(RequestDocumentCloseEvent.TYPE, this);\n+      \n+      initialized_ = true;\n+   }\n+\n+   public void loadFullSource()\n+   {\n+      AceEditor.preload();\n+\n+      // sync UI prefs with shortcut manager\n+      userPrefs_ = RStudioGinjector.INSTANCE.getUserPrefs();\n+\n+      if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_VIM)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_VIM);\n+      else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_EMACS)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_EMACS);\n+      else if (userPrefs_.editorKeybindings().getValue() == UserPrefs.EDITOR_KEYBINDINGS_SUBLIME)\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_SUBLIME);\n+      else\n+         ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n+   \n+      events_.fireEvent(new DocTabsChangedEvent(null,", "originalCommit": "6b0f1284217369ad95fe502f4c976aac4cbf4feb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMDAzOA==", "url": "https://github.com/rstudio/rstudio/pull/6849#discussion_r424730038", "bodyText": "IIRC this code is needed for future work when we have multiple source columns. I've removed it from this branch and added a comment to the other to document it.", "author": "melissa-barca", "createdAt": "2020-05-13T21:04:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MjM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "d05ce26ff1323507099b91cb0cdffdaf215a5ee6", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..29e1b6b88c 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -629,12 +628,6 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n-      events_.fireEvent(new DocTabsChangedEvent(null,\n-                                                new String[0],\n-                                                new FileIcon[0],\n-                                                new String[0],\n-                                                new String[0]));\n-\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 6446365fc0..56a50b35f3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -629,12 +624,6 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n-      events_.fireEvent(new DocTabsChangedEvent(null,\n-                                                new String[0],\n-                                                new FileIcon[0],\n-                                                new String[0],\n-                                                new String[0]));\n-\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 56a50b35f3..7149b489b7 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -624,6 +733,13 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n+      // !!! comment why this is needed\n+      events_.fireEvent(new DocTabsChangedEvent(null,\n+                                                new String[0],\n+                                                new FileIcon[0],\n+                                                new String[0],\n+                                                new String[0]));\n+\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "f80341e1290ec0ed7126347d255c59d685a460ab", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 7149b489b7..c2171003a1 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -733,13 +628,6 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n-      // !!! comment why this is needed\n-      events_.fireEvent(new DocTabsChangedEvent(null,\n-                                                new String[0],\n-                                                new FileIcon[0],\n-                                                new String[0],\n-                                                new String[0]));\n-\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex c2171003a1..4719ec35fc 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -628,6 +748,13 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n+      // !!! comment why this is needed\n+      events_.fireEvent(new DocTabsChangedEvent(null,\n+                                                new String[0],\n+                                                new FileIcon[0],\n+                                                new String[0],\n+                                                new String[0]));\n+\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 4719ec35fc..3daad397d3 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -748,13 +628,6 @@ public class Source implements InsertSourceHandler,\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n    \n-      // !!! comment why this is needed\n-      events_.fireEvent(new DocTabsChangedEvent(null,\n-                                                new String[0],\n-                                                new FileIcon[0],\n-                                                new String[0],\n-                                                new String[0]));\n-\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "fcc85338d4567365a7461736d7350b9639fc8e00", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 3daad397d3..0141ba6497 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -627,7 +787,16 @@ public class Source implements InsertSourceHandler,\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_SUBLIME);\n       else\n          ShortcutManager.INSTANCE.setEditorMode(KeyboardShortcut.MODE_DEFAULT);\n-   \n+\n+      initialized_ = true;\n+\n+      // !!! comment why this is needed\n+      events_.fireEvent(new DocTabsChangedEvent(null,\n+                                                new String[0],\n+                                                new FileIcon[0],\n+                                                new String[0],\n+                                                new String[0]));\n+\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": {"commit": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "changed_code": [{"header": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\nindex 0141ba6497..580427cec8 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/source/Source.java\n", "chunk": "@@ -790,13 +498,6 @@ public class Source implements InsertSourceHandler,\n \n       initialized_ = true;\n \n-      // !!! comment why this is needed\n-      events_.fireEvent(new DocTabsChangedEvent(null,\n-                                                new String[0],\n-                                                new FileIcon[0],\n-                                                new String[0],\n-                                                new String[0]));\n-\n       // fake shortcuts for commands_ which we handle at a lower level\n       commands_.goToHelp().setShortcut(new KeyboardShortcut(\"F1\", KeyCodes.KEY_F1, KeyboardShortcut.NONE));\n       commands_.goToDefinition().setShortcut(new KeyboardShortcut(\"F2\", KeyCodes.KEY_F2, KeyboardShortcut.NONE));\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "6ae775814da09643c6cd24d693e6d4c7adbc1765", "message": "Merge commit", "committedDate": null}, {"oid": "8bac7532132a45828129a17e2383a46ca99a8e33", "committedDate": "2020-05-14 10:37:34 -0700", "message": "add display list class"}, {"oid": "52fb6a4ec07e805d8468a7ec1ac49b2609b1fb82", "committedDate": "2020-05-14 10:41:49 -0700", "message": "set up pane configuration to be able to make mulitple source columns"}, {"oid": "e1debb632208db37860db4709e42c15c13ca0f6f", "committedDate": "2020-05-14 10:45:05 -0700", "message": "allow for an extra source column to be created, refactor code, move code from Source to SourceShim"}, {"oid": "66d63ec977b805eee892ef44f06f0946ec57d666", "committedDate": "2020-05-14 10:47:24 -0700", "message": "generate unique display names in main source window"}, {"oid": "3aef1e0d9cd22371d1863be0bd6da1d6199651c8", "committedDate": "2020-05-14 10:47:48 -0700", "message": "begin implementing drag and drop events for multiple main displays"}, {"oid": "4c35ccc770d30591a20b7bdec30fedef348571a0", "committedDate": "2020-05-14 10:49:12 -0700", "message": "pass display in required events"}, {"oid": "eff672d2b168fc5e39237c59f1d06921b685bf99", "committedDate": "2020-05-14 11:06:56 -0700", "message": "add temporary button to add source columns"}, {"oid": "b8ac76404ea2a11ebc20e2561135ebdf197d6a54", "committedDate": "2020-05-14 11:06:56 -0700", "message": "move closing source tabs code from to the Display"}, {"oid": "25eda7c195a8a9de7382728d8f71e9ef03d84090", "committedDate": "2020-05-14 11:07:18 -0700", "message": "allow drag and drop between multiple source columns in the main window and from/to satellite windows"}, {"oid": "ae993fa75eeb0b1bb25a9c2f949dc465105768ea", "committedDate": "2020-05-14 11:07:18 -0700", "message": "reorder Source.Display and SourcePane methods, remove unused functions and comments, update icons"}, {"oid": "146f64ee5bc3305605c6dfce318668322e6b1bd7", "committedDate": "2020-05-14 11:07:49 -0700", "message": "fix error that should only happen when prefs are improperly manually manipulated"}, {"oid": "6cd8b0a21c42715e7338de6aa1b3251a4224514b", "committedDate": "2020-05-14 14:22:40 -0700", "message": "properly sync closing tabs between source columns"}, {"oid": "c3bd315cc6c655fd939f3d8167b0725401c58809", "committedDate": "2020-05-14 16:55:12 -0700", "message": "remove source pane when the last tab is closed"}, {"oid": "f80341e1290ec0ed7126347d255c59d685a460ab", "committedDate": "2020-05-15 10:44:31 -0400", "message": "command pallette entries for visual mode"}, {"oid": "7e13afd3d15d3b84985f7deb0df7b80091f62c7e", "committedDate": "2020-05-18 17:36:05 -0700", "message": "remove debug code and make split panel persist state for multiple columns"}, {"oid": "a5240b647de8e743f55a04aad93cac2b0d674c49", "committedDate": "2020-05-19 14:21:34 -0700", "message": "restore source docs in correct views"}, {"oid": "e629c4aca34f28163d155271e65fcb829f127599", "committedDate": "2020-05-19 14:59:32 -0700", "message": "start enabling display buttons"}, {"oid": "e7631be0b36c758fd71f47183abdca10356f17a2", "committedDate": "2020-05-19 18:14:32 -0700", "message": "assign events properly on restore with multiple columns"}, {"oid": "c363e9f673c0386e657ed2f480a95900996d71ad", "committedDate": "2020-05-20 12:00:56 -0700", "message": "properly set activeEditor on tab selection"}, {"oid": "be2c5d72ddb6af4a7fe67f164e16a0e942748f33", "committedDate": "2020-05-20 12:49:02 -0700", "message": "remove debug statements"}, {"oid": "3fdda38e9a78a984a25c44e1672cf0869fad19cd", "committedDate": "2020-05-20 14:18:03 -0700", "message": "bulk update copyright dates for 2020"}, {"oid": "fcc85338d4567365a7461736d7350b9639fc8e00", "committedDate": "2020-05-20 15:49:23 -0700", "message": "begin moving add tabs to SourcePane"}, {"oid": "91055f7df3e46d16e925f7c7ea0e978718b76551", "committedDate": "2020-05-20 19:13:52 -0700", "message": "begin moving functionality to column manager (WIP) DOES NOT COMPILE"}, {"oid": "91b6ee06cc56af6c542b24bdb6e63ce835afed79", "committedDate": "2020-05-21 19:13:45 -0700", "message": "update PaneManager to use SourceColumnManager, continue migrating code to SourceColumnManager"}, {"oid": "97eddbe8a25f6b54bb910fe9703052bb12efde0f", "committedDate": "2020-05-22 17:58:23 -0700", "message": "pull logic from Source to create a SourceColumn class and SourceColumnManager class to hold and manage additional source columns"}, {"oid": "25802daf75dce70a540d5f948a80c9bb0bc4c884", "committedDate": "2020-05-26 16:15:09 -0700", "message": "inject SourceColumns, renable drag & drop, fix jsni code, continue migrating source code to SourceColumn/Manager"}, {"oid": "b4aa7719fa1042d6151479dc111fedca120e9bdf", "committedDate": "2020-05-27 14:42:10 -0700", "message": "remove unnecessary imports, properly assign Untitled numbers and manage editor commands"}, {"oid": "d5d6cfcbf0e3b5859c552f6997a5bd0715f0071f", "committedDate": "2020-05-27 16:56:15 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "29ab246060f23296d28e8e105be209c40205d867", "committedDate": "2020-05-27 18:41:53 -0700", "message": "handle column consolidation based on user pref, migrate logic from Source to SourceColumnManager"}, {"oid": "0f1748d525c17dbb9b4021d3cb65b3784e7e0c68", "committedDate": "2020-05-28 17:12:11 -0700", "message": "move applicable code from Source to SourceColumnManager"}, {"oid": "9484252433810ac79cc940c4ef041bf2e5d8adee", "committedDate": "2020-05-28 17:45:27 -0700", "message": "clean up style and remove unused variables"}, {"oid": "6ce1e819e2ca07bcfeaef5b1b97608981ea17599", "committedDate": "2020-06-05 12:46:04 -0700", "message": "fix issue with start up"}, {"oid": "2e7020ca7ef21b96dd1b4e1424f56feb6d5b7f0f", "committedDate": "2020-06-09 15:20:31 -0700", "message": "remove outdates comments and debug code. reset imports changed by the IDE."}, {"oid": "ebc3178e9e6c463ef4bdca79e22105a352c53bfd", "committedDate": "2020-06-10 11:39:47 -0700", "message": "Merge pull request #7043 from rstudio/feature/command-palette-settings"}, {"oid": "42a8c6a26c24776f4eb0f75170f9f3a26cd5daa5", "committedDate": "2020-06-10 18:21:31 -0700", "message": "fix bug with pane splitters, add method so the column manager can close all tabs for a specified colum"}, {"oid": "55b1fabe5fd8169f4c361c796a36b6074506ce59", "committedDate": "2020-06-10 19:04:24 -0700", "message": "remove unnecessary event call"}, {"oid": "6b2803ecca9ccba587cfd13c4cea29c6d7dfb0a1", "committedDate": "2020-06-15 17:13:23 -0700", "message": "prevent null error, remove duplicate function"}, {"oid": "0da6779905d14018e12dff776755a8daf1b0d61a", "committedDate": "2020-06-16 14:43:30 -0700", "message": "bring source pane into view when new file is opened"}, {"oid": "05fd9a614453d32d055b6053ebc9a21c1dde1ecc", "committedDate": "2020-06-16 15:13:52 -0700", "message": "ensure source pane always opens with a document"}, {"oid": "916ce529efc28044cb9bef30e0c70625960c86f2", "committedDate": "2020-06-16 15:43:39 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "a29761dc60190db719ec52aad20b265df97a3dd9", "committedDate": "2020-06-17 12:15:00 -0700", "message": "prevent new docs from being created before prior documents have been restored"}, {"oid": "c1c6a16d8ac56a1c7c0894cde178cf6d481e3640", "committedDate": "2020-06-19 12:18:40 -0400", "message": "eliminate eclipse warnings"}, {"oid": "3a8987075cf93fac295c630cefaf2a71b4a05718", "committedDate": "2020-06-23 12:32:05 -0700", "message": "adding debug code"}, {"oid": "4aa3d6a4dbf039eb2d979655e0cbf79e591bc5cf", "committedDate": "2020-06-25 10:54:51 -0700", "message": "fix active document check (#7225)"}, {"oid": "2ff8bdf0a6b7282c92548a4fc52d0cd1d5b89f3d", "committedDate": "2020-06-29 20:01:39 -0400", "message": "xref file opening"}, {"oid": "4f3b1593287ad193f404d863cd95f0ed1c2bfe0e", "committedDate": "2020-06-29 21:04:20 -0400", "message": "xref link navigation"}, {"oid": "065ce3136b881eef2ccabafcff0ab630416dd9ae", "committedDate": "2020-06-30 14:46:27 -0700", "message": "fix source navigation and synctex commands"}, {"oid": "a4ebd7a7f3382f2fc4f5faa3a9afb9984b8d5f32", "committedDate": "2020-06-30 18:55:54 -0700", "message": "code clean up, remove unused code"}, {"oid": "ffbfeb7081d1d704d40b4cb3334515e88bcfe78f", "committedDate": "2020-06-30 19:20:04 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "190ed205e5a6e53ed27d78ed55c3ecaae3108b06", "committedDate": "2020-06-30 19:32:40 -0700", "message": "remove debug code"}, {"oid": "77a15040fae10062c997cc72d52a5ba3d89cf6ea", "committedDate": "2020-07-01 12:07:22 -0700", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into feature/source-columns"}, {"oid": "492b3fc9c0a9d93faea9921ba9704d725aa73b00", "committedDate": "2020-07-01 14:41:06 -0700", "message": "ensure new columns appear with an editor and don't appear if additional columns not enabled"}, {"oid": "7b000de8d04fc2c6652f526550b0c09e28d01ab7", "committedDate": "2020-07-05 07:18:52 -0400", "message": "source history navigation using mouse forward/back buttons"}, {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a", "committedDate": "2020-07-06 10:27:19 -0700", "message": "revert source nav changes"}, {"oid": "12b87a84cf8594e96697c2b8a6f6b861244642c4", "committedDate": "2020-07-06 17:36:41 -0700", "message": "fix SwitchToDoc event"}, {"oid": "532a64030c34005cec5144d5a28eeb8217097d69", "committedDate": "2020-07-07 06:31:41 -0400", "message": "handle forward/back mouse clicks in all source panes"}, {"oid": "00cfd5a0f26d30b99d73156f2c89d6b2a39a107b", "committedDate": "2020-07-07 13:56:23 -0700", "message": "Merge branch 'master' into feature/source-columns"}, {"oid": "5bca3a00dd94ec8f01f3931e7f10b440f3670822", "committedDate": "2020-07-08 14:27:32 -0700", "message": "remove DocTabsChangedEvent and update docs status directly through the view"}, {"oid": "e0c36e166921fe833ea149bffc8b2139aaaf3a31", "committedDate": "2020-07-08 14:45:59 -0700", "message": "remove extra white space"}, {"oid": "6dbef958710ef72594a4870b6aac2c8ba6394b91", "committedDate": "2020-07-11 21:52:11 -0400", "message": "remove unused"}, {"oid": "edd8229ea67b7d0e5a3ac30b61dd7ebfb1ebb4e5", "committedDate": "2020-07-15 16:32:59 -0700", "message": "determine next tab and select on F6"}, {"oid": "2c3aadf2175d5cbe3781b90a365c74c9f488c3c5", "committedDate": "2020-07-16 17:41:08 -0700", "message": "add setFocus() call to WorkbenchTab so every tab can be focused"}, {"oid": "ef035cc5e9f0d893eae4b21207a4cfe79854a65a", "committedDate": "2020-07-17 15:29:01 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "0002b921e7615de736697d421dde3241351a3014", "committedDate": "2020-07-20 16:17:56 -0700", "message": "navigate to bookdown xrefs in omni-search (#7302)"}, {"oid": "d09a47892c154ad1bc12b0978259f4e29a4a97c3", "committedDate": "2020-07-21 15:29:44 -0700", "message": "fix issue where selected tab on startup was being overwritten, persist active column"}, {"oid": "0beea075fb1e7ea1ef354a04d7aecfb3d55fa093", "committedDate": "2020-07-22 14:49:30 -0700", "message": "create new docs with code in only the most recently active source window"}, {"oid": "30b54cfce4e0073f9ee56a28022e341a68df9878", "committedDate": "2020-07-23 10:46:38 -0700", "message": "defer xref navigation (so Ace has chance to init for new docs)"}, {"oid": "13f7ba5ef71622469735e74c230fde2fe77bfbd1", "committedDate": "2020-07-23 13:48:11 -0700", "message": "if the last focused window has been closed, open the new doc in the main source window"}, {"oid": "79fec6da2d078d1691c99ccdd56e4abb356d28ae", "committedDate": "2020-07-23 15:52:17 -0700", "message": "Merge pull request #7421 from rstudio/bugfix/single-new-doc"}, {"oid": "0aec153768297c0c4cbff61cbdb615bedff94d55", "committedDate": "2020-07-24 12:28:38 -0700", "message": "Merge branches 'feature/cycle-panes' and 'master' of https://github.com/rstudio/rstudio into feature/cycle-panes"}, {"oid": "af76fb019f9791bfe6d7b2666b82940476862fac", "committedDate": "2020-07-24 14:11:02 -0700", "message": "Merge remote-tracking branch 'origin/master' into feature/source-history-nav-mouse"}, {"oid": "9ca25e3964734e51ae61eaf154aee05e37540c3c", "committedDate": "2020-07-25 10:26:06 -0700", "message": "Only do mouse back/forward source nav when mouse in source pane"}, {"oid": "66c44bb4193f338713ed0aa0f1fd458d96f77fdd", "committedDate": "2020-07-31 13:22:11 -0700", "message": "ensure focus on navigate when using fuzzy finder"}, {"oid": "07d321f3ba90dfc59c1201761c8c45023fd25719", "committedDate": "2020-08-03 10:04:10 -0700", "message": "delegate focus requests to panmirror when visual mode active"}, {"oid": "2377d488f3b224d1a284dac40c59c4a7aa21e777", "committedDate": "2020-08-12 18:38:45 -0400", "message": "implement rstudioapi::navigateToFile for satellite windows"}, {"oid": "bdf94052c87d8de2db4dd529a4ee5fe0db6fa7f9", "committedDate": "2020-08-14 18:58:27 -0400", "message": "implement moveCursor flag on rstudioapi::navigateToFile. Replace navigateToFileWithoutFocus by adding a boolean to the already existing navigateToFile call."}, {"oid": "5ba4653bbae1d557bd89e3fffff3b3e071d3a07e", "committedDate": "2020-08-17 14:27:04 -0400", "message": "open new doc when main source is made visible after start up"}, {"oid": "0c4858cb7dd47016a872d3f3bb375afe768c7214", "committedDate": "2020-08-21 13:11:16 -0400", "message": "Merge pull request #7617 from rstudio/bugfix/no-new-doc-for-main"}, {"oid": "784d7718d3ae20d73fd2058d1dc482ea9dbfa34c", "committedDate": "2020-09-09 10:20:53 -0700", "message": "implement simple selection-based transformations for visual mode (#7738)"}, {"oid": "5d0a3e477eab496eb0e9bc092700be0e6b689b38", "committedDate": "2020-09-17 17:25:11 -0400", "message": "Zoom the currently active source column on 'Zoom Source Pane' command."}, {"oid": "36c44519d23a74c8e4f847d520ba8e46d42996fd", "committedDate": "2020-09-18 12:23:04 -0700", "message": "add 'documentPath' API (#7831)"}, {"oid": "c18b5995122c5a2d985ce86c5c5c6d875e0698e4", "committedDate": "2020-09-18 12:43:07 -0700", "message": "add 'allowConsole' param (#7836)"}, {"oid": "ecd0436077f4f8f6c73e563ba321a544fd1bb952", "committedDate": "2020-09-28 10:48:29 -0700", "message": "add explicit document open API (#7837)"}, {"oid": "0e568659fbfd62c3e6cadefd0f05e48f45cb7991", "committedDate": "2020-09-28 10:56:13 -0700", "message": "fix row check"}, {"oid": "efd1ea739dd282bee046f4a5d5109b4c58d493e5", "committedDate": "2020-09-28 16:26:59 -0400", "message": "Merge branch 'master' of https://github.com/rstudio/rstudio into bugfix/zoom-source-columns"}, {"oid": "51cc201d7e278baa6fb3120c3a98038d8b1dffd5", "committedDate": "2020-09-30 13:29:08 -0700", "message": "allow 'getSourceEditorContext()', 'replaceRange()' to work within visual mode chunks (#7927)"}, {"oid": "0ae5221b6f882fe5e5c6d8ce6623841b5b3a1fa0", "committedDate": "2020-10-06 11:01:37 -0400", "message": "add command to open source doc in new column"}, {"oid": "9da39447e9fede110542bf7d838e66d181d67415", "committedDate": "2020-10-06 12:04:09 -0400", "message": "fix exceptions"}, {"oid": "757a1ac15a1f66bad843844983274e3ab374bf4c", "committedDate": "2020-10-19 18:30:41 -0400", "message": "consolidate disownDoc functions so they both reset the active editor"}, {"oid": "f3b42c6b4715f5ad088fa5c4ea98dbb95b67bb1c", "committedDate": "2020-10-30 09:29:40 -0700", "message": "activate the active source column with activateSource command (#8247)"}, {"oid": "07b5634fb240fdacbf7b17556fc779f323407451", "committedDate": "2020-11-10 15:09:43 -0800", "message": "allow forward / back in Help pane with mouse side buttons (#8339)"}, {"oid": "082a93178db271ceee256bbccea69279276a566a", "committedDate": "2020-11-11 18:44:36 -0800", "message": "add context-menu to document tabs"}, {"oid": "d0cb67c9f232548c469be641f13e462b528f94e8", "committedDate": "2020-11-12 20:43:38 -0800", "message": "fix closing others from tabs in satellite windows"}, {"oid": "a8b22e4cccbbb7e77e0da5d6e31050f088247ac6", "committedDate": "2020-11-15 11:53:57 -0800", "message": "eliminate excludeActive flag and just use excludeDocId"}, {"oid": "11ddddd72af34d3c7884fabce1b8a544d9dc86ac", "committedDate": "2020-11-16 09:29:42 -0800", "message": "ensure focus set on file.edit call (#8380)"}, {"oid": "060d9d66148c63f998d7d8cbf60abe97dd846309", "committedDate": "2020-11-16 14:29:19 -0800", "message": "fix focus navigation for visual mode (#7832)"}, {"oid": "2ffbb8c164f85ac594d6106828f35aa9e0b81f18", "committedDate": "2020-11-17 11:18:50 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "ad62ae7a93f9751d3d1ef6bff40a32f68167da5c", "committedDate": "2020-11-18 15:07:46 -0800", "message": "fix precedence in null check (#8430)"}, {"oid": "53d8c0dd4a0f1d8ef4854dd3596f69bd63a8f76b", "committedDate": "2020-11-18 16:43:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "71c6b9d4399e09d71e0328b3a4e9f8a89912a98a", "committedDate": "2020-12-16 14:47:04 -0800", "message": "refactor palette entry providers"}, {"oid": "ddcd7191ec89c4da00e77afae7e9f27e61e87c36", "committedDate": "2021-01-03 21:03:43 -0800", "message": "bulk update copyright dates to 2021"}, {"oid": "c2f82509d3fb8755ec89a4d2b41bda7578379e5d", "committedDate": "2021-01-04 09:28:07 -0800", "message": "Merge remote-tracking branch 'origin/master' into v1.4-juliet-rose"}, {"oid": "011d10e29dd1985701b8f53cf03c8df506702628", "committedDate": "2021-01-08 15:07:55 -0800", "message": "mechanical refactor, replace explicit type with <>"}, {"oid": "b84d2f0e3aa32762ce8fcd842391f62c6b9d2e51", "committedDate": "2021-01-11 13:19:15 -0800", "message": "refactor final batch of events to single-file model"}, {"oid": "158f93133d96e8c2fd8429a2dcbe63c0cd025979", "committedDate": "2021-01-12 11:46:54 -0800", "message": "update filepath tooltip when renaming file in main or secondary window"}, {"oid": "9d73a1d6b7aea914b472773d629b02aa6e367da6", "committedDate": "2021-02-03 16:42:25 -0800", "message": "ensure Close of modified file via context menu prompts to save"}, {"oid": "c17d6c3db1d49c3ba7387ee18e5c732cb47f8de0", "committedDate": "2021-06-10 07:10:03 -0400", "message": "new quarto doc command"}, {"oid": "096019b6d8a80f19192153da62aca3bc5cbabed7", "committedDate": "2021-06-14 07:25:45 -0400", "message": "scaffold new qmd command"}, {"oid": "e52ffa8383f512966ced592117a0897809e3fdb1", "committedDate": "2021-07-15 20:37:06 -0400", "message": "error navigation for quarto render"}, {"oid": "1ad5c75fd5c900dd158aab891bdeaeaa2e0e0ae9", "committedDate": "2021-09-20 15:11:09 -0400", "message": "create empty docs by default for quarto website projects"}, {"oid": "f2661c389e572b1998cb9ea0cf181b55a1c87883", "committedDate": "2021-10-02 15:51:07 -0400", "message": "prepare for editor sync work; rename from state -> location"}, {"oid": "318c49a66b6fd23b51fb3564ea7172657e1e9550", "committedDate": "2021-10-10 08:36:35 -0400", "message": "separate command for new quarto pres"}, {"oid": "abf845993c9d2572ed7ec3d9feac5165a687ed79", "committedDate": "2021-10-10 11:25:01 -0400", "message": "use standard document templates for new quarto doc/pres"}, {"oid": "1c5d8a879ec3a7e1adc951da1bed72b38c398a98", "committedDate": "2021-11-27 07:08:25 -0500", "message": "show new quarto doc dialog even in projects"}, {"oid": "2796e02ef717f802178653f645905a66af53413d", "committedDate": "2021-12-02 11:25:48 -0500", "message": "feat(i18n) workbench-views-source"}, {"oid": "6eac0da598765e961f297ddfce4507031ce69073", "committedDate": "2021-12-02 20:02:54 -0500", "message": "eliminate eclipse warnings"}, {"oid": "7daf2b02615158a66682fe74132e3ab26a86a171", "committedDate": "2021-12-06 20:39:06 -0500", "message": "fix(address review requests"}, {"oid": "7e4ec946e6aec608b5bc4967ead28f289ebadce1", "committedDate": "2021-12-07 01:54:32 +0000", "message": "Merge branch 'main' into jose-i18nify-workbench-views-source"}, {"oid": "ac5c3175a17fee8b268a9a0957620b40db7740a6", "committedDate": "2021-12-10 15:23:24 -0500", "message": "fix(i18n): clean-up few literals and i18n-ify missed literals"}, {"oid": "8f85b6b8ed4e7db1ac167b2007d17e26c947e4fd", "committedDate": "2022-01-03 16:05:46 -0800", "message": "bump copyright to 2022"}, {"oid": "24a66440f896216cd597fd3abd5bde0bd3fce5f8", "committedDate": "2022-01-18 11:23:08 -0800", "message": "Factor out C++ specific options in `Options > Packages > C / C++` (#10340)"}, {"oid": "a8ae69aaa02f59f33be38662d5d2f5d9a0adf9db", "committedDate": "2022-01-19 11:56:45 -0800", "message": "Guessing C++ style based on `LinkingTo` (#10386)"}, {"oid": "7c65340b272ea0a917f61c71d2d7b9995ef1bc12", "committedDate": "2022-01-21 16:56:00 +0100", "message": "add callback= to .rs.api.navigateToFile()"}, {"oid": "018d0b22a49247a446af15ad1853de2183c46358", "committedDate": "2022-01-24 14:36:23 +0100", "message": "Rename to cpp_project_style and move to cpp module"}, {"oid": "bbd91d4ba84eb9d5883dd3f5859b19a12591459d", "committedDate": "2022-01-25 10:15:17 +0100", "message": "Revert \"add callback= to .rs.api.navigateToFile()\""}, {"oid": "cd8518a0a947ad16d5d6084c286a2c3c0bf51ee3", "committedDate": "2022-01-25 11:58:55 +0100", "message": ".rs.api.documentOpen() gains line, col and moveCursor. .rs.api.navigateToFile() uses them"}, {"oid": "4ef77e85df6c800c7f7f4128fb962fc1a619921e", "committedDate": "2022-02-07 13:58:24 +0100", "message": "Merge branch 'main' into navigateToFile_callback_8938"}, {"oid": "305872a66d909531b299f3ebf113bfa9796be2c3", "committedDate": "2022-02-11 13:21:08 -0800", "message": "`.rs.api.documentOpen()` scrolls into view (#10545)"}, {"oid": "ec781aad4a3be2398a2ec0cb8b7678934ed59ff4", "committedDate": "2022-04-06 11:58:07 -0700", "message": "allow request for editor context by id (#10872)"}, {"oid": "154b5be39c20b7292b5804e77c7c2953d6d05d86", "committedDate": "2022-04-25 16:16:45 -0600", "message": "constants for pane/tab names"}, {"oid": "a6863002e56a26f54e2ecfe944e15cafabc331f9", "committedDate": "2022-08-23 12:52:42 +0200", "message": "Live updates for object explorer (#11781)"}, {"oid": "d48ff068d8c84716fc5836df19abeb8f44175f7b", "committedDate": "2022-09-13 13:22:13 -0400", "message": "Update copyright to Posit"}, {"oid": "fdfd3c23cf2889f5553cfc1ed49091b6d9d03430", "committedDate": "2022-09-13 13:22:15 -0400", "message": "Posit Software PBC"}, {"oid": "39cca8f93b347c05e03921ff9ed1527fb1e9af42", "committedDate": "2022-09-13 11:44:12 -0700", "message": "switch from data viewer and object  explorer viewer if object type changes (#11910)"}, {"oid": "9ce4a0fec4e7cc608995581eac809d0fe22c68cb", "committedDate": "2022-09-14 10:17:32 -0400", "message": "Merge pull request #11765 from rstudio/feature/rebrand_company_name"}, {"oid": "5ecd209673e476549955cc5c8b2f636269c61712", "committedDate": "2022-09-15 10:45:30 -0400", "message": "more rebranding copyright update"}]}, {"oid": "90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "url": "https://github.com/rstudio/rstudio/commit/90c550ae2297497ebaa6a6cc5357f5e41c46c1a2", "message": "update copyright years, use lambdas when possible, remove white space", "committedDate": "2020-05-13T19:22:17Z", "type": "commit"}, {"oid": "2050408f950459d3e5c3f72ed9385da57a0e8b79", "url": "https://github.com/rstudio/rstudio/commit/2050408f950459d3e5c3f72ed9385da57a0e8b79", "message": "add javadoc, remove unneeded code", "committedDate": "2020-05-13T19:38:14Z", "type": "commit"}, {"oid": "d05ce26ff1323507099b91cb0cdffdaf215a5ee6", "url": "https://github.com/rstudio/rstudio/commit/d05ce26ff1323507099b91cb0cdffdaf215a5ee6", "message": "remove empty event", "committedDate": "2020-05-13T21:04:16Z", "type": "commit"}, {"oid": "b51a5a1abe6b8eaa54470b881a1cfff19f3ca658", "url": "https://github.com/rstudio/rstudio/commit/b51a5a1abe6b8eaa54470b881a1cfff19f3ca658", "message": "remove sourceshim code", "committedDate": "2020-05-13T21:22:05Z", "type": "commit"}, {"oid": "9217906b990746c6709b77851db7996797c9dd8f", "url": "https://github.com/rstudio/rstudio/commit/9217906b990746c6709b77851db7996797c9dd8f", "message": "ensure ace is loaded before initializing any tabs", "committedDate": "2020-05-13T22:43:18Z", "type": "commit"}]}