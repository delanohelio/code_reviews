{"pr_number": 321, "pr_title": "adventure API integration into Velocity", "pr_author": "astei", "pr_createdAt": "2020-06-29T01:37:06Z", "pr_url": "https://github.com/PaperMC/Velocity/pull/321", "timeline": [{"oid": "2e7a598916c49917979feca7db7dece0c6abd84e", "url": "https://github.com/PaperMC/Velocity/commit/2e7a598916c49917979feca7db7dece0c6abd84e", "message": "Initial commit of adventure-adapted Velocity API.", "committedDate": "2020-06-29T01:23:01Z", "type": "commit"}, {"oid": "70a989e955babd427681465681fa66db60873d9d", "url": "https://github.com/PaperMC/Velocity/commit/70a989e955babd427681465681fa66db60873d9d", "message": "Minor cleanup and add some missing Deprecated tags", "committedDate": "2020-06-29T01:29:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczMDM2MA==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446730360", "body": "Should be deprecated since it is going away.", "bodyText": "Should be deprecated since it is going away.", "bodyHTML": "<p dir=\"auto\">Should be deprecated since it is going away.</p>", "author": "kashike", "createdAt": "2020-06-29T01:41:44Z", "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.velocitypowered.api.proxy;\n+\n+import net.kyori.adventure.audience.Audience;\n+import net.kyori.adventure.bossbar.BossBar;\n+import net.kyori.adventure.inventory.Book;\n+import net.kyori.adventure.sound.Sound;\n+import net.kyori.adventure.sound.SoundStop;\n+import net.kyori.adventure.text.Component;\n+import net.kyori.adventure.title.Title;\n+import org.checkerframework.checker.nullness.qual.NonNull;\n+\n+/**\n+ * Indicates an {@link Audience} that is on the proxy. This interface contains no-op default methods\n+ * that are used to bridge compatibility issues with the new adventure API. This interface will go\n+ * away in Velocity 2.0.0.\n+ */\n+public interface ProxyAudience extends Audience {", "originalCommit": "70a989e955babd427681465681fa66db60873d9d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ef2835a47577c2ce7b0dfc61d0cbd835a99281f", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java b/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\nindex 6a64da88..36ff915a 100644\n--- a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\n+++ b/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\n", "chunk": "@@ -13,7 +13,10 @@ import org.checkerframework.checker.nullness.qual.NonNull;\n  * Indicates an {@link Audience} that is on the proxy. This interface contains no-op default methods\n  * that are used to bridge compatibility issues with the new adventure API. This interface will go\n  * away in Velocity 2.0.0.\n+ *\n+ * @deprecated Only used to handle compatibility problems, will go away in Velocity 2.0.0\n  */\n+@Deprecated\n public interface ProxyAudience extends Audience {\n \n   @Override\n", "next_change": {"commit": "26f3cb43c7c8b81d0b10c79dde6c308b34b280fb", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java b/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\nindex 36ff915a..0b06b8f9 100644\n--- a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\n+++ b/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\n", "chunk": "@@ -23,52 +19,7 @@ public interface ProxyAudience extends Audience {\n   void sendMessage(@NonNull Component message);\n \n   @Override\n-  default void sendActionBar(@NonNull Component message) {\n-\n-  }\n-\n-  @Override\n-  default void showTitle(@NonNull Title title) {\n-\n-  }\n-\n-  @Override\n-  default void clearTitle() {\n-\n-  }\n-\n-  @Override\n-  default void resetTitle() {\n-\n-  }\n-\n-  @Override\n-  default void showBossBar(@NonNull BossBar bar) {\n-\n-  }\n-\n-  @Override\n-  default void hideBossBar(@NonNull BossBar bar) {\n-\n-  }\n-\n-  @Override\n-  default void playSound(@NonNull Sound sound) {\n-\n-  }\n-\n-  @Override\n-  default void playSound(@NonNull Sound sound, double x, double y, double z) {\n-\n-  }\n-\n-  @Override\n-  default void stopSound(@NonNull SoundStop stop) {\n-\n-  }\n-\n-  @Override\n-  default void openBook(@NonNull Book book) {\n-\n+  default void sendMessage(@NonNull Component message, @NonNull MessageType type) {\n+    sendMessage(message);\n   }\n }\n", "next_change": {"commit": "60e917b4a104d02f9175013e3ce1a42c5daa4ae9", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java b/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\ndeleted file mode 100644\nindex 0b06b8f9..00000000\n--- a/api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java\n+++ /dev/null\n", "chunk": "@@ -1,25 +0,0 @@\n-package com.velocitypowered.api.proxy;\n-\n-import net.kyori.adventure.audience.Audience;\n-import net.kyori.adventure.audience.MessageType;\n-import net.kyori.adventure.text.Component;\n-import org.checkerframework.checker.nullness.qual.NonNull;\n-\n-/**\n- * Indicates an {@link Audience} that is on the proxy. This interface contains no-op default methods\n- * that are used to bridge compatibility issues with the new adventure API. This interface will go\n- * away in Velocity 2.0.0.\n- *\n- * @deprecated Only used to handle compatibility problems, will go away in Velocity 2.0.0\n- */\n-@Deprecated\n-public interface ProxyAudience extends Audience {\n-\n-  @Override\n-  void sendMessage(@NonNull Component message);\n-\n-  @Override\n-  default void sendMessage(@NonNull Component message, @NonNull MessageType type) {\n-    sendMessage(message);\n-  }\n-}\n", "next_change": null}]}}]}}]}}, {"oid": "8ef2835a47577c2ce7b0dfc61d0cbd835a99281f", "url": "https://github.com/PaperMC/Velocity/commit/8ef2835a47577c2ce7b0dfc61d0cbd835a99281f", "message": "Fix API breaking change, deprecate ProxyAudience", "committedDate": "2020-06-29T01:44:44Z", "type": "commit"}, {"oid": "5c02d6b00764638516e9cc64ba6b0bb208ede886", "url": "https://github.com/PaperMC/Velocity/commit/5c02d6b00764638516e9cc64ba6b0bb208ede886", "message": "RegisteredServer and ProxyServer now implement MultiAudience", "committedDate": "2020-06-29T02:01:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NDg4OQ==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446744889", "body": "Changes list says `ProxyServer` applies actions to all players including console, does this not just give the player audiences?", "bodyText": "Changes list says ProxyServer applies actions to all players including console, does this not just give the player audiences?", "bodyHTML": "<p dir=\"auto\">Changes list says <code>ProxyServer</code> applies actions to all players including console, does this not just give the player audiences?</p>", "author": "Crypnotic", "createdAt": "2020-06-29T02:52:13Z", "path": "proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java", "diffHunk": "@@ -605,11 +606,8 @@ public InetSocketAddress getBoundAddress() {\n   }\n \n   @Override\n-  public void sendMessage(net.kyori.adventure.text.@NonNull Component message) {\n-    Preconditions.checkNotNull(message, \"message\");\n-    for (ConnectedPlayer player : connectionsByUuid.values()) {\n-      player.sendMessage(message);\n-    }\n+  public @NonNull Iterable<? extends Audience> audiences() {\n+    return this.getAllPlayers();\n   }", "originalCommit": "5c02d6b00764638516e9cc64ba6b0bb208ede886", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NjA2Mw==", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446746063", "bodyText": "Should be fixed now.", "author": "astei", "createdAt": "2020-06-29T02:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NDg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c6039a773d3c7bf3c68e91ea4446483bda9dd83", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex 56815944..eb1ee2f6 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -607,7 +610,8 @@ public class VelocityServer implements ProxyServer {\n \n   @Override\n   public @NonNull Iterable<? extends Audience> audiences() {\n-    return this.getAllPlayers();\n+    return (Iterable<Audience>) () -> Iterators.concat(Iterators.singletonIterator(console),\n+        getAllPlayers().iterator());\n   }\n \n   public static Gson getGsonInstance(ProtocolVersion version) {\n", "next_change": {"commit": "c2edd82b16660ab75210fb5caabf09d56bd73b28", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex eb1ee2f6..336b4437 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -614,13 +615,8 @@ public class VelocityServer implements ProxyServer {\n         getAllPlayers().iterator());\n   }\n \n-  public static Gson getGsonInstance(ProtocolVersion version) {\n-    return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_COMPONENT_SERIALIZER\n-        : PRE_1_16_COMPONENT_SERIALIZER;\n-  }\n-\n-  private static GsonBuilder wrapAndAddTextSerializers(GsonComponentSerializer serializer) {\n-    return net.kyori.text.serializer.gson.GsonComponentSerializer\n-        .populate(serializer.serializer().newBuilder());\n+  public static Gson getPingGsonInstance(ProtocolVersion version) {\n+    return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n+        : PRE_1_16_PING_SERIALIZER;\n   }\n }\n", "next_change": {"commit": "ea52cedfdfdb9ca05213e85a6a217764c46dc5ab", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex 336b4437..88b2e897 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -608,15 +594,4 @@ public class VelocityServer implements ProxyServer {\n     }\n     return configuration.getBind();\n   }\n-\n-  @Override\n-  public @NonNull Iterable<? extends Audience> audiences() {\n-    return (Iterable<Audience>) () -> Iterators.concat(Iterators.singletonIterator(console),\n-        getAllPlayers().iterator());\n-  }\n-\n-  public static Gson getPingGsonInstance(ProtocolVersion version) {\n-    return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n-        : PRE_1_16_PING_SERIALIZER;\n-  }\n }\n", "next_change": {"commit": "1b8955a76bbdfc37c9b6509b8cd3193f0407e633", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex 88b2e897..9ec4d0a1 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -594,4 +617,19 @@ public class VelocityServer implements ProxyServer {\n     }\n     return configuration.getBind();\n   }\n+\n+  @Override\n+  public @NonNull Iterable<? extends Audience> audiences() {\n+    return (Iterable<Audience>) () -> Iterators.concat(Iterators.singletonIterator(console),\n+        getAllPlayers().iterator());\n+  }\n+\n+  public BossBarManager getBossBarManager() {\n+    return bossBarManager;\n+  }\n+\n+  public static Gson getPingGsonInstance(ProtocolVersion version) {\n+    return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n+        : PRE_1_16_PING_SERIALIZER;\n+  }\n }\n", "next_change": {"commit": "8def411b2b99bf952d7f857196a4095c409ec9fd", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex 9ec4d0a1..725e8403 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -632,4 +684,9 @@ public class VelocityServer implements ProxyServer {\n     return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n         : PRE_1_16_PING_SERIALIZER;\n   }\n+\n+  @Override\n+  public ResourcePackInfo.Builder createResourcePackBuilder(String url) {\n+    return new VelocityResourcePackInfo.BuilderImpl(url);\n+  }\n }\n", "next_change": {"commit": "977300cc66af91cdf88bff38f487a8e3207e33d7", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex 725e8403..b445932a 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -684,9 +659,4 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {\n     return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n         : PRE_1_16_PING_SERIALIZER;\n   }\n-\n-  @Override\n-  public ResourcePackInfo.Builder createResourcePackBuilder(String url) {\n-    return new VelocityResourcePackInfo.BuilderImpl(url);\n-  }\n }\n", "next_change": {"commit": "b1b3882fab6bfbd5aa9f5557d5f60bdb1f35a14f", "changed_code": [{"header": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\nindex b445932a..1dd4e8a3 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java\n", "chunk": "@@ -659,4 +662,9 @@ public class VelocityServer implements ProxyServer, ForwardingAudience {\n     return version.compareTo(ProtocolVersion.MINECRAFT_1_16) >= 0 ? POST_1_16_PING_SERIALIZER\n         : PRE_1_16_PING_SERIALIZER;\n   }\n+\n+  @Override\n+  public ResourcePackInfo.Builder createResourcePackBuilder(String url) {\n+    return new VelocityResourcePackInfo.BuilderImpl(url);\n+  }\n }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}, {"oid": "c4f143a2bc1d245b7a8d44a0630ac05e24520924", "url": "https://github.com/PaperMC/Velocity/commit/c4f143a2bc1d245b7a8d44a0630ac05e24520924", "message": "Implement adventure title APIs", "committedDate": "2020-06-29T02:52:46Z", "type": "commit"}, {"oid": "0c6039a773d3c7bf3c68e91ea4446483bda9dd83", "url": "https://github.com/PaperMC/Velocity/commit/0c6039a773d3c7bf3c68e91ea4446483bda9dd83", "message": "Make sure console is included in the ProxyServer audience", "committedDate": "2020-06-29T02:57:28Z", "type": "commit"}, {"oid": "c2edd82b16660ab75210fb5caabf09d56bd73b28", "url": "https://github.com/PaperMC/Velocity/commit/c2edd82b16660ab75210fb5caabf09d56bd73b28", "message": "Use more idiomatic adventure text serializer", "committedDate": "2020-06-29T03:13:57Z", "type": "commit"}, {"oid": "70698246bf20c669ed030d4d1a6e57cc9249d7a3", "url": "https://github.com/PaperMC/Velocity/commit/70698246bf20c669ed030d4d1a6e57cc9249d7a3", "message": "Get everything compiling and Checkstyle clean", "committedDate": "2020-06-29T03:20:46Z", "type": "commit"}, {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719", "url": "https://github.com/PaperMC/Velocity/commit/22afd1cf41b0249f842b890f07ad920fd152a719", "message": "Since we're deprecating stuff, mark toml4j as deprecated", "committedDate": "2020-06-29T03:25:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjAwMA==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446852000", "body": "This should be deprecated", "bodyText": "This should be deprecated", "bodyHTML": "<p dir=\"auto\">This should be deprecated</p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:19:44Z", "path": "api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java", "diffHunk": "@@ -92,7 +93,11 @@ public boolean isAllowed() {\n       return status;\n     }\n \n-    public Optional<Component> getReason() {\n+    public Optional<net.kyori.text.Component> getReason() {", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b9dbb74c9963a765f6963cfedc22104f1196909", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\nindex 22e6fc23..2785d3ee 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n", "chunk": "@@ -93,6 +93,7 @@ public interface ResultedEvent<R extends ResultedEvent.Result> {\n       return status;\n     }\n \n+    @Deprecated\n     public Optional<net.kyori.text.Component> getReason() {\n       return Optional.ofNullable(reason).map(AdventureCompat::asOriginalTextComponent);\n     }\n", "next_change": {"commit": "5285a3c155b3404a45e52a2d4d1ae88dcc0e2b3d", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\nindex 2785d3ee..66bd15a6 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n", "chunk": "@@ -95,7 +95,7 @@ public interface ResultedEvent<R extends ResultedEvent.Result> {\n \n     @Deprecated\n     public Optional<net.kyori.text.Component> getReason() {\n-      return Optional.ofNullable(reason).map(AdventureCompat::asOriginalTextComponent);\n+      return Optional.ofNullable(reason).map(LegacyText3ComponentSerializer.get()::serialize);\n     }\n \n     public Optional<Component> getReasonComponent() {\n", "next_change": {"commit": "977300cc66af91cdf88bff38f487a8e3207e33d7", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\nindex 66bd15a6..f55296c3 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java\n", "chunk": "@@ -93,11 +99,6 @@ public interface ResultedEvent<R extends ResultedEvent.Result> {\n       return status;\n     }\n \n-    @Deprecated\n-    public Optional<net.kyori.text.Component> getReason() {\n-      return Optional.ofNullable(reason).map(LegacyText3ComponentSerializer.get()::serialize);\n-    }\n-\n     public Optional<Component> getReasonComponent() {\n       return Optional.ofNullable(reason);\n     }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1Mjk4NQ==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446852985", "body": "Is the `@Nullable` annotation removal both here and in the new constructor intentional?\r\nIf so, the constructor is missing the non-null precondition.", "bodyText": "Is the @Nullable annotation removal both here and in the new constructor intentional?\nIf so, the constructor is missing the non-null precondition.", "bodyHTML": "<p dir=\"auto\">Is the <code>@Nullable</code> annotation removal both here and in the new constructor intentional?<br>\nIf so, the constructor is missing the non-null precondition.</p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:21:35Z", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -20,7 +21,7 @@\n \n   private final Player player;\n   private final RegisteredServer server;\n-  private final @Nullable Component originalReason;\n+  private final net.kyori.adventure.text.Component originalReason;", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b9dbb74c9963a765f6963cfedc22104f1196909", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\nindex 7f4a1208..677848b7 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n", "chunk": "@@ -21,7 +21,7 @@ public final class KickedFromServerEvent implements\n \n   private final Player player;\n   private final RegisteredServer server;\n-  private final net.kyori.adventure.text.Component originalReason;\n+  private final net.kyori.adventure.text.@Nullable Component originalReason;\n   private final boolean duringServerConnect;\n   private ServerKickResult result;\n \n", "next_change": {"commit": "977300cc66af91cdf88bff38f487a8e3207e33d7", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\nindex 677848b7..ab0d912b 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n", "chunk": "@@ -25,35 +30,6 @@ public final class KickedFromServerEvent implements\n   private final boolean duringServerConnect;\n   private ServerKickResult result;\n \n-  /**\n-   * Creates a {@code KickedFromServerEvent} instance.\n-   * @param player the player affected\n-   * @param server the server the player disconnected from\n-   * @param originalReason the reason for being kicked, optional\n-   * @param duringServerConnect whether or not the player was kicked during the connection process\n-   * @param fancyReason a fancy reason for being disconnected, used for the initial result\n-   */\n-  @Deprecated\n-  public KickedFromServerEvent(Player player, RegisteredServer server,\n-      @Nullable Component originalReason, boolean duringServerConnect, Component fancyReason) {\n-    this(player, server, originalReason, duringServerConnect, Notify.create(fancyReason));\n-  }\n-\n-  /**\n-   * Creates a {@code KickedFromServerEvent} instance.\n-   * @param player the player affected\n-   * @param server the server the player disconnected from\n-   * @param originalReason the reason for being kicked, optional\n-   * @param duringServerConnect whether or not the player was kicked during the connection process\n-   * @param result the initial result\n-   */\n-  @Deprecated\n-  public KickedFromServerEvent(Player player, RegisteredServer server,\n-      @Nullable Component originalReason, boolean duringServerConnect, ServerKickResult result) {\n-    this(player, server, AdventureCompat.asAdventureComponent(originalReason), duringServerConnect,\n-        result);\n-  }\n-\n   /**\n    * Creates a {@code KickedFromServerEvent} instance.\n    * @param player the player affected\n", "next_change": {"commit": "d72d707b1c0dd6215a4984956faf4b2ec4bdbd97", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\nindex ab0d912b..357f1f0a 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n", "chunk": "@@ -32,6 +35,7 @@ public final class KickedFromServerEvent implements\n \n   /**\n    * Creates a {@code KickedFromServerEvent} instance.\n+   *\n    * @param player the player affected\n    * @param server the server the player disconnected from\n    * @param originalReason the reason for being kicked, optional\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1NTUwOQ==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446855509", "body": "Mark message as `@Nullable`", "bodyText": "Mark message as @Nullable", "bodyHTML": "<p dir=\"auto\">Mark message as <code>@Nullable</code></p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:25:56Z", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -147,10 +186,10 @@ public static DisconnectPlayer create(Component reason) {\n    */\n   public static final class RedirectPlayer implements ServerKickResult {\n \n-    private final Component message;\n+    private final net.kyori.adventure.text.Component message;\n     private final RegisteredServer server;\n \n-    private RedirectPlayer(RegisteredServer server, @Nullable Component message) {\n+    private RedirectPlayer(RegisteredServer server, net.kyori.adventure.text.Component message) {", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b9dbb74c9963a765f6963cfedc22104f1196909", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\nindex 7f4a1208..677848b7 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n", "chunk": "@@ -189,7 +189,8 @@ public final class KickedFromServerEvent implements\n     private final net.kyori.adventure.text.Component message;\n     private final RegisteredServer server;\n \n-    private RedirectPlayer(RegisteredServer server, net.kyori.adventure.text.Component message) {\n+    private RedirectPlayer(RegisteredServer server,\n+        net.kyori.adventure.text.@Nullable Component message) {\n       this.server = Preconditions.checkNotNull(server, \"server\");\n       this.message = message;\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1Njc4Nw==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446856787", "body": "This is using the new Component and is private, shouldn't be deprecated", "bodyText": "This is using the new Component and is private, shouldn't be deprecated", "bodyHTML": "<p dir=\"auto\">This is using the new Component and is private, shouldn't be deprecated</p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:27:54Z", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -191,9 +250,10 @@ public static ServerKickResult create(RegisteredServer server) {\n    */\n   public static final class Notify implements ServerKickResult {\n \n-    private final Component message;\n+    private final net.kyori.adventure.text.Component message;\n \n-    private Notify(Component message) {\n+    @Deprecated\n+    private Notify(net.kyori.adventure.text.Component message) {", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b9dbb74c9963a765f6963cfedc22104f1196909", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\nindex 7f4a1208..677848b7 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java\n", "chunk": "@@ -252,7 +253,6 @@ public final class KickedFromServerEvent implements\n \n     private final net.kyori.adventure.text.Component message;\n \n-    @Deprecated\n     private Notify(net.kyori.adventure.text.Component message) {\n       this.message = Preconditions.checkNotNull(message, \"message\");\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MzIwMg==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446863202", "body": "Minor nit: It's a shame this method cannot be named consistently. Open to change in 2.0 once the other gets removed?", "bodyText": "Minor nit: It's a shame this method cannot be named consistently. Open to change in 2.0 once the other gets removed?", "bodyHTML": "<p dir=\"auto\">Minor nit: It's a shame this method cannot be named consistently. Open to change in 2.0 once the other gets removed?</p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:39:01Z", "path": "api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java", "diffHunk": "@@ -44,8 +43,17 @@\n    * Get the MOTD component shown in the tab list.\n    *\n    * @return the motd component\n+   * @deprecated Use {@link #getMotd()} instead\n    */\n-  Component getMotdComponent();\n+  @Deprecated\n+  net.kyori.text.Component getMotdComponent();\n+\n+  /**\n+   * Get the MOTD component shown in the tab list.\n+   *\n+   * @return the motd component\n+   */\n+  net.kyori.adventure.text.Component getMotd();", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA5OTYzOQ==", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r447099639", "bodyText": "Yes, as with everything else. (ProxyConfig was basically created with the \"Extract Interface\" refactoring in IntelliJ IDEA, and hasn't really evolved past that. It's a leaky abstraction.)", "author": "astei", "createdAt": "2020-06-29T16:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MzIwMg=="}], "type": "inlineReview", "revised_code": {"commit": "977300cc66af91cdf88bff38f487a8e3207e33d7", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java b/api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java\nindex 3efa22c7..360d2ba5 100644\n--- a/api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java\n+++ b/api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java\n", "chunk": "@@ -39,15 +46,6 @@ public interface ProxyConfig {\n    */\n   boolean shouldQueryShowPlugins();\n \n-  /**\n-   * Get the MOTD component shown in the tab list.\n-   *\n-   * @return the motd component\n-   * @deprecated Use {@link #getMotd()} instead\n-   */\n-  @Deprecated\n-  net.kyori.text.Component getMotdComponent();\n-\n   /**\n    * Get the MOTD component shown in the tab list.\n    *\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2NTQ1MQ==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r446865451", "body": "~~Superfluous `@NonNull` annotation~~", "bodyText": "Superfluous @NonNull annotation", "bodyHTML": "<p dir=\"auto\"><del>Superfluous <code>@NonNull</code> annotation</del></p>", "author": "hugmanrique", "createdAt": "2020-06-29T08:42:44Z", "path": "proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java", "diffHunk": "@@ -145,4 +148,9 @@ public boolean sendPluginMessage(ChannelIdentifier identifier, ByteBuf data) {\n   public String toString() {\n     return \"registered server: \" + serverInfo;\n   }\n+\n+  @Override\n+  public @NonNull Iterable<? extends Audience> audiences() {", "originalCommit": "22afd1cf41b0249f842b890f07ad920fd152a719", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "5b9dbb74c9963a765f6963cfedc22104f1196909", "url": "https://github.com/PaperMC/Velocity/commit/5b9dbb74c9963a765f6963cfedc22104f1196909", "message": "Fix up some annotations", "committedDate": "2020-06-29T14:42:01Z", "type": "commit"}, {"oid": "5285a3c155b3404a45e52a2d4d1ae88dcc0e2b3d", "url": "https://github.com/PaperMC/Velocity/commit/5285a3c155b3404a45e52a2d4d1ae88dcc0e2b3d", "message": "Remove AdventureCompact in favor of the text 3.x serializer added in KyoriPowered/adventure-platform#23", "committedDate": "2020-06-30T03:34:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzE5MQ==", "url": "https://github.com/PaperMC/Velocity/pull/321#discussion_r447433191", "body": "I would recommend extending the more generic `Audience` in the `api` interfaces, then using `MultiAudience` in the implementation (for `ProxyServer` and co.) That way you don't expose `audiences()` in the spec.", "bodyText": "I would recommend extending the more generic Audience in the api interfaces, then using MultiAudience in the implementation (for ProxyServer and co.) That way you don't expose audiences() in the spec.", "bodyHTML": "<p dir=\"auto\">I would recommend extending the more generic <code>Audience</code> in the <code>api</code> interfaces, then using <code>MultiAudience</code> in the implementation (for <code>ProxyServer</code> and co.) That way you don't expose <code>audiences()</code> in the spec.</p>", "author": "Electroid", "createdAt": "2020-06-30T06:12:58Z", "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java", "diffHunk": "@@ -17,13 +17,14 @@\n import java.util.Collection;\n import java.util.Optional;\n import java.util.UUID;\n-import net.kyori.text.Component;\n+import net.kyori.adventure.audience.MultiAudience;\n+import net.kyori.adventure.text.Component;\n import org.checkerframework.checker.nullness.qual.NonNull;\n \n /**\n  * Provides an interface to a Minecraft server proxy.\n  */\n-public interface ProxyServer {\n+public interface ProxyServer extends MultiAudience {", "originalCommit": "5285a3c155b3404a45e52a2d4d1ae88dcc0e2b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86259f788fce7dfe9dfa9044640006e9d70f5c89", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java b/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\nindex 188592f2..995900c8 100644\n--- a/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\n+++ b/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\n", "chunk": "@@ -17,14 +17,14 @@ import java.net.InetSocketAddress;\n import java.util.Collection;\n import java.util.Optional;\n import java.util.UUID;\n-import net.kyori.adventure.audience.MultiAudience;\n+import net.kyori.adventure.audience.Audience;\n import net.kyori.adventure.text.Component;\n import org.checkerframework.checker.nullness.qual.NonNull;\n \n /**\n  * Provides an interface to a Minecraft server proxy.\n  */\n-public interface ProxyServer extends MultiAudience {\n+public interface ProxyServer extends Audience {\n \n   /**\n    * Retrieves the player currently connected to this proxy by their Minecraft username. The search\n", "next_change": {"commit": "190bef375a9e1d28c9e793d6de528dc52a87a9fc", "changed_code": [{"header": "diff --git a/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java b/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\nindex 995900c8..7e2e570c 100644\n--- a/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\n+++ b/api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java\n", "chunk": "@@ -26,6 +27,18 @@ import org.checkerframework.checker.nullness.qual.NonNull;\n  */\n public interface ProxyServer extends Audience {\n \n+  /**\n+   * Shuts down the proxy, kicking players with the specified {@param reason}.\n+   *\n+   * @param reason message to kick online players with\n+   */\n+  void shutdown(TextComponent reason);\n+\n+  /**\n+   * Shuts down the proxy, kicking players with the default reason.\n+   */\n+  void shutdown();\n+\n   /**\n    * Retrieves the player currently connected to this proxy by their Minecraft username. The search\n    * is case-insensitive.\n", "next_change": null}]}}]}}, {"oid": "1b8955a76bbdfc37c9b6509b8cd3193f0407e633", "url": "https://github.com/PaperMC/Velocity/commit/1b8955a76bbdfc37c9b6509b8cd3193f0407e633", "message": "Add initial adventure boss bar support", "committedDate": "2020-07-01T02:33:07Z", "type": "commit"}, {"oid": "47560442cae41e35076904ec667f55caa9681d32", "url": "https://github.com/PaperMC/Velocity/commit/47560442cae41e35076904ec667f55caa9681d32", "message": "Remove SyncMap for now, use more obvious and correct MapMaker", "committedDate": "2020-07-01T02:46:21Z", "type": "commit"}, {"oid": "07da606abd4e45a6ba552c522818b24c53043343", "url": "https://github.com/PaperMC/Velocity/commit/07da606abd4e45a6ba552c522818b24c53043343", "message": "Add OnceTest", "committedDate": "2020-07-01T02:54:49Z", "type": "commit"}, {"oid": "209291e702c483892280ec4e066e9b5592c584e8", "url": "https://github.com/PaperMC/Velocity/commit/209291e702c483892280ec4e066e9b5592c584e8", "message": "Improve the test a little", "committedDate": "2020-07-01T04:36:12Z", "type": "commit"}, {"oid": "86259f788fce7dfe9dfa9044640006e9d70f5c89", "url": "https://github.com/PaperMC/Velocity/commit/86259f788fce7dfe9dfa9044640006e9d70f5c89", "message": "Adjust for recent adventure API changes.", "committedDate": "2020-07-11T16:00:54Z", "type": "commit"}, {"oid": "6e84261166e0c7976d149368e109b0c6fc04d096", "url": "https://github.com/PaperMC/Velocity/commit/6e84261166e0c7976d149368e109b0c6fc04d096", "message": "Merge branch 'dev/1.1.0' into adventure-api", "committedDate": "2020-07-12T05:49:08Z", "type": "commit"}, {"oid": "d47462c60691654910f165ef1810240bac5adc97", "url": "https://github.com/PaperMC/Velocity/commit/d47462c60691654910f165ef1810240bac5adc97", "message": "Fix accidential deprecation", "committedDate": "2020-07-12T15:42:44Z", "type": "commit"}, {"oid": "21bc050f9cdc0263e0cc14b0672b83dff432f4bd", "url": "https://github.com/PaperMC/Velocity/commit/21bc050f9cdc0263e0cc14b0672b83dff432f4bd", "message": "Fix Checkstyle issues again", "committedDate": "2020-07-12T15:56:50Z", "type": "commit"}, {"oid": "f841d7590a17ae5236da1fc30ad8ee6b2a0b54d7", "url": "https://github.com/PaperMC/Velocity/commit/f841d7590a17ae5236da1fc30ad8ee6b2a0b54d7", "message": "Remove unused parameter", "committedDate": "2020-07-12T15:57:07Z", "type": "commit"}]}