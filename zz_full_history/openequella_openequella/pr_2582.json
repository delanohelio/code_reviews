{"pr_number": 2582, "pr_title": "Support Advanced/Remote searches in Selection Session", "pr_author": "PenghaiZhang", "pr_createdAt": "2020-12-03T23:45:44Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2582", "merge_commit": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "timeline": [{"oid": "fcd8ff6ddf50463dbdadd1def4fed358948e9345", "url": "https://github.com/openequella/openEQUELLA/commit/fcd8ff6ddf50463dbdadd1def4fed358948e9345", "message": "Add a new Link component which provides either a MUI Link\nor a React Router Link.", "committedDate": "2020-12-02T22:43:00Z", "type": "commit"}, {"oid": "7d77e2991e359245a9fcdb413c0647df0c200014", "url": "https://github.com/openequella/openEQUELLA/commit/7d77e2991e359245a9fcdb413c0647df0c200014", "message": "Use component OeqLink in SearchResult.", "committedDate": "2020-12-02T22:43:00Z", "type": "commit"}, {"oid": "7ebd2b5f60d6eafaa16c227b2f54126b93c88d6d", "url": "https://github.com/openequella/openEQUELLA/commit/7ebd2b5f60d6eafaa16c227b2f54126b93c88d6d", "message": "Use component OeqLink for accessing Remote search and\nAdvanced search.", "committedDate": "2020-12-02T22:43:49Z", "type": "commit"}, {"oid": "73766adb122278e9f177ab9db7e69ee8b425d9ae", "url": "https://github.com/openequella/openEQUELLA/commit/73766adb122278e9f177ab9db7e69ee8b425d9ae", "message": "Only prepare draggables when Selection Session\nis in 'structured'.", "committedDate": "2020-12-03T07:10:00Z", "type": "commit"}, {"oid": "3c6084cd8a69247862e35de10529dba50a829240", "url": "https://github.com/openequella/openEQUELLA/commit/3c6084cd8a69247862e35de10529dba50a829240", "message": "Support using Advanced searches with new Search UI in Selection\nSession.\n\nThis includes adding a new Section module and a Section which\nserve 'advanced/searching.do'.", "committedDate": "2020-12-03T23:00:01Z", "type": "commit"}, {"oid": "9f752401f90872a5682de93e6e0f180b7ff878a5", "url": "https://github.com/openequella/openEQUELLA/commit/9f752401f90872a5682de93e6e0f180b7ff878a5", "message": "Update the Storybook of AuxiliarySearchSelector.", "committedDate": "2020-12-03T23:29:01Z", "type": "commit"}, {"oid": "2ff6b085b5e48c6db9eaaef52741c21fd161322d", "url": "https://github.com/openequella/openEQUELLA/commit/2ff6b085b5e48c6db9eaaef52741c21fd161322d", "message": "Update variable name in 'buildSelectionSessionAdvancedSearchLink'.", "committedDate": "2020-12-03T23:51:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NDk4NA==", "url": "https://github.com/openequella/openEQUELLA/pull/2582#discussion_r535754984", "body": "Could be value here in a comment saying why you're setting this to 'false'.", "bodyText": "Could be value here in a comment saying why you're setting this to 'false'.", "bodyHTML": "<p dir=\"auto\">Could be value here in a comment saying why you're setting this to 'false'.</p>", "author": "edalex-ian", "createdAt": "2020-12-04T00:51:42Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.web.searching.section;\n+\n+import com.tle.web.sections.SectionResult;\n+import com.tle.web.sections.SectionTree;\n+import com.tle.web.sections.events.RenderEventContext;\n+import com.tle.web.sections.events.RenderEventListener;\n+import com.tle.web.sections.render.HtmlRendererListener;\n+import com.tle.web.selection.SelectionSession;\n+import com.tle.web.selection.section.RootSelectionSection.Layout;\n+import com.tle.web.selection.section.SelectionSummarySection;\n+\n+public class RootAdvancedSearchSection extends RootSearchSection {\n+\n+  @Override\n+  public SectionResult renderHtml(RenderEventContext context) {\n+    SelectionSession selectionSession = selectionService.getCurrentSession(context);\n+    if (selectionSession != null) {\n+      // As we keep SelectionSummarySection in the tree for 'advanced/searching.do' regardless of\n+      // Selection Session's layout, we need to dynamically handle whether to show it or not.\n+      // The approach is to remove or add the RenderEventListener for SelectionSummarySection.\n+      SelectionSummarySection selectionSummarySection =\n+          context.lookupSection(SelectionSummarySection.class);\n+      String selectionSummarySectionId = selectionSummarySection.getSectionId();\n+      Layout selectionSessionLayout = selectionSession.getLayout();\n+      boolean selectionSummaryListenerExisting =\n+          context\n+                  .getTree()\n+                  .getListeners(selectionSummarySectionId, RenderEventListener.class)\n+                  .size()\n+              > 0;\n+\n+      // Remove the listener in 'structured'.\n+      if (selectionSessionLayout == Layout.COURSE && selectionSummaryListenerExisting) {\n+        context.getTree().removeListeners(selectionSummarySectionId);\n+      }\n+      // Or add the listener back in 'selectOrAdd'.\n+      else if (selectionSessionLayout == Layout.NORMAL && !selectionSummaryListenerExisting) {\n+        context\n+            .getTree()\n+            .addListener(\n+                selectionSummarySectionId,\n+                RenderEventListener.class,\n+                new HtmlRendererListener(\n+                    selectionSummarySectionId, selectionSummarySection, getTree()));\n+      }\n+    }\n+\n+    return super.renderHtml(context);\n+  }\n+\n+  @Override\n+  public void registered(String id, SectionTree tree) {\n+    super.registered(id, tree);\n+  }\n+\n+  @Override\n+  public boolean useNewSearch() {\n+    return false;", "originalCommit": "2ff6b085b5e48c6db9eaaef52741c21fd161322d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c3c8fcecdb888ec1e89b60eeeda2ee1d1a96fba", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\nindex c57e8d3e0..3e21600c4 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n", "chunk": "@@ -73,6 +73,8 @@ public class RootAdvancedSearchSection extends RootSearchSection {\n \n   @Override\n   public boolean useNewSearch() {\n+    // Because we haven't built any new UI for Advanced search, return false\n+    // to keep using old UI.\n     return false;\n   }\n }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\nindex c57e8d3e0..3e21600c4 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n", "chunk": "@@ -73,6 +73,8 @@ public class RootAdvancedSearchSection extends RootSearchSection {\n \n   @Override\n   public boolean useNewSearch() {\n+    // Because we haven't built any new UI for Advanced search, return false\n+    // to keep using old UI.\n     return false;\n   }\n }\n", "next_change": {"commit": "c1a69abaab51a744db188c3a067ff1e440e2f210", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\nindex 3e21600c4..abd01701b 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootAdvancedSearchSection.java\n", "chunk": "@@ -73,8 +73,6 @@ public class RootAdvancedSearchSection extends RootSearchSection {\n \n   @Override\n   public boolean useNewSearch() {\n-    // Because we haven't built any new UI for Advanced search, return false\n-    // to keep using old UI.\n-    return false;\n+    return true;\n   }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "message": "Merge commit", "committedDate": null}, {"oid": "c1a69abaab51a744db188c3a067ff1e440e2f210", "committedDate": "2021-12-09 11:16:35 +1100", "message": "feat: display new Advanced search page in Selection Session"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NTQ4Mg==", "url": "https://github.com/openequella/openEQUELLA/pull/2582#discussion_r535755482", "body": "Be good to do as JavaDoc.", "bodyText": "Be good to do as JavaDoc.", "bodyHTML": "<p dir=\"auto\">Be good to do as JavaDoc.</p>", "author": "edalex-ian", "createdAt": "2020-12-04T00:52:56Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java", "diffHunk": "@@ -70,6 +70,11 @@ protected String getSessionKey() {\n     return SEARCH_SESSIONKEY;\n   }\n \n+  // For child sections that need to skip new Search UI, override this function and return false.", "originalCommit": "2ff6b085b5e48c6db9eaaef52741c21fd161322d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c3c8fcecdb888ec1e89b60eeeda2ee1d1a96fba", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\nindex 200cce079..76a3140d2 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n", "chunk": "@@ -70,8 +70,10 @@ public class RootSearchSection extends ContextableSearchSection<ContextableSearc\n     return SEARCH_SESSIONKEY;\n   }\n \n-  // For child sections that need to skip new Search UI, override this function and return false.\n-  public boolean useNewSearch() {\n+  /**\n+   * For child sections that need to skip new Search UI, override this function and return false.\n+   */\n+  protected boolean useNewSearch() {\n     return true;\n   }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\nindex 200cce079..76a3140d2 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n", "chunk": "@@ -70,8 +70,10 @@ public class RootSearchSection extends ContextableSearchSection<ContextableSearc\n     return SEARCH_SESSIONKEY;\n   }\n \n-  // For child sections that need to skip new Search UI, override this function and return false.\n-  public boolean useNewSearch() {\n+  /**\n+   * For child sections that need to skip new Search UI, override this function and return false.\n+   */\n+  protected boolean useNewSearch() {\n     return true;\n   }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "message": "Merge commit", "committedDate": null}, {"oid": "c6acd1235e00ad66f52d119e8032594e3b64013f", "committedDate": "2020-12-15 15:03:51 +1100", "message": "Access cached UI settings by using the cache rather than connecting to DB to retrieve again."}, {"oid": "3008bf1ad2612c49d3345f8126fedae0566463d7", "committedDate": "2022-10-03 09:35:46 +1100", "message": "feat: support displaying My resources New UI in Selection Session"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NTg0Nw==", "url": "https://github.com/openequella/openEQUELLA/pull/2582#discussion_r535755847", "body": "Should this perhaps just be `protected`?\r\n\r\n```suggestion\r\n  protected boolean useNewSearch() {\r\n```\r\n\r\nIt's not intended to be used a public interface, just for internal operations.", "bodyText": "Should this perhaps just be protected?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public boolean useNewSearch() {\n          \n          \n            \n              protected boolean useNewSearch() {\n          \n      \n    \n    \n  \n\nIt's not intended to be used a public interface, just for internal operations.", "bodyHTML": "<p dir=\"auto\">Should this perhaps just be <code>protected</code>?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k x x-first x-last\">public</span> <span class=\"pl-k\">boolean</span> useNewSearch() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k x x-first x-last\">protected</span> <span class=\"pl-k\">boolean</span> useNewSearch() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">It's not intended to be used a public interface, just for internal operations.</p>", "author": "edalex-ian", "createdAt": "2020-12-04T00:54:05Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java", "diffHunk": "@@ -70,6 +70,11 @@ protected String getSessionKey() {\n     return SEARCH_SESSIONKEY;\n   }\n \n+  // For child sections that need to skip new Search UI, override this function and return false.\n+  public boolean useNewSearch() {", "originalCommit": "2ff6b085b5e48c6db9eaaef52741c21fd161322d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c3c8fcecdb888ec1e89b60eeeda2ee1d1a96fba", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\nindex 200cce079..76a3140d2 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n", "chunk": "@@ -70,8 +70,10 @@ public class RootSearchSection extends ContextableSearchSection<ContextableSearc\n     return SEARCH_SESSIONKEY;\n   }\n \n-  // For child sections that need to skip new Search UI, override this function and return false.\n-  public boolean useNewSearch() {\n+  /**\n+   * For child sections that need to skip new Search UI, override this function and return false.\n+   */\n+  protected boolean useNewSearch() {\n     return true;\n   }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "changed_code": [{"header": "diff --git a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\nindex 200cce079..76a3140d2 100644\n--- a/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n+++ b/Source/Plugins/Core/com.equella.core/src/com/tle/web/searching/section/RootSearchSection.java\n", "chunk": "@@ -70,8 +70,10 @@ public class RootSearchSection extends ContextableSearchSection<ContextableSearc\n     return SEARCH_SESSIONKEY;\n   }\n \n-  // For child sections that need to skip new Search UI, override this function and return false.\n-  public boolean useNewSearch() {\n+  /**\n+   * For child sections that need to skip new Search UI, override this function and return false.\n+   */\n+  protected boolean useNewSearch() {\n     return true;\n   }\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "ad4c454b78795c54c9112e45cfeb5baecf6feb59", "message": "Merge commit", "committedDate": null}, {"oid": "c6acd1235e00ad66f52d119e8032594e3b64013f", "committedDate": "2020-12-15 15:03:51 +1100", "message": "Access cached UI settings by using the cache rather than connecting to DB to retrieve again."}, {"oid": "3008bf1ad2612c49d3345f8126fedae0566463d7", "committedDate": "2022-10-03 09:35:46 +1100", "message": "feat: support displaying My resources New UI in Selection Session"}]}, {"oid": "3c3c8fcecdb888ec1e89b60eeeda2ee1d1a96fba", "url": "https://github.com/openequella/openEQUELLA/commit/3c3c8fcecdb888ec1e89b60eeeda2ee1d1a96fba", "message": "A couple comment rewording for RootAdvancedSearchSection.", "committedDate": "2020-12-04T02:17:46Z", "type": "commit"}, {"oid": "0e83edeaea65043d80e6da10f8f013d2776279de", "url": "https://github.com/openequella/openEQUELLA/commit/0e83edeaea65043d80e6da10f8f013d2776279de", "message": "Centralise the building of URLs used in Selection Session\ninto a function to reduce duplicated code.\n\nThis also includes using the 'URL' class to avoid string\ninterpolation. In addition, add functions to access 'baseUrl'\nprovided by 'AppConfig'. This is primarily because 'baseUrl'\nis an empty string in Jest tests, which result in errors\nwhen using 'URL' class.", "committedDate": "2020-12-04T04:13:53Z", "type": "commit"}, {"oid": "64d5b67cf26ab18e61739adb4e712ae899fa41c1", "url": "https://github.com/openequella/openEQUELLA/commit/64d5b67cf26ab18e61739adb4e712ae899fa41c1", "message": "Make sure the selection submit URL is correct.", "committedDate": "2020-12-04T04:27:23Z", "type": "commit"}]}