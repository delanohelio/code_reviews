{"pr_number": 8256, "pr_title": "KAFKA-9675: Fix bug that prevents RocksDB metrics to be updated", "pr_author": "cadonna", "pr_createdAt": "2020-03-09T13:18:42Z", "pr_url": "https://github.com/apache/kafka/pull/8256", "timeline": [{"oid": "a652b378d51c3a83b71758d191d439457123b6ba", "url": "https://github.com/apache/kafka/commit/a652b378d51c3a83b71758d191d439457123b6ba", "message": "KAFKA-9675: Fix bug that prevents RocksDB metrics to be updated", "committedDate": "2020-03-09T12:22:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ==", "url": "https://github.com/apache/kafka/pull/8256#discussion_r390645941", "body": "Do I read this right, that we're doing the exact same thing twice?", "bodyText": "Do I read this right, that we're doing the exact same thing twice?", "bodyHTML": "<p dir=\"auto\">Do I read this right, that we're doing the exact same thing twice?</p>", "author": "vvcephei", "createdAt": "2020-03-10T22:22:32Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -142,21 +155,58 @@ public void shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailur\n         final Properties streamsConfiguration = streamsConfig();\n         IntegrationTestUtils.purgeLocalStreamsState(streamsConfiguration);\n         final StreamsBuilder builder = builderForSegmentedStateStore();\n+        final String metricsScope = \"rocksdb-window-state-id\";\n+\n+        cleanUpStateRunAndVerify(\n+            builder,\n+            streamsConfiguration,\n+            LongDeserializer.class,\n+            LongDeserializer.class,\n+            this::verifyThatRocksDBMetricsAreExposed,\n+            metricsScope\n+        );\n \n         cleanUpStateRunAndVerify(\n             builder,\n             streamsConfiguration,\n             LongDeserializer.class,\n             LongDeserializer.class,\n-            \"rocksdb-window-state-id\"\n+            this::verifyThatRocksDBMetricsAreExposed,\n+            metricsScope\n+        );", "originalCommit": "a652b378d51c3a83b71758d191d439457123b6ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxOTAyOA==", "url": "https://github.com/apache/kafka/pull/8256#discussion_r390819028", "bodyText": "As the test name says shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailureWithEmptyStateDir() this test verifies that the metrics are still there after a failure and an empty state dir (see https://issues.apache.org/jira/browse/KAFKA-9355).\nI basically simulate a failure by closing the app, wiping out the state, re-starting the app, verifying the exposure of the metrics, and closing the app. That results in doing twice the same thing.", "author": "cadonna", "createdAt": "2020-03-11T08:48:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE2NjE4OQ==", "url": "https://github.com/apache/kafka/pull/8256#discussion_r391166189", "bodyText": "Oh, I see. Definitely wasn't obvious by reading the test.", "author": "vvcephei", "createdAt": "2020-03-11T18:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5OTkxOQ==", "url": "https://github.com/apache/kafka/pull/8256#discussion_r391499919", "bodyText": "I tried to make the tests clearer.", "author": "cadonna", "createdAt": "2020-03-12T09:39:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c256e16ab33b58c8306502401e2c992018a1781", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex fd352b7bfb..34cc428bb9 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -166,7 +168,9 @@ public class RocksDBMetricsIntegrationTest {\n             metricsScope\n         );\n \n-        cleanUpStateRunAndVerify(\n+        // simulated failure\n+\n+        cleanUpStateRunVerifyAndClose(\n             builder,\n             streamsConfiguration,\n             LongDeserializer.class,\n", "next_change": {"commit": "fcf45e1fac88238b1d3dbcfa1f324674939706f3", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 34cc428bb9..e9ac2f443c 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -145,72 +143,7 @@ public class RocksDBMetricsIntegrationTest {\n         cleanUpStateRunVerifyAndClose(\n             builder,\n             streamsConfiguration,\n-            IntegerDeserializer.class,\n-            StringDeserializer.class,\n-            this::verifyThatRocksDBMetricsAreExposed,\n-            metricsScope\n-        );\n-    }\n-\n-    @Test\n-    public void shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailureWithEmptyStateDir() throws Exception {\n-        final Properties streamsConfiguration = streamsConfig();\n-        IntegrationTestUtils.purgeLocalStreamsState(streamsConfiguration);\n-        final StreamsBuilder builder = builderForSegmentedStateStore();\n-        final String metricsScope = \"rocksdb-window-state-id\";\n-\n-        cleanUpStateRunVerifyAndClose(\n-            builder,\n-            streamsConfiguration,\n-            LongDeserializer.class,\n-            LongDeserializer.class,\n-            this::verifyThatRocksDBMetricsAreExposed,\n-            metricsScope\n-        );\n-\n-        // simulated failure\n-\n-        cleanUpStateRunVerifyAndClose(\n-            builder,\n-            streamsConfiguration,\n-            LongDeserializer.class,\n-            LongDeserializer.class,\n-            this::verifyThatRocksDBMetricsAreExposed,\n-            metricsScope\n-        );\n-    }\n-\n-    @Test\n-    public void shouldVerifyThatMetricsGetMeasurementsFromRocksDBForNonSegmentedStateStore() throws Exception {\n-        final Properties streamsConfiguration = streamsConfig();\n-        IntegrationTestUtils.purgeLocalStreamsState(streamsConfiguration);\n-        final StreamsBuilder builder = builderForNonSegmentedStateStore();\n-        final String metricsScope = \"rocksdb-state-id\";\n-\n-        cleanUpStateRunVerifyAndClose(\n-            builder,\n-            streamsConfiguration,\n-            IntegerDeserializer.class,\n-            StringDeserializer.class,\n-            this::verifyThatBytesWrittenTotalIncreases,\n-            metricsScope\n-        );\n-    }\n-\n-    @Test\n-    public void shouldVerifyThatMetricsGetMeasurementsFromRocksDBForSegmentedStateStore() throws Exception {\n-        final Properties streamsConfiguration = streamsConfig();\n-        IntegrationTestUtils.purgeLocalStreamsState(streamsConfiguration);\n-        final StreamsBuilder builder = builderForSegmentedStateStore();\n-        final String metricsScope = \"rocksdb-window-state-id\";\n-\n-        cleanUpStateRunVerifyAndClose(\n-            builder,\n-            streamsConfiguration,\n-            LongDeserializer.class,\n-            LongDeserializer.class,\n-            this::verifyThatBytesWrittenTotalIncreases,\n-            metricsScope\n+            this::verifyThatRocksDBMetricsAreExposed\n         );\n     }\n \n", "next_change": {"commit": "fbd8cf0d861dec5b7bac237e8221cfae51bec14a", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex e9ac2f443c..394eeed051 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -149,7 +154,10 @@ public class RocksDBMetricsIntegrationTest {\n \n     private Properties streamsConfig() {\n         final Properties streamsConfiguration = new Properties();\n-        streamsConfiguration.put(StreamsConfig.APPLICATION_ID_CONFIG, \"test-application\");\n+        final String suffix = name.getMethodName()\n+            .replace('[', '_')\n+            .replace(']', '_');\n+        streamsConfiguration.put(StreamsConfig.APPLICATION_ID_CONFIG, \"test-application-\" + suffix);\n         streamsConfiguration.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n         streamsConfiguration.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         streamsConfiguration.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n", "next_change": {"commit": "dc4d439825b2d117707b01c7c64769e700246fc6", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 394eeed051..af7dad0650 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -154,10 +155,8 @@ public class RocksDBMetricsIntegrationTest {\n \n     private Properties streamsConfig() {\n         final Properties streamsConfiguration = new Properties();\n-        final String suffix = name.getMethodName()\n-            .replace('[', '_')\n-            .replace(']', '_');\n-        streamsConfiguration.put(StreamsConfig.APPLICATION_ID_CONFIG, \"test-application-\" + suffix);\n+        final String safeTestName = safeUniqueTestName(getClass(), testName);\n+        streamsConfiguration.put(StreamsConfig.APPLICATION_ID_CONFIG, \"test-application-\" + safeTestName);\n         streamsConfiguration.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n         streamsConfiguration.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         streamsConfiguration.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n", "next_change": {"commit": "c04000cab1e98c206c5410ef68d00df1d9129182", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex af7dad0650..5917faa032 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -163,6 +185,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n+        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": {"commit": "14c6030c6ad70997863070f5b93c817ea8829425", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 5917faa032..725b38612a 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -185,7 +198,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n-        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n+        streamsConfiguration.put(StreamsConfig.STATESTORE_CACHE_MAX_BYTES_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": {"commit": "67cf187603f54ba4f53f0b9eb93b269430f829db", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 725b38612a..c698d06772 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -198,7 +198,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n-        streamsConfiguration.put(StreamsConfig.STATESTORE_CACHE_MAX_BYTES_CONFIG, 0);\n+        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": {"commit": "0924fd3f9f75c446310ed1e97b44bbc3f33c6c31", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex c698d06772..725b38612a 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -198,7 +198,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n-        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n+        streamsConfiguration.put(StreamsConfig.STATESTORE_CACHE_MAX_BYTES_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": {"commit": "38b08dfd3384a04b73e236c83f1e3ce0fffeda45", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 725b38612a..17610c8450 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -198,7 +200,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n-        streamsConfiguration.put(StreamsConfig.STATESTORE_CACHE_MAX_BYTES_CONFIG, 0);\n+        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": {"commit": "9a793897ec486df550367dee43078e463b234294", "changed_code": [{"header": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\nindex 17610c8450..2d667839fa 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java\n", "chunk": "@@ -200,7 +200,7 @@ public class RocksDBMetricsIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.METRICS_RECORDING_LEVEL_CONFIG, Sensor.RecordingLevel.DEBUG.name);\n         streamsConfiguration.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, processingGuarantee);\n         streamsConfiguration.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n-        streamsConfiguration.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n+        streamsConfiguration.put(StreamsConfig.STATESTORE_CACHE_MAX_BYTES_CONFIG, 0);\n         return streamsConfiguration;\n     }\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"oid": "e145830422a24c6802bb1d7cef9e80008025c182", "url": "https://github.com/apache/kafka/commit/e145830422a24c6802bb1d7cef9e80008025c182", "message": "Clarify some tests", "committedDate": "2020-03-12T09:38:38Z", "type": "commit"}]}