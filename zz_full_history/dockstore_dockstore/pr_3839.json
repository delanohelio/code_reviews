{"pr_number": 3839, "pr_title": "Feature/3739/allow adding link to forum", "pr_author": "nrzhao4", "pr_createdAt": "2020-09-30T20:03:48Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3839", "merge_commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "timeline": [{"oid": "8a929d76386c2b879f8f09c97fb638ee06a31297", "url": "https://github.com/dockstore/dockstore/commit/8a929d76386c2b879f8f09c97fb638ee06a31297", "message": "Added forumUrl column to workflow", "committedDate": "2020-09-25T21:18:33Z", "type": "commit"}, {"oid": "894db98a4a660bb31734dbedf58bbfdbf19919d6", "url": "https://github.com/dockstore/dockstore/commit/894db98a4a660bb31734dbedf58bbfdbf19919d6", "message": "added forumUrl default value, corrected JSON property name", "committedDate": "2020-09-30T15:00:03Z", "type": "commit"}, {"oid": "5e484ec1c02893829ba04814b776cfd815906589", "url": "https://github.com/dockstore/dockstore/commit/5e484ec1c02893829ba04814b776cfd815906589", "message": "removed default forumUrl, updateWorkflow includes updating forumUrl", "committedDate": "2020-09-30T18:11:52Z", "type": "commit"}, {"oid": "b6e7897cfe6945389267652dce7ee290ca5bc91f", "url": "https://github.com/dockstore/dockstore/commit/b6e7897cfe6945389267652dce7ee290ca5bc91f", "message": "wrote test for updating forumUrl", "committedDate": "2020-09-30T19:37:53Z", "type": "commit"}, {"oid": "4b6527e8f0518a6dab35cacfcc7b0238ec691526", "url": "https://github.com/dockstore/dockstore/commit/4b6527e8f0518a6dab35cacfcc7b0238ec691526", "message": "checkstyle errors", "committedDate": "2020-09-30T19:56:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1ODM3OA==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r497858378", "body": "Closing brace on its own line is the normal pattern.", "bodyText": "Closing brace on its own line is the normal pattern.", "bodyHTML": "<p dir=\"auto\">Closing brace on its own line is the normal pattern.</p>", "author": "coverbeck", "createdAt": "2020-09-30T23:37:44Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java", "diffHunk": "@@ -249,6 +254,13 @@ public void setDefaultWorkflowPath(String defaultWorkflowPath) {\n         getDefaultPaths().put(this.getDescriptorType().getFileType(), defaultWorkflowPath);\n     }\n \n+    @JsonProperty\n+    public String getForumUrl() {\n+        return forumUrl;\n+    }\n+    public void setForumUrl(String forumUrl) {\n+        this.forumUrl = forumUrl; }", "originalCommit": "4b6527e8f0518a6dab35cacfcc7b0238ec691526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyNjYxMw==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r505626613", "bodyText": "ugh, gotta fix checkstyle", "author": "garyluu", "createdAt": "2020-10-15T15:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1ODM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "587cdcd0adec3ca537f2dcb090e45eb8ae0127dd", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex a5b579a30..18609fe6e 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -259,7 +261,8 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n         return forumUrl;\n     }\n     public void setForumUrl(String forumUrl) {\n-        this.forumUrl = forumUrl; }\n+        this.forumUrl = forumUrl;\n+    }\n \n     @JsonProperty\n     public String getOrganization() {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex a5b579a30..740346c16 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -259,7 +267,8 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n         return forumUrl;\n     }\n     public void setForumUrl(String forumUrl) {\n-        this.forumUrl = forumUrl; }\n+        this.forumUrl = forumUrl;\n+    }\n \n     @JsonProperty\n     public String getOrganization() {\n", "next_change": null}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "aae19d6ee198e68ebba85f37024d1ddf865cc365", "committedDate": "2021-05-03 09:42:25 -0700", "message": "set last modified for github app workflows (#4224)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "d057d7f6cf93710603991679a5a8ddbbcb554c4b", "committedDate": "2022-01-12 12:09:44 -0800", "message": "Prevent duplicate paths between apptools and workflows (#4655)"}, {"oid": "719c2d076656c25a2c4ad3a30240dc45ca5cd3df", "committedDate": "2022-02-02 15:22:23 -0800", "message": "changes to support Snakemake (#4686)"}, {"oid": "b2b3311809bca2ae45462138ba2c9d3420f6bd90", "committedDate": "2022-02-14 13:03:30 -0500", "message": "Update trs limit (#4720)"}, {"oid": "c59924138e1490a71afc0a889fc00777580650fe", "committedDate": "2022-02-14 15:30:00 -0500", "message": "Merge tag '1.11.12' into develop"}, {"oid": "5b03d70df1a88fc2b7cbba515942e7f246d4622f", "committedDate": "2022-03-22 16:56:00 -0400", "message": "Feature/checkstyle spotbugs update (#4807)"}, {"oid": "8296e487f89142ec71d131d14cded8b8daf62184", "committedDate": "2022-04-21 15:56:36 -0700", "message": "improve performance of fetching descriptor file via trs"}, {"oid": "c9106e48c6d75cb1bacfd9737910fde334a37bf8", "committedDate": "2022-07-07 10:10:20 -0400", "message": "batch process index index creation (#4973)"}, {"oid": "26364e3549026cf328437803120092c63ba8a45a", "committedDate": "2022-07-28 17:09:47 -0700", "message": "Don't terminate indexing after an indexing failure (#5024)"}, {"oid": "4aae4e244b8a156a747754d571e64f1178bb64ef", "committedDate": "2022-08-25 15:17:28 -0700", "message": "harmonize EntryVersionHelper \"sourcefiles\" methods"}, {"oid": "4db3e99e6ca2fc03285ea4ed29643d1bd24cd652", "committedDate": "2022-11-02 09:41:28 -0700", "message": "Correctly discover existing workflows (#5199)"}, {"oid": "ba888a658a93a6561fdc0fe7279f6332dbfcd7a3", "committedDate": "2022-11-14 10:11:46 -0800", "message": "improve .dockstore.yml validation"}, {"oid": "7fe1d2db36046b59f7bece33f52fb4559b726c2a", "committedDate": "2023-01-12 15:24:04 -0800", "message": "add Notebook entity and related stuff"}, {"oid": "70de03c0e7549cd7dcee96ba0b717b05e27cb3d9", "committedDate": "2023-02-01 09:40:42 -0800", "message": "Update Language Versions (#5332)"}, {"oid": "8ba6457b53d3343e71913167c5bb819bc393b259", "committedDate": "2023-02-08 18:22:24 -0800", "message": "add notebooks support to .dockstore.yml and GitHub app webhooks"}, {"oid": "e3a05b6a192dee1e71e06d29e85e9fcd0f19e8eb", "committedDate": "2023-02-16 12:21:37 -0800", "message": "adjust webservice endpoints for notebooks"}, {"oid": "039f3d85a88bcfa432c5c0ba4ca827264d626c86", "committedDate": "2023-03-17 20:45:42 -0700", "message": "miscellaneous notebook tweaks"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1OTQ5MA==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r497859490", "body": "We don't always do this, but I think we should -- can you add `@size(max = 256)` so that this field is in sync with the database column max in the migrations file? But first see my comment about 256 there.", "bodyText": "We don't always do this, but I think we should -- can you add @size(max = 256) so that this field is in sync with the database column max in the migrations file? But first see my comment about 256 there.", "bodyHTML": "<p dir=\"auto\">We don't always do this, but I think we should -- can you add <code>@size(max = 256)</code> so that this field is in sync with the database column max in the migrations file? But first see my comment about 256 there.</p>", "author": "coverbeck", "createdAt": "2020-09-30T23:41:38Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java", "diffHunk": "@@ -113,6 +113,10 @@\n     @Convert(converter = SourceControlConverter.class)\n     private SourceControl sourceControl;\n \n+    @Column", "originalCommit": "4b6527e8f0518a6dab35cacfcc7b0238ec691526", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "587cdcd0adec3ca537f2dcb090e45eb8ae0127dd", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex a5b579a30..18609fe6e 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -114,6 +115,7 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     private SourceControl sourceControl;\n \n     @Column\n+    @Size(max = 256)\n     @ApiModelProperty(value = \"This is a link to a forum or discussion board\")\n     private String forumUrl;\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex a5b579a30..740346c16 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -114,6 +116,7 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     private SourceControl sourceControl;\n \n     @Column\n+    @Size(max = 256)\n     @ApiModelProperty(value = \"This is a link to a forum or discussion board\")\n     private String forumUrl;\n \n", "next_change": {"commit": "719c2d076656c25a2c4ad3a30240dc45ca5cd3df", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex 740346c16..24235218f 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -124,7 +126,7 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     // this one is annoying since the codegen doesn't seem to pick up @JsonValue in the DescriptorLanguage enum\n     @Column(nullable = false)\n     @Convert(converter = DescriptorLanguageConverter.class)\n-    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"CWL, WDL, NFL, gxformat2, service\")\n+    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either SMK, CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"SMK, CWL, WDL, NFL, gxformat2, service\")\n     private DescriptorLanguage descriptorType;\n \n     // TODO: Change this to LAZY, this is the source of all our problems\n", "next_change": {"commit": "b2b3311809bca2ae45462138ba2c9d3420f6bd90", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex 24235218f..7531f84dc 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -126,7 +128,7 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     // this one is annoying since the codegen doesn't seem to pick up @JsonValue in the DescriptorLanguage enum\n     @Column(nullable = false)\n     @Convert(converter = DescriptorLanguageConverter.class)\n-    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either SMK, CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"SMK, CWL, WDL, NFL, gxformat2, service\")\n+    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"CWL, WDL, NFL, gxformat2, service\")\n     private DescriptorLanguage descriptorType;\n \n     // TODO: Change this to LAZY, this is the source of all our problems\n", "next_change": {"commit": "c59924138e1490a71afc0a889fc00777580650fe", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex 7531f84dc..01b048088 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -128,7 +127,7 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     // this one is annoying since the codegen doesn't seem to pick up @JsonValue in the DescriptorLanguage enum\n     @Column(nullable = false)\n     @Convert(converter = DescriptorLanguageConverter.class)\n-    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"CWL, WDL, NFL, gxformat2, service\")\n+    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either SMK, CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"SMK, CWL, WDL, NFL, gxformat2, service\")\n     private DescriptorLanguage descriptorType;\n \n     // TODO: Change this to LAZY, this is the source of all our problems\n", "next_change": {"commit": "7fe1d2db36046b59f7bece33f52fb4559b726c2a", "changed_code": [{"header": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\nindex 01b048088..3b95992de 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Workflow.java\n", "chunk": "@@ -127,13 +131,13 @@ public abstract class Workflow extends Entry<Workflow, WorkflowVersion> {\n     // this one is annoying since the codegen doesn't seem to pick up @JsonValue in the DescriptorLanguage enum\n     @Column(nullable = false)\n     @Convert(converter = DescriptorLanguageConverter.class)\n-    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either SMK, CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"SMK, CWL, WDL, NFL, gxformat2, service\")\n+    @ApiModelProperty(value = \"This is a descriptor type for the workflow, by default either SMK, CWL, WDL, NFL, or gxformat2 (Defaults to CWL).\", required = true, position = 18, allowableValues = \"SMK, CWL, WDL, NFL, gxformat2, service, ipynb\")\n     private DescriptorLanguage descriptorType;\n \n     // TODO: Change this to LAZY, this is the source of all our problems\n     @Column(nullable = false, columnDefinition = \"varchar(255) default 'n/a'\")\n     @Convert(converter = DescriptorLanguageSubclassConverter.class)\n-    @ApiModelProperty(value = \"This is a descriptor type subclass for the workflow. Currently it is only used for services.\", required = true, position = 22)\n+    @ApiModelProperty(value = \"This is a descriptor type subclass for the workflow. Currently it is only used for services and notebooks.\", required = true, position = 22)\n     private DescriptorLanguageSubclass descriptorTypeSubclass = DescriptorLanguageSubclass.NOT_APPLICABLE;\n \n     @OneToMany(fetch = FetchType.LAZY, orphanRemoval = true, targetEntity = Version.class, mappedBy = \"parent\")\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "aae19d6ee198e68ebba85f37024d1ddf865cc365", "committedDate": "2021-05-03 09:42:25 -0700", "message": "set last modified for github app workflows (#4224)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "d057d7f6cf93710603991679a5a8ddbbcb554c4b", "committedDate": "2022-01-12 12:09:44 -0800", "message": "Prevent duplicate paths between apptools and workflows (#4655)"}, {"oid": "719c2d076656c25a2c4ad3a30240dc45ca5cd3df", "committedDate": "2022-02-02 15:22:23 -0800", "message": "changes to support Snakemake (#4686)"}, {"oid": "b2b3311809bca2ae45462138ba2c9d3420f6bd90", "committedDate": "2022-02-14 13:03:30 -0500", "message": "Update trs limit (#4720)"}, {"oid": "c59924138e1490a71afc0a889fc00777580650fe", "committedDate": "2022-02-14 15:30:00 -0500", "message": "Merge tag '1.11.12' into develop"}, {"oid": "5b03d70df1a88fc2b7cbba515942e7f246d4622f", "committedDate": "2022-03-22 16:56:00 -0400", "message": "Feature/checkstyle spotbugs update (#4807)"}, {"oid": "8296e487f89142ec71d131d14cded8b8daf62184", "committedDate": "2022-04-21 15:56:36 -0700", "message": "improve performance of fetching descriptor file via trs"}, {"oid": "c9106e48c6d75cb1bacfd9737910fde334a37bf8", "committedDate": "2022-07-07 10:10:20 -0400", "message": "batch process index index creation (#4973)"}, {"oid": "26364e3549026cf328437803120092c63ba8a45a", "committedDate": "2022-07-28 17:09:47 -0700", "message": "Don't terminate indexing after an indexing failure (#5024)"}, {"oid": "4aae4e244b8a156a747754d571e64f1178bb64ef", "committedDate": "2022-08-25 15:17:28 -0700", "message": "harmonize EntryVersionHelper \"sourcefiles\" methods"}, {"oid": "4db3e99e6ca2fc03285ea4ed29643d1bd24cd652", "committedDate": "2022-11-02 09:41:28 -0700", "message": "Correctly discover existing workflows (#5199)"}, {"oid": "ba888a658a93a6561fdc0fe7279f6332dbfcd7a3", "committedDate": "2022-11-14 10:11:46 -0800", "message": "improve .dockstore.yml validation"}, {"oid": "7fe1d2db36046b59f7bece33f52fb4559b726c2a", "committedDate": "2023-01-12 15:24:04 -0800", "message": "add Notebook entity and related stuff"}, {"oid": "70de03c0e7549cd7dcee96ba0b717b05e27cb3d9", "committedDate": "2023-02-01 09:40:42 -0800", "message": "Update Language Versions (#5332)"}, {"oid": "8ba6457b53d3343e71913167c5bb819bc393b259", "committedDate": "2023-02-08 18:22:24 -0800", "message": "add notebooks support to .dockstore.yml and GitHub app webhooks"}, {"oid": "e3a05b6a192dee1e71e06d29e85e9fcd0f19e8eb", "committedDate": "2023-02-16 12:21:37 -0800", "message": "adjust webservice endpoints for notebooks"}, {"oid": "039f3d85a88bcfa432c5c0ba4ca827264d626c86", "committedDate": "2023-03-17 20:45:42 -0700", "message": "miscellaneous notebook tweaks"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDUxMA==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r497860510", "body": "Do you need this? Shouldn't the forumUrl already be in the DB after line 522? Or are you trying to verify that it sticks after refresh?", "bodyText": "Do you need this? Shouldn't the forumUrl already be in the DB after line 522? Or are you trying to verify that it sticks after refresh?", "bodyHTML": "<p dir=\"auto\">Do you need this? Shouldn't the forumUrl already be in the DB after line 522? Or are you trying to verify that it sticks after refresh?</p>", "author": "coverbeck", "createdAt": "2020-09-30T23:45:19Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java", "diffHunk": "@@ -503,6 +504,30 @@ public void testUpdateWorkflowPath() throws ApiException {\n         assertEquals(\"test workflow path should be the same as default workflow path, it is \" + testpath, \"/Dockstore.cwl\", testpath);\n     }\n \n+    @Test\n+    public void testAddingWorkflowForumUrl() throws ApiException {\n+        // Set up webservice\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        UsersApi usersApi = new UsersApi(webClient);\n+        usersApi.getUser();\n+\n+        Workflow workflow = workflowsApi\n+                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n+                        \"/test.json\");\n+\n+        //update the forumUrl to hello.com\n+        workflow.setForumUrl(\"hello.com\");\n+        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n+        workflowsApi.refresh(workflow.getId());", "originalCommit": "4b6527e8f0518a6dab35cacfcc7b0238ec691526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI4NzU1OA==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r498287558", "bodyText": "Hm I included the refresh because I was modelling the structure of other update tests. I think verifying it still sticks after is refresh is a good idea, mimics the behaviour of when a user updates the forumUrl", "author": "nrzhao4", "createdAt": "2020-10-01T14:27:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2MDUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "5e19ad7a951d9dc6789b7bec0de0a4aec72112e5", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 63e54a666..d16d6b550 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -516,6 +515,8 @@ public class GeneralWorkflowIT extends BaseIT {\n         Workflow workflow = workflowsApi\n                 .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n                         \"/test.json\");\n+        SourceControl.GITHUB.getFriendlyName();\n+        DescriptorLanguage.CWL.toString();\n \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n", "next_change": {"commit": "a96a29e3c7cd8b55ef8e70fee95bbbdcf126aa17", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex d16d6b550..b9e743db8 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -521,7 +608,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId());\n+        workflowsApi.refresh(workflow.getId(), false);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n", "next_change": {"commit": "023526c3a35fb0dd82bd2c7f5eb883c62aabe565", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex b9e743db8..c908ef2ad 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -600,11 +600,10 @@ public class GeneralWorkflowIT extends BaseIT {\n         usersApi.getUser();\n \n         Workflow workflow = workflowsApi\n-                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n+                .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n+                        \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n-        SourceControl.GITHUB.getFriendlyName();\n-        DescriptorLanguage.CWL.toString();\n-\n+        \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 63e54a666..802cb76a1 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -510,17 +596,15 @@ public class GeneralWorkflowIT extends BaseIT {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n-        UsersApi usersApi = new UsersApi(webClient);\n-        usersApi.getUser();\n-\n         Workflow workflow = workflowsApi\n-                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n+                .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n+                        \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n-\n+        \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId());\n+        workflowsApi.refresh(workflow.getId(), false);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n", "next_change": {"commit": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 802cb76a1..ce66687d3 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -602,14 +600,17 @@ public class GeneralWorkflowIT extends BaseIT {\n                         \"/test.json\");\n         \n         //update the forumUrl to hello.com\n+        final String newTopic = \"newTopic\";\n         workflow.setForumUrl(\"hello.com\");\n-        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId(), false);\n+        workflow.setTopic(newTopic);\n+        Workflow updatedWorkflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n+\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n     }\n \n     @Test\n", "next_change": {"commit": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex ce66687d3..77c856c9c 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -610,7 +636,7 @@ public class GeneralWorkflowIT extends BaseIT {\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n-        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n     }\n \n     @Test\n", "next_change": {"commit": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 77c856c9c..aa3a9dd22 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -637,6 +641,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n         Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n     @Test\n", "next_change": {"commit": "61add711e172f17e1c24a711f041c7a5f15e4081", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex aa3a9dd22..0c53ab941 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -644,6 +644,41 @@ public class GeneralWorkflowIT extends BaseIT {\n         Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n+    @Test\n+    public void testTopicAfterRefresh() throws ApiException {\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowsApi, \"DockstoreTestUser2/hello-dockstore-workflow\", \"testname\", DescriptorLanguage.CWL.toString(),\n+            SourceControl.GITHUB, \"/Dockstore.cwl\", false);\n+\n+        // confirm the default workflow topic settings\n+        final String topicAutomatic = workflow.getTopicAutomatic();\n+        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        Assert.assertEquals(null, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+\n+        // set the automatic topic to a garbage string, change the manual topic, and select it\n+        final String topicManual = \"a user-specified manual topic!\";\n+        final String garbage = \"fooooo\";\n+        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+\n+        // confirm the new topic settings\n+        workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n+        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+\n+        // refresh the workflow\n+        Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n+\n+        // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n+        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+    }\n+\n     @Test\n     public void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n", "next_change": {"commit": "84c62e295859ccfe94749e8159b0d5b8874e260f", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 0c53ab941..cd2043c98 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -654,33 +502,34 @@ public class GeneralWorkflowIT extends BaseIT {\n \n         // confirm the default workflow topic settings\n         final String topicAutomatic = workflow.getTopicAutomatic();\n-        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n-        Assert.assertEquals(null, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+        assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        assertNull(workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n \n         // set the automatic topic to a garbage string, change the manual topic, and select it\n         final String topicManual = \"a user-specified manual topic!\";\n         final String garbage = \"fooooo\";\n-        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+        assertEquals(1,\n+            testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n \n         // confirm the new topic settings\n         workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n-        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+        assertEquals(garbage, workflow.getTopicAutomatic());\n+        assertEquals(topicManual, workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n \n         // refresh the workflow\n         Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n \n         // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n-        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n-        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+        assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n     }\n \n     @Test\n-    public void testWorkflowFreezingWithNoFiles() {\n+    void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "c843ddfc66e056afd7d16fbcc4fd0fa7bd6c63e9", "committedDate": "2020-12-09 15:44:35 -0500", "message": "Don't use changing ID as identifier (#3969)"}, {"oid": "41dd50e4c7b0271f6a09808a5dab939f3a74f73a", "committedDate": "2021-03-15 19:00:35 -0400", "message": "first set of test fixes for changes to test repos (#4105)"}, {"oid": "5e21b38d44454d31ecb99520ae355f2cd34e9fb6", "committedDate": "2021-03-16 12:02:16 -0400", "message": "Feature/license fix (#4110)"}, {"oid": "5f17ec18ec27152a0644002889515c0e939856f9", "committedDate": "2021-03-22 14:51:04 -0400", "message": "Feature/seab 2622/cromwell test failures (#4130)"}, {"oid": "6bbc0c2cded5b302c6bd8381c845421687762c2f", "committedDate": "2021-06-10 13:16:01 -0400", "message": "Check not frozen before saving DAG (#4289)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "216c546b643119a3cca20662e643bcb47b2d5b7e", "committedDate": "2021-07-16 11:08:02 -0400", "message": "Fix all necessary sonarcloud issues in workflow resource (#4356)"}, {"oid": "8b158006cda66c2f0c42d80f51445ee0cfeba66f", "committedDate": "2021-08-12 14:31:36 -0700", "message": "make endpoint backwards compatible with CLI (#4393)"}, {"oid": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "committedDate": "2021-11-30 14:13:14 -0500", "message": "Feature/seab 3656/topic sentence (#4593)"}, {"oid": "902126a7ae432db0b75381ca140ba537c44b7efc", "committedDate": "2021-12-09 13:17:47 -0800", "message": "Feature/regex backtrack fix (#4608)"}, {"oid": "7e5dd94b069c3dda108f546bd19468a6d2da2bae", "committedDate": "2021-12-20 09:43:23 -0800", "message": "remove garbage from version metadata table, add constraints to prevent reoccurence"}, {"oid": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Change to new topic db schema and make some adjustments"}, {"oid": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Add topic selection assertions"}, {"oid": "61add711e172f17e1c24a711f041c7a5f15e4081", "committedDate": "2022-01-26 10:41:43 -0800", "message": "update topicAutomatic for workflows on refresh and tools on refresh and creation"}, {"oid": "b9e4340d26e70dc1d28633591492390cf40909f8", "committedDate": "2022-03-04 10:18:59 -0800", "message": "snapshot github apptools"}, {"oid": "f4ca90dafd5bb6e4376da055bb522f2aa1c493fb", "committedDate": "2022-05-25 12:04:02 -0400", "message": "Feature/flynn/4268/seperate bitbucket tests (#4913)"}, {"oid": "ee317f390a46eb0de4915dcb30c22c1ad21ff0d9", "committedDate": "2022-07-27 14:51:46 -0400", "message": "Feature/restub snapshot (#5035)"}, {"oid": "dc2fb617eb90e37ea4fd300f8a8dd149f72c7935", "committedDate": "2022-08-15 10:01:40 -0400", "message": "Removing BitBucket Tokens from non-bitbucket tests (#5076)"}, {"oid": "672bf09125cd647e422c086010a029fdca485c9d", "committedDate": "2022-08-15 10:38:10 -0400", "message": "allow topic update on hosted (#5071)"}, {"oid": "7bb9cf8a801e46baa735fd849b167077a0bd130e", "committedDate": "2023-01-04 13:31:58 -0500", "message": "junit 5 with compatibility (legacy) layer (#5292)"}, {"oid": "84c62e295859ccfe94749e8159b0d5b8874e260f", "committedDate": "2023-01-09 10:38:05 -0500", "message": "convert dockstore-common, webservice, most integration tests to junit 5 (#5297)"}, {"oid": "9a5175dc41b7bd5ac07cf3f666a32fc8d20aaa33", "committedDate": "2023-02-09 09:52:54 -0800", "message": "reimplement MuteForSuccessfulTests equivalent for Junit 5"}]}, {"oid": "587cdcd0adec3ca537f2dcb090e45eb8ae0127dd", "url": "https://github.com/dockstore/dockstore/commit/587cdcd0adec3ca537f2dcb090e45eb8ae0127dd", "message": "added max=256 for column forumurl", "committedDate": "2020-10-05T15:15:19Z", "type": "commit"}, {"oid": "723ee3ee09ab66c386755c791cb5aa9393f50d59", "url": "https://github.com/dockstore/dockstore/commit/723ee3ee09ab66c386755c791cb5aa9393f50d59", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-05T16:22:59Z", "type": "commit"}, {"oid": "baf3676545a859a8e79d45875721d4012aa1e46c", "url": "https://github.com/dockstore/dockstore/commit/baf3676545a859a8e79d45875721d4012aa1e46c", "message": "update proposed database changes", "committedDate": "2020-10-05T17:22:27Z", "type": "commit"}, {"oid": "caed860865e3c174a0702da7f0d9131aa50004f6", "url": "https://github.com/dockstore/dockstore/commit/caed860865e3c174a0702da7f0d9131aa50004f6", "message": "Merge branch 'feature/3739/allowAddingLinkToForum' of https://github.com/dockstore/dockstore into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-05T17:22:58Z", "type": "commit"}, {"oid": "7375c801b8ae8e5643c8a032f8afd78da214b0c4", "url": "https://github.com/dockstore/dockstore/commit/7375c801b8ae8e5643c8a032f8afd78da214b0c4", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-09T18:44:47Z", "type": "commit"}, {"oid": "e936d882036e929c2a8b098cd3f7e688a28f91ed", "url": "https://github.com/dockstore/dockstore/commit/e936d882036e929c2a8b098cd3f7e688a28f91ed", "message": "moved changes in migration file", "committedDate": "2020-10-15T15:04:06Z", "type": "commit"}, {"oid": "4a56fee6ff89238dfac423592a829dc64920804a", "url": "https://github.com/dockstore/dockstore/commit/4a56fee6ff89238dfac423592a829dc64920804a", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-15T15:14:34Z", "type": "commit"}, {"oid": "2626c6fa639bb74e800c8208f7bffae54b5f0d8a", "url": "https://github.com/dockstore/dockstore/commit/2626c6fa639bb74e800c8208f7bffae54b5f0d8a", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-15T18:58:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwMTUxNQ==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r507901515", "body": "SourceControl.GITHUB.getFriendlyName() and DescriptorLanguage.CWL.toString()", "bodyText": "SourceControl.GITHUB.getFriendlyName() and DescriptorLanguage.CWL.toString()", "bodyHTML": "<p dir=\"auto\">SourceControl.GITHUB.getFriendlyName() and DescriptorLanguage.CWL.toString()</p>", "author": "garyluu", "createdAt": "2020-10-19T16:47:49Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java", "diffHunk": "@@ -503,6 +504,30 @@ public void testUpdateWorkflowPath() throws ApiException {\n         assertEquals(\"test workflow path should be the same as default workflow path, it is \" + testpath, \"/Dockstore.cwl\", testpath);\n     }\n \n+    @Test\n+    public void testAddingWorkflowForumUrl() throws ApiException {\n+        // Set up webservice\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        UsersApi usersApi = new UsersApi(webClient);\n+        usersApi.getUser();\n+\n+        Workflow workflow = workflowsApi\n+                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",", "originalCommit": "2626c6fa639bb74e800c8208f7bffae54b5f0d8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e19ad7a951d9dc6789b7bec0de0a4aec72112e5", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 63e54a666..d16d6b550 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -516,6 +515,8 @@ public class GeneralWorkflowIT extends BaseIT {\n         Workflow workflow = workflowsApi\n                 .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n                         \"/test.json\");\n+        SourceControl.GITHUB.getFriendlyName();\n+        DescriptorLanguage.CWL.toString();\n \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n", "next_change": {"commit": "a96a29e3c7cd8b55ef8e70fee95bbbdcf126aa17", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex d16d6b550..b9e743db8 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -521,7 +608,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId());\n+        workflowsApi.refresh(workflow.getId(), false);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n", "next_change": {"commit": "023526c3a35fb0dd82bd2c7f5eb883c62aabe565", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex b9e743db8..c908ef2ad 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -600,11 +600,10 @@ public class GeneralWorkflowIT extends BaseIT {\n         usersApi.getUser();\n \n         Workflow workflow = workflowsApi\n-                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n+                .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n+                        \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n-        SourceControl.GITHUB.getFriendlyName();\n-        DescriptorLanguage.CWL.toString();\n-\n+        \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 63e54a666..802cb76a1 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -510,17 +596,15 @@ public class GeneralWorkflowIT extends BaseIT {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n-        UsersApi usersApi = new UsersApi(webClient);\n-        usersApi.getUser();\n-\n         Workflow workflow = workflowsApi\n-                .manualRegister(\"github\", \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\", \"test-update-workflow\", \"cwl\",\n+                .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n+                        \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n-\n+        \n         //update the forumUrl to hello.com\n         workflow.setForumUrl(\"hello.com\");\n         workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId());\n+        workflowsApi.refresh(workflow.getId(), false);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n", "next_change": {"commit": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 802cb76a1..ce66687d3 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -602,14 +600,17 @@ public class GeneralWorkflowIT extends BaseIT {\n                         \"/test.json\");\n         \n         //update the forumUrl to hello.com\n+        final String newTopic = \"newTopic\";\n         workflow.setForumUrl(\"hello.com\");\n-        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId(), false);\n+        workflow.setTopic(newTopic);\n+        Workflow updatedWorkflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n+\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n     }\n \n     @Test\n", "next_change": {"commit": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex ce66687d3..77c856c9c 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -610,7 +636,7 @@ public class GeneralWorkflowIT extends BaseIT {\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n-        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n     }\n \n     @Test\n", "next_change": {"commit": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 77c856c9c..aa3a9dd22 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -637,6 +641,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n         Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n     @Test\n", "next_change": {"commit": "61add711e172f17e1c24a711f041c7a5f15e4081", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex aa3a9dd22..0c53ab941 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -644,6 +644,41 @@ public class GeneralWorkflowIT extends BaseIT {\n         Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n+    @Test\n+    public void testTopicAfterRefresh() throws ApiException {\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowsApi, \"DockstoreTestUser2/hello-dockstore-workflow\", \"testname\", DescriptorLanguage.CWL.toString(),\n+            SourceControl.GITHUB, \"/Dockstore.cwl\", false);\n+\n+        // confirm the default workflow topic settings\n+        final String topicAutomatic = workflow.getTopicAutomatic();\n+        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        Assert.assertEquals(null, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+\n+        // set the automatic topic to a garbage string, change the manual topic, and select it\n+        final String topicManual = \"a user-specified manual topic!\";\n+        final String garbage = \"fooooo\";\n+        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+\n+        // confirm the new topic settings\n+        workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n+        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+\n+        // refresh the workflow\n+        Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n+\n+        // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n+        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+    }\n+\n     @Test\n     public void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n", "next_change": {"commit": "84c62e295859ccfe94749e8159b0d5b8874e260f", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 0c53ab941..cd2043c98 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -654,33 +502,34 @@ public class GeneralWorkflowIT extends BaseIT {\n \n         // confirm the default workflow topic settings\n         final String topicAutomatic = workflow.getTopicAutomatic();\n-        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n-        Assert.assertEquals(null, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+        assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        assertNull(workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n \n         // set the automatic topic to a garbage string, change the manual topic, and select it\n         final String topicManual = \"a user-specified manual topic!\";\n         final String garbage = \"fooooo\";\n-        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+        assertEquals(1,\n+            testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n \n         // confirm the new topic settings\n         workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n-        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+        assertEquals(garbage, workflow.getTopicAutomatic());\n+        assertEquals(topicManual, workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n \n         // refresh the workflow\n         Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n \n         // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n-        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n-        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+        assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n     }\n \n     @Test\n-    public void testWorkflowFreezingWithNoFiles() {\n+    void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "c843ddfc66e056afd7d16fbcc4fd0fa7bd6c63e9", "committedDate": "2020-12-09 15:44:35 -0500", "message": "Don't use changing ID as identifier (#3969)"}, {"oid": "41dd50e4c7b0271f6a09808a5dab939f3a74f73a", "committedDate": "2021-03-15 19:00:35 -0400", "message": "first set of test fixes for changes to test repos (#4105)"}, {"oid": "5e21b38d44454d31ecb99520ae355f2cd34e9fb6", "committedDate": "2021-03-16 12:02:16 -0400", "message": "Feature/license fix (#4110)"}, {"oid": "5f17ec18ec27152a0644002889515c0e939856f9", "committedDate": "2021-03-22 14:51:04 -0400", "message": "Feature/seab 2622/cromwell test failures (#4130)"}, {"oid": "6bbc0c2cded5b302c6bd8381c845421687762c2f", "committedDate": "2021-06-10 13:16:01 -0400", "message": "Check not frozen before saving DAG (#4289)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "216c546b643119a3cca20662e643bcb47b2d5b7e", "committedDate": "2021-07-16 11:08:02 -0400", "message": "Fix all necessary sonarcloud issues in workflow resource (#4356)"}, {"oid": "8b158006cda66c2f0c42d80f51445ee0cfeba66f", "committedDate": "2021-08-12 14:31:36 -0700", "message": "make endpoint backwards compatible with CLI (#4393)"}, {"oid": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "committedDate": "2021-11-30 14:13:14 -0500", "message": "Feature/seab 3656/topic sentence (#4593)"}, {"oid": "902126a7ae432db0b75381ca140ba537c44b7efc", "committedDate": "2021-12-09 13:17:47 -0800", "message": "Feature/regex backtrack fix (#4608)"}, {"oid": "7e5dd94b069c3dda108f546bd19468a6d2da2bae", "committedDate": "2021-12-20 09:43:23 -0800", "message": "remove garbage from version metadata table, add constraints to prevent reoccurence"}, {"oid": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Change to new topic db schema and make some adjustments"}, {"oid": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Add topic selection assertions"}, {"oid": "61add711e172f17e1c24a711f041c7a5f15e4081", "committedDate": "2022-01-26 10:41:43 -0800", "message": "update topicAutomatic for workflows on refresh and tools on refresh and creation"}, {"oid": "b9e4340d26e70dc1d28633591492390cf40909f8", "committedDate": "2022-03-04 10:18:59 -0800", "message": "snapshot github apptools"}, {"oid": "f4ca90dafd5bb6e4376da055bb522f2aa1c493fb", "committedDate": "2022-05-25 12:04:02 -0400", "message": "Feature/flynn/4268/seperate bitbucket tests (#4913)"}, {"oid": "ee317f390a46eb0de4915dcb30c22c1ad21ff0d9", "committedDate": "2022-07-27 14:51:46 -0400", "message": "Feature/restub snapshot (#5035)"}, {"oid": "dc2fb617eb90e37ea4fd300f8a8dd149f72c7935", "committedDate": "2022-08-15 10:01:40 -0400", "message": "Removing BitBucket Tokens from non-bitbucket tests (#5076)"}, {"oid": "672bf09125cd647e422c086010a029fdca485c9d", "committedDate": "2022-08-15 10:38:10 -0400", "message": "allow topic update on hosted (#5071)"}, {"oid": "7bb9cf8a801e46baa735fd849b167077a0bd130e", "committedDate": "2023-01-04 13:31:58 -0500", "message": "junit 5 with compatibility (legacy) layer (#5292)"}, {"oid": "84c62e295859ccfe94749e8159b0d5b8874e260f", "committedDate": "2023-01-09 10:38:05 -0500", "message": "convert dockstore-common, webservice, most integration tests to junit 5 (#5297)"}, {"oid": "9a5175dc41b7bd5ac07cf3f666a32fc8d20aaa33", "committedDate": "2023-02-09 09:52:54 -0800", "message": "reimplement MuteForSuccessfulTests equivalent for Junit 5"}]}, {"oid": "26449a068380c34840f0d6c8a79ebf7b33a10355", "url": "https://github.com/dockstore/dockstore/commit/26449a068380c34840f0d6c8a79ebf7b33a10355", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-19T20:33:06Z", "type": "commit"}, {"oid": "5e19ad7a951d9dc6789b7bec0de0a4aec72112e5", "url": "https://github.com/dockstore/dockstore/commit/5e19ad7a951d9dc6789b7bec0de0a4aec72112e5", "message": "changes to test", "committedDate": "2020-10-20T18:14:12Z", "type": "commit"}, {"oid": "d6c86489bfdab3d070cb61240fea3523a53a18a8", "url": "https://github.com/dockstore/dockstore/commit/d6c86489bfdab3d070cb61240fea3523a53a18a8", "message": "Merge branch 'feature/3739/allowAddingLinkToForum' of https://github.com/dockstore/dockstore into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-20T18:14:51Z", "type": "commit"}, {"oid": "a96a29e3c7cd8b55ef8e70fee95bbbdcf126aa17", "url": "https://github.com/dockstore/dockstore/commit/a96a29e3c7cd8b55ef8e70fee95bbbdcf126aa17", "message": "changes to test", "committedDate": "2020-10-20T18:41:03Z", "type": "commit"}, {"oid": "023526c3a35fb0dd82bd2c7f5eb883c62aabe565", "url": "https://github.com/dockstore/dockstore/commit/023526c3a35fb0dd82bd2c7f5eb883c62aabe565", "message": "changed test", "committedDate": "2020-10-20T20:31:29Z", "type": "commit"}, {"oid": "9766a69081ce0da74f0b74576559fed8b4b4a87d", "url": "https://github.com/dockstore/dockstore/commit/9766a69081ce0da74f0b74576559fed8b4b4a87d", "message": "Merge branch 'develop' into feature/3739/allowAddingLinkToForum", "committedDate": "2020-10-23T15:15:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzNjcwNw==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r511036707", "body": "What's the purpose of this?", "bodyText": "What's the purpose of this?", "bodyHTML": "<p dir=\"auto\">What's the purpose of this?</p>", "author": "garyluu", "createdAt": "2020-10-23T17:36:04Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java", "diffHunk": "@@ -590,6 +590,31 @@ public void testUpdateWorkflowPath() throws ApiException {\n         assertEquals(\"test workflow path should be the same as default workflow path, it is \" + testpath, \"/Dockstore.cwl\", testpath);\n     }\n \n+    @Test\n+    public void testAddingWorkflowForumUrl() throws ApiException {\n+        // Set up webservice\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        UsersApi usersApi = new UsersApi(webClient);\n+        usersApi.getUser();", "originalCommit": "9766a69081ce0da74f0b74576559fed8b4b4a87d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6abb422656f6bd0363fce595471842e578674a33", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex c908ef2ad..802cb76a1 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -596,9 +596,6 @@ public class GeneralWorkflowIT extends BaseIT {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n-        UsersApi usersApi = new UsersApi(webClient);\n-        usersApi.getUser();\n-\n         Workflow workflow = workflowsApi\n                 .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n                         \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d836384f3e6f993f4f30badebf62bda89d601d12", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex c908ef2ad..802cb76a1 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -596,9 +596,6 @@ public class GeneralWorkflowIT extends BaseIT {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n-        UsersApi usersApi = new UsersApi(webClient);\n-        usersApi.getUser();\n-\n         Workflow workflow = workflowsApi\n                 .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n                         \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n", "next_change": {"commit": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 802cb76a1..ce66687d3 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -591,7 +589,7 @@ public class GeneralWorkflowIT extends BaseIT {\n     }\n \n     @Test\n-    public void testAddingWorkflowForumUrl() throws ApiException {\n+    public void testAddingWorkflowForumUrlAndTopic() throws ApiException {\n         // Set up webservice\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n", "next_change": {"commit": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex ce66687d3..aa3a9dd22 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -598,11 +625,14 @@ public class GeneralWorkflowIT extends BaseIT {\n                 .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n                         \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n+\n+        Assert.assertEquals(\"Should default to automatic\", TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n         \n         //update the forumUrl to hello.com\n         final String newTopic = \"newTopic\";\n         workflow.setForumUrl(\"hello.com\");\n-        workflow.setTopic(newTopic);\n+        workflow.setTopicManual(newTopic);\n+        workflow.setTopicSelection(TopicSelectionEnum.MANUAL);\n         Workflow updatedWorkflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n \n         //check the workflow's forumUrl is hello.com\n", "next_change": {"commit": "84c62e295859ccfe94749e8159b0d5b8874e260f", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex aa3a9dd22..cd2043c98 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -638,14 +486,50 @@ public class GeneralWorkflowIT extends BaseIT {\n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n-        assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n+        assertEquals(\"hello.com\", updatedForumUrl, \"forumUrl should be updated, it is \" + updatedForumUrl);\n \n-        Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n+        assertEquals(newTopic, updatedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n     @Test\n-    public void testWorkflowFreezingWithNoFiles() {\n+    void testTopicAfterRefresh() throws ApiException {\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowsApi, \"DockstoreTestUser2/hello-dockstore-workflow\", \"testname\", DescriptorLanguage.CWL.toString(),\n+            SourceControl.GITHUB, \"/Dockstore.cwl\", false);\n+\n+        // confirm the default workflow topic settings\n+        final String topicAutomatic = workflow.getTopicAutomatic();\n+        assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        assertNull(workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+\n+        // set the automatic topic to a garbage string, change the manual topic, and select it\n+        final String topicManual = \"a user-specified manual topic!\";\n+        final String garbage = \"fooooo\";\n+        assertEquals(1,\n+            testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+\n+        // confirm the new topic settings\n+        workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n+        assertEquals(garbage, workflow.getTopicAutomatic());\n+        assertEquals(topicManual, workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+\n+        // refresh the workflow\n+        Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n+\n+        // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n+        assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+    }\n+\n+    @Test\n+    void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n", "next_change": null}]}}]}}, {"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 802cb76a1..ce66687d3 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -602,14 +600,17 @@ public class GeneralWorkflowIT extends BaseIT {\n                         \"/test.json\");\n         \n         //update the forumUrl to hello.com\n+        final String newTopic = \"newTopic\";\n         workflow.setForumUrl(\"hello.com\");\n-        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId(), false);\n+        workflow.setTopic(newTopic);\n+        Workflow updatedWorkflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n+\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n     }\n \n     @Test\n", "next_change": {"commit": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex ce66687d3..77c856c9c 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -610,7 +636,7 @@ public class GeneralWorkflowIT extends BaseIT {\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n-        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n     }\n \n     @Test\n", "next_change": {"commit": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 77c856c9c..aa3a9dd22 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -637,6 +641,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n         Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n     @Test\n", "next_change": {"commit": "61add711e172f17e1c24a711f041c7a5f15e4081", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex aa3a9dd22..0c53ab941 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -644,6 +644,41 @@ public class GeneralWorkflowIT extends BaseIT {\n         Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n+    @Test\n+    public void testTopicAfterRefresh() throws ApiException {\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowsApi, \"DockstoreTestUser2/hello-dockstore-workflow\", \"testname\", DescriptorLanguage.CWL.toString(),\n+            SourceControl.GITHUB, \"/Dockstore.cwl\", false);\n+\n+        // confirm the default workflow topic settings\n+        final String topicAutomatic = workflow.getTopicAutomatic();\n+        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        Assert.assertEquals(null, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+\n+        // set the automatic topic to a garbage string, change the manual topic, and select it\n+        final String topicManual = \"a user-specified manual topic!\";\n+        final String garbage = \"fooooo\";\n+        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+\n+        // confirm the new topic settings\n+        workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n+        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+\n+        // refresh the workflow\n+        Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n+\n+        // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n+        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+    }\n+\n     @Test\n     public void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n", "next_change": {"commit": "84c62e295859ccfe94749e8159b0d5b8874e260f", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 0c53ab941..cd2043c98 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -654,33 +502,34 @@ public class GeneralWorkflowIT extends BaseIT {\n \n         // confirm the default workflow topic settings\n         final String topicAutomatic = workflow.getTopicAutomatic();\n-        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n-        Assert.assertEquals(null, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+        assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        assertNull(workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n \n         // set the automatic topic to a garbage string, change the manual topic, and select it\n         final String topicManual = \"a user-specified manual topic!\";\n         final String garbage = \"fooooo\";\n-        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+        assertEquals(1,\n+            testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n \n         // confirm the new topic settings\n         workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n-        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+        assertEquals(garbage, workflow.getTopicAutomatic());\n+        assertEquals(topicManual, workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n \n         // refresh the workflow\n         Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n \n         // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n-        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n-        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+        assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n     }\n \n     @Test\n-    public void testWorkflowFreezingWithNoFiles() {\n+    void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "c843ddfc66e056afd7d16fbcc4fd0fa7bd6c63e9", "committedDate": "2020-12-09 15:44:35 -0500", "message": "Don't use changing ID as identifier (#3969)"}, {"oid": "41dd50e4c7b0271f6a09808a5dab939f3a74f73a", "committedDate": "2021-03-15 19:00:35 -0400", "message": "first set of test fixes for changes to test repos (#4105)"}, {"oid": "5e21b38d44454d31ecb99520ae355f2cd34e9fb6", "committedDate": "2021-03-16 12:02:16 -0400", "message": "Feature/license fix (#4110)"}, {"oid": "5f17ec18ec27152a0644002889515c0e939856f9", "committedDate": "2021-03-22 14:51:04 -0400", "message": "Feature/seab 2622/cromwell test failures (#4130)"}, {"oid": "6bbc0c2cded5b302c6bd8381c845421687762c2f", "committedDate": "2021-06-10 13:16:01 -0400", "message": "Check not frozen before saving DAG (#4289)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "216c546b643119a3cca20662e643bcb47b2d5b7e", "committedDate": "2021-07-16 11:08:02 -0400", "message": "Fix all necessary sonarcloud issues in workflow resource (#4356)"}, {"oid": "8b158006cda66c2f0c42d80f51445ee0cfeba66f", "committedDate": "2021-08-12 14:31:36 -0700", "message": "make endpoint backwards compatible with CLI (#4393)"}, {"oid": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "committedDate": "2021-11-30 14:13:14 -0500", "message": "Feature/seab 3656/topic sentence (#4593)"}, {"oid": "902126a7ae432db0b75381ca140ba537c44b7efc", "committedDate": "2021-12-09 13:17:47 -0800", "message": "Feature/regex backtrack fix (#4608)"}, {"oid": "7e5dd94b069c3dda108f546bd19468a6d2da2bae", "committedDate": "2021-12-20 09:43:23 -0800", "message": "remove garbage from version metadata table, add constraints to prevent reoccurence"}, {"oid": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Change to new topic db schema and make some adjustments"}, {"oid": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Add topic selection assertions"}, {"oid": "61add711e172f17e1c24a711f041c7a5f15e4081", "committedDate": "2022-01-26 10:41:43 -0800", "message": "update topicAutomatic for workflows on refresh and tools on refresh and creation"}, {"oid": "b9e4340d26e70dc1d28633591492390cf40909f8", "committedDate": "2022-03-04 10:18:59 -0800", "message": "snapshot github apptools"}, {"oid": "f4ca90dafd5bb6e4376da055bb522f2aa1c493fb", "committedDate": "2022-05-25 12:04:02 -0400", "message": "Feature/flynn/4268/seperate bitbucket tests (#4913)"}, {"oid": "ee317f390a46eb0de4915dcb30c22c1ad21ff0d9", "committedDate": "2022-07-27 14:51:46 -0400", "message": "Feature/restub snapshot (#5035)"}, {"oid": "dc2fb617eb90e37ea4fd300f8a8dd149f72c7935", "committedDate": "2022-08-15 10:01:40 -0400", "message": "Removing BitBucket Tokens from non-bitbucket tests (#5076)"}, {"oid": "672bf09125cd647e422c086010a029fdca485c9d", "committedDate": "2022-08-15 10:38:10 -0400", "message": "allow topic update on hosted (#5071)"}, {"oid": "7bb9cf8a801e46baa735fd849b167077a0bd130e", "committedDate": "2023-01-04 13:31:58 -0500", "message": "junit 5 with compatibility (legacy) layer (#5292)"}, {"oid": "84c62e295859ccfe94749e8159b0d5b8874e260f", "committedDate": "2023-01-09 10:38:05 -0500", "message": "convert dockstore-common, webservice, most integration tests to junit 5 (#5297)"}, {"oid": "9a5175dc41b7bd5ac07cf3f666a32fc8d20aaa33", "committedDate": "2023-02-09 09:52:54 -0800", "message": "reimplement MuteForSuccessfulTests equivalent for Junit 5"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzNzMyNQ==", "url": "https://github.com/dockstore/dockstore/pull/3839#discussion_r511037325", "body": "For future, you don't have to say \"it is \", the test runner will automatically say something like:\r\n\"expected: potato\"\r\n\"actual: tomato\"", "bodyText": "For future, you don't have to say \"it is \", the test runner will automatically say something like:\n\"expected: potato\"\n\"actual: tomato\"", "bodyHTML": "<p dir=\"auto\">For future, you don't have to say \"it is \", the test runner will automatically say something like:<br>\n\"expected: potato\"<br>\n\"actual: tomato\"</p>", "author": "garyluu", "createdAt": "2020-10-23T17:37:18Z", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java", "diffHunk": "@@ -590,6 +590,31 @@ public void testUpdateWorkflowPath() throws ApiException {\n         assertEquals(\"test workflow path should be the same as default workflow path, it is \" + testpath, \"/Dockstore.cwl\", testpath);\n     }\n \n+    @Test\n+    public void testAddingWorkflowForumUrl() throws ApiException {\n+        // Set up webservice\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        UsersApi usersApi = new UsersApi(webClient);\n+        usersApi.getUser();\n+\n+        Workflow workflow = workflowsApi\n+                .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n+                        \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n+                        \"/test.json\");\n+        \n+        //update the forumUrl to hello.com\n+        workflow.setForumUrl(\"hello.com\");\n+        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n+        workflowsApi.refresh(workflow.getId(), false);\n+\n+        //check the workflow's forumUrl is hello.com\n+        final String updatedForumUrl = testingPostgres\n+                .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n+        assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);", "originalCommit": "9766a69081ce0da74f0b74576559fed8b4b4a87d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex c908ef2ad..ce66687d3 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -591,28 +589,28 @@ public class GeneralWorkflowIT extends BaseIT {\n     }\n \n     @Test\n-    public void testAddingWorkflowForumUrl() throws ApiException {\n+    public void testAddingWorkflowForumUrlAndTopic() throws ApiException {\n         // Set up webservice\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n-        UsersApi usersApi = new UsersApi(webClient);\n-        usersApi.getUser();\n-\n         Workflow workflow = workflowsApi\n                 .manualRegister(SourceControl.GITHUB.getFriendlyName(), \"DockstoreTestUser2/test_lastmodified\", \"/Dockstore.cwl\",\n                         \"test-update-workflow\", DescriptorLanguage.CWL.toString(),\n                         \"/test.json\");\n         \n         //update the forumUrl to hello.com\n+        final String newTopic = \"newTopic\";\n         workflow.setForumUrl(\"hello.com\");\n-        workflowsApi.updateWorkflow(workflow.getId(), workflow);\n-        workflowsApi.refresh(workflow.getId(), false);\n+        workflow.setTopic(newTopic);\n+        Workflow updatedWorkflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n \n         //check the workflow's forumUrl is hello.com\n         final String updatedForumUrl = testingPostgres\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n+\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n     }\n \n     @Test\n", "next_change": {"commit": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex ce66687d3..77c856c9c 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -610,7 +636,7 @@ public class GeneralWorkflowIT extends BaseIT {\n                 .runSelectStatement(\"select forumurl from workflow where workflowname = 'test-update-workflow'\", String.class);\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n-        Assert.assertEquals(newTopic, updatedWorkflow.getTopic());\n+        Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n     }\n \n     @Test\n", "next_change": {"commit": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 77c856c9c..aa3a9dd22 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -637,6 +641,7 @@ public class GeneralWorkflowIT extends BaseIT {\n         assertEquals(\"forumUrl should be updated, it is \" + updatedForumUrl, \"hello.com\", updatedForumUrl);\n \n         Assert.assertEquals(newTopic, updatedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n     @Test\n", "next_change": {"commit": "61add711e172f17e1c24a711f041c7a5f15e4081", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex aa3a9dd22..0c53ab941 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -644,6 +644,41 @@ public class GeneralWorkflowIT extends BaseIT {\n         Assert.assertEquals(TopicSelectionEnum.MANUAL, updatedWorkflow.getTopicSelection());\n     }\n \n+    @Test\n+    public void testTopicAfterRefresh() throws ApiException {\n+        ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+\n+        Workflow workflow = manualRegisterAndPublish(workflowsApi, \"DockstoreTestUser2/hello-dockstore-workflow\", \"testname\", DescriptorLanguage.CWL.toString(),\n+            SourceControl.GITHUB, \"/Dockstore.cwl\", false);\n+\n+        // confirm the default workflow topic settings\n+        final String topicAutomatic = workflow.getTopicAutomatic();\n+        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        Assert.assertEquals(null, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+\n+        // set the automatic topic to a garbage string, change the manual topic, and select it\n+        final String topicManual = \"a user-specified manual topic!\";\n+        final String garbage = \"fooooo\";\n+        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+\n+        // confirm the new topic settings\n+        workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n+        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, workflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+\n+        // refresh the workflow\n+        Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n+\n+        // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n+        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+    }\n+\n     @Test\n     public void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n", "next_change": {"commit": "84c62e295859ccfe94749e8159b0d5b8874e260f", "changed_code": [{"header": "diff --git a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\nindex 0c53ab941..cd2043c98 100644\n--- a/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n+++ b/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralWorkflowIT.java\n", "chunk": "@@ -654,33 +502,34 @@ public class GeneralWorkflowIT extends BaseIT {\n \n         // confirm the default workflow topic settings\n         final String topicAutomatic = workflow.getTopicAutomatic();\n-        Assert.assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n-        Assert.assertEquals(null, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n+        assertEquals(\"test repo for CWL and WDL workflows\", topicAutomatic);\n+        assertNull(workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.AUTOMATIC, workflow.getTopicSelection());\n \n         // set the automatic topic to a garbage string, change the manual topic, and select it\n         final String topicManual = \"a user-specified manual topic!\";\n         final String garbage = \"fooooo\";\n-        Assert.assertEquals(1, testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n+        assertEquals(1,\n+            testingPostgres.runUpdateStatement(String.format(\"update workflow set topicAutomatic = '%s', topicManual = '%s', topicSelection = '%s' where id = %d\", garbage, topicManual, \"MANUAL\", workflow.getId())));\n \n         // confirm the new topic settings\n         workflow = workflowsApi.getWorkflow(workflow.getId(), null);\n-        Assert.assertEquals(garbage, workflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, workflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n+        assertEquals(garbage, workflow.getTopicAutomatic());\n+        assertEquals(topicManual, workflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, workflow.getTopicSelection());\n \n         // refresh the workflow\n         Workflow refreshedWorkflow = workflowsApi.refresh(workflow.getId(), false);\n \n         // make sure the automatic topic was refreshed, and that the manual topic and selection are the same\n-        Assert.assertEquals(workflow.getId(), refreshedWorkflow.getId());\n-        Assert.assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n-        Assert.assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n-        Assert.assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n+        assertEquals(workflow.getId(), refreshedWorkflow.getId());\n+        assertEquals(topicAutomatic, refreshedWorkflow.getTopicAutomatic());\n+        assertEquals(topicManual, refreshedWorkflow.getTopicManual());\n+        assertEquals(TopicSelectionEnum.MANUAL, refreshedWorkflow.getTopicSelection());\n     }\n \n     @Test\n-    public void testWorkflowFreezingWithNoFiles() {\n+    void testWorkflowFreezingWithNoFiles() {\n         ApiClient webClient = WorkflowIT.getWebClient(USER_2_USERNAME, testingPostgres);\n         WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n \n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d836384f3e6f993f4f30badebf62bda89d601d12", "message": "Merge commit", "committedDate": null}, {"oid": "c843ddfc66e056afd7d16fbcc4fd0fa7bd6c63e9", "committedDate": "2020-12-09 15:44:35 -0500", "message": "Don't use changing ID as identifier (#3969)"}, {"oid": "41dd50e4c7b0271f6a09808a5dab939f3a74f73a", "committedDate": "2021-03-15 19:00:35 -0400", "message": "first set of test fixes for changes to test repos (#4105)"}, {"oid": "5e21b38d44454d31ecb99520ae355f2cd34e9fb6", "committedDate": "2021-03-16 12:02:16 -0400", "message": "Feature/license fix (#4110)"}, {"oid": "5f17ec18ec27152a0644002889515c0e939856f9", "committedDate": "2021-03-22 14:51:04 -0400", "message": "Feature/seab 2622/cromwell test failures (#4130)"}, {"oid": "6bbc0c2cded5b302c6bd8381c845421687762c2f", "committedDate": "2021-06-10 13:16:01 -0400", "message": "Check not frozen before saving DAG (#4289)"}, {"oid": "d34af609a98da26d6af2fdf57ae6f6d4362a96df", "committedDate": "2021-06-24 09:52:54 -0400", "message": "Feature/sort imports (#4326)"}, {"oid": "1f14d0d4793c90a34cb8571a43ac0bf5758e8acf", "committedDate": "2021-06-30 16:36:13 -0700", "message": "Feature/3476/GitHub apps for tools (#4328)"}, {"oid": "216c546b643119a3cca20662e643bcb47b2d5b7e", "committedDate": "2021-07-16 11:08:02 -0400", "message": "Fix all necessary sonarcloud issues in workflow resource (#4356)"}, {"oid": "8b158006cda66c2f0c42d80f51445ee0cfeba66f", "committedDate": "2021-08-12 14:31:36 -0700", "message": "make endpoint backwards compatible with CLI (#4393)"}, {"oid": "3ec32ca9f14674d4911caf52ee222612d6f0df4d", "committedDate": "2021-11-30 14:13:14 -0500", "message": "Feature/seab 3656/topic sentence (#4593)"}, {"oid": "902126a7ae432db0b75381ca140ba537c44b7efc", "committedDate": "2021-12-09 13:17:47 -0800", "message": "Feature/regex backtrack fix (#4608)"}, {"oid": "7e5dd94b069c3dda108f546bd19468a6d2da2bae", "committedDate": "2021-12-20 09:43:23 -0800", "message": "remove garbage from version metadata table, add constraints to prevent reoccurence"}, {"oid": "8faaa71a59037bd7491be6ff72cb0bca8ac89298", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Change to new topic db schema and make some adjustments"}, {"oid": "bbed4786e15ceecefe72b8b8280be909c473b5b1", "committedDate": "2022-01-14 14:03:27 -0500", "message": "Add topic selection assertions"}, {"oid": "61add711e172f17e1c24a711f041c7a5f15e4081", "committedDate": "2022-01-26 10:41:43 -0800", "message": "update topicAutomatic for workflows on refresh and tools on refresh and creation"}, {"oid": "b9e4340d26e70dc1d28633591492390cf40909f8", "committedDate": "2022-03-04 10:18:59 -0800", "message": "snapshot github apptools"}, {"oid": "f4ca90dafd5bb6e4376da055bb522f2aa1c493fb", "committedDate": "2022-05-25 12:04:02 -0400", "message": "Feature/flynn/4268/seperate bitbucket tests (#4913)"}, {"oid": "ee317f390a46eb0de4915dcb30c22c1ad21ff0d9", "committedDate": "2022-07-27 14:51:46 -0400", "message": "Feature/restub snapshot (#5035)"}, {"oid": "dc2fb617eb90e37ea4fd300f8a8dd149f72c7935", "committedDate": "2022-08-15 10:01:40 -0400", "message": "Removing BitBucket Tokens from non-bitbucket tests (#5076)"}, {"oid": "672bf09125cd647e422c086010a029fdca485c9d", "committedDate": "2022-08-15 10:38:10 -0400", "message": "allow topic update on hosted (#5071)"}, {"oid": "7bb9cf8a801e46baa735fd849b167077a0bd130e", "committedDate": "2023-01-04 13:31:58 -0500", "message": "junit 5 with compatibility (legacy) layer (#5292)"}, {"oid": "84c62e295859ccfe94749e8159b0d5b8874e260f", "committedDate": "2023-01-09 10:38:05 -0500", "message": "convert dockstore-common, webservice, most integration tests to junit 5 (#5297)"}, {"oid": "9a5175dc41b7bd5ac07cf3f666a32fc8d20aaa33", "committedDate": "2023-02-09 09:52:54 -0800", "message": "reimplement MuteForSuccessfulTests equivalent for Junit 5"}]}, {"oid": "6abb422656f6bd0363fce595471842e578674a33", "url": "https://github.com/dockstore/dockstore/commit/6abb422656f6bd0363fce595471842e578674a33", "message": "removed extra test steps", "committedDate": "2020-10-23T18:22:53Z", "type": "commit"}]}