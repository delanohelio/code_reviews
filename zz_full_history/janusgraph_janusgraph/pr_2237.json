{"pr_number": 2237, "pr_title": "Issue 2236: Remove graph and traversal source from script engine bind\u2026", "pr_author": "twilmes", "pr_createdAt": "2020-10-13T17:08:55Z", "pr_url": "https://github.com/JanusGraph/janusgraph/pull/2237", "timeline": [{"oid": "e05802e8bfce4db87c9056266ce4ab6a384dde96", "url": "https://github.com/JanusGraph/janusgraph/commit/e05802e8bfce4db87c9056266ce4ab6a384dde96", "message": "Remove graph and traversal source from script engine bindings when the graph is dropped/removed.\n\nSigned-off-by: Ted Wilmes <ted.wilmes@experoinc.com>", "committedDate": "2020-10-13T17:54:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMTYwMw==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r504311603", "body": "might be a good idea to keep `_traversal` here and in line 249 below as a referenced constant.\r\nSeems to imply assumption of convention used in multiple places as a \"magic string\". In which case, changing in 1 place will break overall & dependent functions.\r\nAlso referenced [here](https://github.com/JanusGraph/janusgraph/blob/ac20052335506012e9b721b9897fef4b6100026e/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java#L267) in the master branch.", "bodyText": "might be a good idea to keep _traversal here and in line 249 below as a referenced constant.\nSeems to imply assumption of convention used in multiple places as a \"magic string\". In which case, changing in 1 place will break overall & dependent functions.\nAlso referenced here in the master branch.", "bodyHTML": "<p dir=\"auto\">might be a good idea to keep <code>_traversal</code> here and in line 249 below as a referenced constant.<br>\nSeems to imply assumption of convention used in multiple places as a \"magic string\". In which case, changing in 1 place will break overall &amp; dependent functions.<br>\nAlso referenced <a href=\"https://github.com/JanusGraph/janusgraph/blob/ac20052335506012e9b721b9897fef4b6100026e/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java#L267\">here</a> in the master branch.</p>", "author": "angadsalaria", "createdAt": "2020-10-13T23:16:41Z", "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "diffHunk": "@@ -139,6 +139,7 @@ public static JanusGraph close(String graphName) throws Exception {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(graphName + \"_traversal\");", "originalCommit": "e05802e8bfce4db87c9056266ce4ab6a384dde96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NTI3Ng==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521665276", "bodyText": "Agree with @angadsalaria .\nWe can also make a static method which converts graphName to Traversal Source name. Something like:\npublic static String toTraversalSourceName(String graphName){\n    return graphName + \"_traversal\";\n}\n\nand then use that method to convert graphName to traversalSourceName.\nI.e.:\njgm.removeTraversalSource(toTraversalSourceName(graphName));", "author": "porunov", "createdAt": "2020-11-11T22:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMTYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "14a9c734fbbb6a81fb5b2bafaab137f3fe2ecb7b", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex ae67c385a..06aced2f3 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -137,9 +137,8 @@ public class ConfiguredGraphFactory {\n      */\n     public static JanusGraph close(String graphName) throws Exception {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n-        Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n+        Preconditions.checkState(jgm != null, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n-        jgm.removeTraversalSource(graphName + \"_traversal\");\n         if (null != graph) graph.close();\n         return (JanusGraph) graph;\n     }\n", "next_change": {"commit": "cc2b3de63b072254f413ec433bcb6479c59474e7", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex 06aced2f3..f1ca0306e 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -137,7 +137,7 @@ public class ConfiguredGraphFactory {\n      */\n     public static JanusGraph close(String graphName) throws Exception {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n-        Preconditions.checkState(jgm != null, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n+        Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n         if (null != graph) graph.close();\n         return (JanusGraph) graph;\n", "next_change": {"commit": "49405b1fc8e29af42df2c6b6858e731720099fca", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex f1ca0306e..3ee31d81a 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -139,6 +139,7 @@ public class ConfiguredGraphFactory {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final Graph graph = jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(toTraversalSourceName(graphName));\n         if (null != graph) graph.close();\n         return (JanusGraph) graph;\n     }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2MjE3Mg==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521662172", "body": "As I understand, we should remove `null` bindings for the key as well. Thus, I don't think we need `if (bindings.get(key) != null)`. \r\nI.e. instead of:\r\n```\r\nif (bindings.get(key) != null) {\r\n    gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\r\n}\r\n```\r\nWe need just:\r\n```\r\nbindings.remove(key);\r\n```\r\nCorrect me if I'm wrong here", "bodyText": "As I understand, we should remove null bindings for the key as well. Thus, I don't think we need if (bindings.get(key) != null).\nI.e. instead of:\nif (bindings.get(key) != null) {\n    gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n}\n\nWe need just:\nbindings.remove(key);\n\nCorrect me if I'm wrong here", "bodyHTML": "<p dir=\"auto\">As I understand, we should remove <code>null</code> bindings for the key as well. Thus, I don't think we need <code>if (bindings.get(key) != null)</code>.<br>\nI.e. instead of:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (bindings.get(key) != null) {\n    gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n}\n\"><pre><code>if (bindings.get(key) != null) {\n    gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n}\n</code></pre></div>\n<p dir=\"auto\">We need just:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bindings.remove(key);\n\"><pre><code>bindings.remove(key);\n</code></pre></div>\n<p dir=\"auto\">Correct me if I'm wrong here</p>", "author": "porunov", "createdAt": "2020-11-11T21:55:45Z", "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -270,5 +274,13 @@ private void updateTraversalSource(String graphName, Graph graph, GremlinExecuto\n         graphManager.putTraversalSource(traversalName, traversalSource);\n     }\n \n+    private void removeBinding(String key) {\n+        if (null != gremlinExecutor) {\n+            final Bindings bindings = gremlinExecutor.getScriptEngineManager().getBindings();\n+            if (bindings.get(key) != null) {\n+                gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n+            }", "originalCommit": "e05802e8bfce4db87c9056266ce4ab6a384dde96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NjMyMQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r543146321", "bodyText": "Bindings.get(key) == null  is ambiguous. From the docs:\n\n[...] if this map contains a mapping from a key k to a value v such that (key==null ? k==null : key.equals(k)), then this method returns v; otherwise it returns null.\n\nTherefore !=null means that the binding contains a key which is also not null. However, I did not research how a null entry in a Binding arises and which meaning it has in the context of the GremlinExecutor and therefore I'm not sure if such an entry should remain here or not. But from my naive understanding, @porunov is right here.", "author": "rngcntr", "createdAt": "2020-12-15T08:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2MjE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "49405b1fc8e29af42df2c6b6858e731720099fca", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java b/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\nindex 5b3477cc3..4224f967d 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\n", "chunk": "@@ -267,19 +268,17 @@ public class JanusGraphManager implements GraphManager {\n \n     private void updateTraversalSource(String graphName, Graph graph, GremlinExecutor gremlinExecutor,\n                                        JanusGraphManager graphManager){\n-        gremlinExecutor.getScriptEngineManager().put(graphName, graph);\n-        String traversalName = graphName + \"_traversal\";\n+        final GremlinScriptEngineManager scriptEngineManager = gremlinExecutor.getScriptEngineManager();\n+        scriptEngineManager.put(graphName, graph);\n+        String traversalName = ConfiguredGraphFactory.toTraversalSourceName(graphName);\n         TraversalSource traversalSource = graph.traversal();\n-        gremlinExecutor.getScriptEngineManager().put(traversalName, traversalSource);\n+        scriptEngineManager.put(traversalName, traversalSource);\n         graphManager.putTraversalSource(traversalName, traversalSource);\n     }\n \n-    private void removeBinding(String key) {\n+    private void removeGremlinScriptEngineBinding(String key) {\n         if (null != gremlinExecutor) {\n-            final Bindings bindings = gremlinExecutor.getScriptEngineManager().getBindings();\n-            if (bindings.get(key) != null) {\n-                gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n-            }\n+            gremlinExecutor.getScriptEngineManager().getBindings().remove(key);\n         }\n     }\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NTY2OA==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521665668", "body": "Same here, if we would have a dedicated method to convert `graphName` to `traversalSourceName` we could change this line to:\r\n```\r\njgm.removeTraversalSource(toTraversalSourceName(graphName));\r\n```", "bodyText": "Same here, if we would have a dedicated method to convert graphName to traversalSourceName we could change this line to:\njgm.removeTraversalSource(toTraversalSourceName(graphName));", "bodyHTML": "<p dir=\"auto\">Same here, if we would have a dedicated method to convert <code>graphName</code> to <code>traversalSourceName</code> we could change this line to:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"jgm.removeTraversalSource(toTraversalSourceName(graphName));\n\"><pre><code>jgm.removeTraversalSource(toTraversalSourceName(graphName));\n</code></pre></div>", "author": "porunov", "createdAt": "2020-11-11T22:03:42Z", "path": "janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java", "diffHunk": "@@ -243,7 +244,9 @@ private static void removeGraphFromCache(final String graphName) {\n     private static void removeGraphFromCache(final JanusGraph graph) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n-        jgm.removeGraph(((StandardJanusGraph) graph).getGraphName());\n+        final String graphName = ((StandardJanusGraph) graph).getGraphName();\n+        jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(graphName + \"_traversal\");", "originalCommit": "e05802e8bfce4db87c9056266ce4ab6a384dde96", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "14a9c734fbbb6a81fb5b2bafaab137f3fe2ecb7b", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex ae67c385a..06aced2f3 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -243,10 +242,8 @@ public class ConfiguredGraphFactory {\n \n     private static void removeGraphFromCache(final JanusGraph graph) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n-        Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n-        final String graphName = ((StandardJanusGraph) graph).getGraphName();\n-        jgm.removeGraph(graphName);\n-        jgm.removeTraversalSource(graphName + \"_traversal\");\n+        Preconditions.checkState(jgm != null, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n+        jgm.removeGraph(((StandardJanusGraph) graph).getGraphName());\n         final ManagementSystem mgmt = (ManagementSystem) graph.openManagement();\n         mgmt.evictGraphFromCache();\n         mgmt.commit();\n", "next_change": {"commit": "cc2b3de63b072254f413ec433bcb6479c59474e7", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex 06aced2f3..f1ca0306e 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -242,7 +242,7 @@ public class ConfiguredGraphFactory {\n \n     private static void removeGraphFromCache(final JanusGraph graph) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n-        Preconditions.checkState(jgm != null, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n+        Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         jgm.removeGraph(((StandardJanusGraph) graph).getGraphName());\n         final ManagementSystem mgmt = (ManagementSystem) graph.openManagement();\n         mgmt.evictGraphFromCache();\n", "next_change": {"commit": "49405b1fc8e29af42df2c6b6858e731720099fca", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex f1ca0306e..3ee31d81a 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -243,7 +244,9 @@ public class ConfiguredGraphFactory {\n     private static void removeGraphFromCache(final JanusGraph graph) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n-        jgm.removeGraph(((StandardJanusGraph) graph).getGraphName());\n+        final String graphName = ((StandardJanusGraph) graph).getGraphName();\n+        jgm.removeGraph(graphName);\n+        jgm.removeTraversalSource(toTraversalSourceName(graphName));\n         final ManagementSystem mgmt = (ManagementSystem) graph.openManagement();\n         mgmt.evictGraphFromCache();\n         mgmt.commit();\n", "next_change": {"commit": "057f9e3429aa013841fb202d48de17afab7bb367", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\nindex 3ee31d81a..701bb47a0 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/core/ConfiguredGraphFactory.java\n", "chunk": "@@ -241,14 +289,14 @@ public class ConfiguredGraphFactory {\n         }\n     }\n \n-    private static void removeGraphFromCache(final JanusGraph graph) {\n+    private static void removeGraphFromCache(final JanusGraph graph, Callable<Boolean> evictionTrigger) {\n         final JanusGraphManager jgm = JanusGraphManagerUtility.getInstance();\n         Preconditions.checkNotNull(jgm, JANUS_GRAPH_MANAGER_EXPECTED_STATE_MSG);\n         final String graphName = ((StandardJanusGraph) graph).getGraphName();\n         jgm.removeGraph(graphName);\n         jgm.removeTraversalSource(toTraversalSourceName(graphName));\n         final ManagementSystem mgmt = (ManagementSystem) graph.openManagement();\n-        mgmt.evictGraphFromCache();\n+        mgmt.evictGraphFromCache(evictionTrigger);\n         mgmt.commit();\n     }\n \n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r521666240", "body": "Shouldn't we convert `gName` to `tsName`? I.e. `removeBinding(gName + \"_traversal\");`", "bodyText": "Shouldn't we convert gName to tsName? I.e. removeBinding(gName + \"_traversal\");", "bodyHTML": "<p dir=\"auto\">Shouldn't we convert <code>gName</code> to <code>tsName</code>? I.e. <code>removeBinding(gName + \"_traversal\");</code></p>", "author": "porunov", "createdAt": "2020-11-11T22:04:58Z", "path": "janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java", "diffHunk": "@@ -252,6 +254,8 @@ public Graph openGraph(String gName, Function<String, Graph> thunk) {\n     @Override\n     public Graph removeGraph(String gName) {\n         if (gName == null) return null;\n+        // Remove the graph from the script engine bindings so that closed/dropped graph instances do not leak\n+        removeBinding(gName);", "originalCommit": "e05802e8bfce4db87c9056266ce4ab6a384dde96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDUwMDgxOA==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r570500818", "bodyText": "In this case, we need to refer the graph itself so I believe it should be gName.", "author": "twilmes", "createdAt": "2021-02-04T19:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDUyMjUzNA==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r570522534", "bodyText": "You right, thanks!", "author": "porunov", "createdAt": "2021-02-04T20:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA=="}], "type": "inlineReview", "revised_code": {"commit": "49405b1fc8e29af42df2c6b6858e731720099fca", "changed_code": [{"header": "diff --git a/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java b/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\nindex 5b3477cc3..4224f967d 100644\n--- a/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\n+++ b/janusgraph-core/src/main/java/org/janusgraph/graphdb/management/JanusGraphManager.java\n", "chunk": "@@ -255,7 +256,7 @@ public class JanusGraphManager implements GraphManager {\n     public Graph removeGraph(String gName) {\n         if (gName == null) return null;\n         // Remove the graph from the script engine bindings so that closed/dropped graph instances do not leak\n-        removeBinding(gName);\n+        removeGremlinScriptEngineBinding(gName);\n         return graphs.remove(gName);\n     }\n \n", "next_change": null}]}}, {"oid": "1ec5f1f7f20bf903fccf87ace420e1677c7a9251", "url": "https://github.com/JanusGraph/janusgraph/commit/1ec5f1f7f20bf903fccf87ace420e1677c7a9251", "message": "Remove graph and traversal source from script engine bindings when the graph is dropped/removed.\n\nSigned-off-by: Ted Wilmes <ted.wilmes@experoinc.com>", "committedDate": "2021-02-04T19:46:27Z", "type": "forcePushed"}, {"oid": "49405b1fc8e29af42df2c6b6858e731720099fca", "url": "https://github.com/JanusGraph/janusgraph/commit/49405b1fc8e29af42df2c6b6858e731720099fca", "message": "Remove graph and traversal source from script engine bindings when the graph is dropped/removed.\n\nSigned-off-by: Ted Wilmes <ted.wilmes@experoinc.com>", "committedDate": "2021-02-04T19:48:17Z", "type": "commit"}, {"oid": "49405b1fc8e29af42df2c6b6858e731720099fca", "url": "https://github.com/JanusGraph/janusgraph/commit/49405b1fc8e29af42df2c6b6858e731720099fca", "message": "Remove graph and traversal source from script engine bindings when the graph is dropped/removed.\n\nSigned-off-by: Ted Wilmes <ted.wilmes@experoinc.com>", "committedDate": "2021-02-04T19:48:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQxMzY4Ng==", "url": "https://github.com/JanusGraph/janusgraph/pull/2237#discussion_r571413686", "body": "This test seems to be flaky. I encountered \"ConfiguredGraphFactoryTest.dropShouldCleanUpTraversalSourceAndBindings:312 expected: <true> but was: <false>\" twice and had to retry to make it pass.", "bodyText": "This test seems to be flaky. I encountered \"ConfiguredGraphFactoryTest.dropShouldCleanUpTraversalSourceAndBindings:312 expected:  but was: \" twice and had to retry to make it pass.", "bodyHTML": "<p dir=\"auto\">This test seems to be flaky. I encountered \"ConfiguredGraphFactoryTest.dropShouldCleanUpTraversalSourceAndBindings:312 expected:  but was: \" twice and had to retry to make it pass.</p>", "author": "li-boxuan", "createdAt": "2021-02-06T11:11:10Z", "path": "janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java", "diffHunk": "@@ -278,5 +286,54 @@ public void ensureCallingGraphCloseResultsInNewGraphReferenceOnNextCallToOpen()\n             ConfiguredGraphFactory.close(\"graph1\");\n         }\n     }\n+\n+    @Test\n+    public void dropShouldCleanUpTraversalSourceAndBindings() throws Exception {", "originalCommit": "49405b1fc8e29af42df2c6b6858e731720099fca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "057f9e3429aa013841fb202d48de17afab7bb367", "changed_code": [{"header": "diff --git a/janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java b/janusgraph-backend-testutils/src/main/java/org/janusgraph/core/AbstractConfiguredGraphFactoryTest.java\nsimilarity index 61%\nrename from janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java\nrename to janusgraph-backend-testutils/src/main/java/org/janusgraph/core/AbstractConfiguredGraphFactoryTest.java\nindex 0e6ebe7ee..d79eaf250 100644\n--- a/janusgraph-test/src/test/java/org/janusgraph/core/ConfiguredGraphFactoryTest.java\n+++ b/janusgraph-backend-testutils/src/main/java/org/janusgraph/core/AbstractConfiguredGraphFactoryTest.java\n", "chunk": "@@ -289,12 +330,12 @@ public class ConfiguredGraphFactoryTest {\n \n     @Test\n     public void dropShouldCleanUpTraversalSourceAndBindings() throws Exception {\n+        final MapConfiguration graphConfig = getGraphConfig();\n+        final String graphName = graphConfig.getString(GRAPH_NAME.toStringWithoutRoot());\n+        final String graphNameTraversal = graphName + \"_traversal\";\n+\n         try {\n-            final String graphName = \"graph1\";\n-            final Map<String, Object> map = new HashMap<>();\n-            map.put(STORAGE_BACKEND.toStringWithoutRoot(), \"inmemory\");\n-            map.put(GRAPH_NAME.toStringWithoutRoot(), graphName);\n-            ConfiguredGraphFactory.createConfiguration(new MapConfiguration(map));\n+            ConfiguredGraphFactory.createConfiguration(graphConfig);\n             final JanusGraphManager jgm = JanusGraphManager.getInstance();\n             final Bindings bindings = new SimpleBindings();\n             jgm.configureGremlinExecutor(mockGremlinExecutor(bindings));\n", "next_change": null}]}}]}