{"pr_number": 694, "pr_title": "Added datetime data type and basic functions for the conversion from string type to date and time types", "pr_author": "chloe-zh", "pr_createdAt": "2020-08-18T18:54:33Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694", "merge_commit": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "timeline": [{"oid": "9e4815a0f00aa730cb42224c0bfeff7f25449ea9", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9e4815a0f00aa730cb42224c0bfeff7f25449ea9", "message": "added datetime type, modified date, time, timestamp types, added tests", "committedDate": "2020-08-18T03:36:56Z", "type": "commit"}, {"oid": "cdce3c81dffd3b07cd8fb202db8f306c2063ef72", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cdce3c81dffd3b07cd8fb202db8f306c2063ef72", "message": "added test", "committedDate": "2020-08-18T18:49:28Z", "type": "commit"}, {"oid": "38f84d05c9a3a725f8c014ada737c4604d72ec5e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/38f84d05c9a3a725f8c014ada737c4604d72ec5e", "message": "Merge remote-tracking branch 'upstream/develop' into dt1", "committedDate": "2020-08-18T20:18:48Z", "type": "commit"}, {"oid": "808e38207e23f5c5f085b94a50f547f32ce51b5d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/808e38207e23f5c5f085b94a50f547f32ce51b5d", "message": "update", "committedDate": "2020-08-19T01:41:46Z", "type": "commit"}, {"oid": "d4fc48bc5d2dcacb21b56613984e3259f7f80278", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/d4fc48bc5d2dcacb21b56613984e3259f7f80278", "message": "update", "committedDate": "2020-08-19T01:51:37Z", "type": "commit"}, {"oid": "71ed2cf5c0e434c6e1058141d52cea6f3be12088", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/71ed2cf5c0e434c6e1058141d52cea6f3be12088", "message": "Added java doc", "committedDate": "2020-08-20T23:03:37Z", "type": "commit"}, {"oid": "72f91bdb3713800bdb2b8e1fc2261e546ed071f0", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/72f91bdb3713800bdb2b8e1fc2261e546ed071f0", "message": "Merge remote-tracking branch 'upstream/develop' into dt1", "committedDate": "2020-08-20T23:09:54Z", "type": "commit"}, {"oid": "832e2e320366cc655eb4b36724de783b0ae604e8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/832e2e320366cc655eb4b36724de783b0ae604e8", "message": "Merge remote-tracking branch 'upstream/develop' into dt1\n\n# Conflicts:\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValue.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\n#\tcore/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/type/ExprCoreType.java\n#\tcore/src/test/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtilsTest.java", "committedDate": "2020-08-20T23:15:25Z", "type": "commit"}, {"oid": "804d78afaef88efc780ab6925f4a992353623ef1", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/804d78afaef88efc780ab6925f4a992353623ef1", "message": "update", "committedDate": "2020-08-21T22:23:05Z", "type": "commit"}, {"oid": "f22e1fc40ecfc13bf628a8a6dc5ed6a0e9bfdc70", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/f22e1fc40ecfc13bf628a8a6dc5ed6a0e9bfdc70", "message": "update", "committedDate": "2020-08-22T02:17:36Z", "type": "commit"}, {"oid": "0535ae58f44f3c1d2e38bf87aceed10f2bd911cc", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/0535ae58f44f3c1d2e38bf87aceed10f2bd911cc", "message": "update", "committedDate": "2020-08-24T20:40:18Z", "type": "commit"}, {"oid": "aaf4a1a57308a5afccbc299318816ba3c19ec8ac", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/aaf4a1a57308a5afccbc299318816ba3c19ec8ac", "message": "update", "committedDate": "2020-08-24T20:44:31Z", "type": "commit"}, {"oid": "20315f03227a081c71e178f1379b6ee798348640", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/20315f03227a081c71e178f1379b6ee798348640", "message": "update", "committedDate": "2020-08-25T17:57:45Z", "type": "commit"}, {"oid": "ea7360e195b57c62261bbdb2ad62a5ca8bcadda8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ea7360e195b57c62261bbdb2ad62a5ca8bcadda8", "message": "update", "committedDate": "2020-08-25T18:17:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2NDg4NA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694#discussion_r476764884", "body": "suggest to use exprValue.string() in future to get rid of the static getStringValue method.", "bodyText": "suggest to use exprValue.string() in future to get rid of the static getStringValue method.", "bodyHTML": "<p dir=\"auto\">suggest to use exprValue.string() in future to get rid of the static getStringValue method.</p>", "author": "penghuo", "createdAt": "2020-08-25T21:43:11Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java", "diffHunk": "@@ -58,4 +135,30 @@ private FunctionResolver dayOfMonth() {\n   private ExprValue exprDayOfMonth(ExprValue date) {\n     return new ExprIntegerValue(getDateValue(date).getMonthValue());\n   }\n+\n+  /**\n+   * Time implementation for ExprValue.\n+   * @param exprValue ExprValue of Time type or String.\n+   * @return ExprValue.\n+   */\n+  private ExprValue exprTime(ExprValue exprValue) {\n+    if (exprValue instanceof ExprStringValue) {\n+      return new ExprTimeValue(getStringValue(exprValue));", "originalCommit": "ea7360e195b57c62261bbdb2ad62a5ca8bcadda8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "23ffebcf409bc10d460892e11fe22f8add0b9e1a", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\nindex 849eed4d..0e97d081 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n", "chunk": "@@ -145,7 +140,7 @@ public class DateTimeFunction {\n     if (exprValue instanceof ExprStringValue) {\n       return new ExprTimeValue(getStringValue(exprValue));\n     } else {\n-      return new ExprTimeValue(getTimeValue(exprValue));\n+      return new ExprTimeValue(exprValue.timeValue());\n     }\n   }\n \n", "next_change": {"commit": "25e3773195be7112c29900152a7630313478834a", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\nindex 0e97d081..ea4716e9 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n", "chunk": "@@ -138,7 +138,7 @@ public class DateTimeFunction {\n    */\n   private ExprValue exprTime(ExprValue exprValue) {\n     if (exprValue instanceof ExprStringValue) {\n-      return new ExprTimeValue(getStringValue(exprValue));\n+      return new ExprTimeValue(exprValue.stringValue());\n     } else {\n       return new ExprTimeValue(exprValue.timeValue());\n     }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\nindex 849eed4d..ea4716e9 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n", "chunk": "@@ -143,9 +138,9 @@ public class DateTimeFunction {\n    */\n   private ExprValue exprTime(ExprValue exprValue) {\n     if (exprValue instanceof ExprStringValue) {\n-      return new ExprTimeValue(getStringValue(exprValue));\n+      return new ExprTimeValue(exprValue.stringValue());\n     } else {\n-      return new ExprTimeValue(getTimeValue(exprValue));\n+      return new ExprTimeValue(exprValue.timeValue());\n     }\n   }\n \n", "next_change": {"commit": "9fa2b789a1ef23978752cbacbd233c9f306cc010", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\nindex ea4716e9..bddf5835 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/expression/datetime/DateTimeFunction.java\n", "chunk": "@@ -146,6 +589,7 @@ public class DateTimeFunction {\n \n   /**\n    * Timestamp implementation for ExprValue.\n+   *\n    * @param exprValue ExprValue of Timestamp type or String type.\n    * @return ExprValue.\n    */\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "message": "Merge commit", "committedDate": null}, {"oid": "ffc07feb18c5bb51daf49da6143cf8fd286b5f96", "committedDate": "2020-09-14 18:03:44 -0700", "message": "Support date, time, timestamp types in JDBC (#716)"}, {"oid": "78e697d033fdcd4311376e1f76aaec1624cefcb4", "committedDate": "2020-09-22 10:30:36 -0700", "message": "Support date and time function: adddate (#713)"}, {"oid": "9fa2b789a1ef23978752cbacbd233c9f306cc010", "committedDate": "2020-09-29 11:11:47 -0700", "message": "Support date and time functions: date_add, date_sub, day, dayname, dayofweek, dayofyear, from_days, hour, microsecond, minute, month, monthname, quarter, second, subdate, time_to_sec, to_days (#746)"}, {"oid": "d75b7f111bae63e7892dba37e650549ca5f9c9df", "committedDate": "2020-09-30 15:39:39 -0700", "message": "Support date and time function: week (#757)"}, {"oid": "f33c0e68eb7d5260d060b36b41794f3d840cf1c4", "committedDate": "2020-10-02 09:05:53 -0700", "message": "DATE_FORMAT function (#764)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc4MDYzOQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694#discussion_r476780639", "body": "could we get rid of the static method incase we already have the method impl in ExprValue.", "bodyText": "could we get rid of the static method incase we already have the method impl in ExprValue.", "bodyHTML": "<p dir=\"auto\">could we get rid of the static method incase we already have the method impl in ExprValue.</p>", "author": "penghuo", "createdAt": "2020-08-25T22:02:18Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java", "diffHunk": "@@ -166,12 +173,33 @@ public static Boolean getBooleanValue(ExprValue exprValue) {\n   }\n \n   /**\n-   * Get {@link ZonedDateTime} from ExprValue of Date type.\n+   * Get {@link LocalDate} from ExprValue of Date type.\n    */\n-  public static ZonedDateTime getDateValue(ExprValue exprValue) {\n+  public static LocalDate getDateValue(ExprValue exprValue) {\n     return exprValue.dateValue();\n   }\n \n+  /**\n+   * Get {@link LocalTime} from ExprValue of Time type.\n+   */\n+  public static LocalTime getTimeValue(ExprValue exprValue) {", "originalCommit": "ea7360e195b57c62261bbdb2ad62a5ca8bcadda8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg4MjE2Nw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694#discussion_r476882167", "bodyText": "yes, will remove all similar static methods and use the impl instead", "author": "chloe-zh", "createdAt": "2020-08-25T23:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc4MDYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "23ffebcf409bc10d460892e11fe22f8add0b9e1a", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\nindex 08718932..3fddbdde 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\n", "chunk": "@@ -171,36 +171,4 @@ public class ExprValueUtils {\n   public static Boolean getBooleanValue(ExprValue exprValue) {\n     return exprValue.booleanValue();\n   }\n-\n-  /**\n-   * Get {@link LocalDate} from ExprValue of Date type.\n-   */\n-  public static LocalDate getDateValue(ExprValue exprValue) {\n-    return exprValue.dateValue();\n-  }\n-\n-  /**\n-   * Get {@link LocalTime} from ExprValue of Time type.\n-   */\n-  public static LocalTime getTimeValue(ExprValue exprValue) {\n-    return exprValue.timeValue();\n-  }\n-\n-  /**\n-   * Get {@link LocalDateTime} from ExprValue of Datetime type.\n-   */\n-  public static LocalDateTime getDatetimeValue(ExprValue exprValue) {\n-    return exprValue.datetimeValue();\n-  }\n-\n-  /**\n-   * Get {@link Instant} from ExprValue of Timestamp type.\n-   */\n-  public static Instant getTimestampValue(ExprValue exprValue) {\n-    return exprValue.timestampValue();\n-  }\n-\n-  public static TemporalAmount getIntervalValue(ExprValue exprValue) {\n-    return exprValue.intervalValue();\n-  }\n }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\nindex 08718932..3fddbdde 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprValueUtils.java\n", "chunk": "@@ -171,36 +171,4 @@ public class ExprValueUtils {\n   public static Boolean getBooleanValue(ExprValue exprValue) {\n     return exprValue.booleanValue();\n   }\n-\n-  /**\n-   * Get {@link LocalDate} from ExprValue of Date type.\n-   */\n-  public static LocalDate getDateValue(ExprValue exprValue) {\n-    return exprValue.dateValue();\n-  }\n-\n-  /**\n-   * Get {@link LocalTime} from ExprValue of Time type.\n-   */\n-  public static LocalTime getTimeValue(ExprValue exprValue) {\n-    return exprValue.timeValue();\n-  }\n-\n-  /**\n-   * Get {@link LocalDateTime} from ExprValue of Datetime type.\n-   */\n-  public static LocalDateTime getDatetimeValue(ExprValue exprValue) {\n-    return exprValue.datetimeValue();\n-  }\n-\n-  /**\n-   * Get {@link Instant} from ExprValue of Timestamp type.\n-   */\n-  public static Instant getTimestampValue(ExprValue exprValue) {\n-    return exprValue.timestampValue();\n-  }\n-\n-  public static TemporalAmount getIntervalValue(ExprValue exprValue) {\n-    return exprValue.intervalValue();\n-  }\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "message": "Merge commit", "committedDate": null}, {"oid": "081882ce140666f577f1e6e7359fa2675a5269df", "committedDate": "2020-10-16 13:24:20 -0700", "message": "Add support of basic data types byte, short, binary and add data type testing (#780)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg1MjY4Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694#discussion_r476852683", "body": "Just wonder any reason not use lombok annotation for equal and hashCode?", "bodyText": "Just wonder any reason not use lombok annotation for equal and hashCode?", "bodyHTML": "<p dir=\"auto\">Just wonder any reason not use lombok annotation for equal and hashCode?</p>", "author": "dai-chen", "createdAt": "2020-08-25T23:25:18Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprDatetimeValue.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.data.model;\n+\n+import com.amazon.opendistroforelasticsearch.sql.data.type.ExprCoreType;\n+import com.amazon.opendistroforelasticsearch.sql.data.type.ExprType;\n+import com.amazon.opendistroforelasticsearch.sql.exception.SemanticCheckException;\n+import com.google.common.base.Objects;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import lombok.RequiredArgsConstructor;\n+\n+@RequiredArgsConstructor\n+public class ExprDatetimeValue extends AbstractExprValue {\n+  private static final DateTimeFormatter formatter = DateTimeFormatter\n+      .ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n+  private final LocalDateTime datetime;\n+\n+  /**\n+   * Constructor with datetime string as input.\n+   */\n+  public ExprDatetimeValue(String datetime) {\n+    try {\n+      this.datetime = LocalDateTime.parse(datetime, formatter);\n+    } catch (DateTimeParseException e) {\n+      throw new SemanticCheckException(String.format(\"datetime:%s in unsupported format, please \"\n+          + \"use yyyy-MM-dd HH:mm:ss\", datetime));\n+    }\n+  }\n+\n+  @Override\n+  public LocalDateTime datetimeValue() {\n+    return datetime;\n+  }\n+\n+  @Override\n+  public LocalDate dateValue() {\n+    return datetime.toLocalDate();\n+  }\n+\n+  @Override\n+  public LocalTime timeValue() {\n+    return datetime.toLocalTime();\n+  }\n+\n+  @Override\n+  public Instant timestampValue() {\n+    return ZonedDateTime.of(datetime, ZoneId.of(\"UTC\")).toInstant();\n+  }\n+\n+  @Override\n+  public int compare(ExprValue other) {\n+    return datetime.compareTo(other.datetimeValue());\n+  }\n+\n+  @Override\n+  public boolean equal(ExprValue other) {\n+    return datetime.equals(other.datetimeValue());\n+  }", "originalCommit": "ea7360e195b57c62261bbdb2ad62a5ca8bcadda8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkzMzQwNA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/694#discussion_r476933404", "bodyText": "for the equal method, because  it is an implementation of abstract method", "author": "chloe-zh", "createdAt": "2020-08-26T01:01:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg1MjY4Mw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "9fa2b789a1ef23978752cbacbd233c9f306cc010", "changed_code": [{"header": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprDatetimeValue.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprDatetimeValue.java\nindex e932e6ca..aad4e0ed 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprDatetimeValue.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/data/model/ExprDatetimeValue.java\n", "chunk": "@@ -80,7 +81,8 @@ public class ExprDatetimeValue extends AbstractExprValue {\n   @Override\n   public String value() {\n     return String.format(\"%s %s\", DateTimeFormatter.ISO_DATE.format(datetime),\n-        DateTimeFormatter.ISO_TIME.format(datetime));\n+        DateTimeFormatter.ISO_TIME.format((datetime.getNano() == 0)\n+            ? datetime.truncatedTo(ChronoUnit.SECONDS) : datetime));\n   }\n \n   @Override\n", "next_change": null}]}, "commits_in_main": [{"oid": "8c8ad611002fc87573625e5c8ed5c1c43101ff89", "message": "Merge commit", "committedDate": null}, {"oid": "9fa2b789a1ef23978752cbacbd233c9f306cc010", "committedDate": "2020-09-29 11:11:47 -0700", "message": "Support date and time functions: date_add, date_sub, day, dayname, dayofweek, dayofyear, from_days, hour, microsecond, minute, month, monthname, quarter, second, subdate, time_to_sec, to_days (#746)"}, {"oid": "47d50d2116b2ef6fc226be9abd2c43c0446f75c1", "committedDate": "2021-01-14 15:39:45 -0800", "message": "Allow Timestamp/Datetime values to use up to 6 digits of microsecond precision (#988)"}]}, {"oid": "23ffebcf409bc10d460892e11fe22f8add0b9e1a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/23ffebcf409bc10d460892e11fe22f8add0b9e1a", "message": "update", "committedDate": "2020-08-26T00:50:51Z", "type": "commit"}, {"oid": "25e3773195be7112c29900152a7630313478834a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/25e3773195be7112c29900152a7630313478834a", "message": "update", "committedDate": "2020-08-26T00:54:23Z", "type": "commit"}]}