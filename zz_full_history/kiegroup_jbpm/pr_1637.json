{"pr_number": 1637, "pr_title": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table", "pr_author": "elguardian", "pr_createdAt": "2020-04-21T06:48:28Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1637", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1NTQ0MA==", "url": "https://github.com/kiegroup/jbpm/pull/1637#discussion_r416455440", "body": "Remove or update the comment", "bodyText": "Remove or update the comment", "bodyHTML": "<p dir=\"auto\">Remove or update the comment</p>", "author": "gmunozfe", "createdAt": "2020-04-28T09:09:44Z", "path": "jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.runtime.manager.impl.error;\n+\n+import java.util.Random;\n+\n+import org.assertj.core.api.Assertions;\n+import org.jbpm.runtime.manager.impl.jpa.ExecutionErrorInfo;\n+import org.junit.After;\n+import org.junit.Test;\n+\n+public class ExecutionErrorInfoTest {\n+\n+    @After\n+    public void tearUp() {\n+        System.clearProperty(\"org.kie.jbpm.error.log.length\");\n+    }\n+    @Test\n+    public void testTrimmedErrorMessage() {\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        String randomString = randomString(300);\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(255);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString.substring(0, 255));\n+    }\n+\n+    @Test\n+    public void testTrimmedNotDefaultErrorMessage() {\n+        System.setProperty(\"org.kie.jbpm.error.log.length\", \"5\");\n+        String randomString = randomString(100);\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(5);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString.substring(0, 5));\n+    }\n+\n+    @Test\n+    public void testDefaultErrorMessage() {\n+        String randomString = randomString(100);\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(100);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString);\n+    }\n+\n+    private String randomString(int size) {\n+        char[] array = new char[size]; // length is bounded by 7", "originalCommit": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d5538b18f3e3f560f80d203dc517f138e6307279", "changed_code": [{"header": "diff --git a/jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java b/jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java\nindex 44ab7ed2b..9e51bd093 100644\n--- a/jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java\n+++ b/jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java\n", "chunk": "@@ -58,7 +58,7 @@ public class ExecutionErrorInfoTest {\n     }\n \n     private String randomString(int size) {\n-        char[] array = new char[size]; // length is bounded by 7\n+        char[] array = new char[size];\n         Random random = new Random();\n         for (int i = 0; i < array.length; i++) {\n             array[i] = (char) random.nextInt();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA==", "url": "https://github.com/kiegroup/jbpm/pull/1637#discussion_r416529218", "body": "Perhaps we may use _Apache Commons Lang_ **abbreviate** method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw _IllegalArgumentException_ if length is equal or less than 3 (should not be a common length to use). What do you think?\r\n\r\n```suggestion\r\n        super.setErrorMessage(StringUtils.abbreviate(errorMessage, ERROR_LOG_LENGTH));\r\n```", "bodyText": "Perhaps we may use Apache Commons Lang abbreviate method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw IllegalArgumentException if length is equal or less than 3 (should not be a common length to use). What do you think?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String trimmedErrorMessage = errorMessage;\n          \n          \n            \n                    if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {\n          \n          \n            \n                        trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);\n          \n          \n            \n                    }\n          \n          \n            \n                    super.setErrorMessage(trimmedErrorMessage);\n          \n          \n            \n                    super.setErrorMessage(StringUtils.abbreviate(errorMessage, ERROR_LOG_LENGTH));", "bodyHTML": "<p dir=\"auto\">Perhaps we may use <em>Apache Commons Lang</em> <strong>abbreviate</strong> method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw <em>IllegalArgumentException</em> if length is equal or less than 3 (should not be a common length to use). What do you think?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> trimmedErrorMessage <span class=\"pl-k\">=</span> errorMessage;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"111\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (trimmedErrorMessage <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> trimmedErrorMessage<span class=\"pl-k\">.</span>length() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">ERROR_LOG_LENGTH</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            trimmedErrorMessage <span class=\"pl-k\">=</span> trimmedErrorMessage<span class=\"pl-k\">.</span>substring(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">ERROR_LOG_LENGTH</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"113\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>setErrorMessage(trimmedErrorMessage);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>setErrorMessage(<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>abbreviate(errorMessage, <span class=\"pl-c1\">ERROR_LOG_LENGTH</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gmunozfe", "createdAt": "2020-04-28T11:12:08Z", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/jpa/ExecutionErrorInfo.java", "diffHunk": "@@ -103,6 +105,15 @@ public Long getActivityId() {\n         return super.getActivityId();\n     }\n \n+    @Override\n+    public void setErrorMessage(String errorMessage) {\n+        String trimmedErrorMessage = errorMessage;\n+        if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {\n+            trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);\n+        }\n+        super.setErrorMessage(trimmedErrorMessage);", "originalCommit": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2NDg1Ng==", "url": "https://github.com/kiegroup/jbpm/pull/1637#discussion_r417364856", "bodyText": "Assuming the exception is not equivalent. So In spite is good catch I would stick to this implementation rather than throw a potential runtime exception. (we would trade off one exception for another even if it is unlikely to happen)", "author": "elguardian", "createdAt": "2020-04-29T14:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ff351582cd2a7926bb1401ab2ced5496702ccbcf", "url": "https://github.com/kiegroup/jbpm/commit/ff351582cd2a7926bb1401ab2ced5496702ccbcf", "message": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table\n\ntrim string in execution error info so it does truncate when info does not fit the column", "committedDate": "2020-04-30T07:23:39Z", "type": "commit"}, {"oid": "ff351582cd2a7926bb1401ab2ced5496702ccbcf", "url": "https://github.com/kiegroup/jbpm/commit/ff351582cd2a7926bb1401ab2ced5496702ccbcf", "message": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table\n\ntrim string in execution error info so it does truncate when info does not fit the column", "committedDate": "2020-04-30T07:23:39Z", "type": "forcePushed"}]}