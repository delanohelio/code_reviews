{"pr_number": 4988, "pr_title": "FISH-661 MicroProfile JWT Auth 2.1 Upgrade", "pr_author": "MattGill98", "pr_createdAt": "2020-11-11T14:44:35Z", "pr_url": "https://github.com/payara/Payara/pull/4988", "timeline": [{"oid": "3b0c47c0388029fbdb63dbf15a50925a097dbdc1", "url": "https://github.com/payara/Payara/commit/3b0c47c0388029fbdb63dbf15a50925a097dbdc1", "message": "FISH-661 Upgrade MP JWT Auth to 1.2-RC2\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-11T14:33:18Z", "type": "commit"}, {"oid": "124218e1276b2ccdd207f6a47f8be95eaded434f", "url": "https://github.com/payara/Payara/commit/124218e1276b2ccdd207f6a47f8be95eaded434f", "message": "FISH-661 JWT Auth 1.2 Boolean Claim Conversion\n\nWhen injecting boolean claims, the injection failed as the JsonValue was\nunmodified. This change properly converts the value to a boolean.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-11T14:33:42Z", "type": "commit"}, {"oid": "7a96f7ec19580d828cc8c863e7c549039b4348ae", "url": "https://github.com/payara/Payara/commit/7a96f7ec19580d828cc8c863e7c549039b4348ae", "message": "FISH-661 MP JWT Auth 1.2 Add additional expiry check\n\nThe TCK now checks for a token with an invalid issue time, which wasn't\npreviously checked.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-11T14:33:58Z", "type": "commit"}, {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "url": "https://github.com/payara/Payara/commit/06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "message": "FISH-661 MP JWT Auth 1.2 Groups Not Required\n\nThe 'groups' claim is no longer required, so the validation no longer\nrequires it. A new TCK test 'callEchoNoGroups' checks that the principal\nis still set when @PermitAll endpoints are called. To fix this, I've\nenabled the JWT request filter even when this is found, but disabled\nmost of the logic.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-11T14:34:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0Njg1Ng==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521446856", "body": "Just double checking that the change from `FINEST` to `INFO` is intentional and not just from testing.", "bodyText": "Just double checking that the change from FINEST to INFO is intentional and not just from testing.", "bodyHTML": "<p dir=\"auto\">Just double checking that the change from <code>FINEST</code> to <code>INFO</code> is intentional and not just from testing.</p>", "author": "jbee", "createdAt": "2020-11-11T15:41:04Z", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -121,15 +131,16 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             JsonWebTokenImpl jsonWebToken\n                     = jwtTokenParser.verify(acceptedIssuer, publicKey.get());\n \n-            List<String> groups = new ArrayList<>(\n-                    jsonWebToken.getClaim(\"groups\"));\n+            Set<String> groups = new HashSet<>();\n+            Collection<String> groupClaims = jsonWebToken.getClaim(\"groups\");\n+            if (groupClaims != null) {\n+                groups.addAll(groupClaims);\n+            }\n \n-            return new CredentialValidationResult(\n-                    jsonWebToken,\n-                    new HashSet<>(groups));\n+            return new CredentialValidationResult(jsonWebToken, groups);\n \n         } catch (Exception e) {\n-            LOGGER.log(FINEST, \"Exception trying to parse JWT token.\", e);\n+            LOGGER.log(INFO, \"Exception trying to parse JWT token.\", e);", "originalCommit": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2MDMxNw==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521960317", "bodyText": "I wanted to ask for feedback on this actually. I did this because I noted that whenever a request was unsuccessful it wasn't clear to me why without debugging. This said, do you think this will be a little too spammy?", "author": "MattGill98", "createdAt": "2020-11-12T09:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0Njg1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5NDY1OA==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521994658", "bodyText": "I know very little about the context here - would it log with basically every request of a session that had this problem or is it more once when trying to login?", "author": "jbee", "createdAt": "2020-11-12T10:20:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0Njg1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMTg2OQ==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r522001869", "bodyText": "I think that it should only trigger when a JWT Token is provided, so I don't think it's too invasive. I just thought it would be beneficial to see why a token is being rejected", "author": "MattGill98", "createdAt": "2020-11-12T10:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0Njg1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0ODA3NQ==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521448075", "body": "Fairly certain you meant...\r\n```suggestion\r\n        this(request, response, null, permitAll);\r\n```", "bodyText": "Fairly certain you meant...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this(request, response, null, true);\n          \n          \n            \n                    this(request, response, null, permitAll);", "bodyHTML": "<p dir=\"auto\">Fairly certain you meant...</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">this</span>(request, response, <span class=\"pl-c1\">null</span>, <span class=\"pl-c1 x x-first x-last\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">this</span>(request, response, <span class=\"pl-c1\">null</span>, <span class=\"x x-first x-last\">permitAll</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jbee", "createdAt": "2020-11-11T15:42:48Z", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jaxrs/RolesAllowedRequestFilter.java", "diffHunk": "@@ -77,18 +77,38 @@\n     private final SecurityContext securityContext;\n \n     private final String[] rolesAllowed;\n+    private final boolean permitAll;\n+\n     private final HttpServletRequest request;\n     private final HttpServletResponse response;\n \n     RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed) {\n+        this(request, response, rolesAllowed, false);\n+    }\n+\n+    RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, boolean permitAll) {\n+        this(request, response, null, true);", "originalCommit": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk2NDU3NA==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521964574", "bodyText": "Good spot - it was an oversight due to several refactors. I've actually removed the variable entirely, have a look and see what you think", "author": "MattGill98", "createdAt": "2020-11-12T09:34:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0ODA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0OTU1Nw==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521449557", "body": "I guess XOR works but this is a logical test so I think a logic operator `!=` is more appropriate\r\n```suggestion\r\n        assert permitAll != (rolesAllowed != null);\r\n```", "bodyText": "I guess XOR works but this is a logical test so I think a logic operator != is more appropriate\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assert permitAll ^ rolesAllowed != null;\n          \n          \n            \n                    assert permitAll != (rolesAllowed != null);", "bodyHTML": "<p dir=\"auto\">I guess XOR works but this is a logical test so I think a logic operator <code>!=</code> is more appropriate</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">assert</span> permitAll <span class=\"pl-k x x-first\">^</span><span class=\"x x-last\"> </span>rolesAllowed <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">assert</span> permitAll <span class=\"pl-k x x-first\">!=</span><span class=\"x x-last\"> (</span>rolesAllowed <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span><span class=\"x x-first x-last\">)</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jbee", "createdAt": "2020-11-11T15:44:51Z", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jaxrs/RolesAllowedRequestFilter.java", "diffHunk": "@@ -77,18 +77,38 @@\n     private final SecurityContext securityContext;\n \n     private final String[] rolesAllowed;\n+    private final boolean permitAll;\n+\n     private final HttpServletRequest request;\n     private final HttpServletResponse response;\n \n     RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed) {\n+        this(request, response, rolesAllowed, false);\n+    }\n+\n+    RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, boolean permitAll) {\n+        this(request, response, null, true);\n+    }\n+\n+    private RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed, boolean permitAll) {\n         this.request = request;\n         this.response = response;\n         this.rolesAllowed = rolesAllowed;\n         this.securityContext = CDI.current().select(SecurityContext.class).get();\n+        this.permitAll = permitAll;\n+        // If permitAll, roles allowed should be null. Otherwise roles allowed should not be null\n+        assert permitAll ^ rolesAllowed != null;", "originalCommit": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUwMzE5MA==", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521503190", "body": "I see that file already contain `Class` comparison using `equals`.\r\nAs it is not reasonable to have two equal instances of a `Class` unless they are in fact identical I would generally suggest to not shy away from using the `==` and `!=` operators when working with `Class`es.", "bodyText": "I see that file already contain Class comparison using equals.\nAs it is not reasonable to have two equal instances of a Class unless they are in fact identical I would generally suggest to not shy away from using the == and != operators when working with Classes.", "bodyHTML": "<p dir=\"auto\">I see that file already contain <code>Class</code> comparison using <code>equals</code>.<br>\nAs it is not reasonable to have two equal instances of a <code>Class</code> unless they are in fact identical I would generally suggest to not shy away from using the <code>==</code> and <code>!=</code> operators when working with <code>Class</code>es.</p>", "author": "jbee", "createdAt": "2020-11-11T17:01:25Z", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jwt/JWTInjectableType.java", "diffHunk": "@@ -148,8 +148,7 @@ private void installCoreConverter() {\n         } else if (coreClass.equals(Long.class)) {\n             converter = e -> ((JsonNumber) e).longValue();\n         } else if (coreClass.equals(Boolean.class)) {\n-            // TODO\n-            converter = e -> e;\n+            converter = e -> convertToBoolean(e);", "originalCommit": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "094b4024bb11a0783049b8a94590983e4730289c", "url": "https://github.com/payara/Payara/commit/094b4024bb11a0783049b8a94590983e4730289c", "message": "FISH-661 Minor JWT Auth RequestFilter refactor\n\nThe requestfilter permitAll constructor had an unused variable so this\nchange removes it. The XOR was confusing, so it's been replaced with a\nlogical operator. Classes cannot be equal unless they are identical, so\nthe installCoreConverter has been made null safe by using ==.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-12T09:39:27Z", "type": "commit"}, {"oid": "094b4024bb11a0783049b8a94590983e4730289c", "url": "https://github.com/payara/Payara/commit/094b4024bb11a0783049b8a94590983e4730289c", "message": "FISH-661 Minor JWT Auth RequestFilter refactor\n\nThe requestfilter permitAll constructor had an unused variable so this\nchange removes it. The XOR was confusing, so it's been replaced with a\nlogical operator. Classes cannot be equal unless they are identical, so\nthe installCoreConverter has been made null safe by using ==.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>", "committedDate": "2020-11-12T09:39:27Z", "type": "forcePushed"}]}